1
 if (@rsi + @rax <= @rsi + @rax)  { test_statement(0x2273);  while  ($buffer & @rsi ^ @r8 | @rbx | @r9 $buffer & @rsi ^ @r8 | @rbx | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx << ~@r13 >> @rsp ^ @r11 >> 0y1000 @rbx << ~@r13 >> @rsp ^ @r11 >> 0y1000) { test_statement(0x2383);  /* This is a not closed comment }
$error$
$end$
2
 if (@rdx & $proc << ($proc) >> @rbp > @rdx & $proc << ($proc) >> @rbp)  { test_statement(0x55B); }
$error$
$end$
3
 if (0n14 + $buffer << @rbx ^ @rdx << (~@rsi) & 0n13 >> @rdi | $ip << @rdx | -@r10 ^ @rsp & @rsi ^ @rax | @rdx & 16 | ~23 ^ @rax <> 0y1000 + -@r13 >> $ip)  { test_statement(0x137); } else { test_statement(0xEBB);  for (; @r8 ^ @r12 | @r8((@r12) ^ 0x2;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip | $buffer ! $ip | $buffer) ; }
$error$
$end$
4
 if (@rdi + $proc ^ -(@rbp) >> @rdi & $proc & $ip & @r11(@rsp << @rax >> +@r9 >> $thread >> 0xE ^ @rax ^ 0n7 >> @r9)  { test_statement(0x168D);  /* This is a not closed comment }
$error$
$end$
5
 if (@rbp << @r12 >> -$thread << @rdx >> 0n13 >> $teb & $teb << @rbp >> @rbp)@rsp << 0x11 << 0y10001 >> $buffer << @r11 >> 0y10011 >> @r12 & @rdi << @r10 ^ @rbp & -$proc >> @rax & @rsi | @rbx & ~@r10 >> @rdi | @r8 & @r10 & (@r12) ^ @r12)  { test_statement(0xD1);  // /* This is a comment   /* This is a not closed comment  for (; (4) @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = 20 ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 <> @r11) ; }
$error$
$end$
6
 if (@r12 + @rsi >> @r8 <= @rdi + @rdx & @r9 << -@rbx >> $thread ^ @r10 << ~@r9 >> 6 >> 0n10 & 0 ^ @rdi >> @r8 & @r8 & @r9 | $buffer)  { test_statement(0x1E6A); } elsif (0y10000 << 0y110 & $thread & @r10 & @rbx | @rsp ^ @rbp((~$proc | @r8 >> @r8 ^ $proc & 0n13) { test_statement(0x89A); } elsif (@rsi >> @r11 < @rsi >> @r11) { test_statement(0x628); } elsif (0y1010 ^ 0x8 | @r12($ip & @rsp ^ $teb ^ $buffer) { test_statement(0x20C); } else { test_statement(0xC3C); ; }
$error$
$end$
7
 if (@r8 + @r12 | $thread ; @r8 + @r12 | $thread)  { test_statement(0x1869);  break; } elsif (@r10 >> @r12 & $thread >> (@rdi) & @rsi ^ -$buffer >> @r9 & 0n19 | 13 >> 23 ^ @r8 & @rbp ^ $buffer | @rax ^ @r13 ^ @r9 | -0y1100 ^ $proc | (@rsp) @r10 >> @r12 & $thread >> (@rdi) & @rsi ^ -$buffer >> @r9 & 0n19 | 13 >> 23 ^ @r8 & @rbp ^ $buffer | @rax ^ @r13 ^ @r9 | -0y1100 ^ $proc | (@rsp)) { test_statement(0xCDC); } else { test_statement(0xD70);  break;  /* This is a not closed comment }
$error$
$end$
8
 if (@rax + @r12 >> @rbx ^ $buffer << @rbx ^ @rdi & 0y10001 & (-@rax) ^ ~@rbp & @r8 >< @rax + @r12 >> @rbx ^ $buffer << @rbx ^ @rdi & 0y10001 & (-@rax) ^ ~@rbp & @r8)  { test_statement(0x13F0);  break;  while  (0x11 == 0x11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip >> @r10 & -@r9 >> -$proc & @r9 & $buffer <> $ip >> @r10 & -@r9 >> -$proc & @r9 & $buffer) { test_statement(0x183D);  /* This is a not closed comment } elsif (@rbp & @rax))@r13 >> @rsi ^ $teb & @rbx ^ $teb ^ ($proc) | 23 & @rdx ^ 0n13 ^ @r10 | @rax | @r8) { test_statement(0x1F70); @rax = ~@rdx ; } else { test_statement(0x176D); }
$error$
$end$
9
 if (@rbx & @rax << $proc & $teb & 11 ^ $buffer >> @rax >> $thread ^ 0x1 | -@r10 ^ ($thread) ^ 0y1101 & 10 ^ $ip ^ 0n10 < @rbx + $proc >> ~@r11 >> +@rbp >> @r9 & @rbx | -@r13 & 0y1010 ^ @rbx | -+$teb | @rbp | @r13)  { test_statement(0x1DEB); } elsif (~-@r10 << @r12 | @r9)~-@r10 << @r12 | @r9) { test_statement(0x890);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 21 ^ @rsp(($thread) ;  /* This is a not closed comment  /* This is a comment */ } else { test_statement(0x1677); }
$error$
$end$
10
 if (@r12 + @rdx << @r11 << @r11 >> $ip << $ip | -$proc >> $buffer >> $buffer(@rbp & 0y1001 << -@r12)  { test_statement(0x164);  for (val = 10; 0x0 < $proc ^ @rax | @rsp | 0n9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif ($proc << -@r8 & @rbx & @r11 & @rsp ^ $proc & @rdi & @rbx ^ @rbx & $buffer ; 0y1110 >> @rsp | @r12 >> -+@rsi & 3 ^ @rsp ^ $ip ^ 0xC) { test_statement(0x1798);  break;  This is a not opened comment */  This is a not opened comment */ } else { test_statement(0x354); }
$error$
$end$
11
 if (@rbp + @rbx | (@rsp) >> @r9 ^ @r9 & @rbx & @rbx(@rbp + @rbx | (@rsp) >> @r9 ^ @r9 & @rbx & @rbx)  { test_statement(0x13F5);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx | @r9 > @rbx | @rbp | $teb) ;  /* This is a comment */  /* This is a not closed comment } elsif (@r13 >> +-@rax | @rbx >> @rdx ^ ~@rsi ^ @rbp | $ip & 13 >= @r13 >> +-@rax | @rbx >> @rdx ^ ~@rsi ^ @rbp | $ip & 13) { test_statement(0x1E93); } elsif ($buffer & @r11 & ($proc) | @rdx & $thread ^ @rax | ~+0n11 | @rdx | @rdx)@r11 >> (@rbx) ^ $ip ^ @rdi | @r9 & @r8 ^ @r9 | @r12) { test_statement(0x94F); ; } else { test_statement(0x15E7); }
$error$
$end$
12
 if (@rax + $buffer << @rbp ^ $thread = @rdi + 0y10010 & @rsi << @rdx >> +@r10 & @r8 >> @r9 & @rdx & $thread | -@rdx >> @rsi >> @rsp & (~~@rdi) & +$buffer)  { test_statement(0x1652); } else { test_statement(0x246D); }
$error$
$end$
13
 if (@r12 + $buffer >> $buffer >> @r8 & @rbx >> 17 & ~+@rsi & 0x7(@r12 + $buffer >> $buffer >> @r8 & @rbx >> 17 & ~+@rsi & 0x7)  { test_statement(0xE28);  if (@r13(@r11 & -$teb ^ 0y110 ^ 0y1010 | @r11 ^ @r11)  { test_statement(0x1675); } @rax = 0n7 ^ $thread ^ @rbx | @rsp ^ 4 | $teb ;  // /* This is a comment  }
$error$
$end$
14
 if (@r10 >> $thread >> @rsp >> @r9 ^ -@r13 & @rbx >> @rsi ^ @r11 | @r13 & @r12 & @r13 & @rdi | @r12 >> $teb & @r13 & @r9 ^ @r8 ^ +@rsp ^ @rdx | +@r10 & @rbp ^ $ip | @rsp | @r12))@r10 >> $thread >> @rsp >> @r9 ^ -@r13 & @rbx >> @rsi ^ @r11 | @r13 & @r12 & @r13 & @rdi | @r12 >> $teb & @r13 & @r9 ^ @r8 ^ +@rsp ^ @rdx | +@r10 & @rbp ^ $ip | @rsp | @r12)  { test_statement(0x24AF); @rax = +@rsp >> @r11 & $proc | $teb ; } else { test_statement(0x235E); }
$error$
$end$
15
 if (@r10 << @rsi << 0y1010 >> 0x11 << $teb & @r12 << @r9 >> $teb | 0n12 << @r12 ^ @rsi & @r8 & @rdi ^ (-+$teb) ^ @rbx | @rdi >> @rsp(@r8 + $ip >> @r10 ^ @rdi & -$ip & $buffer ^ @r9 >> 14 ^ 0n12)  { test_statement(0x1760); } elsif (@rdi & @r9 >> @r13 & $teb & 0y10011 | @rax >> $proc ^ $thread & ~@rsp ^ +~+0x11 ; @rdi & @r9 >> @r13 & $teb & 0y10011 | @rax >> $proc ^ $thread & ~@rsp ^ +~+0x11) { test_statement(0x1CA9);  if ((@r11) | 0y1101 | @r13 <= (@r11) | 0y1101 | @r13)  { test_statement(0x2386); } elsif (@r8)@rdx | @r8) { test_statement(0x25F5); } elsif (~@rsi <> ~@rsi) { test_statement(0x1A6F); } else { test_statement(0xA25); }  break; } elsif (@r12 & $ip ^ 0y10 | @rdi | @r9 <= -$buffer & $teb & ~@r13 | -0xB & ~@rdi | 0x2 | $buffer | @rsp) { test_statement(0x18A0);  while  ((4))@rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif ($teb & +$ip >< @rdx & -4 ^ @rsp | 0n16) { test_statement(0x1A8A); } elsif ($buffer | @r10 > 0x11 ^ $teb) { test_statement(0x1171);  for (val = 10; @r9(@r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x8F6); @rax = @rax & @rax | 23 ^ @r12 ; }
$error$
$end$
16
 if ($buffer << @rbx << ~$proc >> @r13 << -@rax & @rdx << @rbp >> $ip >> 0x1 & $buffer > @rbp >> @rax << $thread ^ $teb & -4 >> @r9 | @r13 << @r13 >> ~0y1001 >> @rbp)  { test_statement(0x2069);  if (@rsi & $buffer != @rsi & $buffer)  { test_statement(0x30E); } elsif (@rdi ^ $teb | $thread | 14 @r9 ^ @rsp | +@r12 | @r10) { test_statement(0x1D25); } elsif (@r10 != @rbx | $ip) { test_statement(0x109); } elsif ($teb)$teb) { test_statement(0x2434); } } else { test_statement(0x18EA);  break;  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
17
 if ($teb ^ @rbp << $ip ^ @rbx & (@rdi) & -@rbx ^ ~$ip != $teb ^ @rbp << $ip ^ @rbx & (@rdi) & -@rbx ^ ~$ip)  { test_statement(0x1F6F); @rax = @r11 >> @r11 ^ @r10 & @rbx ; }
$error$
$end$
18
 if (0y1110 + +@rsp >> @r9 & $proc >> @rsp >> -(@rbx) & @rax >> $teb & @rbp & @r8 < @rbx << (@rbx) & @rdi << 0y10000 >> @r13)  { test_statement(0x15ED); } elsif (@rsp >> @r11 & @r9 | $thread & @rsi((@rsp >> @r11 & @r9 | $thread & @rsi) { test_statement(0x8F3); } elsif ($thread ^ @rdi ^ 0y10001 ^ 6 | @rdx(($thread & -@r13 & $proc ^ @r10 ^ $teb ^ ~@rax) { test_statement(0x698); }
$error$
$end$
19
 if ((@r12) + @rdi << @r8 << $buffer & $teb << 0n14 >> @rdx >> @r13 & $buffer >> @r8 & @rbp & $buffer ^ $proc << +$thread == $thread << 0xF << @rdx ^ @rbp)  { test_statement(0xE69); } elsif (@rbp & $proc & +@r8 & $buffer | @rdi & (@rbx) & @r12 | $buffer & 0n12 | 0y1111 <= $thread) { test_statement(0xD41);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (-$teb) | @r9 >< (-$teb) | @r9) ; }
$error$
$end$
20
 if (0xF + $proc >> @rbx >> $proc))0y100 + @r9 ^ $teb & -($thread) & 0n9)  { test_statement(0x1ADA); ; } else { test_statement(0x1CB4); }
$error$
$end$
21
 if ($buffer + @r13 << ~@r8 >> 1 << 0x1 & @rbp >> -$buffer >> @r13 ^ @rsp ^ +0xC & @rsi | @r13 >> 0y10 >> $proc | ~@rdi >> @rbx ^ ~0n3 | @r11 ^ @r13 | 0y1000 ^ ~$proc = $buffer + @r13 << ~@r8 >> 1 << 0x1 & @rbp >> -$buffer >> @r13 ^ @rsp ^ +0xC & @rsi | @r13 >> 0y10 >> $proc | ~@rdi >> @rbx ^ ~0n3 | @r11 ^ @r13 | 0y1000 ^ ~$proc)  { test_statement(0x78F);  // /* This is a comment   /* This is a not closed comment }
$error$
$end$
22
 if ($thread + ~0xC << @r13 << $proc >> $teb << +$proc >> 0y0 ^ @r11 << @r10 >> ($ip) & $ip >> $proc & 0x3 | $proc ^ $buffer >> 16 ^ @r10 & $teb ^ $ip ^ @r11)$thread + ~0xC << @r13 << $proc >> $teb << +$proc >> 0y0 ^ @r11 << @r10 >> ($ip) & $ip >> $proc & 0x3 | $proc ^ $buffer >> 16 ^ @r10 & $teb ^ $ip ^ @r11)  { test_statement(0x1A04); } elsif (@rsp & $buffer & @rsp ^ 0y1100 & $buffer | @r10 >> @rdi & @rbx ^ 0n19 ^ @r12 | @rbp & @rsi ^ @r12 | @rdi ^ -0x3((@rsp & $buffer & @rsp ^ 0y1100 & $buffer | @r10 >> @rdi & @rbx ^ 0n19 ^ @r12 | @rbp & @rsi ^ @r12 | @rdi ^ -0x3) { test_statement(0x976);  /* This is a comment */  // /* This is a comment   break; val = @r9 ; } elsif (@rsi ^ @r8 & @rdi ^ @r9 | @rdx ^ 0y10010 > @rsi ^ @r8 & @rdi ^ @r9 | @rdx ^ 0y10010) { test_statement(0x24FC);  /* This is a comment */ } else { test_statement(0x23D5);  This is a not opened comment */ }
$error$
$end$
23
 if (+@r13 + @rsp << @rsi << $ip | $thread >> @r10 >> -@r10 | @r13 | ($proc) & $buffer ^ $ip | @rsp | @rbx | $ip @r12 + 0n19 >> 0x10 << @rdx >> @r11 & @rdi << @rbx & $buffer & @r12 & ($thread) ^ @rsp << +20 ^ @rsp & @rsp & ~@rsi)  { test_statement(0x1748); } else { test_statement(0x4FA); }
$error$
$end$
24
 if (@rdi << @r12 <= @rdi << @r12)  { test_statement(0x10FD); } else { test_statement(0x1B5A);  /* This is a comment */ }
$error$
$end$
25
 if (@rax + @r8 >> $proc ^ @rdx << @r10 & @r13 | $proc << @r10 >> @r11 >> $teb & 10 ^ (@rdi) ^ @r9 & 0n17 ^ +~~@rdx == @rax + @r8 >> $proc ^ @rdx << @r10 & @r13 | $proc << @r10 >> @r11 >> $teb & 10 ^ (@rdi) ^ @r9 & 0n17 ^ +~~@rdx)  { test_statement(0x1E65);  for (val = 10; @r12 ^ @rsp = @rbp ^ ~@rbp ^ @rbp | @r10 ^ @r9 | 0y1100 | +@rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ((@rsp) >> @r13 ^ ($teb) ^ 0x4 ; $ip << ($buffer) & $teb >> (@r10)) { test_statement(0x512);  for (val = 10; @rdx | ~@r13 | @rsi >= -@r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } else { test_statement(0x176C); val = @rsi ^ ($thread) | ~$proc ; }
$error$
$end$
26
 if (@rsp << (@rdx) & +0x5 >> 22 ^ @rsi >> 0y101 & @r9 & 0xA & $buffer == @rsi + ~@rsp << @rdi << @rax & 0x10 << $proc & $ip ^ @rax & @r8 >> $proc ^ @r12)  { test_statement(0x15E6);  while  (+-@rdx & @r10 | @rbp ; +-@rdx & @r10 | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x13 << 0y1101 >> @r13 ^ @r11 >> $ip ^ @r11 & @r10 | 0n14 ^ $proc <= @r8 << @r12 >> $buffer >> $teb & 5 >> @r8) { test_statement(0xFE);  This is a not opened comment */  while  (0n4 | @r10 @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xD2B); @rax = $buffer & -$teb | @rdi ^ -$buffer | @rax ; }
$error$
$end$
27
 if ($proc + @rsi & @rbp >> @r9 & @rdx ^ $teb << @r10 = @rsi << @rdx >> @r11 >> @rbx >> 3 & $teb << $buffer >> @r8 >> @r8 & @rax & 2 ^ $proc >> @r13 >> $buffer & 0 >> $buffer ^ -(23) & @rsp & @r10)  { test_statement(0x21DD);  if (@rsp | @rbp | @rdx <> @r10 | @r9 ^ @r8 | 0xE)  { test_statement(0x254); } elsif (@rbp ^ @rsp | 0n19 | 0x8 >< @r8 ^ (@rdi) | 0n8 | 0xA) { test_statement(0x1CF0); } elsif ($teb | @r9 ; (@rsi)) { test_statement(0x15EC); } elsif ($ip <= 11) { test_statement(0x246); } elsif (0x3 == @r8) { test_statement(0x226D); } elsif ($buffer <= @r8) { test_statement(0x116D); } @rax = @rsp & @r8 | 0xE ;  for (val = 10; @rsi((@rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc ^ $thread ; $proc ^ $thread) { test_statement(0xC6D); } elsif (@r11 ^ @r8 & @rdx | @r13 & +0y1 | @r9 ^ $ip | $ip((@r11 ^ @r8 & @rdx | @r13 & +0y1 | @r9 ^ $ip | $ip) { test_statement(0x186E);  This is a not opened comment */ } elsif (0y1010 & @rdx ^ @rsp ^ -@r13 | @rbx ^ $buffer = @r13 & @rbx ^ +~@rsp | $buffer | 11) { test_statement(0xC07);  for (; @rsp <> 0x9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   if ($proc)0y101)  { test_statement(0x822); }  break;  /* This is a comment */ } else { test_statement(0x2197);  if (@rdi ^ 0y1011 | @rbp < @r11 ^ 3)  { test_statement(0xC0C); } elsif (@r12 | @r9 != @r12 | @r9) { test_statement(0x322); } elsif (@rax <> @rax) { test_statement(0x19E6); } elsif ($proc $proc) { test_statement(0x2237); } else { test_statement(0x21AC); } ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread)$thread) ;  for (@rax = @r8; $thread != $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; +$thread < -@r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax)@rsi) ;  /* This is a not closed comment }
$error$
$end$
28
 if (@rdi >> @rdi << @rbp & @r9 | $buffer << (@rbp) >> @r11 >> 0y1100 = @r8 << @rsp << $proc & @r8 << 0x3 ^ @rdx << @r13 >> -$thread ^ @rdx ^ 0y1110 & $ip | @rdx << $proc | +-@rsp >> @rsi ^ $ip & $teb | $ip & +@r10)  { test_statement(0x116D); } else { test_statement(0x14EE);  /* This is a comment */  /* This is a comment */ }
$error$
$end$
29
 if (@rdx + @rsi << +@rax << @rdx >> $thread >> $thread | @r10 << ~@rbx >> @rbp >> @rsi & (@rbp) ^ @rbp >> @r13 ^ 0y1010 & @r10 ^ ~~$buffer | @rsp & 0y101 | @rbp & $thread ^ $thread ^ 14 ! @rdx + @rsi << +@rax << @rdx >> $thread >> $thread | @r10 << ~@rbx >> @rbp >> @rsi & (@rbp) ^ @rbp >> @r13 ^ 0y1010 & @r10 ^ ~~$buffer | @rsp & 0y101 | @rbp & $thread ^ $thread ^ 14)  { test_statement(0x1513); } elsif (@r10 << @rsi ^ @rax >> 0n19 & $proc ^ $buffer ^ @rbp <> @rbp << 12 & +@rbx & 23) { test_statement(0x11B4);  while  (@rdx ^ 0n17 >< $teb | 0x7)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (@rbp >> @r12 & @rax & @r13 | $teb & $proc >< $teb >> @r10 | @rdi & $proc ^ @r10 ^ 0xA | @r12 ^ $teb) { test_statement(0x665); } else { test_statement(0xB2);  /* This is a not closed comment  if (@rdi @rdi)  { test_statement(0x19E1); } else { test_statement(0x2644); }  // /* This is a comment  }
$error$
$end$
30
 if ($ip & 0xA << @r9 ^ @rsi << $thread >> @rdi >> (@rax) <> ~@rbp << $ip << $thread)  { test_statement(0x12C2); } elsif (@r8 ^ @rdi >> $ip ^ @r10 & $thread | @rbx >> @r11 | ++0x5 & 17 | 3 <= @rax >> $thread >> @rbp & @rdx >> $thread | ~@r9 | 7 & @r8 ^ -$teb) { test_statement(0x751);  break;  // /* This is a comment  } elsif ($teb | @rax & $proc | @rax ; +@r8 >> 0y10 & @r13 ^ @rax | $teb & @rbp ^ @r13 ^ @r13 | $buffer) { test_statement(0x57B); } elsif (@r8(($ip ^ @r8 ^ 0xB) { test_statement(0xAC2); }
$error$
$end$
31
 if (0xE + 0n17 << $teb >> $ip >> @rax >> @rbp | @rdx >> @r13 >> 0x1 ^ @r11 >> @r9(0xE + 0n17 << $teb >> $ip >> @rax >> @rbp | @rdx >> @r13 >> 0x1 ^ @r11 >> @r9)  { test_statement(0xB40);  This is a not opened comment */ } elsif (~0x7 << (@rdx) >> $buffer ^ 0y10001 & $buffer & @r13((0x0 << $thread & $proc ^ 0x5 & $ip & 0y1000 ^ @r13 ^ $buffer | -@r12 | $teb & @r10 ^ @rdx ^ @r11 | @r13 | @r13) { test_statement(0x1C61); } else { test_statement(0x24AD); }
$error$
$end$
32
 if ($ip + @rdx << $proc >> @rsp << $proc ^ @r10 << @r13 ^ @r11 & $thread | ~@rdi < $ip + @rdx << $proc >> @rsp << $proc ^ @r10 << @r13 ^ @r11 & $thread | ~@rdi)  { test_statement(0x1746); }
$error$
$end$
33
 if ($ip + @rsp << ~@r12 | +@rdi << (@r13) & $buffer ^ @rdx >> 0y1100 & @rdi | 0n2 & @r10 >= $ip + @rsp << ~@r12 | +@rdi << (@r13) & $buffer ^ @rdx >> 0y1100 & @rdi | 0n2 & @r10)  { test_statement(0x2443);  if (@rbx >= $thread)  { test_statement(0x1B61); } elsif (~-$teb ^ $proc((@r12 | @r12) { test_statement(0x21A); } elsif ($ip <= $ip) { test_statement(0x1D97); } else { test_statement(0x14AA); } } elsif (@rsp << @rax >> @rax >= @rax << @r8 & $proc >> $thread | @r11 ^ 16 & 3 | $buffer | $proc | 0xB | @r10) { test_statement(0x3BF); } elsif (0xE >> @rdx ^ @rdx & @r9 ^ @rdx ^ @rdx | -@rbp >= 11 >> @r10 & ~0xD | $buffer) { test_statement(0x1C6E); } else { test_statement(0xF2D);  /* This is a comment */ }
$error$
$end$
34
 if (@r9 << @r10 >> @rdx & @r8 << 17 >> @r13 & @r11 & @rbx & @r12 ^ -0n18 >> -$teb | $ip << @rbx >> @r11 >> $thread ^ @rbx & $thread | $buffer >> @r10 ^ $buffer ; 0n14 << @rdx << $proc >> 5 << @rsp ^ 0n19 >> @rsp >> $buffer ^ @r11 | $thread ^ 15 >> @rbp & 0y110 & @rbx ^ +@r12 | @rdx)  { test_statement(0xFA4);  // /* This is a comment   for (val = -$ip; @rdx | @rdi | @rax = @rdx ^ +@r10 | @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc | @r13 <> $ip) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x3 0x3) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi @rdi) ;  if (@r13((@r13)  { test_statement(0x23EC); }  for (; $teb(6;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xDE1);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +0n11 | @r10 | @rbx >= @rax ^ @rsp) ;  if (@rsi >< @rbp)  { test_statement(0xBAA); } elsif (@rbx != (@r9)) { test_statement(0xA59); }  This is a not opened comment */ }
$error$
$end$
35
 if (@rbp >> 0y100 >> @r8 >> @r10 & -0n8 << $teb | @rdi & -@rdi | @r8 >> -@r8 & @r13 | 0y111 & @r10 | @r12 ^ @rbp < @r13 + @rdi ^ +@rbx >> $buffer & -@r12 ^ 0n18 >> 0y111 & $buffer ^ ((@rsp)) & +@rsp)  { test_statement(0xAC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip | $thread ^ -@rsi | (0y110) ! $proc & -@r10) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1010 ^ ~+0y11 <= 0y0) ; } else { test_statement(0x24F8); }
$error$
$end$
36
 if (0xD >> @rax << @rsi >> $ip | (0y10) << @r11 >> @rdi & 0y1101 ^ $proc >> (@rsp) == 0xD >> @rax << @rsi >> $ip | (0y10) << @r11 >> @rdi & 0y1101 ^ $proc >> (@rsp))  { test_statement(0x1B4F); }
$error$
$end$
37
 if (~@rbx + @r9 << @r9 >> +22 << @rsp >> +@rdx & @rsi >> @rbx >> @rdi & (-$teb) & 0xE & $teb ^ @rsi >> 0n12 ^ $ip | @rdx << @rbx & @r10 ^ 20 >> $proc & @r13 | @r13 & @r12 ^ $teb & -@r9(@rdi + @rdi << +$ip << 21 & $thread << @r12 & ~$thread >> @r13 & $ip)  { test_statement(0x1E12);  This is a not opened comment */ } elsif (@r9 << @r12 >> 0x4 | $proc >> +@r13 & @r10 & $thread | 0n15 & $teb ! @rax << @r9 >> @r9 >> (0x6) & $proc ^ @r12 >> 0y1110 & 0n12 ^ $proc & (@rbx) ^ @rsi ^ @rdx | @rdi >> @r13 ^ @r12 & $thread ^ @rdx) { test_statement(0xC7E);  This is a not opened comment */ } elsif ($proc & @r9 & 0n14 > $proc & @r9 & 0n14) { test_statement(0x19A5); } else { test_statement(0x1B96);  /* This is a not closed comment }
$error$
$end$
38
 if (0x11 + @r8 << @rbx >> @r12 >> @r12 & @r9 | -0y10001 & @r10 ^ +@r9 & ~@rsi ^ @rsi & $buffer +14 + @rax << $thread << -@r9 & 0xB ^ @rsi << @rbp | @rsp ^ $thread >> @rbx ^ ~@rsi & @r12 ^ @rsi)  { test_statement(0x1E5E); ;  /* This is a comment */  /* This is a comment */ ; }
$error$
$end$
39
 if (0xF << +@r12 << @r10 >> @r8 >> $proc & 0n19 << @rsp >> +@rbp & @rbx >> (4) & @r9 | 0x6 >> @r12 >> -0x9 & @r13 >> @r11 | 0y10 | ~@rax = @r13 + +@rdi << @r10 & $teb & @r12 >> @r12 | $teb & $proc & ~@r8 & @rax ^ @rbx >> ~~0y10000 | 0xF >> $teb)  { test_statement(0x11E8); } elsif (~@rbp ^ 0x10 >> $thread | 0y110 >> 0n9)~@rbp ^ 0x10 >> $thread | 0y110 >> 0n9) { test_statement(0x3A9);  // /* This is a comment  } elsif (@rsp >> 0n6 & $proc >= @r12 >> @r10 & @rbx) { test_statement(0x13F8); } elsif ($thread & ~0 | $ip | ~@r8 | @rdx < $thread | -(@r11) ^ ~@r13) { test_statement(0x1717);  break; } else { test_statement(0x52E);  break;  while  (@r13 | (@rdx) >< -$thread | 0x6)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   break;  // /* This is a comment  }
$error$
$end$
40
 if (@r9 + ~0y1001 << @r13 << @r12 >> @rbp = @rax + @r8 >> @r10 << @rsi & @r12 ^ @r13 << $teb ^ @r13 & @rsp & -@rax | @r13 >> 16 >> $buffer ^ @rdi >> 0n13 ^ @r13 & @rbx)  { test_statement(0x8AD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 & @rbx ^ +@r10 == @r9 & @rbx ^ +@r10) ;  if (@rdi($thread)  { test_statement(0xD0C); } elsif (@r8 | 0n12 == @r8 | 0n12) { test_statement(0x1258); } elsif (@r12 < @r10) { test_statement(0x223D); } else { test_statement(0x21FF); } } else { test_statement(0x769);  while  ($thread ^ 0n18(($buffer ^ 0n11 | $ip | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
41
 if (@r13 << @rbx & @rsp << $buffer ; @r12 << @r11 << @r13 & @r9 << $teb >> @rdx >> +$ip & @rbx ^ @r13 >> 1 & $proc ^ $proc & $proc ^ @r8 & 0x11 ^ @rbx ^ (@rsp))  { test_statement(0x1845);  for (val = 10; @rsp ^ (@rbp) ^ @rsp <> @rsp ^ (@rbp) ^ @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
42
 if (@r10 + ~@rbx >> @rdx & @r8 << @r9 >< @rbp >> @rdi ^ @rdx << 0y1011 & @rax ^ @r10 >> $buffer & 23 ^ @r12 & 0y10000 | @r12 & +@rsp)  { test_statement(0x63F); } elsif ($proc << @r9 & 0y1001 | @rdi >> @r9 ^ @r12 | ~0y1111 ^ @r8 | 16 ^ $proc >= $proc << @r9 & 0y1001 | @rdi >> @r9 ^ @r12 | ~0y1111 ^ @r8 | 16 ^ $proc) { test_statement(0x1B70);  for (@rax = $buffer; @r10((@r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx & +@rax & @r13 ^ @rsp & $thread ^ 13 ^ $buffer | $teb >< @rbp ^ @r8 & @r9 | 0x4 & $thread | 0n15 ^ -@rdx) { test_statement(0x1170); } else { test_statement(0x61D);  break; }
$error$
$end$
43
 if (6 + @rbp << $proc << $proc >> @r13 | @rsi >> 13 >> @r8 & @r8 > 0y100 + 0n3 << @r13 ^ @rsi >> @rbp & $thread)  { test_statement(0x768); } else { test_statement(0x382); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0xE < @r12 | @rsi) ; }
$error$
$end$
44
 if (~$proc + @rsp << @r12 >> 0x9 >> $teb >> ~@rbp & @r13 >> $buffer >> $thread >= @rbx + @r8 << 0n6 ^ @r13 << $thread >> 0n8 >> @r11 | -@r12 >> $ip >> @r10 & 0y1110 >> $teb & 0y110 & @r8)  { test_statement(0x190F); } elsif (@rbx ^ $thread | 1 >> $proc ; @rbx ^ $thread | 1 >> $proc) { test_statement(0x11D4); } elsif (+@rax & $ip & 23 ^ @rsp & @rsp ^ ~(13) >= +@rax & $ip & 23 ^ @rsp & @rsp ^ ~(13)) { test_statement(0x1ECB); } elsif (0x8 & 0y1 ^ $thread ^ @rsp | @r12 ^ @r12 > 0x8 & 0y1 ^ $thread ^ @rsp | @r12 ^ @r12) { test_statement(0x193C); } elsif ($buffer | $proc | ~@r13 >= (1)) { test_statement(0x212B); } elsif (@rbx(($ip | @rdx) { test_statement(0xAE5);  This is a not opened comment */ val = @rbp ;  break; } else { test_statement(0x23B8);  /* This is a not closed comment val = $buffer ^ $proc | @r11 ; }
$error$
$end$
45
 if ($thread >> @rbx << $ip >> @r10 >< @r10 << $ip & ((0n11)) << @rax & @rbx >> ~@rdi)  { test_statement(0x245A); }
$error$
$end$
46
 if (5 << $buffer & @rax << 15 >> @r9 & ~$ip ^ @rsi << @rdi ^ @r12 >> @rdx ^ 0n0))@rsp + $buffer << @rbx & +23 << $teb >> $thread >> 0x10 & 14 & @rsi & @rsp)  { test_statement(0x19E0); } elsif (@rdi != $ip << @r12 | 0y1001 >> @rax & 0y100 & @rdi ^ @rsi) { test_statement(0x5B7); } elsif (@rdx & @rsi ^ 0y1111 & $proc ^ $teb ^ (0n10) | $buffer & @r13 ^ @r11 ^ ~@rax | $teb | $ip | @rsp @r9 >> $ip ^ +$thread ^ @r9 | ~@rdi & 0xD) { test_statement(0x1440);  if ($thread | @rdi <> 0x12)  { test_statement(0x120A); } else { test_statement(0xA25); } } elsif (@r11 ^ -@r10 ^ (@r8) | -@rbx | (0n3) @r11 ^ -@r10 ^ (@r8) | -@rbx | (0n3)) { test_statement(0x1EB3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ($proc) <> 20) ;  /* This is a comment */ } else { test_statement(0x24FB); }
$error$
$end$
47
 if ($buffer >> @rax >> @rbp & @rdx >> $buffer >> +0n4 & ++@rdi >> @r11 ^ $ip & $proc >> @rbx ^ 0n6 & @rdi & $thread ^ @rbx & $ip ^ @r13 ^ @r13 <= 21)  { test_statement(0x1164); }
$error$
$end$
48
 if (0y1011 + $buffer << 0n6 << +@r13 > @r10 + $proc >> $thread | -$teb << $buffer & @rsi >> ~$thread)  { test_statement(0x1BE2);  while  (@rax ^ 0x0 ^ @rdx(@rdi ^ @rdx ^ 0x9 | @r13 | (@r10))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc = $proc) ; ; } else { test_statement(0xFF1); }
$error$
$end$
49
 if (@r12 << @r10 >> @r11 << $proc ^ @rax >> @rax & @r9 >> $proc | @r11 | 1 & $proc & $buffer ^ +@rsi ! $teb >> $teb)  { test_statement(0x11AE); } elsif (0xC << (@rsp) & @rdx >> @rbp & @rbx | @r10 >> @rbp ^ ~@rsp ^ @rsp | @rbp & @r12)@rbx >> @rdi >> $buffer & @r11 & @r8 & @r11 ^ $ip >> ($teb) & 20 & @r12 | @rax) { test_statement(0x22FD); }
$error$
$end$
50
 if (0n0 | @rsp << @rsi >> +(0n2) >> @r11 ^ @r8 & @rsi | 0n9 >> @rax | (@rbp) < ~@rbp + @rax << 0y11 << @rdi >> 0x13 << @rdi >> 0x0 & @rbx >> @r12 ^ @rbp >> @rbp >> 0y101 & $buffer | $teb << 10 & $thread & $proc & @rsp)  { test_statement(0x34B);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 ^ @rsp | @rsp | @rsi <> @rax ^ @r12 | @rbx) ; } elsif (@rbx & $ip >> 0y111 ^ @r10 ^ @rbp & $ip | @rbp >> 21 ^ @rbx ^ @rdi ^ (@rax) == 0xC ^ 7 >> $proc ^ 0y1101 | $ip >> @rdx) { test_statement(0x109E); val = @r13 ^ $buffer | @rbp ^ @r8 ;  for (@rax = @rax | (@r11); (@r10) | 22 >< $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread >> +@r8 ^ 11 | @r9 & @rbx | @rsi ^ 0y0 >= $thread >> +@r8 ^ 11 | @r9 & @rbx | @rsi ^ 0y0) { test_statement(0x14D1); } else { test_statement(0x805);  for (@rax = @rsi | @rax; @rdx | -$buffer >< @rdx | -$buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; $proc | 0y10011(($proc | 0y10011;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
51
 if (0x7 + @rdi << @rdi | 0y1000 ^ @rax >> 2 ^ 0x10 == $ip >> 0y10011 >> $teb >> @r11 | @rbx << 0n1 >> @rsp ^ @r10 >> @r10 & $thread | @rsi >> 1 | @rbx & @r9)  { test_statement(0xB9A); } elsif (0xA >> 0n6 >> @r8 & $thread >> @r12 ^ $thread <> +0n3 << $proc >> (0) & ~@r11 >> $proc ^ @r10 & @rdi & $proc ^ $proc & $thread ^ $ip | $thread & @rbx ^ @rsi ^ @r12 | @r9 & 0n3) { test_statement(0x1AD3); val = @r10 & @r8 ^ 0n8 | @r10 ^ -@r13 | ~0x12 | @rbp ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 | -@r8 = @r11 | -@r8) ;  for (; $buffer ; $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 ^ @r13 & $proc ^ 0y101 >= @r8 >> $buffer & $proc & @r12 | @rbp & @rsp ^ @rsp) { test_statement(0x17C6); }
$error$
$end$
52
 if (@r12 + $thread >> ~0x7 >> @r11 & $ip & +0n18 >> $teb <= @rsi + $ip | @rax & @rsi >> 0n19 ^ $teb & ~@rsi)  { test_statement(0x11F4);  // /* This is a comment  ; } elsif (@r11 >> -$proc >> @rbp((@r12 >> 7 >> 0x11 & 0y101 >> 0n19 ^ @r13 & @r9 & @r12 ^ $proc & @r11 | @r10 >> @rsp & 5 ^ $teb ^ -@rsi ^ $ip) { test_statement(0xC27);  if (@r11 ^ @rsp | (@rdx) ; @r13 ^ @rbx)  { test_statement(0x1CF4); } elsif (@rax | @rdi((@rax | @rdi) { test_statement(0x1534); } ;  break; }
$error$
$end$
53
 if ((@rdx) + 0y10011 >< @rax >> 0y10 << @r9)  { test_statement(0x23A4); @rax = $ip >> $buffer & @rdi ^ @rbx ^ @rbx ; } else { test_statement(0x1044); }
$error$
$end$
54
 if (@r8 + ~@r8 << -@rsp << @rdi >> 22 >> @rsi >> @r13 & 0y1100 << ~-@r12 ^ @rax << @rsp >> ~@rdi >> @rdi ^ ~@r12 ^ @r8 & @rdx ^ -@rsp | @r13 << @rbx >> @rdi >> 0n11 & @rbx >> 0y1011 & @rbp & @rdx(@rdi)  { test_statement(0xB1F);  for (val = 10; @r9 & ~@rdi ^ 10 >< @rbx & ~(@r13);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1293);  while  (16 ^ $thread | @rsi = 15 ^ @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
55
 if (@r12 + 0y1000 >> @r10 << @r11 & $teb << $thread >> @rdi < $proc << @rsp << @rsi >> $buffer >> @rdx >> @rsp ^ 0n18 >> @r13 >> @rdi ^ @r11 >> @rdx | 0y10000 & @rax | @r9 | $proc & $thread ^ @rdx | $buffer)  { test_statement(0x1B73);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi & @rbp(@rdi & @rbp) ; }
$error$
$end$
56
 if ($thread << 0x11 >> @rsp >> ($buffer) >> @rbx ^ 17 & @r10 >> 14 & (+@r10) | @r8 << @r8 & +@r9 & +@rdx ; $teb + 5 << $teb & @rax)  { test_statement(0xAC2); }
$error$
$end$
57
 if (0y111 + @r9 >> @r9 | $teb << @r11 >> @r9 ^ $teb & $proc ^ @r10 ^ @r10 ^ ($proc) | 0n17 >> @rsi ^ $proc)@rbx + @rsp << @rbp >> +@rax << $buffer >> ~@rsi >> $teb)  { test_statement(0x2066); }
$error$
$end$
58
 if (0x4 << ($thread) << @r10(0x4 << ($thread) << @r10)  { test_statement(0x76B); } elsif ($ip >> @rsp >> @rsi | @r13 ^ $thread ^ @rax >< $ip >> @rsp >> @rsi | @r13 ^ $thread ^ @rax) { test_statement(0x1CEB); } elsif (@r9 | $thread <= ~$teb >> ~@r8 ^ $proc | +@rax ^ +$teb ^ @r12 | 0n15) { test_statement(0xD13); ; }
$error$
$end$
59
 if ($ip + 0n12 >> $thread & @rdx << @rsp >> @r11 & @rdx >> @rax ^ @rdx >> @rdx >> $buffer ^ 0n9 & $proc ^ (@r8) & @rbx $ip + 0n12 >> $thread & @rdx << @rsp >> @r11 & @rdx >> @rax ^ @rdx >> @rdx >> $buffer ^ 0n9 & $proc ^ (@r8) & @rbx)  { test_statement(0xF9);  This is a not opened comment */  for (val = 10; ~@rdi ^ $ip <> @rdi ^ $proc | 21;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; ~$thread = ~$thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (+5))+5)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
60
 if (0x11 + $ip << @rdi ^ @r9 >> 12 >> 0x7 & (@rbp) >> $teb ^ @rbp >> $proc <> @r12 >> 0y110 << @rdi >> @rsi)  { test_statement(0xD8F); } elsif (@r9 << @r9 >> @r8 >> $teb | $ip >> @rsp ^ @r12))$teb & $ip & @r9 & ~@rax ^ 0y110 >> $ip ^ $teb & -+$proc ^ @r12) { test_statement(0xB91);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp | @r12))@rbp | @r12) ;  This is a not opened comment */  /* This is a not closed comment  This is a not opened comment */ } elsif (@rdi >> (21) ^ @r13 & $ip ^ @r12 ^ $thread | @r11 & @r9 | @r13 | @rdi | 0x2 >< 4) { test_statement(0x97B);  if ($ip > -$teb)  { test_statement(0xA67); } elsif (0y1100 != @r9) { test_statement(0x5C0); } } elsif (@rsp & @rbx >= $buffer) { test_statement(0x3CD); }
$error$
$end$
61
 if (@rsp << $buffer << $thread >> @r12 >> @rdi >> @rbx & @r10 ^ @r12 << @r11 & 0y10011 = $ip << @rsi & (@rdi) >> @rdx >> $proc & @rdi >> ~@rbx | -@r13 << @rax ^ @rdi & $proc)  { test_statement(0x92E);  while  (@rdx & -@r10 | @rsi((@rdx & -@r10 | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
62
 if (~0n6 + +0x10 >> ~@r9 << (@rbx) & (0n19)((@rbp | $thread >> 4 & @rdx >> 0y1 & 0y1100 & $proc ^ 0n6)  { test_statement(0x186); }
$error$
$end$
63
 if (0y10010 + @rsp << ~0n5 << @r8 >> @rdx << $proc ^ ~$buffer << ~$teb & @r12 & @rsi)$ip + @rdx << $buffer & $buffer & @rdx >> 0y1010 ^ +$buffer << @r9 >> @rsi & @rdi >> 0x4 & @rbp & @rbx)  { test_statement(0x1B97);  if (@rsi ^ @rax ^ $thread)~@r8 | 0x1 | @r8)  { test_statement(0x70E); } else { test_statement(0x21E4); } } else { test_statement(0x2544); }
$error$
$end$
64
 if (-@r12 + @r12 << @rax ^ @rdx << @r13 ^ 0xA ^ @r10 | @r8 >> @r9 >> @r12 | @r9 & @r12 & $proc ^ 0y110 ^ @rbx | 22 & @r10)-@r12 + @r12 << @rax ^ @rdx << @r13 ^ 0xA ^ @r10 | @r8 >> @r9 >> @r12 | @r9 & @r12 & $proc ^ 0y110 ^ @rbx | 22 & @r10)  { test_statement(0x1C0);  for (@rax = (0n2) & $buffer; 0x9 & +@rsi ^ ~(@rdi) ^ 0n13 | 0n19 ^ @r13 >< @r11 & 0x0 ^ @rbp ^ 0y1 | @r13 | @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  if ($thread | +0x9 ; 0n8)  { test_statement(0xAA5); } elsif (@r13 ; $buffer) { test_statement(0xE24); } } else { test_statement(0xF7F);  break; }
$error$
$end$
65
 if (@r8 + $ip >> @rsi & 2 << $proc | 0x10 ^ $teb >> @rbx ^ @rbx ; @r8 + $ip >> @rsi & 2 << $proc | 0x10 ^ $teb >> @rbx ^ @rbx)  { test_statement(0x10F0); } elsif (7 & 12 >> $thread & @rdi & @rdx ; -$buffer << @rsi & @r10 >> @rsp | @r8 >> 0x4 & @rdi) { test_statement(0x267D);  This is a not opened comment */  if (@r13 | ~-@rbx <> 0n4 | @rsp)  { test_statement(0xB72); } else { test_statement(0x3DE); }  if ((@r10) >< (@r10))  { test_statement(0xD2D); } }
$error$
$end$
66
 if (@r9 + @r13 | $thread << (@r12) >> @rax >> @r12 != 0x8 ^ @rbp << @r8 | 0n0 << $proc >> 0y1001 & @r11 | @rbp >> @r9)  { test_statement(0xF4B); ;  // /* This is a comment  } elsif ((@r12) >> $teb & 0y10010 < (@r12) >> $teb & 0y10010) { test_statement(0x1B76);  // /* This is a comment   for (val = 10; @r13 ! @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 >> $buffer ^ @rbp & $proc ^ $buffer ^ $proc)@rsp >> 0n16 & @r13 & $teb) { test_statement(0x751);  for (val = 10; @rax | $ip((@rax | $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
67
 if (@rdi + 0y0 << $proc << ~$ip >> @r9 << 0x5 >> $ip | 0x3 << ($buffer) & @rdi >> @r9 ; @rdx + @r11 << $buffer >> +$buffer << @rbp >> @r9 >> @r12 & $buffer << @rdi >> @rbx ^ ~(@r13) >> ($teb) >> @rbx & @rsp & 11 | $buffer & @r12)  { test_statement(0x21F1); ; } elsif (-@rbx << 13 >> @r12 >> 0n5)@r12 | @r9 >> @r13 ^ -~0x0 & $ip ^ -@rbx ^ @r8) { test_statement(0x52A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y110 | $buffer > $ip) ; } elsif (0n4 >> @r9 ^ (@r9) & @rdi ^ @rdi ^ $buffer ! @rbp ^ 12 ^ @rbx | @rbp & $thread) { test_statement(0x1AF9);  for (val = 10; 0 | @rsp >< 0 | @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @r8 == @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsi ^ @r10 ^ 5 <= @rax) { test_statement(0xC19); }
$error$
$end$
68
 if (@r11 + @r12 << @rdi << @r10 >> ~@rbx << +@r13 >> @rsi & @rbx << $ip((@rsi) & $thread << @r9 >> @rbp & 6 >> @rsp & 0y10 ^ 0y1 & $thread >> @r10)  { test_statement(0xF41); } else { test_statement(0x31E); }
$error$
$end$
69
 if (~@rdi + 0n18 >> @r11 ^ @r13 >> @rdi >> @rbx & @r8 & @rsp ^ $teb & @rdi & @r13(~@rdi + 0n18 >> @r11 ^ @r13 >> @rdi >> @rbx & @r8 & @rsp ^ $teb & @rdi & @r13)  { test_statement(0x1285);  /* This is a comment */ } elsif ((0y1101) << 0x5 | @r11 >> $buffer | @r9 | @rbx ^ $proc | 0y1000 ; (0y1101) << 0x5 | @r11 >> $buffer | @r9 | @rbx ^ $proc | 0y1000) { test_statement(0x256C); } else { test_statement(0x108F);  if (+@r12 < @r8 ^ $proc)  { test_statement(0x114E); } }
$error$
$end$
70
 if ($proc + @r9 >> ~@r11 >> @r13 >> 16 ^ $ip & @rsi >> @rsi & @r9 & 0n5 ^ @rax >> @r13 & $thread & @r13 ^ @r10 ^ @rsi ^ +@rbx = ~@r12 << $buffer ^ ~+0x1 ^ @rsp >> $buffer ^ @rdi ^ $buffer | @rdx << @rbp >> +@rsp ^ @r10 >> 0y0)  { test_statement(0x1A2D); }
$error$
$end$
71
 if (0xD & @rsp & @rsi | $thread << 0n3 >> $thread >> @rdi | 2 >> $thread & @r8 & $ip ^ @rsi | ~$buffer <= 0y111 >> @rdx << @r10 >> @rsp >> (@r8) ^ @r12 & @rsi >> 16 ^ $teb ^ @rsi ^ @r13 ^ $ip)  { test_statement(0x3FF); }
$error$
$end$
72
 if ($thread << +14 ^ $proc >> @rdx >> $teb & @r13 >> (@rsi) ^ @r12 | @r12 >> 0x10 >> $ip ^ (@r12) >> @r13 ^ @rbx & ~$thread < +@rsp + ~0x5 & $thread << $thread ^ 0n10 << @r11 ^ ~-@rax ^ @r8 & @r13)  { test_statement(0x23DF); } elsif (@rbx))-5 << $thread ^ -@rbx & @rsp & $teb ^ @r11 | @rax >> @rax & $buffer ^ @r11 & @rbp) { test_statement(0x881); @rax = @rbx & @rsi ^ $buffer | @r8 ^ @r9 ;  for (; $proc <> @rbp | 0y10001;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsi >> @r10 = $teb & @rdi) { test_statement(0x24AD); ;  This is a not opened comment */  break;  /* This is a not closed comment  if (@r11((@r11)  { test_statement(0xAC7); } } elsif (++$proc & @rdx ^ @rbp ^ $teb <= @rdi & 10 ^ +@r13 ^ $ip) { test_statement(0x2D3);  /* This is a comment */  while  (+@rbp >< @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  while  (@rdi ; @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
73
 if (@r11 + $ip | $proc << @r11 | @rbp & $ip >< (0n14) << @rdx << @rsi >> @rdx >> @r8 ^ @r8)  { test_statement(0xD26);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax & -@rax ^ @r11 ^ @rbx | 13 ^ 11 | @rdi ! @rax & -@rax ^ @r11 ^ @rbx | 13 ^ 11 | @rdi) ; }
$error$
$end$
74
 if (@rdx + @r8 & 0x8 & -0y1001 >> @rsp | 0n6 ^ @rbx >> @rsi | $buffer | @rdi & $thread ^ @rdx ^ @rsp > @rsi + @r10 & @rsp ^ -+0n5 >> 15 >> @r9 & @rbp >> 4 | ($thread) << 0n14 >> @r13 >> 13 | 3 & ~+@r13 ^ 11 & @r12 ^ ~@rdi)  { test_statement(0x1C35);  for (@rax = +@r9 ^ @r10 ^ +$thread; @r9 & @rdi = 0y1 & @rdx | @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xF9C); }
$error$
$end$
75
 if (@r11 + @rbp << 0xD << +-@r12 | $thread << @r8 >> ~@rsp >> -5 & @r8 >> ($ip) | -@rdi >> 0n9 & @rsp & @r9 ^ @r13 & @rdx | $teb = @r9 + $teb >> @rdx >> 0x0 >> @r11 & @rbp & 0n12 >> 0x0 ^ @rsp << @r13 ^ 0x3 >> $ip & $teb)  { test_statement(0x254);  /* This is a not closed comment } elsif ($buffer << (@r11) & @rbp >> @r10 ^ -+@rsp >> $thread ^ @rbp & @r12 | $buffer >> -$teb ^ @rdx & @r8 ^ @rsp | $ip ^ @r8 ; $buffer << (@r11) & @rbp >> @r10 ^ -+@rsp >> $thread ^ @rbp & @r12 | $buffer >> -$teb ^ @rdx & @r8 ^ @rsp | $ip ^ @r8) { test_statement(0x2342);  while  (@rax ^ 5 | @r12 | @rdx != $proc ^ @r11 | $buffer | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } else { test_statement(0x1A09);  // /* This is a comment  }
$error$
$end$
76
 if (@rdx + 0y1 ^ $buffer << (@rbp) & 0xB & $buffer & 0x7 ^ $proc & -@r11 & @r11 ^ 0n11 <> @rdi + $ip ^ @rsp >> @rax >> @rdx | -6 << @r11 >> @r10 & ~$thread)  { test_statement(0x23A0);  /* This is a comment */  break;  if (@rsi | @r10 != @rsi | @r10)  { test_statement(0x24A7); } else { test_statement(0xC6E); } ; }
$error$
$end$
77
 if (@rbx << $proc << @rax >> $teb ^ -@rbp == 0y10000 ^ @rbx & 0n7 ^ $proc & +$proc ^ @rdx & $buffer)  { test_statement(0x20C7); } elsif (@r9 & 17 & 0y1100 & @r12 >= ~@r10 & (@rax) >> @rsp & @rbp | $ip >> 0n8 | ~0x2 ^ $proc) { test_statement(0xCB7); }
$error$
$end$
78
 if (0y10 << $proc << @rax & @rsi << @r12 & @rdx & 0y1 & $teb <> @rbp + @rax << @rdx & @rsi << @r12 >> -$proc ^ @rdx >> @r10 >> @r12 ^ $buffer & -@r11 & $buffer | @r9 << $proc)  { test_statement(0x118E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi & @r12 | @r13 | @rbp | @rdx))@rbx ^ @rsi ^ (+@r9)) ; ; } elsif (@rax >> @r9 | @rsi >> @r13(($ip) << (@rsi) & @rbx | @r12 & @r11 & 0n15) { test_statement(0x18C9); }
$error$
$end$
79
 if (@r11 >> @rsp << 12 >> @r12 ^ @rbx << +@rdx >> $buffer >> @rbx | @r10 >> -@r12 >> @r13 & @r13 & $teb | @r12 >> @r8 & ~@r12 ^ ~@rsi & $buffer ^ -~$buffer ^ @r12 <> $teb >> @rax ^ @rdi << @rsp & $buffer ^ @rbx >> @r9 & $proc & @rdx ^ 7 & @r11)  { test_statement(0xDE7); }
$error$
$end$
80
 if ($buffer << @rsp << +@rdi & @rax & (+~@rsp) & @rax ^ -+0x2 << @r10 & +$thread ^ @rbx >> @rbp ^ @rsp & @r9((0x11 + @r12 << @r11 | @rsi << $teb & @r8 & @rsi & 0x7 ^ @rdx >> @rdi ^ 0y10001 & @r8 ^ ~@rsi ^ @rdx | @rdi & @rbp & 0x7 | $thread ^ @rsp ^ @r10)  { test_statement(0x12F7);  break;  while  ($proc | @r10 ! (@rsi) | @rbp | (@r10))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x15E2);  /* This is a not closed comment }
$error$
$end$
81
 if (@rdx << @r12 >> ~0n13 & $ip >> $thread ^ 0n18 << $thread >> @rdi >> @rsi ^ @r10 & +$buffer & 0y10011 ^ $proc | $teb & 13 & $ip @rdx << @r12 >> ~0n13 & $ip >> $thread ^ 0n18 << $thread >> @rdi >> @rsi ^ @r10 & +$buffer & 0y10011 ^ $proc | $teb & 13 & $ip)  { test_statement(0xDB9); }
$error$
$end$
82
 if ($proc >> @r8 << @rsp | @rbp << @rbp >> @rbp >> ($ip) & $buffer >> 0x3 = @r13)  { test_statement(0x1D7); } else { test_statement(0x14B);  while  (@rsp ^ 0x1 | @r10 <> @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
83
 if (~@r11 + @r9 ^ @r9 << @rdi ^ @rbx & @r8 ^ @rbp & $buffer = 0x5 << @rsp >> (0y111))  { test_statement(0x599);  // /* This is a comment   /* This is a comment */ } elsif (@r8 << @rsi >> @r12 >> 0x3 ^ ($teb) >> $buffer & (@rsi) & 0n6 ^ $buffer & @rdi ^ $teb ; @rbp ^ -(@rsi) & @r8 ^ $proc & @rdi | 0xC & $teb ^ @r9 & @rdx) { test_statement(0x1CA7); } elsif (~~@rsi >> @rsi ^ @r11 ^ 0y10011 | @rax & +@rbx ^ 16 | @rbx >= +$teb) { test_statement(0xAB); @rax = $thread ^ 4 ;  while  (~@r13 < 0x10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
84
 if (@r10 + @r8 >> 17 << @rdi & $thread << @rdx @r10 + @r8 >> 17 << @rdi & $thread << @rdx)  { test_statement(0x122A);  if (0y10001 ^ @rdx ^ $thread | $ip ^ @r9 | 7(($proc ^ -$teb ^ @r13)  { test_statement(0x978); } } elsif (0y1011 << @rsi >> @rsi & @rax >> +@r8 & @r10(@rdi << @rdi ^ @r9 >> @rbp | $ip >> -@rbp & +0y1010 & ($proc) ^ @rbx & 0y10011 ^ ~@rsi ^ @r9) { test_statement(0x182F); }
$error$
$end$
85
 if (@rsi + @r9 | @r9 << @rsi >> 7 & @rsp >> @rax ^ @rdi ; @rsi + @r8 << 10 >> $teb >> @r8 ^ @rbp >> @r11 >> 0y1001 ^ @rdx ^ @rbx & ~@r11 ^ @r10)  { test_statement(0x1612);  This is a not opened comment */  while  (@r12 ^ @rdi <= @r13 ^ @r9 | 0y111 | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
86
 if (@rdx + @r8 & 16 << $teb >> ~(@r12) & @r8 & @rsp == 0n4 >> @r10 >> 0y1101 & @rdi << @r8 & $teb | $teb >> 17 & @rdx & @r12 & @rsp | @r10 >> $ip & $teb & @r13 ^ @rax & (@rbx) | @rdx | ~@rsp ^ (@r9))  { test_statement(0x1F00); } elsif (@rsi << @rax >> 13 & @r13 & $proc ^ $teb >> 16 & ~@rbx & @r13 ^ ~@rsi ^ -@r8 | @r8 & @rbp ^ @r11 0x6 << @rsi >> @r12 >> (@rdx) ^ @rbp >> (@rax) & @r13) { test_statement(0x157B); } elsif (+@rdx | 5 & @r8 != 0xC >> $ip & (~0y10) & -@r11) { test_statement(0x191F); } elsif ($thread & @rsp >= $thread & @rsp) { test_statement(0x1A97);  /* This is a comment */ } elsif (@rdi < @r11) { test_statement(0x2396);  while  (-@rdi <= @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ((@r8) | 0y10011((@rax) { test_statement(0x8BB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~-+$ip >< ~-+$ip) ;  for (; $buffer <> $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($thread <= @rbp)  { test_statement(0x1AA0); } } else { test_statement(0x1C40);  if (@r11 | @r12 != $buffer)  { test_statement(0x6A4); } elsif (0x11((@rax) { test_statement(0x2222); } elsif (14))$thread) { test_statement(0x4BC); } elsif ($buffer >= $thread) { test_statement(0x1BE8); }  /* This is a not closed comment }
$error$
$end$
87
 if (@r10 & +@rsi << 0x2 & @rbp >> @r9 | $thread >> @rsi & @r10 | @r13 ^ $proc & +$ip ; @r12 << $ip << (@rsi) >> +$proc >> @r9 ^ @r13 >> @r12 | @r8 & @rsp >> @r11 | $thread >> $teb & -@rsi | +0y1001 & @r13 ^ @r13 | $buffer ^ $proc)  { test_statement(0x1F22); }
$error$
$end$
88
 if (2 + 0n7 << @rax ^ 0x5 & +@r10 ^ @rsp >= 2 + 0n7 << @rax ^ 0x5 & +@r10 ^ @rsp)  { test_statement(0xD1C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n14 & $thread ^ @r9 | 4 | @r12 | @rsp(-(($teb)) ^ @r9 ^ (0y1111)) ;  /* This is a comment */ } elsif (+@rdx >> @r8 >> @r9 & @rdi & (@rdi) & 0n6 | @rax >> 0x11 <> +@rdx >> @r8 >> @r9 & @rdi & (@rdi) & 0n6 | @rax >> 0x11) { test_statement(0x676); } elsif (@r12 >> 0y1001 & @rsi & @rdx ^ @rax & 0y10001((@r12 >> 0y1001 & @rsi & @rdx ^ @rax & 0y10001) { test_statement(0x23DE); } elsif ($thread & @rdx ^ @rsp | @r9 ^ @rbp ; $thread & @rdx ^ @rsp | @r9 ^ @rbp) { test_statement(0x18B6);  This is a not opened comment */  for (val = 10; @rbp ! @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2A4); }
$error$
$end$
89
 if ($teb + @rsi >> @r12 << $proc >> @r13 & $buffer >> $teb >> $thread & @r9 >> 0x8 & 0n15 & (@rdx) ^ $proc >> $buffer ^ @r10 & @r10 ^ $teb ^ @r8 | 0n9 >> @rbx & $teb >> $proc ^ $proc >> @r9 & $proc ^ 0x10 <> ~@rsi >> @rbx << 0n0 >> @rsi & @r13 >> @r12 & +@rsp >> @r12 | @r13 ^ @r10 >> @r10 ^ @rdx)  { test_statement(0x2034);  if (@r12 & (0y1101) | @r9)+(@r10) & @r13)  { test_statement(0x551); } elsif (@rsp ^ $buffer(@rsp ^ $buffer) { test_statement(0x4AB); } else { test_statement(0xC29); } }
$error$
$end$
90
 if (@r13 + $thread >> $ip >> +@r10 & @r13 & (@r12) >> @rbx | $ip << @r13 >> $proc >> $buffer ^ @r12 >> @r9 & @r8 ^ @r13 & ~-@r8 ^ (@rsi) | 6 >> -$proc ^ 0y100 & -@r9 ^ @rbx | @rdx ^ @r10 | 0y11 ^ 0y1001 | @r12 | 0x9 >= @r13 >> @rsp << $ip >> @rax & @r10 << ~0y111 >> @r10 & 0n7 & +@rbx & ~@rdx ^ @rbp & @rdx & ~$thread & 0y101)  { test_statement(0x2293); } elsif (-0xF << 0y11 ^ @rax >> $ip & @r10 & 0n16 != 0n4 << +@rdi ^ 0n6 & @rbp & @r8) { test_statement(0x187A);  /* This is a comment */ } else { test_statement(0x197B); }
$error$
$end$
91
 if (@rbx + 0y1011 << -@r8 << @r10 >> @r11 << @rdx ^ 0x4 ^ 0n10 >> @rdx & (15) | $proc & @r12 >> @rbx & ~@rbx)@rbx + 0y1011 << -@r8 << @r10 >> @r11 << @rdx ^ 0x4 ^ 0n10 >> @rdx & (15) | $proc & @r12 >> @rbx & ~@rbx)  { test_statement(0x22BB); @rax = -$thread >> $thread & -@rbp ^ @rax & @rdx ; } else { test_statement(0x23D6);  if (~@r10 ^ $thread | $teb))@r8 ^ @r12 | 11)  { test_statement(0x1794); } else { test_statement(0x258C); } }
$error$
$end$
92
 if ($teb + @r10 << @rsi << @rsp >> @rax & @r9 << @rdi >> @r10 >> 4 ^ +0n2 << 0y1100 & @r9 >> $thread $teb + @r10 << @rsi << @rsp >> @rax & @r9 << @rdi >> @r10 >> 4 ^ +0n2 << 0y1100 & @r9 >> $thread)  { test_statement(0x1161);  This is a not opened comment */ ; } elsif (@rsi << @rdx & 0n17 >> @rdi & @r13 & -$thread ^ 15 >> @rdx & $buffer ^ @rdi >< @rsi << @rdx & 0n17 >> @rdi & @r13 & -$thread ^ 15 >> @rdx & $buffer ^ @rdi) { test_statement(0xD26);  for (val = 10; $teb | @rbp | -@rbx ; $proc ^ @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~0y1101)0n15 | @rdi) ; } else { test_statement(0x16F8);  // /* This is a comment  }
$error$
$end$
93
 if ($ip ^ @rbp << -@r11 | @r10 >> @r10 >> 0y10011 & @rdx >> 0x7 ^ 0y1111 >> @r13 ^ +($ip) ^ -$proc | $ip & 0n7 & @r13 | ~@r13 ^ $ip | $ip ^ @rsi >= 4 << @rsp << (@rax) >> @rdi ^ ~@rax << @rsi & +@rdx >> $thread & 0y1110 ^ +@rdi ^ $ip & @rsp ^ @rbx)  { test_statement(0x1345);  if (@rsp & 0y101 | @r12 ^ $ip <> 0n18 ^ $buffer ^ @rsi | @rbx | @rdi | @rdx)  { test_statement(0x2434); } ;  for (@rax = @r8 | $buffer; $ip | $proc $ip | $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = $teb | $teb ; }
$error$
$end$
94
 if (@rax << @r10 >> $thread << @rax ^ $proc << 0n15 >> 0n11 >> @rdx & @r9 = @r12 + @r10 ^ 0n12 ^ @rax | $proc >> @rdx & -@rbx & @r11 & -$thread ^ $proc & 0x0 | @rdx ^ @rdx & 0xE)  { test_statement(0x4F3); } elsif (0x9 >> @r9 & @rax >> $buffer & @r10 & @r9 ! 0x9 >> @r9 & @rax >> $buffer & @r10 & @r9) { test_statement(0x16C2);  // /* This is a comment   // /* This is a comment  } else { test_statement(0x1C4D);  break; }
$error$
$end$
95
 if ($proc << @rsi << @r9 | $proc << @rsi >> ($teb) >> @rsi ! 0n4 << @rdi & @rdi << $ip >> $ip >> $ip & @rdx & $thread ^ @rsi)  { test_statement(0x1D4D); } elsif (@r11 & @r12 & @r12 & 0x12 | @rbp & +@rdx | @rsi ^ 0xB | @rsi ^ 0y1111 | 1 <> $teb >> @rsi & @rax) { test_statement(0x23E5); }
$error$
$end$
96
 if (@rsi >> @rbp << @r9 & @r8 << @rsp >> ~+$buffer >> +@r13 | @r12 >> 0x4 >> @r9 & (@rbp) >> 0y0 & @rbx & @rdx <= @r11 + @r12 >> 0y1111 << 0y11 >> @r8 | @rdx >> 14 >> $proc & $teb >> $buffer)  { test_statement(0x1F86);  for (val = 10; @rdi & 23 ^ @rax | 0n7 <= 17 | @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  // /* This is a comment  val = 22 ;  for (val = 10; @rdx > @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 << @r10 >> 0n16 & @r13 | @rdx >> 0xE | $ip ^ $teb ^ ~$proc | 0y101 >= $buffer << @r12 >> ~0x13 >> @r13 ^ 0n3 >> @r10 & @r12 & $proc ^ @r9 & -@r9 | @r11 >> $thread & ~@rsi | @r8 ^ @r13 ^ 0y110) { test_statement(0x1195); }
$error$
$end$
97
 if (@rax + @r9 & @rax & 0y10010 & @rsp & $thread)0y0 + ~@rsp & ~@r9 & @rbp | @r8 >> 0y10001 >> 17 & $ip)  { test_statement(0x1944); } else { test_statement(0xF63);  while  (@rbx | @rdx == @rbx ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
98
 if ((@rsp) + $proc & +@rbp << $buffer >> $teb >> @rbx >= @r12 + 0x3 & @r11 & @rdx >> +@r13 ^ 0y10000 & +$ip >> -@r11 | ~@rbp >> @r12 >> @rdi | @r8 >> @r12 ^ 0n14 & $teb ^ $thread ^ 0n13 | $proc)  { test_statement(0x2381);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ^ $thread >= 17 | @r11 | $thread | @r12) ; @rax = $proc ; } elsif (@rbx >> @rax >> (@r9) | @rdx & @r8((@rbx >> @rax >> (@r9) | @rdx & @r8) { test_statement(0x573);  /* This is a comment */ ; } elsif (@r9 >> $buffer ^ @r11 ^ @rsi ^ $proc | @rbp ^ 0n14 ^ @rsp != @r9 >> $buffer ^ @r11 ^ @rsi ^ $proc | @rbp ^ 0n14 ^ @rsp) { test_statement(0x1FC2); val = $proc ;  break;  // /* This is a comment  } else { test_statement(0xCC3); }
$error$
$end$
99
 if (@r12 >> @rdx & $teb << ($buffer) >> @rbx >> $ip & @r12 >> @r8 & @r10 & $ip ^ @r8 << -$ip >> @r10 >> 0y1100 & @rsp & @rbx ^ $proc <> $buffer >> @r13 | @r13 << @rbp)  { test_statement(0x393); val = @r11 >> $teb & 0x10 & @rbx ;  This is a not opened comment */ val = (@r9) ^ 0n17 | @rdi ; } else { test_statement(0xE9B);  This is a not opened comment */ }
$error$
$end$
100
 if (@r12 << @rdx >> $teb << +$ip >> @rsp ^ $ip ^ @r8 <= @r12 << @rdx >> $teb << +$ip >> @rsp ^ $ip ^ @r8)  { test_statement(0xFE4);  /* This is a not closed comment @rax = ~$buffer ;  break; } elsif (+0y10001 << @r9 >> @rsp & @rbp >> @rdx ^ @r10 >> (~23) & @rbx ^ @rdi & @r9 ^ $thread | $buffer >> $buffer & @r11 | $buffer & @rax | @r13 | @rax >= +0y10001 << @r9 >> @rsp & @rbp >> @rdx ^ @r10 >> (~23) & @rbx ^ @rdi & @r9 ^ $thread | $buffer >> $buffer & @r11 | $buffer & @rax | @r13 | @rax) { test_statement(0x109D); }
$error$
$end$
101
 if (@r11 + 0n4 << (@r10) << @rbx >> @r10 << @rax >> @r11 >> 0n9 & ($ip) << 0y1100 & $proc ^ @r12 << @rsp & @r10 & @rdx ^ @rbx >> @rsp & @r13 & @r12 | $proc << @rdi <> 0n15 << @r12 << $proc >> @rdx & 0y110 << ~0y100 >> @rsp >> @rbx ^ @rsi << @r13 >> @rsi >> @rdx & ($ip) ^ @r9 >> $buffer & @r11 & $buffer)  { test_statement(0x1278);  /* This is a not closed comment  This is a not opened comment */ }
$error$
$end$
102
 if (@r9 ^ @r8 << @r13 >> +@rdx))@r9 ^ @r8 << @r13 >> +@rdx)  { test_statement(0x1D6B); }
$error$
$end$
103
 if (13 >> @r12 <= @rsp + @rax >> @rsi >> @rsi ^ @r12 << @r13 & @r9 & ~0xE)  { test_statement(0xB39); ;  break;  This is a not opened comment */ } else { test_statement(0x207B);  while  (@rsi ^ @rbp | ~+@r9 | $ip(@rax | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rdx((@rdi)  { test_statement(0x1825); } elsif (@r9 > @rbx) { test_statement(0x13CB); } elsif (0y10000 >= 0n0) { test_statement(0x150C); } else { test_statement(0xACE); } }
$error$
$end$
104
 if (@rsi << @rbx >> +@r13 >> @rbp ^ @r9)@rsi << @rbx >> +@r13 >> @rbp ^ @r9)  { test_statement(0x1F42);  while  (@r10 & @r9 ^ 0n9 ^ @rax <> (23) ^ @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n10 | @rsi | $buffer >< @rdi ^ $thread | +$teb) ; } else { test_statement(0x1C41); }
$error$
$end$
105
 if (@r12 + @rsi >> 0y1100 & -@rbx & @r13 ^ @rsi >> 0n1 >> 0y1111 & (@r12) >> (0n0) & @r13 & @rdx ^ @rbx | 0x7 << @rsp >> @rsp | @r9 >> @rsp & @r13 ^ 0n5 ^ ~0xD ^ +@rsi <= @rsi + @rsi << @r13 >> ~@r9 >> @r12 & @rbx & (~@r13) >> @rbx & 0n3 & @rdi | @rbp & @rdi & ~0xB & @rsi | 0n16)  { test_statement(0x1028); } else { test_statement(0x2040);  // /* This is a comment  }
$error$
$end$
106
 if (0 + @rdx & @r8 << @rbp >> $buffer ^ @rsp << ++@rdi ; $buffer + +@r11 & @r9 << $ip)  { test_statement(0x188C); } else { test_statement(0x186E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread ^ ~-@r9 | @r13 != $thread ^ @rsp) ;  /* This is a not closed comment  if (@rbx 16)  { test_statement(0x18B5); } elsif (@rbx ; 0y10) { test_statement(0x1EBD); } else { test_statement(0x4CC); } ; }
$error$
$end$
107
 if (@rdi + 0y10001 << $thread >> @r12 << -@r11 >> $ip >> @rbp & @r13 << ~@r8 & @rsi >> +~@rsi & @r8))$buffer << @rax << $buffer >> @r12)  { test_statement(0x71); } else { test_statement(0x1F2A); }
$error$
$end$
108
 if (0x10 >> @rsp & $thread >> $buffer ^ ~$proc << @r8 >> $proc >> 0x5 & 0x13 <> 0x10 >> @rsp & $thread >> $buffer ^ ~$proc << @r8 >> $proc >> 0x5 & 0x13)  { test_statement(0xAC7); val = 0x0 & 23 ; @rax = 22 ;  break;  break; } elsif (@r9 ^ @r13 >> $buffer >< @rbp << @rbx ^ @r10 & $ip) { test_statement(0x1509); } else { test_statement(0x279); }
$error$
$end$
109
 if (~0xF + @r13 << @rbp = ~0xF + @r13 << @rbp)  { test_statement(0x16D3); }
$error$
$end$
110
 if (-@rbx & -@rax >> -0x13 >> @rbp | 0y1011 ^ 23 >> @r13 & @rbp & ~@rdi == @rax + $ip << $thread >> +@rbx << @r12 >> @r10 >> @rdi & @r11 << @rsi >> @rax >> 0)  { test_statement(0x48A);  /* This is a not closed comment }
$error$
$end$
111
 if (@rdi >> @rbx << @rax & $ip << $ip ; $thread >> 4 & @rsi << @rbp & (0n6) & $thread & @r11)  { test_statement(0x2144);  break;  break; } else { test_statement(0x16B7); }
$error$
$end$
112
 if (@rbp + @r10 << @r10 >> 0xD << $buffer >> @rdx | @rbx >> @r10 & 0x9 ^ @r9 & @rax ^ 10 & $teb ^ $thread ^ 0n5)@rbx + @rax ^ 0n15 | @r10 ^ @rsi & 0n14 | @rsi >> @rdi)  { test_statement(0x1C2D);  // /* This is a comment  }
$error$
$end$
113
 if (@rax + @rdx << @rbp << (-4))$buffer & @rdx << @r9 >> @rsp >> @rbx & @r12 & -$thread ^ @rax << 0n2 ^ -@r9 & @rax ^ $ip & 0y1001 ^ @r12 ^ 0x0 | @r10 >> @rdx & @r9 >> @rsp)  { test_statement(0x1CD2); } else { test_statement(0x2367);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n5 ^ @rdx(0n5 ^ @rdx) ; }
$error$
$end$
114
 if ($buffer << $ip & @rsi ^ @r9 & @r13 & $proc & $ip < @rdx + $proc << 2 ^ $teb << @rsi >> @rsp >> @r10 & $buffer >> @r11 ^ @rdi & $proc)  { test_statement(0xEF8); ; } elsif ($ip >> $teb >> @r11 & @rsi >> @rbp(@r12 >> 0 & 0y111 & 0n6 & +$teb ^ $ip & @rbx & $teb ^ 0x5 & @r9 ^ @r13) { test_statement(0x1323);  /* This is a not closed comment  while  (@r8 | @r10))@r8 | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
115
 if (@rdx << ~(@rdx) << 0n16 & @r13 << @r13 >> @rdx >> @rax & -$ip >> @rdi | $thread >> @r11 & $ip & @r13 & $proc <> ~@r10 << $ip << (@r9) | 10 & @rbx ^ @rax >> @r10 | 0n8 | 0n7 & @r9)  { test_statement(0x1AB9); } elsif ($buffer << @r10 ^ @r13 >> 0y1101 & @r13 ^ 0n1 & @r9 <= @rsp & $buffer >> 0n4 & @rbp & 0n13 ^ @rsi & $ip | @rsp >> @rsi & 0y1001 ^ @rax & -(0n11) ^ @r8) { test_statement(0x11DF);  This is a not opened comment */  while  (@rbp | @r12 == $ip | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
116
 if (0x10 + 0n6 << @rdi))0x10 + 0n6 << @rdi)  { test_statement(0x1444); ;  /* This is a not closed comment  while  (@rdx | (@r9) > @rdx | (@r9))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (@rax = ($proc); 0y10001))-@r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread << @rdx >> ~0x8 ^ @r8 & 0xE & @rsp($thread << @rdx >> ~0x8 ^ @r8 & 0xE & @rsp) { test_statement(0x1BF1); } elsif ($ip | $proc ^ @r12 ^ (~@r12) < $ip | $proc ^ @r12 ^ (~@r12)) { test_statement(0x1DDE);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi ! @rsp | @r13) ;  /* This is a not closed comment } elsif (@r8 & @rsp ^ @r9 ^ @r11 | @r12 ^ ~@r11 >< @r11 & @r8 ^ +$ip ^ @r11 | -@r12 | 0n0 | @rax) { test_statement(0x11CC); } elsif ((0x11) | $teb | @rdx((@rax ^ @r13 | $proc | @r9) { test_statement(0x199D); } else { test_statement(0x213E); ;  This is a not opened comment */ }
$error$
$end$
117
 if (@rdx << @rsp & @rax << 11 >> 0x2 >> $teb & $buffer >> ~0n14 & ~$teb | 0y110 >> $ip >> @rdx ^ @r9 >> 0y1100 ^ @r11 <= @rdx << @rsp & @rax << 11 >> 0x2 >> $teb & $buffer >> ~0n14 & ~$teb | 0y110 >> $ip >> @rdx ^ @r9 >> 0y1100 ^ @r11)  { test_statement(0x89B);  /* This is a not closed comment ; } else { test_statement(0xF84); }
$error$
$end$
118
 if (0y1001 + @r11 << $buffer << @rdx >> $thread << @r12 ^ ~(0n12) << $ip >> 0x4 >> $ip & @r10 | $buffer >> $proc ^ @r9 & $thread ^ $teb | $proc ^ $buffer & 23 ^ @r12 ^ @r13 | ~@r8 & @rdi | @r10 ^ @r13)0y1001 + @r11 << $buffer << @rdx >> $thread << @r12 ^ ~(0n12) << $ip >> 0x4 >> $ip & @r10 | $buffer >> $proc ^ @r9 & $thread ^ $teb | $proc ^ $buffer & 23 ^ @r12 ^ @r13 | ~@r8 & @rdi | @r10 ^ @r13)  { test_statement(0x1374); } elsif (@r13 << @rdx ^ @r9 >> @r12 & ~(@rsi) & @rsi ^ @r8 & @rdx > @r13 << @rdx ^ @r9 >> @r12 & ~(@rsi) & @rsi ^ @r8 & @rdx) { test_statement(0x16F); } elsif (@r9 >> @rbx & @rsp & $thread ^ @rdx & @r11 != @r9 >> @rbx & @rsp & $thread ^ @rdx & @r11) { test_statement(0x2150); } else { test_statement(0x1AC8); }
$error$
$end$
119
 if (@rax << @rdi << 0y1 & -@r13 >< $proc >> @r11 << @rdx | $teb >> $proc >> 23 ^ @rax & @rsp & $proc)  { test_statement(0x6E5); } elsif (@r8 << @r13 >> $teb & @r8 & $proc & 0n2 > $ip & @r11 >> $ip & @rdi & @rbx ^ ($proc) & @r13 | 21) { test_statement(0x8A9); } elsif (0y1 & @rax & +@rsp | $thread & @rbp ^ 0x3 | (@rbx) = 0y1 & @rax & +@rsp | $thread & @rbp ^ 0x3 | (@rbx)) { test_statement(0x17DF); } elsif (@rax & 0x3 ^ $thread ^ ~--@rbp | $thread ^ @r12)@r12 ^ @r9 | ~@rdi ^ @rsp | 0n17 | $proc) { test_statement(0x194); }
$error$
$end$
120
 if (@rax << 20 & @r9 << $ip >> @rdi ^ @r13 << @r9 & $buffer >> -@rax ^ @rsi & 15 | $ip << $teb >> @r8 ^ @r9 >> @r9 ^ @rdx & $buffer ^ +0y11))$thread & ($proc) >> @rdi >> @rdx ^ @r13 << @r9 >> $thread >> $ip & 0n16 | @r9 << @rdi >> @r10)  { test_statement(0xDB);  /* This is a comment */ } elsif (0xF >> 0n3 >> 0 ^ 0n1 & @r9 | @rsi >> @rax ^ ~0n14 ^ @r13 ! @r8 << 14 >> @rsi >> @r9 ^ 0y1000 >> @r9 ^ @r12 & @r13 ^ @rdx | 0y10010 ^ 0xE ^ @r11 ^ +0y111 | $buffer ^ @rsi ^ @r13 | @r9 ^ $buffer | @rsi | 7) { test_statement(0x702); } elsif (@rbx >> $buffer ^ @rbx & ~@r8 ^ @r13 | 16 | @rbx ^ 7 | $buffer | $proc >< @rbx >> $buffer ^ @rbx & ~@r8 ^ @r13 | 16 | @rbx ^ 7 | $buffer | $proc) { test_statement(0x1D19);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb >< @r8) ; } else { test_statement(0x1E50);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rbx ^ 0x10 = +@rbx ^ 0x10) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp | -$thread ! $buffer) ;  This is a not opened comment */  for (val = 10; 20 < @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
121
 if ($thread << +@r10 << @rbx ^ @r9 << @rax | $buffer ^ 0y10001 >> 17 & 0n5 & @r9 ^ @r9 & 0n11)(@r12) + @r10 & 0y1101 >> (@rax) >> @rsi ^ @rsp << @r9 & @r13 & $thread & @r10)  { test_statement(0x1013); } elsif (@r13 & 3 & $ip & @r12 | (~@rax) & 0x9 & 12 ^ ~@r12 <= +0xB ^ @r8 ^ @r10 ^ +-@rdi ^ @rbp | @rdx & @r11 & @rdx | 5 ^ @r8) { test_statement(0x23D0); } elsif ($teb >> @r9 & @r9 | ~@r13 < 0n4 | @rdx & 2 ^ $thread ^ @r9) { test_statement(0x416); } elsif (@rdi & $ip ^ 0xD ^ @rax == @rdi & $ip ^ 0xD ^ @rax) { test_statement(0x9F); } else { test_statement(0x71B); val = @r8 ^ @r8 ; }
$error$
$end$
122
 if (0y110 >> $teb >> @rax >> @rdi & @r10 << ~@r11 >> $ip >> @r12 | @r13 >> @rbp >> @rbp ^ @r9 >> @r12 & @r12 ^ 0n17 ^ @r13 ^ $ip >= $proc + $buffer << ~0n0 ^ $thread >> $thread >> $buffer | 0xF)  { test_statement(0x5E1); } elsif (@rsi << 4 >> @rax & 0y1001 & +@rsp 0 & ~@r11 >> $thread) { test_statement(0xD65); } elsif (@r12 >> $proc & @r9 ^ $teb ^ @rax ^ @r9)$teb ^ @rsp & @rdx ^ @rax ^ @rsp) { test_statement(0x1D95); } else { test_statement(0x2228);  break; }
$error$
$end$
123
 if (@rbx + 0 << ~$teb << @rbx ^ -$thread << @rax | $thread & @r10 | $thread >> +@rbx & $teb & $thread ^ $thread & @rsp ^ $ip ^ -(@rax) | @rdx <> @rbx + 0 << ~$teb << @rbx ^ -$thread << @rax | $thread & @r10 | $thread >> +@rbx & $teb & $thread ^ $thread & @rsp ^ $ip ^ -(@rax) | @rdx)  { test_statement(0x121F); } elsif ($thread & --$teb | @r10 >> @r8 & $ip(($teb >> $buffer >> $ip | @rdi >> @rdi | 0x1 & $teb | 13 ^ @r8) { test_statement(0xE7A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ! $thread) ; }
$error$
$end$
124
 if (@r13 + $teb >> @rbp >> (0x4) ^ @rsi << @r8 & ~0n4 & @rsi & +@rdx ^ @r12 | ~12 >> (@rbx) >> -@rbx ^ @rsp >> @rsi | @rbx >> @rax & 0 = @r13 + $teb >> @rbp >> (0x4) ^ @rsi << @r8 & ~0n4 & @rsi & +@rdx ^ @r12 | ~12 >> (@rbx) >> -@rbx ^ @rsp >> @rsi | @rbx >> @rax & 0)  { test_statement(0x1F3D);  if (0y11 & ~0xE ^ $ip == 0y11 & ~0xE ^ $ip)  { test_statement(0x1219); } else { test_statement(0x21F7); }  for (@rax = (@rax) ^ $buffer; @r10 ^ @rsi == @r10 ^ @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rbp | @r10 == 0n13)  { test_statement(0x908); } elsif ($proc)$proc) { test_statement(0xA08); } elsif ((-@rbp) > (-@rbp)) { test_statement(0x18A1); } elsif (0y10001 > +(@rax)) { test_statement(0x1EF2); } else { test_statement(0x1595); } }
$error$
$end$
125
 if (@r12 + $buffer << @r10 << @r8 >> -@rbx << 5 >> @r12 | 3 << @r13 & @rsp | 0n16 <= @r12 << @rsi >> 6 >> $proc)  { test_statement(0x2588); } else { test_statement(0xF1); }
$error$
$end$
126
 if (@rdi + @rsi << @r8 | @rsp >> ~+~21 >> @rax | @r12 >> @r11 & $teb & 0y1101)$buffer << 0n18 << @rax)  { test_statement(0x1823);  if (0x12 & +@rbx < 0n8 & 21 ^ @rsi ^ @r8)  { test_statement(0x11); }  if (@r11 | @r10 | @rbp((@r11 | @r10 | @rbp)  { test_statement(0x2076); } elsif ($proc | @rsi = $proc | @rsi) { test_statement(0x1DF4); } elsif ($buffer ; $buffer) { test_statement(0x1011); } elsif (@r8 != @r10) { test_statement(0xA8C); } elsif (@rsi)@r8) { test_statement(0x1244); } else { test_statement(0x1F03); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax | $buffer <> @rax | $buffer) ; }
$error$
$end$
127
 if (-(@r13) + $proc & @r9 & @rdi >> @rbp ^ @rbp >> @rsp >> @r8 ^ ~+@rbp >> 7 ^ @r13 & $proc ^ @r13 ^ @rsi >= -(@r13) + $proc & @r9 & @rdi >> @rbp ^ @rbp >> @rsp >> @r8 ^ ~+@rbp >> 7 ^ @r13 & $proc ^ @r13 ^ @rsi)  { test_statement(0xAE3); }
$error$
$end$
128
 if (0x6 & 0x4 & $buffer >> @rsp ^ 0n7 << 0xB >> $proc >> @r8 & @rdx >> $teb & 0xC & 0xA ^ -$buffer >> $teb & @rbx & @rax >= 0x6 & 0x4 & $buffer >> @rsp ^ 0n7 << 0xB >> $proc >> @r8 & @rdx >> $teb & 0xC & 0xA ^ -$buffer >> $teb & @rbx & @rax)  { test_statement(0x1F11); } elsif (~$thread << +@r13 & ~@rdi >> 0y10000 & 10 ^ @r13 >> 20 & @rbx ^ $ip | @rbp & @rbp & +0y1101 ^ 0xD & ~~$thread ^ @r11 ^ 0y1010 | $proc ^ @r9 ^ @rsp | 0xC ^ 0x11 | @r13 > @rdx << @r11 >> $thread >> @rbx ^ 0xC ^ $teb) { test_statement(0x19E);  /* This is a not closed comment } else { test_statement(0xF54);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp | @rbp <= @rsp | @rbp) ; }
$error$
$end$
129
 if ($ip >> -0x1 & $teb & 0y1100 | @rbx & @rax >> $buffer ^ @r8 >> @r9 | @rdi ^ @r13 ^ @rsp != $ip >> -0x1 & $teb & 0y1100 | @rbx & @rax >> $buffer ^ @r8 >> @r9 | @rdi ^ @r13 ^ @rsp)  { test_statement(0x4F2);  break; } else { test_statement(0x128C); ; }
$error$
$end$
130
 if (@r10 + @rdi << -($ip) ^ @rsp >> @r8 >> +@rsp & +~@r11 >> ~0x8 & @rdi ! @r10 + @rdi << -($ip) ^ @rsp >> @r8 >> +@rsp & +~@r11 >> ~0x8 & @rdi)  { test_statement(0x21A4);  This is a not opened comment */ } elsif (@r8 << 0x12 >> @r12 & @r9 != @r8 << 0x12 >> @r12 & @r9) { test_statement(0x2508); } elsif ((0x8) >> ~@rbp ^ $ip < (0x8) >> ~@rbp ^ $ip) { test_statement(0xA21);  for (val = 10; --@r9 != @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x737); val = $teb ; }
$error$
$end$
131
 if ($proc << 1 >> @r10 << $thread >> @rsi & @rdi << 10 >> $ip >> @r13 ^ $buffer & @r11 ! 0x7 + $buffer << @r13 >> @r8 << @r11 ^ @r8 << @rbx >> ~$buffer ^ +~15 >> 0y1000 & $teb ^ 0y10010)  { test_statement(0xA6E); } elsif (@r8 << 0n2 <= ~@rbp | @r13 >> @r13 | @rbx & $proc) { test_statement(0x1716); } elsif ($thread | 0y10000 & @r11($thread | 0y10000 & @r11) { test_statement(0x1A3D);  /* This is a comment */ }
$error$
$end$
132
 if (-$teb << ~0x4 >> (0x12) & @r13 >> $ip >> ~0y1010 ^ @rbx >= $teb + (@r11) & @rsi ^ $ip & $ip & @r9 | @rdx << @rsp & $thread | @rax & @r13 & @r11 ^ @r10 & (@r9))  { test_statement(0x1236);  while  (@rsp > @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax | @rax < @rax | @rax) ;  break;  This is a not opened comment */  for (; @rdx ! @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($ip(@r10)  { test_statement(0x2301); } }
$error$
$end$
133
 if (@r8 + (3) ^ @rdi & +@r8 >> $thread & @rdx & 0n10 ^ @rax ^ (@r11) & @rdx((0y0) + @r9 << @rdx << 0n2 >> $thread << $ip & 0n17 << 0n3 >> @rdx)  { test_statement(0x1E71); }
$error$
$end$
134
 if (@r8 << @rax << 13 >> +@r11 << @rsi | @r13 >> @r8 >> @rbp ^ @rsp & @r9 & 10 | @r9 >> @r9 & @rdx | $buffer | $buffer | +@r12 | @r10 <= $buffer << +@r10 << @r12 & +@r11 >> @rdx ^ (@rdi) << @r9 ^ $proc >> $proc ^ @rdx ^ @rdx)  { test_statement(0x1302);  /* This is a comment */ } elsif ($teb << @rbp ; @rsp << $buffer ^ @rbp | 0y1010 >> @rdx & $buffer & @r11 ^ @rsi) { test_statement(0x215D);  if (15((15)  { test_statement(0xCAD); } else { test_statement(0x2CC); } }
$error$
$end$
135
 if (@rsp + @rsi >> @rsp << 0y100 >> $proc >> @rbp >< 0x3 >> $proc)  { test_statement(0x728); }
$error$
$end$
136
 if (+20 + @r9 << ~@rsi >> $buffer >> @rsp ^ @r11 & @r9 >> @r13 ^ @r9 >> @rbx & $buffer | @rdx >> 0y1011 & @rsp & $teb & @rdx != @rsi + @rdi << @r9 ^ 20 >> @rsp >> @r13 & @rdx ^ +@rsi | @rbp << @rbx >> 0xD | 0y10010 >> @rax & 17)  { test_statement(0x1F5B); } else { test_statement(0x8FF);  // /* This is a comment  }
$error$
$end$
137
 if (@rax + 0x13 >> @r9 >> @rbp & @rbx ^ 0n7 << $proc & $thread ^ 0n3 ^ $teb & @rsp))@rax + 0x13 >> @r9 >> @rbp & @rbx ^ 0n7 << $proc & $thread ^ 0n3 ^ $teb & @rsp)  { test_statement(0x2706); } else { test_statement(0x124F); val = $thread ^ $thread | @r13 ^ @rdx ; }
$error$
$end$
138
 if (@r9 + $buffer >> @rax)@r11 + 0xC & @rdx << @rbx & $buffer >> $teb ^ @r8 << @rbp >> (@rbp) >> @rdx & @rsp | @r13 << $proc >> @r13 ^ -@r12 & @r12 & 0xB | @rax & -$proc ^ 3)  { test_statement(0x81F); } elsif ($buffer << @r13 >> @r8 | @rdi & @rsp & @rax ^ $thread & 0y1010 = ~@r13 << $proc ^ +0xE >> $buffer & @rbp & @r9 | @rsp ^ @r10 & @r10 ^ @r11 | @rsi & @rdi ^ @rdx) { test_statement(0x866); }
$error$
$end$
139
 if (@rdi + @r9 << 0y1001 & 0n8 >> @r12 ^ $teb)@rdi + @r9 << 0y1001 & 0n8 >> @r12 ^ $teb)  { test_statement(0x1C2B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 & @r9 ^ $teb | @rbx ^ @r9 | $ip | $thread >= @rdx & $buffer ^ ($buffer)) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 ^ @r12))~$buffer) ; } elsif ($buffer << @rdi | +@r11 | 0n7 & @r11 ! @r8 >> @r10 & +@rbp ^ @r8) { test_statement(0xAC6); @rax = @rbp ^ @r9 ^ $buffer | @rbp ^ 0x0 ;  if (@rbx | 0y10001 = @rbx | 0y10001)  { test_statement(0x1AF6); } elsif (@r13 < @r13) { test_statement(0x1B12); } }
$error$
$end$
140
 if (@rdi + $thread == @r10 + @rbx >> @r9 << @rbx ^ @r10 << @r8 >> @rax & ~@r12 & @r11 & @rbx | @rbp >> ~@rbp >> @rax)  { test_statement(0x1F7B);  /* This is a comment */ } elsif (@rdi << +@rsi >> ~$buffer | @rbp | $ip & $buffer | @rsp ^ @rsi | $thread <> -0n4 << $proc >> @rdx >> @rbx & 0y10010 ^ $buffer & $proc) { test_statement(0x39F);  for (val = ~@rbx ^ @rdi; 0n13 ^ $buffer = @rsp ^ @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 ^ @r10 & 1 ^ +@r11 ^ 0x0 <> @rsp >> @rbx) { test_statement(0x1B2A);  /* This is a not closed comment } elsif (@rax <= @rax) { test_statement(0x1F08);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 >< 0y111) ; } elsif ((@r11) (@r11)) { test_statement(0x490);  /* This is a comment */ } else { test_statement(0x57E); }
$error$
$end$
141
 if (~$thread >= ~$thread)  { test_statement(0x1EB4);  // /* This is a comment   break;  // /* This is a comment  val = @r9 ; ;  if (@rax $teb)  { test_statement(0x23A9); }  // /* This is a comment   // /* This is a comment  } elsif (@r8 >> $ip >> @rsi & @rsi >> +-@rax ^ @r9 >> $teb & $buffer & @r12 | @rbx & -$buffer & 0n8 ^ 7 | @rdi & $proc | @r11 | @r9 | @rbx >= 0y101 >> @r11 & @rbx >> @r9 & -@rdi & @r9 | $teb ^ @r10 | @rax & $thread) { test_statement(0x1F87); ; } else { test_statement(0x299); }
$error$
$end$
142
 if (@r9 ^ (0y100) ^ @rbx & 0x11 & +@rax ^ @r13 | @rbx >> @rdx ^ ~0x7 >> 14 & -@r11 ^ @r8 & 0x3 $teb + @rdi << (@r9) >> $buffer | @rax << @r9 | ~0x2 >> @r13 & 0y110 ^ $teb | $ip & $buffer ^ 0n15 ^ @rax)  { test_statement(0x37A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer $buffer) ; } else { test_statement(0x6ED); }
$error$
$end$
143
 if (@rax << $buffer | 0x7 << $teb >> $thread >> @rsi & $teb >> ~@rdx & @rsi & @r11 | @r10 & $thread & @rsi | @r8 & @r10 ^ ~@r9 | @rax > 0x1 & @rax >> $ip >> -@r11 ^ 22)  { test_statement(0x1FBB);  if (+@r9 = $proc & @r13 ^ (@r12) | 0y1 | -5)  { test_statement(0x1D2E); } else { test_statement(0x226); } } else { test_statement(0x481); ;  /* This is a comment */ }
$error$
$end$
144
 if (+$teb + $buffer << @rsp << @rsp & @rdx & @r10 >> +@rax & (@r12) | @rbp & @rdx >> 0y1101 & @rax | @r12 & 16 > +$teb + $buffer << @rsp << @rsp & @rdx & @r10 >> +@rax & (@r12) | @rbp & @rdx >> 0y1101 & @rax | @r12 & 16)  { test_statement(0xD0C);  This is a not opened comment */ } elsif ($proc & -@r12 & 0y1110 = +@rdi >> $ip & $buffer & $teb ^ 21 >> ($buffer)) { test_statement(0x18BA);  // /* This is a comment   while  (2(+14)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rsp >< @rsi)  { test_statement(0x7E5); }  break; } elsif (@rsp & @r11 & $teb))~0y1110 >> @rdi) { test_statement(0x699); } else { test_statement(0x2523);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi ; @rbx) ; }
$error$
$end$
145
 if (@r12 << 0x4 & @rbp >> @rax & @rdx >> $buffer | +$teb ^ @r13 >> @rax | 0xC ^ @r9 & @r11))@r10 >> @rax << 11 >> $ip >> @r10)  { test_statement(0x2352);  // /* This is a comment  val = @rdx ^ ~0y111 ^ +12 ; }
$error$
$end$
146
 if ($ip | $proc ^ $buffer >> @rbp & $teb ^ @r13 & @r10 ^ $thread ^ @rdi <> @rsi + @rsp >> @r8 >> @rbp | @rax >> @rbp >> @r12)  { test_statement(0xDE);  /* This is a not closed comment } elsif (@r11 << $buffer >> @r8 >< @r11 << $buffer >> @r8) { test_statement(0x21B2); } elsif (0y1011 ^ (~@rsi) ^ @rbx ^ @r9 | $thread & 13 | @rax))(@r9) >> ~$teb) { test_statement(0x94E);  if ($buffer | 0y0))@r8)  { test_statement(0x257B); } } elsif (@r8 & @rax ^ 0xB ^ 0xE | ++~@r12 > @r8 & @rax ^ 0xB ^ 0xE | ++~@r12) { test_statement(0xB01); }
$error$
$end$
147
 if (0n19 << @r11 << $buffer ^ @rax << ~$proc & @r12 & @r11 ! -@r9)  { test_statement(0x1129); } elsif (@rsp << @r9 >> @r10 | 0y100 >> @rsp ^ 0x0 ^ @r11 ^ ~@rdi | 5 & @rbx == @rsp << @r9 >> @r10 | 0y100 >> @rsp ^ 0x0 ^ @r11 ^ ~@rdi | 5 & @rbx) { test_statement(0x1528);  This is a not opened comment */ }
$error$
$end$
148
 if (~@rsp << $thread << +0n15 | @rbp << @rbx & $ip | -@rax & @r12 | $teb & $teb ^ @r9 <= 0n7 + -(@r9) ^ @rax >> @rbx >> ~0x6 & @r11 | @rax << $proc >> +-~$thread >> @r10)  { test_statement(0x94F);  This is a not opened comment */ ;  for (; @r11 <> @rsp | ~$teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc << $ip >> $thread >> @rsi | 3 ^ $proc ^ @rbx | +@r8 ^ 22 ^ -~0n13 == $proc << $ip >> $thread >> @rsi | 3 ^ $proc ^ @rbx | +@r8 ^ 22 ^ -~0n13) { test_statement(0x49C); } else { test_statement(0xF9C); }
$error$
$end$
149
 if (-@r10 << @r9 << 0x8 >> @rbp >> @rdx >> @r8 ^ (($thread)) == -@r10 << @r9 << 0x8 >> @rbp >> @rdx >> @r8 ^ (($thread)))  { test_statement(0x25C); } elsif (@r8 << $thread ^ @r8 ^ @rdx & 0n3 ^ @rax(((~@r9) << 0y1011 & @rbp >> @rbp & @r9 & 0x10) { test_statement(0x1A44); }
$error$
$end$
150
 if (0y0 & @rdi >> @r12 >> @r9 | $proc << @rax & $ip >> @rsp & @rbp & -$proc | 0y1 & (0n16) > @r11 + @r12)  { test_statement(0x831); } else { test_statement(0xAEE); }
$error$
$end$
151
 if ($ip + @r11 ^ $buffer << @rbx < @r10 + @r8 << @r11 >> @rbx << $buffer | $buffer << @rsi ^ @rbx | @r11 >> @r13 & @r13)  { test_statement(0xF77);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ! @rsi | @rsp) ; ;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp >< @rsp) ; } elsif ($buffer << @r9 >> @rsp == $buffer << @r9 >> @rsp) { test_statement(0x1BA4);  if (@rdx | $ip ! @rdx | $ip)  { test_statement(0x1DC8); }  // /* This is a comment  } elsif (@r13 >> @r11)@rbx >> @r13 ^ @rax & @rdi) { test_statement(0x683); }
$error$
$end$
152
 if (@rbp ; @rbp)  { test_statement(0x2241);  for (val = 10; $teb & @r13 | 0n8 ^ $teb <= 23 & -@r10 ^ $buffer ^ @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  // /* This is a comment  } elsif (@r11 & @rsi >> @rdi & 11 | @r13 == @r11 & @rsi >> @rdi & 11 | @r13) { test_statement(0xE9D); } elsif (@r12 & @rax ^ @r8 ^ $thread >= +$buffer & @rsp & 10 ^ @r10 ^ (@rbp)) { test_statement(0x6A2); } elsif (@rsp ^ @rax ^ @r13 >= @rsp ^ @rax ^ @r13) { test_statement(0x18BA);  // /* This is a comment  } elsif (($teb) ^ @r8 | $teb | 0xF == @rax ^ @r11 | $proc) { test_statement(0x7F2); }
$error$
$end$
153
 if (@r12 << 0x6 >> -@r8 << 0n7 & @rbp << ~@r10 | @r12 >> @rbx & @rsi >> @r12 <= @r12 << 0x6 >> -@r8 << 0n7 & @rbp << ~@r10 | @r12 >> @rbx & @rsi >> @r12)  { test_statement(0x14F4);  while  ($thread ^ @rbx ^ @rbp(0y10010 ^ @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1129);  break; }
$error$
$end$
154
 if (@r11 << @r9 << $teb >> @rbx << @r11 >> @r8 >> $proc | @rbx ^ (@r13) >> @rdx & @r8 ^ +@rdx | 22 >> 0n13(@rdx ^ @r11 >> $proc >> ~@rax & @rdx ^ @r12 | @rsp >> $proc)  { test_statement(0x95C); @rax = @r9 & @r8 | @r8 & $teb | @r9 ^ @r12 ;  break; ; } elsif (0n9 >> @rbx ^ 0x8 >> @rbp & (@rdi) & $ip ^ @rdi & 0n8 ^ @rsp | @rsi | @r10 ^ 0y1000 ; @rax >> ~(@r9) >> ~(@rax) ^ $ip >> @rdx & 23) { test_statement(0x1C63); } else { test_statement(0x3BA);  while  (@r9 ^ 11((@r13 ^ @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp | @r9 ; @rsp | @rsp) ;  // /* This is a comment  }
$error$
$end$
155
 if ($teb + $teb << @rsp << @r10 >> @r8 << @rdi & @r10 << $thread & 0n19 >> $thread & @r9 & $proc ^ @r11 << 0xA >> 0n19 >> (@rbp) & @r12 | ++$buffer << @rbp >> @r8 ^ @rbp >> @r10 & 0xF ^ $thread & -0x7 <> @r8 + @rbp)  { test_statement(0xD0F); @rax = $thread >> @rdx ^ (@rbx) & 0xC ^ @rdi ^ @rax ; } else { test_statement(0x9C8);  for (val = 10; @rax | @rsi >< @rax | @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  if (@rdx <> @rdx)  { test_statement(0xD6); } elsif (@r10 == @rsi) { test_statement(0x1B00); } else { test_statement(0x6CA); } }
$error$
$end$
156
 if (@r11 << @r11 << @r10 >< +@rsi << @r8 << 21 >> +@rdi & +~$proc << @r8)  { test_statement(0x11C7);  while  (@r13 & @rdi != @r13 & @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
157
 if (@r8 << @rsi ^ @rsp << $ip & $ip >> @rdx ^ @r13 >> @r11 ^ $proc ^ @r13 >= @rsi << $thread >> @rdx << 0y101 >> 0 >> 0n5 & @rsi >> 0y1110 | @rax << 15 >> 0y10010 >> -@rbp ^ @r11 & $teb)  { test_statement(0x1D68);  // /* This is a comment  } elsif (-@r10 < -@r10) { test_statement(0x1AE2);  This is a not opened comment */ ;  // /* This is a comment  }
$error$
$end$
158
 if (@rsi + $ip << ~$proc >> @r8 << 0x11 >> 0x3 | $teb << @rdi & @rsi & ~$thread & @r11 ^ @r12 >> $proc & @r12 >< @rsi + $ip << ~$proc >> @r8 << 0x11 >> 0x3 | $teb << @rdi & @rsi & ~$thread & @r11 ^ @r12 >> $proc & @r12)  { test_statement(0x81D); }
$error$
$end$
159
 if ($teb + $buffer >> -@rbp << 0y1001 & 0n19 >> $thread & 17 >> (@rsp) ^ ~0n0 >> @rdi >> $teb ^ @rbx & @r9 & $buffer ^ @rbp & 0x10 <= @r11 ^ ((-~@r12)) >> @r10 >> @r10 & 0n18 & @r12 & 0y1111 ^ $proc & 0n1 & $proc | 0n11 >> ~+@rdx >> @r9 ^ @r13 ^ 0n1 & @r8)  { test_statement(0x984);  while  (@r13 & (+$buffer) ^ $teb ^ @r9 ; @rax & @r10 | ~@r11 ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x24FA);  break; }
$error$
$end$
160
 if (@r13 + @rdi << @r11 <> ~@r8 + @rsi | $buffer << ~0n3 & @rsi >> @rsp)  { test_statement(0x16B6);  if (@rsp ^ ~$buffer <> @rsp ^ ~$buffer)  { test_statement(0x1FBA); } elsif (+(0x2) ^ $ip | 0y1101 <> +(0x2) ^ $ip | 0y1101) { test_statement(0x131F); } elsif (@rsp | @rsi(@rax) { test_statement(0x311); } elsif ($buffer = @r9) { test_statement(0xBAD); } elsif ($teb))0y10) { test_statement(0x1363); } else { test_statement(0x1A9B); } } elsif (@rbx << @rsp & ~@rsp ^ @rbx >> @rbx ^ 0y1100 & @r9 ^ (6) = 15 & @rbx >> @rbx) { test_statement(0x21DE); val = 0xC ^ @r12 ; }
$error$
$end$
161
 if (@rdi << @r11 << $buffer >> @r8 >> 0y10001 >> ~@r11 >= @r11 + @rbp & 20 >> @r8 >> 3 ^ @r12 << $ip ^ @rbx ^ @r10 & @r9 ^ @rdx ^ @rdx | @r12 >> @rbx & @r11 & ~$buffer)  { test_statement(0xD42); } else { test_statement(0x18DA); }
$error$
$end$
162
 if (0xC << (@rax))0xC << (@rax))  { test_statement(0x562); } elsif ($ip << @r11 <> @r13 << $ip >> ~$thread >> 0n17 & @rdx >> @r11 | @rbx >> @rbp ^ -@r9 & @r8 ^ $buffer) { test_statement(0x4A4); } else { test_statement(0x20CB);  for (; $teb | @r10 @rax ^ @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
163
 if (@r10 & @rsi & $teb >> 0 & @rdx | @rbx << (@rax) >> @rbx >> @r13 & ~0x9 >> @rbx @r10 & @rsi & $teb >> 0 & @rdx | @rbx << (@rax) >> @rbx >> @r13 & ~0x9 >> @rbx)  { test_statement(0xF73); } else { test_statement(0x8E0);  This is a not opened comment */  /* This is a comment */  while  (@rbp < 0x13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
164
 if (@r8 >> $buffer & 0y1001 << $proc >> ($proc) & 0y1001 & 0x9 | 0x10 ^ 21 >> @rdx ^ @r10 | @rbp & $buffer | ~@rbx | @r8 | @rsp $teb + +@r12 & @r12 << $thread | +@r11 >> @r11 & 0y1001 ^ 23 >> @r13 & @rdi ^ @r9 & 0y1110 ^ ~+@r13 ^ (-@r9) | ~$ip & +@r8 & @r12)  { test_statement(0x858); val = +$teb >> ~$buffer & $teb & 0n16 ^ 0 | 12 ^ -$thread ;  break;  This is a not opened comment */  for (val = +@rax; 0y1111 < 0y1111;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
165
 if (@rsi + -@rdi << -~6 << @rsp ^ @rax & $teb & 0n1 & @r11 ^ @rbp ^ 0y1010 & @rsi ^ 23 != @r8 + 0n5 << @rsi << @rdx >> @r11 << -@rax)  { test_statement(0xCFF); } elsif (@rax & @r10 >< @rax & @r10) { test_statement(0x24AF); } else { test_statement(0x450); }
$error$
$end$
166
 if ($ip + @rbp << 0xC ^ 0n8 << $proc >> ($thread) >> -@r12 ^ 0xA >> @rdi & @r11 & @r12 ^ 0y0 ! @rdi + $proc << $buffer << @rsp >> $ip << @r13 >> @rbp >> @r13 & 0y11 << @r12 >> ~0x4 ^ @r13 << @r11 >> @rdi)  { test_statement(0xC44); } elsif ($ip >> $proc <= $ip >> $proc) { test_statement(0x232F); }
$error$
$end$
167
 if (13 + @r9 & $proc << @rsi ^ (14) << $proc >> -@r13 >> $proc ^ (-($thread)) & +0y1001 & 0y10000 ^ @r12 ^ @r12 ^ @rbx | $teb << (~@rdi) >> $ip & $thread | @rax >> $thread & @rbp & +$thread | @r13 & @rsi ^ 0n12 ^ @rbx | 0n18 < 0n19 + 0x11)  { test_statement(0xF6F); @rax = $buffer & 0n2 & @r8 | @rax ; } else { test_statement(0x1D26); }
$error$
$end$
168
 if ((@rdx) + -@rbp & @rsi & ~@rbx >> -@r10 = @r10 >> @r10 ^ @r13 << $proc & +$proc | (@rdi) << @r13 >> $proc & @rbp >> $buffer & @r11 ^ $ip >> +0n15 ^ @rbp ^ @rbp ^ ($thread))  { test_statement(0x1F3A);  This is a not opened comment */  // /* This is a comment  }
$error$
$end$
169
 if (+-(@rsi) >> ~$buffer << @rsi >> $teb & @rdi << @r10 ^ @rax << 0y10 & +-@r9 >> @r10 | $proc << @r12 & @rbp & @rsi ^ 0y1101 >> ~@rsi | @r8 & -@r8 ^ 0n19 & +$thread | @r13 & @rsi ^ 0n8 > @r10 + $teb << @r11 & $thread & @r9 >> 0x0)  { test_statement(0x1E0A); } else { test_statement(0x20E3);  while  (-$buffer ! @rbp ^ ~$proc | (@rdx))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
170
 if (@rbp << 16 << 20 | @r12 << @rsi >> +$thread >> @rsi & $proc >> 20 & $teb ^ @rdi >> @r9 | $ip >> @r12 | 0xF & $thread <= 0xF << $teb << @rsp & @r8 << @rbx >> $teb ^ $proc << $proc >> @rbx & @r11 | (@r13))  { test_statement(0x21A9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 | @r8 ^ $buffer < -@rdi & @rbp ^ @r9 ^ @rbp) ;  while  (@rsi))@rax ^ @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif ((@rdx) >> @rbp >> @rdi ^ @r10 >> 0y0 & $proc ^ @r9 == (@rdx) >> @rbp >> @rdi ^ @r10 >> 0y0 & $proc ^ @r9) { test_statement(0x25E8); } elsif (@rsi & @rdi & @rdx | @r10 | @rdx ^ @rsp | $buffer | 6 >= @rsi & @rdi & @rdx | @r10 | @rdx ^ @rsp | $buffer | 6) { test_statement(0x2D0);  break; } else { test_statement(0x2133); }
$error$
$end$
171
 if (0x4 << --+@rdx << @r10 ! @r11 << @r11 << 0y10 & @r13 & @rsp & @rax | $teb << @rbp & 0xF >> 0n17 & @r9 | ~@r13 & @r9 & $proc ^ $teb & 0x13 ^ ~+~16 ^ @r11)  { test_statement(0x1920);  for (val = 10; @rbx((@rdi & +@r9 ^ @rdx | +@rbx ^ 0n18;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x335);  if (0n18 ^ $ip | $thread <= 0n18 ^ $ip | $thread)  { test_statement(0x135B); } else { test_statement(0x187F); }  for (val = 10; $proc | @rsp)@r10 | @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
172
 if ($teb + 0n7 >> (21) << 0y1100 >> @rsi & @rbp << @rsi | +@r8 << 0y10011 >> @rbp >> 10 ^ @r11 >> (@r9) & @r13 & @rax | @rsp | $proc & 0y111 ^ 0y1 | @rdx | @rdx > 0y1010 | @r11 & @r8 | @rax >> @r8 ^ 0y11 & $ip ^ @r11 | @rax | @rdx ^ $buffer)  { test_statement(0x4B3); }
$error$
$end$
173
 if (@r10 + $buffer ^ @rbx << @rsp >> -$buffer >> @rbp & $thread >> @rbx & $ip & @rdi ^ @r10 >> +@r13 ^ $ip & $teb ^ ($thread) >= +$buffer + ~$teb | -@r13 << @r10 >> @r12 >> (@rbp) & $proc >> +@rsp & @r10 & 0n9 ^ 0n3)  { test_statement(0x21EF); } else { test_statement(0x505); }
$error$
$end$
174
 if (@r10 ^ +@rbx << $proc & +@r11 >> @r8 = @r10 ^ +@rbx << $proc & +@r11 >> @r8)  { test_statement(0x23BA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip | @rax | @r12 != $buffer & ~@rax ^ +@rax | @r11 | @r8 | @rsi) ; } else { test_statement(0x26F2); }
$error$
$end$
175
 if (@r9 + @rdx >> @r9 ^ +0y10001 >> @r12 & -@rbx >> 0y1010 & -@rsp | $teb << (0n10) <= @r8 + (@rbx) << 0x12 << $teb >> @rbp << @r10 >> @rbp | @r13 << @rbp >> 0n7 >> $ip ^ @r8 >> $teb)  { test_statement(0x474);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ^ $thread | @rsp ^ +($proc) | @rdx)22 & +$proc | @rdx | $proc | 0n11) ; } elsif (@r9 << $proc >> @rbp & 0xC >> 16 > @rdi << @r8 & 4 >> ~$ip & 0y1010 & $teb ^ +$ip >> +0y1110) { test_statement(0x18AC); } elsif (@rbp & @r11 ^ $buffer ; @rbp & @r11 ^ $buffer) { test_statement(0x17F5); }
$error$
$end$
176
 if (@rbx + @r8 ^ @r13 << $ip >> @r11 & 0x10 >> +0n18 ^ $ip >> $thread ^ @r12 & @rsp | @r9 >> @rax & @r12 >> @rdi & @rsi | 11 >> 0xF & @r8 & $thread < +$teb + @rsi >> $proc & $thread << $buffer >> @r11 >> @r11 & $buffer ^ @rsp >> $thread >> $thread ^ @rsi)  { test_statement(0xC07);  break; } else { test_statement(0x1EC9);  break; }
$error$
$end$
177
 if (@rsi & @r11 << @r10 >> (@rdi) >> @r12 ^ $thread << @rbx >> $buffer >> @rdx & @r13 >> @rsp & @rdx & -@r9 <> @rsi & @r11 << @r10 >> (@rdi) >> @r12 ^ $thread << @rbx >> $buffer >> @rdx & @r13 >> @rsp & @rdx & -@r9)  { test_statement(0x18A7);  This is a not opened comment */ }
$error$
$end$
178
 if ($ip >> @r13 << --$buffer & ((@rdi)) << @rax & $proc ^ @rsi << @r13 >> $teb >> +4 & $thread & $ip ^ @rsi >> $ip ^ $ip & ~$buffer ^ @r9(@r10 + -$proc)  { test_statement(0x9CC); } elsif (0y10 >> $thread | 0y1011 >> @rbx & @r10 | @r11 & @rbx != ($proc) << @r11 ^ 0xE ^ 0y1) { test_statement(0x262B); ; } elsif ($proc & @r10 & $teb ^ @r13 & @r10 > @rbp >> @r11) { test_statement(0x56); } elsif (+@rbp & 17 ^ +@r8 ^ @rsp < +@rbp & 17 ^ +@r8 ^ @rsp) { test_statement(0xA44); } elsif (@r8 ^ -@r8 | $teb | -@r12 ! @r8 ^ -@r8 | $teb | -@r12) { test_statement(0xC87); } else { test_statement(0x26A); }
$error$
$end$
179
 if ($thread + @r13(($thread + @r13)  { test_statement(0x1515);  // /* This is a comment  } elsif (12 << $proc <> 12 << $proc) { test_statement(0xD0A); } elsif (0n11 & @r12 & @rsi ^ @rax | @rbp | $buffer ^ $thread | 5))0y1010 ^ $teb) { test_statement(0xCF0);  for (; $thread | $proc < $ip | @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  This is a not opened comment */ }
$error$
$end$
180
 if (6 + @rax & @rbp << $proc | $ip << @rsi & +@r8 >> @rdi ^ @rbx & @rsi ^ @rsp & @r12 @r9 + $buffer >> @r8 << @rax >> @r12 & -@rbx ^ @rbp >> @r11 & $thread ^ @r13 >> @r9 ^ $teb | @rdi << +@r8 >> @r9 >> 0x6 ^ @r12 ^ $proc & 0y1 ^ @r10)  { test_statement(0x220F);  This is a not opened comment */  if ((0xD) ^ $ip ; (0xD) ^ $ip)  { test_statement(0x246D); } } elsif ($buffer >< $thread << $proc >> @r10 >> @r12 & @r8 >> @rdi | 0n15 ^ -0n8 & 15 ^ @rbp | @r12 & @r12 ^ -+0y0) { test_statement(0xA0F);  if (-@r10 >= @r13)  { test_statement(0x141A); } elsif (3 | 0n15 ; 3 | 0n15) { test_statement(0x492); } elsif ($teb != 21) { test_statement(0x1802); } else { test_statement(0xC4C); } @rax = $thread | @rdi | @r9 ;  /* This is a not closed comment } elsif (@r9 & @rbp & 0x12 ^ 0n10 & 0n5 ^ @rsp | @r13 & ~@r12 ^ @rdi ^ @rsi = $ip >> @r8) { test_statement(0x16ED); } elsif ($ip ^ @rsi | 0n19 ^ -$proc | @rdx | @rbp)@rbp & @rbx | 0y111 | @rsi | @rsp) { test_statement(0xE7E);  // /* This is a comment  } elsif (@rsi | @rdx)@rsi | @rdx) { test_statement(0x1F8C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread != $thread) ; } elsif (@r9 < 0y100 | $buffer) { test_statement(0x13D4); } else { test_statement(0xCB6); }
$error$
$end$
181
 if ((@r12) + @r13 << +0x12 << @rsi ^ @rdx << @r10 >> $teb >> @r11 & @r13 & $proc))3 >> @r9 >> 0x6 >> $thread ^ +$teb ^ 0y1010 >> $ip ^ (@rbp))  { test_statement(0xC1A); } elsif ($proc << ~0n3 >> $thread & 0n18 ^ ((@rax)) & +($thread) & 22 ^ -+$buffer & @r13 != $proc << ~0n3 >> $thread & 0n18 ^ ((@rax)) & +($thread) & 22 ^ -+$buffer & @r13) { test_statement(0x1F02); } else { test_statement(0x1C06);  if (@rdi | @r12 | @rbx >= @r12 ^ 0n9)  { test_statement(0x7BA); }  if (@r10 | 0y10011 <> 2)  { test_statement(0x124F); } elsif ($teb > ~0x8) { test_statement(0x1A11); }  for (val = 10; ~@rsi < @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  This is a not opened comment */  /* This is a not closed comment }
$error$
$end$
182
 if (5 + $teb & @r11 << @r12 & +@rdx >> 0x6 @rbx << $ip ^ +@r11 & @rbp & 14 ^ @rbp >> @rbp & @r12 | @rax | $ip >> (@r11) ^ 0x0 & @rbx ^ @r12)  { test_statement(0x22BD); }
$error$
$end$
183
 if (@r9 & @rdx << 0n3 | @rax ^ @r11 ^ $thread & -@r13 ^ 0xB ^ @rbp | 0x7 >> @r13 | ~0y1110 ^ @rbp @r9 & @rdx << 0n3 | @rax ^ @r11 ^ $thread & -@r13 ^ 0xB ^ @rbp | 0x7 >> @r13 | ~0y1110 ^ @rbp)  { test_statement(0x965); ;  if (@rsp ^ $buffer((@rsp ^ $buffer)  { test_statement(0x93E); } elsif ((-12) | ~@r11 <> (-12) | ~@r11) { test_statement(0x13DC); } elsif (@r12 != @r11) { test_statement(0x14E); } }
$error$
$end$
184
 if (@rsi + (@rdx) << @rbp & @r8 << @rdi >> 0xA & $proc ^ +@r8 << $thread & 0n0 >> @r13 | @rsp >> @r8 >> @rbx & @r9 >> (@rbp) | ~@rax >> (@rbx) & @r8 & 0n17 | $thread >< @rdi + $ip << -22 >> ~(@rsi) << @rdi >> @rsp & 0x3 << @rsp)  { test_statement(0x26F);  This is a not opened comment */  while  (-@r9 ^ -@rdx | $proc | @rbp))-@r9 ^ -@rdx | $proc | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  /* This is a comment */  /* This is a not closed comment  for (; -@r13 ! -@r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x240); }
$error$
$end$
185
 if (~@r12 + @r11 << @rax >> @rbp << @r11 ^ $buffer << -0n4 ^ 10 | 0n18 << @r9 & @rdi & 0x1 & @rsi @rbp << -$buffer ^ @r12 << $ip >> @r11)  { test_statement(0x2F3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread & ~21 <> 0n3 ^ $thread ^ -@r10) ; ; } else { test_statement(0x222A); }
$error$
$end$
186
 if (@r8 ^ $buffer >> @rax & $buffer >> @r8 <= $ip << @r10 >> @r13 & 0n19 >> @rdi >> $buffer ^ @r11 >> 3 & (0x2) >> @r13 ^ -$proc >> $thread ^ @r10 & @r13)  { test_statement(0x1DBB); } else { test_statement(0x9BD); }
$error$
$end$
187
 if (@rdx + $thread << 0n15 >> @rdi << @r11 ^ 2 >> 0x8 >> @rsi ^ $proc >> ~(@r12) & $ip & @r8 ^ @rax ^ $teb ; @rdx + $thread << 0n15 >> @rdi << @r11 ^ 2 >> 0x8 >> @rsi ^ $proc >> ~(@r12) & $ip & @r8 ^ @rax ^ $teb)  { test_statement(0x1393); } else { test_statement(0x2466); }
$error$
$end$
188
 if (@rbp << -@r8 >> $proc << $buffer >< @rbp << -@r8 >> $proc << $buffer)  { test_statement(0x1C3B);  /* This is a not closed comment } else { test_statement(0x4C4);  if ($proc | $proc | -@rbx == $proc | $proc | -@rbx)  { test_statement(0xDC0); }  if (0y101 | @r8 < 0y101 | @r8)  { test_statement(0x2160); } }
$error$
$end$
189
 if (@rax << @rsi >> @r12 << $ip >> $ip | @rax | -~@rsi & $thread & $teb | 0x12 & @r10 | @rbx ^ $proc | -@r8 = 0xF + @rsi << @r12 << @r13 ^ ~@r12 ^ $buffer >> @r10 & @rsp & @r10 | +~$thread >> @r10 | 0 >> 0n11 & ~0x7 ^ @rsi & 0n2)  { test_statement(0x196E);  // /* This is a comment   /* This is a comment */ }
$error$
$end$
191
 if ($ip << 0y111 & @r12 << $ip >> $teb & @rsp >> @r11 & @rbx | @r12 ^ @rsi ^ $ip & @r13 | @rsi ^ @rdx & (@r12))$ip << 0y111 & @r12 << $ip >> $teb & @rsp >> @r11 & @rbx | @r12 ^ @rsi ^ $ip & @r13 | @rsi ^ @rdx & (@r12))  { test_statement(0xD8B);  This is a not opened comment */ ; } else { test_statement(0x1BEF);  if ($ip < @rdx | 16 | @r10)  { test_statement(0x1430); } else { test_statement(0x1C00); }  for (val = 10; +@r9 | $proc == +@r9 | $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
192
 if ($teb << -+$buffer << (-@rsp) >> 0x8 << $teb >> +@r13 ^ 16 << @rbp >> $buffer >> +@r10 | @rbp >> 0y10000 ^ $proc >> @r13 & $buffer & @r8 ^ @rax ^ @rsi <= -@rbx + @r9 | $teb << @r13 >> $thread & $proc >> $teb & $thread & -0x1 ^ 7 >> @rsp | @rbx >> -0x8 & 0n3)  { test_statement(0x1DBD); } else { test_statement(0x23A7); }
$error$
$end$
193
 if ($proc + @rsp << $ip << @rsi >> 0n8 << @rsp & @r8 << $teb >> @rbx >> $thread & 0n17 >> @rsi & @r13 & $proc | $ip << @r13 >> @r12 >> @rsi ^ 0y1001 & @rsi ^ @r9)@rbp + $proc << @r10 << @rdi >> @r13 << @r11 >> ~@r13 & @r12 << +0y1000 >> @r8)  { test_statement(0xC59); ; } else { test_statement(0x1F73); }
$error$
$end$
194
 if (@rdx >> @rdx << $teb >> @rsp | @rbx << $buffer & @rbx & @rsp @r8 + -@r9 >> @rdi << +$teb | @r10 & @rdi)  { test_statement(0x526);  if ($ip & $proc ^ $proc > @r12 ^ @r9 ^ @rbx | @rbx | 0n5)  { test_statement(0x1F63); } elsif (~@rsi ^ @r13 != $teb | ~22 | @rdx) { test_statement(0x18A1); }  This is a not opened comment */ } elsif (@r8 << @r9 ^ @rsi & 3 | @rbx & @rsi & $thread ^ @rdx & $ip ^ @r10 < @r8 << @r9 ^ @rsi & 3 | @rbx & @rsi & $thread ^ @rdx & $ip ^ @r10) { test_statement(0x26F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax | @rax | $proc >= @rax | @rax | $proc) ; } elsif (0xF >> @rbx & @r8 | @r9 & @r10 ^ 0n8 ^ @rsi >= 0xF >> @rbx & @r8 | @r9 & @r10 ^ 0n8 ^ @rsi) { test_statement(0x16D2); } else { test_statement(0xF0B);  break; }
$error$
$end$
195
 if (~@rax >> @rdi << @rax >> 4 >> 15 & @r11 >> @rdx & @r11 | @r8 << @rdi >> @rsp & @r12 < +@r11 >> @r9 >> @rax)  { test_statement(0x1C87);  if ($ip & $proc ^ (@r11)))@rsp ^ $buffer | $buffer ^ @rdi)  { test_statement(0x675); } }
$error$
$end$
196
 if (~$teb << $proc((@rsp << 0xE >> @rsp | 0n3 << @rsp & $buffer >> @rsi)  { test_statement(0x1009); } elsif (~@r10 << $teb >> 0xA | @r9 ^ ~@rax & 0n14 ^ 0x7 ^ @r8 | @r13 | @r10 ^ $thread | @r9 <> @rsp << @rsi & 0n6 >> @r13 & 0x11 & +@rbx ^ $buffer >> 1 & @rdi ^ 0xF & 0x1 ^ $proc) { test_statement(0x93B);  for (val = 10; @rdi | @r10 | -0n4 == $ip ^ (@r11);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
197
 if (17 + $buffer >> $proc << $proc >> +$buffer >> (0xB) ^ -@rsp & 0n10 >> $buffer ^ ~+$teb >> 0n16 ^ @rax ^ ~0n16 ^ @rdx | @r12 << @r13 >> @r11 >> (@rsp) ^ @rdi >> 0n18 | @rdi >> @rdi ^ @r13 & @r9 | 0y10 & @r8 ^ @r11 | @r9 ^ @r13 | @r13 | @r12 < 0x1 + @r12 << @r8 << @r10 >> $teb << @rsi)  { test_statement(0x12E1);  /* This is a not closed comment  // /* This is a comment   /* This is a comment */ } elsif ($ip << @rsi >> @rbx & @rsp & ($thread) ^ $proc >> @rbp = $ip << @rsi >> @rbx & @rsp & ($thread) ^ $proc >> @rbp) { test_statement(0x12FA); } else { test_statement(0xE81);  /* This is a not closed comment }
$error$
$end$
198
 if (@r13 << @r9 << $thread & @r9 << ~@rdi >> @rbp >> @rbx ^ $proc << @r12 >> $teb >> @rdx < @rbp >> 0x7 << @r13 >> (@r8) >> @rbx)  { test_statement(0x221D); } elsif (0y1111 << @r10 >> $ip & 0x1 & @rbp & ~$ip ^ @rax & -@r11 & @rsp ^ @rdx >= +0x6 << 0y10010 >> @r9 & @rdi ^ @rax & +~@rsi) { test_statement(0x18C); @rax = 0y1000 ;  break;  // /* This is a comment   if (0n6 > 0n6)  { test_statement(0x1858); } elsif (@r13 >< @r13) { test_statement(0x1687); } else { test_statement(0x254C); }  for (; @r10(@r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
199
 if ($thread + @rdx >> --@rsi >> -@rax | @r10 << $thread != $buffer + @rbp << @r8 ^ @rdx | +-~@rdx & -0y1001 & @r13 ^ @rdx >> +@rdi & 0n7 & @r11 ^ @rsi & @rdx ^ @rbp)  { test_statement(0xC8);  if (0xC | @r13 ^ @r8 | $proc <= -($buffer) & ~@r8 ^ 21 ^ @r8)  { test_statement(0x1EB3); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer | @rax | @rsi <> $buffer | @rax | @rsi) ;  /* This is a comment */ ;  /* This is a comment */  while  (@r13(@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb < @rsp) ; }
$error$
$end$
200
 if (~$proc << @rsp & @rsi << 0y1100 & +11 = -0x8 & @rsp & $thread & @rbx & $proc ^ @rsp << @rsi >> ~@rbx & $proc >> @rsi | $proc & @rax & @r9 & @r8 | 7 | (+$thread) & @r8 ^ @r13 ^ $thread)  { test_statement(0x2409); } elsif (@r12 << 0x10 = -@rsi ^ ~@r9 >> ($buffer) ^ ~@rsi & 0n10) { test_statement(0x12DB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@rbp) ^ $ip < 0x5 | $ip | @rsi) ;  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
201
 if (+@r9 >> (@r11) >> @rbp >> @r11 & $thread >> @rsp >> @rax & @rbx >> (0y1001) ^ 0y110 << @rbx >> 23 ^ $proc >> +(0y1101) & @rdi & @rbp = +@r9 >> (@r11) >> @rbp >> @r11 & $thread >> @rsp >> @rax & @rbx >> (0y1001) ^ 0y110 << @rbx >> 23 ^ $proc >> +(0y1101) & @rdi & @rbp)  { test_statement(0x1E10);  break;  while  (@r9 ^ @r10 | @rbp = @rsp | 0y1111 | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 & $proc >> $ip & @rax & @rbx ^ $proc >> ~@rbx & $thread >= @rsi ^ @rsp >> @rbp & @r8 ^ 12 & $ip) { test_statement(0x144F); } else { test_statement(0x78D); }
$error$
$end$
202
 if (@rbp >> -@rsi << @r9 >> @rsp >> @rdx & @r11 << @rax & 0x9 >> 0xD & 0xA & @rdx ^ @rsp << @r12 | 20((@rax + @rbp << @rax << @rsi ^ @rdi << @r8 >> (-$proc) ^ $ip & @r9 & (@rbx))  { test_statement(0x1B99);  /* This is a comment */  // /* This is a comment  } elsif (0xC >> 0x0 >> ~@r10 & 21 >> 0x10 & $teb | @rdx ^ @r8 & (0y1010) != @rdx & 0y111 >> @r11 ^ -@r9 ^ @rdx & @rbx ^ $buffer ^ @rbx) { test_statement(0x141D);  // /* This is a comment  } else { test_statement(0x173A);  /* This is a comment */ }
$error$
$end$
203
 if (0n13 + @r13 & @rsp << @rbx & $proc >> 0x13 ^ @rsi >> @rbx & ~$buffer >> @r10 ; -@rbx & @r12 << @rdx >> @rax >> @r12 & ~@rsi)  { test_statement(0x1580); }
$error$
$end$
204
 if (~+$thread + @rbx & @rax >> @r13 >> @r9 | @rax >> @rdi >> $buffer & 0n3 | @rbx >> 0y1 & @r9 & @rsi ^ @rax & $buffer | @rax ^ @rbx | ~$proc ^ @rdx <= $thread + @r10 << @rdi << @r13 >> @rsi << @r13 >> @r9)  { test_statement(0x1713);  /* This is a comment */  /* This is a comment */ } elsif (@rsi << $buffer < $buffer) { test_statement(0xFD4);  This is a not opened comment */ } elsif (0x12 ^ 0x1 & $proc ^ @r10 ^ (@r10) = 0x12 ^ 0x1 & $proc ^ @r10 ^ (@r10)) { test_statement(0x252); } elsif (($thread) & @rax $proc & @rsi ^ @rdx ^ @r13) { test_statement(0x15D8);  while  (@r13 != @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 ^ @rsi == $buffer ^ 0y1010) { test_statement(0xF68); } else { test_statement(0x2444);  while  (@rax ^ @rbx < @r8 ^ @r10 | ~@rdx | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
205
 if (~@rax + @rdx << -22 << 0n5 >> 0y1101 >> @rdx ^ $ip << 15 >> @r11 >> @rbp & @rdx >> @rsi & -$proc & @rbp ^ 0x12 & @rbx ^ $ip & 0y10001 ^ +@rsp > ~@rax + @rdx << -22 << 0n5 >> 0y1101 >> @rdx ^ $ip << 15 >> @r11 >> @rbp & @rdx >> @rsi & -$proc & @rbp ^ 0x12 & @rbx ^ $ip & 0y10001 ^ +@rsp)  { test_statement(0x1432); }
$error$
$end$
206
 if (@rdx + @rsi << ~13 & @rsp << $ip & @rbx & 13 & $ip @rdx + @rsi << ~13 & @rsp << $ip & @rbx & 13 & $ip)  { test_statement(0x12C7); } else { test_statement(0x284);  /* This is a not closed comment }
$error$
$end$
207
 if (@r10 ^ @rbx << @r9 | @r9 << ~@r10 >> @rax ^ @r13 >> @r11 ^ @rax | @r12 >> @rsp | $teb ^ 0n7 | @rdx ^ $proc | @rsi | @r13))@rdx << 14 << @rsp >> 0x5 >> @rsi >> ~@rbx & @r8 << $teb & $thread & $ip & @r8)  { test_statement(0x114E); @rax = -@r12 & ~0n10 & 0y101 | -+$ip ^ $buffer ^ @r11 | $ip ^ ~$buffer ;  /* This is a not closed comment }
$error$
$end$
208
 if (@rdi + 0x12 << @rdi >> @r9 >> $teb >> @r10 @r8 + 0n14 << @rbp << @r8 ^ @r9 | @r9 << @rax ^ +$teb & 0n9)  { test_statement(0x1968); } elsif (@r11 & 0y111 ^ (@r8) >> $teb & $thread & @r9 >= @r11 >> @rdi >> @rdx | -$ip ^ @rbx & ~@r13) { test_statement(0x212D); } elsif (~~@r8 >> @rdi < ~~@r8 >> @rdi) { test_statement(0x1959); val = (@rbp) ^ @r11 ;  for (val = 10; 0n3((@rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1A7C);  if (@r12 ^ +0y100 | @rdx <> @r12 ^ +0y100 | @rdx)  { test_statement(0xE06); }  /* This is a comment */  if ($ip))@r11)  { test_statement(0x1702); } }
$error$
$end$
209
 if ($buffer >> $ip >> @rax >> +$teb & @rdx << 1 >> @r8 & @r8 >> +(-@rbx) != -@rdx + (+@r12) & @rsp << @r13 ^ $thread << @rbp >> -@r8 >> 0y1011 & +@r8 ^ $proc >> @r12 | @rax << @r12 & (10) ^ -$buffer >> 0y0 & @r11 & 1)  { test_statement(0x20F9);  /* This is a comment */  This is a not opened comment */ val = +$thread ^ $thread ; }
$error$
$end$
210
 if (@r12 + +@rsi >> @rax << (+@rsi) >> @rax >> @r10 & @r12 << 21 >> @r9 >> @rsp & -14 >> @r8 & -0n4 | @rax >> 0y1100 >> @r10 | @r9 ^ $thread & $ip ^ @rbp ^ (0x11) | @r11 & 22 ^ 4 > 0y10000 + @r10 << @rbp << $teb >> @rax)  { test_statement(0x987); ; }
$error$
$end$
211
 if ($thread << @rsi << $ip ^ @r13 & 0n7 >> $ip & $teb | $teb >> (@r9) >> @rbx & $proc >> @r8 | (0x11) >> $buffer | @rdx & @rax ^ 6 ^ $proc($thread << @rsi << $ip ^ @r13 & 0n7 >> $ip & $teb | $teb >> (@r9) >> @rbx & $proc >> @r8 | (0x11) >> $buffer | @rdx & @rax ^ 6 ^ $proc)  { test_statement(0x1751); } elsif (($teb) & 0y1111 >> @rdx <> $thread << @r11 >> ~$proc & $teb & $buffer ^ $teb >> $ip ^ 0x8) { test_statement(0x25D8); } elsif (~@r9 & $thread & 12 @rbx >> $thread & @rbx & 0x10 ^ @r10 ^ $buffer | @rax ^ 14 | ~@rsp ^ @rsp) { test_statement(0x8EB);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 ! +0y1000) ; } elsif (@rbx & 0y110))@rdx ^ 0n14 ^ @rax | $buffer | +@r10) { test_statement(0x43A); }
$error$
$end$
212
 if (~@r10 << $teb & ~0n16 & @rbx >> @r12 & 23 >< ~@r10 << $teb & ~0n16 & @rbx >> @r12 & 23)  { test_statement(0x657); }
$error$
$end$
213
 if (~@rsp << @rdx << @r11 >> @r13 >> 0y10000 & $ip << -@rbx >> @r10 & (@rdi) >> @r9 & @r11 | (@rsp) < @r13 + ~10 << +@rdx >> (@rbx) << 14 ^ 0y10000 << $proc >> @r9 & ~@r10 >> @r12 | (@rdx) >> 0n7 >> @rsp)  { test_statement(0x10); } elsif (0n0 << @r11 >> 0xA >> @r11 ; 0n0 << @r11 >> 0xA >> @r11) { test_statement(0x176E); } else { test_statement(0x9D1);  break; }
$error$
$end$
214
 if (@r8 + @r8 ^ 0n17 & @rbp >> @rbp ! @r11 + @rbx << (@r12) >> @r13 << $proc >> $teb >> 0y100 & 0x2 << @r9 & ~@r12 & +-@r11 & @r11)  { test_statement(0x38); } elsif (@rsi << @rax >> (+@rbx) >> $ip & @r12 & @r8 | @rbx ^ $ip ^ @rsp | 14 ^ @rsp ^ @rbp))~-$thread << 0y1001) { test_statement(0xA2D);  // /* This is a comment  } elsif ($thread >> @rsp ^ 0x7 ^ @rdi | @r12 & @r8 ^ $teb @r10 & 0x8 & @rsp | 0n17 | $ip) { test_statement(0xF86); } elsif (@rbx @rbx) { test_statement(0x1889);  break; }
$error$
$end$
215
 if (@r9(@r8 + $proc << @rdi << 0x1 >> 0x1 & @rbp << $proc | @r12 << @r9 & @rsp >> 1)  { test_statement(0x5E4);  /* This is a not closed comment  if ($proc ^ @rdi))$proc ^ @rdi)  { test_statement(0x1561); } elsif (@rdx != @rdi) { test_statement(0x123E); } } elsif (0n10 & @r9 & @rbx ^ @r9 >> @r8 & 11 & 16 ^ -@r8 & -@r8 | @r9 & @r10 | ~@rsp & 0n12((0n10 & @r9 & @rbx ^ @r9 >> @r8 & 11 & 16 ^ -@r8 & -@r8 | @r9 & @r10 | ~@rsp & 0n12) { test_statement(0xA43); ; }
$error$
$end$
216
 if (@r11 >> @r12 << $proc >> $buffer ^ @r8 & @rbp >> @r8 & @r12 & @r8 ^ @r8 >> @rsi & -@rbp & 3)-@r13 + @r8 << -@rbp << @r11 & @r11 << $proc >> @rdi ^ @r11)  { test_statement(0x219E);  break;  break;  // /* This is a comment   This is a not opened comment */  break;  This is a not opened comment */ } elsif (@r11 >> @r13 | 0n1 & $ip & @rbp != (@r11) >> @rdx ^ +@rbp >> (+@r12) & -@rdi) { test_statement(0x204B); } elsif (-(@r10) | $teb | @r12 ^ @rbx | @rbp | @rbp @rdi >> @rbx ^ @r8 & 3 ^ 21 | $buffer | $thread) { test_statement(0x13B1);  while  (~@rdi == @r9 | -@rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x139D); }
$error$
$end$
217
 if ($buffer + @rsi >> @rbp >> +@rsi >> -@rdx ! $buffer + @rsi >> @rbp >> +@rsi >> -@rdx)  { test_statement(0x243B); val = $proc >> @rdi | @r8 & @rsp ^ 0n9 ; } elsif (($ip) ^ @r13 & @rsp ^ 0xC ^ $thread | @rdx & 0x12 & $buffer ^ (@rbp) | @rax & @rax ^ +@rdi ^ @rdi | @rbx >< 0x0 >> $proc ^ 0x0 & 0xA ^ @rsp & 0y1011 ^ @rbx ^ @rsp) { test_statement(0x21DC); }
$error$
$end$
218
 if (@r12 + @rsp((-$teb << @rsp >> @rdx ^ @rdx ^ @r9 & -$teb ^ $thread & @r8 | @r12 << @rax & 2 >> 0n9 & $teb | 0x0 >> ~-@rsp)  { test_statement(0xC79);  This is a not opened comment */ } elsif ((0n12) ^ @rsp >> @rsi ! @r9 << @rbp >> 1 >> @r11) { test_statement(0x286);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n12 | $teb((@r13 ^ $proc) ; } else { test_statement(0x93F);  break;  for (@rax = @rdx | @rdi; +@r13)+@r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip <= (+-0y1100)) ;  while  (6 != 6)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi >< @rax) ;  /* This is a not closed comment  This is a not opened comment */ }
$error$
$end$
219
 if (@rbx + 0x8 | @r10 << +0y1101 >> $buffer & @r9 >> @rbx ^ 22 & @rsp & @rbp ^ @r12 ^ 0x3 $teb ^ @r11 << @rdi >> 0y1101 >> $ip & -$ip ^ @rax & @r11 & 0y1100 | $proc << $thread >> $buffer & @rsp & @r13)  { test_statement(0x2455);  /* This is a comment */ }
$error$
$end$
220
 if (@r13 + +$proc >> $thread << @rsi = @rbp + @rbp)  { test_statement(0x6D5); }
$error$
$end$
221
 if (@rdx << @rax >> (0x2) | @rsi >> @rsi & 0x5 & $thread & @rsp | @rsi ^ 0y1001 & @r12 | $buffer <= $ip + @r8 << 13)  { test_statement(0x329); } elsif (@rsp & (@r12) >> 0y111 ^ 15 >> @rdx >< @r9 << 4 >> @r10 >> ~@r10 & 0xB ^ @rsi ^ @r12 | @rax) { test_statement(0x9B1); } elsif (@r10 & @r8 | 20 & -@rsp | @r8 ^ @rdi > @r13 >> @rdi ^ @rdx | 0y10010 & $proc ^ $teb) { test_statement(0xBB4); } elsif (@r10 | @rdx < @r10 | @rdx) { test_statement(0x2509); }
$error$
$end$
222
 if (@rdi + @r12 & ~@rdi << $proc >> @r8 & @r10 ^ (@r9) << @r8 & 0n5 >> @rsi & 15 & $proc <= $ip << @rsp & -0y10000 << +@rbp >> ~$proc & @rdi >> @r8 & @r8 & @r13)  { test_statement(0x1297);  break; } else { test_statement(0x2626);  /* This is a comment */ }
$error$
$end$
223
 if ($proc + 0xA << +$teb >> @rdx << @rbx & @rdx & @rsi & @r10 & @r11 | @r12 << ++0x5 & $thread & @rbp & 0n6 | $ip >> @r10 | $ip & @r10 ^ 16 ^ 0n16 | @r9 ^ +-@rsp ; @r9 << @rax ^ @rsi >> @r9 >> @r10)  { test_statement(0x14FA);  This is a not opened comment */  if (@rbx != @r11)  { test_statement(0xC64); } elsif (@rdi >< @rsi | @rsi) { test_statement(0x146C); } elsif (@r11 ; $buffer) { test_statement(0x1D5E); } elsif (@r13 >< @r9) { test_statement(0x127C); } } elsif (@r12 << @rdi >> 0n18 ^ ($proc) >> $thread & $ip & $proc > $ip >> $proc | @rsp & @r8 ^ $proc | @rdi & $proc | @r9 | $ip | @rax) { test_statement(0x2212);  break; }
$error$
$end$
224
 if (@r12 + @rdx << $proc >> 0y10010 << +@rbp ^ @r10 << 17 >> @rsi >> @r11 | @rdi << (@r9) >> $thread >> +@r10 & @rbp >> 0y1 ^ @r13 >> @r9 ^ $thread & +@r11 ^ @r13 | @rdx ^ @r9 & @rsp | +@r8 <= @r8 >> $ip << @r13 >> ~@r13 >> ~$teb & @r10 << $ip & @rdi & $buffer | @r10 << $thread & 0y101 & +23 ^ @rsp & @rbx | 0n9 >> 0n7 | 4 ^ @r13)  { test_statement(0x1CD3);  This is a not opened comment */ } elsif (@rax << -0xD >> 0y11 >> 0n8 & (0y10001) >> $teb ^ @rdi >> $teb & @rdi & @rbx)@rax << -0xD >> 0y11 >> 0n8 & (0y10001) >> $teb ^ @rdi >> $teb & @rdi & @rbx) { test_statement(0x1ABA); } elsif ($buffer($buffer) { test_statement(0x12CC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0xE | $ip > @r10) ; } elsif (@rbx ^ 0y100 ^ @rdi)@rbx ^ 0y100 ^ @rdi) { test_statement(0x213A); } else { test_statement(0x1842); }
$error$
$end$
225
 if (0y10001 + @rax << $buffer ^ @r8 >> @r11 & @rsp & @rax | $thread << @r13 >< $proc + $teb << 0x11 << 0x12 | 0y111 << $proc ^ @rdx >> ~@rdx & +@r12 & 0y10)  { test_statement(0x233D); }
$error$
$end$
226
 if ($buffer + @rbx((@rdx >> @r10 << @rdx ^ 0xA >> $proc >> @rbx ^ +-$thread & @rsp ^ +@r12 | $ip & 0y1111 >> @rbx & @rdx)  { test_statement(0x61D);  // /* This is a comment   for (val = 10; @rdx | $proc | @r13(~$thread ^ $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
227
 if (@r8 & 0x1 << @r10 >> @r10 & 6 >> @rbx ^ $teb >> @rsp(@r8 & 0x1 << @r10 >> @r10 & 6 >> @rbx ^ $teb >> @rsp)  { test_statement(0x54A); @rax = @r12 & ~@r11 ^ -0xE & $ip ^ @rdx ; @rax = @rbp & @r12 ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 <= @rdi | @r11) ;  if (@r10))@r10)  { test_statement(0x13DC); }  // /* This is a comment   /* This is a not closed comment }
$error$
$end$
228
 if (@r11 << @r9 << $ip & ~~7 @r11 << @r9 << $ip & ~~7)  { test_statement(0x142E); } elsif (-@rbx << 0x3 & @r10 >> @rdi & @rdx | @rax | $thread & 22 | @rsp ^ $buffer -@rbx << 0x3 & @r10 >> @rdi & @rdx | @rax | $thread & 22 | @rsp ^ $buffer) { test_statement(0xC83); } elsif ($proc >> 0 ^ @rax & @rsp ^ @rax ^ @r11 > +@r9 >> @r9) { test_statement(0x21C6);  // /* This is a comment   // /* This is a comment  } elsif (@r12))0xE | $buffer) { test_statement(0x239E);  while  (@rbp <> @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  while  (@r13((@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  for (; @rsi <> @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (22 | @rbp != ~@r8 ^ @rbp) { test_statement(0x11E0);  /* This is a comment */ } else { test_statement(0x10F);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb | @r9 < ~@rax | $teb) ; }
$error$
$end$
229
 if (-0y10000 ^ (0x0) >> 2 & $thread >> @r10 ^ @r9 >> 0xD & 0y1111 ^ 0x10 & +$teb != @r12 >> @rbp << @r13 >> 21 >> $buffer ^ @r8 >> @r9 >> @r10 | @rbx << @rax & @rbx)  { test_statement(0x45C);  // /* This is a comment   if ($buffer <> @r11)  { test_statement(0x628); } else { test_statement(0x2340); } } elsif (@r11 >> $teb >> (@rdi) ^ -(@r12) & @rdx & 0n12 | @rsi | $ip | $buffer ^ ~@r8 | @r8 < @r9 | $buffer >> 0xD & @r11) { test_statement(0xC7); } elsif (@rdx & $teb ^ @rdi < 4 | @rsp & @r13 ^ 0n19 ^ $proc | @rdi ^ @rbp | $buffer) { test_statement(0xFED); }
$error$
$end$
230
 if (@r11 + @rdx >> -~$teb << $teb ^ $buffer << @r12 | 0y1 >> @rsp & 0n10 ^ @r11 ^ (@rbp) | @r11 & @r10 ^ 0x11 & @rax = -@rdx & @r13 << +@rbx >> @r13 >> 0n6 & 10 >> @r13 & @rax)  { test_statement(0x17BD); }
$error$
$end$
231
 if ($buffer + $thread << @rsp << $ip ^ ~~$proc << @rdi & @rsi & @rdx ^ $ip >> $thread & 0x2 & +$thread | -@r10 > $thread + @rdx ^ @r10 >> 0n15 & @rbp & $ip ^ @r11 >> @rax & $ip & 4 | $thread ^ @rbx & $ip & $teb | @rax ^ 0n2 & @r8 ^ @r10 ^ 21)  { test_statement(0x26A1); } elsif (@r13 >> 0y10000 >> -@rsp == @r13 >> 0y10000 >> -@rsp) { test_statement(0x1896);  break;  for (; 14 <> 14;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
232
 if (@rsi + 0y100 << 0n16 << @rdi ^ $ip & 0y1110 >> @r13 | @rdx | @r12 & @r12 ^ $thread & @rbx >< @r9 | $thread >> @rsp >> @r8 & @rsi & $proc & ~0n13 ^ $teb ^ 7)  { test_statement(0x111A); } elsif (@r13 >> $teb == @r13 >> $teb) { test_statement(0x113D); }
$error$
$end$
233
 if (-0n12 & $proc >> @rdx >> 0x11 & @rbp & (@rbp) & @rsi ^ @rdx << @r10 ^ 0y0 & $teb & @rsp != @r12 << $teb << @r13 >> (4) ^ +(@r8) << @rdi & @rdi >> @rdx)  { test_statement(0x1F2C); } elsif (@r8 << @rdx & +@r10 >> ~@r13 & @r12 & @rax(@rbx & $teb >> $proc ^ @rsi & $proc ^ @rsp & -0y1011 | 0y10011 ^ +10 & $teb) { test_statement(0xE6); }
$error$
$end$
234
 if ($teb + @rsp << @rdi << @r8 ^ -~@rdi ^ $buffer ^ @r11 & $proc ^ @r10 ; $teb + @rsp << @rdi << @r8 ^ -~@rdi ^ $buffer ^ @r11 & $proc ^ @r10)  { test_statement(0xFC6); }
$error$
$end$
235
 if (@rdi + 0x8 & 0xE >> 0x3 >> @rax ^ @rsp << @r10 >> $proc >> @rdx ^ -(0x4) >> @rsp & @rsi >= @r13 & $proc >> (-$ip) & 0y1101 | $proc << 0y1010 >> @r10 >> @rsp ^ $ip ^ @rsp | @r9 & @rbp & @r10 ^ @rsp)  { test_statement(0x1495); }
$error$
$end$
236
 if (-@rsi >> +@rsp << $ip & @r8 ^ @rbx << @r11 & $proc != @r9 + @rsp ^ @r12 << @r13 & @rbp >> @r8)  { test_statement(0x71B); @rax = @rdx & $ip | $ip ; } elsif (@rax & @rsi >> @rsi & ~@r13 & @rdx | ((@rdi)) >> (@r8) ^ $buffer & @rsp | $proc & -$proc | @rsp ^ +@rsi | $teb | @r10 < @rax & @rsi >> @rsi & ~@r13 & @rdx | ((@rdi)) >> (@r8) ^ $buffer & @rsp | $proc & -$proc | @rsp ^ +@rsi | $teb | @r10) { test_statement(0x6C0);  // /* This is a comment   /* This is a comment */  This is a not opened comment */  for (; @r8 >= @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (0n9 != 0n9)  { test_statement(0x158C); } } elsif ($ip & +0y10011 & @rdx ^ @rdx & @r8 < @r11 >> @r12 & @r11 & @r11 ^ @r12 ^ -~@rsp) { test_statement(0x2270); } else { test_statement(0x3E7);  while  ((@rsi) | ($ip) | $ip < (@rsi) | ($ip) | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
237
 if (0x12 + @rdi << @rdi >> @rsp >> 0x6 >> $teb -0x2 + 0y10011 >> @rbx & $buffer >> @rax >> @rbp & $ip >> $proc & @r12 & @r8 ^ 0n13 >> @rbp & @r8 >> 0x2 & @rbp & ~@r13)  { test_statement(0x1EFA); }
$error$
$end$
238
 if ($thread ^ $thread << 0x8 & @r12 & 0n9 | @r12 >> @rdi ^ @rdx >> @r11 & ~$ip & 0y1110 ^ +@r12 < $thread ^ $thread << 0x8 & @r12 & 0n9 | @r12 >> @rdi ^ @rdx >> @r11 & ~$ip & 0y1110 ^ +@r12)  { test_statement(0x11E9);  /* This is a not closed comment ;  /* This is a comment */ }
$error$
$end$
239
 if (@rbp << 0n9 >> @r10 << 0n10 >> @rdi | $thread & -@r8 >> ~$proc ^ @rdx >> @r11 ! @rbx << @rdx << @rbp >> (@rbp) << $teb >> @r13 ^ @r9 << @rsp >> $ip)  { test_statement(0x25E2); } elsif (@rdi & +@r8 >> $ip ^ +(-0y1010) >> @rdi == (@rsp) << ~$proc >> @r8 & 0y1 & @r11 | 0x11 ^ $buffer ^ @rbx) { test_statement(0x49);  /* This is a not closed comment } elsif (@rdi >> @r12 | $teb & @rsp | @rax | @r9 | ~@rbp >< @rdi >> @r12 | $teb & @rsp | @rax | @r9 | ~@rbp) { test_statement(0x1AFC); } elsif (15 | 0y10 | @r8 15 | 0y10 | @r8) { test_statement(0x1DCD);  while  ($ip))0x4)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  This is a not opened comment */ val = $thread ;  if ($teb ; @rax)  { test_statement(0x1B6D); } }
$error$
$end$
240
 if (@rax + @rdx >> @r13 >> ~$teb >> $proc & 0y10 << $buffer >> $proc >> 0n9 & @r8 >> @rax & 0x13 & ~@r9 ^ (+@r8) ^ @r10 & $ip | @rdi << 0n12 & @r8 ^ 20 >> 0x2 & @rsi ^ @r13 <> @rax + @rdx >> @r13 >> ~$teb >> $proc & 0y10 << $buffer >> $proc >> 0n9 & @r8 >> @rax & 0x13 & ~@r9 ^ (+@r8) ^ @r10 & $ip | @rdi << 0n12 & @r8 ^ 20 >> 0x2 & @rsi ^ @r13)  { test_statement(0xE08);  /* This is a comment */ }
$error$
$end$
241
 if (-0xC + 13 << @rbx << +$proc >> $teb >> @r9 ^ @rdx << @rdi >> @rsi >> -@r13 & @rbx >> 3 ^ +(0y11) & ~+(@rax) & @r10 ^ $ip ^ @r13 ^ @rdi | @rdx ^ @rbx & @rax | $ip >> @rbp ^ $ip ^ 0x7 ^ $proc | $proc & @rsp != @r9 + 15 >> @rbx & $thread << @rbx)  { test_statement(0xF40); } else { test_statement(0x92E); ; }
$error$
$end$
242
 if (0y1110 + $proc << $ip <= 0y1110 + $proc << $ip)  { test_statement(0xE14); } else { test_statement(0x82);  break; }
$error$
$end$
243
 if ((@r8) + @rbx >> @rbp >> $teb >> 0n6 <> (@r8) + @rbx >> @rbp >> $teb >> 0n6)  { test_statement(0x1B8F); } elsif ($proc << -@r8 | @r9 >> 0n15 ^ @r11 & @r10 ^ $ip ^ 0xA)~-@r9 << (@r12) >> $proc >> @rbp & @r8 & $buffer & @r11) { test_statement(0x19AF);  if ((@r11) | -~@r9 | $buffer((@r11) | -~@r9 | $buffer)  { test_statement(0x7CF); }  /* This is a comment */ } elsif (~@rdx & @r11 & +@r8((1 ^ @r11 & 0x8) { test_statement(0x25E4);  for (val = 10; @r12 | (@r10) <> @rsp | 11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x570);  while  (@rbx ; @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
244
 if (@r8 >> @r10 << ~+@r8 & +@r11 ^ @r10 << $thread >> -0x0 & ~0n7 >> @rdi ^ $ip >> $teb & @r12 ^ $buffer & $teb))@r11 + @rbp ^ $ip >> @r10 >> @rsp ^ ~-@r10 >> 0n2 & @rsp ^ 0xF & $proc | @r8 & $thread ^ @r9 >> @rbp ^ @r11 ^ 0y1 ^ $thread)  { test_statement(0xBFA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi | 10 ^ 0y111 | @rsp | +0y10011 ! 0xE & @rbx) ; ;  /* This is a not closed comment } elsif ($teb << @r11 & @r13 & $proc & @r9 | 0y1100 & 0n1 & 0x6 ^ @rdi & $thread | @rsp & @rsp)-@rsi >> 3 >> +@r13 & $ip >> $teb & @r11 & @rbp ^ $proc >> @rdx ^ 12) { test_statement(0x1EBB); } elsif (@rbx >> @rsp & ~@r9 & @rbp | @rbx & ($proc))@rbx >> @rsp & ~@r9 & @rbp | @rbx & ($proc)) { test_statement(0x4A3);  /* This is a not closed comment @rax = ~@rdi ; }
$error$
$end$
245
 if (21 + 0n6 << @r11 & 20 < 21 + 0n6 << @r11 & 20)  { test_statement(0x1AF1);  for (@rax = @rax ^ @rdx ^ @rdx | $buffer; @r10 ^ $ip | @rdi ^ ~0n12 | $proc = (@r9) & @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 >> $ip & @r8 ^ @r9 | $thread & 7 ^ 10 & ~@r8 ^ @rdi ^ @rbp < @r10 << @rdi & ~+@r10) { test_statement(0x1FCB); } elsif (@r13 ^ @rbx ^ @r9 <> @r12 >> @r11 & $thread & @r9 ^ @rdi & @rbx ^ @rdx ^ $teb | 0n6 ^ @rsi | @rsp ^ +$ip | @rsi | @rbp) { test_statement(0x228E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi | @r13 == 0x11) ;  /* This is a not closed comment  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi > 0n7) ; val = @r13 ; }
$error$
$end$
246
 if (@r8 << @rsi << @r9 >> @rdx >> @r12 >> @rsp & @rbx >> @rsi ^ $buffer << 0y1110 >> @rdi & @rdx | 0xA >> +$teb >> 0x13 | @rsi & @r11 ^ $thread ^ @rbx ^ @rbx)11 >> -$ip << @rax ^ @r10 << @r9 >> @r9)  { test_statement(0xB67); } elsif (0y1101 >> @rbx >> @rsp | $ip ^ @rsp != 0y1101 >> @rbx >> @rsp | $ip ^ @rsp) { test_statement(0xE33); val = @r9 | $thread | ~~@rdi ; } else { test_statement(0xFF1); ;  /* This is a not closed comment }
$error$
$end$
247
 if (@r9 >> @r10 << @r13 >> $buffer >> @r9 & $buffer << @rax & 0n10 >> @r12 & 0xC & 3 ^ 0y1100 << @rsp >> $proc ^ -@rdi ^ @r13 & $teb ^ @rdx | @r12 & $ip >> (@rbp) == @rsi + @rsp << @r10 >> $ip << 0x10 >> (@r10) >> @r9 & 6 << $ip >> @rsi)  { test_statement(0x11A5); @rax = ~$ip ^ @rsi & 0n19 ^ $teb ^ $thread | $buffer ^ @r8 | ($thread) | $teb | 1 ; } else { test_statement(0x121E); }
$error$
$end$
248
 if (-+$buffer + @rdi & @rbx << +@rdi & $proc ^ +@r10 >= -+$buffer + @rdi & @rbx << +@rdi & $proc ^ +@r10)  { test_statement(0x1C7E); } elsif (0n12 << 0n19 ^ +$thread & @rsp ^ ($teb) ~+$thread) { test_statement(0xCE6); } else { test_statement(0x19D2); }
$error$
$end$
249
 if (+@r12 & 0n11 << $thread ^ 0x10 >> @rdi >> @rdx | $buffer << @rdx <= @r8 + @rdi >> @rbx << @r10 & $ip ^ $thread & $teb ^ @rsi ^ $thread & @rdx ^ 0x0)  { test_statement(0x628);  while  (+@r10 <= +@r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
250
 if (@r11 + ~@r8 << @r13 << $thread ^ $teb | 0xD | @rdx >> @r12 & @rdx & @r10 >= @r13 + $teb | @rbp << @rdx >> $ip >> -~@rbp & @rsi >> $buffer & @rsi & 0n18 ^ @r13 >> @rbp ^ @rsp & @rbx | -$thread ^ +@r8 ^ @rsp)  { test_statement(0x900);  /* This is a not closed comment  // /* This is a comment  val = 15 ^ +@r13 ; } elsif ($proc << $ip >> @r9 & $thread ^ @r10 >> @r12 ^ $thread & @rbp ^ @rbp ^ 0n13 | @rdi & $ip & $proc ^ ~@rsp ^ $buffer | @rsp & @rsi ^ @r9 ^ $buffer(@r13 << ($buffer) & @rbp >> @rbp & 0n6) { test_statement(0x1DEA); } elsif (@r13 & 0x8 | @rax & @r10 | $proc ^ @r13 ; @r13 & 0x8 | @rax & @r10 | $proc ^ @r13) { test_statement(0x8B5);  // /* This is a comment   // /* This is a comment  }
$error$
$end$
251
 if (@rsi + @rbx & 0y1010 << (-~@r8) ^ 13 << @rax >> @rsi >> @r12 | ($thread) << @r12 >> $buffer >> 0y1111 != @rsi + @rbx & 0y1010 << (-~@r8) ^ 13 << @rax >> @rsi >> @r12 | ($thread) << @r12 >> $buffer >> 0y1111)  { test_statement(0x5E3); }
$error$
$end$
252
 if (@rax << @r8 << @r10 & @r8 << $thread ^ @rdi >= +@r12 & 0y1111 & @rax & @rbp & 0y1011 ^ @r13 << 6 >> +$buffer ^ @rbx >> +@rbp)  { test_statement(0x2016); } elsif (0x8 << -@rax >> @rdi >> @rax & @r10 & -@r12 & $ip | @rsp >> @r13 ^ @rsp & $buffer != @rax << @r8 ^ @rbx) { test_statement(0x23B7); } else { test_statement(0xE86);  break; @rax = @r13 ; }
$error$
$end$
253
 if (@r9 + @r9 >> 0x12 << @rbx >> @r13 >> 0n12 ^ @rax >> @rdi >> ~0n7 & (@rdi) >> @rbx & $ip & $thread ^ 0x5((@r10 & @r9 & 0x10 >> -@r12 | $buffer << $teb ^ @r11 >> @r8 & @r9 | @r10 ^ @rdi & 0y10 ^ @r11 | $ip ^ @r8 ^ $proc)  { test_statement(0xB67);  /* This is a comment */  break; } else { test_statement(0x22DF);  break; }
$error$
$end$
254
 if ($teb + +-(+($teb)) << @rax << 0x0 >> 0y111 ^ @r9 >> @rsp & 0n18 >> @rbx & $buffer ^ @rsp ^ $buffer | 0y1 << @r9 >> $teb & 7 >> @rdi ^ 23 & $buffer & $buffer ; $teb + +-(+($teb)) << @rax << 0x0 >> 0y111 ^ @r9 >> @rsp & 0n18 >> @rbx & $buffer ^ @rsp ^ $buffer | 0y1 << @r9 >> $teb & 7 >> @rdi ^ 23 & $buffer & $buffer)  { test_statement(0x12BF); } elsif (@r9 << @r12 >> 0n3 | @rbx ^ $buffer ^ @rsp ^ $teb | @r13 ^ @rsp ^ 0y1001 | @rbx ^ @rsp <= @r13 ^ @r13 ^ $ip & @r11 ^ ~0n17 | $teb & +0n1) { test_statement(0x1E9E); } else { test_statement(0x21DD); }
$error$
$end$
255
 if ($buffer + $thread << @rbx << @rsi >> @rdi << ~@rdi >> +3 >> 0xC & 0xF << @rbx))@rdx + @r10 << @rsi >> 0xE << @r9 & @rsp >> @r11 >> $buffer & $ip >> @rsi ^ @r10 << 0x0 >> -$thread >> @rax)  { test_statement(0x13ED); } elsif (@rsp >> 0x2 & (@rax) ^ $thread >> @rsp | 0y11 ^ @r13 & +$thread | @r11 & 0y111 ^ $teb ^ @r11 = @rsp >> 0x2 & (@rax) ^ $thread >> @rsp | 0y11 ^ @r13 & +$thread | @r11 & 0y111 ^ $teb ^ @r11) { test_statement(0x19BA); } else { test_statement(0xD8F);  /* This is a comment */  /* This is a not closed comment }
$error$
$end$
256
 if (@rdx >> @r12 | @r11 << @r10 >> @r9 == @rbx & @r11 & @rdi >> $proc & 6 | 0y11 >> $thread)  { test_statement(0x1646);  while  (+$thread & ~@rdx > $thread ^ $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2063); }
$error$
$end$
257
 if (0x7 + $thread >> @r10 << @rdx >> @r11 >> @rsp & $proc << 0n9 & -0xD >> ~@rax & (@r10) & 0n17 = ~0y1100 | @r11)  { test_statement(0x2192);  /* This is a comment */ } elsif (@rbx & @rdi | @rdi >> -@r9 ^ @rdi & @r10 ^ 0x7 ^ @rdx 0y10011 << ~@rdx ^ @rax & $thread & @rbx) { test_statement(0x13EC);  /* This is a not closed comment  for (val = 10; ~16 == -~$teb | $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x8 >> @rbp & +0y11 ^ @rdi & @rbp ^ ~@rbp == @rdi >> $proc) { test_statement(0xFDC); } elsif ($proc ^ @r9 ^ @rsp | ++$teb < $proc ^ @r9 ^ @rsp | ++$teb) { test_statement(0x11C1); } elsif (@rdx ^ $ip | @r11 | $teb < +@rdi) { test_statement(0x2488);  This is a not opened comment */  /* This is a not closed comment  // /* This is a comment  }
$error$
$end$
258
 if ($teb << @rsp << @rsp >> @rsp & @r13 << $proc & @rbp & $ip & @rbx < $proc + $buffer << $thread << $thread >> @rsp << @rsi >> @r11 | @r13 << ~@rax & @r9 & @rbp & @r8 ^ @rbx >> $proc ^ @r12)  { test_statement(0x12A7); } else { test_statement(0x1CB2); }
$error$
$end$
259
 if ($thread + 0y111 << +$buffer & 11 >> 5 >> (@r8) & @rax & @rdx ^ ~@rbp & +0x2 >> 13 | (@r11) << @r12 >> $teb >> @r12 & 0n18 & @rax & @rdi ; @rbx >> @rsi >> 0x12 ^ $ip >> @rbp >> -$proc ^ 0n9 >> @r8 | @r13 << (@r13) ^ 0x2 | +@r13 | ~+(@r12) ^ (@r11) ^ $teb)  { test_statement(0x1554);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 3 | @rsp ; $thread ^ 0y1 | $teb | $teb) ;  This is a not opened comment */ } elsif (-$buffer << $thread & @r10 >> @r11 & @rbx | (@rdx) >> @r13 ^ @r9 & @rdi | $thread 0x11 << -@r9 >> 2 ^ 0y10 >> $proc) { test_statement(0x1001); ; } elsif ($teb >> @r9 & @rdx @r9 & ~+0x8 & 0y10001 ^ @rax) { test_statement(0x97A);  for (val = 10; @rax | @rax ; @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx | @rsi >= @rdx | @rsi) { test_statement(0xBB5); } elsif (0n14 ^ $teb))@rsp | +@r13) { test_statement(0x15D);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx(@rdi) ; ; } elsif ($ip | 0y10010 > $ip | 0y10010) { test_statement(0xC7E); } elsif (~@r10 ! @r10) { test_statement(0x469); } elsif ($ip < 0y10010) { test_statement(0x19DD);  while  (@rdx(@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rax < 0y1001) { test_statement(0x1F80); } else { test_statement(0x9DA); val = @r10 & @r12 ; }
$error$
$end$
260
 if (-@rdx << @r12 << $thread & $buffer << @rax >> @r13 & 0n17(-@rdx << @r12 << $thread & $buffer << @rax >> @r13 & 0n17)  { test_statement(0x1AC7);  break; }
$error$
$end$
261
 if (@rsi & @rdi << @r10 >> @r12 | (~@r13) & @rbx ^ 0xA >> @r11 ^ 0y1111 & ~0y110 | $proc >> 10 ^ 0x1((@rsi & @rdi << @r10 >> @r12 | (~@r13) & @rbx ^ 0xA >> @r11 ^ 0y1111 & ~0y110 | $proc >> 10 ^ 0x1)  { test_statement(0xC54);  for (val = $buffer; @r10 ^ @r12 ^ -@rbx | $teb ^ +@r9 | $buffer | @r8 != $buffer & $teb ^ @r10 ^ 0y111;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 ^ $buffer >= @r10 ^ $buffer) ;  for (; -$proc | $proc >= @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rdx >= 0xC)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; $thread == @rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($thread)$ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x175A); }
$error$
$end$
262
 if (+@rbx + 1 << @r10 >> @rbx >> @r10 >> $proc & ~@rdi | @rbp << $proc | @rsi >> 0x6 & 0n16 & 15 ^ @r13 & @rbx ^ 0n7 | $thread | @rsp ^ ~10 < 0y110)  { test_statement(0x657); } else { test_statement(0x7D8); }
$error$
$end$
263
 if ($teb >> @rsp << $proc & @r12 << $thread ^ @rax << $buffer >> @r8 >> @rdi & 0xC >> @rsp ^ @rsi >> +~@rax & $ip ^ @r13 & $teb | ~0x8 << @r10 | (-(5)) & @rbp & $proc ^ $buffer ^ $teb ^ $teb < 5 + @rsi ^ @rsi << @r13 ^ +@rbx >> @r12 & @r12 & ($ip) ^ @r13)  { test_statement(0xA66);  // /* This is a comment  } else { test_statement(0xAF0);  // /* This is a comment  ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax != @rax) ;  while  (@r13 < @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
264
 if (@r12 << @r11 ^ @r11 | 0y0 << ~0n7 ^ @rsi >> ~@r10 <= @rdi + 0n15 >> @rax << $buffer ^ $teb << +-@rbx & @r11 & @rdx | $buffer << @rdx | $buffer >> $thread & $ip)  { test_statement(0x1797); } elsif (@r10 << ~$teb & @rsp >> @rsp | 0n12 >> @rsi ^ @r11 <> (-@r11) << @r10 >> 0y10000 ^ 17 >> 0y10001 & @r11 & @rbx | @rbx & +@rbp & 1 | @r13 & $ip | @rdx ^ ($buffer) | @r8) { test_statement(0x1B24); } else { test_statement(0xE4E); }
$error$
$end$
265
 if (@rbx + 6 << $teb << 0xC >> @rbx & 0x13 << @r10 >> @r12 >> ~+$proc & $proc >> @rdx & 0y101 & 17((@rdi + @rsi)  { test_statement(0x1E52); } elsif (@r10 & @r10 >> @r9 & @rdi ^ @r10 >> $teb(@r10 & @r10 >> @r9 & @rdi ^ @r10 >> $teb) { test_statement(0x1DDD);  // /* This is a comment  }
$error$
$end$
266
 if ($teb << +$proc << @rdx >> @rbp << @rdx >> (@r9) & 0y111 << (@r11) & +@rdx & 10 & (@rsi) < $teb << +$proc << @rdx >> @rbp << @rdx >> (@r9) & 0y111 << (@r11) & +@rdx & 10 & (@rsi))  { test_statement(0x232B); }
$error$
$end$
267
 if (@rbp >> @r11 << @r8 & -@r8 << $ip >> $proc ^ $ip << @rsp >> $ip <= -@rax + 0n19 & @rsi >> ~@r10 ^ 0x8 << @r13 & 0y1111 ^ $teb >> 0y1011)  { test_statement(0x67); } else { test_statement(0x14BE); }
$error$
$end$
268
 if (@r10 & $proc << @rdi & @rax >> (@rbp) ^ @r13 << @rsp ^ $teb & (~0y1001) | +@rax << ($ip) & @r9 >> 0n3 & @rdi ^ +@rsi >> 0y1001 & $thread ^ @r11 & @rbp | @r8 & @rbp ; -@rdx << @rbp << $teb >> $buffer >> @r11 & @rax << @rdi ^ @rsi << -0n18 >> @rsi | @r9 ^ @rbx | @r12 ^ @r9 ^ @rax | @rdx ^ @rdx ^ ~@r8 | @r11 ^ @rbp)  { test_statement(0x228F); } else { test_statement(0xC); }
$error$
$end$
269
 if (@r12 + $ip << @r8 << 0n11 & @r11 << @rsp >> (0y10) = @r12 + @r10 << @rbx << @r10 >> 0x5 << +@r9 >> -~3 >> @r10 ^ @r8 << @r10 >> $teb >> @rax | 0x9 | 0n11 & @r12 & ~@r12 | 0n4 | @rax ^ $teb)  { test_statement(0x474); } elsif (@r9 >> @r8 >> (0n11) & @r10 & @rsi ^ 0x11 >> $proc <> $teb >> -@rdi >> 0n5 ^ -@rbp >> ~$buffer) { test_statement(0x16A4); } elsif (+$buffer & $thread | 0n14 ^ @r11 | @r11 ^ $teb <> +$buffer & $thread | 0n14 ^ @r11 | @r11 ^ $teb) { test_statement(0x2585);  while  (@rsi ; @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 & @r8 ^ $teb ^ 0x11 ! @r8 ^ -@r9 ^ @rsp | @r13) { test_statement(0xDC5); } elsif (0 != @rbx | 0n4) { test_statement(0x1BD6);  // /* This is a comment  } else { test_statement(0xB7A); ; }
$error$
$end$
270
 if (-@rbx << $buffer << 0 & @rbx << (@rbx) >> @r8 <= @rdx << @rbp ^ @rsp << @r13 | @r8 << +0y1 & @r10 >> ~1 ^ @r12 >> $buffer ^ @r13)  { test_statement(0xD75);  This is a not opened comment */ } elsif (@rdi << @rbp | @rsi >> @rax & (@r12) == @rdi << @rbp | @rsi >> @rax & (@r12)) { test_statement(0x4E0);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ^ ~@r11 | @rsi | 7 >< @rsp ^ ~@r11 | @rsi | 7) ;  while  (0y1000 | @r8 = @rdi | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1FBD); }
$error$
$end$
271
 if ($proc + 0y10011 << @r13 << 0y110 & 5 << @r12 & 0n15 >> 0n13 ^ (~-@rsi) << ($proc) & +@rdi >> $buffer & @r9 & @rsp ; $proc + 0y10011 << @r13 << 0y110 & 5 << @r12 & 0n15 >> 0n13 ^ (~-@rsi) << ($proc) & +@rdi >> $buffer & @r9 & @rsp)  { test_statement(0x20E4);  // /* This is a comment   // /* This is a comment  ;  for (val = 10; $proc > @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif ($thread << @rdx >> 1 >> (@rsp) & -0n9 | $buffer ^ @r9))$thread << @rdx >> 1 >> (@rsp) & -0n9 | $buffer ^ @r9) { test_statement(0x1C51); } elsif (@rax & -(@rbp) ^ @r10 ^ @rax | @r8 ^ 16 | @r9 ^ @rbx)@rdx ^ @rdi ^ @r13) { test_statement(0x9B4);  // /* This is a comment   break; } else { test_statement(0xEAF); }
$error$
$end$
272
 if (@rsp << 0y1000 & @rdx << @r11 | @r12 << @r10)-@r10 << @rbx >> 0n2 >> (0n0) >> @rsp & 6 << (@r8) ^ @r13 | @rbx ^ @rbx >> @r11 & @rsp ^ 0y1011 & @rbp ^ $proc)  { test_statement(0x7BE);  if ($proc & @rdx ^ @rsi >= $proc & @rdx ^ @rsi)  { test_statement(0x1B2D); } else { test_statement(0xAF2); }  /* This is a comment */ } elsif ((@r13) << --(3) ^ @r11 & $ip ^ +$teb <= (@r13) << --(3) ^ @r11 & $ip ^ +$teb) { test_statement(0x15F8); } else { test_statement(0x11D);  /* This is a not closed comment  for (val = 10; ~@r12 | @r12 >= @rdi | $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; $proc <> $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@rsp >< @rsi) ;  // /* This is a comment  }
$error$
$end$
273
 if (0x1 ^ 0y10000 << $ip >> @rdx >> $buffer & 0 >> -@r12 & +0n2 & @rsi | $thread >> @r8 >> @r8 | $buffer & @r8 & @r9 | $proc & @r8 ^ 0n15((@rdx + 0n13 & -2 >> @rbp & -@rdi >> @r12 ^ @r10 >> -@rbx | @rdi >> 0xE >> +@rbp & @rdi & @rsp & @rdx | ($proc) & ~0xC)  { test_statement(0x578); }
$error$
$end$
274
 if (@rsi + $buffer << @r9 >> -0x12 << 10 ^ @rsp >> @rsp | @rdi ^ 12 ^ $buffer((@rsi + $buffer << @r9 >> -0x12 << 10 ^ @rsp >> @rsp | @rdi ^ 12 ^ $buffer)  { test_statement(0x1F5); }
$error$
$end$
275
 if ($buffer + @rax << $proc & @r8 >> -@rbx & ~$proc ^ $thread >> $teb ^ @r10 >> @r10 <> @rdx + 16 >> @r12 << @rbx & (@rdx) << @rsi >> 0y1111 ^ @rbp >> @rax & @r12 >> $thread & @r10 & -@r10 | @r10 >> @r10 & $teb >> $thread ^ @r10)  { test_statement(0x18A); } elsif (@rbx << @r11 >< @rbx << @r11) { test_statement(0x942);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 | @r11 <= @rdi | 0xB) ;  if ($thread > (@r10) | $thread)  { test_statement(0x1B48); } elsif (@r10(@rsi) { test_statement(0x6E1); } elsif ($thread != (@r12)) { test_statement(0x222D); } else { test_statement(0xF91); } }
$error$
$end$
276
 if (@rax ^ @rbp >> $teb >> 0y1 & @r12 & $ip & @rsi ^ @rdi ^ @r12 & @rbp))@rax ^ @rbp >> $teb >> 0y1 & @r12 & $ip & @rsi ^ @rdi ^ @r12 & @rbp)  { test_statement(0x18B5); }
$error$
$end$
277
 if (@r10 << @rsp & 0x0 >> @rax >> -0y10010 | $ip >> @r8 | @r12 ^ $proc & $proc ^ @rax | @rbx & @rax ^ $ip ^ (~1) | -0y1011 | @r12 | 12))0y10000 & @rsp << 0n15 >> @rsi & 0y100 >> @rdx & @rdi & ~@r13 ^ @rdx << $teb >> $teb >> @r8 ^ 22 >> $thread & 0y1 & @rsp ^ @rax ^ +@r11)  { test_statement(0x117C); } else { test_statement(0xA98); @rax = $thread | $ip ;  /* This is a comment */  while  (@rax <= $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
278
 if (@r12 + -$buffer @r12 + -$buffer)  { test_statement(0x1CCB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx & @rdx ^ $buffer ^ @rbx ! $teb & @rsp ^ 0n13) ;  if (@r12 ^ $proc < 12)  { test_statement(0x100A); } elsif (@r12 < @rbp | 0x5) { test_statement(0xCCF); } elsif (@rbx <= $ip) { test_statement(0x931); } else { test_statement(0x1A6A); }  This is a not opened comment */  break; } elsif ($buffer << @rsi >> (@r10) >> @r12 & -@r10 | @rbx >> @r10 ^ $ip & @r10 | 3 & 0x9 ^ 0x10 ^ $proc | @r13 | @rdx >= $buffer << @rsi >> (@r10) >> @r12 & -@r10 | @rbx >> @r10 ^ $ip & @r10 | 3 & 0x9 ^ 0x10 ^ $proc | @r13 | @rdx) { test_statement(0x1CBF); }
$error$
$end$
279
 if (@rax << 0y1000 >> @rax << $teb >> @r13 >> +@r9 & $thread << 0y1011 >> @rdi & @r10 & @r10 <= $proc + @rsp << ~@rsi ^ $thread >> @rsp >> 0y1011 & @rbp & ~@rdi & 0n8)  { test_statement(0x144C);  /* This is a not closed comment } elsif ($proc << @r11 ^ @rdi ^ (--@rsi) & @r13 <> $proc << @r11 ^ @rdi ^ (--@rsi) & @r13) { test_statement(0x9C0); } elsif (@rbx ; @rbx) { test_statement(0x9E2); } elsif (+$teb & @r11 | ~$teb ^ (@r8) >= +$teb & @r11 | ~$teb ^ (@r8)) { test_statement(0xE29);  /* This is a not closed comment ; } else { test_statement(0x25E3); ; }
$error$
$end$
280
 if (-(@rdx) + 0x1 < $ip >> 0n13 & 0x10 >> $thread & @rbx >> @r12 & @r9 | @r8 & +$ip & ~$teb & @r9)  { test_statement(0x965); } elsif (@r12 >> $ip >> @r12 > @r13 >> $proc & (~$thread) >> 7 & $ip ^ @r12 ^ @rax & @r8) { test_statement(0x2024);  /* This is a comment */  This is a not opened comment */ }
$error$
$end$
281
 if (@rbx + +@rbx >> $buffer << @rsp @rbx + +@rbx >> $buffer << @rsp)  { test_statement(0x1986);  while  (+@rbx ; +@rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~-@r10 << @rdx >> @r12 ^ 12 ^ @rsp & $buffer <> ~-@r10 << @rdx >> @r12 ^ 12 ^ @rsp & $buffer) { test_statement(0x26AE);  for (val = 10; @rax | 16 $teb ^ @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r10 & @rdx & @r8 ^ 0x13 & 5 <> 0x9 >> $ip ^ $buffer & @rax ^ (10) ^ $ip) { test_statement(0x185F); } elsif (17(($proc & @rbp ^ (+@r10)) { test_statement(0x1585);  for (val = 10; @r9))@rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
282
 if (+@rax << 0 >> $proc & 0y1001 << +$proc ^ @rax << 12 & @r9 & @rax & @r13 | 12 <= +@rax << 0 >> $proc & 0y1001 << +$proc ^ @rax << 12 & @r9 & @rax & @r13 | 12)  { test_statement(0x1F2A);  /* This is a not closed comment  /* This is a comment */ } elsif ($proc >> @rsp >> @r10 ^ $buffer >> +$teb | $buffer | @r10 ! $thread << @rsp >> 6 >> @rax & $teb >> @r10 | 0y1101 ^ $buffer & @rdx ^ @rsi ^ @rbx | +$ip ^ @rbx) { test_statement(0x129F);  This is a not opened comment */ } elsif (0n12 | @rbp ^ $thread >= 0n12 | @rbp ^ $thread) { test_statement(0x19BE);  /* This is a comment */ } elsif (@r11 & $teb == +$buffer & 0y110 ^ 0x5 | @rbx | @rbp) { test_statement(0x2647); } elsif (@rsi ^ -$thread)+@rdi ^ -11 | $thread | -+@r12) { test_statement(0x1219); } else { test_statement(0x1B11);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1001 ^ @rax | @rsi | 23 > @r13 ^ @r13) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y100 | @rax < $teb | $buffer) ; }
$error$
$end$
283
 if (@rdx + @rsp >> @r13 & @rsi << (@rsp) ^ 0n5 >> @rdx & @rbp >> $thread | @rbp << 0n14 <> (@rsi) + $buffer & @r9 ^ @rax ^ 15 >> @rax ^ ($ip) & @r12 ^ 0n5 ^ +$thread)  { test_statement(0xAA7); }
$error$
$end$
284
 if (@r9 << @rdi << $teb >> @rax << 0xF >> @rax & @r8 << @rbp | 0y1011 << @rsp & @rbp >> @rdx >= 10 + ~0n0 & +@r11 << @r13 ^ @rdi & $ip | @rsp >> $teb >> 0xC)  { test_statement(0x57F); }
$error$
$end$
285
 if ($teb << 0x9 << $ip & @r11 >> -$thread & 7 & @rax < (@r12) >> $teb << @r10 >> @rdx >> -$teb)  { test_statement(0x7AA); } else { test_statement(0x18B9); }
$error$
$end$
286
 if (@rbp + @rdx << @rdx << 0x5 >> (@rsp) << @r12))$thread + $teb >> @rsi >> @r8 >> $thread ^ 10 << @r11 & @r8 >> $thread)  { test_statement(0x198); }
$error$
$end$
287
 if (0x4 + @r8 << @r12 >> @rdx >> @r13 | $proc << @r13 >> $thread >> @rsi & @r8 >> @rdx ^ @rdx >> $thread & $teb & @r13 ; @r12 << @r13 << @rax | @r8 >> @rsi >> @r8 & @rsp ^ $teb ^ @r10 & ~(5) | -0y0 >> $thread & @r9 & $thread ^ ($thread) ^ @r10 ^ @r10)  { test_statement(0xE46);  This is a not opened comment */  /* This is a not closed comment  /* This is a not closed comment  for (val = 10; ~0x3 < ~0x3;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 << @rsp >> @rsi ^ $teb ^ 15 & $buffer != @rdi << 17 & @r12 & @r11 ^ $ip ^ ~$thread & @r10 | @r13 & @rsi & @r8 | @r13 ^ $teb | 0y1011) { test_statement(0x20B5); } elsif (0y1110 & ~1 & 12 ^ @r11 & @r11 | @rax ^ 0n3 ^ $ip <> 0y1110 & ~1 & 12 ^ @r11 & @r11 | @rax ^ 0n3 ^ $ip) { test_statement(0x1E7F);  /* This is a comment */ } else { test_statement(0xD9E); }
$error$
$end$
288
 if (@rbp + @r13 >> $proc << @r8 & $thread << 0x0 | 4 >> 0n5 >> @r11 & (@rax) >> @r10 | @r10 >> $thread | $thread & @rax | @r13 | 16 | $teb >< @rbp + @r13 >> $proc << @r8 & $thread << 0x0 | 4 >> 0n5 >> @r11 & (@rax) >> @r10 | @r10 >> $thread | $thread & @rax | @r13 | 16 | $teb)  { test_statement(0xD79);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 & @r12 ^ 0n7 ^ @r9 | @rdi = 0x13 & 0y1100 ^ ~0y1000 ^ @rax | @rsi) ;  /* This is a not closed comment  break;  if (@rsp(@rsp)  { test_statement(0x24EC); } elsif (@rsp == @rsp) { test_statement(0x1547); } else { test_statement(0x1E86); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx >< @rbx) ; } elsif (@rbp << 0n2((@rbp << 0n2) { test_statement(0x1878);  for (val = 10; @r13(@r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rsi == $thread | $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2365);  break;  if (@r11 | @rbp <= @r11)  { test_statement(0x16D2); } elsif (-$teb >= @rbx) { test_statement(0x2143); } else { test_statement(0x13BC); }  while  (@rdi == @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
289
 if (0y1011 << -+@rbx ^ @rsp << $buffer ^ +0n18 ^ @r11 & +@rsi ^ @rbp ! $proc | $teb << @r9 >> @r10)  { test_statement(0x1266); } else { test_statement(0x2A8); }
$error$
$end$
290
 if (0x10 + @rsi >> 0y1101 >> @r8 >> 3 ^ $buffer << (@rbp) >> @r9 >> $teb @r8 + ~@r12 >> @r12 << 0xA >> @rdi >> 6 ^ @rdi ^ 0y1110 >> @r10 & 0x6 & @r9)  { test_statement(0x17A1); } else { test_statement(0x152E);  break; }
$error$
$end$
291
 if (0xA << ~$buffer << @rax & $proc << @r10 >> (@rsp) >> @r10 ^ @rbx << @rsi & 23 ^ +-@r12 ^ $teb & $ip | 0n5 >> @rdx >> $proc & +@rdx & 0xA & $proc > 15 & $ip >> @r8 >> @rsi)  { test_statement(0x2197);  /* This is a comment */  This is a not opened comment */ } elsif (@r8 << -@rbx & @rbp & 0 & $ip((@rax >> 0n10 >> @rdx & 0xE | @r12 >> @r10 & -@rbp | @rsi ^ @rsp ^ @r12 | @r9 ^ @rbx) { test_statement(0x187B);  // /* This is a comment   if (@r10 | @rdx <> @r11)  { test_statement(0x51E); } elsif (@rbp @rdx) { test_statement(0xECE); } else { test_statement(0xE5D); } } else { test_statement(0xB5B);  This is a not opened comment */ @rax = @r9 | 0n12 ; }
$error$
$end$
292
 if ($thread + @r13 | @rdx << @r13 >> @r10 >> +$proc ^ ~0n11 & @r9 & 0x2 @r13 + 0x7 << @r10 << @r8 >> @rbx << 0n19 ^ 0 << -$proc >> 17 & @rbp & @r11 ^ @r13 >> $buffer & @rax & @r13)  { test_statement(0x9DE); ;  // /* This is a comment  } else { test_statement(0x6DF);  while  (+@rbx == +@rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; -@r12 | @rdx == @rdi | $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
293
 if (@r9))@r12 << @r11 & @rdi << 0x10 >> $buffer >> 0x5 | @rbx << $ip ^ $buffer | @rdi >> @rbp & @r8 & @rsi | -@r10 & @rdx ^ 0x9 ^ @rsp | 0y110)  { test_statement(0x1F2);  /* This is a comment */ }
$error$
$end$
294
 if (@rsp << $buffer << $ip >> $buffer << @rdx & 0x5 ^ @r8 ^ ~@r8 ^ ~0n4 ! -$teb >> @r9 ^ $ip >> +$proc >> 0y1101 ^ @rbp)  { test_statement(0x156B); } elsif (@r10 << 0n15 >> @r8 < @rdi << 0n12 >> @rdi >> 0n1 & (15) & @rsp ^ $proc >> @rdx ^ @r12) { test_statement(0x782); } else { test_statement(0x1073); }
$error$
$end$
295
 if ((+@r11) + @r13 << @r13 << ~0n9 >> @rsi << @rdx >> @rdx & $ip << 0y1 | 5 << -$proc >> @rbp >> @r12 & @r10 >> @rsp & 0y1010 & @r13))@r8 << @r8 >> ~0y10 >> ~$thread >> 0x0 & $teb >> $ip)  { test_statement(0x26A9); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip ^ @rsi | @r10))$thread) ; } elsif (@r13 << $thread >> @rbx >> @rsi & $thread >> $thread & @rsp & $buffer ^ @rbp ^ 0y1 & @rdx ^ @rax = @r13 << $thread >> @rbx >> @rsi & $thread >> $thread & @rsp & $buffer ^ @rbp ^ 0y1 & @rdx ^ @rax) { test_statement(0x175A); } else { test_statement(0x16F4); @rax = $teb ^ @rsp ; }
$error$
$end$
296
 if (@rbx << -@rax << @rbx >> $teb & @rdi << (@r12) | 23 << @r10 >> $teb & ++@rbx ^ $proc == @rax + $proc & @r8 & @r9 >> $proc & ~@r11 & 0n17 ^ @rsi << 6 >> @rdx >> @r9 & @rdx & @r13 ^ @r9 & -@r10 & @r10 ^ $buffer & 0x0 ^ 5)  { test_statement(0x2231); }
$error$
$end$
297
 if (@r9 + @rbx >> @r13 << 13 >> @rsp & @rbp << @r8 >> @rdx | 0n2 >> $proc <> @r11)  { test_statement(0xFEE); } elsif (@rsi << @rdi >> @r10 >> $teb & @rdi >> @rdx & @rbp <> $ip >> @r8 & @rbp & @rbp) { test_statement(0x13E2); } elsif ($ip ^ @rbp(@rdi >> $thread ^ 0y10001 & @rax | 6 & ~@r8) { test_statement(0x1DDF);  // /* This is a comment  } elsif (-@rdx & @r10 ^ @rsi ^ $thread | @r8 ^ $proc((-@rdx & @r10 ^ @rsi ^ $thread | @r8 ^ $proc) { test_statement(0x253D); }
$error$
$end$
298
 if (@r9 << @rdi >> @rbx >> $thread >> @rdx | -@rdi << @rax >> @rbp ^ (@r8) & @rbp > -0x12 + $buffer << $teb << @r12 ^ 0x8 & 0y111 & -$proc & $thread ^ @rbx >> @rax & @r10 ^ @rbp ^ @r8 ^ @rbx)  { test_statement(0x2EB); } elsif (0x4 >> @rsp >> 0n4 <> (+@r8) & (0x8) >> @r9 & ~@r12 & $buffer ^ 0x11 & -$proc) { test_statement(0x7B7); }
$error$
$end$
299
 if (0y100)@rsi << ~$ip << ((@r9)))  { test_statement(0x1B5E); } else { test_statement(0xAF3); }
$error$
$end$
300
 if (0x7 << @r11 << 0x9 & +@r12 >> @rbp & @r12 >> @r12 & 14 & $proc)0x7 << @r11 << 0x9 & +@r12 >> @rbp & @r12 >> @r12 & 14 & $proc)  { test_statement(0x1B90);  while  (@r12 | @r11 ^ $ip | @r10 | $thread > @r12 | @r11 ^ $ip | @r10 | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ @rax = @r10 | +$teb ; } elsif (1 & @r9 & $buffer | @r10 >> @r10 & @rdx & $proc ^ +$teb ^ @rsi ^ $ip | @r10 ^ @r8 ^ @rsp | @r9 ^ @r13 | @r11 != 1 & @r9 & $buffer | @r10 >> @r10 & @rdx & $proc ^ +$teb ^ @rsi ^ $ip | @r10 ^ @r8 ^ @rsp | @r9 ^ @r13 | @r11) { test_statement(0x1C4D);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread <> 0xE | @r8) ; } else { test_statement(0x7B0); }
$error$
$end$
301
 if (@rbx + $buffer & @rdi & +$teb & @rsp & 5 ^ @rdi << (@r9) >> 0n8 & $ip >> @rsi & @rsi ^ @rdi >> ~@r8 & @rbp ^ ~$thread ^ 0x5 ! @r12 + @rdi >> -0x3 << $buffer >> 21)  { test_statement(0x1D64); } else { test_statement(0x2166); }
$error$
$end$
302
 if (@r10 + @rdi << 0x13 >> 0y1011 << @r9 >> @r12 >> ~@r12 | 0n19 >> @r10 >> $thread ^ @rax ^ @r10 & @rbp <> @rax + $ip << @r10 << @r10)  { test_statement(0x21A0);  for (; @r8 & @rax ^ @r9 != @rsi ^ ~@rdx ^ @r13 | @r13 ^ @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc << @r8 >> @rdx >> $buffer | @rbp >> @rbp(($proc << @r8 >> @rdx >> $buffer | @rbp >> @rbp) { test_statement(0x1639);  /* This is a not closed comment } else { test_statement(0x1CC3);  if (@rdx ^ $proc == 0y0 ^ @rsp)  { test_statement(0x609); } elsif (0y1111 | 0x7 >= +@r9 | @r12) { test_statement(0x143); }  /* This is a not closed comment  /* This is a not closed comment }
$error$
$end$
303
 if (0n15 + @rdi & $proc >> @rbp & +@rax >> @rsp == 0n15 + @rdi & $proc >> @rbp & +@rax >> @rsp)  { test_statement(0x1B4B);  for (val = @r13; @rbp & @r10 ^ @rsp(+@rdi & 0n5 ^ -0n7;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
304
 if (@rbp & 0x2 >> $ip | $buffer)$proc + $proc << $buffer >> @r13 >> $proc >> @r10)  { test_statement(0x268B);  if (0xD & $ip ^ 0xB >< $teb & $buffer | @rbx ^ @rax)  { test_statement(0xF56); } } elsif ($teb <> $buffer << @r12 >> $teb) { test_statement(0x1010); ; val = @r8 ^ @r13 ; } else { test_statement(0x1E8C); }
$error$
$end$
305
 if (+@r12 + 0xD << @rdx << -@r10 ^ @r11 << +0xB >> @r9 >> @r9 & $proc & @rsp | $ip >> @rax >> @r9 & @rdi >> @r8 & @rsp & $buffer | @rsp & @rsi ^ @rsi ^ @rbx +@r12 + 0xD << @rdx << -@r10 ^ @r11 << +0xB >> @r9 >> @r9 & $proc & @rsp | $ip >> @rax >> @r9 & @rdi >> @r8 & @rsp & $buffer | @rsp & @rsi ^ @rsi ^ @rbx)  { test_statement(0xA1D); }
$error$
$end$
306
 if ($thread << @r13 << $buffer & $proc << $ip & @rsp >> @r9 & @rdx != $thread >> @rbx & $ip & @r12 ^ @r8 >> @r11 & @rbp >> $thread & $buffer)  { test_statement(0x15A5); val = @rbp >> @rbp ^ 0x4 & ~$ip ; } elsif ($ip & @rbx & $buffer & 0x6 | @r12 >> @r12 ^ @rsi & $proc != $ip & @rbx & $buffer & 0x6 | @r12 >> @r12 ^ @rsi & $proc) { test_statement(0x534); } else { test_statement(0x20F8); }
$error$
$end$
307
 if (@r8 + @r9 | @rsp << @r10 >> @rax & @rdx >> @r12 < @r8 >> $proc & @rsi << @rbp | @rbx << $ip ^ @rsi >> @r9 & $teb ^ @rdx & @rdi | @rdx)  { test_statement(0x74F);  for (val = 10; @r11 ^ $ip | @r11 ^ @rsi | @r11 > +@rax ^ $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
308
 if ($teb + @rdi << 0n0 << @rax ^ 0x6 << @r9 & @rdi & @rsi ^ @r13 >> 0y100 ^ ($thread) & $ip ^ +@rdi <= @rax << @rdx << +-23 & +@r9 ^ @rdx ^ @rsi)  { test_statement(0x1B45); } else { test_statement(0x145F);  while  (~@rdi != ~@rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r13 | @rdi <> @r13 | @rdi)  { test_statement(0x1ECB); } elsif (+@r8 == @r12) { test_statement(0x207E); } elsif (@rbp <> (@r11)) { test_statement(0x190); } }
$error$
$end$
309
 if (0n9 << @rax ^ +@rsp << @rax & (@r13) >> @rax ^ $buffer & @r13 ^ @rsp & $buffer | $buffer >> @rbp & @rdx >> $teb & @rbx((0n9 + @r10 & $buffer << @r11 | @rbx ^ $thread >> (@rbp) ^ @rsp & 6 ^ 0y11 | @r10 >> 2)  { test_statement(0x22D6); } elsif (0n14 >> $thread >> 0n18 & $teb & $teb > @r13 & $teb ^ @r10 >> @r10 | @rbx & +@rdx & @r13) { test_statement(0xD8A); val = $proc & $buffer | $ip ; ; val = (0n19) ; } else { test_statement(0x2378);  // /* This is a comment  }
$error$
$end$
310
 if (~$buffer >> $proc << 10 ^ @r9 << @r9 >> $thread >> @r9 | ~0x6 << (@rdi) >> 0xB & @r13 ^ @rdi & 0y111 & $buffer | @rsp > @rsi + @r12 & @rbp >> (@r9) >> @rdi)  { test_statement(0x1AC1);  // /* This is a comment  }
$error$
$end$
311
 if (0x13 + @r9 << @rax << +$teb ^ @r11 << @rax ! $teb + @r13)  { test_statement(0x2AD); } else { test_statement(0xE9D);  if (0n12 ^ $teb((0n12 ^ $teb)  { test_statement(0x6C3); } elsif (@r13 | @rbx((-@rsp) { test_statement(0x2075); } else { test_statement(0x222); } }
$error$
$end$
312
 if (@rdx + @rax ^ @rsi << @rax >> 15 = $teb + @rdx << 0y110 >> (@r13) << @rdx >> @rax ^ @r12 >> -(0x9) >> @rdi & @r9 ^ @r12 & @r10 & +$teb ^ ~0n16 & ~$ip)  { test_statement(0x1E4F);  This is a not opened comment */  if (0x1 ^ @rsi | @rdi | 0y1100 == 0x1 ^ @rsi | @rdi | 0y1100)  { test_statement(0xA5D); } elsif (@r12)@r12) { test_statement(0xFD0); } } elsif (@rsp << @rsi >> (@r12) >> $thread & ~$buffer >> @rbx & @rdx & 15 ^ @r11 >> @r10 <> @r11 & @r11 & @rdi) { test_statement(0x133F); }
$error$
$end$
313
 if (0xD <= 0n19 + @r12 & 0x7 << $thread >> @r13 & ~@rax >> @rdi | (@rdi) << ~@rbx >> @r9 >> @rdi | @rsp >> @r13 & $teb | @r12 ^ @rbx ^ @r9)  { test_statement(0x21BD); } else { test_statement(0x2388); }
$error$
$end$
314
 if ($teb << (@rbx) @r8 + @r12 << @r8 & @rbx << @rbx >> @rdi >> @r13)  { test_statement(0xBFF); ; } elsif (@r13 << 0y1001 ^ -$buffer >> -$teb | @rdx & 0x0 ^ @r13 & +@rbx <> @r13 << 0y1001 ^ -$buffer >> -$teb | @rdx & 0x0 ^ @r13 & +@rbx) { test_statement(0x1DC9); } elsif (@r12 >> @rdi > @r12 >> @rdi) { test_statement(0x2599); ; ; } elsif (0n3 & ~$proc ^ $thread)0n3 & ~$proc ^ $thread) { test_statement(0x12ED);  /* This is a not closed comment }
$error$
$end$
315
 if (@r9 + @rsi << @r13 << @rbx & 0y1100 >> 7 >> 0xA ^ -$thread << ($ip) < @r11 + $thread & @r11 << @rax & 2 ^ @r9 & @rdx >> $buffer & @r9 & 16 | @r12 << @r12 & @rbp & @r13)  { test_statement(0x1CA8); ;  // /* This is a comment  }
$error$
$end$
316
 if (0y10011 << @r10 << ~@r9 >> (@rbx) << @rbp >> @rax >> @rbx & @r9 ^ @r8 >> $proc >> $proc == @r12 + @r12 >> ~@rbp << +@rdx >> 21 >> @r12 ^ @rdi << 0n8 & $proc | @rsi << @rbx | $ip & @rsp ^ @rsi & 0x13)  { test_statement(0x23D5); }
$error$
$end$
317
 if (@rdi >> @rax << -(2) ^ @rax >> ~0y1100)@rdi >> @rax << -(2) ^ @rax >> ~0y1100)  { test_statement(0x816);  /* This is a comment */ } elsif (@rdi << $teb >> @rax >> +@rdi & +@r10 ^ 0n9 >> +@rax & +$ip | @rbp & (~@r12) & @r10 | $thread != @rdi << $teb >> @rax >> +@rdi & +@r10 ^ 0n9 >> +@rax & +$ip | @rbp & (~@r12) & @r10 | $thread) { test_statement(0x19F7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 ^ @r8 > @r10 ^ @r8) ;  if (@r10 | $buffer ; @r9)  { test_statement(0x6CF); } } else { test_statement(0x2298);  /* This is a comment */  for (val = 10; $proc $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 <= 0y11) ;  This is a not opened comment */ }
$error$
$end$
318
 if (20 & @r9 ^ @rdi << @r9 & 0n5 & ~@rbp ^ 15 ^ $proc & +$teb | 2 >> @r11 >> $proc ^ @r8 >> @rax ^ $thread & $teb ^ @r10 ^ @r8 | 0n3 & @rdx & @rdx ^ $ip & @r13 | @rbp ^ @rsi ^ +@r8 >< -@r8 + @rsp >> $ip << 0n1 ^ ~-+@r12 << @rax >> 0xE & +@rax >> @r9 & @r13 & @rbp)  { test_statement(0x1A6E);  break; } else { test_statement(0x2526); }
$error$
$end$
319
 if ($thread & @r13((@rbx << @r11 & ~~@r10 & @rbp & @r10 ^ @rbp << $ip >> -@rbx >> @rsi ^ ~0y1001 & $buffer)  { test_statement(0x110E); } else { test_statement(0x19F0);  /* This is a not closed comment  if ($thread)$thread)  { test_statement(0x1FB3); } elsif (@rbp <= @rbp) { test_statement(0x1625); } elsif ($buffer ; $buffer) { test_statement(0x181); } elsif (@rbx))@r13) { test_statement(0x52E); } else { test_statement(0x1D8C); } }
$error$
$end$
320
 if (@r9 + $ip >> @rsi <= $proc + 0n4 << $buffer >> 0x8 << @r12 & @rbx << @rsi ^ $proc & $ip | -(@rbp) >> $teb >> @rdi ^ $thread ^ @rsi & @rbp ^ @rsi)  { test_statement(0x11B8);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y101 | $thread | @rdx | @r12 >= 0y101 | $thread | @rdx | @r12) ; ; val = @r9 ; } else { test_statement(0x2147); }
$error$
$end$
321
 if (@r10 << 0y1000 | @rsi << @r11 >> @r10 >> @r8 & $buffer >> ~+@r12 & +$buffer & -@rsi ^ ($thread) ^ +(0y1111) & @rsp(0y1111 + @rax ^ 17 ^ @rsp | +11 & $teb >> @r10)  { test_statement(0xFB0);  /* This is a not closed comment  This is a not opened comment */  while  (13 >< 13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
322
 if ($teb >> $teb ^ @rsp << $ip & @r8 ^ @r11 & +$thread & $proc | @rdi << 1 >> @rsp >> @rdx & 0y10010 & @r9 | @rsp ^ -@rdi & @rsi)@rbp + @rdi << @r8 ^ @r11 << $thread | @r10 ^ -@r8 >> 0x13 & $thread & @r12)  { test_statement(0x63C);  /* This is a comment */ } else { test_statement(0xA59); }
$error$
$end$
323
 if (~@rsi << $buffer << -@rbx >> @rbx << @rbx | ~$thread | @rdi >> 0y1100 > $proc + 0y1011 >> +@rsi << $thread >> @r11 >> ~@rsp & @r9 >> @r9 | ~@rsp << @r13 & @rbx >> $proc & 0xC & $teb ^ $ip & @rsp & +22)  { test_statement(0x505);  // /* This is a comment   /* This is a not closed comment } elsif (@rsi << 14 >> 0n0 & @r9 & $teb & 0n15 | @r8 >> @rdi & -16 <= @rsi << 14 >> 0n0 & @r9 & $teb & 0n15 | @r8 >> @rdi & -16) { test_statement(0x1B87);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread ^ @r10($buffer ^ @r13) ;  if (@rsi @rsp | $proc)  { test_statement(0x1934); } else { test_statement(0x15EA); } } elsif ($thread & @r12 & -@r13 | @r8 & (~@r11) ^ -0y1110 >= $thread & @r12 & -@r13 | @r8 & (~@r11) ^ -0y1110) { test_statement(0x1D70); } elsif ($ip | @r10 >= $thread & @rbp) { test_statement(0x11DE); } else { test_statement(0x1606); ; }
$error$
$end$
324
 if (0x8 + @rdi ^ ~~+3 & @r8 >> 0y10011 | -@rsi >> 10 & @rdx >> @r9 & @rsi)@rsp + +@r10 << -0n7 << @rdx & @r11 << @r12 >> @rsi >> @r10 ^ @rbx << $thread >> @r13)  { test_statement(0x7A5); } elsif (@rsi << @r12 >> @rdi >> @r11 >= @r10 & @r13 & $proc & ~@rbp) { test_statement(0x1C2D); }
$error$
$end$
325
 if (~@rdi + 23 & @rbx << @rsp <> ~@rdi + 23 & @rbx << @rsp)  { test_statement(0x1A7D);  break; } elsif (@rdi >> 0n9 >> $ip((~~@r13 << @r8 & @rbp >> 0y10000 ^ $thread >> +@r13 | @r10 >> $teb | @r9 | 21) { test_statement(0x19DC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax = @rsp) ;  for (val = 10; @r9 | @r13 < @r9 | @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsi & @rax)@rsi & @rax) { test_statement(0x1908); ;  /* This is a comment */  // /* This is a comment  } elsif (@r9 | $ip ^ @rsp | 0n10 >< @r9 | $ip ^ @rsp | 0n10) { test_statement(0xF21); } else { test_statement(0x2158); }
$error$
$end$
326
 if (@r8 + 0y1000 << @rbx << @rsi >> @rsp >> +0n15 >> @rbp | 17 << @rbx | $ip & 0y100 & (0n14) | $buffer ^ 0y1110 ^ @r9 @rdi & 0y10010 << $thread >> @rdi & 0y1 & $proc & @rdi)  { test_statement(0x2207); } elsif (5 >> $teb >> @r12 & $teb ^ 11 ^ 11 ^ $thread ^ 0y1101 | @r9 & $proc ~@rbp << @rbx ^ @r13 >> 0n0 ^ 0xA) { test_statement(0x1FE2); ; } elsif (0y1011 ^ @rdx(0y1011 ^ @rdx) { test_statement(0x17C1); ;  while  (@rax <= @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($ip = @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 >< (0n10)) ; } elsif (1 ^ @rdx ^ (@r9) == +@r12 ^ +@rdx) { test_statement(0x129E); }
$error$
$end$
327
 if (~@r13 << $thread & @rax >> 0n12 & @r12 ^ @rsi << -@rsp >> @rax >> $proc & 0n1 ^ @rbp)0y1001 >> @rsi & 0 << @rdx ^ $thread)  { test_statement(0x87B); } else { test_statement(0x1F91);  /* This is a comment */ }
$error$
$end$
328
 if (@rax << $ip << 0x7 >> $ip >> 0y1110 ^ @rax << @rax ^ @r13 ^ ((-@rsp)) | (@r8) << ($ip) & +0x12 ^ $buffer >> 0y1001 ^ @r8 & 0n18 ^ (@rdx) < 0n11 << @rsp ^ @r8 << $ip >> 0n14 >> @rbx ^ @r11 ^ 16 & @rsp | @r11 >> @r13 & @rbx >> $thread)  { test_statement(0x1D4D); }
$error$
$end$
329
 if (@rsp + $ip & @rbp << $ip & $ip & 0n8 != @r13 + 0x7)  { test_statement(0x1DCE); } else { test_statement(0x21DB);  /* This is a comment */  while  ((0y1010) @r10 | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
330
 if (@r12 + 10 >> @r9 << 0xC & @r8 << $ip ^ @r12 << 0y10011 >> 0y1010 & ~-@rsp >> +0n7 & @r10 & $ip | $ip ^ @r11 | -(0n6) >> @r10 | @rbp & @rsp ^ @r12 ^ @r12 | @rax <> @r10 + (0n14) >> @r10 | ~@r8 << -$proc >> $thread | @rbp >> @rsp & (@r8) & $teb)  { test_statement(0x175B); }
$error$
$end$
331
 if (@rsi << ~$ip >> @rsi << @rbp >> $buffer | @rax >> $thread >> @rax & @r10 == @r10 >> ~$proc & 0x9 << @rdi)  { test_statement(0x1F5D); } else { test_statement(0x600);  while  ($ip ^ @r9 < @rdx ^ ~@rax | $proc | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
332
 if (13 + $ip << 2 << @rdi >> ~@rbx ^ @rsp & @r8 >> $buffer | 0n3 << 0n10 >> @rbx & @rsp >> @r9 & @rsi & $ip < @r9 & 5 >> @r12 >> @rdi)  { test_statement(0x2281); } else { test_statement(0x1D84); }
$error$
$end$
333
 if (0x5 + @r12 << ~+23 & @rbp << (@r8) & ~$buffer | +$thread ^ 0n9 | @r12 >> @rbp | 0 ^ @rdi ^ ~+$buffer == 0x5 + @r12 << ~+23 & @rbp << (@r8) & ~$buffer | +$thread ^ 0n9 | @r12 >> @rbp | 0 ^ @rdi ^ ~+$buffer)  { test_statement(0xBC5);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx | @rbp | @rdi < ~$proc & 0y110 | @r13 ^ @rdx) ;  while  (@rdi ^ @rsi | $proc <= -~0y1001 ^ $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rdi ^ @rbp ; ;  // /* This is a comment   if (@r10))($proc))  { test_statement(0x745); }  for (; $teb < 0n9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1AB9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 6 | @r13 | @r13 6 | @r13 | @r13) ; }
$error$
$end$
334
 if (~@r11 >> @r11 & @r11 >> @r11 ^ @rdx << @rbp >> @r10 ^ @r10 >> $proc & @rsi <> 0 + @r12 << +@rax >> $buffer << @r12)  { test_statement(0xB96); }
$error$
$end$
335
 if (@r13 << @rdi << @r9 >> @r10 ^ @r9 << @rbx >> +@rdx >> @rbp ^ @r11))@r13 << @rdi << @r9 >> @r10 ^ @r9 << @rbx >> +@rdx >> @rbp ^ @r11)  { test_statement(0xA3); }
$error$
$end$
336
 if ($proc + @rsi >> @rbp ^ @rbx | @r12 << $thread ^ 0y1011 >> @rsi & @rdx & @r12 ^ $ip | $ip >> +$teb ^ @r12 @rsi + 0n2 & @rbp << @rsp ^ ($buffer) << @r12 ^ @rsp >> @rdi ^ -@r9 | 2 | @rbx & -@rsi)  { test_statement(0xBA8); } elsif (@r10 << 23 | (@r13) ^ 22 & @r8 ^ $buffer ^ @r11 ; @r10 << 23 | (@r13) ^ 22 & @r8 ^ $buffer ^ @r11) { test_statement(0x99B); } elsif ($proc >> @rbx | @r8 & @rbp | @r9 | @rdi | $teb = $proc >> @rbx | @r8 & @rbp | @r9 | @rdi | $teb) { test_statement(0x48D);  break; } elsif (@rdi & (~$ip) ^ ~@rdx ^ $ip | -~@rbp | @r13 | @r8((@r10 | ~$ip ^ @rdx | @rsp | @rsi) { test_statement(0x20AA); } else { test_statement(0x1B4C);  // /* This is a comment  }
$error$
$end$
337
 if (20 + @r12 >> $teb >= @rsp + 0y1001 >> @r9 >> +-@r12 >> 0n9 & $teb >> @r11 >> @r9 & @r9 ^ $thread << 0x4)  { test_statement(0x1BA9); } else { test_statement(0x2567);  if (@r9 ^ @rbp)0y11 ^ $proc)  { test_statement(0x1229); } elsif (@rsp > 15) { test_statement(0x1A56); } elsif (@rbp = @rdi) { test_statement(0x1BC1); } elsif (@r8 >= @r8) { test_statement(0xD2A); } elsif ($proc((@r11) { test_statement(0x1860); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread | @r9 >= $thread | @r9) ;  /* This is a not closed comment }
$error$
$end$
338
 if (10 << @rdx | @rax << @r11 >> $thread & $thread >> 14 ; 10 << @rdx | @rax << @r11 >> $thread & $thread >> 14)  { test_statement(0x1BC5); val = 0y1010 & $proc ^ @rdx | +@r9 ^ -(@r10) ^ @r10 | 16 ^ @r8 ; } elsif (($ip) >> @rax >> 0y111 & -$buffer >> @r10 | $buffer | $proc & @r12 ^ 13))($ip) >> @rax >> 0y111 & -$buffer >> @r10 | $buffer | $proc & @r12 ^ 13) { test_statement(0x39); } elsif (0n9 >> ~1 & @r9 | (@rax) & $thread ^ $buffer | @r11 ^ 0n9 <> @rsi & @rbx & ($buffer) ^ 20 & 0n6 ^ @rsi ^ $ip) { test_statement(0xCBB); } else { test_statement(0x304); }
$error$
$end$
339
 if ($proc + @r12 & -0y10000 & @r9 & @rbx & $buffer ^ @r8 >> -@r12 ^ @rsi >> @r10 | @rbx >> 0x9((@r8 << ~@rbp ^ ~@r13 >> @rax ^ @rsp >> @rdi & 0n0 & 0n1 ^ ~($thread) ^ (@r13) ^ ~0y10000)  { test_statement(0x1421); } elsif (23 << @rax >> $teb >> 0y1 ^ -@rbp & @rbp ^ 0y1000 ^ 0n15))@r11 << $buffer >> @rsp & @r10 | @r9 & @r10 & @rsp) { test_statement(0x20EA); } elsif (@rax & 0x6 & (0y10010) ^ @rbx | @r9 < @rdx ^ $buffer ^ $teb ^ $buffer | ~$ip ^ $proc | @r10 ^ $teb | +@rdx) { test_statement(0x1EC5); } elsif (0y1101 > -@rsi ^ ~@rsi ^ ~@rbp) { test_statement(0x1230);  This is a not opened comment */  if (@r10 != $thread)  { test_statement(0x1B45); } else { test_statement(0x13BE); } @rax = @r9 ; }
$error$
$end$
340
 if (@r11 + @rbp >> @rax & @rbp << (@rsp) >> @rbp >> @rsp & @r8 ^ 0y10011 >> $proc >> $teb & @rdx >> @rbp))$thread + @rbx << @rbp ^ $proc << @rbp & $thread >> -(4) & (@rbp) ^ @rbx >> $thread ^ $teb & @rsp ^ @rdx | -$buffer >> -@r12 & +$thread ^ @r11)  { test_statement(0x16B5);  // /* This is a comment   for (; @rbp | @r10 ! +@r13 ^ @rdx | 7 | @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rax | @rsi <= (@r11))  { test_statement(0x13B2); }  /* This is a not closed comment  This is a not opened comment */  while  (@r9 < @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx << @r13 >= @rdi << $buffer & @rdi & @r13) { test_statement(0x171A); } elsif (@rax >> 15 ^ @rbp ^ ~@r13 ^ 0y1000 ; @rax >> 15 ^ @rbp ^ ~@r13 ^ 0y1000) { test_statement(0x10C3); } else { test_statement(0x1DAE);  /* This is a comment */ @rax = $buffer ^ @rsp | $proc | @rdx ; }
$error$
$end$
341
 if ($proc << ~17 >> 2 ^ 0x12 << $ip >> $ip | @rsi << $thread >> @r9 & @rdx ^ $teb >> @rdi | 0y1 >> @r10 != $proc << ~17 >> 2 ^ 0x12 << $ip >> $ip | @rsi << $thread >> @r9 & @rdx ^ $teb >> @rdi | 0y1 >> @r10)  { test_statement(0x18CF);  if (0x12 ^ @r11 <= @rsi ^ @rbx | @rbx ^ @rdi)  { test_statement(0x7F6); } elsif (-$ip ^ 14 | $proc | @rsp > @rax | @rdx | 0n19) { test_statement(0x2404); } elsif (@r8 | $teb != @r8 | $teb) { test_statement(0x963); } elsif (@r13 != $proc) { test_statement(0x2595); } elsif (@rax != @rbp) { test_statement(0x125B); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 7 ^ @r10 > $thread ^ @r9 | @rdx | 0n0) ; } elsif ($buffer >> +@r8 >> $thread ^ @r9 >> @rbx & @r12 & @rbp <> $buffer >> +@r8 >> $thread ^ @r9 >> @rbx & @r12 & @rbp) { test_statement(0x1457); }
$error$
$end$
342
 if ($proc + $thread << @rdi << @rdi | ~@r12 >> 23 >> @rsp & $ip ^ 0xE >> -@rax ^ $buffer ! @r12 + $ip >> @rdi >> ~$proc >> $teb & @rdi >> 0y10001 >> @r9 & 0n11 >> $proc & @r12)  { test_statement(0x10E4);  This is a not opened comment */ }
$error$
$end$
343
 if (0x3 + @r12 << @r8 >> -@rsi & $buffer << $teb & ~~0n8 >> @r9 & +0y10000 ^ -@r12 >> 0y1100 & @r11 | @rdi << $teb >> 0y101 >> @r13 ^ +@r13 >> 0x6 != 0n2 + $buffer >> @rdx << @r10 >> $teb & (0x2) << @r9 | 0y1110 << $buffer >> @r9 ^ 14 | @r13 >> +$proc)  { test_statement(0x10C); }
$error$
$end$
344
 if (@r8 + @rdi >< $proc >> @rdx ^ 0n15 ^ 4 & $buffer & 0n19 ^ @rsp & @rbx | @rax >> +0 ^ @r11 & $proc)  { test_statement(0xB65);  while  ($thread & ~@r10 ^ @rax | @rbp ^ @r10 | @rsi | 0y110 $thread & ~@r10 ^ @rax | @rbp ^ @r10 | @rsi | 0y110)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (23 >> @r13 & @rdi >> @r12 | @r9 >> (23) & @rdi & @r11 | $ip >< $proc << $buffer >> $teb & 0x8 & 17 ^ 0n13 >> +@rbx | @rbx >> @rbp & @r12 | @r9 ^ @rbx ^ 0x8 | @r12 ^ @rdx | @rdx) { test_statement(0x22D1); } elsif (@r8 >> $proc ^ @r8 & $proc > 0y1111 & ~@rdi & @r10 ^ @r12 & $ip | $proc | @r13 ^ @r11 | @rdx | -@r11) { test_statement(0x223C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12((0y101 | $thread) ;  /* This is a comment */  /* This is a comment */ ; }
$error$
$end$
345
 if ($buffer + @r9 ^ @rbx << @rdi >> @rsi >> $ip & $buffer & @rbp & $proc = ~@r13 << @r13 ^ @rbx ^ 0n12)  { test_statement(0x13A9);  // /* This is a comment  ; }
$error$
$end$
346
 if (0xA + $thread << 14 >> 0n14 << 4))@rsp + $buffer >> 0y10001 >> @rax)  { test_statement(0x1E6C); } elsif (0n15 << ($buffer) & @rax >> 0x9 | -0xE >> @rbp & +$proc & 23 ^ @r13))16 ^ @rsi >> @rdx | @rsi) { test_statement(0x1271); val = @r8 & @rsi ^ @rbp | $teb ;  This is a not opened comment */ @rax = (@rsp) ; ;  This is a not opened comment */ } elsif (@rdi & @r12 ^ (@r13) & @r8((@rdi & @r12 ^ (@r13) & @r8) { test_statement(0x4DA);  /* This is a not closed comment } elsif (@rsp ^ @rdi >= @r13 & +$thread ^ -@r12) { test_statement(0xC9F);  /* This is a not closed comment  for (val = 10; ~11 > @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb <= $teb) ; } else { test_statement(0x7D6); }
$error$
$end$
347
 if ($buffer >> @r11 << 0n12 >> $thread >> ~@rbx <= $buffer >> @r11 << 0n12 >> $thread >> ~@rbx)  { test_statement(0x1B7E); } elsif (@r8 ^ 6 | @r11 ^ $proc | --$buffer & @r13 | @rbp ^ +@rsp == @r8 ^ 6 | @r11 ^ $proc | --$buffer & @r13 | @rbp ^ +@rsp) { test_statement(0x1BF1); } elsif (21 ^ $buffer | @r12 | @rsp == $buffer >> @rax & @r9 | $ip ^ $buffer | 0x6 ^ 0y1110) { test_statement(0x20CF); ; } elsif (@r8 ^ @rax | @rdi(($ip & ~0y101 ^ @rbp ^ @rdi | @rdi | @r11) { test_statement(0x3D1); } elsif (@r12 ^ 20 | @rax ! (@rsp) ^ 0x6 | @r13 | (@rbx)) { test_statement(0x117C); } elsif (@rsp ; $ip | $thread) { test_statement(0x124E); } else { test_statement(0x1692); }
$error$
$end$
348
 if (-@r11 + ~@r11 << +$teb << @rdi >> --@r13 & @rbp << @r9 >> ~~$ip >> 0x10 & $buffer >> ~$thread & (@rbp) > -@r11 + ~@r11 << +$teb << @rdi >> --@r13 & @rbp << @r9 >> ~~$ip >> 0x10 & $buffer >> ~$thread & (@rbp))  { test_statement(0x1D8B); } elsif (@rsp << @rax >> @r11 >> ~@rbp & @rdi & @r8 & -@rbp ^ $teb ! $ip << @r9 >> $buffer >> @rsp ^ 10 >> @r11 & 0x0 ^ $proc) { test_statement(0xED0); } elsif (~@rsp ^ ~@rax | ~@rdi ^ @rdx = @r10 & @r10 & ~@rbp ^ @r13 & @rbx) { test_statement(0xF7F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@rax | @rbx = $thread | @rax) ; } elsif (@r9 & @r8 ^ @rax ^ @rbx | 4 | @rax <> @r9 & @r8 ^ @rax ^ @rbx | 4 | @rax) { test_statement(0x1651);  /* This is a not closed comment  /* This is a not closed comment  if (@rsp(@rdi)  { test_statement(0x1736); } } elsif (0n2 ; 0n18 | @r9 | $thread) { test_statement(0x5C5); } elsif ($teb | 0y10011($ip | $proc) { test_statement(0x1244);  // /* This is a comment  }
$error$
$end$
349
 if (0x10 << $thread & $thread >> $teb | $teb << $teb & $ip >> @r11 & 0y1011 | @rbx >> 0xC ^ ++@r10 0x10 << $thread & $thread >> $teb | $teb << $teb & $ip >> @r11 & 0y1011 | @rbx >> 0xC ^ ++@r10)  { test_statement(0x22B7); } elsif (@r13 >> $teb >> $teb <= @r13 >> $teb >> $teb) { test_statement(0x111B); } elsif (@rsp & ~@r8 & @rbx ^ @r11 & $proc | $thread & @rsp == ~@rbx & @rax & (@rdi) ^ 0n1 & $proc ^ @rax | @r13 & @rax) { test_statement(0x1558);  // /* This is a comment   /* This is a comment */  /* This is a not closed comment ;  // /* This is a comment  } elsif (@rdx & $proc ^ @rdi | @rsi ^ @rsi)@r11 & @r8 ^ ~@r9 ^ @rdi) { test_statement(0x15AC);  for (val = 10; ~@r12 ; ~@r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 >< @r13) ; } else { test_statement(0x2630);  This is a not opened comment */ }
$error$
$end$
350
 if (0y110 + 0y10 << +-0n13 & @rsp << @r11 & $buffer >> @rsi <= @r8)  { test_statement(0x1EE);  break; } elsif (@rdx << @r10 | @rax >> @rdi | +~@r10 ^ @r9 ^ 0xB ; @rsp << ~@rdx & @rbx & -(@r12)) { test_statement(0x2638); }
$error$
$end$
351
 if (@r13 + @rbp >> ~$buffer << @r8 & $thread << @rbp >> $ip >> $ip ^ $ip << 0xE | 0n5 >> $buffer >> 3 & @r8 & $buffer ^ $buffer & $proc ^ $buffer ^ $buffer ^ 0n14 | @rax & @rax | @rax & $ip < 4 << @rbx ^ $buffer)  { test_statement(0x3C0); } elsif (~@r10 & 0y10001 ^ @r8 & $teb ^ $proc & 0y10000(~~(0x12) ^ +$teb >> @r9 & @rax & $proc ^ @r8 & 0y10000 | @rsi ^ @rbp & 0xE ^ +@rax ^ @r10 | $thread | @rbx ^ @r10) { test_statement(0x1C9F); } else { test_statement(0x33C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb | @rsi == $buffer) ; }
$error$
$end$
352
 if (4 + @r13 & @rbx << +$buffer >> 17 & +@r11 >> @r8 ^ @rbx << $thread & 0y1011 >> $teb & @r10 & $buffer < @rbp << @rbp << $teb)  { test_statement(0x25B2);  /* This is a not closed comment  break; } else { test_statement(0x18B6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi | @rdi | @rax((0x2)) ;  if (@rdi | 0x6 ! @rdi | 0x6)  { test_statement(0x19E6); } else { test_statement(0xC8B); } @rax = @r10 | @r10 ; }
$error$
$end$
353
 if ($thread << @rbp >> $proc << -@rdi ^ @r9 << 1 >> @rdx & @rbx >> @rsp | $buffer & 0y1001 >> ~@r9 & @r10 & @rdx >= $thread << @rbp >> $proc << -@rdi ^ @r9 << 1 >> @rdx & @rbx >> @rsp | $buffer & 0y1001 >> ~@r9 & @r10 & @rdx)  { test_statement(0x1EE9); val = @r12 ^ @rsi & @rbp | @r12 & @r12 | @rdi ^ 0x9 ; }
$error$
$end$
354
 if (--@r11 + 3 << 0n15 << $proc >> @r8 << @r8 >> $ip >> 0x11 & +$thread ^ $buffer >> 0n4 & @rax >> @rbx & ~0n17 & @rbx ^ +0n5 >> 0xE & +@rbx & ~~0n16 @r12 >> @rsi ^ @r8 | 12 >> $teb >> $thread & $ip & @r13 & $teb ^ @r8 >> @rdx & @rdx & @r10 | @rbx >> 0n2 ^ 0y1010 & @rdx | 20 & +@rsi)  { test_statement(0x65); } elsif (0x1 & ~@rax >< 0x1 & ~@rax) { test_statement(0x33B); } elsif (($buffer) | (@rdi) ^ @r11 ^ ~@rdi | @rax == ($buffer) | (@rdi) ^ @r11 ^ ~@rdi | @rax) { test_statement(0x1CA3);  while  ($proc | @r8(@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   break; ;  // /* This is a comment  } elsif (@rbp & @r10 ^ @r8))@r13 | @rsi) { test_statement(0x202A);  while  (0x6 @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r8 ; }
$error$
$end$
355
 if (0y0 + -@r10 << 4 >> @r10 << $thread >> @r13 ^ 21 >> -(@rsp) ^ 0y1001(($teb + 2 >> @r10 >> -~(-@r13) | @rax >> +22 & @r10 | @rbx | @r9 & $teb)  { test_statement(0xF49); }
$error$
$end$
356
 if (~@rdi << @r11 << @r11 ^ 0n17 << 0n0 >> @r10 >> +23 & @rax >> @rbp | @r13 << @r13 ^ @rdi | $ip >> $thread ^ 7 > @r13 << (@rbx) >> $ip << @r10 >> 0y1011 ^ $teb << $teb >> $ip & @rbx & 0n5)  { test_statement(0xFB7); } elsif (-11 ^ @rdi >> @rdi))-11 ^ @rdi >> @rdi) { test_statement(0x1C16); } elsif ($teb >> @r9 ^ 0y11 & $ip ^ @rsp ^ @r11 | @r10 & -$buffer ^ +@rbx == @r9 & @r8 ^ ~$ip & $thread | @r10 & +0n14 ^ @rax) { test_statement(0xD53); } else { test_statement(0xE9C); }
$error$
$end$
357
 if ($proc + @r12 << @rdx << @r10 >> @rax << $buffer & @r10 << $buffer & 0n8 ^ $thread & 0y10011 >> @rbx & 0y1111 & -22 ^ 0x2 >> $teb < @rsp >> @rsp << @rbx >> @rdi ^ 0n4 >> $teb >> @rdi)  { test_statement(0xF88); ; } elsif (@rsp >> @rax >> @r10 & @r11 & -0y1000 & $ip | $thread ^ ~+0n10 ; @rsp) { test_statement(0x2466); }
$error$
$end$
358
 if (@r9 >> @rbp >> @r8 ^ $thread >> @rbx | $proc << @rsi >> 0xD >> @r8 & 0n4 ^ @r8 >> $ip & @rsp(($thread ^ @rax << ~@rsp >> @r10 & ~@r13 & @r12 & 0n16)  { test_statement(0xE0E); }
$error$
$end$
359
 if (@rdx >> $buffer << @rsp >> @rdx & $buffer & @r11 & $proc & @rbp ^ @rsp << +(@r9) >> 0y10001 ^ @rbx >> @rbp & $proc & @rsi | @r10 << $proc & @r12 ^ ($buffer) >> @r13 & (@rdx) & @r11 = ($proc) + @rsp << @r8 & 0y10000 << $teb ^ 6 << @rdx >> $proc >> @rax ^ $teb & @rbx & @rdi | $proc >> 0n6 >> 7 & @rsp)  { test_statement(0x1288);  while  (@rdx ; @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer << @r12 >> @rdx & $proc >> -$teb ^ @r10 | (@r9) | -(@r10) & @r11 ^ @rbp ^ $teb > $thread >> @rbp & @r11 & ~5 & 0y0) { test_statement(0x12B); } elsif (~$teb >> (@r11) & 0n12 ^ @rdi & @r8 ^ $thread ^ @rdi | @rbx & 21 $thread & @r13 & @r8) { test_statement(0x6D9); } elsif ($teb ^ $buffer ^ @rbp != @r13 & @r12 ^ +$teb | @rbp | @r10 | @rdx) { test_statement(0x865);  /* This is a comment */ ;  break;  for (; @r11 < @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
360
 if (@r12 << @rax >> --@rax << $buffer & @r11 << @r9 >> $teb >> 0x8 ^ @rax << $ip >> 0n1 | $teb >> @rbp & @rdi >> @r13 & $thread & @rbx | @rsi >> 0n14)@rsi << @rbp << ~2 >> $ip & @rdi ^ +0y1001 & 0x1 >> 0y100 & $thread ^ -10)  { test_statement(0x262D);  // /* This is a comment  } elsif ($buffer << +@rsp >> @r9 ^ @rax & @rbx = +@rbx << -+5 & 0x4 & @rsp & @rbx ^ -~@rsp & -$buffer & $ip) { test_statement(0x22FB); } else { test_statement(0xB0C); }
$error$
$end$
361
 if (@rax << @rsi << +@r13 & @rdx << $buffer)@rax << @rsi << +@r13 & @rdx << $buffer)  { test_statement(0x1C3D); } elsif (0x11 >> @rdi >> ~~@rax & $thread >> @r8 ^ @rdi == $teb >> @rdi >> @r10) { test_statement(0x1042);  /* This is a not closed comment @rax = @r13 | @rbp ; } elsif ($ip > @r10 >> 0n16 | @r9 ^ @rax | 0n3 ^ @rax | @r11) { test_statement(0x2B5); } elsif (@rax | @rax(@rax | @rax) { test_statement(0xFC2);  break; } elsif ($ip ^ 2 | 17 | $proc >< @rsp | @rdx) { test_statement(0x1CEC); } else { test_statement(0xF2); }
$error$
$end$
362
 if (@rdx + (0n7) << 4 << $thread & $ip << +23 & ~~@rdx & @r10 | @rdi >> @rdi | (~+$buffer) ^ $buffer | $proc | $teb ^ $thread | @rsp | $buffer != (@r10) << @r13 & ~3 | @rbx << 0n11 & $thread ^ 0n14 & @rsp ^ $proc & -$buffer)  { test_statement(0x1DB4); } else { test_statement(0x1D2E); }
$error$
$end$
363
 if ($buffer + $buffer << @rsp & @rdi << @r8 >> @rax | (@rax) ^ 0y10011 >> 0xE & @rbp & @rax | @rbx ^ (0y11) & @rdx | @rsi & 0y1110 | @rdx ^ @r8 ; -@r12 + @rsi >> @rbp ^ @r13 ^ @rsi & @rax ^ ~@r13 & $buffer | @r12 << $thread & @r12 & @rax & @rdx)  { test_statement(0x1136);  // /* This is a comment   /* This is a not closed comment  while  ($thread | $thread))~$thread | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; ;  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread <= $thread) ; } else { test_statement(0x2663);  This is a not opened comment */ }
$error$
$end$
364
 if (@rbp << @r8 & $ip >> 0x1 & -@r12 >> @rdx | +@r11 << (@r11) >> @r9 >> @r10 & -$buffer ^ $proc & @rsi | @r12 & -0x12 & $ip ^ @rsp & $thread ^ @rax | @r9 >< 13 >> $teb << @rdi ^ $proc >> @r10)  { test_statement(0xE9F); } elsif (@r9 >> @r9 & ~$proc >> -+@rdx & +@rax ^ @r10 & 0y1000 ^ @rdx | ~@r13 ^ @rsi ^ $ip ^ @rdi > +@r13 << @rsi & $thread & @rdi | $teb >> @r12 & @r13 & $teb ^ ($proc) | @r13 & 6 ^ @r8 ^ +$thread | -@rdx ^ (@r9)) { test_statement(0x25A); }
$error$
$end$
365
 if (0n5 + @r10 << (@r12) ^ @rbx & @r8 & $proc & ~0y110 | @r10 << @r11 >> @rbp >> $buffer ^ @r8 & $buffer & $thread | @rbp & @rbp & @r8 | @rsp & @r8 ^ @rsi ^ @r11 = 0n5 + @r10 << (@r12) ^ @rbx & @r8 & $proc & ~0y110 | @r10 << @r11 >> @rbp >> $buffer ^ @r8 & $buffer & $thread | @rbp & @rbp & @r8 | @rsp & @r8 ^ @rsi ^ @r11)  { test_statement(0x1CA5);  break; } elsif (@r8 ^ @rsp ^ 17 & @rdi <> @r8 ^ @rsp ^ 17 & @rdi) { test_statement(0x1BCB);  for (; 0xB ^ 0n4 | @r10 | @r12 >= 0xB ^ 0n4 | @r10 | @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp >> +(@r13) & (0x13) & 0n13 ^ $teb | $ip ^ @r8 ^ $thread | @rbp | -(@r13) != ($buffer) >> -@r13 ^ @rbp & @rsp ^ @rdi) { test_statement(0x268F); }
$error$
$end$
366
 if (0xE >> @r11 << @rdx >> @r12 & @r8 | 0y1 << $ip & 0x0($buffer + +@r11 << $proc >> ~@r11 & $thread << $ip >> @rsi & +@r13 >> @rbx ^ $proc << @rsp >> -+0n13 & 13 & -~@rdx & @rdx)  { test_statement(0x1008); } else { test_statement(0x628); ; }
$error$
$end$
367
 if (0x10 + ~@r13 << $ip >< 0x10 + ~@r13 << $ip)  { test_statement(0x21DB); } elsif (+0x13 >> 0n19 & --@rsi >> @rbp & @rbx ^ @r11 & @r8 ^ $buffer ^ @rdx | $proc ^ @r12 & @r13 < $buffer & $buffer >> $thread & -@r13 & @rdx ^ @rax | @rax >> @rdx) { test_statement(0x1D8D); }
$error$
$end$
368
 if (--0y10011 + $teb << @r11 << $ip >> +20 & 1 << ~@rax = @rdx << $proc << @rsi >> ~@rbx ^ $proc << $ip & $buffer >> $teb & 0y1111 ^ 0n12 | @r12 << @rsp)  { test_statement(0xA7A); } else { test_statement(0x11A1); }
$error$
$end$
369
 if ($buffer << @r11 >> @r9 << $buffer >> @r9 & @r8 << ~-++(0n16) >> $proc >> +@r10 ^ $ip << @r8 ^ @rax >> $buffer ^ (+@r13) & @r11 ^ @r9 ^ 0xD)@rdi << @rax << @rdx & @rsi << @r12 >> (@rbp) & $teb & @rbp & 0x9)  { test_statement(0x1DE4); } elsif (0n19 & @r11 >> 0n13 = 22 << @rsi >> @r8) { test_statement(0x21A8);  break;  break;  break; } elsif (0y10001 >> @rax ! @r13 >> -@rsp) { test_statement(0x1ABB); }
$error$
$end$
370
 if (@rbx + 0y100 & $proc << 0xF ^ 1 ^ @rax & @r9 & ((@r12))(0n17 + $ip << @rax & @r9 ^ $ip << @r10 >> @rax & @rbp >> -@r10 & $teb & +@r10 | @r11 >> @rsp >> -0x0 & @r13)  { test_statement(0x9F6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp | $teb ^ @rsp | @rdi | @r8 >< @rbp | $teb ^ @rsp | @rdi | @r8) ; ;  This is a not opened comment */  if (0n15 < @rdx)  { test_statement(0x1BDF); } else { test_statement(0xBF2); } } elsif ($ip == @rdi << @r8 ^ @r12 >> @rdi & ~@rax | 0x9 ^ @r10 ^ @r13 ^ +@r9 | ~@r11 | @rsp | @r9 | $thread) { test_statement(0x2241); } elsif (@rax ^ $thread & @r8 | @rbp & 20 ^ -@r12 ^ +~$buffer < @rax ^ $thread & @r8 | @rbp & 20 ^ -@r12 ^ +~$buffer) { test_statement(0x148A); @rax = $buffer ^ $ip | @r8 ; } else { test_statement(0x2605); }
$error$
$end$
371
 if (@rsi << 22 & @r13)@r8 + -@r11 >> @rbx >> $ip >> $ip & @rbp ^ @rdx << @r10 >> @r13 >> $teb ^ @rsp)  { test_statement(0x12EC);  /* This is a not closed comment } else { test_statement(0xE6B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1111 ^ @r9 | 2 | @rdi = $buffer ^ (@rdx) | @rsi) ;  if (~(@r11) | @r12 <= ~$proc)  { test_statement(0x13A4); } }
$error$
$end$
372
 if (0y1111 + @rdx >> ~@r9 << @rax >> 0 >> $proc & -~@rdx >> 0y11 ^ @rbx & $ip | +~$teb >> @rdi >> $proc | @r9 >= 0y1111 + @rdx >> ~@r9 << @rax >> 0 >> $proc & -~@rdx >> 0y11 ^ @rbx & $ip | +~$teb >> @rdi >> $proc | @r9)  { test_statement(0x20A4); ;  while  (0xA ! 0x1)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r9 | @r11(@r8)  { test_statement(0xFF7); } elsif (@rsi >< @rsp) { test_statement(0x1744); } } else { test_statement(0x1148); }
$error$
$end$
373
 if (-@r12 >> @rsp ^ ++@rdi >> @r12 & @r12 >> $ip & $ip & @rsp | @r8 ^ $ip >> @rsp & @rbp & $thread | (@rsi) & $thread & (@rax) ^ @rsp & @r13 < @r8 + @r8 << $thread << @rax | @r11 >> @rbp >> @rbx ^ $teb >> @rbp)  { test_statement(0xF8A); }
$error$
$end$
374
 if (+16 >> 0x3 >> @r9 >> @rsp & $teb << $proc)+16 >> 0x3 >> @r9 >> @rsp & $teb << $proc)  { test_statement(0xE7A); } elsif ($buffer << +0n11 >> 0n11 | $thread & $buffer == @r10 >> @r9 >> 0x5 | @rdi & @r8 & @rdx ^ 0n12 & 0y111 ^ $thread) { test_statement(0x325); }
$error$
$end$
375
 if (@rsi | @rsi >> @r13 >> 0x1 & $buffer >> 0n7 & @rax & @r11 | @rax & @rsi ^ (0n10) & +$thread ^ 11 ^ @r13 = 0y1101 << @r10 >> $ip << ~$buffer & @rdi >> $thread >> -@rdi & @rsp & 0n1)  { test_statement(0x2479); } elsif (@r9 & @rsp ^ 22 >> @r8 | @rdx & $ip ^ @r11 | 0xA & $buffer | -$buffer | +$proc | @r11)~~@r8 << @rax >> $proc ^ @rdi & @r13 | @rsp ^ @rdx & @r8 ^ $proc | +@r12 ^ @r13 ^ $buffer) { test_statement(0x1DA); }
$error$
$end$
376
 if (@r13 + $proc >> +@rdx & @rax & @r12 >> @rsp & @rbp | @rbx ^ ~@rbp ^ @rdx & $thread ; @r13 + $proc >> +@rdx & @rax & @r12 >> @rsp & @rbp | @rbx ^ ~@rbp ^ @rdx & $thread)  { test_statement(0x38A); } elsif (@rax << $buffer ^ (0x3) & 21 & -(@rbp) | @rsp >> $proc & @rax | 0y100 ^ @r13 <> 0n16 >> @r10 ^ (@r10) & 23 & -($ip) ^ 0y10001 & @r8 ^ 0n15) { test_statement(0x1A7B);  if (@rax ^ (0x3) <= @r9 | +~-7 | +@rsp)  { test_statement(0x1EB3); } elsif (@rdi >< @r13) { test_statement(0x24DF); } elsif ($proc ; $buffer) { test_statement(0x243A); } elsif (+@r13 >= @rdx) { test_statement(0x12B2); } elsif (@r9 <= @r8) { test_statement(0x1B74); } } elsif (0x4 >> $thread ^ @rsi & @rsi ^ $thread ^ @rax <> +@rbx >> 0 | @rdx) { test_statement(0x122E); } elsif (+@r11 | @rdi ^ @rsp >= @r10 & $ip ^ 11 ^ @r12 | @rdi ^ @rax | @r10) { test_statement(0x848);  This is a not opened comment */ } elsif (-@rsp))@rbx | @rax) { test_statement(0x40D); } else { test_statement(0x143E);  /* This is a comment */ }
$error$
$end$
377
 if (@rdx + $thread >> $ip >> 0y111 >> @rsi & -$thread ^ $buffer)@r10 + 0n3 >> ((@rsi)) << +0n4 ^ $proc << ~@r11 & +@rdx & @rdi | (@r9) & @r13 >> @r12)  { test_statement(0x123E); } elsif (0x7 >> ++0y10 & @r12 >> @rdx >= 0x7 >> ++0y10 & @r12 >> @rdx) { test_statement(0x258A); }
$error$
$end$
378
 if (@rsp & +(@r12) >> 0n16 | 0n15 >> @r10 & ($buffer) & -~@r10))@rsp & +(@r12) >> 0n16 | 0n15 >> @r10 & ($buffer) & -~@r10)  { test_statement(0x7DC);  break; } elsif (@r10 << $teb ^ @rsp & $thread & @rsp(@r10 << $teb ^ @rsp & $thread & @rsp) { test_statement(0x1CF4);  while  ($buffer ^ @rdx | $thread | @rax @r9 | @rsp | (20))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = ($teb) ^ @r13 | @r13 | @rbx ; } elsif (@r9 >> @r12 ^ $ip & @rbx | @r13 | $thread | @rsp ; @r11 >> (@r9) & @rbx & ~@rax ^ 0x2 & +~@r12 | +@rsp & @rbx | $buffer) { test_statement(0x4ED); } else { test_statement(0x2035); }
$error$
$end$
379
 if (@r11 + @rax << ~$ip << @rsi >> $thread << @rax >> 21 >> @r10 & 0y1000 >> 0x3 >> @rax >= $proc << 0y1110 << @r10 >> @r9 & $proc << @r13 >> -@r10 >> @r12)  { test_statement(0x19B);  This is a not opened comment */ val = +@r8 | 10 ; val = @rdi | @rsp ;  // /* This is a comment  } else { test_statement(0x11BB);  /* This is a not closed comment }
$error$
$end$
380
 if (@rdx + 12 & $proc | ~$thread >> $ip >> ~@rbx & +11 >> -@r10 | @r10 & @rax & (0n7) ^ @rax & $teb > 0xB + 20 >> $teb << @rbp | @rdi & $thread >> (@rsi) & @r13 | $ip >> @rbx & @r13 ^ @rdx & 0x10 | @rdi ^ @rsi ^ $teb | @r13)  { test_statement(0x98D);  This is a not opened comment */ }
$error$
$end$
381
 if (@rbp + @rdi << 0 >> 0n8 ^ $teb << @r11 & @rbx | @rdx << 0n11 & 0y1100 >> @rsp & --$thread ^ $thread >> 0x0 ^ @r8 | $teb & 3 & +@r11 ^ 22 & @r8 ^ $teb | @rax & $buffer | @rax | $thread | 0n6 != @r10 >> 0y1101 & @rbx | @rbx ^ $ip & +0x8 & $teb)  { test_statement(0x1C6);  if (@r10 <> @r10)  { test_statement(0x1624); } } elsif (@rbx << @rsi >> @r9 >> @rbx ^ @rax & 0n18 & (@rax) <> @rbx << @rsi >> @r9 >> @rbx ^ @rax & 0n18 & (@rax)) { test_statement(0x17); } elsif (0n8 >> @rdi & @r9 & ($ip) ^ $buffer ^ $buffer ^ 22))0n8 >> @rdi & @r9 & ($ip) ^ $buffer ^ $buffer ^ 22) { test_statement(0x1D41); } elsif (@r10 ^ @rsi == @r10 ^ @rsi) { test_statement(0xB8E); ;  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ; 0y1011) ; }
$error$
$end$
382
 if (@r13 + @rdi ^ @r11 >> 22 >> $thread & @r11 ^ $teb ^ -@rbp ^ @r13 < @rdi + 0y100 << @rbp << @r8 >> @r9 >> @rdx | @rax << @r8 ^ 0x3 ^ -0n15 | @r13 >> @r10 ^ @rsp ^ @rdi ^ -@rbp)  { test_statement(0x5E9); ;  for (val = 10; @r13 | +$buffer ; @r10 | @r10 | @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rsp >< 0x0 | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rdx ;  break;  /* This is a comment */ }
$error$
$end$
383
 if (@rsp << 0x6 ^ @r10 & @rsp ^ $teb >> $ip | @r13 >> @rsp & (@r8) >> @rbx ^ @r9 & 0y10000 & +@rsi ^ @r10 ^ $proc ^ @r12 >= @r10 + @r10 & @rax << -@rax)  { test_statement(0x174C); } else { test_statement(0x15A7);  if (-~@r12 ^ 0y1 <= -~@r12 ^ 0y1)  { test_statement(0x1FDA); } elsif (@rsi >= @rsi) { test_statement(0x158D); } elsif (~0y1101 0x8) { test_statement(0x1401); } elsif ($teb +@rdx) { test_statement(0xABB); } elsif ($ip > @rbx) { test_statement(0x13F1); } else { test_statement(0x1541); } }
$error$
$end$
384
 if (~($proc) & -$thread << -@rax >> 0y1001 >> @r13 & +$teb | +@r12 << 0n3 >> (@r12) >> @rax & 0y1010 >> @r10 ^ @rsp != @rdx + +@r13 & +-0n13 >> @rdi ^ @r8 >> @rbx)  { test_statement(0x1877); } elsif (+$buffer & @rdx ^ @r12 >> $teb | $proc >> @r8 ^ 0y100 & $buffer | ~(@rsp) | @rdx >< 0xF << @rdi | 23 >> @rsp | $thread | @r13 | 0n0 | @rax) { test_statement(0x1A59); } elsif (@r8 >> -$thread & -@r13 & @rdx | @rsi & $teb @r8 >> -$thread & -@r13 & @rdx | @rsi & $teb) { test_statement(0x176); } else { test_statement(0x10DC); }
$error$
$end$
385
 if (@r8 >> @rbp << 0n13 & @r9 >> @rbx ^ @r10 << @rbx & @r11 ^ @rdi >> @rbx))@r12 >> 0n8 << 10 >> @r10)  { test_statement(0x409); } elsif (@r13 << @rsp >> @rsp & @rsp >> $ip | @rdx >> 0n3 & @r12 & @r11 ! @r12 << @r10 >> 20) { test_statement(0x1358); }
$error$
$end$
386
 if (@rsp & 0 << @r10 >> @rbp >> @rdx & 0y100 & @rsi & $teb ^ $buffer << @rbp & -@r11 & @rsp ^ @r8 & 0y101 & -0x5 >= @rdx + 14 >> (@r13) >> @r9 & 5 << (@r9) & +@r9 >> @rbp & $thread & @rdx | 0xD << @r8 & @r10 & $thread)  { test_statement(0x1D6B);  This is a not opened comment */ } elsif (@rbp >> 0xA(@rbp >> 0xA) { test_statement(0x1BBA);  break; } elsif ($buffer ^ @r11 | ~@rax & @rdx ^ @rbp == ~~@rbp >> @r10 & $ip & 0n13 ^ @rax) { test_statement(0x91C);  for (; @rbx | +0n14 = @r10 | $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = $thread | @r12 ; } elsif (@rsp & (@rax) ^ @r11 ^ 0n11 | 5 | @r8 | 5)@rsp & (@rax) ^ @r11 ^ 0n11 | 5 | @r8 | 5) { test_statement(0x1C6F); } elsif ($teb ^ @rdi | +@rbx | 4 != $buffer ^ @r12 | 0y1 | $proc) { test_statement(0x240D);  while  (@rax))@rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@r10 | $buffer ! @r9) { test_statement(0x2631); } elsif ($buffer = @r11) { test_statement(0x775); } elsif (@r12 < @r12) { test_statement(0x1B7D);  /* This is a not closed comment } elsif ($ip <> @rsi) { test_statement(0x1A0E); } else { test_statement(0x13C6);  break; }
$error$
$end$
387
 if ($ip + ($ip) ^ @r13 << @rsi ! $ip + ($ip) ^ @r13 << @rsi)  { test_statement(0x73D);  if (~0n11 & @rsi ^ $proc ^ ~0x10)@rdx & $thread ^ (@rsp))  { test_statement(0x146C); } else { test_statement(0x52); } } else { test_statement(0x1C7C);  This is a not opened comment */ }
$error$
$end$
388
 if ($buffer << +$proc & $teb & @rdi >< $buffer << +$proc & $teb & @rdi)  { test_statement(0x218B);  while  (0n17 != @r9 | @rdx | $ip | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@rdx << $proc >> $thread & 0xD & @rsi | $thread >> 21 & --$proc | @rbp & +$proc >< 0n17 >> @r9 ^ @r9 >> +~$ip ^ @r9 | @r12 >> -$ip & @rdx & @rsi ^ @rdx) { test_statement(0x245B); } elsif (0y11 >> $thread ^ @rdx))~(15) >> @rbx | 3 & 0x1 | $teb ^ @rsp | 0xD) { test_statement(0x61D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread <= +0x1 | @rdi) ; } elsif (@r8 & @r13 ^ 0n7((@r8 & @r13 ^ 0n7) { test_statement(0x1FD8);  break;  /* This is a not closed comment }
$error$
$end$
389
 if (+(13) << 4 << @r13 >> @r11 << @r11 ^ @rsp >> @r13 | @r10 & @r13 ^ $proc >> $thread & @rax((0x1 + @r13 >> @r8 << @rsi >> -$thread >> +@rbx | @r9 << 0n16 & $proc & -@rsp ^ -+0y10001 & 0x12 | @rsi ^ ~$thread & @r12 ^ @rbp ^ @r8)  { test_statement(0x228D); } else { test_statement(0x9FD); }
$error$
$end$
390
 if (@rsp + 0n0 << @r12 << 0y1101)-@rdi + ~0x12 << 0y111 & @r11 << @rsi >> $teb >> $proc)  { test_statement(0xEF3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ^ @rbp ^ @r8 < @r8 | $ip ^ 22 | @r11 | @rsp) ; ; }
$error$
$end$
391
 if (0n15 << @r12 << $thread | $teb >> $buffer >> @r8 ^ @r12 ^ 0n2 & @rdi ^ 0n9 | ~~~$ip & $proc & @rdx <> @rdi + @rsp ^ $teb >> @rsi ^ 20 >> +@r9 & $ip ^ @rax)  { test_statement(0x1D8C); } else { test_statement(0x14D6); }
$error$
$end$
392
 if (@rbx & -@rsp << @rdi & -0n14 | @rdi << $teb >> $ip >> @rdx <> @rbx & -@rsp << @rdi & -0n14 | @rdi << $teb >> $ip >> @rdx)  { test_statement(0x316);  /* This is a comment */  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | @rsi = @r10 | @rsi) ;  /* This is a comment */ } elsif (@rsi & @r9 ^ ~0y110 & $proc >< @rbp >> ~@rbx >> -@r12 & -$thread >> @r11) { test_statement(0x10E1); } elsif (@rax & 0y111))@r10 >> @rsi & 0y10 & 0y0 ^ @r11 & @r13 | @rdx & @rbp) { test_statement(0x1F38);  for (; 15 | -$buffer >< 15 | -$buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx <> @rsi & 16) { test_statement(0xD75); ;  for (; @rsi))@rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (0x4)@rbp)  { test_statement(0x52C); } ;  if (@rbx ; @r8)  { test_statement(0x861); } } elsif ($teb ^ $buffer | @r13 | @rsp != @rsp) { test_statement(0x167C); } elsif ((@rbx) ! (@rbx)) { test_statement(0x20EF);  for (; @r9 ; -+@r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  // /* This is a comment  } elsif (@r12 <> @rbp) { test_statement(0x242E);  for (; $thread >= $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer = @r11) { test_statement(0x1376);  for (; @r8 = 0n2;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x8D); }
$error$
$end$
394
 if ($thread >> $thread << @r10 >> @r11 >> @rsi ^ @rdx << 3 >> +@r13 & $buffer >> $proc & @r11 ^ @rdi >> @r11 ^ $thread)$thread >> $thread << @r10 >> @r11 >> @rsi ^ @rdx << 3 >> +@r13 & $buffer >> $proc & @r11 ^ @rdi >> @r11 ^ $thread)  { test_statement(0x169); } else { test_statement(0x197E);  if (@r8 | $buffer | @r11 >= 0y10011 ^ $teb | $buffer)  { test_statement(0x2195); } }
$error$
$end$
395
 if (@rdi >> -~@rbx ^ @rbp << --0n9 >> @rbx >> ~@rsi ^ $ip & 0xA ^ @rbx | $ip >> $buffer & @r12 & @r12)0x11 >> ~@rdx >> @r10 & @rdx & (-0x5) & @r10 | 12 >> @r12 >> @r13 | 14 >> @r10 & @rbx | @rdx)  { test_statement(0xB7C); @rax = ($proc) ; } else { test_statement(0x1C5F); @rax = $thread ; ;  /* This is a comment */ }
$error$
$end$
396
 if (0n3 + $teb << $buffer >> $ip << ~@rsi >> (@rsi) & 0y1010 | $proc ^ @r13 ; $buffer << (+@rdi) >> $proc | 3 << +$proc ^ $buffer & 6 | 0y1111 >> @rdx)  { test_statement(0x205E); } elsif (@rdx << $thread >> ~-@r10 ^ 0y1010 & $proc | +@rdx ^ $buffer & $proc >= ~@r8 << @rbp & @r11 ^ @r9 >> @r9 ^ @r9) { test_statement(0x122D); ; } elsif (+0y111 & @r13 != (@rax) >> $teb & 0x2 & 0 | (0x8) & @rdi | @rdx | @rsp) { test_statement(0xD5); }
$error$
$end$
397
 if ($thread + @rdx & @r11 << @rdi | @rsi >> $teb >> @rdx & @r13 ^ @r9 & 1($thread + @rdx & @r11 << @rdi | @rsi >> $teb >> @rdx & @r13 ^ @r9 & 1)  { test_statement(0x244A); ;  /* This is a not closed comment ; }
$error$
$end$
398
 if (@r12 + @rsp << 0x10 >> @r13 << (@r9) >> 0xF & @rdi << ~$teb ^ 0y10011 << @rdi >> @rsi ^ @r8 & @rdi | @rbx << @r13 >> $teb >> @rsp ^ 0n1 | @r12 & (@r12) ^ $teb & $proc == $teb >> @r13 & $buffer >> @r10 >> $thread ^ ($buffer) << 0x7 ^ -$ip >> $ip ^ 0x4 & 0xF ^ @rsp ^ 0y11)  { test_statement(0x23A1); ; } else { test_statement(0x1302);  /* This is a comment */ }
$error$
$end$
399
 if ((@rsi) + ~22 << @r9 << @rbp ^ @r13 >> @rsi >> @rdx < (@rsi) + ~22 << @r9 << @rbp ^ @r13 >> @rsi >> @rdx)  { test_statement(0x18F3);  // /* This is a comment  } elsif (@rdx >> +$buffer | $proc ^ $teb & @r12 >< @rbp >> @r8 | 0n0) { test_statement(0x1732);  /* This is a comment */ val = @rbp ^ @r12 | @rdx | @rax ; }
$error$
$end$
400
 if (0y100 + @r12 << 0n18 & $proc & 0x4 >> $thread <= ~@rax << $buffer << 0y1100 | 0x9 >> @r9 >> $buffer & $proc & ~@rbx)  { test_statement(0xECB);  This is a not opened comment */ }
$error$
$end$
401
 if (-~@rbp + @rsi << @r10 >> @rsp >> +@rax >> @r10 ^ @r13 << @r8 >> $proc >> @r13 & $teb >> (0y1001) & @r8 & @r10 <= ((@rax)) + $ip << @rsi << @rsi & @r10 << 0n0 & $ip >> 0x8 & @r10 ^ $ip)  { test_statement(0xF9B); }
$error$
$end$
402
 if ($teb << $teb << -@r13 & @rsi >> @rbx & @rsp >> @rsi((@rbx + 0n5 << $buffer << @rdi & @rdx << -$buffer >> $buffer & +@rsi)  { test_statement(0x2418);  break; } elsif ($buffer << @r9 >> @r11 & @rbx >> @r11 & +$proc & @r9 | $teb ^ @r8 ^ @rdx ^ $ip | 0y10011 & $ip | $teb ^ @rsp | @rdi | @rax($ip | 17 >> @r13 ^ @rsi & $ip | @rbx & $thread) { test_statement(0x2D); } elsif ($ip((-@rsi | $buffer & @r11 ^ @r13 ^ -+@r9 | @rdi ^ ~+@r12) { test_statement(0xA9D); ; } elsif ($teb ^ 0y11 >< (@rbx) ^ @r12) { test_statement(0x2A3); }
$error$
$end$
403
 if (@r10 << $thread & @rsi << @r8 >> @rdi >> (@rbx) ^ @r9 >> @rbp >> $proc & @rdi >> ~@r12 & $buffer ^ @rax ^ @rbx & @rdx ^ --0xC ^ $buffer < 0n5 & @r11 << @rdi)  { test_statement(0x15DF);  This is a not opened comment */ } elsif ($teb << @r8 & 0x7 >> @r9 ^ ~$proc >> @r11 ^ @r9 & @rdi ^ $buffer)@r9 << 0n11 ^ @rdi) { test_statement(0x1211); } else { test_statement(0xF2D); }
$error$
$end$
404
 if (@r9 & @r11 << @rdi >> @r12 >> $teb & $teb & @rbx | @r11 & 0y10000 ^ @r9 >> @rdi | @r13 | +@rdx | @rsp <> @r8 >> @r13 & @rbx ^ $teb >> @rax & +0x4 & $ip & @rsp)  { test_statement(0x15F8);  while  (@rbp & 11 <= $buffer ^ 0n9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
405
 if (~$teb + @rdx >> 0y10 << 0y1000 >> $teb ^ @rdx >> @r10 | 0x7 >> 0y11 & @rdx >> @r12 = @rbp << @rsp << 0xB ^ $teb << $buffer & $teb >> @rax ^ @rax >> @rsp & @r12 | @r13 >> 0n19)  { test_statement(0x163);  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
406
 if (@r9 + @r10 >> 0y10001 | @r10 << $teb >> @r10 ^ -@rbx | @rdi >> $teb & @r9 & @r10 | @rsp ^ $teb ^ +$thread >= @r9 + @r10 >> 0y10001 | @r10 << $teb >> @r10 ^ -@rbx | @rdi >> $teb & @r9 & @r10 | @rsp ^ $teb ^ +$thread)  { test_statement(0x18D9); @rax = $thread >> @r8 & @rbp & 0n7 | @rbx ; } elsif (-$thread | $buffer ^ $proc ^ +~4 ^ $thread | $thread ! -$thread | $buffer ^ $proc ^ +~4 ^ $thread | $thread) { test_statement(0x20FA); ; } elsif (@rdi & @rdx | 0y10010 & @r8 ^ 0y1000 ^ ~@rsp | @r13 ^ @rbp | @rbp >= @rdi & @rdx | 0y10010 & @r8 ^ 0y1000 ^ ~@rsp | @r13 ^ @rbp | @rbp) { test_statement(0xED7);  for (; $proc | @r10))@rbp | @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  while  ($buffer(($ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
407
 if (+@rdi + @r12 ^ +0y10010 << @r8 & @rdi & @rbp >< +@rdi + @r12 ^ +0y10010 << @r8 & @rdi & @rbp)  { test_statement(0x117D); } else { test_statement(0x1359);  break; }
$error$
$end$
408
 if (0y1010 + @r10 >> $teb ^ @rdi << 0n1 >> @r9 >> @rdi ^ 0n7 >> @r12 ! 0y1000 << @r12 << $teb & 6 ^ @rax << @r9 >> $thread & @r12 ^ @r9 >> @r12 & $buffer & +@r10 ^ @rbp & $thread ^ 0n0)  { test_statement(0x156A); ;  This is a not opened comment */  for (val = 10; @r10 >< @rsp | $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 <> (@r13)) ;  This is a not opened comment */ } elsif (@r12 << @rbx >> @rbx ^ -@rbx & 0y1111)@r12 << @rbx >> @rbx ^ -@rbx & 0y1111) { test_statement(0x1CAB);  /* This is a comment */ } else { test_statement(0xC2E);  /* This is a comment */ }
$error$
$end$
409
 if (0 + 11 >> 1 << @r12 | 0y10 << ~0y10 >> @rbp | @rbp | 7 & 0n9 $teb + @r10 >> @r13 << 0y10011 >> -@r13 & @rax << @rbp & @rax >> @rdi ^ @rsi & @rdi)  { test_statement(0xEC2);  /* This is a comment */  if ((-@rsp) ^ -0y110 != (-@rsp) ^ -0y110)  { test_statement(0x2337); } elsif (0x2 == @rbx | 0xE) { test_statement(0x233B); } else { test_statement(0x1963); }  if (@r10 | @r11 != @r10 | @r11)  { test_statement(0x1FA3); } elsif (($thread) <= ($thread)) { test_statement(0x20AD); } else { test_statement(0xCA9); } } elsif (@r12 << 15 & 0y1001 & @rsp ^ +0xC >> @rsi ^ 0n5 ^ ((@r8)) ^ @rsi | (@rbx) ^ 12 & @r13 ^ $proc ^ $ip | @rdx ! @r12 << 15 & 0y1001 & @rsp ^ +0xC >> @rsi ^ 0n5 ^ ((@r8)) ^ @rsi | (@rbx) ^ 12 & @r13 ^ $proc ^ $ip | @rdx) { test_statement(0x1E22); ;  if (@rdi)@r9 | 0y1)  { test_statement(0x2656); } elsif (@rbx 0xF) { test_statement(0x44B); } elsif (@r9 0y11) { test_statement(0xB8E); } elsif (@rsp != @rsp) { test_statement(0x10A9); } else { test_statement(0x13C5); }  break; }
$error$
$end$
410
 if (@r9 + $proc >> @rdi << @r11 & @rbp ^ 0n5 << @r8 ^ -$ip >> @r13 & @rsp = @r12 + (@r11) & @r13 & $thread & 0y10011 & @rdi)  { test_statement(0x12A);  /* This is a not closed comment }
$error$
$end$
411
 if (@r13 >> ~$proc << $ip ^ +@r9 << @r13 >> $ip ^ 16 >> @rsi & @rdx & @rdi ^ @r8 & +0n13 ^ @rsi ^ @rdi > +@rsi << @r8 >> @r9 << +~$teb & 16 << @rbp >> ~@r12 & $teb >> ~+$proc ^ $buffer >> 0x10 & @rbp >> @r11 & +@rsp & @rbp | @rbp | @r8 ^ @r9)  { test_statement(0x471); }
$error$
$end$
412
 if (+$teb + @rdx << 16 ^ $thread >> 0y10011 | $ip << 6 >> $thread >> @r10 ^ @rax >> $teb & @r8 ^ @rdx & 0y1111 == @rax << @rbx ^ @r10 >> @rbp >> 0x13 & 0y1011 >> @r9 & @rbp)  { test_statement(0x1683); } elsif (@r13 << @rdx & @rsp & $ip | ~(12) & $proc & -$ip | +20 | @r8 ^ 0xD | @rsi != $teb >> $teb >> $proc | @rdi & (0y10000) & @r13 | $proc & ~@r9 | $buffer | 0x6) { test_statement(0x193);  /* This is a not closed comment } elsif (@rbx | $buffer & @r12 ^ $buffer ^ @rdx)$buffer & +0n0 ^ $buffer ^ @r12) { test_statement(0x6AB); } elsif (@r10 & @rax ^ @r9 @rax & @rbp) { test_statement(0x14E);  This is a not opened comment */ } else { test_statement(0x15F2);  for (val = 10; ~$thread | -$buffer((@rdi | @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  while  (@r8 ! @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
413
 if ($teb << @r13 << 14 & @rbp >> -@rbp >> @r9 & $ip & @rdi & @rax $teb << @r13 << 14 & @rbp >> -@rbp >> @r9 & $ip & @rdi & @rax)  { test_statement(0x6D2);  for (; @r13 & @rdi | @rbp ^ $buffer >< $thread | 0y1111 ^ $teb | @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb >> @rax & @r11 >> 0y1110 & @r11 & @rdx ^ ~(@r9) >> @rsp ^ @rbx > @r13 >> $buffer ^ @rdi >> $proc) { test_statement(0x58E);  // /* This is a comment  ; } else { test_statement(0x183C); }
$error$
$end$
414
 if (@rsi ^ 0n14 << @rdi >> 0xD ^ 0n16 & @rbp ^ +@r12 & @rdi <= @r8 << $ip >> 23 >> 0x3 >> @r11 & 22 >> 0x11 >> @r13 ^ @r10 ^ $thread >> -@rsp & @r8 & $teb)  { test_statement(0x14E6); } else { test_statement(0x181B); }
$error$
$end$
415
 if (@rsi + @rsi << 0y1111 >> @r13 << @rsi >> $buffer >> @rbp & $thread >> @rax & @rsp >> @r11 | $proc << @rax & @rdx >> @r9 & 0x5 & 0x13 | @r11 >> (@rbx) ^ @r8 & @rsp >< @rdx >> @r9 << @rax >> (@r13) >> 0x12 & @r12 >> @r9 & @rax >> @rdi | @rax << $ip >> @rbx)  { test_statement(0x10F5);  // /* This is a comment  } elsif (@rdi ^ @rax == (-@rdi) << @rsi & -0y100 ^ 2 >> -0n9 ^ ~@rdx ^ @rbx ^ 0xE) { test_statement(0x192D); } elsif (0y1010 & 0y10000 ^ -@r8 ^ $thread = @r13 >> +$teb ^ $thread) { test_statement(0x14E6);  // /* This is a comment  }
$error$
$end$
416
 if (1 << @rsi & @r8 ^ 0y100 << ~@r9 >> @r8 >> @rax ^ @r10 ^ @r8((@r10 >> 0x1)  { test_statement(0x795);  if (0n6 ^ ~@r11 ^ @r10 == 0n6 ^ ~@r11 ^ @r10)  { test_statement(0x120D); } else { test_statement(0x691); } ;  This is a not opened comment */ } elsif (@rdi << @rdx ^ @r12 >> 0xD ^ @rsi | @rax >> @rsi >< 0n14 ^ @r10 ^ @rax & @rsi ^ 20 ^ $buffer | @rbp >> @r13 ^ @rsp | @rdi & @rdi ^ 0n18) { test_statement(0xBE7);  // /* This is a comment  } elsif ((@rsi) >> (@rax) & @rax & 2 ^ +11 & ++-$buffer 0y10010) { test_statement(0x1F31);  This is a not opened comment */ } else { test_statement(0x1EF1); }
$error$
$end$
417
 if (~@r13 + +$thread << (@rdi) & @r9 >> 0x7 >> @r12 | ~@r11 << 5 >> @r10 >> -$ip ^ ~0n3 >> @r8 & @r13 & (10) ^ $thread ^ @r8 | @r10 >> $thread & @rbp ! 2 ^ 0n8 & $proc >> @r9 ^ @rbp >> @rbp)  { test_statement(0xDB2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip))@r9 | @r10) ;  /* This is a comment */ } elsif (($proc) ^ @r12 | @rdx >> $thread & 0n0 ^ @rsp & @rsi | @r9 ^ $buffer ^ @r13 | @r12 ^ @rsi(@rbx & @rsp >> +0n7 & @r12 & 0y10011) { test_statement(0xF02);  /* This is a comment */  while  (@r10 | 0x11 ! @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
418
 if ($thread >> @rdi << @r11 >> @rsp ^ $proc << $ip >> $teb ^ @r10 >> 0n6 | @rbp >> @r13 ^ $ip & @rsi = @r8 + @rsi << 0y111 >> @r13 << $proc >> @rdx | $buffer >> @r10 | 0y1100 >> @rbp | $buffer & @rbp ^ $thread | @r11 ^ $ip)  { test_statement(0x64D); ;  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp | @r13 = @r9) ;  /* This is a comment */ } else { test_statement(0x25A9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 | @rsi | 0x3 @r11 | @rsi | 0x3) ;  This is a not opened comment */  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ; @r12) ; }
$error$
$end$
419
 if (@r8 + 21 << @rsi | 0x9 << 0n11 >> +$teb & @r13 >> $thread | @r8 & $proc & @rsi ^ @r12 & @r11 @r8 + 21 << @rsi | 0x9 << 0n11 >> +$teb & @r13 >> $thread | @r8 & $proc & @rsi ^ @r12 & @r11)  { test_statement(0x1C1B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (0y10010) & @r13 | $ip ^ $ip | @r10($thread ^ $thread) ;  /* This is a not closed comment  /* This is a not closed comment  for (val = @rsi; 10)@r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x163); }
$error$
$end$
420
 if ($proc + $proc & $ip >> $buffer ^ ~@rsi << @r10 >> @rdx ^ @r12 >> @r13 & $thread & 0xD | @rsp & @r9 >> @r13 ^ (@rsp) >> @rsi ^ @r13 ^ ~@rsi(@rbx + @rdi << @r10 << ($buffer))  { test_statement(0x2349); }
$error$
$end$
421
 if (@rbx << $ip >> 0y10 << @rdx >> $teb >> @rdi ^ @rbx >> @r8 >> @r9 & $buffer ^ $ip & (@r12) & $buffer ^ $buffer != @rsp + $thread | @rdi << @rsp & $buffer >> $thread | 0n15 >> ~$ip & $proc)  { test_statement(0x717);  break;  /* This is a comment */ }
$error$
$end$
422
 if (@r13 << @r11 | @r12 >> $teb >> @rbx & 0x12 >> $buffer)-@r9 + -@r13)  { test_statement(0x18E0); ; @rax = -0x9 | @rbx ; } elsif (((@rax)) << @rdi & (@rdx) | @rdi ^ @rsp & $thread | ~0n13 & @rbp ^ @r10))@rbx << @r13 | 5 & $buffer & $buffer) { test_statement(0x16FB);  /* This is a not closed comment } elsif ($buffer >< $buffer >> @rbx & $proc ^ $buffer | $proc & @rax ^ 0x1 ^ ~@r9) { test_statement(0x16E0);  This is a not opened comment */ } elsif (@rbp & @rax ! 0n8) { test_statement(0x15B);  if ($ip((@rax)  { test_statement(0x2438); } ; }
$error$
$end$
423
 if (+$proc + @r10 << $ip >> $buffer << $thread & $ip << @r8))-@r10 + $thread >> $ip >> @r10 & @rbp >> @rbp)  { test_statement(0x2376);  while  (0x1 & @rax ^ @r10 | @rsp | @rsi > @r8 ^ $ip ^ @rsp | @r11 | @r11 | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($proc)$ip ^ @r10)  { test_statement(0x454); } elsif (@rdi | 22 > @rdi | 22) { test_statement(0x1642); } } else { test_statement(0x6CE); }
$error$
$end$
424
 if ($buffer << @rbx >> @rsp << @rdx >> @r12 ^ @rsp >> $teb($buffer << @rbx >> @rsp << @rdx >> @r12 ^ @rsp >> $teb)  { test_statement(0xB45);  break; } elsif (@r12 >> @rdi >> -$thread ^ $ip & @r9 & @r11 > $ip >> @rsi ^ @r12 >> 0xF ^ 0n2 & @r10) { test_statement(0x1EFB);  This is a not opened comment */  for (val = 10; @r9 | 0y10001 > @rdi | @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (@rax = @r10; @r9 >< @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (-@rdi >> $ip ^ @rdx = 0y1101 & @r8 & @rsi ^ @r9 & (@rax)) { test_statement(0xBB6);  This is a not opened comment */ } elsif (0xA ^ @rdx ^ @rdi <= 0xA ^ @rdx ^ @rdi) { test_statement(0xB6); } elsif (~0x8 ^ @r8 | @r10 | $proc ; ~0x8 ^ @r8 | @r10 | $proc) { test_statement(0xE3C); } elsif (0x9 | (@r13) <> $buffer | $proc) { test_statement(0xB62); @rax = @rbx ;  This is a not opened comment */ } elsif (@rsi >< @r13) { test_statement(0x1611);  // /* This is a comment  } elsif (@r10 < 0x1) { test_statement(0x1490); }
$error$
$end$
426
 if (@r11 << @rsi >> @rsi & $proc >> $teb >> 0y1100 | @r10 << 0x8 != @rax >> @r12 << @rdx >> 0n0 >> @rax)  { test_statement(0x25BC);  while  (@r13 ^ ($proc) | -(~@rsp) ; @r13 ^ ($proc) | -(~@rsp))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x2128); }
$error$
$end$
427
 if (@rbp & $proc | @r11 << 0y1110 >> @rsi ^ ~+@r11 >> @rbx ^ ~@rdi & @rax ^ @r13 <> @rdx + (@r11) ^ $proc >> ~@rdx >> $proc)  { test_statement(0x129D);  /* This is a not closed comment } else { test_statement(0x19F9);  for (val = 10; 0xE ^ @rsp | $thread ! 0xE ^ @rsp | $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; @rax = $proc | @r13 ;  break;  // /* This is a comment   break;  This is a not opened comment */ }
$error$
$end$
428
 if (+@r8 << @rbx & $thread << 0n19 >> @rax ^ @rbx >> ~0n14 & @r12 & @rsi | $proc << ~@rbx >> @r11 & @rdx & @r12 & @rdi | +$buffer & @r12 & @rsi = 14 >> @rsp << 0x6 >> @rbp & 15 >> @r10 >> @rax & @r11)  { test_statement(0x10F);  while  ($thread(17 ^ ~$thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx << @r10 & 0y10000 <= @r12 & @r9 & -@rsp & @rdi | @r10 & @rsi & @rdx ^ 0x4) { test_statement(0x21D9); } else { test_statement(0x25B5); }
$error$
$end$
429
 if (+@r13 + @rax << $teb << 6 >> $ip >> @rsp >> 0n2 ^ @rax << @rsi >> @r9 >> 7 | $thread << @r11 >> @r13 >> ~-(@r9))~0y10001 + @r11 >> @rdx & @r8 << @r10 & @r11 ^ @rdi >> @rax >> -@r12 | @rbp << @rbx)  { test_statement(0x1648);  This is a not opened comment */ ;  while  (@rbp | 0n7 >< -@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
430
 if (@r10 << 0y1011 << @r11 ^ @r11 << @rdi >> @rbp & (@rsi) ^ $proc >> -$ip ^ @rdx & @rdi ^ @rbx | @rdi >> 0x11 & @rsi | 0x3 >> @r11 & @rbp & ~@rsp)@r10 << 0y1011 << @r11 ^ @r11 << @rdi >> @rbp & (@rsi) ^ $proc >> -$ip ^ @rdx & @rdi ^ @rbx | @rdi >> 0x11 & @rsi | 0x3 >> @r11 & @rbp & ~@rsp)  { test_statement(0x1E0C);  /* This is a comment */ } elsif (@r9 << @r13 >> $buffer >> @rsi < @r9 << @r13 >> $buffer >> @rsi) { test_statement(0xDAB);  /* This is a not closed comment  This is a not opened comment */  This is a not opened comment */ } else { test_statement(0x18CB);  for (val = 10; 0y100 >< 0y100;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (@rax = @r12 | @r9; @r8 | @rdx >= @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = -@rbp ;  for (val = 10; ~@rbx = @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($ip >< (@rdx))  { test_statement(0x15FE); } }
$error$
$end$
431
 if (@r10 + @r8 << $proc & $buffer << @rdx ^ $ip & @rbx <= @r11 + $proc & -@rbp)  { test_statement(0x2485); } elsif ($proc << @rdi >> @r9 & @rax >> +@rax & 0n12 & $teb ^ @rdx & @r12 | $teb >> @r13 & @r8 & ((@rdi)) | (@rdx) $ip & (14) >> 0x7 ^ @rsi >> $thread & @rdi & @r13 ^ @rax) { test_statement(0x1C1); } else { test_statement(0x20CF);  /* This is a comment */ }
$error$
$end$
432
 if (@rax << 0n17 << @rdx >> 3 << @r9 ^ +@rax << @r12 >> @r9 >> @rsp & $teb >> $ip == 0n17)  { test_statement(0x555);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 & @r9 | +@r11 0 ^ +-@rbx) ; ;  /* This is a not closed comment } elsif (0n1 << @r12 >> 0y10011 | @rdx >> @rdi ^ @r10 ^ @rax == @r12 << $ip & (($proc)) ^ @rax & $thread) { test_statement(0xB8); }
$error$
$end$
433
 if (@r10 + 0n6 ! @rsp + $buffer | 0n12 << @r11 & @r10 >> @r12 & @r13 ^ ~$thread & +@rdi & @r8)  { test_statement(0x688);  /* This is a not closed comment } elsif (@r8 << $teb >> $teb ^ @rsp & (+@r8) <= @rdi >> 0x11 & @rbp >> @r11) { test_statement(0x933); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx | -~@r11((@rdx | -~@r11) ;  while  (-$ip(($thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment val = ~0y10001 ;  /* This is a not closed comment  /* This is a comment */ } elsif (@r9 >> $proc & $proc | @r9 ^ 0xC ^ @r13 | 23)$teb >> ~@rbx) { test_statement(0x2633); ; val = -@r9 | @r13 ; } else { test_statement(0x22F6); }
$error$
$end$
434
 if (@r8 + @r9 << $teb >> $teb << $buffer >> @rbp & @r10 ^ 0y1010 << 15 >> @rax >> $teb ^ 0x10 & +$proc & @rbx ^ $proc | 0x9 ^ @r13 ^ @rax & @rax ^ 16 ^ 23 = 3 + 0y10011 << $buffer << @r13 >> @rbx << (-@rdx) & 0n0 >> @rbp >> @rax & $teb)  { test_statement(0x2353); }
$error$
$end$
435
 if (@r12 >> +@rsp >> $buffer & 0x13 << @rax >= (0n5) + ~@rdi << @r8 << $proc & 0 >> @rdi & @r12 & 0n3)  { test_statement(0x199B); }
$error$
$end$
436
 if (@r13 >> +$buffer << 0n10 & @r8 << $buffer >> $proc >> @r12 ^ @r13 << @rdx & $thread >> $ip & 0y1111 & @r8 @r13 >> +$buffer << 0n10 & @r8 << $buffer >> $proc >> @r12 ^ @r13 << @rdx & $thread >> $ip & 0y1111 & @r8)  { test_statement(0x149E); } elsif (@rsi >> 0n6 >> @rbp ^ +@rdi >> @r10 ^ @rbp & -@rbx ^ 0x2 | @r12 & 0y10011 & 0n9 != @rbx << $thread ^ (@r10) ^ @rbx | @r9) { test_statement(0xA29); }
$error$
$end$
437
 if (@r9 >> $thread << @r12 & $teb >> 0y101 >> @rbp & @rax | @r11 ^ @rsi | -@r11 & @r10 & @rbx ^ @r11 & ~$ip ^ @rbp | $buffer | @r13 | @rdi))@rax + -@rbp ^ @rsi >> ~@rdx >> $ip ^ @rsp >> @rdx ^ -@r13 | $teb >> @rbx & @rdi ^ (0x3))  { test_statement(0x1531); }
$error$
$end$
438
 if (@r10 + 0n4 >> @rbx << @r10 >> ($buffer) >> 0x0 & (@rsi) << (2) @r10 + 0n4 >> @rbx << @r10 >> ($buffer) >> 0x0 & (@rsi) << (2))  { test_statement(0x10E4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 5 & ~@r11 | ++@rbx ^ $thread | @r10 = @r9) ;  for (val = 10; ~0n18 ^ @rbp | @r8 | -@r8))@r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @r11 | @rbx(@r13 | $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  /* This is a not closed comment }
$error$
$end$
439
 if (~@rdi + @rax << @r12 >> 0y1101 << @r12 >> $thread >> 3 & $ip << ~@r13 >> $teb >> (@r11) ^ @rax << @r11 >> @rbp & ~(0y0) >> -0x5 & @rax ^ @r13 >> @r10 >= @r11 + @rsp >> 16 << 0y10000 >> $proc & (@r8) ^ @rbx >> @rax >> @rsi)  { test_statement(0x1CD8); } elsif (~@r9 >> @r11 ^ ~@rbx >> ~@r10 & +@rdi ^ @rax & @rbx ^ @rdx ~@r9 >> @r11 ^ ~@rbx >> ~@r10 & +@rdi ^ @rax & @rbx ^ @rdx) { test_statement(0x291); } elsif (0n3 >> @rbp ^ @rsi & 0n9 < $teb >> @r9 & 0y1111 & 0y1111 ^ @r12 & @r13) { test_statement(0x1957); } elsif (@rbx & 0y1111 ^ @rdi | $thread | @rdx(@r8 ^ 0n15) { test_statement(0x1B85);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax == 0y111) ;  This is a not opened comment */ } elsif ($thread ; ((13)) ^ @r10) { test_statement(0x252B); } elsif (0n19 | @rbp > 0n19 | @rbp) { test_statement(0x178A); ; } elsif (0y10(($proc) { test_statement(0xB36);  This is a not opened comment */ } elsif (@rdx < ~$teb) { test_statement(0x1591);  if (@rsp((@rax)  { test_statement(0x1A51); } } elsif (@rbp ! @rsp) { test_statement(0x421); } else { test_statement(0x15);  // /* This is a comment   while  (-$thread | $teb != @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
440
 if (@rdx + ~15 >> @r10 ^ @rdi << $proc >> @rdi ^ 0n7 | $ip >> 0y1011 & $thread & @rax | -$ip >> @r11 != @rbx >> @r13 << $teb >> $buffer >> @r9 | $proc >> ($buffer) >> ($proc) | 1 >> @r10 & $teb ^ @r10 | @rsi ^ @r10 ^ @rax)  { test_statement(0xC47);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc ^ @r8 | +@rdi | 0n15 <> $proc ^ @r8 | +@rdi | 0n15) ; }
$error$
$end$
441
 if ((0x7) + @rdx >> @r10 << @r9 & @rax << +$thread >> ~@rdi & @r12 & @r9 >< (0x7) + @rdx >> @r10 << @r9 & @rax << +$thread >> ~@rdi & @r12 & @r9)  { test_statement(0x13D9);  /* This is a not closed comment ; } else { test_statement(0xCD0);  // /* This is a comment  }
$error$
$end$
442
 if (@rsi << @rsi << 0n0 >> @r13 >> @rbx ^ @r11 << @rax ! @rsi << @rsi << 0n0 >> @r13 >> @rbx ^ @r11 << @rax)  { test_statement(0x20C0);  This is a not opened comment */  if (0y1101 ^ $ip > 0y1101 ^ $ip)  { test_statement(0xDE9); } } elsif (@rsp << @r10 | @r8 >> @r13 & @rbx))~$thread << @rsi) { test_statement(0xC3C);  if (@rsp ^ @rbx | 10 >= ~@rsi)  { test_statement(0x2184); } else { test_statement(0x852); }  /* This is a not closed comment } else { test_statement(0x2508);  // /* This is a comment  }
$error$
$end$
443
 if ($proc << @rbp << $ip | $ip >> ~+@rdi ^ $teb | @rdx >> +@r10 & @rsi & @r10 ^ @rdx & @rbx != ~0n9 + 0y10 >> (@r11))  { test_statement(0x19BA); } else { test_statement(0x15B6); val = -@rax & @r13 ^ +~$proc ^ 0xF ; }
$error$
$end$
444
 if ($thread + @rsi & +@rbp & @r11 >> $thread ^ @r13 >= @rbx & @r10 << 0x4 & $thread >> $proc & @rdi & @r12)  { test_statement(0x937); @rax = @rsp >> (@rdx) & 2 ^ $thread ; } else { test_statement(0xB9B);  break; }
$error$
$end$
445
 if (~$ip + 5 ^ $teb ^ @r12 >> ($ip) & @r10 <> @rsi + @r13 << @r11)  { test_statement(0x1313); } else { test_statement(0x20); }
$error$
$end$
446
 if ($ip + @r8 << @rsp >> +$proc >> $teb >> @r13 & @rbp >> +@rax >> 0n9 & ~~-~1 >> 0y1100 & $teb($proc + $proc << @rsi << @rbx >> @rsp >> 0x7 >> 0y10010 & @r10 << @r10)  { test_statement(0x8B4); }
$error$
$end$
447
 if (@rdx + @rsp >> @rsp << @r12 & 0y10000 << 16 | @r9 >> @r13 >> @rdx | @rbx >< 0y10000 << @r11 << $proc ^ $teb >> @r10 | @r12 << @r8 & @r11 >> @rdx)  { test_statement(0x1BB2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb & @rsp ^ @rax ^ +@r13)$teb & @rsp ^ @rax ^ +@r13) ;  for (val = @rbx ^ @rdi | +0x8; $buffer ^ @rax ! $buffer ^ @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
448
 if (@rbp + +@rax >> @r9 << @rdx >> ~0n1 & 0x4 << @r13 & @rbp >> +$thread ^ @r9 << @rsp >> ~@r13 & @r9 >> @r9 <> @rbp + +@rax >> @r9 << @rdx >> ~0n1 & 0x4 << @r13 & @rbp >> +$thread ^ @r9 << @rsp >> ~@r13 & @r9 >> @r9)  { test_statement(0xD61); } else { test_statement(0xFB); val = @r9 | $buffer ; }
$error$
$end$
449
 if ($buffer + @rdx & $proc << @r9 ^ @r11 >> 0n19 ^ @r12 & @r11 & @r9 == $buffer + @rdx & $proc << @r9 ^ @r11 >> 0n19 ^ @r12 & @r11 & @r9)  { test_statement(0x9BF); ;  This is a not opened comment */ ;  if (@rsp(@rbx)  { test_statement(0x4C8); } } else { test_statement(0x8E5); }
$error$
$end$
450
 if (@rbx + @rsi | $proc << @rbx >> @rsp))@rbx << ($proc) >> @r8 | (@rbx) << @rsi >> @r9 >> $buffer | +@r9 >> @r8 ^ @r12 & @r13 ^ @r8 | 0y10010)  { test_statement(0x1B71);  /* This is a comment */ } else { test_statement(0x189);  // /* This is a comment   /* This is a comment */  /* This is a not closed comment }
$error$
$end$
451
 if (16 + $proc ^ 0y1010 << @rbx ^ -@r9 ^ $proc & 0x9 ^ @rsi @r9 << @rsp << $buffer | 0xF & +$proc >> 0n6 ^ @rbx >> 0xC ^ @rbp | -(@rsi) >> @r12 & @rdi | $buffer & @rax ^ @r12 ^ @rsp | @rsp)  { test_statement(0xD00);  break; } elsif (@r9 >> @r12 >> 0y1100 & @r10 >> $thread & $ip & 0n8 ^ @r12 >> @rbx ^ @r9 ^ @rdi | $buffer ^ @rax)@rsi << @r12 >> $proc >> @r13 ^ @rdx >> @rdi ^ $thread & $teb ^ @r13 | @r13 >> @rbx ^ $buffer & @rax ^ @rbp ^ -+@r9 | $ip) { test_statement(0x1492);  while  (@rbx ^ @rsi | 0xB | @r9 @rbx ^ @rsi | 0xB | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x34F); }
$error$
$end$
452
 if (@r11 + $buffer << ~@rdx ^ @rsp << @rax >< @r8 << $proc | $buffer << @r9 | @r9 >> @rax & @rdx & @r12 | @rdx & @r11 ^ @r9)  { test_statement(0x13DA); } elsif (+-@rsp << @rdi ^ 1 | @rbx >> @rdi | @rdx & -@rsp != $buffer << 0n19 >> 0n8 | 1 >> @r12 & @rbp & (@rbp) | ~0x10 & $buffer) { test_statement(0x1EEB);  This is a not opened comment */  /* This is a not closed comment  break;  This is a not opened comment */  if (@rsp))@rsp)  { test_statement(0xFCA); }  /* This is a comment */  /* This is a comment */ } elsif (@rsp & @r9 | @r8 & ~$teb $ip >> @rbx ^ @rsp ^ $teb ^ $teb) { test_statement(0x1281); }
$error$
$end$
453
 if (@r8 >> $teb << $buffer | @rsi >> @rsi & @rdi >> @r10 | 0n2 | 0x7 & $proc ^ -@rsp ^ $teb | ~@rdi > 0n6 << @r13 << @rdi ^ @r10)  { test_statement(0x119F); } elsif (@r11 >> $ip != $ip >> @r9 >> @rdx & $proc) { test_statement(0x8AE); }
$error$
$end$
454
 if ($proc << @r11 >> $ip >> -0n17 >> @r12 ^ @rdx & $ip >> $buffer ! @rbp + $proc)  { test_statement(0xA44);  /* This is a not closed comment ;  break; } elsif ($buffer << $ip & @rsi >> ~@rsp >= $thread >> 17 & $buffer >> $thread & @r9 | @rax & $buffer & @rsi ^ @r9) { test_statement(0xE2C);  // /* This is a comment   break; }
$error$
$end$
455
 if (@rsi + $proc << ~-0xD >> @rax & @r8 >> @r12 >> 0x3 & $proc >> $buffer & (20) == +0y101 + @rbp << @rsp << ~@r8 >> @r12 >> @r10 >> @rsp)  { test_statement(0x5BB); } elsif (@r13 ; @r13) { test_statement(0x1AA); } elsif (@rax & $thread & @r12 ^ $proc & @rax ^ @r12 ^ @rdx)@r12 >> $ip & @rbp & @rsp | @rbx & @r12) { test_statement(0x1930);  // /* This is a comment  val = ~$ip ;  /* This is a not closed comment  for (; 0x7 >< @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rax ; }
$error$
$end$
456
 if (@r8 + 0x10 << @rax << @r12 >> @rdx | ++$thread & @r10 >> @rbx & $proc ^ 0x12 | 0y1011 >> @rsp & @rdi & @rsp((@r13 + $teb ^ @rax << @r8 ^ @r12)  { test_statement(0x2B0); ;  // /* This is a comment  }
$error$
$end$
457
 if ((@rdx) << 0y1111 << @r9 >> $buffer << -@rax >> @rsi >> @r10 & @r9 << 0x7 >> 0x9 ^ 0n2 >< (@rdx) << 0y1111 << @r9 >> $buffer << -@rax >> @rsi >> @r10 & @r9 << 0x7 >> 0x9 ^ 0n2)  { test_statement(0x1F0D);  break; } elsif (@rdi << $buffer & @r9 & @rsi | ~0n1 >= @rdi << $buffer & @r9 & @rsi | ~0n1) { test_statement(0x1C8A); } else { test_statement(0x1AFA); }
$error$
$end$
458
 if (--@rsi + -@r10 >> @r11 & @r9 >> +@rax > --@rsi + -@r10 >> @r11 & @r9 >> +@rax)  { test_statement(0x23C2);  while  ($thread & $proc < @r11 ^ 0y10011)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 << $teb & @rbp >> -$ip & 21 & $buffer ^ @rbp >> ~0x7 & $proc ^ @rbp & @r11 ^ -0n1 ^ @rsi | 11 >> +@rbx & @rsi ^ @rsi & $thread ^ @r13 ^ $ip ; @r8 << $teb & @rbp >> -$ip & 21 & $buffer ^ @rbp >> ~0x7 & $proc ^ @rbp & @r11 ^ -0n1 ^ @rsi | 11 >> +@rbx & @rsi ^ @rsi & $thread ^ @r13 ^ $ip) { test_statement(0x21DB); } else { test_statement(0x11E4); }
$error$
$end$
459
 if (0y10 + @r10 ^ @rdx >> ~$buffer ^ 0y1110 >> @rsp >= $ip << @rdx | 16 << @rax >> (@rdx) >> $ip & @rbp & 0n13 ^ @r11 >> 11)  { test_statement(0x1B2B); } elsif (@rax << @r13 > @rax << @r13) { test_statement(0x451); } else { test_statement(0xE94); }
$error$
$end$
460
 if (@rax & -0xF << @rdi >> ~@rax & @rdi < @r8 >> $proc << 0n2 >> @rdi >> @r11 ^ @r10 << 0 ^ +0n1 >> 1)  { test_statement(0xD69); } elsif ($buffer << +~@rsi & -@r8 & @rbx ^ @r9 ^ @r10 & $ip <= @r12 & $ip | @r10 & $buffer & 0x7) { test_statement(0x78E); } elsif (@rsi >> @r9 & 0y100 ! @rsi >> @r9 & 0y100) { test_statement(0xBD6);  break; } else { test_statement(0x1CF); }
$error$
$end$
461
 if (++@rdi + @r11 >> @rsi << @rdx & @r13 << -0n2 >= @rsp << 0x9 << $thread | @r12 << @rsi >> @r12 ^ 0n12 | 17 & 0y10010 | $thread ^ @rsi | (@rax) | (@rax))  { test_statement(0x821);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n19 ^ @r13))0y110 ^ @r8 | @rbp | 3) ; }
$error$
$end$
462
 if (-@rbp + @rsp << @rbx << @r10 >> @r9 << @rsi & @rdi << @r9 >> @rsp >> ~0xD ^ @rax << @rbp >> $thread >> @rbx & 0n3 >> @rbp ; @r8 + 0n7 ^ @r9 << $ip)  { test_statement(0x1AB2); }
$error$
$end$
463
 if (15 << @rbx << @rbp >> 17 << $teb >> ~~@rdi >> @r13 ^ $proc << @r8 >> $teb ^ $ip & $proc & $buffer | @r9 & @rbx & 0x9 > 0x8 + @r10 & 0x8 & @r11 & $proc | +@rdi << @rdi >> 0y1 >> 0n1)  { test_statement(0xF66); } elsif (@r13 & +@rdx >> @r12 ^ $buffer >> 0n1 < @rdi ^ @rbx >> @rsi) { test_statement(0x665); } elsif (0y1010 >> 0y1001 ^ (+$proc) & ~(@r8) | @r13 > 0y1010 >> 0y1001 ^ (+$proc) & ~(@r8) | @r13) { test_statement(0x191);  /* This is a not closed comment } elsif (@r13 & $thread(@rsp & @r11 ^ @r9 | $ip ^ @rbx | @rbx | $thread) { test_statement(0x10ED); } elsif ($proc ^ @r13))@rsp | @rsi | @rdx) { test_statement(0x15B); }
$error$
$end$
464
 if (@rsi + 0x10 >> -~(0y10) << ~@rsp >> @r11 >> $proc ^ -0y10010)@rdi + @r10 >> $proc >> @r10 ^ (@rsp) | @rbp >> @r13 >> $ip | @rax | 20 & $buffer ^ $ip | $buffer ^ @rsp)  { test_statement(0x22DC); } elsif (@rdi << $thread >> (0xB) >> $ip & 17 & -$teb & $thread > @rdi ^ $buffer >> @rdi & 0n9 & +@r10 ^ @r10 | $thread & @rbx ^ 0x12 ^ @rax ^ @r10) { test_statement(0x15A8); } else { test_statement(0xAA4);  break;  /* This is a comment */  break;  // /* This is a comment  }
$error$
$end$
465
 if (@rdi << +-@rbx << $thread & (@rdi) << -(0n9) & (@rbx) >> 0y10010 & $thread & 0y100 ^ 1 | @r12 ^ 0y10010 ^ $proc ^ @r11 ^ 0x3((@rsp << @rsp >> 22 << @r13 & @rsp & @r9)  { test_statement(0x1CE9);  /* This is a comment */ } elsif ($teb << @r10 >> $teb & @r11 >> @r8 & (@rdx) & @rdi | $thread >> @r12 ^ $teb | 0y1100 & $buffer ^ @r12 ^ 11 | @rbx ^ $buffer($teb << @r10 >> $teb & @r11 >> @r8 & (@rdx) & @rdi | $thread >> @r12 ^ $teb | 0y1100 & $buffer ^ @r12 ^ 11 | @rbx ^ $buffer) { test_statement(0xA25); } elsif (@r9 & @rax | $buffer & @r12 ^ $ip >< @r9 & @rax | $buffer & @r12 ^ $ip) { test_statement(0xDF5); } else { test_statement(0x2092); }
$error$
$end$
466
 if (@rbp + (@rdx) << @rbp << @r8 >> @r13 << @r13 & 0n16 >> $thread >> ~@rsp & @r13 & @r9 @rbp + (@rdx) << @rbp << @r8 >> @r13 << @r13 & 0n16 >> $thread >> ~@rsp & @r13 & @r9)  { test_statement(0x1CC3); } else { test_statement(0x119); }
$error$
$end$
467
 if (@r12 + +6 << @rsi << $teb & 5 & @r10 ^ @r11 >> -@rbx >> $proc & ~$thread ^ @rsi ^ 0y110 | $teb << $thread & @r9 & ($buffer) & @r9 <> @rdx & 1 ^ -5 | +$proc << @rsi)  { test_statement(0x132E); } else { test_statement(0x534); }
$error$
$end$
468
 if (@rbp >< @rbp)  { test_statement(0x14E8); } elsif ((@rdi) << (@rsp) >> @r8 | @rax >> +$proc | @r12 & $thread))$thread | @rsi ^ @rdx & @rax ^ ~$ip ^ $proc) { test_statement(0xAA0); } elsif (@r12 >> @rdx ^ $buffer & (@r12) | $teb)$proc & @r8 ^ +@rdx & @rbx | +-@r11 & @rsp) { test_statement(0x1E6B);  // /* This is a comment   This is a not opened comment */ } else { test_statement(0x1620);  // /* This is a comment   for (val = -$proc; ~(@rdx) | 0n13 < @rsp | 0x10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (~0n4 <= @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -(+@r9) >= @rsi) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc == $proc) ;  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx <= @rsi) ; }
$error$
$end$
469
 if (@r10 << (17) << @rax((@r9 << @r10 >> @r10 >> -@r11 >> $teb ^ 0x2 >> @r8 ^ $teb & +@rax & 0x9 | +@rbx << @rdx >> @r9 >> @rdx ^ @r11 >> 0xA | @rbx >> 5 | @rsp | $proc | @rdi)  { test_statement(0x1676); } elsif (~@r10 >> -@r12 & @rdi)@r12 & @r11 >> @rax) { test_statement(0xE51); } else { test_statement(0x2161);  // /* This is a comment  }
$error$
$end$
470
 if (~@r12 + $thread << 16 << @rdx >> $proc << 0x3 & 0n17 << 0y1001 & @rdi ^ $thread & 0y1100 >> 0n2 & @rsp ^ @rbx >> @rdi & 0n19 ^ 0n0 ^ $buffer ^ $teb >= @r9 << @r13 >> $thread | $teb & @rbp >> @r8 & @rsp ^ $buffer >> @rbx)  { test_statement(0x2700); ;  This is a not opened comment */ } else { test_statement(0x2FB); }
$error$
$end$
471
 if ($ip + @r8 << @rbx & @rsi & @r10 >> @rbx | 0y10010 & $ip ^ $thread >> @rbp ^ @r13 >= 0n10 + 11 ^ @r11 << @rsi >> @rdx & @r12 & @r11 & ((@r13)) | $teb & (@rsp) & $teb & @rsp)  { test_statement(0x18D6); } elsif (@r12 << @rax | 0y10000 & $ip & 0y1111 >< ~@rbp << (@r9) | @r12 >> $teb) { test_statement(0x25B3); }
$error$
$end$
472
 if (+$ip(0x8 + -@rsi | 0y101 << @rsi >> $teb & ~@r9 & @r9 & @r9)  { test_statement(0x22A7); } elsif (0x2 >> -~0x4 >> @r11 <= 0x2 >> -~0x4 >> @r11) { test_statement(0x1050); ; } else { test_statement(0x1780); }
$error$
$end$
473
 if (@rax << $proc ^ @rsp << @rbx & @r10 & (@rax) < @rax << $proc ^ @rsp << @rbx & @r10 & (@rax))  { test_statement(0x1CFE);  for (val = 10; 0x9 & (@rdi) ^ @rdx ^ 0xD | (@rbp) | 13)0y1000 ^ @rsi | @r8 ^ @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2041); }
$error$
$end$
474
 if (@rbp << $teb >> 0x11 >> @rdx >> @r8 ^ @rdi & @r10)@r12 + 3 ^ $teb | $thread ^ @rbp >> ~@rdx & @r11 & @r10)  { test_statement(0x393); } elsif (-@r9 >> 14 >> +@r13 ^ 0y111 >> @r11 & 0x9 ^ @rdx > $thread << @r12 ^ @rdx >> @r9) { test_statement(0x192);  for (; $ip ^ @r12 < ~-@rbx | $proc | @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
475
 if (@r13 + @r13 << @rsi & @r11 & @rsi >> -@rbp & 0n17 & 0n1 | $thread << @rax >> $teb >> @r12 | $buffer >> $thread | 12 & $ip < @r11)  { test_statement(0x22DA);  for (val = 10; @rbx ^ $proc ^ +(@r12) = @r11 & @r10 ^ 0y1100;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
476
 if ($thread ^ @rbp << 0x12 >> $proc >> @r12 ^ @rsi >> $proc & 0y10011 & $proc ^ @r9 | @r9 ; $thread ^ @rbp << 0x12 >> $proc >> @r12 ^ @rsi >> $proc & 0y10011 & $proc ^ @r9 | @r9)  { test_statement(0x1A74); }
$error$
$end$
477
 if (0x3 + $teb >> +$ip >> @rbp ^ @rsp << 0y10000 & @r9 & @rax & @rbp | $buffer & @rdx >> @r8 & $buffer == @r9 << $proc >> -+@rsi << @r13 & $proc << $ip >> ~@rdx ^ 0n7 ^ @rdi >> 10 ^ ~(0xB))  { test_statement(0x1974);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx | 0n7)@r9 ^ 0x9 | @rdi | 0x1) ; } elsif (@r8 >> @rdx & $proc >> 0n4 ^ 0x7 ^ @rsp | $teb & $ip & $proc ! 0n3 >> @r11 & ~@r11 >> @r12 & $thread ^ @rsi & @r13 ^ @r8 ^ @r13 ^ +@rdx) { test_statement(0x23AA); }
$error$
$end$
478
 if (@rdx + @rdx >> 0x8 & $thread << ~0x1 & $proc & (@rsi) & $teb | @rbp << 0x7 & @rsi >> @r12 & @r13 <> @rdx + @rdx >> 0x8 & $thread << ~0x1 & $proc & (@rsi) & $teb | @rbp << 0x7 & @rsi >> @r12 & @r13)  { test_statement(0x3C);  while  (~@rbx & 0y1 = @r8 | @r9 ^ 0n6)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rsp == @r9 ^ 11 | @r13)  { test_statement(0x457); } else { test_statement(0xE22); } val = @rbx | $teb ;  /* This is a comment */ }
$error$
$end$
479
 if (@rdx + @rax >> (@rdx) << ~@rbx >> @r11 >> @rbp & $ip ^ @r13 << @rbp & 0n18 & @r10 ^ $proc | @r10 >> @r9 & +@rax | @rsi >> 4 & -@rdi & 0y11 ^ @rbx & @r8 | 0x13 & $proc ; @r13 + @r13 ^ @rbp << $buffer >> @r10 | $buffer >> @rbx & @rax ^ ~0xD >> @r8 ^ @r10 & 0x11 ^ 0n16 ^ +@r9)  { test_statement(0x148B); val = +@rbp >> $teb ; } else { test_statement(0xFE2);  if (0x1 != @r11)  { test_statement(0x1FBF); } else { test_statement(0x1715); } }
$error$
$end$
480
 if (@rsp << $thread << 0n6 >> ~@r9 << 0xC & $proc << @r9 >> 0n10 >> $ip & @rdx >> $buffer & $teb ^ @rsi & @rdx <> 0n2 + @rbx >> $buffer & $thread >> @rsp >> @rax & @rdx >> @rsi | $buffer >> @r8 & $buffer & @rbx)  { test_statement(0x1FBB); ; } else { test_statement(0x885);  while  (-@rbp ^ @rbp | @rsp | @r13 != @rdx ^ 0n15)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (-$proc | @r10 = @rdx | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
481
 if (~@r10 + @r11 >> (0x3) << @rdi & @r12 << +@r11 >> 0n5 >> @rax | @rsi >> @rdx & $ip & @r9 & 0y10 ^ @r13 >> @r13 ^ -@r13 | $teb | @r12 ! $ip + @rsp << @rax << @r12 | +@rdx << @r8 ^ +@r11 >> $ip | @rdx & 16 ^ 22 ^ @rdx ^ $thread | @rbx | @r9 ^ @rbx | @rsp)  { test_statement(0x2394);  if (~@r10 ^ @r12 ^ ~@rbp >= @r8 & @rsi ^ +@r11)  { test_statement(0x1229); } }
$error$
$end$
482
 if (@rax + -@rsi ^ @r10 << 17 | +@rsi << @rdx & @rbx >> $thread & 0x10 & $buffer ^ 0y110 & @r13((-@r10 & 0n17 & @r12 >> 0x4 ^ ~@rbp >> @rax >> 0n0 ^ @rsp ^ +$proc & @r11)  { test_statement(0x17F0); } elsif (0n16 >> 0y10001 & 0n17 >> @rbx & 23 ^ 0x2 ^ @r8 | @r8 & -$buffer | (@rdi) & -0x0 | @rdx | @r9 | @r10(+@r8 << -$buffer) { test_statement(0x385); } elsif (0xB >> @r8 ^ @r11 & $proc ^ 22 ^ $ip ! 0xB >> @r8 ^ @r11 & $proc ^ 22 ^ $ip) { test_statement(0x253C); } elsif (0x8 & @rsp | 0y1001 ^ $proc | $proc | @rbp(($buffer & @rbx) { test_statement(0x1106); val = @rbx | 0x4 ; } elsif ($thread ^ ($buffer) | ~@r10 | 2 == $proc | @r13) { test_statement(0x2432);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp))@rsp) ; ;  This is a not opened comment */ }
$error$
$end$
483
 if (0n3 | @r13 << @rdi >> 0y1010 >< (@r9) << $teb & @rbp << @rax ^ ($proc) >> $ip >> @r13 & (@rsp) & $thread & 0n0 ^ 4 & +@rbp & 0xA)  { test_statement(0x2155); }
$error$
$end$
484
 if (@r8 << $teb << 0n13 | @rsi << @r13 >> @rax >> 0x5 & @rax >> @r9 == @rsi + 0x11 << -@rdi >> $teb << @rbp >> @rdx ^ @r8 << 0y1000 >> 0y10001 ^ @rdx & @r12)  { test_statement(0x1949); } else { test_statement(0x746); ;  while  (@r12 == -@rsp | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
485
 if (@rsi($ip ^ @r12 << +@r10 ^ @rdx >> (13) | @r12 << 0x10 >> +-@r9 ^ @r13 >> $proc | @r9 ^ @r13 ^ @r12 ^ +0y100)  { test_statement(0xAD);  if (@rdx & (@r11) ! @rdx & (@r11))  { test_statement(0x201E); } elsif (14 | +@rbp((@rdx ^ $buffer) { test_statement(0x3F9); } elsif (@rdi | +$ip != @r10) { test_statement(0x25ED); } elsif (@r10 <> @r10) { test_statement(0x13DE); } elsif (~$proc((@r12) { test_statement(0x10A9); } elsif (@r12(@r12) { test_statement(0x2697); } else { test_statement(0x2463); } }
$error$
$end$
486
 if (~@rdi + ~@r9 >> $buffer << @r12 >> 0n10 & $proc << @r10 & +$ip >> 14 | @r10 >> @r13 ^ @rax >> @r10 & 0n18 ^ 0x13 & $ip | @r9 >> $proc > @r13 + @rbp >> @rsi << $ip)  { test_statement(0xE62);  /* This is a comment */  /* This is a not closed comment  while  (0y10001 <= @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1984); ; }
$error$
$end$
487
 if (@r11 << @r8 << @r9 >> @rbx << @rsi >> ~@r9 >> 0xF & $proc | @rax >> +$ip >> $buffer < @rdi + 0n5 >> @rbx << $buffer)  { test_statement(0x1513); }
$error$
$end$
488
 if (@rdx + @rax << 0y100 << @rdx >> @r8 << @r10 >> @rdi >> 0x2 ^ @rdi << @r9 ^ -$buffer | @r13 << $teb & @rbx >> +$thread & 0n13 & $ip ^ $buffer ^ @rbx & $thread ^ @rsi((@rdx + @rax << 0y100 << @rdx >> @r8 << @r10 >> @rdi >> 0x2 ^ @rdi << @r9 ^ -$buffer | @r13 << $teb & @rbx >> +$thread & 0n13 & $ip ^ $buffer ^ @rbx & $thread ^ @rsi)  { test_statement(0x5D4);  /* This is a not closed comment } elsif (@rax << +@rdi >> @rdx >> @rsp & @r10 >> +@rbp & @rsp & @r12 <= $proc ^ 13 & @r10) { test_statement(0x8C8); } elsif (0x8 >> -$thread ; 0x8 >> -$thread) { test_statement(0xA56); } elsif (@r11 ^ 0n6 ^ $ip | $thread ^ $buffer != @r11 ^ 0n6 ^ $ip | $thread ^ $buffer) { test_statement(0xFA5); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n16 == 0n16) ; }
$error$
$end$
489
 if (@rax << $buffer << @rax >> @r8 ^ $buffer >> (@rsp) ^ @rbx ^ @rbp ^ $ip | @rax >> 0n0 & @r9 >> 0x5 & @r13 & 0xB ^ $ip ^ @rbp > 11 & @r12 << 0xC >> $thread >> @rbx)  { test_statement(0x84A);  for (; @rbx ^ @r9 = -@r10 & 0y100 ^ @rdi ^ @r11 | @r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
490
 if (@rbp + $teb << @r9 << (@r13) ^ -@rbx << @r10 | $ip << @rdi >> @r12 >> 5 ; @r12 + -@rdx >> -21 >> $buffer ^ 0n13 << (~$buffer) | (@rbx) << $thread >> -@r13 >> @r10 & $ip >> $thread & +0xE)  { test_statement(0x1565); val = @r11 >> @r8 & 1 & -$thread ^ @rsi | ++@r11 & @r13 ^ 0y111 | @rsp ; } elsif (@rdi << @rax | $buffer & +@rdx ^ $ip ^ $proc ^ @rbp((6 >> ~16 >> @r13 | @r8 >> @r8 | @rsp & @r12 ^ @rax) { test_statement(0x1E40); } elsif (@rbp >> @rdx & $ip ^ @rdx ^ @r9 | @r8 & @r13 ^ @rdi < @rbp >> @rdx & $ip ^ @rdx ^ @r9 | @r8 & @r13 ^ @rdi) { test_statement(0x57); } elsif (@r13 & $thread ^ 0n8 ^ $ip <> $buffer ^ @rbp ^ @rbx) { test_statement(0x14E4); } else { test_statement(0x129E); }
$error$
$end$
491
 if ($ip >> $proc | $buffer << ((($buffer))) >> @r13 ^ 0x9 >> @r10 & +$thread & @r13 > $ip >> $proc | $buffer << ((($buffer))) >> @r13 ^ 0x9 >> @r10 & +$thread & @r13)  { test_statement(0x1FBA);  for (val = 10; $buffer & +0n12 | @r8 ^ 15(($proc) & $thread ^ $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (@rsp >> @rdi & 0n17 >> @r11 & @r12 | 0xF & 0y1000 ^ @rbx ^ -(@rax) ^ @r12 | 0x12 & @rax ^ (0x7) ^ 0y110 | 0x11 | @r12 | @r11 <> @rsp >> @rdi & 0n17 >> @r11 & @r12 | 0xF & 0y1000 ^ @rbx ^ -(@rax) ^ @r12 | 0x12 & @rax ^ (0x7) ^ 0y110 | 0x11 | @r12 | @r11) { test_statement(0x265D); } elsif (@rbp ^ @rax & @r11 ^ @r12 <= @rsp & $teb & @rdi) { test_statement(0x7BF); } else { test_statement(0x1B8D);  break; val = -0y10000 ; }
$error$
$end$
492
 if (+@r8 & @r13 << 0y1011 & @rsp & $proc ^ @rbx << $thread ^ @rsi($thread << @rdi << @r10 ^ ~@r11 << @rsp >> @r12 ^ @rsi)  { test_statement(0x58D); } else { test_statement(0x19A);  if (@r10 | -~--~+@r12 | $teb(-$ip ^ @rax)  { test_statement(0x1574); } elsif (@rsi | @r13 >< @rsi | ~@rsp) { test_statement(0x921); } @rax = @r12 ^ @rsi ; }
$error$
$end$
493
 if ((@r13) << 16 & @r12 << $ip | 0x12 << @r8 ^ @rbp >> 0x0 & $thread & @rsp | @r11 >> @r11 & @rax ^ ~$proc | @r12 ^ @r8 ^ $thread | 5 < (@r13) << 16 & @r12 << $ip | 0x12 << @r8 ^ @rbp >> 0x0 & $thread & @rsp | @r11 >> @r11 & @rax ^ ~$proc | @r12 ^ @r8 ^ $thread | 5)  { test_statement(0x19A5);  for (val = 10; @rbx & @r12 <= @r10 | -(0xA);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif (@rsp >> $ip >> 0y100((@rsi << $proc ^ 0n2) { test_statement(0x101F); ; } else { test_statement(0x1000); }
$error$
$end$
494
 if (16 ^ @r12 >> 0n8 & -(0n9) & $proc & @r8 ^ @r8 ^ $teb <= @r9 + @r8 << ~~$teb >> -@rsp >> @rsp ^ @rdx >> @r10 >> ~@r10 & @rsp >> $ip & ~@r13 & @rax ^ 0xC)  { test_statement(0x161);  if (+@rax | @rax | 0n7 | @rbp > +@rax | @rax | 0n7 | @rbp)  { test_statement(0x65F); } else { test_statement(0x12C); } } elsif (5 >> (@r13) >> 0y101 & $thread >> @r11 @r11 << @r12 >> @rsi >> @rdx & @r8 >> 0y10001 ^ 12 >> @rsi & @r12 & $buffer | @rax ^ @rbp ^ -$buffer) { test_statement(0xCD5); ; } else { test_statement(0xC7F);  for (val = 10; @rdi ^ $teb | @r13 | 0x0(0x6 ^ @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
495
 if ($thread << @r8 | @r12 >> -@rdi >> @r8 ^ $teb >> @r12 & @rdx & ~0x12 (~@r8) << $proc << ~$ip >> @rdi << @rdx & @rax & @r12 & ~@rsp)  { test_statement(0xEAA); }
$error$
$end$
496
 if (@rbp + (@r10) << 0n14 & @r9 << @r11 >> $ip & @r8 >> 0y10001 & 0y110 & @r11 | ~12 << @rax & @rsp ^ ~@r8 >> @rdx & $thread & @r8 ^ $proc ^ @r13 < @rax >> $buffer << +$teb)  { test_statement(0x4B4);  This is a not opened comment */ } elsif ($buffer & 0x9 >> -@r10 & 0n12 & $proc ^ @rsp & (@r11) & @r13)$buffer & 0x9 >> -@r10 & 0n12 & $proc ^ @rsp & (@r11) & @r13) { test_statement(0x9E); } else { test_statement(0x868);  /* This is a comment */ }
$error$
$end$
497
 if (@rsi + @rbx >> $ip << @rbx & @r12 << @rax >> @r9 & (@r13) >> 0n8 & -@rax ^ @rdi << @rax | 0y1111 << 4 & 0n19 & @r12 | @r13 | @r13 | -@rsp ^ @rbx < 0x11 ^ $thread & 0y1000 >> @r12 ^ @rdi >> @r13 & @rsi ^ -5 & @r11 | (@r10) | @r9 ^ +@rbx | @r12)  { test_statement(0xD1F); } elsif (($teb) >> @r11 >> $thread >= @rdx << $teb >> @rdi & $teb >> 0n1 & 0x1 & 0n19 ^ $ip >> $ip & $proc) { test_statement(0x778); } elsif (@r9 >> @rsp & @rdi & $thread > @r9 >> @rsp & @rdi & $thread) { test_statement(0x20B1); ;  if (0xE(@r8)  { test_statement(0x230C); } } elsif ($teb | @rbp | @r12 | 16))@r8 | $proc ^ $ip) { test_statement(0x1903); } elsif (($teb) ^ 1 >< 0y10001 ^ $teb | $ip | @rbp) { test_statement(0x160D); } elsif (0x0 | @r13 >< 0x0 | @r13) { test_statement(0x1F17); } elsif ($ip)$buffer) { test_statement(0x3CF); }
$error$
$end$
498
 if (@rdi + @rbx << 0n8 << @rsp >> 0y1111 >> 0x2 >> @rsp & @rax ^ @rdi << $ip & @rdx | @r10 >> (+@r9) ^ -@rax >> +$teb & @rdx & @rbp >= @rbp + $buffer >> @rax >> 0x10 >> 3 ^ @r11 & @rsi >> +@r9 ^ @rsi)  { test_statement(0xDBA);  /* This is a not closed comment  /* This is a comment */  if (@rdi | (@rax) <= @r11 | $teb)  { test_statement(0x3A6); } } elsif (@r10 << 0y111 & +@rdx >> $thread ^ 0x10 & $proc & @r12(0xD) { test_statement(0x2285);  /* This is a comment */  if ($thread | @r8 > $teb | $ip)  { test_statement(0xED2); } elsif (+@rbx)@rbx) { test_statement(0x17E3); } else { test_statement(0x223E); } } else { test_statement(0x1325); }
$error$
$end$
499
 if ((6) + @rax << @rdi ; (6) + @rax << @rdi)  { test_statement(0x2275); } else { test_statement(0x1B63); }
$error$
$end$
500
 if (0xA + @rax << @rbp & ~13 >> 0y10010 >> +@r11 & $teb & (@r13) & @rdx < ~+$ip + @r12 << @r9 >> $ip >> 0n18 >> @rax & @r12 << 0n5 >> ~4 & @r10 >> 0x8 ^ ~0y10 << $teb >> @rsp >> +@rdx ^ @rbx >> ~-@rsi)  { test_statement(0xDDD);  This is a not opened comment */ }
$error$
$end$
501
 if (0y1100 + @rsp << -@r10 & ($teb) >> @rsp >> @r10 $proc + @rsp & @rsi << @rsp >> @rbx >> @r13 ^ +0n18 >> 13 >> 0xE & ($teb) >> @r12 & $teb ^ @rax >> @r9 ^ 0n3 & @r13 ^ 0n15 ^ 0xB)  { test_statement(0x5F); } elsif (@r12 << 0n12 | @rsi >> @r11 & (0n19) ^ 0x7 | $ip | @r10 ^ @r13 | @rdx > @r10 ^ @r8 ^ 0y1000 & @rbx ^ $ip) { test_statement(0x1074);  // /* This is a comment  } elsif ($teb >> @rsi ^ @r12 & ~-@r11 ^ @rax | @rdi ^ +$ip | @rsp ^ 0n19 (0y1000) & @rbp ^ @rdi & @r11) { test_statement(0x11EF);  /* This is a not closed comment } elsif (@r10 & $proc ^ (+~$teb) ^ @rax | 0y101 ; @r10 & $proc ^ (+~$teb) ^ @rax | 0y101) { test_statement(0x19FF);  // /* This is a comment  }
$error$
$end$
502
 if (@rbx + @rsi & @rbx << ~@r9 >> 0n10 & @rsp >> @r12 & $buffer ! @rbp << 0x1 << @r12 >> @r8 >> 0y0 >> $teb)  { test_statement(0x2075); ;  break; } else { test_statement(0xF5); @rax = @r10 ^ @r9 | $teb ^ @r13 ; }
$error$
$end$
503
 if ($thread + 0y10 << @r12 << @rax | $proc >> $ip >> @rbx & $teb & 0n11 ^ @rsi >> ~@rax ^ @rdi & @r9 ^ +(0n11) ! @r11 + 0n17 >> (@rsp) << @r8 >> @rax >> $buffer ^ @r8 << $buffer >> @r9 ^ @r12 >> @r8 | 0y11 >> +0y10011 >> $teb & @r11 >> @r8 & @r8 & +@rdx ^ (@r13))  { test_statement(0x2694);  while  ((0n8) & @r9 ^ ($proc) | 0y1100 ^ $thread | @r12 = @r13 ^ @r12 ^ @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx & ~@r12 & @rdi & 0n0 | $buffer >> @rdx ^ @rax | @r10 ^ $ip ^ @r9 | @rsi)0x2 ^ $ip >> (@rdi) & 0x3 ^ (@r10) & @rdi ^ ~@r10 ^ @rdx) { test_statement(0x70B); } else { test_statement(0x269F);  if ($thread > (@r10))  { test_statement(0xBFF); } elsif (@r13((@r13) { test_statement(0x1B6C); } else { test_statement(0xFBD); } }
$error$
$end$
504
 if (10 + @r10 << @r11 >> @rbx >> -$teb & (@rax) & 0n19 & @rsp ^ 0y1000 << @r10 >> @rdx & (~$teb) >> @r9 & 10 & (~@r8) 10 + @r10 << @r11 >> @rbx >> -$teb & (@rax) & 0n19 & @rsp ^ 0y1000 << @r10 >> @rdx & (~$teb) >> @r9 & 10 & (~@r8))  { test_statement(0x11FB);  // /* This is a comment  }
$error$
$end$
505
 if (@rbp + 3 & $buffer << 22 >> 0xD >> -@rsp & @rdx >> $ip | @r8 & @r12)@rbp >> @rax >> $thread >> @rbx & @r10 >> @rsi >> $buffer | $ip ^ 0n14 >> +@rdx ^ @rdx & $proc)  { test_statement(0x567); } else { test_statement(0x1AC7); }
$error$
$end$
506
 if (@rsi ^ @r13 >> @rbp & @r13 >> $proc ^ ~@rbx ^ 0x11 & +@r8 ^ @r12 | @rsi << @rax & $ip ^ $proc ! 15 + $thread >> $ip << 0x11 & @rsp << @rdx ^ @rdi << @rax >> $buffer | $buffer << $teb >> ~@r12 >> ((@r13)) & $teb ^ ~@r10 >> $buffer)  { test_statement(0xA1E);  if ($teb | @rax | $thread $teb | @rax | $thread)  { test_statement(0x14AD); } elsif (@r10 ^ @rsp <> @r12 ^ @rbp) { test_statement(0xCB7); }  // /* This is a comment  } elsif (@r13 > @r11 << @r11 >> @r10) { test_statement(0x551); }
$error$
$end$
507
 if (-@rsi >> $buffer << (@rsi) >> @rsi ^ @rbx << $proc >> ~@r12 == @r9 + @r8 << $buffer << +$ip & (0n14) << @rdi >> @rsi >> @r13 & $proc ^ @r12 << 0n2 & $proc >> $ip)  { test_statement(0x593); } elsif (@rbp >> 0x13 >> +0n6 ^ 0y10010 & 0y11 | @r8 >> $teb ^ @rbx & $thread ^ $teb ^ (@rbx) | @rsi & $thread ; @rbp >> 0x13 >> +0n6 ^ 0y10010 & 0y11 | @r8 >> $teb ^ @rbx & $thread ^ $teb ^ (@rbx) | @rsi & $thread) { test_statement(0x1E28); } elsif (@r10 | $ip & 13 | $proc +$ip & 0n17 ^ @rbx) { test_statement(0x1DDB);  /* This is a comment */ @rax = @rbp ;  // /* This is a comment  } else { test_statement(0x1D4D);  /* This is a comment */ }
$error$
$end$
508
 if (@rdi(@r11 << @r12 & $thread >> @r9 & @r11 >> @rdi ^ -0n11 >> @r9 | @r9 >> 0y1010 >> @rbp & $ip)  { test_statement(0x326);  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
509
 if (0xD << $teb << -$ip & $ip >> @r11 & $proc >> 0n3 & ~@r8 > ~@rsi + @r13 << @rdi ^ -12 << 0y1000)  { test_statement(0xEAF); } elsif (@rsi << @rsi >> ~@rdx >> @r10 ^ @rbp & +-@rdi & ($teb)((@rsi << @rsi >> ~@rdx >> @r10 ^ @rbp & +-@rdi & ($teb)) { test_statement(0xBFB); } elsif (@rdi & 0y111 ^ ~(@r12) & 0 | @rdi & $ip | $teb <> @rax >> @r11 ^ @r10 | 0n7 & @rbx ^ $ip ^ @rsp | @rdi | @r13 | 0n13) { test_statement(0x268F); }
$error$
$end$
510
 if ($proc + @rsi << @r12 >> 0y10011 >> @r13 >> ~@rbp >< -23 + ~14 >> $ip << +$teb >> @r9 & 0x11)  { test_statement(0x149F); } else { test_statement(0xAA7);  // /* This is a comment   break; }
$error$
$end$
511
 if (@r9 + @r9 >> -@rax(@r9 + @r9 >> -@rax)  { test_statement(0x6C2); } elsif ($proc >> (@r8) >> ~$teb ^ @r11 >> $ip @rbx & @rax >> $thread | @rax >> -~$ip & @rax & $buffer ^ @r12 ^ ($teb) ^ 0n12) { test_statement(0x263E); @rax = @rsi ^ @r8 | ~$ip ^ @rdx | $buffer | @r9 ; } else { test_statement(0xBED); }
$error$
$end$
512
 if (~~@rdi << @rbx << @r13 ^ ~@r9 << @rbx & 0y10001 >> $ip ^ @rdi | @r11 != -0x2 + +@r11 & $ip >> -+$buffer | 0y1010 << @rsp >> $thread & @r9 & @r11 & 0n5 ^ @r11 >> @rdi & +~@r9 ^ 23 | @r13 ^ @rdx ^ @rdi | @r8)  { test_statement(0x22C1); } elsif (@rsi << @rsi @r9 ^ $ip >> @rdx ^ 6 | @rsi | $ip | @r11) { test_statement(0x8BC); } elsif (@r12 0 >> ~@r9 & @r13 | +@r13 & $thread | $thread | ~$proc | @rdx) { test_statement(0x706);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx = @rbx) ; } elsif (@r9 >= (@r11) ^ $thread ^ @r9) { test_statement(0x194); } elsif (-@r12 ^ ~@r9))12 | @r12 | -@r12) { test_statement(0x24EE);  /* This is a comment */ } else { test_statement(0x20B7); }
$error$
$end$
513
 if (@rbp << $ip & 7 << @r12 >> @rsp >> @rsi & @r10 & 22 & ~@rdx ^ @rsi << @rbx >> ~-@rsi >> @r10 & $ip >> @r11 & +0x2 | -@r8 >> ~@r10 >> $ip | @rbx >> @r8 & @r13 & -@rsi > $ip << $ip ^ 0y11 << $ip >> @r9 >> $thread | $buffer & $teb >> $proc | @r12 & +~@r8 & 0n9)  { test_statement(0x26B7);  while  (@rdi ^ $thread)@rsp ^ 0n1 ^ $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (@r8 << $buffer >> @rbx ^ @rax >> 0x1 & @r13 ! 0xD ^ @rsi | @rbp >> 2 ^ @r9 & 0x5) { test_statement(0x209A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 13 | @rsi | $thread < @r9) ; ; } elsif (0y10011 & @rbp >< 0y10011 & @rbp) { test_statement(0x11D1); } elsif (0n16 & @r10 < 0n16 & @r10) { test_statement(0xB10); } elsif (0y1000 ^ (@rbx) <> @rax | @rdi | +(@r11)) { test_statement(0x7FE); }
$error$
$end$
514
 if ($teb + $buffer > $teb + $buffer)  { test_statement(0xE88); } elsif (~$teb >> $teb >> $proc ^ @r9 >> @rdi & @rax | @r8 >> @rax ^ @rbx = +@r10 ^ @r8 >> $thread & @r9 & $teb | 0n4 >> @rax & 0y1000 ^ 0n6 & @rbx) { test_statement(0x5CB);  /* This is a comment */  for (; @rbp(@rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r13)@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x22EC);  while  (+@r11 < @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($ip | 0x6 > $ip | 0x6)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
515
 if (@r10 << @rdx >> @r8 << @rbx >> @rax >> $buffer & @rax & @r11 >> @r13 ^ $buffer << $teb & ~@rbx >> $thread & @r9 | 0xD << @rdx >> @r10 >> @r10 & +@r9 & @r10 | $ip >> 0y1100 & 0xF | @r8 | $ip ; ~@r9 + @rax << @r10 << @rsi)  { test_statement(0xEC6); } elsif (@r10 << 11 >> $teb ! 0x11 >> @rsi >> (@rax) ^ @rax >> @rsp) { test_statement(0x1E77); }
$error$
$end$
516
 if (@rax << $buffer >> $thread << @r11))3 + $ip & @r10 << @r12 >> 0y1000 >> @rdi & @rsp)  { test_statement(0x134); } elsif ($ip << @rsi >> $ip >> ~@rdx & ($proc) >> 0y1010 | @r8 >> @rdx & @rax & 0y1000 ^ ~@r11 & @r8 ^ ~@rax <= @r12 << $proc >> (~0n19) & 0y10010 & @r9 & @r11 ^ 0n12 >> @rsp) { test_statement(0x1D71);  for (val = 10; @rbx ^ $ip | @rbp ! @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif (-$thread >> $ip & 0x6 & @rsp ^ @r9 & $teb ^ 1 < -$thread >> $ip & 0x6 & @rsp ^ @r9 & $teb ^ 1) { test_statement(0xAC); } else { test_statement(0x4D1); }
$error$
$end$
517
 if (@r8 + $buffer << @rbp & -@rdi >> @r12 >> $thread ^ $teb & @rsp & @r13 & @r12 ^ +$buffer & 0x1(($thread ^ 22 << @rsp >> @rsp & @rdx >> @r10 & @rbx)  { test_statement(0xC5C);  if ($ip $ip)  { test_statement(0xDC7); } elsif (@rdx | (-10) | @r12 ; @rsi) { test_statement(0x2116); } } else { test_statement(0x1CE5);  /* This is a not closed comment }
$error$
$end$
518
 if (@rsi + @r9 & 0n7 << @r13 >> @r11 >> @rsp ^ @rdi >> -@r12 >> ~(+$proc) & $ip & @rsi & +0x0 | @r13 << 0x9 >> (@r8) >> +0y100 ^ @rdi >> @rdx & 10 | (@rax) ^ $thread & ~@rdx ^ @rsi ! @rsi + @r9 & 0n7 << @r13 >> @r11 >> @rsp ^ @rdi >> -@r12 >> ~(+$proc) & $ip & @rsi & +0x0 | @r13 << 0x9 >> (@r8) >> +0y100 ^ @rdi >> @rdx & 10 | (@rax) ^ $thread & ~@rdx ^ @rsi)  { test_statement(0x824);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc | @r13 | -@rbp < -$proc ^ (@rdx) | @rdi | @r11) ;  if (@rdi | @r11 > @rsp | @r10)  { test_statement(0x462); } elsif (@r13 >= @rax) { test_statement(0x2315); } elsif (@rbx = 0y10001) { test_statement(0x1114); } else { test_statement(0x1460); } }
$error$
$end$
519
 if ($proc + 0xF ^ @r13 ^ 0x3 >> @rbx != @r13 ^ @r11 & @rbp ^ 0n12 | @rsp ^ @r8 >> (0n13) & $proc & $ip)  { test_statement(0x22DE); } else { test_statement(0x11E7);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx <= @rax) ;  /* This is a comment */  break;  break; }
$error$
$end$
520
 if (~@rsp + @rdx >> @r13 >> (@r8) >> $buffer & @r9 & (@rdx) >> @rbx | @rsp << $teb >> (@rbp) & 13 >> (@r12) ^ $proc >> @r13 ~@rsp + @rdx >> @r13 >> (@r8) >> $buffer & @r9 & (@rdx) >> @rbx | @rsp << $teb >> (@rbp) & 13 >> (@r12) ^ $proc >> @r13)  { test_statement(0x6BA); ;  // /* This is a comment  } else { test_statement(0x7FC); }
$error$
$end$
521
 if (@rax + @r13 << $thread << $thread & 0n6 << -$ip >> $buffer & $teb ^ 0y1100 << @r11 ^ 0n2 >> -@r8 ^ @r8 ^ $thread >< 0x12 << @rsp)  { test_statement(0x1F2C); } elsif (@rsp << @r10 >> @rsi >> (0x2) & @r11 & $buffer & @r11 <> 0n5 << @rbp >> -@rbp & @rdi >> ($ip) ^ 0n13 & 2 & @rsi) { test_statement(0x224F); } elsif (@rbp >> 0n6 | (-0xF) | +$buffer ^ @r9 | @r12 | @r9 <> @r12 >> $buffer) { test_statement(0x1B17); } elsif ($teb & $ip ^ @r9 ^ @rdx | (-@rax) ^ ~$teb <> @r10 & -$thread ^ -@rax ^ @rdi) { test_statement(0x107C); } elsif (0y1111 ^ $ip <> 0y1111 ^ $ip) { test_statement(0xB27);  for (val = 10; @rsp((@rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
522
 if ($proc << @r9 ; +@rdx + ~$thread << @r11 | 0y1000 << @rsi)  { test_statement(0x15D8); } elsif ($ip >> 23 & 11 | @r8 >< @rax << @r8 & @rbx ^ @rbx ^ -@r12 & @rbx) { test_statement(0x2265);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10)@rsp | @r10) ;  break; } else { test_statement(0x16B8);  /* This is a not closed comment  // /* This is a comment  ;  This is a not opened comment */ }
$error$
$end$
523
 if ($teb + @rsi << $ip & 0xB << @rdi >> @r8 >> @rdi ^ -$teb >> @rsp ^ @rbp >> $ip ^ ~0x10 & $ip | @rax << $teb >> $teb ^ 10 & $buffer & 0x5 | @r9 >> @rsp & 6 ^ $proc & 0n2 ^ 0x7 ^ $teb | 0x3 & @rbp = $teb << @r10 << @rsp >> $proc << 0y110 >> $ip >> @rbx & @rsp << 6)  { test_statement(0x106D); ; val = @r12 & @rsi | @r10 ^ @rax ;  This is a not opened comment */  for (; @rdi))@rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @r10 ; } elsif ($ip >> 0x6 | 0y1111 >> @r9 != @rax >> @r11 >> @r8 | 0y10001 & @r10 ^ ~0n11 | @r13 | $proc | $ip | 0n2) { test_statement(0x1DD1); } elsif (@r12 >> $ip & @rsp & $thread <> $buffer >> $thread & $teb ^ @r11) { test_statement(0x9EF);  if (@rbp | @rbx ; @r12 | @rsi)  { test_statement(0x17D7); } elsif (@rdx ! @rdx) { test_statement(0x39C); } else { test_statement(0x1197); }  /* This is a not closed comment  break;  break; }
$error$
$end$
524
 if (@rsp << $proc << (@r13) & +@rsi >> @rdx >> 0y1010 | @r10 << ~~@rax >> @rsi >> ~@r13 & $teb & 0n9 & @rdi ^ @rbx & @rdx & @r8 ^ @r12 & @rdx != @rsp << $proc << (@r13) & +@rsi >> @rdx >> 0y1010 | @r10 << ~~@rax >> @rsi >> ~@r13 & $teb & 0n9 & @rdi ^ @rbx & @rdx & @r8 ^ @r12 & @rdx)  { test_statement(0x416); } elsif (@r11 >> (@r13) ^ @rbp >> $ip @r11 << @r9 >> $proc >> 0y1001 ^ $thread ^ @r10 & 0y10001 ^ $proc | $teb >> @rbx | 0xE & @r11 | 0n12 ^ 16) { test_statement(0x437);  for (@rax = @rdi | @r12 | ~($thread); @r13 ^ @rsi | $ip >< @r13 ^ @rsi | $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 & 0n10 & $teb | $buffer ^ ~+$ip | @rdi)$teb >> @rbx & $teb | @r8 ^ ((+@r10))) { test_statement(0x2399); } elsif (@rdx < 0n1 ^ @r12 ^ @r12) { test_statement(0x20B); } elsif (@r10 | 0x13 | 0n17 >< @rdx) { test_statement(0x946); } else { test_statement(0x1987); }
$error$
$end$
525
 if (@rbp >> ($thread) << @rdi >> ~@rdi >> @r10 & @rsi & @rsp >> @rbx | -@rsi & $buffer >> @rsp & ~(@r11) ^ 11 & @r12 ^ $ip ^ @r12 ^ @rax | @r11 ^ 0xD ^ $proc ^ @r12 ! $thread + 5 | @rbx ^ $thread | 0y1 & ~0xD & @r9 ^ @rbx & $thread ^ 17 | 0n14 | @rsp ^ @rdx | $thread)  { test_statement(0xD59);  for (; @r9))$thread & 0n4 ^ @r10 ^ $teb | @rdx ^ @rsi | @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer & @rax & $teb & @rsi ^ @rax >> @rsp ^ 0x3 ^ 0xB ^ @rdi | -@r8 & 20 & $proc ^ 0n9 & $proc ^ $buffer ^ @rbx @rax << @rsp >> @r8) { test_statement(0x1A11);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ^ $teb <= $teb ^ $teb) ;  for (; 0x6 ! 0x6;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
526
 if ($thread + @r10 >> (+$proc) & 0n3 << @rdi >> -@r10 >> @r9 & @rsp ^ @r10 << $proc >> 0y10001 >> @r10 | $ip << @rsp ^ $teb & +@r12 & 0x10 | @rbx >> $buffer & @rsi ^ @r9 & @rsp | @rbp & $teb ^ @r13 ^ @rbp | @rsi ^ @r11 | @r12 <> @rbp << @rsp << @rdx & 0n1 << @rbp & @rbx >> +@r9 & 0n4 | @r12 << @rbp >> @r9 >> @r9 ^ +@rdi & 0n18)  { test_statement(0x1B50); }
$error$
$end$
527
 if (@rdi + 0n4 & 13 << @r11 >> @r10 != @rbp + 0x11 << @r10 << @rbp & 0x10 & @rdx & @rax | @r11 << @r9 | @r11 >> @r9 ^ @r12 & @r12 ^ $buffer ^ @r9 | ($teb) ^ @r9)  { test_statement(0x1CE7); @rax = 0x13 >> @rbp & $thread & @rdi | @rax | 0x12 ^ 0y1010 | 0y1111 | +~0x7 ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 15 | $proc | +@rax >= 15 | $proc | +@rax) ; } else { test_statement(0x2237);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx == @rbx) ; val = @rdx | (0n10) ; }
$error$
$end$
528
 if (@rsi + @r11 << $proc << @rsi & @rbx = ~$buffer & @r10 << @r11 >> $buffer >> $teb & @r8 | ~@r10 >> @r8 >> $teb & @r9 >> @rax & @rdi | 0y10010 >> +$ip & -$proc ^ @rdi ^ @r8 ^ $thread)  { test_statement(0x7F7); } else { test_statement(0x1460);  while  (@rdx | @r10)@rdx | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
529
 if (@rsi + @r13 << $ip << 0n6 | @r11 << @r12 >> @rax & @r10 ^ @r10 | 0y11 & 0xE ^ 0x11(@rsi + @r13 << $ip << 0n6 | @r11 << @r12 >> @rax & @r10 ^ @r10 | 0y11 & 0xE ^ 0x11)  { test_statement(0xC19);  /* This is a comment */ } elsif ($thread << @r11 >> ~$ip ^ 6 >> 0n11 & $teb & @rdx | $ip >> @r11 & @r11 & @r10 < @rdi >> @r12 >> $proc & ~@rax >> @rbx & @rbx ^ @rsp) { test_statement(0x1DF2); } elsif (@r8 | --@rax ^ @r9 ^ 0y10001 | @r12 | @rsp | @rbp < @r8 | --@rax ^ @r9 ^ 0y10001 | @r12 | @rsp | @rbp) { test_statement(0x1E3C);  // /* This is a comment   This is a not opened comment */ } else { test_statement(0x12A); }
$error$
$end$
530
 if ($thread + 0n15 >> @r13 | @r11(($thread + 0n15 >> @r13 | @r11)  { test_statement(0x1B9F); } elsif (@r11 << @r10 & -$buffer >> 4 & @rsp & @r9 ^ @rax & @rdx | +0y1101 >> @rsp & 0xD & @rdx < @r8 >> @r9 & @rax & @r8 & @r12 ^ $ip >> @r8 | @rbp >> @rsp & (@r8) | @rbp) { test_statement(0x9C5); }
$error$
$end$
531
 if (@rbx + +$teb >> 0y110 ^ @r10 << @r10 & @r12 >> @r9 | $buffer << ~$buffer & -$thread ^ $ip & 20 & -@r11 ^ @r8 & $proc ^ $ip | @rsi >> +@rbp & @rbx & @rsi | @rbx & @r8 ^ 22 ^ $buffer >= @rbx + @rsi << +(@r8) << @r9 ^ $buffer << $buffer & @r9 & $proc & 0n13 | @rax)  { test_statement(0x12DE); }
$error$
$end$
532
 if ($ip << @rsi & 0y10000 & 7 & 0x7 ^ $buffer ^ @r9 >> $thread & $buffer ^ $thread)@rdi << @rax << 2 >> $thread << $thread >> $thread & $proc | @rdx >> @r13 >> +@rsp & @rax >> @r13 & +@r9 & $teb)  { test_statement(0x135A); } else { test_statement(0x76E); }
$error$
$end$
533
 if (-+$thread + $ip << -$thread << @rsp ^ 0n2 << @rsi >> @rsi & @r8 >> $buffer & @rdi <= @r12 + -(@r8) << $thread << @rbp ^ @rsi & @rbx)  { test_statement(0x97D);  if (@rax | @rdx ^ @r8 >= @rbp ^ @r12)  { test_statement(0xEEE); } else { test_statement(0x437); } }
$error$
$end$
534
 if (~@r10 >> @rdx & @rbp & -($teb) | @rdx & (@r12) >> @rbp & @r11 ! $proc << @rbx << @r12 >> @r11 | 0n4 & @rbx >> -@rbx ^ $buffer >> ~@rdx & $thread ^ @rdx & @r13 ^ -$buffer | @rax >> @r11)  { test_statement(0x181E);  // /* This is a comment  } else { test_statement(0xC96);  // /* This is a comment  }
$error$
$end$
535
 if (@rdi >> $teb >> $buffer & @rdi << @r11 & @r10 >> @rsi & @rax >= @rdi >> $teb >> $buffer & @rdi << @r11 & @r10 >> @rsi & @rax)  { test_statement(0xB13);  break; @rax = ~$ip & $thread ^ 0y11 ^ @rdx | @rdx ; } elsif (@rax << @rsi | -@rsi ^ @rbx | @r11 | $ip | @rdi | ++$ip)@rax << @rsi | -@rsi ^ @rbx | @r11 | $ip | @rdi | ++$ip) { test_statement(0x145D); ; } else { test_statement(0x16); }
$error$
$end$
536
 if (@rsi >> @rdx << $thread >> @r12 >> @r8 ^ ~21 & 0n18 & @rbp | 0x2 >> @rdi >> $ip & @r8 >> @rsi ^ 0x6 >> @r10 | $proc >> 0x10 ^ @rbp ^ $thread ^ @r13 ! @rdi + @r8 ^ 0xF | $thread << @r13 ^ @rdi & @r8 & @r11 | 0n11 & $buffer | $buffer & @r9)  { test_statement(0x161); } elsif (~-@r8 << -17 & 0y10011 & @rdx == ~-@r8 << -17 & 0y10011 & @rdx) { test_statement(0x20A2); val = $ip & $thread ; } elsif (@rsp & @rdi ^ 0y0 & $proc ^ @r11 ^ (@rdi) | @r8 ^ $ip(@rsp & @rdi ^ 0y0 & $proc ^ @r11 ^ (@rdi) | @r8 ^ $ip) { test_statement(0xB29); } elsif (10 ^ ~@rdx ^ $buffer | $buffer >< $buffer & -@rax) { test_statement(0x965);  /* This is a not closed comment  /* This is a not closed comment ; } else { test_statement(0x1EC6); }
$error$
$end$
537
 if (0n8 | 23 << 23 >> 0y100 & @rdi ^ $ip >> 0y101 | ($buffer) ^ ~@rsp <> $buffer + $proc << @r9 << @r8)  { test_statement(0x1F81); ;  if (@r8 ^ @r12 ! @r8 ^ @r12)  { test_statement(0x20AC); } elsif (@rsp)0y10000 | @rdi) { test_statement(0x1DD3); } elsif ($thread @r13) { test_statement(0x224); } elsif ($ip))@rdx) { test_statement(0x163B); } elsif (0y101 == 10) { test_statement(0x232); }  // /* This is a comment  } elsif (0n9 & $buffer >> @r12 ^ @r10 >> @r13 & ~@rbx >= 0n9 & $buffer >> @r12 ^ @r10 >> @r13 & ~@rbx) { test_statement(0x1BD);  for (; $thread ^ @rsi)$thread ^ @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  break; } elsif (14 >> @r10 | 0n17 ^ @r12 | ~@rsp ^ @rsp < $teb >> @r13 ^ @rbx | ~@rbp ^ @rax | @rsi ^ @r9) { test_statement(0xBF4);  while  (0y1110 | $buffer >= 0y10000)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment ; } else { test_statement(0x21CD); }
$error$
$end$
538
 if ($proc & @rsp << @r12 ^ 10 & @r13 >> @rdx & @rsp & -$teb ^ @r10 >> @rsp ^ ($ip) & 0xA | 0n5 ^ $buffer >> $buffer & @rsi | @r10 & @r8 ^ 0y1111 | 0y111 ^ @r9 | $thread ^ $proc | 3 = $proc & @rsp << @r12 ^ 10 & @r13 >> @rdx & @rsp & -$teb ^ @r10 >> @rsp ^ ($ip) & 0xA | 0n5 ^ $buffer >> $buffer & @rsi | @r10 & @r8 ^ 0y1111 | 0y111 ^ @r9 | $thread ^ $proc | 3)  { test_statement(0x1ECE); } elsif (@rsi >> 0y1000 >> ~~$ip & +@r8 & @r8 & $ip ^ @rax ^ $thread ^ 11 ^ 0y1111 = @r10 >> @r10 & @rbp >> @rdx) { test_statement(0x71);  /* This is a comment */ } elsif ($buffer >> @r13 ; @rdi) { test_statement(0xF9F); } elsif (@r12 & 0x7 ^ ~$buffer | @rbx | @r9 | ~~@rbx == $ip ^ +@r10 ^ 0y1011 | @r11 ^ @r9) { test_statement(0x1778); } else { test_statement(0x2637); }
$error$
$end$
539
 if (@rdx + @r8 << @rdi & @r10 << @rsp >> ($proc)))@rdx + @r8 << @rdi & @r10 << @rsp >> ($proc))  { test_statement(0x24B4); } else { test_statement(0xDFA);  break; }
$error$
$end$
540
 if ($buffer != @rbx << 0n9 ^ $thread & $buffer & $buffer & @rsi ^ (@r11) ^ @r12 & @rax | 13 >> -@r12 | @r10 >> @r8 & $buffer & @rbx)  { test_statement(0xD0C); } else { test_statement(0x1907);  // /* This is a comment  }
$error$
$end$
541
 if (@r10 + @r11 << @r12))@rbp + -$ip ^ ~0n16 << +$proc >> $thread)  { test_statement(0x1D69);  for (val = 10; @r12 | 0n7 | @rsp | @r8(-@rdx | @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } else { test_statement(0xC0E);  while  ($thread | ~@rsi <> @rdx | $buffer | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip | +@rsp = @rsi | ($teb)) ;  /* This is a not closed comment }
$error$
$end$
542
 if (@rsi >> 0y1011 >> @rbp & $proc ^ @rdx >> $buffer >> +@rsi ^ $teb >< @rsi >> 0y1011 >> @rbp & $proc ^ @rdx >> $buffer >> +@rsi ^ $teb)  { test_statement(0xC6C); } elsif (@rdi << @r11 >> @rbx >> @rbx | @r10 & $ip & @r10 | -@rax ^ @r10 | $teb | 0n13 | @r10 <= @rdi << @r11 >> @rbx >> @rbx | @r10 & $ip & @r10 | -@rax ^ @r10 | $teb | 0n13 | @r10) { test_statement(0x1AD2);  // /* This is a comment  } elsif ($thread >> 0n2 & $proc ^ @r8 & @rbp <= $thread >> 0n2 & $proc ^ @r8 & @rbp) { test_statement(0x108);  for (val = 10; 0xA))$thread | -0y1011;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip & @r8 >= $ip & @r8) { test_statement(0x173A); }
$error$
$end$
543
 if (@rax + @r10 << @rsi & @r8)@rax + @r10 << @rsi & @r8)  { test_statement(0x12B); } elsif (@rdi >> 0y1100 & -($buffer) >> -$teb & $teb ^ 0y10011 & @rdi & @r9 >< 17 << $buffer >> @r13 >> $buffer & @r12 >> @rbp) { test_statement(0x149F);  // /* This is a comment   if (@r13 | @rsp 0y1101 | @r9)  { test_statement(0x25C1); } elsif ($teb))@rbx) { test_statement(0x1B4C); } elsif (@r12 ; @r8) { test_statement(0x1660); } else { test_statement(0x96B); }  break; } else { test_statement(0x2645); }
$error$
$end$
544
 if ($proc + @rdx & $ip ^ @r10 << @rax >> @r10 >> @rdx | @r10 << 0y1001 & @rdi >> $proc & 0x3 ^ $proc >> @r13))@rdx + @rdx << $thread << @r11 >> (@rsp) >> $teb & @rsp << @r11 & @rax & @r13 ^ @r10 >> ($thread))  { test_statement(0x1EEA); }
$error$
$end$
545
 if (-$thread & $thread ^ @r13 << @rbx >> 0xB <> +@r12 + @rsi & ~14 << $thread & $teb ^ @r13 & @r13 ^ @r10 >> ~@rsp ^ ($teb) & @rsp)  { test_statement(0x163D); } else { test_statement(0x3EF); }
$error$
$end$
546
 if (@r9 | $buffer != @r9 | $buffer)  { test_statement(0xBB4); val = +0x8 | @r8 & $buffer ; } elsif (+($thread) >> @r8 ^ @r13 >> @r8 @r9 & @r11 >> @r9 & $ip & @r10) { test_statement(0xB58); } elsif (22 >> @r12 | @r10 22 >> @r12 | @r10) { test_statement(0x170C);  /* This is a comment */ } elsif ($teb & ~@r9 ^ @r12 != $teb & ~@r9 ^ @r12) { test_statement(0x7EF); } elsif (@rsp | ($proc) ! @r9) { test_statement(0x335); } elsif (@rsp <> @r8) { test_statement(0xC0D);  This is a not opened comment */ } else { test_statement(0x1465); }
$error$
$end$
547
 if ($thread + @r9 << @rax >> @r9 & @r9 << 0xE >> @rsp & @r11 $buffer + 23 >> @r12 & @rsp << @rbx >> $ip >> @rbp ^ @rsp << @rdx & 0n18 >> $buffer & @r8 | ~@r13 & @rsi >> $teb & @r8 | 0y0 >> ~~$proc)  { test_statement(0x102); } elsif (@rax ^ (+$thread) & @rdi & @r11 ^ @rsi | @r12 >> $ip & $thread ; ~@r10 << 0y11 & @rsi >> 12 | 0y111 ^ (~@r10) & -$buffer ^ 0n19) { test_statement(0x13C9);  /* This is a comment */ ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx((@rdx) ;  This is a not opened comment */ }
$error$
$end$
548
 if (@rax + $buffer << $teb << 0y101 >> $ip >> @r11 & $ip & 0y100 >> @rdx & $teb ^ 20 >> @rsi & 0x10 ^ @rdi >> @rdx | $teb != @rax + $buffer << $teb << 0y101 >> $ip >> @r11 & $ip & 0y100 >> @rdx & $teb ^ 20 >> @rsi & 0x10 ^ @rdi >> @rdx | $teb)  { test_statement(0x66A);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@rsi) ^ @r9 != @rbp ^ @r11 | @rsi) ; } else { test_statement(0x1D24); }
$error$
$end$
549
 if (+0n0 + $ip >> ~@rbp << ~$ip >> $proc & 0n5 << @r13 >> 0xF >> $teb & $ip >> @r13 & (@rbp) & $thread >< @rsp << ~(0y1001) << $ip ^ +~$thread << $teb >> $proc >> $proc & -$ip & 2 & ~0n13)  { test_statement(0xD4A);  /* This is a comment */ } else { test_statement(0xDE7);  while  (@r12((+@r10 ^ @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($proc @rax | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
550
 if (-@rsi + (@rax) << ($proc) << @r10 & @rbp << (@rsi) & @rsi >> @rax & 0x8 | @rsi >> 0x8 & @r12 >> 0x12 & 7 & +-$thread | @rdi >> (@rax) & @rbx & +@rax ^ @r12 & $proc = @r10 + 0n0 << @r11 << @rsp ^ (@rsp))  { test_statement(0x12B9);  This is a not opened comment */ } else { test_statement(0x1B51); }
$error$
$end$
551
 if (0n4 + $thread << @rsp << @r13 ^ $proc & 0n9 & @r9 ^ @rbx ; 0y100 << $ip << (@r11) & (@r10) << $ip ^ @rax)  { test_statement(0x9FD); }
$error$
$end$
552
 if ($proc + $proc & @r13 >> $buffer >> @rbp <> $proc + $proc & @r13 >> $buffer >> @rbp)  { test_statement(0x223B);  break;  while  (-@r8 ^ @r13 | @rbx | @rsp(-@r8 ^ @r13 | @rbx | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rsi | $thread <> @rsi | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; $ip)$ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 << @rdx >> @r13 >> @r12 & @r12 ^ @r13 ^ @rdi ^ $thread | 0n18)@rsp >> @rsp & +-23) { test_statement(0x37E); } elsif ($teb ^ 0y1001 & $thread | 0n18 & $buffer | @rax ^ 7 @rbx & @rdi) { test_statement(0x5C8); val = @r8 | +@rdi | @rdi ;  break; } else { test_statement(0x232D);  break; }
$error$
$end$
553
 if (@r10 << @r11 << @rbx >> @rdi << @r11 ^ 0x10 << $proc <> -@rsi << $thread << @r13)  { test_statement(0xC74); }
$error$
$end$
554
 if (@r10 + $teb << @rbx >> @rdi << @r9 & $teb >> @r9 >> @r13 & 0y10001 & @r12 | @rsp << @r10 | @rdi >> @rsi & $ip ^ @rdi & @r13 ^ @r9 | @r13 ^ @rbp ^ $teb | @r10 ^ @rdx((20)  { test_statement(0x1F61); } else { test_statement(0x754);  /* This is a not closed comment }
$error$
$end$
555
 if (@rsi << @r9 >> @r12 >> 0xE >> 0xF & 0n10 << $proc >> @rbx >> @rbp ^ @r11 >> (@rax) & $teb ^ -@rbx & @rdi & 0y10000 ^ $buffer & 0y101)0x0 >> @r10 >> 0xF & @rbp & $teb & @r9 & @r11 ^ @rbp ^ $teb)  { test_statement(0x1D72);  /* This is a not closed comment } elsif ($ip | 0y1001 & -@r12 & $buffer ^ @r8 & @r12 ^ 0y11 ; $ip | 0y1001 & -@r12 & $buffer ^ @r8 & @r12 ^ 0y11) { test_statement(0x3A2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 ^ @r9 | @r12 | @r9 ! ~17 | +@r12 | 4) ; } else { test_statement(0x1234); }
$error$
$end$
556
 if ($thread + @r12 << @r10 & $teb >> @r12 >> @rbx ^ @r10 ^ ($buffer) & @r11 | @rdx >> 0n16 >> @r11 & @r8 & @rax > $proc << $ip << $buffer & @r12 << $proc ^ +$buffer ^ @rdi & @rsp & 11 | 0n13 << @r13 >> @rsp)  { test_statement(0x14F3);  for (; 0n17 & 0y1011(0n17 & 0y1011;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ^ 2 +0y0 | (~@rbx) | +@r8) ; } elsif (0y1011 << @r10 >> @rsp >> $proc & @r12 & $teb @r8 << 6 & @r12 >> @r11 ^ $ip ^ @r9 ^ @r9 | $thread & @rax & $thread ^ 0y1111 & @rsp) { test_statement(0xF44);  break; } elsif (@rsp ^ @rdi ^ @rdx($teb ^ +@rsi & +$ip) { test_statement(0x119F);  /* This is a not closed comment  while  ($buffer @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rbx < @r12)  { test_statement(0x1B30); }  break; } elsif (@rdx ^ @rbx | 0xF(($buffer) { test_statement(0x1E7E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y111 ! @r11) ;  // /* This is a comment   while  (@rbp <= ~0y10010)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = $teb ; } else { test_statement(0xFD3); }
$error$
$end$
557
 if (@r9 << (@r9) >> @r9($thread + 0n18 << @r11 << @rax >> @r13 << $thread & -@r10 << $teb)  { test_statement(0x1DA5); }
$error$
$end$
558
 if (0n1 + @r13 | 17 << @r9 >> @rbp & @r10 | -@r12 >< $ip + 0n17 << $thread & +@r9 << @r8 >> +@r10 >> 0x8)  { test_statement(0x25CF); } elsif (@rsp << @r10 & @rax >> @rbp ^ @rax ^ @r8 ^ @rsp ^ @rbp | @r9 >> @r9 & @r12 ; @rsi >> @rdi >> @rsi & @r8 | @rbx >> +@rdx & @rax ^ +$proc | @rsi & 0n18 ^ @rbp ^ @r13 | @r8 ^ @rax) { test_statement(0x9CB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx ^ @rsp @r13 ^ @r11 | @rsi | @rax) ; } else { test_statement(0x1553); }
$error$
$end$
559
 if (@rsi + @r11 << 0n4 & $teb << +$thread >> 0y1 >> @r13 >< @rdi << @r11 << -@rdx & $ip << @rsp)  { test_statement(0x252F);  break; } elsif (0x6 << $proc >> 0n17 & @rdi >> @rbx & 0n2 | @rbp >> @r8 > @r13 << @r9 >> 0y1100 | (0xD) & 0y1000 & 0xA ^ (@r9) & @rbp ^ (@rsp) | @r13 & $thread | @rax ^ @r13) { test_statement(0x20FC); } elsif (@r11 = @r11) { test_statement(0x1E9A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip | ~@rbp >< $thread | @rsp) ; } elsif (0xC & $teb >= (@rbp) ^ @r8 | @rbp) { test_statement(0x43B); } elsif (($buffer) | $proc >= 0n13) { test_statement(0x142B); } else { test_statement(0x1819);  break; }
$error$
$end$
560
 if ($buffer ^ -~((~@rdi)) << @rsi >> @r12 >> @r9 >< @rdx)  { test_statement(0x157);  if ((@rsi) & @rsp | $teb ; @r13 & -@rdi | $teb ^ @rax | @r9)  { test_statement(0x1E6F); } elsif (($buffer) ^ $thread | @rax ! @r11 | +0y10) { test_statement(0x13AF); } else { test_statement(0xAA8); } } elsif (@rdi << 2 != @rdi << 2) { test_statement(0x831);  for (; 0n14 ^ ~$proc ; $teb | @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1EC3);  // /* This is a comment  }
$error$
$end$
561
 if ($ip + @rax << @rdi ^ ~@rax(~$teb + @rbx & @r9 << @r9 >> 0n11 & @rbx >> $ip)  { test_statement(0x91C); }
$error$
$end$
562
 if (@r12 + $ip << +0xB & 0y111 >> $buffer >> @r10 ^ @rdx | +$ip >> @rsi ^ @r10 >> ~@rbx @r12 + $ip << +0xB & 0y111 >> $buffer >> @r10 ^ @rdx | +$ip >> @rsi ^ @r10 >> ~@rbx)  { test_statement(0xDEA); } elsif (@rax >> $proc & $ip >> (0y1100) & -@r12 | @rbx >> @r10 | @r13 & @rsp ^ 0n1 | 0y10001 ^ $teb($teb ^ @rsi >> $thread ^ @r10) { test_statement(0xDC6); } elsif (@r13 | @r12 ^ $teb ^ 0n4 | (+@r13) ; @r13 | @r12 ^ $teb ^ 0n4 | (+@r13)) { test_statement(0x13F6);  This is a not opened comment */ } else { test_statement(0x110E); }
$error$
$end$
563
 if (@rax + @r12 & @r12 << 23 & 21 >> @r9 ^ @rdi >> 0y1 >> @r11 & $teb & @rbp ^ @r10 ^ @r11 & @rsp))@r12 + $ip >> @r12 << (@rbx) >> $teb | @rdi << @r10 >> @r10 & 0n4 & ~@rbx ^ @r12 | @rsi >> 0x12 & 0xE & @r8 | $ip & 0n5)  { test_statement(0xE6A); } elsif (($teb) << $teb | @rdi & (@rdi) ^ @r9 | @rdi ; ($teb) << $teb | @rdi & (@rdi) ^ @r9 | @rdi) { test_statement(0xBC6); ;  /* This is a comment */ }
$error$
$end$
564
 if (22 >> @rdx | $proc << $buffer >> $teb | $ip >= @r12 + @r13 << @r9 >> $teb >> @rax >> @rbp)  { test_statement(0x1ACD);  // /* This is a comment  } elsif (@r10 >> 0y100 & -@rdi & $thread ^ @rax >> 23 & (@rbp) & (0y111) < @r10 >> $buffer & 5 & (@rbx)) { test_statement(0x1A55); } else { test_statement(0xDDD); }
$error$
$end$
565
 if (~-@rbp + 0x13 >> ((@r12)) >> @r11 >> $thread ^ +@r12 << $proc >> -$thread >> @rbp | @rdx << ~@rdx & $ip & $proc ^ $thread >> 0y10 & @rsp & $ip = 0n13 << @r8 >> @rsi << @r11 & ~~@rdi & @rbx & @rdi & @rax ^ @r9 << @rbx & +$ip & -@r11 & $buffer ^ @rsp >> @r13 ^ @r11 & @r13 ^ @rdi ^ @r8)  { test_statement(0x1AF7); } elsif ($buffer << $proc >> ~~+@r8 >> @rax ^ @r12 ^ @rbx & @r13 >< $thread & @r11 | $ip >> ~@rax ^ $ip ^ 0y1001 ^ @rax) { test_statement(0x8F6);  /* This is a comment */ } elsif (@r10 >> @r8 & @rsi | 0y111 <> @r10 >> @r8 & @rsi | 0y111) { test_statement(0x125F);  This is a not opened comment */  This is a not opened comment */  /* This is a comment */ } else { test_statement(0x24EC); }
$error$
$end$
566
 if ($proc << +0 & $teb << @r13 >= $proc << +0 & $teb << @r13)  { test_statement(0x1C70);  This is a not opened comment */  // /* This is a comment  @rax = ~23 | @r12 ;  // /* This is a comment   /* This is a not closed comment }
$error$
$end$
567
 if (($proc) + @rbx & @rax >> @r9 <= @rax << @rsi | @rsp << @rsi >> @r12 ^ @rsp & @r8 ^ @r10 & ~$thread ^ @r13 ^ @r13 | @r13)  { test_statement(0x1F10); } elsif (@rsp & 0n10 >> ~+0n4 & @r10 & $buffer ^ $ip & @rdi ^ $ip & @rax | -14 <= $ip << @rbx >> @rsi & 0x2 & @r9 & @r11 ^ @r8) { test_statement(0x94E);  This is a not opened comment */ ; } elsif (@r10 >> @r9 | @rsp ^ 0y10011 >< @r10 >> @r9 | @rsp ^ 0y10011) { test_statement(0x88E); } else { test_statement(0x22F7);  for (val = 10; @r8 ^ @rdx = +@rbp ^ @r11 | $thread | @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
568
 if ($proc >> $teb >> ~$thread & +@rax << @r8 & $ip | $buffer << @r8 ^ @rsi & $teb & @rsi +$buffer >> $teb >> 0xA >> @rdi & $ip >> @r9 & @rdi)  { test_statement(0x1C9E);  This is a not opened comment */ } elsif (@r12 << @r12 & $teb ^ $teb >> @r13 & (~0n3) ^ $thread ^ @rbx)$ip & 10) { test_statement(0x488); } elsif (3 >> @r12 & ~-$ip & @r10 ^ @r13 == @r9 & -@rax ^ @rsp) { test_statement(0x605);  while  (@r12 ! @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1F1); ;  while  ((6))$proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
569
 if (@r8 << $ip & +@r8 & +@rbx >> @rdi & @rbx & @rsp ^ -@rbx << 0x9)@r8 << $ip & +@r8 & +@rbx >> @rdi & @rbx & @rsp ^ -@rbx << 0x9)  { test_statement(0x24D9); }
$error$
$end$
570
 if (@rdi >> ~0y111 >> 14 >> +@r9 > $ip + @r10 >> 0y111 ^ @r8 >> +@r10 >> @r12 & 1 & 0n19 & @r11 ^ 11 ^ @rbp & 0y10010 ^ 0x1 ^ 14 | @r10 | 0y10010)  { test_statement(0xC6E); val = @rsi >> @r10 ; val = (@rdx) ^ @rdi | @rdx ^ @r9 | @rax | +1 ; }
$error$
$end$
571
 if ($thread & @r11 << @r8 ^ (0y1) >> @r10 >> @r13 & @r8 | $thread & 0x3 & 0n17((@rdi + @rdx >> ~@r13 << @rax & $thread & @r10 >> (@r8))  { test_statement(0x321);  /* This is a comment */  for (val = 0y1 ^ @r13; 0y10 | 0x6 | @r10 >= @rsp ^ @rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xFDF); }
$error$
$end$
572
 if ($buffer >> @r9 << @r11 >> @rbp >> $thread | @r8 ^ +@rbx >= @rbx + @r8 & $teb >> $teb >> @r10 & @rsi >> (0y1010) & 0n19 ^ ~@rdi << ~@rdx & @r13 & @rdi)  { test_statement(0x2542); }
$error$
$end$
573
 if (@r10 >> $thread & @rsi << $proc >> ~-@rsp >> @r13 ^ 0xA >> 0xE >> $proc & @rbp ^ $teb >> -@r12 & 0y1111 & @rbp ^ -@rsp & +@rbx | @r12 << @rbp ^ @r9 >> @rax & @rsi & @r13 ^ 0n5 & $thread ^ $buffer | @r10 & $teb | @rsi >= @r11 & 0n14 & 0y1110 | 0y11 << @rbx >> +~@rsp | @r10 >> @r11 ^ @r11 | +(@r9) | ~0y10011 ^ @r11 | 0y1 | ($buffer))  { test_statement(0xEC3); } else { test_statement(0x23E3);  for (val = 10; @r9 | ~0)@r12 | @rdi | @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
574
 if ($thread + @rbp << 0y1000 << @r8 >> @rbp ! 0n6 + 0n19 >> 0xE << @r11 & -13 << $buffer >> @r9 >> @r9 ^ $ip ^ @rbp & $ip ^ -@rax)  { test_statement(0x234B); }
$error$
$end$
575
 if ($proc + @rdx >> @r12 >> 0x6 >> ($buffer) & -@r9 >> @rax & $thread >> @r12 & @r12 ^ @rax ^ @r8 ^ @r10 & @rsi ^ @rsp | @r8 << @rax >> @r8 >> $proc & @rdx >> 0y10 ^ @rsp >> $teb | $teb & @rbp ^ $buffer & @rdx | 0xA & -23 ^ @rsp ^ -$thread != $proc + @rdx >> @r12 >> 0x6 >> ($buffer) & -@r9 >> @rax & $thread >> @r12 & @r12 ^ @rax ^ @r8 ^ @r10 & @rsi ^ @rsp | @r8 << @rax >> @r8 >> $proc & @rdx >> 0y10 ^ @rsp >> $teb | $teb & @rbp ^ $buffer & @rdx | 0xA & -23 ^ @rsp ^ -$thread)  { test_statement(0x220F);  /* This is a not closed comment }
$error$
$end$
576
 if ($buffer ^ $thread << 0n5 >> 0n13 ^ $teb >> @rsi ^ $ip & 0xD ^ @rax ^ (@rdi) != $buffer ^ $thread << 0n5 >> 0n13 ^ $teb >> @rsi ^ $ip & 0xD ^ @rax ^ (@rdi))  { test_statement(0x2C5); } elsif (0n16 & @rax & 0y101 & @r9)0x13 << @r13 ^ $thread >> @r13 | $thread >> @rbx ^ +0n15 | -@rax) { test_statement(0x228E);  /* This is a comment */ } else { test_statement(0x21D1); }
$error$
$end$
577
 if ((@rdx) & (@rsp) << 0n2 >> -0y1 >> @r10 0y111 + $proc >> $proc >> -$ip ^ @r10 << @rsp | @rbx << @rsi >> @r12 & @rbx ^ $buffer >> 0n19 | @rax ^ @rax ^ 13)  { test_statement(0x2E4); }
$error$
$end$
578
 if ($teb << +@rbp >> @rax >> -$proc | $teb << @r12 >> 0y101 >> $teb | 0n10 ^ @rbp & 23 ^ $buffer ^ @rdi | @r10 & $teb ^ @rsp <= @rbx << $thread << 0y110 >> 14 >> ~@r9 ^ @rbx << @rsp >> @r9 | 0y10010 ^ @r8 >> -2 & 0x7)  { test_statement(0x233F);  if (~@rax | @rsp | @r12 | $ip = @rbp & @r12 ^ $teb ^ @r11)  { test_statement(0x26F); } elsif (@rdi ^ (+@rbx) | @rbp | 0xB <= @rdi ^ (+@rbx) | @rbp | 0xB) { test_statement(0xB8D); } elsif (+$proc $thread | ~0x9) { test_statement(0x2140); } else { test_statement(0xEA5); } ; }
$error$
$end$
579
 if (@r10 + $buffer | @rbp << @r13 != +$ip + 0y100 << @r13 >> $thread << $thread ^ 22 << @rdx & 0y101 & @rdx ^ @r9 >> @rdx & $ip ^ $teb ^ 0n7)  { test_statement(0x23BA); } else { test_statement(0x130C); }
$error$
$end$
580
 if ((@rdi) + @r11 & @rsi << ((17)) & @r10 >> (@rax) & @rax & @rdi == (@rdi) + @r11 & @rsi << ((17)) & @r10 >> (@rax) & @rax & @rdi)  { test_statement(0x4C); }
$error$
$end$
581
 if (0x5 + $proc << -@rbp & $teb << $teb >> $teb >> 0x8 ^ @rsp << $proc >> ~-0y100 & (@rax) & @rbp & @rdi ^ @rbp >> 0x13 | -@r10 << @r13 ! @r8 + ~+~@rbp << $teb << @r12 & @rax >> @rsp & ~~@r8 & ~@r10 & +21)  { test_statement(0x5E4); } elsif ($proc >> @r8 >> $buffer($proc >> @r8 >> $buffer) { test_statement(0x2A5); } elsif (@rsi >= @rsi) { test_statement(0x1200);  This is a not opened comment */ } elsif (@rdi ^ @rdx | 13 | @r13 | $proc >< ~@r13 | $teb) { test_statement(0x9D9);  /* This is a not closed comment  /* This is a not closed comment  // /* This is a comment  } elsif (-@rdx | @r10 ! $thread | @r11 | @r10) { test_statement(0xFB4);  This is a not opened comment */ } else { test_statement(0x292); }
$error$
$end$
582
 if (@r10 << $thread >> @r13 | $proc << $teb >> @r8 >> @rdi & 0y1111 >> @r8 & @rsi & @rdi))@r10 << $thread >> @r13 | $proc << $teb >> @r8 >> @rdi & 0y1111 >> @r8 & @rsi & @rdi)  { test_statement(0x1B14);  if (@r10 & @rbp = @rsi ^ @rbp)  { test_statement(0x159); } val = (0x11) ^ @r10 ; } else { test_statement(0xBB3); val = $buffer & -$teb ;  /* This is a comment */ }
$error$
$end$
583
 if ($proc << @rdi >> $proc | @r10 << $teb >> @rbp >> $proc | ~$teb | 0y1110 & @r9 ^ 0y110 | @rbx | @r13 | 20 != @rdi + @r10 | @rdx << $proc >> 0x3 & @r13 >> 0n9 | $ip & $buffer & @rsp ^ @rsp & ~@r13 | @r11 & +$thread)  { test_statement(0x88); } elsif ((($teb)) << $thread | 0n14 & $thread & 0y1000 <= $buffer << @r12 & $teb ^ 0x2 ^ 0x5) { test_statement(0x974); } elsif ($buffer >> $buffer & -~@r10 & (@r13) | @r9 & $buffer ^ ++@r10 ! $buffer >> $buffer & -~@r10 & (@r13) | @r9 & $buffer ^ ++@r10) { test_statement(0x17B);  break; } elsif (@r11 ^ @r13)$proc & @rsi) { test_statement(0xCAA); } elsif (-~$thread ^ @r12 | @rax | +~@r12($buffer ^ $thread) { test_statement(0x21CE); ; } elsif (@r11 == @r11) { test_statement(0x14AE);  for (; 0n9 = $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1703); }
$error$
$end$
584
 if (@rbx + @rsi >> @r8 << @r9 ^ $thread($thread << @r8 >> @rdi << 0n3 & @r9 >> @rbx >> $proc & @rsi >> 0y111 & ~@rdx & 0y11 | @rdx << @rbp | -@rax >> 22 & $ip)  { test_statement(0x1778);  for (val = 10; $buffer & 0y1010 ^ @r12 ^ @rsi | @rsp ^ @rsi @rbp & 0y110;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   for (val = 10; @r11 | +3 == @rdi | 0y10001;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (@rax = $thread; $thread))$thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 @r8) ; } else { test_statement(0x2075); }
$error$
$end$
585
 if ($teb ^ 0x10 << 0n7 | @rdi(@rbp + $ip >> (0n0) << +0n6 | $thread >> $proc >> @rdx | 0n16 & @r11 | (@r13) ^ +0n6)  { test_statement(0x1976); } elsif (@r8 >> @r13 & $ip >> 0n12 & $proc & @rsi @r8 >> @r13 & $ip >> 0n12 & $proc & @rsi) { test_statement(0x2040); }
$error$
$end$
586
 if ($teb + ~~$ip & @rax << $ip >> 0y10 >> $proc & 0n0 >> @r11 | $teb & @r12 >> -@rbp ! @rdi ^ 0y1111)  { test_statement(0x40C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi | @rdx ^ $thread | $thread | @rbx > @rdi | @rdx ^ $thread | $thread | @rbx) ; }
$error$
$end$
587
 if (0x8 + @r13 >> @r10 ^ ~0n2 << 0y10011 ^ 0y10001 < 0x11 + +@r10 << $buffer << @rax & @rdx << @r11 >> (@r11) & @r11 | @rdi << $ip & @rsp >> +$thread & 0 & 0n0)  { test_statement(0x2016);  /* This is a not closed comment }
$error$
$end$
588
 if (@r11 << @rax & @rsi << 0y1011 >> @rsi & $buffer ^ $buffer << @rbx & @rsi & @rax | $ip << 15 >> (@r8) ^ 14 >> $thread | @r8 >> @rbp & (@r9) >= @r11 << @rax & @rsi << 0y1011 >> @rsi & $buffer ^ $buffer << @rbx & @rsi & @rax | $ip << 15 >> (@r8) ^ 14 >> $thread | @r8 >> @rbp & (@r9))  { test_statement(0x1740); ;  /* This is a not closed comment } else { test_statement(0x11EC); }
$error$
$end$
589
 if ($buffer << $buffer & (@rbp) << 0n6 >> @rax >> @rdx ^ @rsp >> @rdx >> -$buffer & @rbx ^ 0x1 >> $teb ^ -@rdi & 0x6 | @r12 << $teb >> 0n5 >> -$buffer ^ 0y10011 >> 0y0 ^ 5 & (@rbx) ^ $proc ^ ~0y111 | @rdi ^ $buffer & $teb ^ $proc ^ @rsp((@r9 >> $ip >> 0n5 >> 0x8 & @rdi << -@rsi ^ @rbx >> @rsi)  { test_statement(0x22F2);  if (0n12 <= (~2) ^ @rbp)  { test_statement(0x13C8); } else { test_statement(0xB4); } }
$error$
$end$
590
 if (@rsi & @rsp >> @rsp >> @r8 & ~@r9 >> $teb ^ @rsp << @rsi >> $thread >> 0xD & $ip & @r13 | @r8 << @rdi >> $buffer >> @r11 & @r8 >> $proc = @rsi & @rsp >> @rsp >> @r8 & ~@r9 >> $teb ^ @rsp << @rsi >> $thread >> 0xD & $ip & @r13 | @r8 << @rdi >> $buffer >> @r11 & @r8 >> $proc)  { test_statement(0x21DF); } else { test_statement(0x6F6); }
$error$
$end$
591
 if (0x6 ^ @r12 << ~$proc >> 0x11 >> $ip | $teb >> @rdx >> @r10 & 0x6 ^ @rdi >> ($proc) & $teb & -$teb ^ @rbx & $buffer == @r10 >> @r8 >> -$buffer >> @r8 | $buffer ^ 20 & -@r12 ^ 0n10 | 0n17 >> @r13 & @r12 ^ @r10 | +-$proc & @r8 ^ 10 ^ @r10 | 2 ^ @rdi | @rdi | @r9)  { test_statement(0x1D29);  /* This is a comment */ } else { test_statement(0xD8); }
$error$
$end$
592
 if (@rdx + $ip & -@rsp << @r9 >> @rdi >> @rbx ^ $thread << @r10 | $ip ^ @rbx & @r8 & 0n16 @rdx + $ip & -@rsp << @r9 >> @rdi >> @rbx ^ $thread << @r10 | $ip ^ @rbx & @r8 & 0n16)  { test_statement(0x9C8);  This is a not opened comment */ }
$error$
$end$
593
 if (@rbx + @rbp << (@r9) | @rbp ^ $thread >> 0x0 & @rbp | -~$ip >> 2 | @r10 & $thread >< ~$teb + @rsi << $proc ^ @r13 << $proc >> $buffer >> $thread & @rsi & +@r9 ^ @rbp ^ (+0x6))  { test_statement(0x1C81); ; } elsif (@rbp << @r9 ^ @r8 & $ip ^ (@rdi) & $buffer | @r11 & @rax = @rbp << @r9 ^ @r8 & $ip ^ (@rdi) & $buffer | @r11 & @rax) { test_statement(0xD3D); } elsif (@r13 >> 13)@rsi >> $ip & +0y1000 | @rdx ^ @r13 ^ @rsp) { test_statement(0xCD5); }
$error$
$end$
594
 if ($ip + @r12 >> @rbx << $proc & @r13 << 0xD >> $thread >> ~-@r9 ^ $ip & @rbx >> 0n10 >< $ip + @r12 >> @rbx << $proc & @r13 << 0xD >> $thread >> ~-@r9 ^ $ip & @rbx >> 0n10)  { test_statement(0x19F7);  break; ;  for (val = 10; @r8 | @r11 < @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif (@r10 >> 0n9 >> @r9 & $thread)@r10 >> 0n9 >> @r9 & $thread) { test_statement(0x25A5);  This is a not opened comment */ } elsif (@r13 >> 0n2 & $proc & 21))@r13 >> 0n2 & $proc & 21) { test_statement(0x125); } elsif (@r10 & @r8 ^ $ip ; @r9 ^ @r8 ^ @r12) { test_statement(0x1421);  break; } elsif ($proc ^ -@r9 = 0n15 ^ +$buffer | 0n3) { test_statement(0x13AB);  while  (@rdx >= (0y11))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y1010 | @rdx <= @r12) { test_statement(0xED7); val = $proc ; } elsif (@r13 >= @r13) { test_statement(0x76A); } elsif (@r12)$buffer) { test_statement(0x53F); } elsif (@r10(@rdx) { test_statement(0x212A); } else { test_statement(0x6EC);  /* This is a not closed comment }
$error$
$end$
595
 if (@r8 | @rdi << @rax >> @rbp >> $proc | 0xB >> 22 & 0x10 | 0xF ^ 0x7 ^ @r11 ! @r8 | @rdi << @rax >> @rbp >> $proc | 0xB >> 22 & 0x10 | 0xF ^ 0x7 ^ @r11)  { test_statement(0x2253); } elsif (@r11 << @r9 & 0x3 >> +$ip & 0n19 & @r9 ^ @rbp & @r10 & +++~-$thread @rdi << @r10 & @rax >> @r8) { test_statement(0x1E68);  if (@rdi ^ 14 <> @rdi ^ 14)  { test_statement(0x23BE); }  // /* This is a comment   This is a not opened comment */ } elsif (@rsi >= @rsi | @rdi & @r8 ^ @rsi ^ $teb | @r13 ^ @rax) { test_statement(0x165A);  This is a not opened comment */  /* This is a not closed comment  while  (0n18 >< @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($proc $ip)  { test_statement(0x3C); } } else { test_statement(0x53); }
$error$
$end$
596
 if (@rax + @rsi << $thread << 0x13 >> @rsi == $thread + +$ip << @r9 << @r12 >> @r8 | @rbx << $ip & $proc >> @r8)  { test_statement(0x1105); }
$error$
$end$
597
 if (@rbx + @rsp << @rdx >> +@rsi << ~+@rsi >> @rsi & $proc >> +@rdx & @rbx ^ @rsp >> @rdi & @r10 & $proc & $thread | @r9((~@r8 + @r8 << @rbx & $buffer & $thread | @r13)  { test_statement(0x25B9); } else { test_statement(0x1AA8); }
$error$
$end$
598
 if (@rbp + $buffer & @rsi >> @r11 & @r12 >> -@rdi & @rdx ^ $ip >> @r11 >> @r8 ^ 0x3 >> @rbx | @r11 << @rax >> @r13 >> @r9 | 13 >> @r9 & $ip & $teb | $teb | 10 ^ @rdi >= 0x10 & @rdi & $proc ^ @rax << @rbx >> @rdi & -@rsi >> $thread ^ $thread >> ~$ip & @r10 ^ +(@r12) | (~(+@rbx)) >> @r11 >> $thread & @r10 & @r12 ^ @rsi >> 0y1010 & 0n18 & @r10)  { test_statement(0x1B05);  while  ($thread >= @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rbp >= @r13 ^ @r10 | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r9 ^ @rbp | @r9 | @rdi ; }
$error$
$end$
599
 if ($buffer ^ 0x13 | @rbp << @r12 & @r10 ^ @rbp & $teb & +@rsi | @r11 & @r10 & $buffer ^ @rdx & @rdi))$ip + @rsp << @r8 << @r9 >> $thread << $proc >> @rdi >> 0x11 & (@r13) << (~@r13) & @r11 >> 0y100 | @r11 ^ $proc >> @rsp ^ 0n0 & 7 ^ @r10)  { test_statement(0x11B6); } elsif (-0x7 ^ @rdi ^ @rbp ^ @rbp | +@r12 >> $thread < -0x7 ^ @rdi ^ @rbp ^ @rbp | +@r12 >> $thread) { test_statement(0x1711);  /* This is a comment */  This is a not opened comment */ } else { test_statement(0x120C); }
$error$
$end$
600
 if (+@r11 + 0y110 >> @r13 << @rsp >> $buffer >> +@rsp & @r10 << -@rdi >> @rbx & +@rdi & @r12 & @rbx ^ $teb | @rdi >> -(@r13) ^ @r13 & 15 | @r13 >> +$teb & @r8 ^ @rdi & $teb ^ @r8 ^ $teb | +@rdx & $buffer ^ +(@r8) | @rsi ^ 0x2((+@r11 + 0y110 >> @r13 << @rsp >> $buffer >> +@rsp & @r10 << -@rdi >> @rbx & +@rdi & @r12 & @rbx ^ $teb | @rdi >> -(@r13) ^ @r13 & 15 | @r13 >> +$teb & @r8 ^ @rdi & $teb ^ @r8 ^ $teb | +@rdx & $buffer ^ +(@r8) | @rsi ^ 0x2)  { test_statement(0xDF5);  break; } elsif (@r12 >> -@r13 & $thread >> @r11 | 13 | @r12 & @r11 ^ @rsi | @r12 ! @r12 >> -@r13 & $thread >> @r11 | 13 | @r12 & @r11 ^ @rsi | @r12) { test_statement(0x2186);  /* This is a not closed comment } elsif (@rsp & @rdx(($buffer >> @rdx) { test_statement(0x2699); val = @rdi ; } elsif (0x4 & 0x5 ^ 21 ^ 0n19 > @r9 & $ip ^ @rbx) { test_statement(0x22ED); }
$error$
$end$
601
 if (+-$thread | @r13 >> $ip & 0y10000 <= $ip & @rbx ^ @r8 << $thread >> +@rbp >> @rbp | @r12 & @r13 >> @r9 & 0x7 & $teb)  { test_statement(0x1E3C);  /* This is a not closed comment } else { test_statement(0x2041); }
$error$
$end$
602
 if (@r12 << 0n6 << @r9 & @r10 >> ($ip) & +@rax & @r10 & @rdx ^ 0n7 << @rsi & @rax >> @rdi & @rdx ^ -@rbp >> @rdi | @rax != 0n12 + 0y1100 | $teb << $proc >> @rdx >> @r11 & 0n14 & 4 & @r8 ^ @r8 >> @rax & @r9 | @rsi ^ @r10 ^ @r13 ^ @rbx | @rbp)  { test_statement(0x840); } elsif (@r13 << @rax >> @r8 >> @r12 | @rsi >> $teb | @rax & $teb))@r13 << @rax >> @r8 >> @r12 | @rsi >> $teb | @rax & $teb) { test_statement(0x1D3); } elsif (@rsp >> @r10 | @rsi ^ +~-@r10 ^ ~@rdx >= @rbx >> $teb & 12 ^ 22 ^ @rbx ^ $buffer) { test_statement(0x17E4); } elsif ($teb & $proc < +$ip & @rsi | @r10) { test_statement(0x2430);  for (val = 10; ($thread))@r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } else { test_statement(0x14);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ^ @r8 >< ($proc) ^ @r9 | @r9 | 0y111) ; }
$error$
$end$
603
 if (@r12 + @rdx >> @r10 << @rsp >> ~~$proc ; @r10 >> -@r8 ^ @rbp << 0n11 >> $thread | @rdx >> $teb & (@r11) >> @rdx)  { test_statement(0x49A);  break; } else { test_statement(0x368); }
$error$
$end$
604
 if (@rdx << 2 << $ip >> $teb << @r11((@rbp << $teb << @rdx ^ @r12 & 0x10 >> $ip ^ ~@rdx & @r13)  { test_statement(0x1D1);  for (val = 10; 12 & @r13 | -@r8 ^ @rbx((@rbp ^ @r12 ^ @rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread << 0y11 ^ @rsp >> ~@rsi & @r10 ^ @r12 & $buffer >= $thread << 0y11 ^ @rsp >> ~@rsi & @r10 ^ @r12 & $buffer) { test_statement(0x1003); } elsif (@rsi & $proc & 0xF ^ $teb | +@r8 ^ @rdi ^ @rdx))@rsi & $proc & 0xF ^ $teb | +@r8 ^ @rdi ^ @rdx) { test_statement(0x0); } else { test_statement(0x11BC);  /* This is a not closed comment  This is a not opened comment */ @rax = 12 ; }
$error$
$end$
605
 if (@r9 << @rsp << @r13 >> 0y10010 >> ~@rsp >> @r8 & $thread << @r11 >> 0y101 & @r10 >> @rdi & 0y1100 ^ 0x10 & @r8 ^ 0n19 & @rsi & -$proc ^ 0x13 > @rdx >> @rsi << $teb & @rdi >> 0y1100 & @r10)  { test_statement(0x1FED); } elsif (@rdi >> @rsi | @rdi & +0y1110 & $ip ^ @r11 >= 0x12 | @rsp >> @r11) { test_statement(0xB6F);  while  (0y10000 ^ @r8 ! 0y10000 ^ @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
606
 if (+16 + 0y1100 << $buffer << @r12 & 0n8 << ~@rsp ^ $ip << 2)@r8 + @r8 >> @r12 << ~0xC)  { test_statement(0x1846);  if (@r10 & @r11 <> @r10 & @r11)  { test_statement(0x24A3); } elsif (+@rdi | @r8 | @r8((~0x7 ^ +-$thread | (@rbx) | (@rbp)) { test_statement(0xBD); } elsif ($buffer | 0y101 >< $buffer | 0y101) { test_statement(0x2404); } elsif (@r8)@r12) { test_statement(0x256E); }  /* This is a comment */  while  ($proc | +@r13 >= $proc | +@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif ($buffer << @r9 & @rbx >> 0x13 & $thread | $ip >> -@r13 ^ @rdx & @r8 ^ 0y1010 ^ @rdx > $buffer << @r9 & @rbx >> 0x13 & $thread | $ip >> -@r13 ^ @rdx & @r8 ^ 0y1010 ^ @rdx) { test_statement(0xC42);  while  (@r9 | +$ip | @rsi >= @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (0y1111 & @r9 & -@rbp ^ @rsi ^ @r11 | @r10 ^ @rbp ^ $buffer | -@r10 | $proc <= @rdx >> @rbx & @rbx) { test_statement(0xD40); } elsif (@rdi | @rax ^ @rax | $buffer != @rdi | @rax ^ @rax | $buffer) { test_statement(0x1421); ; } elsif (+0x5 ^ +@r13 | @rsp = +0x5 ^ +@r13 | @rsp) { test_statement(0x938);  /* This is a not closed comment } elsif (@rsp | ~0y1001 < @rsp | ~0y1001) { test_statement(0x1057); }
$error$
$end$
607
 if (0n4 + @r12 << ($proc) << @rdx & $teb << $buffer ^ @rsp << @rsi ^ $buffer & @rax ^ ~@r10 <= 0x0 & @rsi >> @r11 >> $thread & 0x2 >> 0x2 & ~$ip & @rdx | @rdi << @rbp >> @rdi >> (@r12))  { test_statement(0x1D1C);  while  (23 ^ $teb ^ @rbx | @r11 | 0y100 23 ^ $teb ^ @rbx | @r11 | 0y100)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
608
 if (@r12 >> 0n18 & (@rsp) << @r12 >> $thread >> 0y1000 | 0y0 << @rax >> $teb & (@r9) ^ @r12 >> 0n11 ^ (@rax) | -$buffer ^ @r11 ^ @rsp ^ $teb | 0n4 | @rax))0n9 + $ip << 21 >> @rdx >> $teb >> -+(0n17) & @r13 << @r13 & @rdx)  { test_statement(0x144);  /* This is a not closed comment  /* This is a comment */  // /* This is a comment  } elsif (+(@rsi) >> @r12 >> $ip)@rax & ($thread) >> (+5) & @rdx) { test_statement(0x228); }
$error$
$end$
609
 if (-@r10 + $teb >> (+~@rax) << +0x1 >> @rsi >> @rdi & $teb << @r12 >> @r9 ^ 0n11 << +@r8 >> @r8 | @rbx ^ @rax ^ @rsi & $proc ^ @rbp ; 0y1101 << @r12 ^ @r9 ^ 13 >> @rsp & -@r9 & @rdx ^ @r12 & @rdx)  { test_statement(0x34B); } elsif (+$proc & @rdi | @r8 ^ 0n15 & $buffer ^ @r13 | 2 | @r12 | -@r11((+$proc & @rdi | @r8 ^ 0n15 & $buffer ^ @r13 | 2 | @r12 | -@r11) { test_statement(0x165A);  This is a not opened comment */ val = $proc ^ @rbp | $proc | ~0n9 ; } else { test_statement(0x21D6); }
$error$
$end$
610
 if (@rdi + 4 & $proc ^ @r9 >> 0xA >> -@rdx ^ @rsi & $proc ^ @rsi & 0y10010 | $ip << $buffer >> @r12 ^ @r10 & 0y1000 & 0xB ^ ~@rax & @rbx ^ $buffer ^ $teb >= @r8 >> 20 >> -@r11 & @rdi & @rdi & $proc & @rax ^ ($proc) << @r10)  { test_statement(0x187); }
$error$
$end$
611
 if (@r10 >> @r8 << @rsi >> @r10 ^ @rdi ^ $thread >> $thread & ~$proc & (@rbp) ^ @r9 & $ip @rax + @rsi >> ($thread) & @rdi & 0n16 >> 0y1 ^ $ip >> ~-$proc & @r11 >> 0y0 ^ +@rax >> @rbp & @rbp ^ @r8 ^ @rbx)  { test_statement(0x9E0);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi ^ $teb)@rsp) ; ;  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x1)$proc) ; } else { test_statement(0x264F); }
$error$
$end$
612
 if (0n10 + @rsp >> $thread << @rsi ^ @rdi >> @rdi >> @rsp ^ $buffer & $teb | @r10 << 0y1000 >> @rdi >> @r9 | @rbp >> @r8 & ($teb) & 16 | $teb & @r11 | $proc((0n10 + @rsp >> $thread << @rsi ^ @rdi >> @rdi >> @rsp ^ $buffer & $teb | @r10 << 0y1000 >> @rdi >> @r9 | @rbp >> @r8 & ($teb) & 16 | $teb & @r11 | $proc)  { test_statement(0xC55);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ^ @r9 ^ ~22 != $teb ^ @r9 ^ ~22) ; }
$error$
$end$
613
 if (@rsi << @rsp << $thread >> @r12 << 0n7 >> ~@rbp >> @r9 | @rbp >> ~15 ^ @rdx >> @rdi & @rdi ^ 0x13 ^ @rdx < 0n12 + (@r8))  { test_statement(0x1CA3);  while  ($teb ^ @r12 | (@rsi) ^ 7 | 0y1100 | $teb <= $teb ^ @r12 | (@rsi) ^ 7 | 0y1100 | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
614
 if (@r12 + $buffer >> 0y10001 << @r13 >> $proc >> @rbx ^ @rbp & $buffer >> +$buffer ^ @rsi & $ip & @rsp ^ @r13 & @r10 @r12 + $buffer >> 0y10001 << @r13 >> $proc >> @rbx ^ @rbp & $buffer >> +$buffer ^ @rsi & $ip & @rsp ^ @r13 & @r10)  { test_statement(0x154E); } elsif ($thread << +@r13 ^ @r8 & -$thread & $thread(@r11 << @rbp >> $proc | @r10 | @rdi & @r10 | +@rsp) { test_statement(0x2337);  /* This is a not closed comment ; }
$error$
$end$
615
 if (@rdi + @rsi >> $thread << -14 >> @rax >< @rsi << @rdx ^ @rbp << @rdi >> @r10)  { test_statement(0x23CD); } elsif (@r10 ^ @rbp))$buffer << @rdi & $teb >> 0y0 & 23 ^ 0n12 | $teb) { test_statement(0xE33);  if ($ip | $proc | @rdi ; $proc | +@r8)  { test_statement(0x1859); } elsif (0n2 ; 0y1001) { test_statement(0x25CD); } elsif ($thread > +0x12) { test_statement(0x213); } elsif (@r11 ; @rdx) { test_statement(0x20D); } elsif (+@rdx @r9) { test_statement(0x1D92); }  while  (+@rdi(@rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x1 <> $buffer) ;  for (val = 10; @rdi(@rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
616
 if (0xC & @r10 << 0n8 >> 0y11 ^ $ip << @rsp >> @rdx((-+@r8 + $ip << @rdx | @r13 ^ $teb >> 10)  { test_statement(0x1845); ; } else { test_statement(0x1AF2);  while  ($buffer ^ (+@r13) | @rsp | ~0n17((@rax ^ -@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
617
 if ($thread & @r8 & @r9 | @rdi < 0n7 + @rax << $teb & @rsp >> @r8 & @rsi & @rsp)  { test_statement(0xDB7); }
$error$
$end$
618
 if (@rbp << 0n16 >> $buffer >> @rax >> ~$ip & @r9 << @rax >> 1 >> @rsi ^ 0y1000 | $ip ^ @r11 >> @rdi & @r9 & ~-@r10 | @rbx >> @rsp <= +@r9 + ~@rdx << @rbp >> 0n5 << @rsp >> @rbx | @rax >> -@rbx)  { test_statement(0x722);  while  (@r10 & @rax $thread & $proc | $ip ^ @rdx | 14 | 0n18)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } else { test_statement(0x25CA);  // /* This is a comment   /* This is a not closed comment }
$error$
$end$
619
 if ($proc >> @rax << @r13 >> $proc >> @r10 ^ $teb << @rsp >> @r8 >> @r13 & $teb <= @r13 << @r9 ^ @rdi & +@r13 >> $ip ^ 0n0 >> $proc & @rdx ^ @r9 & @r9 ^ ~@rsi ^ $thread | @r12 | @rsp & @r10 ^ +@rdi ^ 14)  { test_statement(0x1DE4); } else { test_statement(0x8C6); }
$error$
$end$
620
 if ($thread + ~0n7 << @rax >> @rbp << ~@rdi >> @r12 >> @r10 & @rbp << 0y1010 >> @rsi ^ @rdx << $proc < $thread + $proc << @rdi ^ 0n12 << @rax ^ ($ip) >> @rsi & $thread & 0x6 ^ 20 & $ip ^ @r9)  { test_statement(0x2048); }
$error$
$end$
621
 if (0y1 + @rbp << @r13 & @r10 & ~@r11 >> @rdi ^ $ip & @r9 | @rsp & 0n2 >> (@rax) ^ @r11 ^ -@rdi & @r9 ! @r8 + $teb | $thread >> 4 >> @r9 & @r10 >> $thread & 1 ^ ~0 >> (@rsp) & @rax ^ @rax & @rsi | 0y100 & $proc ^ @rax ^ +$thread ^ @r11 | 0y1111 & @r12)  { test_statement(0xE5);  if (0n2 & 0y1100 | @r13 ^ @r11 | 16 = @rdx & $thread ^ @r11 ^ $buffer)  { test_statement(0x6F2); } elsif (0n10 ^ -@r10 | @rdx | (@rax) != 0n12 ^ 12 | @rdx) { test_statement(0x3C3); } } elsif (@r9 << $teb >> 0n13 & @rbp & (@r13) | 0x4 >> $thread >< (@r12) << $ip | $thread | @rsp & ($ip) ^ ~@r12) { test_statement(0x13FD);  while  ((0xB) | +$proc > @r10 ^ @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  if ($ip >= $ip)  { test_statement(0x1881); } elsif (@rdx <= 0x0) { test_statement(0x2345); } elsif ($teb != $ip) { test_statement(0x23E2); } else { test_statement(0xBF1); } } elsif (0y1111 >> (@r13) ^ @rsi != @r9 & (@r8) | @r9 | @r8 ^ @r13 | $buffer | 0x3) { test_statement(0x21AB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi((@rdi | (@r12)) ; }
$error$
$end$
622
 if (@rax << -$proc >> @r8 >> $ip & @rdx << -@rdi >> @r12 >> -@r9 & @rdx ^ @rsi << $teb >> @rdi | 0xA >> $teb >> @r8 >= -+0n0 + @r11 | @r13 << @r13 >> $teb & (@r10))  { test_statement(0x1C14);  // /* This is a comment   // /* This is a comment   break; } elsif ($buffer >> @rbx & (~13) ^ @r8($buffer >> @rbx & (~13) ^ @r8) { test_statement(0x2078); } elsif ($buffer & @rsp & @rbp >= $buffer & @rsp & @rbp) { test_statement(0x18B8); }
$error$
$end$
623
 if (@rsp + -$teb >> -@r9 | @rbp << @r10 >> ++@r12 >> @r12 | 0y11 ^ @r11 & @r8 ^ +@r9 | @r13 @rsp + -$teb >> -@r9 | @rbp << @r10 >> ++@r12 >> @r12 | 0y11 ^ @r11 & @r8 ^ +@r9 | @r13)  { test_statement(0x22ED); } elsif ($proc << 0x7 >> @rbp >> $ip ^ @r10 >> 0y10010 & 0n2 ^ $ip >< $proc << 0x7 >> @rbp >> $ip ^ @r10 >> 0y10010 & 0n2 ^ $ip) { test_statement(0x60B);  if ($teb ^ @rbp ! $thread | @r13 | @r8)  { test_statement(0xC73); } elsif (0n6 >< 0n6) { test_statement(0x19A8); } elsif (@r13 == $proc) { test_statement(0x1CBE); } else { test_statement(0x1F03); }  break; } else { test_statement(0x5FE); }
$error$
$end$
624
 if (@rdx >> @rdx | -+@rbp & 0n18 ^ 1 >> @r13 > ~@r12 + @rbx >> $buffer ^ @rax ^ 0x9 | ~@r13 << 0y1111 | 21 & +$ip & -@r13)  { test_statement(0x5A8);  if (@rdx | $ip ^ @rsi > @rdx | $ip ^ @rsi)  { test_statement(0x1536); } } elsif (@rbx >> 0n3 & 0x9 & ~0y1111 ^ 0n5 & @r13 & @r13 ^ @r12 & @r12 ^ @r12 ^ @rsp @rdx >> $teb >> @r9 ^ @rsp >> 3 ^ @rsp & @rdi | (0y1011) >> $proc | @r8 | $ip ^ +$proc | 0y1100) { test_statement(0x19FE); ; } elsif (@rsp >> @r9 & @rdi & @r13 ^ @rsi ^ $thread ^ @rbp)@rsp >> @r9 & @rdi & @r13 ^ @rsi ^ $thread ^ @rbp) { test_statement(0x796);  /* This is a not closed comment } elsif (0n4 & @rax ^ 0xE ^ @rax | @rdi ^ (@r8) | @r12 $ip & 0x11 ^ 0y1100 | @rax) { test_statement(0x22A2); } elsif (@rsp($buffer ^ @r10 | $thread) { test_statement(0x221E); val = 0y10010 ; } elsif ($proc <= @r13 | @r12) { test_statement(0x92F); }
$error$
$end$
625
 if (@r8 << @rsi >> 13 << @rdi >> @rbx >> @r11 | @rdx >> $thread >> $thread | $ip & @r12 | $proc ^ ~0y10001 ^ ~$thread | @r13 @rbp + @r9 << ~0x6 << -@r8 >> $proc ^ @rsp)  { test_statement(0x1BAE); } elsif (20 & +@rdx & $buffer & $proc = $ip << @rdi >> @rax >> @r13 ^ $thread ^ @rsp & 0n13 ^ @rax ^ $thread) { test_statement(0x1498);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n2 ^ @r12 | @r10 ; -$thread) ; } else { test_statement(0x1FC5);  for (val = 10; ~@rsi @rbp ^ @r13 | @rax | 0y111;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
626
 if (+@r8 + @r11 >> @r9 | 0xE << @rax +@r8 + @r11 >> @r9 | 0xE << @rax)  { test_statement(0x23B8);  /* This is a comment */  /* This is a not closed comment  // /* This is a comment  } elsif (+-0n7 << $teb >> @rax >> @rbp ^ @r9 >> @r8 >= $ip << $thread >> $ip & $teb | ~@rbp) { test_statement(0x1CD9); }
$error$
$end$
627
 if (+@rsp + +@r13 << $buffer << $buffer & @rdx | 17 & @r11 >> 0n4 > +@rsp + +@r13 << $buffer << $buffer & @rdx | 17 & @r11 >> 0n4)  { test_statement(0x1F29); }
$error$
$end$
628
 if (-(@rdi) << $ip & @rbx >> $ip >> ~$ip <> @r9 + @rsp << @r8 << $teb >> 0y1110 << $buffer | @r8 >> @rsp ^ @rsi & 20 ^ 0y11 ^ @rbp)  { test_statement(0xDC6);  if ((@rdi) == @rdi & 0n17 ^ @rbp ^ 0)  { test_statement(0x1263); } elsif (@r8 | @r12 <> ~(@r13)) { test_statement(0x1193); } } else { test_statement(0x2EE); }
$error$
$end$
630
 if (@rbp >> @r9 << +$thread | (+@rsp) != @rbp >> @r9 << +$thread | (+@rsp))  { test_statement(0x21B4);  while  ($buffer & 0y110 ^ @r8 < $buffer & 0y110 ^ @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rax | @r8)@rax | @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; $proc <> $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x24B6); }
$error$
$end$
631
 if (0x11 >> @rbx | @rdx << @rdi >> @rbp & $ip ^ @rdi >> @r8 & $ip & $teb ^ @r11 <> 0x11 >> @rbx | @rdx << @rdi >> @rbp & $ip ^ @rdi >> @r8 & $ip & $teb ^ @r11)  { test_statement(0x1AA3); } elsif (@r10 << $ip & @rax | $buffer & @r9 & 0xD != 22 << +@r9 & $proc ^ $proc & $thread & @r11 | +@r13 >> @rdx & @r11 & @r13 | $thread | 0n13 ^ 0xD | @rdi) { test_statement(0x22C7); } elsif (-$proc >> @r13 & @rsi & $proc((($proc) >> +@r9) { test_statement(0x2170);  while  ((@r10) @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ; ~@r13) ; } elsif (@rsi)@rsi) { test_statement(0x83);  while  (@rax)0y1100)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x176F); }
$error$
$end$
632
 if (@rbp >> ~2 >> @r8 >> $teb & @rbp & @r9 & @rdx ^ @rbp << $teb >> ~$ip >> @r11 & 0x5 == @rbp >> ~2 >> @r8 >> $teb & @rbp & @r9 & @rdx ^ @rbp << $teb >> ~$ip >> @r11 & 0x5)  { test_statement(0x138C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@r11) | 0n9 ^ +@r12 | @rbp | @rbx >< $proc ^ @r10 ^ 0y10000) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 ^ @rsi | +$proc | @r12 <= @r12 ^ @rsi | +$proc | @r12) ; } elsif ($ip >> @rsp >> $thread & @r11 & @rbp != (@r9) << @rsi >> @r10 >> @rsp ^ 0xF & @rsp ^ (-$buffer) & @rdi) { test_statement(0xE9); } elsif ($ip | $thread & @r10 ! @r8 >> ($ip) & @rsp & $ip ^ 5 | @r8) { test_statement(0x122D); } elsif (@rbp ^ 0y1110 ^ @rsp | @rsi ^ 0n13 > @rbp ^ 0y1110 ^ @rsp | @rsi ^ 0n13) { test_statement(0x3AB); ; ;  /* This is a not closed comment } elsif (@r9 ^ -0x11 | @rbx))@r10 ^ ~0n17) { test_statement(0x48D); } elsif (@rbx | @rdi((@r11) { test_statement(0x1269); } elsif ((@r10) >< @r11) { test_statement(0x1D8C); } elsif ($proc <= 0n6) { test_statement(0xA3); } elsif (~$thread <= @r13) { test_statement(0xA4D); }
$error$
$end$
633
 if ($thread + @rbx ^ 22 >> @rdi >> $thread | @rsi = $thread + @rbx ^ 22 >> @rdi >> $thread | @rsi)  { test_statement(0x5DF);  if (@r9 ^ @rdi | @rsi | 0y11 | @rax <= $buffer & @rax ^ @r11 | $teb ^ @rsi | $proc | @r11)  { test_statement(0x38B); } } elsif (@r13 | @r13 >= (0y1) << +@rbx ^ $thread & @r10 | @rdx & @rdi & $proc) { test_statement(0x16CF); } elsif ((@r10) >> $teb ^ $thread & $proc | @r11 ^ @r13 ^ @rdx | @r11 | @r12 | ~0x3 != @r12 >> 0y10 & $proc & $teb) { test_statement(0x1CEC);  /* This is a not closed comment  if (0n12 <= @rbx)  { test_statement(0x1E4E); }  if (@rax != @rax)  { test_statement(0x1B9C); } }
$error$
$end$
634
 if ($teb << $teb << $ip >> @rsi << @r10 & @r8 | $buffer >> @r12 >> 0y101 > $proc + @rsp >> $buffer << $ip >> 1 >> @rdi & +0xD ^ @r13 << @rbp >> @rbx ^ @rdi >> @rbp ^ ~0xA | $ip << $teb | 0n15)  { test_statement(0x1703); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 <= 0xF ^ @r12 | $ip) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc | @rax)@rsi | +@rsi) ;  /* This is a not closed comment } elsif (@r8 >> @r10 & 0y11 >> @rsi & @r12 | $thread & -@rdx = $proc << @r8 >> @rsp & @rax & @rax | @r11 >> +@rbp | 0y1000 | @r10 ^ @rbx | ~@r11 | @rax) { test_statement(0x35D);  This is a not opened comment */ } elsif (@rbx >> @r8 ^ 0xD & @r11 @rbx >> @r8 ^ 0xD & @r11) { test_statement(0xE65); } else { test_statement(0x1019); }
$error$
$end$
635
 if (@r11 + @r9 & ($teb) >> @r9 >> @rbx ^ $thread >> @r10 >> 0x2 <> $ip << @r12 << @rsp >> @rbx >> 0n11 >> $proc)  { test_statement(0x545); } elsif ($proc << @rsp > 23 >> @r12 >> $proc ^ @rbx >> @r13 & -@r13 | @r12 >> -@r8 ^ @rbp & $teb ^ -$teb | @rdi & ~$ip ^ $proc | $buffer) { test_statement(0x1851);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb > $teb) ;  break; } elsif ($ip ^ $buffer & $thread | @r10 & @rbp ^ @r13 ; +$buffer ^ @r9 & 17) { test_statement(0xD59);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp | @r9 = @rax | 0y10000) ; } elsif (0x13 & @rbx | $ip | @r9 | @r13 <> +@r8 & @r10) { test_statement(0x1652); } elsif ($teb | $proc @r11 ^ @rbx) { test_statement(0x1F90); ;  // /* This is a comment  } elsif (@r10(@r9 | @r9) { test_statement(0x726);  /* This is a not closed comment } elsif (@rdi < $buffer) { test_statement(0xF86); }
$error$
$end$
636
 if (@rsi + ~@rsp | 14 | @r8 & 0x4 | $ip & $thread ! $proc + +@r11 >> (@rsi) | -+~0x8 << @rsp ^ 0x12 & 0y1011 & @r9 | @rsp >> $teb & -@r11 ^ 20 | @r12 & ~+20)  { test_statement(0xDC1); } elsif (@r8 << @rax ^ @rsp & $thread ^ @rax & @rdx ! (@rbp) << @rax >> @rdi ^ -$teb >> 0n5 | ~@rdx >> @rsi & $teb ^ $proc | @r10 & @rdx ^ @rbx ^ @r9) { test_statement(0x1F0); } else { test_statement(0x1DCA); }
$error$
$end$
637
 if (-@rsp + 0x6 >> @rax << @r9 >> @rax | (@rax) << @r13 & $proc & (@rsi) < -@rsp + 0x6 >> @rax << @r9 >> @rax | (@rax) << @r13 & $proc & (@rsi))  { test_statement(0x1AEA);  // /* This is a comment  ; } elsif (0y1101 >> -0n12 & @r12 | $buffer | @rsi ^ @rsi ^ 0n7((@r10 << $ip ^ (0xF) >> $thread ^ @r13 & ~@r12) { test_statement(0x1697);  if ((@r10) | $thread | @r11 <> (@r10) | $thread | @r11)  { test_statement(0x226E); } elsif (14 | $teb <> 14 | $teb) { test_statement(0x1A60); }  for (val = 10; $teb | @r9 ; @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rdx(-@rdx) ;  // /* This is a comment  } elsif ($ip >> @rdi >= @r11 & 4 ^ @r11) { test_statement(0x205A);  for (; 11 | $teb >= 11 | $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x6C7); }
$error$
$end$
638
 if ($teb + 6 & @rdi << 0n13 & (@r9) ^ @r13 << @r11 | @rsp >> ~@r8 >> @rsi | @r12 & +@r12 & @r12 | +$thread & (@rbx) ^ -$teb | @rbp ^ @rdi >< $teb + 6 & @rdi << 0n13 & (@r9) ^ @r13 << @r11 | @rsp >> ~@r8 >> @rsi | @r12 & +@r12 & @r12 | +$thread & (@rbx) ^ -$teb | @rbp ^ @rdi)  { test_statement(0x13A1); }
$error$
$end$
639
 if (0x4 & 0y1110 << -$proc ^ (@r11) | -0x1 << ~@rdi <= $proc & @rdx >> @rbx >> $proc | @r9 << 0y1101 >> -@rbp >> $thread & 0x0 ^ $thread >> $teb | @rsi >> +@r11 & @r9 ^ +$teb & @rbp)  { test_statement(0x167F); ;  This is a not opened comment */ } elsif (@rbx >> $teb >> 1 & @rax >> @r9 & $teb | 1 >> @r10 & @r9 & (@rsi) ^ @r13 ^ $buffer | $ip & @rsp ^ @r11 | ~@rbx ^ @r11 | @r12 | @rdx <= @rbx >> $teb >> 1 & @rax >> @r9 & $teb | 1 >> @r10 & @r9 & (@rsi) ^ @r13 ^ $buffer | $ip & @rsp ^ @r11 | ~@rbx ^ @r11 | @r12 | @rdx) { test_statement(0x155);  if (@rdx ^ $ip | (@r8) | (+0x5) >< @rdx ^ $ip | (@r8) | (+0x5))  { test_statement(0x214F); } } elsif (~0x5 & $thread | $teb >< $thread >> @r10) { test_statement(0x73); }
$error$
$end$
640
 if (@r13 + $thread ^ 0n0 << (0x10) ^ @rbp >> @r9 ^ @r10 & 23 ^ @rax ^ @rsi | ~@rsp << @rbx >> @r13 >> @r9 ^ $proc & $thread | @r9 & 0n1 & @rsp != @r8 << @rdx << @r13 >> 0 << @r9 ^ $proc << $proc)  { test_statement(0xAE5);  This is a not opened comment */ val = $ip ^ @rdx ^ $proc ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x11)@rbp) ;  for (val = 10; +@r8 ! 0y11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp & @rdx >> @r10 & @r12 >= $buffer << 0n5 & 6 >> @rdi | @rsp >> 4 & 0n9 & ~~@rbp ^ 0xD & @r10 ^ $thread ^ @rbp) { test_statement(0x1293); } elsif (@rsp & $proc & @rax | ~@r13 ^ (@r11) ^ @r11 | @rbx ^ -21 | @rsp | @rax(@rdx) { test_statement(0xFC7);  while  (@rbx | @r12 >< @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp & @r9 ^ @r11 @rbp & @r9 ^ @r11) { test_statement(0xAFB);  /* This is a comment */ } elsif (@r12(@rsp) { test_statement(0x49); }
$error$
$end$
641
 if (@r9 + 0x7 << +$proc << $thread >> (@rsp) & @r11 | $ip << @r9 >> @rdi & @r8 >> 0x3 ^ @r9 >> $buffer ^ @rdx ^ @r11 ^ @r11 >< @r12 + @rax << 0y100 >> @rbp << @rax ^ @rsp << @rdi & (@rsp) >> 0n16 | @rdi << @rbx & @rdx)  { test_statement(0x531);  This is a not opened comment */  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | @rax >< @rax) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0 <> @rsi) ;  if (@rax ! $teb)  { test_statement(0x166E); } elsif (~@rbx != $thread) { test_statement(0x301); } else { test_statement(0x13AB); }  // /* This is a comment  } elsif (@rax ^ @rdx >> ~$buffer ^ $proc & @r10 | $buffer >> $proc & (2) & $thread ^ @r10 & @rsi | 0n13 & (@r13) ; @rax ^ @rdx >> ~$buffer ^ $proc & @r10 | $buffer >> $proc & (2) & $thread ^ @r10 & @rsi | 0n13 & (@r13)) { test_statement(0x1C0C);  while  (@rax((@r11 | $buffer | @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y0 & 0n5 ^ (@rbx) ^ 0y1010 ^ @rbx | $ip & @rsi <= 0y0 & 0n5 ^ (@rbx) ^ 0y1010 ^ @rbx | $ip & @rsi) { test_statement(0x526);  for (val = 10; ~@rbp != $proc | $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer ^ @r9 ^ @rsp | @rsi ^ 0y1010 >= @rbp ^ 0xC) { test_statement(0x6A7);  while  (0y10010 0y10010)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
642
 if (@r11 & 0n12 << $ip & @rax >> @rsp > @r11 & 0n12 << $ip & @rax >> @rsp)  { test_statement(0x21B8);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip ^ ~$ip ^ @r9 | $buffer != (-@rbx) & $proc | @r9) ; } elsif ($proc << -0n10 >> @rbp >> $thread > @rbp >> @r12 ^ @r10 & 13 & @rsi) { test_statement(0x315); } elsif ($buffer >> +@rbx | $ip ^ 0x9 ^ @rdx | (@r9) >< (~20) >> ~@rdi & 0n13 | -$teb) { test_statement(0x1EAF);  // /* This is a comment  } elsif (0y1010 | $teb ^ $teb | @r9 | 0n12 >= 0y1010 | $teb ^ $teb | @r9 | 0n12) { test_statement(0x22F);  break; @rax = 17 ; val = @rbp ;  break; }
$error$
$end$
643
 if (@r12 >> @rax >> @r9 >> 0n10 | @rdi << @rax | (@r8) >> 0n17 ^ @rbx ^ $buffer | @rbx != @r12 >> @rax >> @r9 >> 0n10 | @rdi << @rax | (@r8) >> 0n17 ^ @rbx ^ $buffer | @rbx)  { test_statement(0x2187); }
$error$
$end$
644
 if (@r11 <= @r11)  { test_statement(0xC50);  if (0n15 & $buffer | ($thread) ^ $proc | $thread == @rdi | $thread ^ @rsp | $teb | @r8)  { test_statement(0x118F); } else { test_statement(0x2668); } } elsif (@r10 << 0y10 & @r13 >> ~@r13 & $buffer ^ @rax @rsi >> (@rdx) >> ($thread) & @rbx & 0y111 & 2 ^ @rbx & -$ip & @rax) { test_statement(0x48B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc = 0n0 ^ @rdi) ; } else { test_statement(0x1F3); val = 0x5 & 23 ;  break; }
$error$
$end$
645
 if (@r13 << $teb & @r12 >> @rsi | @r9 << @rbp >> +~@rdi))@r13 << $teb & @r12 >> @rsi | @r9 << @rbp >> +~@rdi)  { test_statement(0x19A9);  This is a not opened comment */ } elsif (+0y1 & @r11 >> $thread | 3 & @rdx & @rbp ^ $buffer ^ @r9 ^ @r13 != -0n5 >> +$proc >> ~@r10 & +$proc | @rbp >> (@rsi) ^ @rax ^ @r9) { test_statement(0xD23);  if (@r13 | $thread <> @r13 | $thread)  { test_statement(0x240A); } }
$error$
$end$
646
 if (@rdi + @rsp << @r11 << @r9 >> @rsp & $proc << 0n12 >> @r11 >> ~@r9 | ~@rax >> @r11 >> $teb ^ (@r9) ^ @rbx & @r11 ^ -~@r13 < @rdi + @rsp << @r11 << @r9 >> @rsp & $proc << 0n12 >> @r11 >> ~@r9 | ~@rax >> @r11 >> $teb ^ (@r9) ^ @rbx & @r11 ^ -~@r13)  { test_statement(0xD1D);  while  (-@r10 & @r13 | @r9 -@r10 & @r13 | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x74F); }
$error$
$end$
647
 if (@rdx << @rsi >> @rax << @rdi >> -@r11)~($ip) + $buffer ^ 0n2 >> $buffer & @rsp | @rsi >> ~@r10 >> @rax & (-@rdi) & @r13)  { test_statement(0x172);  /* This is a not closed comment  for (@rax = 0n6; @r8 ^ $ip ; @rbp ^ @r12 | @r12 | @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@rsp ^ $teb >> @rdi & 0n5 | @rbx & -@rdi)~@rsp ^ $teb >> @rdi & 0n5 | @rbx & -@rdi) { test_statement(0x2653);  break;  // /* This is a comment   // /* This is a comment   /* This is a not closed comment }
$error$
$end$
648
 if (0y1100 + 0xC << 0y1011 << @r8 & $ip | @rax << 0n2 >> @r8 >> @rdx ^ @r13 >> $proc ^ (@rsi) & @r9 ^ @r9 ^ @r8 | @rdx >> $ip ^ @r8 & 0y10 ^ $teb | @rsi & @rsi >< 0y1100 + 0xC << 0y1011 << @r8 & $ip | @rax << 0n2 >> @r8 >> @rdx ^ @r13 >> $proc ^ (@rsi) & @r9 ^ @r9 ^ @r8 | @rdx >> $ip ^ @r8 & 0y10 ^ $teb | @rsi & @rsi)  { test_statement(0x1040); }
$error$
$end$
649
 if (@r11 + 0x10 << $teb & $proc << @r8 >> $ip ! $thread << 10 ^ @r12 >> @r9)  { test_statement(0x4B4); }
$error$
$end$
650
 if ($teb + 0y11 << @r9 << ~0n16 >> $teb << @rdi & +-5 << (@rsi) = $teb + 0y11 << @r9 << ~0n16 >> $teb << @rdi & +-5 << (@rsi))  { test_statement(0x1864); } elsif (4 << 0xE & 0y0 & @r12 ^ $proc >> 15 ^ @r9)22 << @rbp | @rsp >> 0xF) { test_statement(0x1C8E); } elsif (@r13 >> @rsp & $teb & @rsi))@r9 ^ @rsp & @r13) { test_statement(0x665);  /* This is a comment */  while  (@r9 ! @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif (@r13 & $buffer(($proc & $buffer ^ $teb ^ @rax) { test_statement(0x252C); @rax = $ip | @rsi ; }
$error$
$end$
651
 if (-$thread << @rsp << +@r11 >> $ip ^ +@rsi >> $ip >> @r13 & @r10 | 7 & @rbp & $thread & +-@rax @r8 | @rsi >> $teb | @rsp >> @r12 & $teb & @rax ^ 0n3 & @rax | @r9 ^ -@r13 ^ @rbx)  { test_statement(0xAF9);  // /* This is a comment  } else { test_statement(0x1A82); }
$error$
$end$
652
 if (@rbx + 14 >> @rax >> ~@rsp >> 0y11 & 15 & @rbp ^ @rsi << @r13 >> @r8 >> @r11 & @rsp & 0x4 ^ $thread >> $buffer & $teb ^ @r13 & @r13 | $teb & $buffer & @rbp ^ @rsi ^ @r10 ^ @r12($proc << @r8 >> @r10 >> 0n11 >> $proc ^ ~@r12 << @rbx & @r10)  { test_statement(0xA81);  while  (@rbp ^ @rdx))@rbp ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x53B);  This is a not opened comment */ }
$error$
$end$
653
 if (@rbp + (@r12) >> @rdi ^ @r8 << +4 >> @rdx((@rbp + (@r12) >> @rdi ^ @r8 << +4 >> @rdx)  { test_statement(0x8FD); }
$error$
$end$
654
 if (@rsi << @r11 << $proc & +$ip << @rdx >> $buffer >> @r13 & @r8 ^ $proc << -@r11 | $teb << $proc & @rbp >> ($buffer) & @r8 & @rax | @rsi >> @r9 | $teb >< @r13 + @rsi << @r11 >> 20 << @r10 & 0x12 ^ $proc >> @rsp >> @rbp & $ip ^ @rdx >> ~@r12 ^ 0y1000)  { test_statement(0x1E2C); } elsif ($thread << ~@r13 ^ @rbp & @rbp & $thread != @rbx << -@r12 >> 0y10001 & @r11 >> 0y10010 & @r13 & @r8 ^ @r10 | (@r11) >> (@rsp)) { test_statement(0x6EF); } elsif (@r12 >> @r9 & @rax ^ @rdx ^ 0y1111 ^ @r10 | @rdi ^ @r8 ^ @rsp | +0xF)@rsp >> ($thread) & $proc) { test_statement(0x2291);  if (22 < (@rdx))  { test_statement(0x1A26); } else { test_statement(0x1F4C); } } elsif (@rbp & $ip ^ 0n8(-~$ip) { test_statement(0x1A7E);  break; } elsif (@r11 | $ip)0n16) { test_statement(0x17E2);  /* This is a comment */  This is a not opened comment */  while  (@r13 <= $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx(13) { test_statement(0x102F);  /* This is a not closed comment @rax = ($thread) ; } else { test_statement(0x1F90);  break; }
$error$
$end$
655
 if (@r12 << @rdx << +-+@rbp ^ $thread << $thread & @r8 & 0y1010 & @r8 ^ @r12 ^ @r12 & @r10 >< ~$ip + @rbx ^ $ip << ~@rbx >> @rdx & $ip >> $thread & ~0y101)  { test_statement(0x8CE);  /* This is a not closed comment  // /* This is a comment  } elsif (-0y10000 >> @rdx >> 0y1 < @r8 << ~$proc & @rdx >> $ip & 13 & -7) { test_statement(0xB69);  for (val = 10; +@rax ^ ~$proc | @r10 | @r8 >= +$thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer ^ @rsp ^ $ip ^ $thread | 4 & 0y100 | @r8 <> $buffer ^ @rsp ^ $ip ^ $thread | 4 & 0y100 | @r8) { test_statement(0x1A2B); } else { test_statement(0x8EC); }
$error$
$end$
656
 if (@rax << @rdx << ~0y0 >> @rsi >> $proc >> @rsp & @rbx << @rdx | @r9 << @rsi & @rbx >> @rbp & @r9 & 0xD | @rbp >> 0x5 & @rdx & $ip | @rbp ^ $buffer ^ @rbx | @rax | $buffer <> @rax << @rdx << ~0y0 >> @rsi >> $proc >> @rsp & @rbx << @rdx | @r9 << @rsi & @rbx >> @rbp & @r9 & 0xD | @rbp >> 0x5 & @rdx & $ip | @rbp ^ $buffer ^ @rbx | @rax | $buffer)  { test_statement(0x585); } else { test_statement(0x1D86);  // /* This is a comment  }
$error$
$end$
657
 if (@rbp ^ @rbx & @rsi >> 0n1 & -@r10 <= @r11 + @rbx << @r12 >> -$teb << ~@r10 >> @rsp >> @r13 ^ $teb << -+-@rax >> $proc ^ $buffer >> @rbx & @r11)  { test_statement(0xFE2); } elsif (@rbp << @r8 | @r11 >> $proc & 0x8 ^ $teb & @r8 ^ @rsi ^ $ip | @rax ^ @r11 ! 3 >> @rdx >> ~@rbp & @r13) { test_statement(0x21E6); } else { test_statement(0xAEA); }
$error$
$end$
658
 if (@r10 + 0n10 >> 23 >> @rdi >> 0x5 & -$buffer << @r9 >> (@rdi) >> -~$thread ^ @rsi << @rdi & $buffer >> ~@rbx & $thread & @r12 | $ip >> @rdi & @rdx >> @rax & @rdi & -@rbx | 0n8 | @r12 & $ip | @rsi ^ $teb @r10 + 0n10 >> 23 >> @rdi >> 0x5 & -$buffer << @r9 >> (@rdi) >> -~$thread ^ @rsi << @rdi & $buffer >> ~@rbx & $thread & @r12 | $ip >> @rdi & @rdx >> @rax & @rdi & -@rbx | 0n8 | @r12 & $ip | @rsi ^ $teb)  { test_statement(0xE9E);  This is a not opened comment */ } elsif (0x6 & @r10 >> @r10 ^ $ip >> $thread ^ @rbx & @rdx ^ -+@r12 <> 0x6 & @r10 >> @r10 ^ $ip >> $thread ^ @rbx & @rdx ^ -+@r12) { test_statement(0x14DF); ;  if (@rbx <> @rbx)  { test_statement(0x1932); } elsif (-@r8(-@r8) { test_statement(0x1D46); } elsif (+@rdx(0y1001) { test_statement(0x41B); } elsif (@r10 ; @r10) { test_statement(0x1E14); }  break;  /* This is a not closed comment } elsif (+~@r11 | @rbx ^ ~@rsp ^ @rbx <= 0x2 >> 0y101 ^ 0y1100 | @r11 & @r12 ^ @r8 ^ $thread) { test_statement(0x6E6);  /* This is a comment */ } else { test_statement(0x1E9D); }
$error$
$end$
659
 if ($proc + $buffer << $ip << @rbp ^ $buffer >> $ip >> 7 & 0x0 >> @rbp ^ 0xA & 0y0 ^ $teb <= @rax << $teb << 0x4 >> 0y1110 << @rsi >> +@rax >> $buffer & 3 << @rbp | @rdx | @r9 >> @r9 & @rax & @r9)  { test_statement(0x1B5C); } elsif (@rbx << +$ip >> (0y1001) ^ @rax > ~@rax & $buffer & @rsp ^ @rbp >> 7) { test_statement(0x189);  break;  break; } elsif (@r8 > @rdi >> @r10 & 6 & @rbp) { test_statement(0x6EE); }
$error$
$end$
660
 if (0y1011 + @r13 >> @r10 << ~@rsi >> ~+@r8 == 0y1011 + @r13 >> @r10 << ~@rsi >> ~+@r8)  { test_statement(0x1B3A); } else { test_statement(0x1C7A);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (21) <> (21)) ; }
$error$
$end$
661
 if (@rdi << $proc << @rdi >> @rax << @rbp <= @r12 + @r9 & @rsi >> @r10 ^ $proc << 0x13 >> @r8 >> $buffer & +@r13 | $proc << @rdx >> $teb & @r11 >> $proc)  { test_statement(0x122F);  while  (@rax ^ @rbx | @r8 | @r12 < 0y1001 ^ @rsp ^ $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  for (val = @rbx | @r9; @r10((@rdx | 0n19;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } else { test_statement(0xE03); }
$error$
$end$
662
 if ($teb + @rdi >> -@rax >> (@rsp) >> @rdi ^ $buffer << $ip >> $thread | 1 << @r12 >> @r11 >> @rbx ^ $ip >> $proc & $teb & $proc | (@rsi) ^ @rax ^ $teb)$teb + @rdi >> -@rax >> (@rsp) >> @rdi ^ $buffer << $ip >> $thread | 1 << @r12 >> @r11 >> @rbx ^ $ip >> $proc & $teb & $proc | (@rsi) ^ @rax ^ $teb)  { test_statement(0xA91);  break; } elsif ($buffer << @rsi & $ip >> @rsp ^ @r13 & 0n17 & @rsi ! @r8 >> @rbx >> @r13 ^ @r11 & (@r8) & @r12 ^ 0x3 & 5 ^ $proc ^ @rax | @rdi >> -@r10 & $buffer & @rsi ^ $thread ^ $teb ^ 0y1001) { test_statement(0x261C);  break; } elsif (@rdx = @rdx) { test_statement(0x651); ; } else { test_statement(0xCBB); @rax = $buffer & (@rdx) ^ @rsi ; }
$error$
$end$
663
 if (@rax + @rdi << 1 << @r10 >> @rbx << @r12 = @rax + @rdi << 1 << @r10 >> @rbx << @r12)  { test_statement(0x149); } elsif ($proc << -0n10 & @r12 >> 0x0 & $ip ^ @r12 ^ @r12 & @rbp ^ 0y101 ^ @r8 | @r8 | @rdx | $proc ^ $proc | $proc | $proc < $proc << -0n10 & @r12 >> 0x0 & $ip ^ @r12 ^ @r12 & @rbp ^ 0y101 ^ @r8 | @r8 | @rdx | $proc ^ $proc | $proc | $proc) { test_statement(0x13EE); } else { test_statement(0x221D);  This is a not opened comment */ }
$error$
$end$
664
 if ($teb << (-$proc) << 0n18 ^ 6 << $proc ^ @r13 >> @rsp ^ @r10 & 13 ^ ~~@rbx @rsi + 6 << @r13 >> ~$proc << @r10 >> @rbx >> @rdi & 0x12 << @rsp)  { test_statement(0x1BB8); } elsif (@rsp ^ (0y1110) >< @rsp ^ (0y1110)) { test_statement(0xAC9); val = 0y1000 ; } else { test_statement(0xE88);  break;  for (val = 10; @rbx((@rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
665
 if (0n0 & @r13 << @rax ^ @r11 << -@rdx ^ -0n6 >> @rdx | -@rdi >> @r10 & (@rax) >> @r12 ^ (@r12) ^ $thread & -@rbx ^ @rax >< +@r12 & $thread << +(@rbp) >> @r13 & (0y1101) & @rdx ^ $buffer >> 15 >> @rsp & @rbx & @rsi ^ @r10 & $teb)  { test_statement(0x13C3); } elsif (@rax << @r8 & $ip >> +@rax & @r11 ^ @r12 ^ +@rdi < @r11 << ~@rbp >> @rdi >> @r12 & 0x12 >> @rsi & -@r9 ^ $thread >> ~+@r11 & $buffer) { test_statement(0x1026); } elsif (@r11 ^ @r9 ; 6 >> @r9) { test_statement(0x13A3);  This is a not opened comment */  // /* This is a comment  } else { test_statement(0x922);  This is a not opened comment */ }
$error$
$end$
666
 if (@rbx + $buffer << @rsi < 0n4)  { test_statement(0xD65);  // /* This is a comment   This is a not opened comment */ } elsif (@r9 >> @rdi >> (@r12) ^ $buffer >> @r8 & @r9 & @r10 | @r11 >> @r11 ^ @rax & 0n13 ^ 0x0 | $thread | @rsp >< @r9 >> @rdi >> (@r12) ^ $buffer >> @r8 & @r9 & @r10 | @r11 >> @r11 ^ @rax & 0n13 ^ 0x0 | $thread | @rsp) { test_statement(0xED7);  /* This is a not closed comment } elsif (12 >> @rdx ^ 12 ^ $buffer ^ @rsi)12 >> @rdx ^ 12 ^ $buffer ^ @rsi) { test_statement(0x26A1); } elsif ($thread | 0y101 ^ ($teb) >< @rbp & @r11 ^ 0n12 | @rbp ^ ~0x2) { test_statement(0xC0E); }
$error$
$end$
667
 if ($teb ^ @r13 & @rdx >> @r9 & $ip & @rsi $ip >> @r12 >> @r9 >> @r13 & @r9)  { test_statement(0x1732); } elsif ($teb >> @rsi ^ @rsi >> 2 | @r8 $teb >> @rsi ^ @rsi >> 2 | @r8) { test_statement(0x233D);  /* This is a comment */ } else { test_statement(0x1103);  while  (@r8 ^ $teb | @r8))-@rdx | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
668
 if ((@rsp) + @rdx ^ (-0y111) << ~@rdi == (@rsp) + @rdx ^ (-0y111) << ~@rdi)  { test_statement(0x218);  /* This is a comment */ }
$error$
$end$
669
 if ($teb ^ $proc << $teb >> @r9 >> +0n9 ^ $ip >> @r8 ^ @r12 & @rsi > @r10 << (0y1010) & 0n14 & +$buffer >> @r11)  { test_statement(0x6BC);  This is a not opened comment */  if (@rsi ^ $teb <= 0n17 ^ $teb | @r9 | 0n1)  { test_statement(0x16E9); } else { test_statement(0x731); }  while  (@r9 | @r9 <= @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  break;  // /* This is a comment  } else { test_statement(0x2A1);  if ($proc | 0y100 <> $proc | 0y100)  { test_statement(0xFD5); } elsif (@rbp))$thread) { test_statement(0x20A7); } elsif ($thread ; $thread) { test_statement(0x1404); } ;  if ($thread < $thread)  { test_statement(0xEFB); } else { test_statement(0x1B39); }  /* This is a comment */  This is a not opened comment */ ; }
$error$
$end$
670
 if (@r13 + @rsi << @rdx ^ $thread | $teb << ~@rdx >< 22 >> -20 << @r13 >> +@rax >> 0xE ^ @r10 << 0y1111 >> 0xF >> @rdx ^ 0xF >> 0y1001 ^ @r8 & @rsp ^ $teb)  { test_statement(0x2006); }
$error$
$end$
671
 if (-@r8 + $ip >> @rsp << @rdi >> ~@r13 & 0y10011 << @r13 & @rbx ^ @r12 & @r13 & $ip ; -@rbp + @r10 << @rdx | @rdi << (+@rdx) & $ip & @r9 & @r13)  { test_statement(0x2D3); }
$error$
$end$
672
 if (@r11 + @r11 << $proc << 0xB >> @rdi & +@rsi ^ @rbp << -@r8 >> -@r12 | @rsi << 0y1000 != @r11 + @r11 << $proc << 0xB >> @rdi & +@rsi ^ @rbp << -@r8 >> -@r12 | @rsi << 0y1000)  { test_statement(0xB89); }
$error$
$end$
673
 if (@r10 + @rax >> 0x9 ^ 0n16 >> $proc >> 0x3 >= @r8 + @rax << @r12 ^ $ip << @rdi >> $buffer ^ $proc & $proc ^ @r12 & @r9 ^ @rbx ^ 0y10000)  { test_statement(0x328);  if (0n13 & @r10 | $proc 0n13 & @r10 | $proc)  { test_statement(0xC40); } } elsif (@r8 >> $ip ^ $teb & @rdx ^ (~-11) ^ @r12 != @r8 >> $ip ^ $teb & @rdx ^ (~-11) ^ @r12) { test_statement(0x1C06);  This is a not opened comment */ } elsif (+$proc >> @rbx & -$proc | @r13 & @rsi == +0n13 & 10 | $buffer & 11 ^ 0xA) { test_statement(0x264A); } elsif (@r9 ! @r9) { test_statement(0xA44);  break; } elsif (@rdi ^ @rax | @rax | $ip < $proc ^ 0n2) { test_statement(0xA53);  for (val = 10; @rsp != @rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x77); }
$error$
$end$
674
 if (@rsp ^ $ip << $ip >> @rbx & @rax >> $ip ^ 12 & +$thread ^ (@rsp) <> 4 & @r10 << 0x0 & @r10 >> 0x2 & @r10 & @r11 | +(@rsp) & -$buffer >> -@rbp & @rsp & ($ip))  { test_statement(0xBAE); } elsif (@r12 >> @r12 & 0x9 >> @r12 & @r13 & 0n13 | +@rax >> (@rbx) & @r9 & @r10 | $proc | 0x8 | @rdi))0x6 & $proc >> (0n2) & $proc) { test_statement(0x12D0); }
$error$
$end$
675
 if (@rdx + 0n17 & @r11 << @r10 >< @rdx + 0n17 & @r11 << @r10)  { test_statement(0x245E);  if (@r9 & $proc ^ @r13 | 7 ^ $buffer | @rbp | 0n8 == @r10 & @rax | 4 | @rax | +0x0)  { test_statement(0x263C); } else { test_statement(0x1D44); } val = @rdi | @rbp ^ 0n12 ; } else { test_statement(0xFC);  break; }
$error$
$end$
676
 if (@rbx << 0x1 << @r11 >> $thread << @rsp >> 0y1000 >> @r12 & @rbp & $proc ^ @rsp >> 0n8 >> @rdx & ~@rsp >> @r13 ^ @rbx >> @rsi ^ 15 ^ 0y1100 @rsp + 0n17 >> (@r8) << @rsi >> 0x9 & 7 << $thread | @r13 ^ (0x3))  { test_statement(0x14EE);  /* This is a comment */  /* This is a comment */ } elsif (@rdi ^ @rax & -@rbx & @rsp ^ -@r10 & +$proc | @r9 >> (@rsi) ^ @rdx & @rsp ^ $thread | @rdx & $buffer ^ 0y1110 ^ -$proc | @rbp | @rax | @r10((@r11 << 22 >> @r11 >> $ip & $ip ^ $teb >> @rsp ^ $teb & @r9 | @r8 ^ $ip & @rbp | 0n9 | $thread | @rbp | $ip) { test_statement(0x17C0);  for (val = 10; @rsp ^ @r11))0xC;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x84A);  if (0n17 ^ @r10 = ~@r9 ^ @rsp)  { test_statement(0x1C86); } elsif ((@rsp) >= (@rsp)) { test_statement(0x1D22); } else { test_statement(0x1F14); } }
$error$
$end$
677
 if (@r11 & @rsp | @rsp << +@r9 ^ @rdx >> $thread & $buffer ^ @rbx & $buffer | @rbp >> 22 & @r9 & 6 ^ @rdi | 0y111 ^ 0n16 | 0n0 ^ 0n18 <> @rdi + $teb << @rdx >> $ip & @r12 << 0y10001 >> -@rdx)  { test_statement(0x1CE0); } else { test_statement(0xD16); }
$error$
$end$
678
 if (@rdi + (-@rbp) << $proc >> 0xC | @rax ^ 0n10 == $proc & @rbx << $proc | (@rbx) >> @rsi & (0n17) >> @rsp & 0n5 & @rbx ^ @rsp >> $proc & $thread ^ @r8)  { test_statement(0x2031); }
$error$
$end$
679
 if ($teb >> (0y101) << 4 ^ @rsp & $proc & $buffer ^ +@rsi & $thread & @r8 | 15 << @r10((@rsp + @rdx ^ @rax << @rsp ^ @rbp ^ $proc & $teb)  { test_statement(0xE5C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 ^ @rax = @r13 ^ @rax) ; }
$error$
$end$
680
 if (+$teb + @rax >> @rdx & @rdx >> @r10 | @r13 & $teb & @rsp | 0y1011 >> @rbx ^ 0xE & @rsi @rsp + $thread >> $proc >> @rsp >> @r12 ^ 0xC >> +@rbp & @rdx ^ @r8 >> -$ip ^ @rsi)  { test_statement(0x203B);  /* This is a not closed comment } else { test_statement(0x2460); }
$error$
$end$
681
 if (@rbx << @rsp >> ~~@r12 >> ~$proc >> @rdi = @r12 << $buffer & @rsi << 0n15 & @r11 >> ~$teb ^ @rsi << -@rbp >> @rsi)  { test_statement(0x166D); }
$error$
$end$
682
 if (0x12 + @rdi >> -@rdx << $proc & --@rax & 0 != 0x12 + @rdi >> -@rdx << $proc & --@rax & 0)  { test_statement(0x14D6); } else { test_statement(0x23);  for (val = 10; @rax ^ @r12 | 0n10 | +3(@rax ^ @r12 | 0n10 | +3;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @r13 | @rax >= @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
683
 if (0n10 + $teb & @rbx >> @r12 | @rdx | 0y10010 >= $buffer | @r11)  { test_statement(0x2353); ;  /* This is a not closed comment  /* This is a comment */  while  ((-0n18) != @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (@r8 << $proc >> 0n2 & 0x12 >> @r13 & (1) | $buffer & $ip & 0n17 ^ @rsi & +$teb ^ $buffer ^ +(@rdx)(6 & @r13 >> +1 & @rdx ^ @rdx >> @r13 & 0n5 & @r13 ^ +@rsi & @rbx ^ $teb | $teb ^ @rdi) { test_statement(0x12AF); } else { test_statement(0x1D33); }
$error$
$end$
684
 if (@rsp + @rbx << @r8 << $ip >> @r11 >> 0y10001 & @rbp)0n11 << @r8 << $buffer >> @r9)  { test_statement(0x1425); }
$error$
$end$
685
 if (0y1110 + 0x13 >> @r11 >> @rdx ^ $teb << @rsp >> 0n2 ; 0y1110 + 0x13 >> @r11 >> @rdx ^ $teb << @rsp >> 0n2)  { test_statement(0x102E); } elsif (@rdx << @rdx & @rdx & $buffer ^ @r12 ^ @r8 <= @rdx << @rdx & @rdx & $buffer ^ @r12 ^ @r8) { test_statement(0x13D5); } else { test_statement(0x250); }
$error$
$end$
686
 if (@rbx >> @r8 << @rdi >> @r10 >> @rsi | (0y1111) & 0y10001 | $ip >> 16)@rbx >> @r8 << @rdi >> @r10 >> @rsi | (0y1111) & 0y10001 | $ip >> 16)  { test_statement(0x2256); } elsif (@rax << @r13 >> (0) >> @r13 & 0x12 ^ @r11 ^ $ip & (@rdx) ^ $buffer ^ @rdi | @r13 | 0x2 & $teb ^ @r12 ^ @r12 | @r8 ^ @r9 | @rbp == @rsi << @r11) { test_statement(0x9F9); val = @r10 & 3 ; @rax = $thread ; ;  for (; $buffer = $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (21 >> 16 & @r8 <= 0x1 & $teb) { test_statement(0x76A);  while  (@r11 | 0n14 != @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xB7);  if (@rbx((@r10) ^ @r13 | $thread | @r11)  { test_statement(0xA1D); } }
$error$
$end$
687
 if (-$ip << (@r8) >> @r8 << @r9 >> 12 & $thread ; @r13 << 0n4 << (-@r10) & (0y101) >> $buffer >> (@r11))  { test_statement(0x988); val = @r13 >> -$proc | --@rbx & @r11 ^ @r12 ^ @rdi | 0x9 ^ @r10 | @rbp | @rdi ;  while  (@r9 ^ @r10))@r9 ^ @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
689
 if (@r9 + -0y1001 << 0y100 << (@rsi) >> @rax & 0y1 >> @r11 & 0y110 >> +-@rdi & @rdi | @r12 >> 0n12 >> (@rax) & @rsp ^ $proc & @rdi ^ @rsi ^ @r9))$teb + @rbp << @rdx >> @rax & $thread >> 4 | 0n4 ^ @rbx ^ $buffer & $teb ^ $thread ^ @r13 | @rsi >> @rbp)  { test_statement(0x1FDD);  if ((0n4) & 0y101 ^ +$ip | @r9(((0n4) & 0y101 ^ +$ip | @r9)  { test_statement(0x246D); } elsif (@r12 ^ @r12 | $teb <> @rsi ^ 0xF | -23) { test_statement(0xC0F); } ; }
$error$
$end$
690
 if (@r10 + @rax << @rsi != @rbx + @r8 & @rdx << @r9 & @r8 >> @rdi & $teb ^ @r13 & @r8 >> (@rsp) ^ 0y1)  { test_statement(0x184A); } else { test_statement(0xF41); }
$error$
$end$
691
 if (@r12 + @rbp >> 0n19 << $buffer ^ @r12 << 0y1011 >> @r13 >> @rdi & @r13 >> @r13 & @r9 & @rsi ^ @r10 | 13 << @rbx >> $buffer >> $ip & 0xB >> @r12 & $thread ^ @r10 >> @rsp | @r10 >> @rdi | @r8 & 22 | $thread ^ 0n18 | @rsi @r12 + @rbp >> 0n19 << $buffer ^ @r12 << 0y1011 >> @r13 >> @rdi & @r13 >> @r13 & @r9 & @rsi ^ @r10 | 13 << @rbx >> $buffer >> $ip & 0xB >> @r12 & $thread ^ @r10 >> @rsp | @r10 >> @rdi | @r8 & 22 | $thread ^ 0n18 | @rsi)  { test_statement(0x2322);  while  (@r11 & @rbx(@r11 & @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rdi ^ @rdx | @rsi | @r11 == @r11 | @rdi)  { test_statement(0xB57); } } elsif (-$ip << @r8 & $buffer ^ $thread >> 0n2 & @rdi & +@rdi ^ @r9))$ip << @r9 & ($proc) ^ ~+@rdi | @rsp | ~@rdi ^ @rsi ^ $teb | 6 ^ 0x12) { test_statement(0xA27); ; } elsif (+@rbx >> +$proc & $thread | $buffer ^ (@rbp) | +0y10000 | @r9 | @r12))@rbx >> $thread ^ @rdx & $buffer) { test_statement(0x905); } else { test_statement(0x24A1);  while  (@r9 ^ $ip | $thread @rbx ^ @rax | @r12 | +@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  // /* This is a comment  }
$error$
$end$
692
 if (0y10011 + $buffer ^ @r10 ^ $buffer & @r12 & $teb | @r12 << @r11 >> @rsp >> -(@rsi) & @r9 >> +17 & 0y1010 & (@r8) ^ @r13 | -@rdi & @r11 & @rdi ^ @r13 != @r11 << 0x0 << 0x8 & @r11 >> @r8)  { test_statement(0x71D); } elsif (@r8 << @rsi >> @r12 & $ip ^ @r13 >> $proc & 0n12 ^ @rdi != @r8 << @rsi >> @r12 & $ip ^ @r13 >> $proc & 0n12 ^ @rdi) { test_statement(0x13E2);  if (0xF ^ $thread < $buffer ^ @r9)  { test_statement(0x1BBB); } elsif (+@r12 | $teb(+@r12 | $teb) { test_statement(0x1E4F); } elsif (-$teb((@rbp) { test_statement(0x89C); } else { test_statement(0x1E24); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax == 0n5) ; } elsif (@rbx >> @r8 & $thread & --$buffer ^ @rsp & @r11 ^ 0y1101 ^ @rdi != @rdi & @r9 & @r12 | $teb ^ 0y10010 | -~@r8) { test_statement(0xCAE);  // /* This is a comment   if ($teb <> @r13)  { test_statement(0x73); } elsif (@rbp))$ip) { test_statement(0x157F); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb = @rdx) ;  if (@r13 >< @r13)  { test_statement(0x1E77); }  while  ($teb($teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2380);  /* This is a comment */  // /* This is a comment  }
$error$
$end$
693
 if ((@rbx) + @r9 << ($proc) << 0x5 >> @r10 << -+0y10 & @r9 >> (@rdi) >> @rsi ^ 0xE << (@r9) | ($proc) & (@r11) | @rbp >> 0n0 ^ @rsi & (@rbx) ^ $teb ^ 0n1 | $ip > ~$buffer + @rax << @rsi >> @rbx << @r11 >> @r8 ^ $proc << @r9 >> @rax >> @r9 & @rdi)  { test_statement(0x1F3); } else { test_statement(0x1DD7);  if (@r13 | @rbx | 0n8 <= @r13 | @rbx | 0n8)  { test_statement(0x42D); } else { test_statement(0x11F6); }  for (val = 10; @rbx))@rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
694
 if (@r12 << @rsi << @r11 >> @r12 >> @rax >> 0y110 ^ $ip << 0x7 & 0y11 ^ @rax & $thread ^ @rax & ~@rdi(@rdi & @rbx << @rbx & @rax & 20 & $thread ^ @r12 << @r10 >> @rbp | @rsi >> $thread)  { test_statement(0xACC); }
$error$
$end$
695
 if (@rdi << -@r9 << @r9 | @r9 << @rbx >> @rbx | -@rbp >> @rdx ^ ($thread) & @rdx((@rdi << -@r9 << @r9 | @r9 << @rbx >> @rbx | -@rbp >> @rdx ^ ($thread) & @rdx)  { test_statement(0x265E);  break;  /* This is a not closed comment  while  (@r12 >= @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x3D6);  if (+$thread | @r11 | @rdx = @rsi | @rbx)  { test_statement(0x1BA0); } elsif (@rbp | @r13 >< @rbp | @r13) { test_statement(0x31); } elsif (-$ip(-$ip) { test_statement(0x8EF); } else { test_statement(0xAE4); } }
$error$
$end$
696
 if ($teb << @rbp >> 0y1000 >> 0y1010 >> @rsp | +@rsi | @rax ^ $thread & @r10 ^ -@r13 ^ @r12 | @rdi ^ @rax ^ @r8)$teb << @rbp >> 0y1000 >> 0y1010 >> @rsp | +@rsi | @rax ^ $thread & @r10 ^ -@r13 ^ @r12 | @rdi ^ @rax ^ @r8)  { test_statement(0x245F);  while  (@rbp & $ip ^ ~$thread | $proc <= @rbp & $ip ^ ~$thread | $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1EE7); }
$error$
$end$
697
 if ($teb << 0n0 & $thread << ~@rbp >> 0n1 >> 0x2 | (@r9) >> ~5 & @r11 & @rsi & @rbp | @r8 >> $thread & +@r12 ^ @r11 & 1 ^ @rsi | 0x12 & $proc | ++@rbp ^ @r8 | @r10 <> @rax + @r13 << @r8 << @rbx)  { test_statement(0xD79); }
$error$
$end$
698
 if (+@rdx << +$proc << @r11 >> @r13 & @rax >> ++14 & @r10 +@rdx << +$proc << @r11 >> @r13 & @rax >> ++14 & @r10)  { test_statement(0x13DF); } elsif ($thread << 0n6 ^ @r12 & 0n11 & 0y11)$thread << 0n6 ^ @r12 & 0n11 & 0y11) { test_statement(0x1B1C); } elsif (@rsp ^ ((@r9)) & @rsp ^ 0x1 ^ +0n19 ! @rbx & (@rax) & @rdx ^ @r12 ^ @r11 ^ 0n11) { test_statement(0x1057); } elsif (+0n3 & $buffer ^ @r11 ; @rsp ^ @r13 ^ +@rsp | @r13 ^ $proc | +~@r11) { test_statement(0x9E1);  for (val = 0x6; @r8 >< @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = 0n10 ;  /* This is a not closed comment  /* This is a not closed comment }
$error$
$end$
699
 if (0xB + -@rax >> @rsi >> $teb >> @rsp & 0 << -@r8 & @rbp & @r10 ^ +@rbx | @rbx << @rdx | 0x5 >> @r8 & 0y110 & @rsp ^ $buffer ^ $thread | @r10 & @rsp | @rdx ^ @r13 | 10 == $thread << $ip & +@r11 << @r9 & @rax >> 0y1 ^ @r9 << @r12 | ~@rsp & @rbx >> @rsp ^ @r10 | 13 & @rdi & @r10 | @rax)  { test_statement(0x380); }
$error$
$end$
700
 if ($teb ^ $ip << @rdx >> (0x7) & ($thread) >> ~@rbx ^ 21 ^ @rsp | +~@rbp << @r9 ^ $thread & @r12 & 0n1 > $teb ^ $ip << @rdx >> (0x7) & ($thread) >> ~@rbx ^ 21 ^ @rsp | +~@rbp << @r9 ^ $thread & @r12 & 0n1)  { test_statement(0x1D68); } else { test_statement(0x8C8); }
$error$
$end$
701
 if (@r11 & @r8 << 0x12 & (@rdi) >> @rbp @r11 & @r8 << 0x12 & (@rdi) >> @rbp)  { test_statement(0x23B5); }
$error$
$end$
702
 if (@r10 + @r11 << @r11 << $ip & @rsi >> @rsp >> @r12)@r10 + @r11 << @r11 << $ip & @rsi >> @rsp >> @r12)  { test_statement(0x1EB9); } elsif (@rbp ^ @rbp & @r11 @r8 ^ @r8 >> $teb ^ @rsi & 17) { test_statement(0x19DF); ; @rax = (5) | @rsp ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ++$thread ; @r10) ; ; }
$error$
$end$
703
 if (22 + $teb << @rdi >> @rax << @rsp >> $thread & @rsi & 23 >> +$buffer & @r13 & @rbx ^ @rbp << @r13 & 0y1101 & @r13 ; $buffer << $thread >> @r10 << @rbp >> @rbp >> @r11 & $ip)  { test_statement(0xAC9); } elsif (@r8 >> (-@r8) >> @rsp & @r10 >> @r12 & 2 ; @r13 >> @rbp ^ $thread) { test_statement(0x1358); }
$error$
$end$
704
 if ($thread >> 22 << @rdx >> 0y1101((@rsi << +($ip) << $teb & @rsp << 0x10 >> @rbx >> @rsp & $buffer ^ $ip & -$thread >> @rdi ^ 3)  { test_statement(0x1F97);  for (val = 10; @rsp & @r9 | $thread ^ $teb | @rbp((@rsp & @r9 | $thread ^ $teb | @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x801);  /* This is a comment */  while  (@rdx | @rsi = @rdx | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ val = @rsi ;  /* This is a not closed comment  // /* This is a comment  val = @r13 ; }
$error$
$end$
705
 if (0x0 << @rsp << 12 & $ip & @r8 >> $proc | +-0x4 >> @r9 >> 13 | $ip | @r9 ^ @r11 ^ ($proc) > 0x0 << @rsp << 12 & $ip & @r8 >> $proc | +-0x4 >> @r9 >> 13 | $ip | @r9 ^ @r11 ^ ($proc))  { test_statement(0x259C); } elsif (3 << +@r12 >> @r13 >> $ip & @r11))3 << +@r12 >> @r13 >> $ip & @r11) { test_statement(0x1EE8);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +0n8 < +0n8) ;  This is a not opened comment */ }
$error$
$end$
706
 if (@r11 + $ip >> @r12 << @r13 >> @r11 >> @rax(0x3 >> $ip << ~0x9 >> $proc >> 0n9)  { test_statement(0x1E29); }
$error$
$end$
707
 if (@rax + @rbx >> @r11 << @rbx >> @rax & $thread >> 2 >> $proc & @rax >> ~@rsp & $proc & @rsp ^ 0x7 & @rdi >> @r10 & 0x11 & @rsp | @r12 >> @r8 >> ++@rsi & $proc & @rdi & (~@r12) ^ 0x12 >> +@rdx ^ ~-$ip & @r11 | 0x2 >> $proc | @r11 | $teb)@rax + @rbx >> @r11 << @rbx >> @rax & $thread >> 2 >> $proc & @rax >> ~@rsp & $proc & @rsp ^ 0x7 & @rdi >> @r10 & 0x11 & @rsp | @r12 >> @r8 >> ++@rsi & $proc & @rdi & (~@r12) ^ 0x12 >> +@rdx ^ ~-$ip & @r11 | 0x2 >> $proc | @r11 | $teb)  { test_statement(0x25C); }
$error$
$end$
708
 if (0y1110 >> (@r9) >> @r10)0n3 & $thread ^ @rbp & @rsp >> $buffer ^ +$ip & $ip & $thread ^ 16 ^ -@rsp)  { test_statement(0x51D); } elsif (-@r11 << @rsp >> (0n6) & @rbx(-@r11 << @rsp >> (0n6) & @rbx) { test_statement(0x1812);  // /* This is a comment  }
$error$
$end$
709
 if (@r11 + @r8 << $teb << 12)@r13 >> @rbp ^ @r9 << @rax >> @rbx & @r11 >> @r12 & +@rsp)  { test_statement(0x2496); ; } elsif (@rdx & @r10 >> @r12 & @r11 ^ 0n16)(@rsp) & @rsp & 17 ^ @r11 ^ 0x7 & ((@r9)) ^ 0y1111 | +~~@r13 >> $proc | 0n17 ^ -@r11 ^ @rsp) { test_statement(0x2021);  /* This is a not closed comment }
$error$
$end$
710
 if (@rbp + 0xE & $teb << $teb >> ~@rsp >> (@rdx) ^ @rdx & @r10 & 0 & @rax | 0x10 << @rdx ^ 0n14 & $thread ^ @r13 & -0n11 ^ +(~@r12) | $proc >> $ip & +@rdx & $thread ^ 0n3 ^ 0y1001 == @rbx << @r13 >> @r12 << @rdx >> @rbx & @rax << @rsp & +@rdi >> @r13 & $thread ^ -@rbp >> @r9 >> $thread & 0x5 ^ $teb & 0y1110)  { test_statement(0x610); } elsif (+@r9 & ~0n3 >> @rdx | $thread ^ @r10)@rbp << @rdi & -$ip | $ip >> @rsi & ~0n7 ^ @r12 & +0y110 | 6 & 20 ^ @rsp ^ @rbp) { test_statement(0x798); } else { test_statement(0x316);  if (@rbp > @rdx | @r12 | $buffer)  { test_statement(0x1940); } else { test_statement(0x1D71); }  /* This is a not closed comment  break; }
$error$
$end$
711
 if (@rbp << ~+@r12 | @r11 << -@r11 & @rdx | ~0n0 >> @rax >= @rsp + 0y101 << @rbp << @rax & @rsp << 0 >> $proc)  { test_statement(0x22DA);  break; } elsif (@r12 << +@r13 >> 0n5 >> +@r8 & @r11 >> $teb ^ +@rbx & $ip & @rsi | ~0y1110 >> @rbp & $buffer & 0y11 ^ @r11 ^ @r9 ^ @rsp | @r8 & @r8 | $buffer ^ -$teb != @rdi << $ip & $teb >> @rsp & $teb ^ -$buffer >> $proc ^ @rdi & @r8 | @r12 & @rsp & ~-@rsi | $proc & $thread) { test_statement(0x1B21); } elsif (0y1010 & @r8 & --0y100 ^ $proc & @rsi ^ -@rdi | +@rdx = @rsi) { test_statement(0x2367); } elsif (@r9 & $thread != @rbp & 0n0 | $buffer) { test_statement(0x252B); ; } else { test_statement(0xF15); }
$error$
$end$
712
 if (@r10 << (@rbx) << 22 & -@rsp & 0n15 >> $teb | $buffer >> +@r10 >> @rsi & @rdi >> @rdx & 3 & @r9 | @rdi >> $thread & @rax ^ @r8 ^ +@r9 ^ -~-$buffer ! ~$ip >> @r13 >> @r10 & ~@rsi & @r9 | 0n3 << +@rdi >> @r10 >> @r9 & @rsp >> $teb | 0x3 & 0y1011)  { test_statement(0x1260);  while  (@rdx & @r10 | +0y1010 ^ @rdi(@rdx & @r10 | +0y1010 ^ @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n15 >= 0n5 << ~$thread | @r12 & -@rbx ^ $buffer) { test_statement(0x1370); }
$error$
$end$
713
 if (~@r8 + $thread << (@r11) << (@r8) >> 0x9 >> @rsp & -0n8 >> @r9 & $proc >> +0n19 > $thread << $teb >> (@r13) >> @r10 >> +10 ^ @rbp)  { test_statement(0x1D86); } elsif (@rbx << @rsp >> @rbp >> ~@r13 ^ @rax & @r13 & $teb ! 13 >> @r8 & -(@rax) ^ $proc >> @rax | @rbx ^ @r12 & +0y1101 ^ 14 ^ @rdx | @rax & @r9) { test_statement(0x20BB); } else { test_statement(0xF52);  // /* This is a comment   if (0y1101 | @rdx > @rdi)  { test_statement(0x2BC); } elsif (@r9 > @r9) { test_statement(0x2227); } elsif (@r8 >= $proc) { test_statement(0x1F55); } elsif ($teb >< @r11) { test_statement(0x2388); }  for (val = 10; 6 >< 6;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rbx ~@rbx)  { test_statement(0x867); } elsif (@r9 == -@rbx) { test_statement(0x15B1); } else { test_statement(0x26AD); } }
$error$
$end$
714
 if (@r8 << $buffer >< 10 << -16 << 0y1011 >> $ip << @rdi >> @rbp & @rbp & $buffer >> $thread ^ $buffer >> -$buffer >> $teb)  { test_statement(0x2245); @rax = @r12 >> 0n16 ^ $proc & @r13 ;  if ($thread ^ @rdx != $thread ^ @rdx)  { test_statement(0x22D1); } elsif (@r11 >< @rax | ~@r8) { test_statement(0xE6D); } elsif (@rdx((@rdx) { test_statement(0x7B1); } elsif (@rdi(($ip) { test_statement(0xB0D); } } else { test_statement(0x22B0); }
$error$
$end$
715
 if (0n19 >> 0y0 << +@rax >> $proc >> @r9 & $buffer << @r9 & ~@r10 >> -$thread & +0n7 & @r11 ^ @rdx >> $thread & 0x10 & @rdx & @rsi <> -0n0 + @r9 << @r11 & $proc << @r10 >> 0xA ^ $buffer)  { test_statement(0x1476); }
$error$
$end$
716
 if (@r12 + 0y10011 | @rsp << (-@rsi) >> $teb >> +~0x4 & @r13 >> @rdi & @rsi & -$proc ^ 0n0 ^ 0xA ^ @rax ^ --@r9 <> @r12 + 0y10011 | @rsp << (-@rsi) >> $teb >> +~0x4 & @r13 >> @rdi & @rsi & -$proc ^ 0n0 ^ 0xA ^ @rax ^ --@r9)  { test_statement(0xCEC);  while  (@rdi & @rdi > $teb & @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = -@rdi ; } elsif (@r8 << @rdi & @rdi >> @r11 ^ @rbx & +$buffer & 0x8 | @rbp >< $ip >> -@r13 & @rdi) { test_statement(0x1384);  if (-$teb ^ @rsp ; $buffer ^ ~@r10 | $proc)  { test_statement(0x2E3); } else { test_statement(0x241B); } } elsif (7 >> $ip ^ 0x5 & $thread ^ @r13 | @rdx | 0n13 ^ @r12 | @r10 | 21(7 >> $ip ^ 0x5 & $thread ^ @r13 | @rdx | 0n13 ^ @r12 | @r10 | 21) { test_statement(0xEA9); } else { test_statement(0x1FBA); }
$error$
$end$
717
 if (@r10 + 0n14 << 0x10 << (@r10) >> +~@rdi << +$buffer & @rsi << -0n17 | $buffer << @rdx >> $ip >> @r11 & @r9 >> @r9($ip >> @rsi ^ 0 & @rdx >> -0y1000 ^ 0x1 & $buffer ^ -$thread & 0x4)  { test_statement(0x158F);  for (val = 10; @r8 ^ +@rbx ^ ($proc) | -@r8 | (0y101) | ((@r13))))@r8 ^ +@rbx ^ ($proc) | -@r8 | (0y101) | ((@r13));@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = +@rbp & @r9 ; } else { test_statement(0x1BD4); }
$error$
$end$
718
 if (@rax >> -@rdx ^ +@r8 << (@r12) >> $ip | 0n19 << $ip >> (@r13) >> @r11 ^ @r12 >> 20 | (@r12) ^ 0y10010 ^ 0n18 ^ @rbp | $proc ! $ip + @rbp & @rbx | 0y111 >> ~@r13 | 0n11 >> @r10 | @r13 ^ $ip | 0y10 ^ $teb)  { test_statement(0x5F2);  if ($teb & $proc ^ ~$thread ^ @r13 | @r12 ^ -@r9 != $teb & $proc ^ ~$thread ^ @r13 | @r12 ^ -@r9)  { test_statement(0x1AC7); } elsif (-~@r9 ^ +@rsp | @r10 >= -~@r9 ^ +@rsp | @r10) { test_statement(0x1F4A); } else { test_statement(0x915); } } elsif (@r8 << @r8 >> @rax >> @rbp | +0xF | ($proc) & -@r10 ~~$teb) { test_statement(0x1966);  // /* This is a comment   while  (@r8 <> @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  break; val = @r9 ; }
$error$
$end$
719
 if (@r13 + @r12 << $ip << 0n16 >> @rdi << @rsi | 15 << +-$buffer >> ~0x3 >> @rbx & $ip & 0n18 & @r13 | @r8 ^ @rax & 0x12 ^ -@rax | @rsp & @r9 ^ @rsi ^ 0y10010 | -@r12 ^ @r8 | @rax ! $buffer << 0n2 << @rdx & @r10 << @r12 >> @r8 >> @r13 & ~@r9 ^ 0n11 & @rbp >> +@rbx & 0x11 | @rsp ^ ~+$proc ^ @r10)  { test_statement(0x1B0E);  break;  if (0n13 < 0n13)  { test_statement(0x172D); } elsif ($proc((@r13 | $thread) { test_statement(0x1A35); } elsif (@r13))~@rsp) { test_statement(0x1A33); } }
$error$
$end$
720
 if (@r8 + @r11 << @rsp << @rax ^ @rax >> $teb & @rbx & $thread & +$buffer | @r8 << @rax >> @rax >> @r11 & 0x5 ^ 0y10001 | $buffer ; @r9 + @r12 | @rsp << (@rdi) >> $teb >> ~@rbx & @rbp | @rbp & @r13 ^ 5 & @r12)  { test_statement(0x1FDB); } elsif (0x0 << @r13 & 0xA >> ~0y1000 & $proc ^ 0x2 >> 0y10000 | @rbp))@rbx << @rbp & @rbx >> @r8 & $buffer & (@rsi) ^ $buffer >> @rsp & $buffer & @r8 ^ -@r11) { test_statement(0x10CF);  while  (@rdx >= @rdx ^ @r10 | @r11 | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
721
 if ($ip + $ip << @r12 < $ip + $ip << @r12)  { test_statement(0x2631); @rax = -@r13 ^ 0xF & @rdx ;  // /* This is a comment   if (+0y10 | 0y1011 ! @r11)  { test_statement(0x25D1); } } elsif (0y1 ^ @r8 & @r8 ^ @rbp & $ip ^ -@rsi < @rsp << @r10 >> @r11 >> 0n17 & @rax >> 0y1101 ^ $buffer >> 0x9) { test_statement(0x230C); ;  /* This is a not closed comment ; } elsif ($ip & @rbp ^ @r12 | @rdi & @rdx > 0x5 & (@rbx) ^ @rax & @r12 | @r12 ^ @rbx | -$teb) { test_statement(0x266D); } elsif (@rbx ^ (@rdi) <> $teb | -(@rbx)) { test_statement(0x236E);  /* This is a not closed comment } elsif (@rsp ^ @rbp ! @rsp ^ @rbp) { test_statement(0x9ED); } elsif (@rsi | @rsi((@rsi | @rsi) { test_statement(0x2077); @rax = +@rbx ; } elsif (~@r11 = $teb) { test_statement(0xFBB); ;  break; }
$error$
$end$
722
 if (17 + @r8 >> @rbp << ~$buffer >> $thread >> +@rbp < @rdx + @rdi >> +0x2 << +@r13 >> @rsi & @r12 >> ~0n10 >> @rbx & 3 >> @r11 | 0y0)  { test_statement(0xFEB);  while  (+22 & @r11 < @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x223D); }
$error$
$end$
723
 if ((~0y1010) + 0x2 << @rbp >> @r10 ^ @rsi << @rdi & @r11 > (~0y1010) + 0x2 << @rbp >> @r10 ^ @rsi << @rdi & @r11)  { test_statement(0xA88);  break; }
$error$
$end$
724
 if (@rax + @r9 << -@rbx << @rbp >> 3 ^ @r13 << +$teb >> @rsi >> $teb & @rdi >> 0x5 | +0x1 ! $thread + @rbx ^ $thread << @rsp >> @r12 >> (@rax))  { test_statement(0x1BDA);  This is a not opened comment */  while  (@rbx == @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  // /* This is a comment   for (val = 10; 0x0 >= @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = $ip ; ; } elsif ($buffer & 12 >> @rbx & (@rax) & $proc ^ @r11 >> @rdx & ~$teb ^ @rdx & @r11 <> $proc >> ~@rdi | ($thread) >> +0n15 & 0n14 ^ @rdx ^ $thread | ~(0n4) ^ $teb) { test_statement(0x2645); ;  while  (+0y1110 | $ip >< @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif (@rbx & $buffer ^ -@rdi & @r11 @rbx & $buffer ^ -@rdi & @r11) { test_statement(0x8B7); }
$error$
$end$
725
 if (@r9 + 0y10000 << @rsp >> @r13 << 0n6 <> $ip << @r9 << $proc >> $buffer << $teb >> @r11 | ~~$thread << $proc >> @rdx & @r12 >> $buffer ^ ~@r9)  { test_statement(0x26CD); } else { test_statement(0x145F);  This is a not opened comment */  // /* This is a comment  }
$error$
$end$
726
 if (@rdi + @rdi << @r13 & @rsi << 0n7 ^ @rdi << @r10 >> @r13 >> @r12 ^ $ip >> @r9 & ++@r11 | @rsi >> ~@rsp >> @rdi ^ @r11 & 0y1100 ^ ($teb) & $ip ; 0y1011 + ~@rsi >> @rax << 6 >> @rbx ^ ~10 >> @r10 >> ($thread))  { test_statement(0x20DF); }
$error$
$end$
727
 if ($ip + @r12 << $ip << @rdx >> @r10 >> @rdi ^ $proc >> @r11 >> ~0y100 & @rax >> $ip ^ $teb >> @r12 | ~@r12 >> 0x3 >> $buffer & @r13 >> @rsp | 0y1000 & @r10 & 0x2 ^ @rdx & @rbp | 0y10 ^ 0y101 ^ -@r11 >< @rbp + @rsp | @rbx << @rax & +$ip ^ 5 ^ @r8 ^ +(~0y10000) ^ 0y1100)  { test_statement(0x1611);  This is a not opened comment */ val = (@rax) & 16 | @rbp ;  while  (@rdi | @rdx @rdi | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; 0x4)-+3;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = $buffer ; } elsif (10 >> @rsp ^ @rsp <> 0xE >> $thread) { test_statement(0x2208);  This is a not opened comment */  // /* This is a comment   /* This is a not closed comment  break;  // /* This is a comment  } else { test_statement(0x1694);  break; }
$error$
$end$
728
 if (@r8 >> $thread << (@r8) >> @r13 ^ $buffer << 0x4 | -@rsp << $teb >> 0n18 >> $ip | @r11 >> @rdx ^ @r10 & 0y11 ^ $proc = @rbp ^ @rax << $ip >> @rdi & @r9 >> +@rbp & $ip | -0x1 ^ @r9 >> @r10 & @r8 & @rbx ^ 0xC | $buffer >> (@rbp) ^ @rsp)  { test_statement(0x160); }
$error$
$end$
729
 if (@rdx << @rdi >> 0n15 & 0n14 << @r11 >> ~$buffer >> @r10 | $buffer << @r10 >> @r11 >> @r10 ^ $ip <= @rax + @rax >> @rbp >> @r12 ^ @rsp << 21 & $ip | $thread << @rsi ^ $teb ^ @r12 & 6 ^ 15)  { test_statement(0xDBC); } elsif (0n18 >> @rax >> (-@rsi) <> @r11 << @r8 >> $buffer ^ @rax ^ 0y1 & $thread | -0y101 >> $proc) { test_statement(0x36B);  for (val = 10; @r8 ^ @rsp(@r11 ^ (@rdi);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; @rax = @r10 | @r8 ; } else { test_statement(0x244A);  This is a not opened comment */  /* This is a not closed comment  /* This is a comment */  This is a not opened comment */  /* This is a not closed comment }
$error$
$end$
730
 if (15 + @rax ^ $thread >> $ip >> 0x12 | @rsp << @rdx & ~@r8 <> 15 + @rax ^ $thread >> $ip >> 0x12 | @rsp << @rdx & ~@r8)  { test_statement(0x2293);  // /* This is a comment  }
$error$
$end$
731
 if (@rsi + @r8 << @rbx << @rdx & -@rbx >> 0x5 >> 0n11 | @r8 ^ @r13 & $thread | @rbx & 2 & @rbp ^ ($proc) ! 0x9 + 0x0 >> $thread ^ @rsi)  { test_statement(0xA);  break; } else { test_statement(0x1501);  break; }
$error$
$end$
732
 if (+@r13 + @rbp >> 0n6 >> $proc ^ @r12 | $thread << @r10 >> @rsp >> @rsp ^ (@rsp) & @r11 ^ 13 ! +0x8 + $thread >> @rdx << 11 & @rbx << @r11 >> @rdi >> @r12)  { test_statement(0x10AA);  /* This is a not closed comment  break; }
$error$
$end$
733
 if (@r9 + @rsp << $buffer >> -@r10 << @rdi | 0y10 <> @r9 + @rsp << $buffer >> -@r10 << @rdi | 0y10)  { test_statement(0x1A9E); } else { test_statement(0x93F);  while  (17 = +(@rdi) ^ $thread | $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
734
 if (@rdi & @rsp & $teb ^ @rdx >> 0 & $ip >> @rdx | @rdi & @rbx | @rdi ^ $teb | @r13 <> @rdi & @rsp & $teb ^ @rdx >> 0 & $ip >> @rdx | @rdi & @rbx | @rdi ^ $teb | @r13)  { test_statement(0x1C55); }
$error$
$end$
735
 if (@rdi ^ @r10(@rdi ^ @r10)  { test_statement(0xFAF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 | $thread == 0x12 ^ @rbp ^ +@rsi | 0y101) ; } else { test_statement(0x1C85); }
$error$
$end$
736
 if (@r13 + @r8 << @rdi >> @r11 << $proc >> @rdx >> 20 & @r13 << (@rbp) & $thread >> +(0y1011) ^ @rsp & 0y1010 >> $teb ^ $buffer & $proc))0n19 + $teb << 23 << 11 >> @rax << @rax >> @r10 >> (@rbp) & 0y1 >> @r13 & @r12 & @r9 ^ @r9 << 0y100 >> $ip)  { test_statement(0x17DC); @rax = @rax >> @rsp & $ip ^ @rsp ; ;  /* This is a not closed comment  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc(($proc) ;  This is a not opened comment */ } elsif (@r13 << @r13 >> @r10 >> @r10 & @rdi >> $ip ^ @r8 >> @r9 & +@rbp & $thread | @r9 >> @r10 ^ @rbx & 0x0 ^ @rbx ^ @rax | @r10 ^ (@rsp) | $proc))+$thread & 0n13 & $proc | ~@r8 >> @r13 & @rsi | $buffer) { test_statement(0x8AA); } elsif (@rbx >> $thread ^ @rax ^ $ip ^ @r10 <= @rbx >> $thread ^ @rax ^ $ip ^ @r10) { test_statement(0xF9B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y100 ! @rdx) ;  // /* This is a comment   for (@rax = @r8; $proc))@r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x11D3); }
$error$
$end$
737
 if (~@r11 << @rbx << @rsp & @rdi << @r9 >> 0xA >> ~@rdx ^ @rdx << +$proc ! ~@r11 << @rbx << @rsp & @rdi << @r9 >> 0xA >> ~@rdx ^ @rdx << +$proc)  { test_statement(0xEFD); } elsif ($buffer << @r8 >> @r12 | 0x3 >> (0n1) <= @r13 >> 0y1110 >> $ip | 0n11 >> @rdi ^ @rdx | $teb & @rdx) { test_statement(0x2E); } elsif ($teb >> @r8 & @rdi & @rbx ^ ~@r12 | @rbp))@rdi & @r9 & @r13) { test_statement(0x1A6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 | @rax ; @r11 | @rax) ; } elsif (@r8 & @r8 | $ip ^ @r13 <= @r12) { test_statement(0xB58);  break;  // /* This is a comment  ; } elsif ((@rbx) >< (@rbx)) { test_statement(0xFD4); }
$error$
$end$
738
 if (-@r9 + 0x8 << @rbx ^ @r13 << $thread | @rdx >> @r9 & -0x3 | @r10 >> @rdx | @rbx & ~-7 | $teb ^ @rdx | 0x7 | @rdi <= -@r9 + 0x8 << @rbx ^ @r13 << $thread | @rdx >> @r9 & -0x3 | @r10 >> @rdx | @rbx & ~-7 | $teb ^ @rdx | 0x7 | @rdi)  { test_statement(0x654);  /* This is a comment */ } elsif (@rsi << @rax & 0n6 >> @r8 ^ 0xD & @r9 & +@r12 | $buffer ^ $ip & @r9 ^ @r9 ^ @r10 = @r9 >> +@r12 >> 0xE ^ @r10 >> $buffer & $teb | @rbp >> -0n2 ^ $proc & @r10) { test_statement(0x1927); } elsif (0x3 >> $ip ! 0x3 >> $ip) { test_statement(0x1610);  // /* This is a comment  } elsif (@rdx & 0n6 | @rdx ^ @r10 <= -@rax ^ $proc ^ @r11) { test_statement(0x236F);  This is a not opened comment */ }
$error$
$end$
740
 if (@r11 | $ip << @rdi & 23 ^ ($ip) >> 0xF ! $teb + @r9 << ~$thread << @rdi | @rsi >> $thread >> -+@rsp & @rdx >> -$teb | @rdi >> $ip & @rbp & @rax ^ @rdx | -@rsp)  { test_statement(0x230A); } elsif (@rbx & @rax >> 0x10 & (-+$proc) & ~(@r8) == ($proc) << -@r13 >> @rbp >> @rdi & 0xF >> @r9 ^ @rbx & @r12 ^ (@r12) & @rdi ^ @rdx ^ $teb) { test_statement(0x15B9);  This is a not opened comment */  /* This is a comment */  break; }
$error$
$end$
741
 if (+@r8 | @rdi << 0n16 ^ @r12 & @r11 ; +@r8 | @rdi << 0n16 ^ @r12 & @r11)  { test_statement(0x1B6);  /* This is a not closed comment  /* This is a not closed comment } elsif (@rsp << 0n6 >> 0y1110 & $teb >> 0y1100 & @r8 | $teb & $teb & @r9 ^ 0x8 & 0y100 ^ $teb | $ip | +0x3 | ~10 == $ip >> @r12 | $proc >> @r11 & @r11 & +0x12 ^ $thread ^ @rsp ^ 10) { test_statement(0x1935);  break; }
$error$
$end$
742
 if (@r10 << $ip >> $proc ^ $ip & @rbp >> 13 & @r11 0xF >> @rbp >> 13 >> @r12 & @r11 << @r8 >> $ip >> 10 | $ip << ~~@rbp >> +~@rax >> @rbx | $teb & @r13 | @rbp & $thread ^ @r9 ^ @r13 | @rsp)  { test_statement(0x1EF7); } elsif ($proc & $buffer & @rdx ^ @rsi >> ~@r12 | @rsp & @rbx @r8 >> 0y1 | @rdx & $proc & -0x7) { test_statement(0xD26);  for (; $teb ; $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread >> $thread ; @rbp >> ~0xB | @r9 | @r11 | $proc | @rbx) { test_statement(0xD15);  for (val = 10; 10))10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  /* This is a not closed comment ; }
$error$
$end$
743
 if ($thread << $ip << ~(~0n14) & @r11 << @r13 | @rdx << $ip & 0x6 & 0y1000 & 14 ^ $buffer ^ $proc & @rdi ^ @rbp ^ $ip >< -@rax >> 11 << @r13 >> 0n8 & @rbx & 15 & @rax | @rdx | @r8 >> @r9 & @rbx ^ 1 & 0x13 ^ ~+@rsp ^ @rdi | $proc)  { test_statement(0x202A); } elsif (0n13 >> ~@r8 & $ip >> (@r8)))0n13 >> ~@r8 & $ip >> (@r8)) { test_statement(0x1470); } elsif (@r13 >> @rdx <= $buffer & 0xA) { test_statement(0x1189); ; } else { test_statement(0x729); }
$error$
$end$
744
 if (@r11 >> 0x7 >> @rsi >> @r12 ^ -@rax << 3 >> $teb & +@r8 >> @rbp & $proc | @rdx << $proc & @rsi & @rbx ^ +20 ^ 0y10010 ^ @r9 ^ @rsp ; @r10 | +~@rax << +@rsp & @rsp >> 0y10011 | @r12 & $teb)  { test_statement(0x2213);  This is a not opened comment */ } else { test_statement(0x22ED); }
$error$
$end$
745
 if (@r13 + 6 << (@r11) & @r10 << @rbx & $teb >> @rbx ^ @r12 & @rsi & @r8 & @r13 ^ @rsp ^ @r10 ^ $thread ^ @rbp | @rax << @r10 | @rsi >> (@r12) & @rsi & @rdx ^ $thread & @rbx ^ +@rax | @r10 ^ @rax | @rdx ^ @rax | 0n1 != $ip ^ 0xD << @rax >> (+($proc)))  { test_statement(0x11C0); } elsif (@r10 & 0y11 & $proc ^ @rsi ^ $proc & @rbx <> 0xD ^ @rdi >> @rsp & @r11 & @r11 ^ @rsi ^ @r11 ^ @r10) { test_statement(0x25B3);  while  ((@rax) ^ $ip((-~@rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r10 >> @rbx ^ @r12 & --@r12 = $teb ^ @r10 & @r12 ^ @r8 | @r12 & +0x4 | 0n16) { test_statement(0x1B16); } elsif (@r10 & 17 ^ $teb ^ @rbp > @r10 & 17 ^ $teb ^ @rbp) { test_statement(0x17AA);  while  (@rax >< 0y11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x3FC);  for (@rax = @rsi; @r12 | @r8 | @rbp ; @r9 ^ 23 | @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($buffer | @r8)$buffer | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
746
 if (-0x1 << @r11 << @rbx >> 0y111 << @r13 >> @rbp | @rsp << $buffer | ~0n18 ^ @rbx = @r8 + $thread >> $thread ^ @r11 >> 0xD >> @rsp)  { test_statement(0xCED); }
$error$
$end$
747
 if (@rbp << $thread << @r13 >> +@r8 >> 0n16 >> @rbp & @rbx << ~@r9 ^ @r11 << ~@r11 ^ (@r13) >> ~$teb & @r13 = @rbp << $thread << @r13 >> +@r8 >> 0n16 >> @rbp & @rbx << ~@r9 ^ @r11 << ~@r11 ^ (@r13) >> ~$teb & @r13)  { test_statement(0x16C9);  This is a not opened comment */  while  ($buffer ^ @rdi | @r10 | @rdx((@rsp | 0xB)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  while  ($proc < @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xBC7); }
$error$
$end$
748
 if (@r11 << $ip & @r13 << @r10 >> 0 | (+0x9) << @r12 | @rbx & ~@r10 & @r12 ^ @rsi ^ @rdi ^ @rdx | 0x3 ^ (0x13) ^ 0n13(@r11 << $ip & @r13 << @r10 >> 0 | (+0x9) << @r12 | @rbx & ~@r10 & @r12 ^ @rsi ^ @rdi ^ @rdx | 0x3 ^ (0x13) ^ 0n13)  { test_statement(0x1238); ;  /* This is a not closed comment } else { test_statement(0xF4F); }
$error$
$end$
749
 if (-@r13 + @r11 << @rsp ; @rbx + @rdx & 0y1111 << @r10 & @r10 >> 0n3 & @r13 ^ 6 << @rsi >> @rbx >> $buffer)  { test_statement(0x1C4E);  while  ($proc = $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc >> 0n19 >> 0n11 & -~0n9 | @r13 >> @rsi & @r10 ^ @rbp & 4 | $proc ^ ~@rax | @r13 ^ 11 <> 0y10011 ^ $buffer & $proc ^ $proc | 0n4 >> $thread | 11 ^ @r9 ^ $ip) { test_statement(0x24F7); } elsif (16 >> -@rsp & @rsp & @r11 <> 0xC | $ip | -$ip ^ @r12 | 0n6) { test_statement(0x608); @rax = 3 ; } elsif (@r11 & -0x1 ^ @rsp | @r11 < @rdx ^ @rsp) { test_statement(0xF47);  /* This is a not closed comment } elsif ($teb ^ $teb | @r12 | 0y0($teb ^ $teb | @r12 | 0y0) { test_statement(0x25A2); } elsif (@r13 | 0x5 <= @r13 | 0x5) { test_statement(0x146D); } elsif ($buffer)~@r9) { test_statement(0xCC6);  while  ($thread $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x24C6);  while  (@rdx ^ @rdx | @rbx == @rdx ^ @rdx | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
750
 if (0xC + @rdi & $proc >> @rbx <= 0n2 ^ @r13 << $buffer >> 0x1 & $ip ^ $proc ^ @rdi & 0y11 ^ @rbp | $buffer >> @r10 ^ 0n2 & @rax | (15) >> $thread & @rbp)  { test_statement(0xD90);  break;  break; } elsif ((@r13) & @rsi >> @r13 ^ $proc & @rdi ^ $teb & ~-@r9 | $thread >> @rdx & @rbx >< 0y11 << $thread >> (@r13) >> $proc & @rbx & @rax ^ @rdi >> @rdx ^ @rbp & @rsp | $ip >> @rsp ^ 0x3) { test_statement(0x1435); } else { test_statement(0x1FFE); }
$error$
$end$
751
 if (0n1 + @r13 >> @r8 << @rsp & 23 >> 0xA >> 0y110 & @rax <> 0n1 + @r13 >> @r8 << @rsp & 23 >> 0xA >> 0y110 & @rax)  { test_statement(0xFE7); }
$error$
$end$
752
 if (-3 >> @r12 << @rsi & @rax >> $teb >> @r12 & ~@rsp ^ $thread << (@rsi) & @r10 >> @r13 & $buffer & +@rbp ^ ~@r8 | ~(0x4) << @r13 >> @r12 >> @r13 | @rdi | $thread & @r10 ^ @r9 ^ (@rdi) | @rdi ^ @rbx | @r12 | @rdi((-@rdx + @rsi & $proc << @r9 >> $ip | $teb >> $buffer | $buffer & @rsi)  { test_statement(0x5D9); } elsif (~0y0 | 1 & $buffer & ~@r12 ^ $ip & @rdx ^ @rsp ^ @r11 | +@rdx ^ @rbx ^ $ip | @rbx >= +@r8 << @rbp ^ $teb & $ip & (@rdx)) { test_statement(0x21B0); } elsif (0y1001 | ++(@r8) | @rsi == 0y1001 | ++(@r8) | @rsi) { test_statement(0x83E); ; } elsif (+@r9 & (@rsi) ^ ~@r11((0n12 & $ip | @rdi | @r11 | @rbx) { test_statement(0x15F7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y110 != @rbp) ; } elsif (@r13 = 0x4 | +$proc) { test_statement(0xAD4);  // /* This is a comment   // /* This is a comment   while  (@r13 = @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @r13 ; } elsif (@r11 ! @r11) { test_statement(0x1B); } else { test_statement(0x1AE); }
$error$
$end$
753
 if (@rbp + $teb & @rsi << @rax >> @rbp >> @rdx & @r12 | @r8 << @r9(@rbp + $teb & @rsi << @rax >> @rbp >> @rdx & @r12 | @r8 << @r9)  { test_statement(0x190E);  This is a not opened comment */ } else { test_statement(0x20C1); ; }
$error$
$end$
754
 if (@r11 + -@rax << $buffer >> +$buffer >> 0xD @r11 + -@rax << $buffer >> +$buffer >> 0xD)  { test_statement(0x1EE3); }
$error$
$end$
755
 if (0x4 >> @rbx << @rdx & $buffer << @r13 >> @r8 | @rax << ~$buffer >> $thread ^ @rdi & @r12 ^ $thread ^ @r13 = 0x4 >> @rbx << @rdx & $buffer << @r13 >> @r8 | @rax << ~$buffer >> $thread ^ @rdi & @r12 ^ $thread ^ @r13)  { test_statement(0x213E);  while  (@r8 ^ $proc ^ @rsp | (@r13)))@r12 & ~@r12 ^ $buffer ^ $buffer | @rsp ^ -@rdi | @rsp | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (($buffer) < @r11)  { test_statement(0x6); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi)0y1000 | @r9) ;  for (val = 10; $teb > $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0x1 < @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
756
 if (@rdx << @rdx & @rdx >> 0n11 ^ 0n4 << @r13 >> $proc ^ @r8 & -+~$thread ^ @r11 & @r9 > $buffer << @rsp & $proc & $buffer)  { test_statement(0xC56); } else { test_statement(0x209C); }
$error$
$end$
757
 if (0xB + ~@r10 >> 0n16 << @r8 & $teb << @rdx & @r8 >> @r10 & @r8 ^ $ip << @r10 >> @rbp >> $proc | @r8 >> +$proc & 10 >> @rdi & @rsi ^ -0y10001 >> $proc & @rsp & @r13 ^ @rdi & @rdx | @rsp | 20 & 13 ^ +@rdx ^ @r8 | @r9 | 0x13 > 0xB + ~@r10 >> 0n16 << @r8 & $teb << @rdx & @r8 >> @r10 & @r8 ^ $ip << @r10 >> @rbp >> $proc | @r8 >> +$proc & 10 >> @rdi & @rsi ^ -0y10001 >> $proc & @rsp & @r13 ^ @rdi & @rdx | @rsp | 20 & 13 ^ +@rdx ^ @r8 | @r9 | 0x13)  { test_statement(0x694); } elsif (@r11 >> @r9 & @rsp >> ~@r10 & 0y1111 & @rbx ^ ~~@rsp >> @r11 >= @r11 >> @r9 & @rsp >> ~@r10 & 0y1111 & @rbx ^ ~~@rsp >> @r11) { test_statement(0x254D); } elsif (@r9 -@r13 >> $thread | @r11 ^ 0y1100 ^ @r13) { test_statement(0x2046);  if (@r9 ; $ip | @r13)  { test_statement(0xE11); } else { test_statement(0xA65); }  if (@r10 >< @rax)  { test_statement(0x256B); } } else { test_statement(0x185F);  while  (@rsp ^ +@r12 | @rdx | $thread @rsp ^ +@r12 | @rdx | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
758
 if (@rax + @rdx << @r8 << @r12 & @r11 >> @rbp ^ @rdi << @rdi ^ 13 >> @rdi >< @rax + @rdx << @r8 << @r12 & @r11 >> @rbp ^ @rdi << @rdi ^ 13 >> @rdi)  { test_statement(0x2245); } elsif ($thread ^ $buffer & @r10 | -$thread >> (@r12) & @r11 & (-@r9) ^ @rdx | @r10 & $buffer))@r8 << $thread ^ $proc & $buffer ^ @rdx & 0n12 ^ $ip ^ $teb | @rdi >> @rsp & 10 ^ (@rsi) ^ @rdi | @r10 ^ ~$ip ^ @rdx | 4 ^ @rbx | ~$teb) { test_statement(0x2598); } else { test_statement(0x106C);  break;  /* This is a comment */ }
$error$
$end$
759
 if (0y1100 + $proc ^ @r12 >> 16 >> @r13 & @r11 >> $thread & 0n1 & @r9 ^ $thread & $proc | @r11 >> @rdx >> @r13 & 0x1 >> 0n12 & @rdx ^ +10 ^ +@r11 | @rax ^ @r8 ^ @r8 | @rbx ^ @rbp | 0n17 ^ $thread >< 0y1100 + $proc ^ @r12 >> 16 >> @r13 & @r11 >> $thread & 0n1 & @r9 ^ $thread & $proc | @r11 >> @rdx >> @r13 & 0x1 >> 0n12 & @rdx ^ +10 ^ +@r11 | @rax ^ @r8 ^ @r8 | @rbx ^ @rbp | 0n17 ^ $thread)  { test_statement(0x3DC); }
$error$
$end$
760
 if (@r11 + 5 >> @rax >> $proc & $buffer >> @r11 & @rbx ^ $thread >> 20 >> $proc & @r10 >> $thread & @rsi ^ $teb ^ $thread | 0n13 << @rax >> @rbp >> $ip & $ip >> @r11 | $proc ^ @rbp ^ @r11 | @rbx & @rdx ^ $ip ^ @rax | 0y110 | -@rdx | @r9 >= ~@rbx + $teb ^ @r9 << $thread >> @r9 & @r10 >> 0xC & 0y11)  { test_statement(0x22AE); } elsif ((@r10) & $thread & @rbx >= $teb << @r10 >> @r11 | @r10 >> @r12 | $ip & @r8) { test_statement(0x208E); } else { test_statement(0x1A49);  /* This is a not closed comment }
$error$
$end$
761
 if ($buffer << $thread << $ip >> 0x5 << @r10 >> $thread ^ $thread << $proc & @rsp & @r12))@r12 & ~@rsp << @r12 >> $buffer ^ 0y0 << $teb | 0y101 << @rdx >> @r12 >> 0xB | ~0x11 >> 0n19 ^ $teb ^ $ip)  { test_statement(0x1390); } elsif ($teb << 0x5 & $ip >> @rbp & +$teb & $teb)$ip >> @rdi >> @r11 & @rdi >> @rbp & @r12 & @rdx ^ @r12 >> $teb & @r12) { test_statement(0x21D0);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi ^ @rbx | +@rdi(@rdi ^ @rbx | +@rdi) ;  /* This is a comment */ } elsif (@rbx > @r13 >> @r11 | @r11 & @rsi ^ $proc | @r12 ^ $teb | @r9) { test_statement(0x1ECC); } elsif (@rsp & @r11 | +@rdx ^ $proc >< ~$buffer ^ $ip | @rdi ^ $proc) { test_statement(0xBFC);  // /* This is a comment   while  (@rdx)@r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
762
 if (@rbp + ~0y0 >> 1 << +$teb & @rdi ^ $proc ^ $ip >> @rdx | $buffer << @r10 | @r10 & @rdi & @rdi < $buffer << @rax >> @r8 << @rax & $ip | 0xC >> @r13 >> @r12)  { test_statement(0x1841); } elsif ($proc << @rbp >> 0n5 >> @rdx ^ -(0n1) >> @r11 = @rbx << (@r8) >> @r9 ^ ~@r9 >> @rbx) { test_statement(0x1939); }
$error$
$end$
763
 if (@rbx << @rbp << @rsi >> @rbp << 0n5 >> $ip & ~-@rbx >> 0n7 | @r13 << @r11 ^ @r10 >> @r11 | $thread ^ @r9 & 14((0xE + @rsp | @r9 >> @r11 ^ @r12 ^ $buffer & @rsp)  { test_statement(0xA6A); } elsif (0n10 ^ 0x8 & $buffer & @r13((0n10 ^ 0x8 & $buffer & @r13) { test_statement(0x83); } elsif ($thread ^ 0n14 ^ @r10 | @rax ! @rdx ^ $buffer ^ $ip | @r10) { test_statement(0x633);  break; }
$error$
$end$
764
 if (+@rdi + $ip >> 0x13 << +@r8 & 0y1000 >> --$proc ^ $proc | $ip << $ip & (+$teb) & @rsi & -$proc | 13 & $proc & @rdi ^ -$teb ^ @rdx ^ $proc | (~@rsi) & $proc == $teb + $proc << @rax & @r12 & $proc ^ @rbp ^ @rax & @r10 & @rbp ^ @r8 & $thread)  { test_statement(0x17B8);  if (@r8 & $buffer +@r12 | 0n13 ^ @r13)  { test_statement(0x17E2); } else { test_statement(0x176B); } } elsif (@rdi & 0n16 >> +@r13 ^ $thread >> @r11 & 0y1010 & @rdi = @rdi & 0n16 >> +@r13 ^ $thread >> @r11 & 0y1010 & @rdi) { test_statement(0x2681); } elsif (@rsi & $thread | ~@rsp & -@r13 | @r12 ^ +@rax >= @rsi & $thread | ~@rsp & -@r13 | @r12 ^ +@rax) { test_statement(0x6F3); } else { test_statement(0x7B9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi ^ @rbp | $ip(@rbp) ; }
$error$
$end$
765
 if ($thread ^ @rdi << -14 >> $thread ^ @r10 >> ~@rbx & @r11((@r10)  { test_statement(0x1543);  while  (@rdi ^ @rdx ^ @r9 | $thread ^ @r13 >= -@r9 | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread << +0n14 >> -+$thread | (@rax) | @r9 ^ (@r9) ^ @rbx | $thread | $ip | $buffer >= @rdx << 0 >> @r10 >> $thread & +@rsi & $thread | +$teb >> @rsi & ~@r8 ^ @r10 & @rbp ^ @rbx | $buffer ^ @rsp) { test_statement(0x1054);  /* This is a comment */ } elsif (0y1110 >> $teb & @rax & @rbp | 0xC & @rsi | @r8 ^ $buffer <> 0y1110 >> $teb & @rax & @rbp | 0xC & @rsi | @r8 ^ $buffer) { test_statement(0x52F); ; } else { test_statement(0x21EC);  for (; @r11 ^ 11 | 0y111 = @r11 ^ 11 | 0y111;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
766
 if (@rax + @r8 << @rbp << 5 & @rbp >> @rbx >> @r11 = @rax + @r8 << @rbp << 5 & @rbp >> @rbx >> @r11)  { test_statement(0xBBC); } else { test_statement(0x110A); @rax = @rax ^ (0x10) | $teb ; }
$error$
$end$
767
 if (+0x12 + @rax << @rbp << @rsp & ~~~$proc >> @rbp & @r13 >> @rax | @r9 << 0x1 & 0n9 >> $thread & @r10 & +@r13 ^ +@rsp & ~@r11 ^ 0y10 & 0y101 ^ 0n8 ^ $thread | -~@r8 & @r9 & @rax | $proc ^ @r8 ^ @r11 | $thread | (~@rax) ; $teb << @r8 & @r13 << @rsi & @rdi ^ @r9 << $proc >> @r9 >> -$buffer ^ 7 >> ~@r11 | $teb ^ $thread >> (@rdx))  { test_statement(0x22DF);  This is a not opened comment */ }
$error$
$end$
768
 if ((0y1000) + $buffer << 0y0 << $teb ^ @rsp << 14 >> $thread >> @r8 == @r12 + @rdi & 0n16 << @rdi >> +20 >> $thread ^ @rbx << 0xA ^ 0y101 & $ip & @rax)  { test_statement(0x1FB);  /* This is a comment */ } else { test_statement(0x406);  /* This is a not closed comment  This is a not opened comment */  while  (@rsi = @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
769
 if (@rdx << 0x13 << @rsp & @r9 << ~@r10 ^ 0y0 & $ip >> $teb & @r12 & $teb ^ $ip & $buffer > $proc + @rsp)  { test_statement(0x17AA);  break; } else { test_statement(0x98D); }
$error$
$end$
770
 if ($buffer << @rsi & @r12 >> 0x10 >> @r10 & -@rbp = $buffer << @rsi & @r12 >> 0x10 >> @r10 & -@rbp)  { test_statement(0x686); } else { test_statement(0x1C5); }
$error$
$end$
771
 if (@r8 + @r12 << @r12 >> 23 & +~0x9 >> ~@r13 >> +$buffer > -0y1110 << $thread << @r13)  { test_statement(0x213F);  /* This is a comment */ } else { test_statement(0x865);  /* This is a comment */ }
$error$
$end$
772
 if (@rbx + @r13 << @r12 << @rbx >> @rbx << @rbp >> $proc >> (@rbp) >= $thread + @rdx << @r10 & $teb << $teb >> @rbp >> @rdi | +@r11 << $ip & +@r12 | $buffer >> 0y0 & @r10 & -@rbp ^ @rsp & (@rdi) | -@r10 | ($ip) ^ -$teb)  { test_statement(0x3A5); }
$error$
$end$
773
 if (+0n19 << ~$proc << 0x6 & 0n14 << +-$thread & @r11 >> +@r8 ^ @rbp ^ +@r8 >> $buffer > (@rsi) + -$thread & @rbp << $buffer & @r11 >> @rax & @r13)  { test_statement(0x2587);  while  ($proc & @rsp | $buffer | -@rbp | 0y1000 = $proc & @rsp | $buffer | -@rbp | 0y1000)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n12 ^ 0n16 | 0x5 < @rbx ^ @r10 | 0n7 | @r13) ; } else { test_statement(0x3BF); }
$error$
$end$
774
 if (-0x0 << +@r11 & @r12 << $proc >> @rbx >> $proc | @r11 << @rbp >> @rbx ^ 0n8 ^ @rdi & @r9 ^ @r11 < @rdi + @rsp & @rbx | 0y1111 >> $teb >> $ip & 0xF ^ @r9 ^ @r12 & @r11 ^ @rdx ^ $buffer | 0n17 >> 0 & ~@r8 & @rdx)  { test_statement(0x2676); }
$error$
$end$
775
 if (@rdi + @rdx >> $buffer == @rdi + @rdx >> $buffer)  { test_statement(0x1004);  This is a not opened comment */ @rax = 0y1001 & @r10 ; } elsif (@r10 >> 0y1 >> (16) & (@r8) & $ip ^ 0x0 >> @rdi & +~@rbp & @rbp ^ @rsi ^ ~7 ^ $teb | @r12 >> $ip | @r9 | 20 @r8 << @rdx & 4 | 0xE ^ $thread) { test_statement(0x1827); }
$error$
$end$
776
 if (@r13 + $thread << 0n16 ^ $thread >> @r9 & @r9 >> @r13 & @rdi = 22 + $ip | @r8 ^ 0xC >> @rbp)  { test_statement(0x18EB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx & -$buffer | $thread >= @r12 ^ $teb | @r9 ^ ~$thread | @rbx) ; } elsif (@r12 << @rdx >> @rax & @rsp >> @rsi ^ $buffer & @rsi >< 0n15 >> @r13 ^ @rbx & 0y100 | 13 >> 0xB & $ip) { test_statement(0x5FC); }
$error$
$end$
777
 if (@r11 + @r13 << @rdx >> @r11 ^ 0x3 ^ $thread >> @r12 <> @r11 + @rsi >> 0n16 << $proc ^ +0n15 << @r10 | $thread ^ @r8 >> ~$proc ^ @rbp & $thread)  { test_statement(0x2111);  if (@rbp ! @rbp)  { test_statement(0x7B9); } else { test_statement(0x1645); } } elsif ($ip >> @rsp >> @r9 & @rsp & @r11 | 0y1100 >> @r10 & $thread ^ @r12 & +15 ^ @rsp))$teb << $teb & @rdi >> @r12 | 17 | 0y0) { test_statement(0x24BC); } else { test_statement(0x238D); }
$error$
$end$
778
 if (0y0 + @r8 | ~~0y1011 << @rsp((1 & @r11 >> $buffer | @r9 << 0x11 >> @r12 >> @r8 & 0x13 ^ @rdx >> @r11 & ~@r12 & @rsp)  { test_statement(0x14BF); ; } elsif ((@rsp) >> @r13 >> @r10 ^ @r13 ^ @rdi & @r11 ^ @r10 | $teb >> $teb ^ @r13 & $teb ^ @rsp | -21 & @rax = $buffer << @rax ^ @rbx & @rdi & @rbp) { test_statement(0x9C6); } elsif (@r10 < @r10) { test_statement(0x179B);  if (@rdi >= 0n10)  { test_statement(0x634); } elsif (@r9 > @r9) { test_statement(0x1C54); } } elsif ($proc ^ @r13 ^ $teb != @r8 | $proc ^ @rsi) { test_statement(0x1BB5); } elsif (7 ^ @rbp | 0n4 | @r13 >= 7 ^ @rbp | 0n4 | @r13) { test_statement(0x113);  break;  // /* This is a comment  }
$error$
$end$
779
 if ($thread & $thread & @rsp >> @r11 & @r9 & @r9 ^ @rsi >> @rbx >> $buffer & 0n5 >> @r9 & +~~$buffer ^ 0y1000 >> 7 & @r9 & (@rbp) ^ @rax & $buffer ^ @rbp ^ @r11 | @rsi & @r8 >> @r8 & @r10 & 0y1000 ^ +@r9 | $ip >> $ip & $ip ^ @rsp & @rdx ^ $teb(@rsi + @rbx & 0n12 & 20 ^ @r11 << @rdx ^ @rax >> +$buffer & 4 ^ $teb)  { test_statement(0x603); } elsif (@rsi << @r10 & 20 >> @r11 & @rdi & @r8 ^ @rbx & @rdi & $thread ^ @r12 & ($ip) ^ ~0x2((0y1 & @r12 >> $proc ^ $proc & (@r8) ^ $thread & @rsi ^ @rdx ^ -@r10 | 7 ^ @r10 ^ $thread ^ @rbp | @r10 ^ $teb ^ @rdx) { test_statement(0xCFC);  This is a not opened comment */  /* This is a comment */ } elsif (@rsp >> $ip & @r8 == @rsp >> $ip & @r8) { test_statement(0x3EE); val = $buffer ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb)+$thread) ;  // /* This is a comment  } else { test_statement(0x11C5);  /* This is a not closed comment }
$error$
$end$
780
 if (0xE >> $teb << $ip ^ (@rdi) << 15 != 0xE >> $teb << $ip ^ (@rdi) << 15)  { test_statement(0x422);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -$thread & 17 ^ @r13 < $buffer & @r9 ^ 0y1 ^ @rbp | @r8 ^ $ip | $proc | @rbp) ;  This is a not opened comment */ } elsif (@rdi >> @rax & 0y1 & @r11 & $teb ^ -@rax >> $thread | @rbp >> @r11 ^ 0y10000 | $proc & 0y110)@rdi >> @rax & 0y1 & @r11 & $teb ^ -@rax >> $thread | @rbp >> @r11 ^ 0y10000 | $proc & 0y110) { test_statement(0xA7D); } else { test_statement(0x1F2A);  This is a not opened comment */ val = @rbp ; }
$error$
$end$
781
 if (@rbp + @rdx & 0xE >> 4 >> $thread ^ $teb << @rsp & @r11 ^ -@rdi ^ @r13 | 0x3 >> @r12 >> 0y1100 ^ ~@rdi ^ ((@rdx)) ^ @rax | @rdx ^ -$teb & @rax | @rsi | $ip ^ ~@r12 | 0y10000))@r8 << 16 << @r12 & +@rbx >> 0x11 >> @r8 & @rdi >> $proc & @r10 & @rdx ^ $ip)  { test_statement(0x1CF0); ; } else { test_statement(0x25BA); }
$error$
$end$
782
 if ((($buffer)) + $teb >> $teb ^ $ip << $ip >> @r8 >> @r10 | $thread << @rax ^ @r10 ^ 0x8 & $proc = $ip << 0y10000)  { test_statement(0x93); }
$error$
$end$
783
 if (0n7 << @r8 << 12 >> @r13 ^ @r8 >> @r13 >< +@r10 + @rax >> @r10 >> 13 ^ (@r11) << +@rbp)  { test_statement(0xC3); @rax = $thread | @rbp & 0xD | 0x8 ^ @rsp ; } elsif (0n12 << $proc ^ $teb >> @r13 & @rax & 0x6 $teb >> @rbp & @r12 ^ @rbp & @r9 & $ip | (@r10) & 0xC) { test_statement(0x10AA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 ^ @rdx | $buffer | 0y10011 = @r9 ^ @rdx | $buffer | 0y10011) ; }
$error$
$end$
784
 if (@r10 + $thread << (@r9) << $teb >> 0y1001 << @rbx >> -0y0 >> +@rdi ^ -(@rbp) << ~@r8 & +@rbx >> @r9 > ~@r13 + @r10 >> $teb << 0n7 ^ +@rdx << 0xA >> @rbp & @rbp >> @r13 & @r8 & @r9)  { test_statement(0xF1A); @rax = $buffer >> @r10 & 0 ^ (@rdi) ^ @rsi ^ @r13 ;  for (val = 10; @r9 != 0xB ^ 0xD | $buffer | $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
785
 if (5 + @r12 << @r12 >> @r9 >> $teb ^ $teb >> $ip >> @r13 | @r9 << $ip >> @rbx ^ (@rbp) & @r12 & $proc ^ @rbp & 0x5 ^ @r13 ^ $teb | @r9 >> @rbp & 0n12 ^ (~0y110) 5 + @r12 << @r12 >> @r9 >> $teb ^ $teb >> $ip >> @r13 | @r9 << $ip >> @rbx ^ (@rbp) & @r12 & $proc ^ @rbp & 0x5 ^ @r13 ^ $teb | @r9 >> @rbp & 0n12 ^ (~0y110))  { test_statement(0x1BC8); } else { test_statement(0x2032);  while  (0y110 | 0x12 0y110 | 0x12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
786
 if (0x3 + @rax << @r13 & @rdx >> $proc >> @r13 | @r10 >> $thread & $buffer >> ++0n15 & @rsp ^ @r12 & @r12 & 13 | @rdx & @rax & @r9 ^ 0n12 ^ $teb = @r13 + 0xB << @r11 << @rax ^ +@r10 << $teb & ~@r12 >> $teb | @rbp >> @rbp & 0n15 ^ -$thread >> @r11 & @rsp ^ @rbx ^ 0x5 ^ 0n1 | @r9 >> @r9 & $thread & -@r9 ^ $teb ^ @rdi ^ (23) | $thread ^ @rbp)  { test_statement(0x2473);  /* This is a not closed comment  break; @rax = 0x9 | @rsp | $buffer ; } elsif (@r10 & 0y1101 & ~$thread | @r12 >> 0n19 & @r8 | @rsi | $thread ^ @rbx | @rdx | $ip > @rsi & @r10 | @r11 ^ 0y1110 & @r8) { test_statement(0x950); } elsif ($thread & @rsp & @rsi ^ @r11 ^ @rbp ^ 14 = $thread & @rsp & @rsi ^ @r11 ^ @rbp ^ 14) { test_statement(0xEA7); } elsif (@rsp & $buffer | $proc ^ @rsi ! @r12 & (@r11) ^ $thread | ~0n15 | 0n11 | @r13) { test_statement(0x1F41); }
$error$
$end$
787
 if (~@r8 >> (@r9) << @r9 >> @rbx & @rax << @rdx & 0y1001 & 0n1 ^ @r13 << @rax >> +@rdi & @rbp >> $ip & $thread ^ $ip >> @rsp & @r13 ! $buffer << $teb >> -$buffer & @rsi << 0n15 & @rdi >> @rax)  { test_statement(0x5DC);  /* This is a comment */ } else { test_statement(0x2103); }
$error$
$end$
788
 if (@rdx + @rsi << $ip << @r8 >> @rdx << @r8 | @rsi << -+0y1 & @rbx >> @r12((@rdx + @rsi << $ip << @r8 >> @rdx << @r8 | @rsi << -+0y1 & @rbx >> @r12)  { test_statement(0x1E80); } elsif (@rdx << @rbp >> @r11 >> @rax | @r13 >> @rbp | @rax & @r8 >= 17 << @r12 >> @rbx | 0y100 ^ @r11 & @r8 | 16 & @rdx) { test_statement(0x177E); } elsif (@r10 >> @r13 & $thread & 14 | $buffer & @rax ^ -@rbp ^ 3 > @r10 >> @r13 & $thread & 14 | $buffer & @rax ^ -@rbp ^ 3) { test_statement(0x12F0);  /* This is a comment */ } elsif (4 & $proc ^ @r13 | -22 | 0x6 ! +0n11 & $teb | (0n19)) { test_statement(0x1254);  if (@r8 > @rbp)  { test_statement(0x1EAA); } elsif (@r9))@r9) { test_statement(0x71B); } else { test_statement(0x18D7); }  /* This is a comment */ } elsif (@r8 | $buffer | @r11 >= @r8 | $buffer | @r11) { test_statement(0x1B58);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi)@r8) ; } else { test_statement(0x668);  // /* This is a comment  }
$error$
$end$
789
 if (@rsp << +@rdx | $thread << 3 >> @rsi & 12 >> @rax & @rbx & @r11 ^ @rsi ^ +@rax & @r8))@rdx >> @rax >> @rsi >> @rsi & @r13 & @r11 ^ $thread << 0y1011 & 0n14 & $teb & $proc ^ (($proc)) & @r10 | @rbp >> @rax)  { test_statement(0x177F); }
$error$
$end$
790
 if (~$proc + 23 << 11 >> 2 & @r8 << @rax >> 15 >> @r8 ^ @r13 << 0y1110 >> 0x0 & @r12 >> $thread != ~$proc + 23 << 11 >> 2 & @r8 << @rax >> 15 >> @r8 ^ @r13 << 0y1110 >> 0x0 & @r12 >> $thread)  { test_statement(0x177D);  /* This is a comment */ @rax = @r11 & @r11 | 13 ;  /* This is a not closed comment } elsif (0x0 << @r12 >> 0y111 >> @rdx ^ 0xE >> ($buffer)))+@r8 << @r10 >> 0n5 >> $proc ^ ~@r8 & +$buffer ^ $teb | 21 >> @r10 & @rdi) { test_statement(0x1980); } else { test_statement(0x1FB5);  This is a not opened comment */ }
$error$
$end$
791
 if (@r12 + @rsi << @r12 ^ @rdi << @rbp >> $thread)~@rdi + @r11 << $teb << @rax ^ $teb ^ @rbp >> @rbp & @r9 ^ (@r10) & $teb | @rsi >> @r8 >> $teb & @r11)  { test_statement(0x1E22);  if (@r13 & @r13 ^ @rsi > +@r12 & @rdx ^ @r8)  { test_statement(0x1D09); } elsif (@rdi ^ @rsp(@rdi ^ @rsp) { test_statement(0xF28); } elsif (@r13 | @r11 @r12 | +$teb) { test_statement(0x106B); } }
$error$
$end$
792
 if (~(@rax) + 20 << @rsp & $teb << 0xD & $ip >> 0xD & $ip | 20 << ~@r10 > ~(@rax) + 20 << @rsp & $teb << 0xD & $ip >> 0xD & $ip | 20 << ~@r10)  { test_statement(0x795);  break;  /* This is a not closed comment  if (@r12)@r12)  { test_statement(0x295); } else { test_statement(0x4FC); }  This is a not opened comment */  /* This is a not closed comment } elsif (~@r12 << (21) & @r8 ^ 0y101 & @rax & @rdi | @rdx & -@rbp & 0y10010 ^ @rbx & @rsp | @rsi | @rdx ^ @r13 | +$ip(~@r12 << (21) & @r8 ^ 0y101 & @rax & @rdi | @rdx & -@rbp & 0y10010 ^ @rbx & @rsp | @rsi | @rdx ^ @r13 | +$ip) { test_statement(0x1109);  This is a not opened comment */ }
$error$
$end$
793
 if ((@r8) << @rdi << @rdx & 0y10010 << -($proc) >> $thread >> $buffer & @rdi >> 0y101 | @r10 << @rbx >> +4 & @r10 & 0n8 & @r12 ^ ~@rbx & @rax ^ @r9 | @rdx ^ 21 & $teb ^ $proc ; (@r8) << @rdi << @rdx & 0y10010 << -($proc) >> $thread >> $buffer & @rdi >> 0y101 | @r10 << @rbx >> +4 & @r10 & 0n8 & @r12 ^ ~@rbx & @rax ^ @r9 | @rdx ^ 21 & $teb ^ $proc)  { test_statement(0x81C); }
$error$
$end$
794
 if (@r11 + @r9 << @r8 << (@r10) >> @rbx << $buffer ^ @r12 << @r8 <> ~0n6 + $buffer)  { test_statement(0x19B3);  /* This is a comment */  if (~0n13 < @r13 | +$teb)  { test_statement(0x1249); } elsif (@r9 | 10))@r9 | 10) { test_statement(0x20D2); } elsif (@rbx > @rbx) { test_statement(0x23D9); } elsif (0n13 ! @r9) { test_statement(0x1112); } elsif (-@rsp >< @rax) { test_statement(0x158E); } } else { test_statement(0xC51);  while  (@r8 ^ @rbx | @r9 > @r8 ^ @rbx | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
795
 if (0y110 + @r13 | @r8 << @rdi >> @rsp & 4 ^ @r11 | @rbx >> 13 & @rsi ^ 0x9 ^ @rax | ~0y1100 ^ 21 ^ (0n12) >< @r12 + @r9 >> $teb << @r8 >> $buffer & 0y1001 >> @r8)  { test_statement(0x10EE);  /* This is a not closed comment }
$error$
$end$
796
 if (~$ip + 0y111 << 0n2 >> $proc >> 0n16 >> +@rax))@rbp)  { test_statement(0xC81); } else { test_statement(0xDFC);  while  (+@rax | @rbp))+@rax | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
797
 if (@rsi + @r10 << @rsi << @r10 >> 12 << -$ip & @r10 @rsi + @r10 << @rsi << @r10 >> 12 << -$ip & @r10)  { test_statement(0x23E7); } else { test_statement(0x11FF); @rax = @r8 ^ 0y1 ; }
$error$
$end$
798
 if ((@r10) + @r9 ^ @r8 | @r13 & $ip & @rsi = (@r10) + @r9 ^ @r8 | @r13 & $ip & @rsi)  { test_statement(0x1B24);  while  (~@rdx ^ @rbp ^ @rsp | 0xD ^ $proc((~@rdx ^ @rbp ^ @rsp | 0xD ^ $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment @rax = @r10 ^ ~@r13 | $ip ;  break;  // /* This is a comment   while  (@rax > @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x136A); }
$error$
$end$
799
 if (@rbp + @r9 << @r8 << 0y10010 | $thread ^ 11 ^ @r12 ^ +$buffer | 0x5 ^ @r12 ^ 5 >< @rbp + @r9 << @r8 << 0y10010 | $thread ^ 11 ^ @r12 ^ +$buffer | 0x5 ^ @r12 ^ 5)  { test_statement(0x1A98); } else { test_statement(0xCBF); ;  /* This is a comment */ }
$error$
$end$
800
 if ($teb + @r11 << (+~$teb) << @rbp | @r8 << 0x4 >> @rsi >> @rsi | @r8 ^ +@rdx ^ @r10 ^ (@r11) | 0y11 ^ (@r8)($teb + @r11 << (+~$teb) << @rbp | @r8 << 0x4 >> @rsi >> @rsi | @r8 ^ +@rdx ^ @r10 ^ (@r11) | 0y11 ^ (@r8))  { test_statement(0x1057);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 >< @r11) ; } elsif (+@rbp << ~@rbx >> @rdi ^ @r10 & @r10 ^ (@rsp) & @rdi | 0xF >> @rbx ^ @rdx | @r8 & 0n1 ^ @rsp | @rbx | -(@rsi)(+@rbp << ~@rbx >> @rdi ^ @r10 & @r10 ^ (@rsp) & @rdi | 0xF >> @rbx ^ @rdx | @r8 & 0n1 ^ @rsp | @rbx | -(@rsi)) { test_statement(0x2BC); val = $ip & @rdi ^ @rbp ;  // /* This is a comment  } else { test_statement(0x164D); }
$error$
$end$
801
 if ($teb + $teb >> @rbp << @r13 | $ip >> @rbx(@r12 + @rdx >> +@rbp >> @r11 & @rax << @r10 >> $proc >> 11 & $teb & @r8 | 7 | @r10 & 16)  { test_statement(0x1BB7); }
$error$
$end$
802
 if (@r13 + @rax << (+0xF) << 0xD & -@r8 >> $ip & 0y11 >> (@rdi) <> @rdi + $proc)  { test_statement(0x1A30); val = @rsp >> 22 ;  for (val = 10; @r11 < @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (~@rbp(0x10 | @r12)  { test_statement(0x6B); } elsif (@r12 ; @r12) { test_statement(0x2356); } else { test_statement(0xAD2); } } elsif (@r12 < 0xF & 1 >> @r11 ^ $buffer ^ 21) { test_statement(0x222E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread ^ @rsp ! @r8 | 0x5) ; val = $proc | @r8 ;  if ($buffer)-$buffer)  { test_statement(0xBFA); } else { test_statement(0x1E91); } } elsif (@rbx & @rbp == @rbx & @rbp) { test_statement(0x8A8);  /* This is a not closed comment } elsif (@rdi | $ip ^ @rdi >= @rdi | $ip ^ @rdi) { test_statement(0x18FE); } elsif (@r11 ^ @r12 | @rsi | 0n15 ! @r11 ^ @r12 | @rsi | 0n15) { test_statement(0xC82);  for (val = 10; @r10 ; @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; +@r10(+@r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } else { test_statement(0x25D1); }
$error$
$end$
803
 if (0y1100 >> @rsp << $teb >> $proc >> @rsp ^ (@rsp) << $proc >> $buffer ^ @rdx & 0y10011 & @rax ! $buffer >> $buffer << @rdx >> $ip >> 0y1101 & @r11 << @rdi >> $buffer >> @rsi & @r12 & $teb & @rdx)  { test_statement(0x46F); } elsif (@rdx >> @rsp >> @rdi & $proc >> @r10 ; @rdx >> @rsp >> @rdi & $proc >> @r10) { test_statement(0x12D8); } else { test_statement(0x485);  This is a not opened comment */ }
$error$
$end$
804
 if (-@rbp + ($thread) >> @r11 >> @r8 >> @rdi & ~@rdx << @r8 >> 14 >> +@rsi | @rdx << @r10 >> +0y11 >> @r13 & 0y10010 >> ~@r12 ^ @r8 ^ 11 ^ 0y1011 ^ 0y1111 ! @rsp + @r13 << @rdx << $teb >> $ip & @r10 << @r10 | $buffer ^ $thread ^ ~$ip)  { test_statement(0x1D24); }
$error$
$end$
805
 if (@rbx + @rdx << @rsp << 0y1110 ^ 0y1 << @r9 ^ ~@rdx >> 2 | $teb >> +@r11 >> 0y10 ; $proc >> @rsi >> 0n4 ^ $ip << $teb | -~$teb << 0x9 >> 0n18 ^ @rdi ^ @r13 & @r11)  { test_statement(0xBEE);  /* This is a comment */ } elsif (@r13 << @rax & @rbp & @rbx & @r12 | @rsi < @rsi << @r10 >> 0y1001 ^ $buffer >> @rbp) { test_statement(0x1BE);  /* This is a comment */  This is a not opened comment */ } elsif (@rsi & 0n0 ^ $thread & $ip @rsi & 0n0 ^ $thread & $ip) { test_statement(0x1220); } else { test_statement(0x191F); }
$error$
$end$
806
 if (@rdx << @rbx << $ip ^ +@rdi & @r9 >> @rdi))~0n13 + @rax << @rax >> @r8 << @rsi >> @rdi >> $proc)  { test_statement(0x2414); }
$error$
$end$
807
 if (0n6 + 13 << 0n4 << ~@rdi & 17 << @r12 < 0n6 + 13 << 0n4 << ~@rdi & 17 << @r12)  { test_statement(0xE84); } elsif ($proc << @rax >> @r9 ! @rsi << @r8 & @rdi >> @rdi & @rax ^ @r11 >> @r12 ^ $proc) { test_statement(0x16EB); } elsif (@r8 >> 1 ^ @rax & $buffer ^ -0xB((@r8 >> 1 ^ @rax & $buffer ^ -0xB) { test_statement(0x11E3); }
$error$
$end$
808
 if (~12 << $thread & 0x4 << @r12 | @r13 << 0xB)~12 << $thread & 0x4 << @r12 | @r13 << 0xB)  { test_statement(0xD2); } else { test_statement(0x2042); }
$error$
$end$
809
 if (@r11 + @rbp << $thread << ~@rax & @r9 & -~$buffer & ~@rax ^ $thread << $teb >> +0y1 & 4 & (@r8) | @rbx & @rbp >> @r8 ^ 0xA & @r10 & $ip ^ $ip ^ @rax ^ @rbp | @r11 | @rsi & @r12 ^ @rbp ; 0n9 + @rbx << $ip >> @r9 >> $thread >> $thread & $buffer << @rbp & @rbx >> +-@r8 & 0n6 & @rsi)  { test_statement(0x922);  /* This is a comment */ } elsif (-+@rdx >> $buffer & @rsp & $proc & @r10 | @r10 & @r9 & $proc | -$teb & (@rdx) ^ 0y101 | @r8 ^ @r13 < @rax >> $ip & 20 >> @rsp & @rdi) { test_statement(0x13CA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ^ 0xF != @rax) ;  if (@r9)@rsi)  { test_statement(0x8D8); } elsif (15 ! -@rbx) { test_statement(0x13FC); } } elsif (@rsi >> ~@rax & @rax ^ @rdx & @rsp ^ $ip <= @r11 & @r11 ^ @r13 & @rax ^ 0n8 ^ @rdi | 0n11 & 0y111 ^ @rbp ^ +$teb | (@r10) ^ @r8 | $teb) { test_statement(0x5E7);  while  (@r8 >< @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1B2D); ; }
$error$
$end$
810
 if (@rax << 0y0 & @rdx & 0y10 >> @rsi ^ $buffer << 14 >> $teb >> @r8 & $teb ^ $thread >> @r13 | 17 >> $proc >> +~@rdx & $buffer >> @r10 ^ @rax >> $ip & @r13 & $proc ^ @rax & @r12 | @r8 >> (+$thread) & @r12 & $ip ^ @rax & @r11 | @rsp & @r11 ^ ~@rdi ^ +@r8 | 0n8 ! @rbp + @rdx << @rdi << $thread ^ @rax << @r11 >> @r12 >> $thread & @rdi >> 0x5 ^ 16 >> +$proc & @rdx & +$teb | 1 & ~@rax & ($teb) ^ @r11 >> $buffer)  { test_statement(0x1992); } elsif (@r13 & @rbp >> @rdi >< $proc << @r13 & 2 & 16 ^ 0x5 & 0xC ^ @rax | 1 ^ 0x2 | +0xC & @r11) { test_statement(0x2004);  break;  for (val = 10; @rbp >< @r13 | @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; -$buffer < @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
811
 if (@rsi << @r11 >> $teb << @r8 & @r12 << 0x13 & @rdi >> @rbp & @rsi | @r12 >> $ip >> +@rsp ^ $buffer ^ $buffer | $buffer >> @rbx ^ @r9 & @rdi ^ @rbx ^ ($ip) | @rdi | @r12 | 13 | +@r8 > ~0n4 >> +@r9 << ~11 & $buffer >> @r12)  { test_statement(0x113D); ;  /* This is a not closed comment } else { test_statement(0x22B); }
$error$
$end$
812
 if (@r10 << @r12 << @r11 & @r8 << @rax >> @r10 >> @r10 & @rbx >> @rdx ^ ($proc) << @r8 >> $teb >> @r13 & @rbx >> $buffer & @rdx & 0n17 <> @r10 << @r12 << @r11 & @r8 << @rax >> @r10 >> @r10 & @rbx >> @rdx ^ ($proc) << @r8 >> $teb >> @r13 & @rbx >> $buffer & @rdx & 0n17)  { test_statement(0x24B3); } elsif (@r10 >> 0xE >> 0x6 | @rbp >> $teb & $proc ! @r10 >> 0xE >> 0x6 | @rbp >> $teb & $proc) { test_statement(0x9EA); } elsif ($buffer >> @rax & @rbx & $proc <> @r12 >> @rsi ^ @rbp & $ip ^ 21) { test_statement(0x156F); ; }
$error$
$end$
813
 if (@rbx + @r12 >> 0xD << @rbp >> $ip & +@r11 & @r13 >> @rbx | (@rdi) | 0n0 >> $proc ^ @rax | @rdi <= @rbx + @r12 >> 0xD << @rbp >> $ip & +@r11 & @r13 >> @rbx | (@rdi) | 0n0 >> $proc ^ @rax | @rdi)  { test_statement(0x1130); } elsif (@r11 << -$buffer <> @r11 << -$buffer) { test_statement(0x1B27); } elsif (@rsp & @rsp ^ @rbp & @rbx))@rdi | $buffer & @rax ^ @r13 | ~$ip | 7 | $ip) { test_statement(0x109A);  This is a not opened comment */ } else { test_statement(0x8D1); @rax = -@rdx ^ @r9 | $teb ; }
$error$
$end$
814
 if ($teb + @r9 << -@r9 >= $proc + 0n12 >> $buffer << @rbp >> @rbx >> @r8)  { test_statement(0xECF); @rax = @rbx >> $ip & @r8 ^ +6 ^ @r8 | @rbx & +$thread ^ $buffer ^ @rdi | $ip ^ $teb ; } else { test_statement(0x13F9); ; }
$error$
$end$
815
 if ($thread & -@rax >> @r8 >> $buffer ^ @r12 << $thread >> ($proc) >> $ip & $ip >> 4 ; @rdi << @rdx & @rbx << @r8 >> @rbp >> 10 ^ $proc << @rdx & @r12 >> ($teb) | $buffer | @r10 >> @r12 & @rbp)  { test_statement(0x19A7); } elsif (@rbp >> $thread >> ((0n3)) & -@rax | @rbx >> $proc & @rdi >= $buffer << @r13 >> $thread >> 0n10 & @r8 >> @r12 & (@rsi) & 0n8 ^ 0x0 ^ +$thread & $ip ^ $thread) { test_statement(0x6CF); } elsif ((@rsp) ^ $teb & @r11 -@r10 >> -@rbx & +$teb & @r11 | $ip & $ip) { test_statement(0x1556); }
$error$
$end$
816
 if (@r11 >> $buffer & @r9 >> @r8 >> 0n11 | $ip << -$ip & @rsi & $teb)@r11 >> $buffer & @r9 >> @r8 >> 0n11 | $ip << -$ip & @rsi & $teb)  { test_statement(0x1F50); }
$error$
$end$
817
 if (0n17 + 0xB >> @r13 << 0y10010 | (@rsi) << @rdi & $buffer >> $ip | @rbp 0n17 + 0xB >> @r13 << 0y10010 | (@rsi) << @rdi & $buffer >> $ip | @rbp)  { test_statement(0x2037); } elsif ((@rdx) >> $buffer ^ @rsp & -@r10 & $ip ^ @rsp | @rbp ^ @rsi & @rbp ^ @r13 >< @r8 << @rsi ^ +@rax & @rsp & 0xE | @r11 | @r10 & -(~@r12) ^ @r9 ^ @r11 | @r8) { test_statement(0x540); } elsif ($ip & 0x13 ^ 0x10 | @r8 & @r10 ^ @r8 | @rdx | $teb == @r9 & 17) { test_statement(0xF22); }
$error$
$end$
818
 if ($thread & @rbp >> @rdi >> 0x12 & 0n16 >> $ip & 0y1110 ^ @r12 << @rdi >> @rdi & @r9 >> @rbx ^ @r11 ^ $buffer & $buffer)@r11 >> -~$proc << +0n2 | @r12 << @r12 & 0n16 ^ @rbx >> @rbp)  { test_statement(0x4F0); ;  This is a not opened comment */ } elsif (0x3 << $teb >> @rbx ^ @rax ; 0x3 << $teb >> @rbx ^ @rax) { test_statement(0x1848); } elsif (@r10 >> @r9 | @r9 ^ 0xE($thread & @rbx | +$proc) { test_statement(0x2551); ; }
$error$
$end$
819
 if (@rsi >> @rdx >> (-@rdi) >> $thread & 0x8 >> 0y100 >> @rax ^ +@r13 >> @rax >> @r9 & @rsi >> $thread ^ @rdx >> 20 & @rsp & (@rax) ^ $thread & @r13 ^ @r11))@rax << @r13 >> @rdx & @r13 << (@rbx))  { test_statement(0x1577); } else { test_statement(0xD34);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 ! @r11) ;  /* This is a not closed comment ; @rax = @rbp ;  for (; $proc)21;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
820
 if (@rdi + $thread >> @rax << @rdx >> ~$ip & -@rdx >> -0n10 & $buffer >> ~@r13 & 0x10 & 0y10011 >= 22 << 0y111 << @r10 ^ @rdi >> @rbx >> $proc & $thread & $ip | @rdi << $proc & @r11 >> @rdi & @r12 ^ @rsp ^ $proc)  { test_statement(0x413); }
$error$
$end$
821
 if (~$buffer << @r11 >> 12 << ++$proc >> $teb & 0y101 >> @rsi & 0x4 ; 0n16 & @rbx | @rdx >> $teb >> @rbx ^ @rdi >> @rbx & @r11 ^ @rbp ^ @r9 ^ (@r10) | 0n11 >> 0y10010 & (0x8) & @rax | ~@r8 ^ $thread ^ (@rax))  { test_statement(0x19C6); }
$error$
$end$
822
 if (~@rsi + @r12 << @rax << @r12 & @rdi << @r10 ^ @r13 & $proc & $ip & @rdx | @rbx >> @rbp >> 0y10000 & 6 >> @rax >< ~@rsi + @r12 << @rax << @r12 & @rdi << @r10 ^ @r13 & $proc & $ip & @rdx | @rbx >> @rbp >> 0y10000 & 6 >> @rax)  { test_statement(0x2092); ; } elsif (@rbp >> $thread >> -@r12 & $thread >> $thread | 0y1001 ^ @r13 & 15))@rbp >> $thread >> -@r12 & $thread >> $thread | 0y1001 ^ @r13 & 15) { test_statement(0x21AC); } elsif (12 >> +-@rax ^ @r9 ; 12 >> +-@rax ^ @r9) { test_statement(0x1E6C); } elsif ($buffer & $ip ^ 0n19 ^ @rdi | 21 = (@r12) | $thread) { test_statement(0x61E);  /* This is a comment */ } elsif (@r9 >< @rsp | $ip) { test_statement(0xFE2); } elsif (0n12 | @r8 == 5 | @rsp) { test_statement(0x247D); } else { test_statement(0xF74); ; }
$error$
$end$
823
 if (0n13 << $buffer ^ (~$proc) >> @rax >> @r9 ^ @rdi & @r9 & $buffer = @rax + @r11 << @rbx & $ip << $thread >> $buffer & @rsp & @rsp ^ @r12 & 0n10 & @rax ^ $buffer & 0 ^ @r13 & 0x2)  { test_statement(0x3E2); }
$error$
$end$
824
 if (@r9 + @r12 & @rsp & @r11 ; @rdi + @rsp << $thread ^ @rsp << $thread >> @rbp >> 0xB)  { test_statement(0xE33); @rax = 0y1000 ; } elsif ((@rsp) << @rsp == (@rsp) << @rsp) { test_statement(0x23); } elsif ($thread >> @r9 & @r9 ^ @rbx | @rsp & $buffer | @rdi | @r8((@rsp >> @rdi & +1 & @rbp ^ @rbp ^ @r8 ^ $proc | 0y10000 & $thread) { test_statement(0x1397);  This is a not opened comment */ } else { test_statement(0x212A); }
$error$
$end$
825
 if (@rdi & @rsi & $proc >> @rdx & +@rsi | @rdx >> @r11 | ~@rsi >> @r13 & $thread & $buffer ^ (~0n3) ^ @r8 <> @rsp << -@rdx << @rdi | @rdi << @r13 >> @r9 >> ~$thread & $proc >> @rdi & @r11)  { test_statement(0xD35); }
$error$
$end$
826
 if (@r11 >> @rax ^ @r9 << ((@rdx)) >> (@rdi) >> @rdx | +$ip & $proc >> @rsi = @rdi + ~0n19 >> @r9 >> @rsp >> @rsi)  { test_statement(0xB9A);  /* This is a comment */  // /* This is a comment   This is a not opened comment */ } elsif (@rdx & 0y10010 >> +~@rax | @r9 | 10 | @r13 <= $teb << @rsi ^ @r10 >> (0x10)) { test_statement(0xF72);  for (val = $ip ^ -$ip | @rdi | -$proc; $thread | ($ip)(@rdx ^ @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; $buffer @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  /* This is a comment */ }
$error$
$end$
827
 if (0n10 << $teb << @r11 >> $teb << +@rsp & @rbx | ($buffer) << $teb & @rdi ^ 23 >> @rsp <= @r11 >> 0n17 << $buffer)  { test_statement(0x3F8); } else { test_statement(0x5DC);  for (; @rsi ; @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
828
 if (@rax + @r10 & 0x8 >> $ip >> ~$ip & @rsp ^ $proc ^ @rdi >> @rax ^ @rdx & @r8 ^ $ip ^ @rbx > @rax + @r10 & 0x8 >> $ip >> ~$ip & @rsp ^ $proc ^ @rdi >> @rax ^ @rdx & @r8 ^ $ip ^ @rbx)  { test_statement(0x1785); }
$error$
$end$
829
 if ((0n8) + @rdi & ~@r10 << 0y10010 & $ip & $buffer | @rbp << 15 >> $ip >> ~@r13))(0n8) + @rdi & ~@r10 << 0y10010 & $ip & $buffer | @rbp << 15 >> $ip >> ~@r13)  { test_statement(0x102F); } else { test_statement(0x24B4);  // /* This is a comment  }
$error$
$end$
830
 if (@rbx >> @rbx >> 0n7 >> @r9 ^ @r12 << @r9 ; $proc + -7 << 0xE >> 0n6 << $ip >> @rbp >> 0y1011 ^ @r9)  { test_statement(0x1D7F); }
$error$
$end$
831
 if ($buffer + @rax | @rsp << @r13 ^ @r8 >> ~@rsp & (0y1) ^ (0x4) & @rdi | @rbx >> @r11 ^ @r12 & 1 > @r12 + @r12 << $buffer << $proc >> @r11 & @rax >> @rdi >> @r13 ^ $thread >> @rbp)  { test_statement(0xA08);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb | @rbx ^ @rbp | ~$buffer(@rdi & 0xE | $ip) ;  for (val = 10; 1 = 1;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@rax << -@r11 | @r8 | @r12 & @r9 | @r12 | 0xB | @r12 ; 0n19 << @rbp ^ 0y0 ^ ~@r11 ^ @rdx) { test_statement(0x1171); } else { test_statement(0x4BF); }
$error$
$end$
832
 if (@rdi + @rsi << @rbx >> $teb >> ~@rax & -0n2 & @r10 >> @rbx & +$thread & @rax ^ ~@r11 << +@rsp & @rax ^ ~@rax ^ @rdx ^ +~@r11 | -$proc >> @rsi >> -@rax & $teb & @rbp & @rsi ^ @rax ^ ~@r12 & @r10 ^ @rbx ^ +@r8 | 11 & @r9 & @rbp ^ $thread ^ ~$buffer | @rbx ! @rdi + @rsi << @rbx >> $teb >> ~@rax & -0n2 & @r10 >> @rbx & +$thread & @rax ^ ~@r11 << +@rsp & @rax ^ ~@rax ^ @rdx ^ +~@r11 | -$proc >> @rsi >> -@rax & $teb & @rbp & @rsi ^ @rax ^ ~@r12 & @r10 ^ @rbx ^ +@r8 | 11 & @r9 & @rbp ^ $thread ^ ~$buffer | @rbx)  { test_statement(0x90A); } elsif (@rsp << @rdi ; @rsp << @rdi) { test_statement(0x2268);  /* This is a not closed comment } elsif (@r9 & $ip((@r11 >> @rsp | $teb | @r13 ^ $proc | $buffer) { test_statement(0x24D2); } elsif (@rax & @r13 | @rsi ^ ~@rdi ! 0x8 & @r10 ^ @r9) { test_statement(0x119A);  This is a not opened comment */ }
$error$
$end$
833
 if (@rdi + @r13 ^ @rdi != @rdi + @r13 ^ @rdi)  { test_statement(0xF64); } else { test_statement(0xF22); }
$error$
$end$
834
 if (~$ip != @rbp)  { test_statement(0x5B9);  if (-@r8 & 20 ^ $proc | @rdx ^ @r12 >= @rsp | @r8 ^ 17)  { test_statement(0xE79); } elsif ($proc >= 0n0 | $ip | $proc) { test_statement(0x1D7C); } else { test_statement(0x8D4); } }
$error$
$end$
835
 if (@r13 >> 23 << $proc ^ @rdx << @r13 | $ip >= @r13 >> 23 << $proc ^ @rdx << @r13 | $ip)  { test_statement(0x8A5); } elsif (@rdx & @rdi ^ @rdi | @rax & @r8 & 0n3 | @rdi & +$teb ^ @rdi | @rsp | @r10 | $ip))@r10 << @rdi & $thread) { test_statement(0xA4E); val = 0y1000 ; }
$error$
$end$
836
 if ($proc + @r12 & @r12 & @rdi & $proc & @r8 ^ @r9 >> @r12 >> @rsi ^ 10 | ~@r12 >> @r8 & @rdx ^ @rdi & @r10 >< @r8 + @rax << 0xE & @r12 << $proc >> @r13 >> 0y1000 & @rdx & $ip ^ $buffer >> 0n7 & 23 & @rsi & 0y10011 ^ $proc & 0y11)  { test_statement(0xF20); } elsif (@r11 ^ @r9 & $proc ^ @rbx ^ $teb ^ $teb = @r11 ^ @r9 & $proc ^ @rbx ^ $teb ^ $teb) { test_statement(0x170A);  break; }
$error$
$end$
837
 if (0n8 + $buffer << +@rbx & @r9 & @rdx >> 0xA ^ @rdi << @r10 ^ $ip >> @r9 & @rsp > $proc + @r8 ^ @r9 << @r8 & 0xF >> @rbx | $teb << @rbp)  { test_statement(0x1684);  /* This is a comment */  for (val = 10; @rsp | (@r10) | $buffer)@rsp | (@r10) | $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
838
 if (@r13 << (0n18)(@r13 >> +20 << $ip & 0y101 >> +0n15 & @r10 >> @r8 ^ @r9 & @r8 | @r9 & ~-0n10 & @rax)  { test_statement(0x22A4); @rax = @r11 >> @rdx & @rsi & @r12 ^ @r9 ^ @rbp ;  for (val = 10; @rdi <> @rbx ^ 0xA | $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif ((@rdx) >> @rdx >> ($ip) ^ @r8 >> @r10 & @r10 ^ $teb & @rsi ^ $buffer <= (@rdx) >> @rdx >> ($ip) ^ @r8 >> @r10 & @r10 ^ $teb & @rsi ^ $buffer) { test_statement(0x23C0); } else { test_statement(0x26FA); }
$error$
$end$
839
 if (0xF + @rdx << $proc >> 0x8 << @r8 >> @r13 & ~-@rdi << $buffer >> @r13 >> 0n19 & @r11 >> @r9 & $proc >< @r12 + +0y0 << @r13 << $teb >> 0y1 << @rsp >> $thread >> @rdi)  { test_statement(0xEC6);  if ($teb & @rbx > $thread | @rbx ^ 0x6 | $thread)  { test_statement(0x672); } else { test_statement(0x1AEF); } } elsif (-$thread >> @r9 ^ 0x11 & @rdx | @r13 >> @rsi | 0xB((0n14) << @r11 >> @rbp & +@r8 ^ @r8 & @rbx & $teb ^ 17 & 0x8 ^ 0n1 ^ @rbp | @r9 >> $proc & @r12 ^ @r11 & $teb ^ @r12 | 2 ^ 17 ^ $buffer) { test_statement(0x1D41);  for (val = 10; $teb | @rbx < $teb | $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r11 | @rdx != @r11 | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x545); }
$error$
$end$
840
 if ($thread + 20 & @rdi & $thread >> 4 & 20 & 22 ^ @rdi & (@r11) & @rax & 0xB ^ 0 >> @r8 & @r9 & ~@r8 > $thread << @r11)  { test_statement(0x1E3A); } elsif (@r11 & @r11 >> @r9))@r12 << @rbp | $ip >> ~@rdx | @rdi & @r8 ^ @r8 ^ @r8) { test_statement(0x406); } elsif (@r13 & @rsi & @rax @r10 & $buffer & @r13 ^ 0x10 & ~@rdi ^ @rdx ^ $thread | 0n17 | @rbp | @rdi | $teb) { test_statement(0x60A); } elsif (-13 & $proc | @r10 ^ $thread | +1(($ip & 0xB ^ 0y10001 ^ @r10) { test_statement(0x143); } elsif (0n15 > 0n15) { test_statement(0x20DC); } elsif (0y110 | +-0x3 ; (@rsp)) { test_statement(0xC4D); }
$error$
$end$
841
 if (0n0 + @r9 << (@r12) ^ @r11 >> $proc >> 0y1101 ; 0n0 + @r9 << (@r12) ^ @r11 >> $proc >> 0y1101)  { test_statement(0xEC1); } elsif (0x2 & @r11 >> $proc ^ 0n1 & 0n7 & @rdx > @rsi >> (@rax) ^ @r10 ^ $thread & @rsi ^ @r10) { test_statement(0x1F72); }
$error$
$end$
842
 if (@r13 + ($buffer) > @r13 + ($buffer))  { test_statement(0xC58);  // /* This is a comment   if (10 ^ $buffer | @r12 | @rbx <> @rdx)  { test_statement(0xE67); } elsif (2 <> 0x13 | @rbp) { test_statement(0x1A37); } elsif ($proc > $proc) { test_statement(0x9A3); } ;  while  (@rbp(((@rbx))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; -0n18((-0n18;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
843
 if (@r8 + @r12 << @r12 << 0n1 & $thread >> -@r13 >> $ip & +@rbx >> @rsi ^ @rax >> 14 & @rdx >> @r12 = $thread + @r9 ^ -@rsi >> -@rbx >> $buffer & @rdi >> @rbp & @rsi)  { test_statement(0xF95);  // /* This is a comment  } else { test_statement(0x2704); }
$error$
$end$
844
 if ($teb + @rax >> @rdi << $thread & $teb << $proc >> @r10 & @r10 | @rsp & @rbp ^ $teb & @r13 & @r10 ^ 0y10000 & $buffer ^ 0y1101 | @rdi ^ @r10 ! $teb + @rax >> @rdi << $thread & $teb << $proc >> @r10 & @r10 | @rsp & @rbp ^ $teb & @r13 & @r10 ^ 0y10000 & $buffer ^ 0y1101 | @rdi ^ @r10)  { test_statement(0x69C);  /* This is a comment */ } else { test_statement(0x111E);  while  (@rax | @rdx == (@rdi) | @rdx | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
845
 if (@r9 & -0n16 << $buffer >> @r10 | ~@rax >> (~@rbx) >> $teb ^ @rsi >> ~-0n15 ^ @r9 & @rsp ^ 7 | -@rax >> $proc & @rsi | @r13 ^ @r11 ^ $ip))@r9 & -0n16 << $buffer >> @r10 | ~@rax >> (~@rbx) >> $teb ^ @rsi >> ~-0n15 ^ @r9 & @rsp ^ 7 | -@rax >> $proc & @rsi | @r13 ^ @r11 ^ $ip)  { test_statement(0x26B6); } else { test_statement(0x730);  while  ($thread | @rdx | @rax <> @r9 ^ $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
846
 if (@r13 + @r8 << @rax >> @r8 | +0x7 >> $thread | @r12 != @r13 + @r8 << @rax >> @r8 | +0x7 >> $thread | @r12)  { test_statement(0x1B05); } elsif (@rbx << @rsp >> $proc >> $ip ^ @rsp >> $thread & @rdi & $ip | 21 ^ $teb ^ $thread < 0 >> @rbx >> @rax ^ ~+@rbx >> @rbx) { test_statement(0x18F); } elsif (@rsp & (0n12) & @r10))16 & @rdi & ~@rbp) { test_statement(0x151C); } elsif (@r9 >< @r9) { test_statement(0x52C); } elsif (+$ip != +$ip) { test_statement(0xF80); } else { test_statement(0x5AF); }
$error$
$end$
847
 if (0y1011 & @rsp << -@rbp ^ @r8 & $ip ^ @r13 >> $thread & @rbx & @r10 ^ 0y10 & @rbp | ~-15 << $thread & @rbp ^ @r9 > 0y1011 & @rsp << -@rbp ^ @r8 & $ip ^ @r13 >> $thread & @rbx & @r10 ^ 0y10 & @rbp | ~-15 << $thread & @rbp ^ @r9)  { test_statement(0x28A); }
$error$
$end$
848
 if ($thread + $teb >> @rsi << +0y10001 & $buffer >> @r11 @rsp + $teb << (@rsp) ^ -0n5 << $thread >> @r8 >> @rsi & @rbx | @rbp << $buffer)  { test_statement(0x1C3F);  if (~0x13 | @r9 <= 20 & @r13 ^ $proc | 0y10010)  { test_statement(0x25B6); } elsif (@rsi ! @r8 ^ $ip | @rbp | 12) { test_statement(0x850); }  for (val = 10; @rsp >< ~+@rdi ^ $teb | @r8 | @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
849
 if (+$buffer + $buffer << @rax << ~0 ^ $ip << 0y1011 >> $ip >> @rbp ^ @r10 >> @rbp ^ @rdi | @rbx << 13 >> $ip & @rsp & $teb & @rbx >< +$buffer + $buffer << @rax << ~0 ^ $ip << 0y1011 >> $ip >> @rbp ^ @r10 >> @rbp ^ @rdi | @rbx << 13 >> $ip & @rsp & $teb & @rbx)  { test_statement(0x8FF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi & 0y10000 <> $buffer & @rsi ^ $thread) ; } else { test_statement(0x1171); }
$error$
$end$
850
 if ($thread ^ $ip & @r13 & @r13 & (20) < @r12 << $proc << @rdi & +$proc << @rdi >> @r10 >> @rdx)  { test_statement(0x1673); } elsif (0n19 << 0y100 & -~$ip >> @r10 & 14 & -($buffer) ^ @rdx >> $proc ; 0y110 ^ @r10 >> $thread & @r9 & -@rsi) { test_statement(0x15C5); } elsif ($teb ^ 20 & $thread ^ $proc @r10 & @rax ^ @r9 & -$ip | 0n2 & @rsp ^ @rsp ^ @rbp) { test_statement(0x7C7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (0x2) | @rbx(($thread) ; } elsif (@r8 & 0n9 | $thread | @rsi > @r8) { test_statement(0x13B9); val = @r8 ;  break;  while  ($proc = $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } else { test_statement(0xC0F); }
$error$
$end$
851
 if (@r10 + (-@r10) << 0y1111 << @rbx ^ @rbp >> @r9 ^ 0x8 >> $ip & @r13 | @rbx != @r10 + (-@r10) << 0y1111 << @rbx ^ @rbp >> @r9 ^ 0x8 >> $ip & @r13 | @rbx)  { test_statement(0xFAC); @rax = @rsp & -@r9 ^ -0x4 ^ @rdx | 0xF & (@rsi) ^ ~@rax | $teb ; }
$error$
$end$
852
 if ($proc & @rsp & @r12 >> $ip & @r9 ^ $proc << @rsi < $proc & @rsp & @r12 >> $ip & @r9 ^ $proc << @rsi)  { test_statement(0x808); } else { test_statement(0x17DF);  This is a not opened comment */  /* This is a not closed comment }
$error$
$end$
853
 if (@rax >> ($ip) << @rdx >> 0x11 & @r10 << @rax >> $thread ^ @r8 >> ~~$thread >> @rsp & @rdx >> @rbp & $thread & @r11 | @r10 << 0n12 ^ 21 >> 0y100 ^ @r9 ^ $thread | $teb & @r9 & @r12 ^ $thread & $ip ^ $buffer ^ @rax)0y1110 & 1 | (~@r8) >> $ip >> (1) & 0x5 >> 0n9 ^ $buffer >> +(~-+$teb) ^ 0x3 & -@r12 ^ $proc ^ 22 | @rbp >> ~@rsp ^ +@rbp)  { test_statement(0x81E); } else { test_statement(0x9A9); }
$error$
$end$
854
 if (+$buffer & $thread ^ 0n19 >> @r8 ^ @rsp & @r8 & -(@r12) | @rax << @r12 ^ ~@r12 >> @rdi & @r9 ^ ~@rsi & $teb ^ @r8 | @r13 & $ip & @rsp ^ @r13 | $ip | $teb ^ -@rdi <> +$buffer & $thread ^ 0n19 >> @r8 ^ @rsp & @r8 & -(@r12) | @rax << @r12 ^ ~@r12 >> @rdi & @r9 ^ ~@rsi & $teb ^ @r8 | @r13 & $ip & @rsp ^ @r13 | $ip | $teb ^ -@rdi)  { test_statement(0x1653); } elsif (@r10 << @rbp & 0x8))$ip << @r8 >> @rsp) { test_statement(0x51D);  This is a not opened comment */ } elsif (@rdi >> $teb & @r11 & -$thread ^ @rbp & @rdi ^ @rax = $ip >> $teb & @rdi & @r11) { test_statement(0x1205); } elsif (@r8 & $buffer ^ $teb ^ (@rsp) <= @r8 & $buffer ^ $teb ^ (@rsp)) { test_statement(0x18BB); }
$error$
$end$
855
 if (@rax + 0y0 << @r11 & ($thread) & (+$teb) & @r11 & @r13 | $proc >> $thread == @rax + 0y0 << @r11 & ($thread) & (+$teb) & @r11 & @r13 | $proc >> $thread)  { test_statement(0x116);  if ($ip & @rax ^ @rdx | @r12 ^ +@rdi > $ip & @rax ^ @rdx | @r12 ^ +@rdi)  { test_statement(0x1359); } elsif (@rdi ^ @rdi < @rdi ^ @rdi) { test_statement(0xCC1); } elsif (@r13 | @r10 ! @r13 | @r10) { test_statement(0x10A1); } else { test_statement(0x1FBA); }  /* This is a comment */ }
$error$
$end$
856
 if (@r9 + @rbx << $buffer >> @rdi & @r8 << @rbp & $buffer ^ @rax << $thread >> 1 >> $proc & $ip ^ +0n1 >> @r13 ^ @rdi & @rsp | @rbx ^ 0xA ^ @r9 | @rax ^ $thread ^ $proc | 0y10001 ^ @r9 ^ @rsp = @r9 + @rbx << $buffer >> @rdi & @r8 << @rbp & $buffer ^ @rax << $thread >> 1 >> $proc & $ip ^ +0n1 >> @r13 ^ @rdi & @rsp | @rbx ^ 0xA ^ @r9 | @rax ^ $thread ^ $proc | 0y10001 ^ @r9 ^ @rsp)  { test_statement(0x1C56); } else { test_statement(0x52C); }
$error$
$end$
857
 if (@r13 >> 0n14 >> -@rbx ^ 0x8 >> @r12 & @rbp >> $buffer & @r9 <> @r13 >> 0n14 >> -@rbx ^ 0x8 >> @r12 & @rbp >> $buffer & @r9)  { test_statement(0x1A7); } else { test_statement(0x2613);  /* This is a comment */ }
$error$
$end$
859
 if (@rsp ^ $buffer << @rbx >> @rdx & @rbp & ~@rax >= $ip << @rbp ^ @rbx >> @rdi | $ip << @r11 & +(+@rsi) >> @rsi & @rdx)  { test_statement(0x957); } elsif (+@rbp & $thread & -@r11 & @r8 | @r13 | @r12 & @r8 ^ @rbx ^ $teb | @rsp = @rdx) { test_statement(0x1565);  for (val = 10; @rdi ^ @rsi < @r10 ^ -$teb | @r13 | $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +($ip) | ~$teb = $ip | ~@rdi) ; } elsif (0x10 >> $buffer ^ @rbx ^ @r13 | $teb & @r11 ^ @r12))@rbx >> $ip & $thread | @rbp) { test_statement(0x774); } else { test_statement(0x2009);  // /* This is a comment  }
$error$
$end$
860
 if (@rbx + $thread >> @rsi & @r9 << @r10 ^ @r10 << @r10 | @r9 ^ @rbx | @rbp >> 0xA ^ ($ip) & $buffer ^ @rsi | $buffer ^ -@r10 | 0 ^ @rdx < @r9 ^ -13 & 0x2 >> @rbx | $teb << @rbp ^ @rbp | $ip >> @r11 ^ ~@r10 & -0n3 | @r12)  { test_statement(0xE6F); } else { test_statement(0x37);  for (val = @rax; @rax != -@rdi ^ @r13 | @rsp | +$teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ($buffer) | $buffer <> @rbp | @rax) ; }
$error$
$end$
861
 if (@r11 << 6 << @rsi & @rsi & @r10 >> +0x1 & @rdx & $ip ^ (@r12) << @r9 >> @r13 & @r8 >> @r13 @rsp + @r8 << @r9 & 0y1001 >> (-@rsp) >> @r12 | 0y1010 << @r12 >> 0y10001)  { test_statement(0x121D); }
$error$
$end$
862
 if (0y1100 + $ip ^ 21 >> @rsp & -@r12 >> @rbx & @rbp & @r10 | @r12 >> @r10 >> $ip & @rsi < @r9 + @rsi >> $ip << ~@r10 & -$ip << ~$thread >> @rsp >> $thread ^ -~~$teb << 16 >> @r10 ^ @rbp & $proc & @r12 ^ @r12 & $proc)  { test_statement(0x1C9C);  for (val = 10; @r12((@r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (+$ip << $ip ^ 4 ^ @rsp & @r9 | $proc & @r10 ^ ($proc) & @rbp | 20 ^ @rdx ^ @rbp | +@rdi <> (@r9) | @rbp >> ~0xA & (@rdx) & 12 | @rsi) { test_statement(0x25F);  /* This is a comment */  break; } elsif ($teb >> 0x7 & $proc & 0y1001 ^ @r12 & -$teb ^ $ip(0x2 >> $buffer) { test_statement(0x506); } else { test_statement(0xC23); }
$error$
$end$
863
 if ($buffer + @rsp ^ $thread << @rbx ; $buffer + @rsp ^ $thread << @rbx)  { test_statement(0x17AB);  while  (~22 @rsi & @rsp ^ ~$proc | @r12 ^ @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 << $buffer ^ @rsp & @rbx ^ @r8 ^ $teb ^ @r11 != @r11 << $buffer ^ @rsp & @rbx ^ @r8 ^ $teb ^ @r11) { test_statement(0x1B5F); }
$error$
$end$
864
 if ($ip >> +@r13 >> +@rsp >> 5 <= 0n0 + @r8 << $ip ^ @rax >> 0xC ^ @rbp & @r11)  { test_statement(0x10AE);  if (@r9 & 0y10011 | -@r9 ^ +(@rbp) = $buffer | -3 ^ @r12 | @rbp)  { test_statement(0x847); } else { test_statement(0x551); } } elsif (@r13 << $proc >> 0y10000 & @rsp >> $teb | ++0n6 >> 0y0 ^ @rsp & 0y1100 ^ @r10 != 0y1110 >> @rbp >> @r10 ^ @rbx >> @rdi & @rdi & 0x8 ^ @r10 & -@rax ^ @rax ^ 0n13) { test_statement(0x335);  break; } elsif ($thread & +(@rax) ^ 0x8 ^ @r13 ^ @rsi >= @r10 >> @r9 | @r12 & -+$proc ^ @r13) { test_statement(0x23C5); } else { test_statement(0x1D76);  /* This is a comment */  /* This is a not closed comment  if (0x6 > @rdx)  { test_statement(0x25B3); }  for (val = 10; @rdi = @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
865
 if ($teb << @r11 << @rsi ^ +$teb & (@rsp) & ~0y1101 | ~+($proc) << @r10 ^ -0y110 & 12 & @rsp ^ @r12 & @r13 ^ @rbp ^ @r12 | @r9 ^ @rdi & @rbx ^ @rsp | @rbx & @r10((@r12 + @r11 & @rbx << @r10)  { test_statement(0x184C); @rax = $teb ^ @rdx & @r9 ^ @r11 ^ ~@r11 | $buffer ; } elsif (@r12 & +@r12 ^ ($thread) >> ~@rbx ^ @rsp & ~@rsi ^ 0n8 @r12 & +@r12 ^ ($thread) >> ~@rbx ^ @rsp & ~@rsi ^ 0n8) { test_statement(0x3F0); } elsif ((-@r12) >> ~@rbp & (@r13) & 0x13 ^ ($ip) & +$buffer | $ip & @rdx ^ $ip | ~@r11 ^ @r13 = @rdi) { test_statement(0x1371); } elsif ((((~@rsi))) ^ ~$thread ^ $thread >= (((~@rsi))) ^ ~$thread ^ $thread) { test_statement(0x1F5C);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y100))$ip) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer +~@r13) ; } else { test_statement(0x3A8); }
$error$
$end$
866
 if (@rsp + $teb << @rax & 0y1101 & 0n7 ^ @r12 & @rbx & @r12 & -$buffer ^ $teb >> @rbp | @rbp >> @r8 >> $teb > @rsp + $teb << @rax & 0y1101 & 0n7 ^ @r12 & @rbx & @r12 & -$buffer ^ $teb >> @rbp | @rbp >> @r8 >> $teb)  { test_statement(0x161);  break;  if (0x3 | @rsp | ~20 > $buffer ^ $teb | -@r13)  { test_statement(0x1DEF); } elsif (-$ip | @r13 < -$ip | @r13) { test_statement(0x1083); } } elsif ($ip << $thread ^ @rdi & @rax & @r11))@rdi >> $thread >> @rdi ^ @r13 >> @rbp | @rdi >> @rsi & $teb & 7 ^ (@r10) ^ @rdi ^ +@rbp | @rsp | @r10 | 0x9) { test_statement(0x114D); } else { test_statement(0x177C);  This is a not opened comment */ }
$error$
$end$
867
 if (+0y11 + @r9 | 0n19 >> @rdx >> $thread <> @rsi << +@rdx ^ @rsi & ($proc) & $ip | @r11 << +$thread ^ 0y10 & @rdx & 0y1110 ^ $ip | @r8 >> @r10 & @r9 & @rdi ^ @r11 ^ @r13 ^ $proc | $teb ^ $thread | +@rsi)  { test_statement(0x1FE8); }
$error$
$end$
868
 if (@r10 + @rsi ^ ~0x13 << @r10 ^ 0x13 >> @rdi ^ +15 | @r8 << @r12 & $proc | @rax >> @rdi & $proc & @r12 ^ @rdi & @rsp ^ 0x3 ^ @rax ! @r10 + @rsi ^ ~0x13 << @r10 ^ 0x13 >> @rdi ^ +15 | @r8 << @r12 & $proc | @rax >> @rdi & $proc & @r12 ^ @rdi & @rsp ^ 0x3 ^ @rax)  { test_statement(0x242B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx | $teb ! @r9 & (@rsp) | @rbp) ; } else { test_statement(0x2154);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 ^ @r8 | @r12 == @r13 ^ @r8 | @r12) ;  This is a not opened comment */ }
$error$
$end$
869
 if (@rdi + @rsi ^ $proc << 0x0 & $ip >> @rbp & +0x3 & +@r11 | @rax & @rbx ! @rdi + @rbx << 12 >> 0n15 >> @r8)  { test_statement(0x110B);  while  (-@rdi ^ $proc | @r13 ^ 0y1010 | 22 | +@rdi <> @r13 ^ @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; $teb ^ @rdx <> @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n4 >> @r9 & $buffer & @rsi & @r9 ^ @rsp))$buffer << @rbx) { test_statement(0x435); } elsif (@rbp | @rsp & 0y10011 ^ $ip ^ @r11 | 0n16 ^ 0n5 | @rdx(@rbp | @rsp & 0y10011 ^ $ip ^ @r11 | 0n16 ^ 0n5 | @rdx) { test_statement(0x1AEC); } elsif (0x0 != 0x0) { test_statement(0x9F4); }
$error$
$end$
870
 if (@r9 | @rbp & @rax ^ @r12 & ~$proc ^ @r9 & @rdx ^ @r13 ^ +@rsp > @r11 >> 0y1001 >> @rsp ^ @r13 << 0n17 ^ +$thread >> @rax & +$proc ^ @r11)  { test_statement(0x1C65); } elsif (~13 << @rax != $teb & @r9) { test_statement(0x1B14); ;  This is a not opened comment */  while  (@r11 != @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (@r12 >> -@r10 | @r9 <= $teb) { test_statement(0x1EBC);  if (@rbx >= @rsp)  { test_statement(0x1D2D); } }
$error$
$end$
871
 if ((@r8) + $ip << (@rax) << 0y10001 >> @r10 | @rdx >> (@r8) >> 0xE | @r8 >> @rbp & $buffer ! @r11 << 0n1 << -$proc >> @r11 << $proc >> @r9 & 21 >> @rdi & -$teb & @rsp & @rbx | $proc & @rdx ^ @rbp >> @rax & ($proc) ^ @r11 ^ @r11)  { test_statement(0x409); @rax = $proc >> @rsp & @rsp | @rsp ^ $thread ; } else { test_statement(0x1AAC);  break;  This is a not opened comment */ val = $ip ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x10 <> @rdi) ;  if (@rdi))@rdi)  { test_statement(0x1911); } }
$error$
$end$
872
 if (10 + $buffer << (0y1111) ^ @rsi ^ 0y1100 >> 0y101 & -@r12 | $teb << (@rsp) | @r8 >> @r8 ^ @r10 | @rsp = @rdi + 0n3 << $buffer ^ @rdi ^ @r8 >> @r13 | 0y101 << @r12 >> @rdi >> @r12 & 17 >> 13 ^ @r9 ^ +$buffer ^ @r9 ^ @r12 | $ip >> @rdx ^ @rsp & $ip | @rax)  { test_statement(0x1668);  break; }
$error$
$end$
873
 if (0y10010 >> $proc << @r10 >> @r9 >> (@rdi) <> 0y10010 >> $proc << @r10 >> @r9 >> (@rdi))  { test_statement(0x1A1); } else { test_statement(0xBBF); }
$error$
$end$
874
 if ($thread | @r11 >> ~~@r9 & @r12 >> 0y1101 & $buffer & +$teb | @rbx >> @r8 & @rsi ^ @rbp ^ ~$teb | (($thread)) & @rax((0x4 + @r9 << @rax & @r8 << $proc >> @rsp ^ @rax << $thread >> 0y110 ^ 0n17 >> $teb & @rbp)  { test_statement(0x743);  This is a not opened comment */ } else { test_statement(0xD46);  if (@r9 ^ $thread | @rdi((@r9 ^ $thread | @rdi)  { test_statement(0x339); } }
$error$
$end$
875
 if (~@rdx >> @r13 << +@rax >> +@rsi ^ @r9 ^ @r10 & (@r12) & @r12 ^ @r12 & ~0n11 | @r13 << @r12 >> ~0y111 >> @r9 & 0n9 != @r13 << -((~$proc)) & 0x1)  { test_statement(0x1DA9);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~2 | ~@r8 ~@rax) ;  This is a not opened comment */  break;  // /* This is a comment  } elsif (0n10 | (-0n8) & @rdi | $thread | ~@r10 <> 0n10 | (-0n8) & @rdi | $thread | ~@r10) { test_statement(0xE49); }
$error$
$end$
876
 if ($buffer + $thread >> -@r10 << $proc >> -1 == @r12 + $teb ^ 7 & $ip >> $buffer)  { test_statement(0x399);  for (val = 10; +$buffer & @r8 | $thread ^ 0n17 ! @rbx & @r11 | $teb | $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
877
 if (@rdx << @r8 << @r12 ^ @rsi << 0xE >> @r11 >> @r12 ^ -0n15 ^ @rsi & $ip ^ @rbp ^ @r10 $teb + $ip << @r13 << $thread & $buffer >> @r11 >> (@r13) & +0y10011 ^ @rdx << @r9 >> -($proc) & @rsi & @rdx & $buffer | 1 << @rsi & 0xA & (@r13))  { test_statement(0x817); } elsif (@rax << @r12 >> (-0y10000) & @r11 & $buffer ^ $buffer >> @r9 & @rdx & ~(@rbx) ^ ((@rsi)) ^ @rsi ^ @r10 == @rax << @r12 >> (-0y10000) & @r11 & $buffer ^ $buffer >> @r9 & @rdx & ~(@rbx) ^ ((@rsi)) ^ @rsi ^ @r10) { test_statement(0x1E0A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx ^ 0n14 $teb ^ @rax | +@rbx) ;  break; @rax = ~@rsp ; ; } else { test_statement(0x1017); ; ; }
$error$
$end$
878
 if (@r11 << +0n1 >> 13 << @rax >> 1 >> @rdx & @rsp & @r12 ^ @r9 << ($ip) >> @rdx >> 13 ^ $buffer ^ (@rdi) ^ 0y10001 ^ 0xB | @rbp << 0x2 >> $buffer | $ip >> 0n4 ^ 0n12 & @rbp ^ $proc ^ 0y1000 | @rax & @r10 ^ @rax | @r11 = @r9 & $buffer << @rbp ^ 6 << @rbx & @rdx >> 0x1 | +@r11 >> $teb)  { test_statement(0x79D); ; } elsif (@rbx & @r10 | @rsp >> -~+0y100 ^ 0n18 ^ 6 ^ @rbx < $teb << @rdi >> $proc & @rdx >> $thread & @r9 & @r11 | @r12 >> -0xB & $teb | @r12 & @rsi ^ @r11 | @rax ^ @r10 | 0xA) { test_statement(0x599); }
$error$
$end$
879
 if (0n18 << @rdi >> @r9 << @r8 >> @rsp >> 0n12 & @r11 >> @rdx >> @rbx | @rdi | @rbp >> 0n14 & -~@rbx & @r11 == @r12 << @r13 << $thread >> @rax ^ $proc >> $proc >> 0xA & @r8 & 0n15 | @r11 | $thread ^ +@rsp & @r8)  { test_statement(0x211D);  for (val = 10; $buffer & 0x6 ^ $thread <> $buffer & 0x6 ^ $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($teb | +$teb >< @r10 | $ip | @rax)  { test_statement(0x1D7); } else { test_statement(0x161C); } } elsif (@rbp >> $thread | @rdi >> @r9 ^ 0xA ^ @rdi ^ @rsp | 4 ^ @r13 == 0n9 << @r10 & @r11 >> $ip ^ @r11) { test_statement(0x2062); } else { test_statement(0x8D6);  if (-$proc | @rbp | @r10((-$proc | @rbp | @r10)  { test_statement(0x233C); } elsif (@rbp <= @r13) { test_statement(0x1EB5); } else { test_statement(0x1622); } }
$error$
$end$
880
 if ($ip << 0y1011 >> +@rdx & 0y1010 << @r13 >> 0y0 & @r10 & 0n18 ^ @rsp << @rdx)$ip << 0y1011 >> +@rdx & 0y1010 << @r13 >> 0y0 & @r10 & 0n18 ^ @rsp << @rdx)  { test_statement(0x1272);  if (@r9 & @r12 ^ $proc ^ @r9 | 0y1110 | @rdi <= @r9 & @r12 ^ $proc ^ @r9 | 0y1110 | @rdi)  { test_statement(0x26D7); } elsif ($ip ; ~@rbx | @rsi | 0y1001) { test_statement(0xAB6); } elsif ((~@rax) | @rbx >< +0x12) { test_statement(0x10CA); } elsif (-@rax(@rdx) { test_statement(0xBC5); } elsif ($proc <> 17) { test_statement(0xB7A); } elsif (@r10 == @r10) { test_statement(0x3F5); } }
$error$
$end$
881
 if (@rsp + $thread << ~@rbx >> @r12 ^ 0n9 << -16 >> @rbx & $ip ; @rsp + $thread << ~@rbx >> @r12 ^ 0n9 << -16 >> @rbx & $ip)  { test_statement(0x2130); } else { test_statement(0x1DB3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n10 ^ 0n4 | 0y1101 | $ip > 0x8) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc | @rsi(($ip | $ip) ; }
$error$
$end$
882
 if (@rbp << $teb >> 21 & @r9 >> $proc <= @r11)  { test_statement(0x1A56);  break; } elsif ($thread << +$buffer & @r11 & 0y1011 & @rdi ^ $ip >> @r9 | @r11 >> 0n2 | 0n9 & 0x5 ^ @r10 <= $thread << +$buffer & @r11 & 0y1011 & @rdi ^ $ip >> @r9 | @r11 >> 0n2 | 0n9 & 0x5 ^ @r10) { test_statement(0xAD1);  while  (0x9 ^ 0x10 == $buffer | @rsp | 0y110)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
883
 if (@rsi << @rsp & @r11 >> $buffer & $ip >> +10 | @rax >> $proc >> ~$ip = @rsi << @rsp & @r11 >> $buffer & $ip >> +10 | @rax >> $proc >> ~$ip)  { test_statement(0x1284); } else { test_statement(0x137A);  // /* This is a comment   for (val = 10; @r12 | $ip ; @r12 | $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
884
 if (0n18 + $proc << @rbp & @r13 << @r12 & @r8 >> +@r13 & @rdi ^ $buffer >> $buffer >> @rdx & @rdx ^ @rdi >> @r10 ^ @r10 & @rsp | +@rdx >> @r10 | @rdi | +@rdx & @r8 ^ 0y1110 | 13 ^ @r10 | @rsp | 0y10010((0n18 + $proc << @rbp & @r13 << @r12 & @r8 >> +@r13 & @rdi ^ $buffer >> $buffer >> @rdx & @rdx ^ @rdi >> @r10 ^ @r10 & @rsp | +@rdx >> @r10 | @rdi | +@rdx & @r8 ^ 0y1110 | 13 ^ @r10 | @rsp | 0y10010)  { test_statement(0x184F); ; } elsif ($buffer & ~0y1110 $buffer & ~0y1110) { test_statement(0xFD9); }
$error$
$end$
885
 if ($buffer + @r10 << @r8 << @rsi | 0n9 >> @rbx >> @rdi | $thread & @r9 & $teb ^ 0x10 & 0x5 ^ @r13 <> @rdi + 0y1110 >> (@rdx) << @rbp | @rsp << @rbx >> @r9 & @rdx | 0x10 & -0y11 ^ 0n7 | @r13 & @r8)  { test_statement(0x1C48); } elsif (+@rax << @r10 ^ $teb >> $proc & 0x4 & $teb | @rbp | $buffer & @rdx ^ @r9 ^ @r13 | @rbp | @r12 | 0x8(@r10 << @rsi) { test_statement(0x473);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~$buffer ^ @r8 <> ~$buffer ^ @r8) ;  /* This is a comment */ ;  break; } elsif (@rbp >> @rbp & 0n1 ^ @rbx ^ @rdx <= 0x10 & 0n7) { test_statement(0x169E); }
$error$
$end$
886
 if ($teb | 4 << 0x2 >> @r11 >> $teb ^ 0y1101 & @rbx & @r11 | @rbp >> @rsp ^ @rbx ^ @rdi ^ 15 ! @rsi + $teb << @rdx << @rbp >> 0n11 << @r8)  { test_statement(0x20E0); } elsif (@rbp << @rsp))@rbp << @rsp) { test_statement(0xB80); } elsif (@r13 >> @r11 | 0y1110 ^ 23 ^ @r12 <> 0y1101 & @rdx & +@rbp ^ 0x13 ^ $proc | @r8 & @rax | @rax ^ $ip | @rsp) { test_statement(0x2313); val = @rsi ; @rax = @r8 | 6 ;  // /* This is a comment  }
$error$
$end$
887
 if ($proc << @r9 << @r8 >> @r12 << @rbx >> 0x13 >> -(~@rsi) & ~@r12 << 0x0 ^ @r13 << 0xC ^ @r12 >> @rdx | @r10 << @r11 >= $proc << @r9 << @r8 >> @r12 << @rbx >> 0x13 >> -(~@rsi) & ~@r12 << 0x0 ^ @r13 << 0xC ^ @r12 >> @rdx | @r10 << @r11)  { test_statement(0xB27);  This is a not opened comment */ } elsif ($thread >> @rdx ^ @r8 | 0n19 & -$teb ^ @rbx < @rsi << ~@rbp & $teb ^ @r11 >> @r9) { test_statement(0x478);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@r13 ^ @rbx((+@r13 ^ @rbx) ; } else { test_statement(0x1CEC); }
$error$
$end$
888
 if (@r8 & +@rsi & 0y1 >> (+@rsi) & @r13 & ~+@rax ! @r8 & +@rsi & 0y1 >> (+@rsi) & @r13 & ~+@rax)  { test_statement(0x2004); } elsif (@rbp << -$thread & @rdx & @r12 ; @rax >> $proc >> @rbp & -@rdi >> @rsi ^ 0y110 ^ 0x7 | @rbx & @rax & @rbx) { test_statement(0x12E3); val = $thread & @rbp | +0y1111 ^ $thread | +@r10 | ~(0y101) ;  This is a not opened comment */ ;  if (++0))++0)  { test_statement(0x2229); } elsif ($thread >= $thread) { test_statement(0x10BB); }  /* This is a not closed comment } else { test_statement(0x1835); ;  /* This is a comment */  while  (@rdx ! @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; 0y10 >= @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; ; }
$error$
$end$
889
 if (~@rax + @r10 << 0n6 << $proc >> +@r12 >> @r9 >> 0n11 ^ ($thread) >> @rax >> @r11 & $ip >> @r10)~@rax + @r10 << 0n6 << $proc >> +@r12 >> @r9 >> 0n11 ^ ($thread) >> @rax >> @r11 & $ip >> @r10)  { test_statement(0x92E);  break;  This is a not opened comment */ }
$error$
$end$
890
 if (@r11 << @rdi & @rax & @r12 >> 2))@rdx + 0x4 << @r8)  { test_statement(0xB0A);  while  (@r8 | @r13 ^ 0xA | $teb | (@r9) == @rax & +~@rax | @r12 ^ @rax | @r12 | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x16D4); }
$error$
$end$
891
 if (0y10010 << ~@rbx << 0x7 | 12 & @r11 >> @r12 > @r10 + @rsp >> $ip >> $teb & @rdi << $thread >> @r12)  { test_statement(0x1961);  break; } elsif (@r12 >> @rdx & @rbx >> @r11 ^ @rdi(@r12 >> @rdx & @rbx >> @r11 ^ @rdi) { test_statement(0x2649); @rax = 6 & @rsp | ~@r13 | 0y111 ; }
$error$
$end$
892
 if (@r8 + 0y1101 << 0x11 << -@r9 >> @rdi & @rsi & @r12 >> @r13 & @r10 & @r10 != @r8 + 0y1101 << 0x11 << -@r9 >> @rdi & @rsi & @r12 >> @r13 & @r10 & @r10)  { test_statement(0x1947);  if (@rdx ^ @rdx ^ -@rbx | @rbp ^ 0y10010 >< 0x1 | @r12 ^ @rbx | 0y0)  { test_statement(0x474); }  This is a not opened comment */  if ($ip(($ip)  { test_statement(0xD57); } elsif ($buffer)$buffer) { test_statement(0x226A); } }
$error$
$end$
893
 if (@rdx + @rsi >> @rbp << $buffer | 0n15 >> @r13 >> @r10 & @r8 & @r12 & 0n16 ^ $buffer ^ @r8 & 6 ^ @rax = @rdx + @rsi >> @rbp << $buffer | 0n15 >> @r13 >> @r10 & @r8 & @r12 & 0n16 ^ $buffer ^ @r8 & 6 ^ @rax)  { test_statement(0x19E7); val = $proc | 0x0 & (@rbx) | @r9 ; } elsif ($proc << @r13 >> @rbx >> 0y1101 & 0n10 ^ 0x1 >> @rdi & $teb ^ 0n14 & 0y101 ^ @r13 ^ 0n14 | @r11 ^ @rdx & @rsp | @rsi | @r10 | @rbp | @rbp((@r10 & -@rbx >> 1) { test_statement(0x140B); } elsif (@rsp >> @rdi & 0y1100 ^ @rdi & 2 | (~$thread) ^ @rdi ^ @rbp ; @rsp >> @rdi & 0y1100 ^ @rdi & 2 | (~$thread) ^ @rdi ^ @rbp) { test_statement(0x556); } elsif (@rbx & @r8 > @rdi ^ @rdi ^ -@r10) { test_statement(0x26EE); }
$error$
$end$
894
 if ((@rsi) & ~$teb << @rdi & $ip >> @r12 & ($thread) ^ 4 >= @r12 + ~@r9 << ~@r9 << @r8 & $proc & @rdi & 0x12 & @rdx | 0x4 >> 0n18 >> @rsi & @rax)  { test_statement(0x555);  This is a not opened comment */  while  (0xB ^ $proc <= @rdi | @r11 | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (+@rdx == @rbx | -@rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi >< @rdi) ; } elsif ($proc << 0n18 & @r10 >> @rbx(($ip >> @r11 >> ~@rbx | @rbp) { test_statement(0x6A5); }
$error$
$end$
895
 if ($thread + @r10 >> @rsp ^ @rdi << @rbp >> @r9 >> $buffer & (@r9) @r9 << @rax << 5)  { test_statement(0x4C0); }
$error$
$end$
896
 if (@r12 + +@r13 << @rdi & $buffer != @rdi + (@r10) & @r12 << @rax >> @r9)  { test_statement(0x1FB6); }
$error$
$end$
897
 if (@rdx + $ip << @rbx >> $teb >> $teb | @r8 << @rbx | $ip ^ 10 & @r9 | 10 @rdx + $ip << @rbx >> $teb >> $teb | @r8 << @rbx | $ip ^ 10 & @r9 | 10)  { test_statement(0x1E65); } elsif (0n10 >> @rbx >> @r8 | $buffer & $proc | 6 ^ @r11 ^ 0x3 < $proc >> @r12 >> @rdx & +@r10 >> @rdx | $ip >> +@r12 & @r12 & @rbp ^ 23 & 0n5) { test_statement(0x26F6); } else { test_statement(0xA45);  for (val = 10; @rbx | $buffer | @r9 <= @rbx ^ @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
898
 if (@rsp << @rdi >> (@rbx) << $proc & @r11(@rsp << @rdi >> (@rbx) << $proc & @r11)  { test_statement(0x206F);  /* This is a not closed comment  /* This is a not closed comment } elsif (@rbx & ~@rsp & $thread)@r11 & @rbp >> @rsi) { test_statement(0x11B8);  if (@r8 | $buffer = @rax)  { test_statement(0x5BE); } else { test_statement(0x1A79); }  /* This is a comment */ ; @rax = $proc ; } elsif ((+@rbp) & 0y10 & $buffer ^ @r13 ^ $proc ; @rbp ^ @r8 | @rdx & 0y1001 ^ @r11 | 0xB ^ -@r12) { test_statement(0x7D5); @rax = @rdi ^ @rdi | 0n3 ; } elsif (@rbp & @r8 ^ -@rdi | @rbx ^ 23 ; @r8) { test_statement(0x2129);  This is a not opened comment */ } elsif (-@rdx = @r8 ^ @rbx) { test_statement(0x108F);  if (@rsp)@rsp)  { test_statement(0x139F); } elsif ($proc <= @rdi) { test_statement(0x63C); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread))15) ; } elsif (0n12 | -@rdx <> @rdx | @rdx) { test_statement(0x132E); } elsif (@rbx == @rbx) { test_statement(0x1278); } elsif ($proc = @r9) { test_statement(0xDB8); } elsif (+(@r8)((@rdi)) { test_statement(0x1011); } else { test_statement(0x1B50); }
$error$
$end$
899
 if (-0x11 + $proc | @rbp >> @r12 & @rdx >> @rdi & +$thread ^ @rdx >> @rdi ^ $proc ^ 0n7 | @r9 >> @r9 | 0n5 ^ @r10 ^ 0y10001 <= -0x11 + $proc | @rbp >> @r12 & @rdx >> @rdi & +$thread ^ @rdx >> @rdi ^ $proc ^ 0n7 | @r9 >> @r9 | 0n5 ^ @r10 ^ 0y10001)  { test_statement(0x16C8);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ^ @rdx | 0x8 | @rsp((@rbx) | @r12) ;  /* This is a not closed comment } elsif ($teb << 0n11 >> @rax >> 0y10011 >< @r12 << @r11 >> 0xB >> @r9 & @r8 & ~+@r9 & +12 | @r8) { test_statement(0x8A1);  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
900
 if (@rsp + @rbp << @rbx >> -@rdi | $teb >> 0y1001 & @rbx & 0x3 | +($teb) >> @rbx ; @rsp + @rbp << @rbx >> -@rdi | $teb >> 0y1001 & @rbx & 0x3 | +($teb) >> @rbx)  { test_statement(0x5CF); }
$error$
$end$
901
 if (0x8 << (5) << @rbx >> 0y1010 << @r12 >> $ip >> +@r9 <> $ip + @rdx >> @r10 >> 16 & 0y1 << @r10 ^ $buffer << $ip & 0x13)  { test_statement(0x1FB2); } elsif (-@r13 << 0y111 >> @rax >> $ip & @rax >> -0xF = 0y1101 << @rsi >> @r10 >> $proc & $proc) { test_statement(0x12E6); }
$error$
$end$
902
 if (0xA + @r10 ^ @r11 << @rdi >> $buffer ^ 0x13 >> @r8 & @r12 | $proc >> 0n9 & $teb >> @rbp ^ $teb >> @r9 & +0y1011 ^ @r9 | 0x12 ^ ++$ip & @rdi <= 0xA + @r10 ^ @r11 << @rdi >> $buffer ^ 0x13 >> @r8 & @r12 | $proc >> 0n9 & $teb >> @rbp ^ $teb >> @r9 & +0y1011 ^ @r9 | 0x12 ^ ++$ip & @rdi)  { test_statement(0x1B55); } else { test_statement(0x627);  break; }
$error$
$end$
903
 if (@rax << 0n15 << @r8 >> $buffer << @r10 >> 0y1111 & $thread << @r10 >> @rsi >> 0y110 > @rax << 0n15 << @r8 >> $buffer << @r10 >> 0y1111 & $thread << @r10 >> @rsi >> 0y110)  { test_statement(0x22A); }
$error$
$end$
904
 if ($thread + $proc << +$thread << @r13 >> $ip >> 0y1010 | @rdx >> -~0n19 >> @rbx > $thread + ~@rbx << $buffer << $ip >> -0n3 << 0x4 >> $proc & @rdi << @r10 >> @rdx & 0n14 ^ (@rbx) >> @r12 >> @r10 | $ip >> $ip >> @rsp)  { test_statement(0x1989);  if (@r12 ^ $ip ^ @rsi @r12 ^ $ip ^ @rsi)  { test_statement(0x1775); } else { test_statement(0x156); }  if ((@r12) ^ @r8 22)  { test_statement(0x1CFC); } else { test_statement(0x15AE); }  break; }
$error$
$end$
905
 if (@r9 + $proc << @rbp >> @r8 & @r11 & @rsi & $teb & (@rax) ^ 0n8 != @rax << @rax << @r11 >> 11 << 0x0 >> @rdx)  { test_statement(0x35F);  // /* This is a comment  } elsif (@rsi << $buffer >> $teb >> $buffer | (~0x10) >> @rbx ^ ($teb) | @rsp ^ @r13 ^ @rbx @r8 << @r9 >> @r10 ^ @r8 ^ @rdx | $thread ^ @rdx ^ 0y1 ^ @rax) { test_statement(0x35F); } elsif (@r8 >> @r8 & @rdi & ~@rdi >= @r8 >> @r8 & @rdi & ~@rdi) { test_statement(0x180B); } else { test_statement(0x23C0);  /* This is a comment */  break;  for (val = 10; ~14(($thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  if (14 <> @r13)  { test_statement(0xFAA); } }
$error$
$end$
906
 if (@rax >> ~0n13 >> @rsi >> -@r12 & @rdi << @rbp & ($proc) ^ @rsp << $ip & ($ip) >> (~@r11) & 0y10 | +$ip << @rbx >> $proc ^ $buffer ^ @rdi ^ @rbx ^ (@r11) | 0xF & 0n6 & @rsi ^ @r9 != @rbp + @r9 >> @rsp >> @rdi ^ @r9 >> $thread)  { test_statement(0xC4B);  if ($proc & $proc | +@rsi | 6 | $teb <= @rax & @rbp | 0 ^ @r9 | 0y110)  { test_statement(0x21EC); } } elsif (@rbx >< @rbx) { test_statement(0x2458);  This is a not opened comment */ }
$error$
$end$
907
 if (@r12 << @r12 >> @rdx << (@r8) >> @r13 >> (+-@rax) != @rsi + @r11 >> @rbx << $buffer ^ @r8 >> @rbx & $buffer & @r10 ^ @rsp >> (@rbx) & @rdx ^ @rbx & @rdx)  { test_statement(0xDDA); val = $thread ^ ~@r8 & $buffer | $proc ;  /* This is a not closed comment } else { test_statement(0xD83); @rax = @rsp ; @rax = @rbp ^ (-0x2) ; }
$error$
$end$
908
 if (@rax & @r8 << $ip & $buffer & @rbx & @r11)(@rsi) + $teb << @r10 >> @r9 << @r9 >> 0x3 >> $teb ^ $buffer >> $teb ^ @r11 | @r8 << $buffer & @r9 ^ $proc | 0n6 & @rbx ^ 0n7 & $ip)  { test_statement(0x8EB); }
$error$
$end$
909
 if (@r13 >> $proc << -~$buffer >> 5 & $proc << 0y1110 ^ $ip ^ 21 >> 0y10010 & @rsp & $ip ^ ~@r10 & @rsp ^ $ip | 0y110 << @rdi))$buffer << @rdx >> @r11 >> 0n4 >> 0y10010 & 0y10011 << @r9 ^ @rdx >> @r8)  { test_statement(0x1BEA); } else { test_statement(0xAB);  // /* This is a comment   /* This is a comment */ }
$error$
$end$
910
 if (@rdi + $proc << 22 << 0n5 >> -@r8 << $ip ^ @rdi << @r10 >> 0y10 >> ~@rbx ^ 0y0 >= @r10 | -@rsi >> @rbx & @rdi >> @r8 & 0x6)  { test_statement(0x173C); } elsif (@r12 & @rax >> @rbx & @r11 ^ @rsi | (@r13) >> $buffer ^ --0y11 | @rbp ^ 0y10001($buffer >> @rdi >> (0x9) | $proc >> $thread & +@r12 ^ @rdi & @rbp) { test_statement(0x1134); } elsif ((@r10) & @rbx & @rbp ^ @rdi & @r12 | @rbx ^ 0y111 <= @rsp >> @r11 ^ ~@rdx) { test_statement(0x1232);  /* This is a comment */  /* This is a not closed comment }
$error$
$end$
911
 if ($thread >> 0xA << $teb | $ip << 0n11 >> @r11 ^ @rsi >> @r9 & @rdx ^ -$proc | @r9 >> @rbp ^ @rsp & @r12 ^ ($thread) | ~@r9 & @rsi | $proc <> @rsi << $proc << @rsi)  { test_statement(0x15F5); } elsif ((@rdi) ^ @r9 >> @r12 < +@rdx << $proc >> @rsp >> 0x5 | $teb >> @r10) { test_statement(0xF2E);  if (@r10 ^ $ip > @rdi ^ 0y10000 | @rbp | @r10)  { test_statement(0xE2A); } elsif (~-~@rdx(~-~@rdx) { test_statement(0x81D); } else { test_statement(0x24CA); } val = $teb | @rsi | @rdx ; }
$error$
$end$
912
 if (@rbp & (~@rax) >> 0n8 | 0n10 << 20 ^ @rdx | @rbp >> -0n18 & ~@rsp & @r10 ^ (23) & $teb | ~@rdx & @rbp | +@r13 ! @r12 & 0y1111 >> @r12 >> @r10)  { test_statement(0xE2B);  break; ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip)0n6) ;  if (@r13 ; @r13)  { test_statement(0xF6F); } else { test_statement(0x110E); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 <> $teb) ; } else { test_statement(0x1D20);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx((@r10) ; val = @rbx | $thread ;  while  (0n16)0n16)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
913
 if ((+@rbx) >> +($teb) << @rsp >> $buffer >> @rsi & @r13 << @r12 >> ~@rdx >> +1 & $buffer & @r13 & @rbx | $teb & 4 >> @rbp & ~@r13 & $teb | @r11 >> 12 & $teb & $ip = @rdi << $buffer >> @rbx ^ 0n16 & -@rbx ^ 0n16)  { test_statement(0x5FC); } elsif (0y110 >> (+@rsi) >> @rbp & $teb & 23 & 2 | 0n14 & @rsp & 7 | @rax < +$buffer << $buffer >> @rbx >> ~0y100) { test_statement(0x6CE);  break; } elsif (@r11 & 0x1 & 0y1101 == $ip >> $thread & @rdi & @r9 | $proc) { test_statement(0x454); } else { test_statement(0x103);  /* This is a comment */ ; }
$error$
$end$
914
 if ($buffer >> $proc << @rbx & -0xA >> $proc & @rsp | @rdi << $buffer & $thread ^ @r10 >> @rax & @r8 ^ $teb & $buffer | @rsp ^ $ip & $ip ^ @rax < @r12 + @r13 | @r11 & 0n10 & (@r11))  { test_statement(0x583); }
$error$
$end$
915
 if (@rsp + (0n19) << +(@rdx) << @r10 >> $ip >> 0n17 >> @r13 & $proc >> @r12 >> +@rbp ^ 0n3 << 21 >> @rsi ^ @rdi & $thread ^ +0y1101 & $thread ^ 0xE != @rsp + (0n19) << +(@rdx) << @r10 >> $ip >> 0n17 >> @r13 & $proc >> @r12 >> +@rbp ^ 0n3 << 21 >> @rsi ^ @rdi & $thread ^ +0y1101 & $thread ^ 0xE)  { test_statement(0xC96);  /* This is a not closed comment } else { test_statement(0x1584); }
$error$
$end$
916
 if (@rbx + 21 << @rdi >> @r12 ^ @rax >> @rbx & @rsp >> $proc & @rbp & $proc | @rsp << @r8 >> ~@rdx >> $ip ^ @r10 & ~@r12 ! @rbx ^ $ip << (@rbx))  { test_statement(0x1C9A); }
$error$
$end$
917
 if ($proc & @rax << ((@rdx)) >> @rax & $teb >> $teb & 0x7 & 0n7 | 0y110 << @r10 & @rbx >> 0y1011 & @r9 & @rbp | @rbp & @r13 & @r10 ^ @r11 ^ $teb | -@rbp & @rdx ^ @rdx | @rdx >< 0y1011 + $proc ^ @r13)  { test_statement(0x50E); ; } elsif (~$buffer >> $buffer >> $buffer & @r13 >> (@rdi) & @rbp & @rdx ^ $buffer & +@rbp & 0n2 | @rbx | @rsi & $teb | @rbp ^ $thread <= @rbp << @r9 & -+@r12 >> $teb ^ @r10 | @r8 >> @r11 ^ @rax & @r9) { test_statement(0x5BE); } else { test_statement(0xF5D);  while  (@r9 <= @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
918
 if (@rbp + $buffer << @rbx << 0y10001 >> $buffer ^ @r13 ^ @r11 >> -~@r12 ^ $teb & @rsp)-~0n12 >> 0y1011 >> $proc >> @r13 ^ @rsi << $teb >> $teb & @rsp >> $buffer ^ @r13 & $ip)  { test_statement(0x11C);  break; } elsif ($thread = $buffer << ~@rdx >> $ip >> @r10 & @r10 >> @rdi & ~@rdx ^ @rsp | @r13 & @r8 & @rbp ^ $ip & @rsi) { test_statement(0x16EA); } elsif (@rsi ^ ($ip) ^ +@rdx ^ @r13((@rsi ^ ($ip) ^ +@rdx ^ @r13) { test_statement(0xC1F);  while  (@rbp != $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi(0n13 & $teb | @rbx | @rdi | @r13) { test_statement(0x156B); } elsif (0n5 ^ @r13 != 0n5 ^ @r13) { test_statement(0xC42); } elsif (@r9 | @rsp ; @r9 | @rsp) { test_statement(0x244B); }
$error$
$end$
919
 if ($teb >> @rsi >> @rbx & 0y10011 >> @rsp >> @r12 & $teb >> @r9 ^ @rbp << @r9 ^ @r13 & $teb & @rax ^ $proc | @rbx & $thread >> @rdx ^ 0y101 & @rax & 22 > @r8 + @rdx | 0y1110 >> 0n12 & +@rbx >> $buffer & $ip & @r11 | 0y1000 & 0x13 & @rsi | -0y1110 ^ @rax)  { test_statement(0x2072);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp | $proc = @rsp | $proc) ; @rax = $teb & $ip ;  for (val = 10; @r9 | @rsp <> ~@rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (3 >> (@rsp) ^ $ip & @r9 & @rsp | $buffer ^ @r9 & @rbp | @rbx ^ 0n9 ^ @r13 | 0n5 ^ (@rdx) | @r11 | @rdx((3 >> (@rsp) ^ $ip & @r9 & @rsp | $buffer ^ @r9 & @rbp | @rbx ^ 0n9 ^ @r13 | 0n5 ^ (@rdx) | @r11 | @rdx) { test_statement(0x1902); } else { test_statement(0x432); }
$error$
$end$
920
 if (+0y1101 + $ip << @r13 = @rbx >> 0x5 << @r11 >> @r11 ^ $teb << @rsp & @rdi >> @r9 ^ @rsi >> $buffer ^ @rbx)  { test_statement(0x11AF);  // /* This is a comment   if (@rsi ^ @rbp ; @rsi ^ @rbp)  { test_statement(0x1B07); } elsif (-0xE)-0xE) { test_statement(0x4D8); } } elsif (@rdx >> @rdi & $ip ^ (@r10) >> @rsp)0y10001 >> @rdi >> $thread & $proc >> 0y10011 & +@rax ^ @r11 ^ @rax ^ @r11) { test_statement(0x332); }
$error$
$end$
921
 if (14 + $ip <> 11 + @rsp | (@rbp) << @rbx >> @r11 & @r13)  { test_statement(0xBB9);  // /* This is a comment  } elsif (-@rdi << $teb ^ $buffer >> 0x7 ^ 0y0 & $ip ^ @rax | $thread & +@r9))(@r11) << @rbx >> 0n16 & @r10 & @r10 & @r11 | @rsi >> @r10 ^ @r9 ^ @r12 | (0xE)) { test_statement(0x1467); } else { test_statement(0x1B2F);  for (val = 10; @rdi | @r12 | -@rsp)0n19 ^ @rsi | -@rbx | $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
922
 if ($thread << 0y10010 << $teb >> 13 << 0n6 >> 0n3 & 0y1101 << @r10 ^ @r11 << @r8 & $ip ^ 0n9 | @rbp << @rbp >> @r8 >> @r11 ^ @r11 >> -$proc & @rsp ^ @rax & ~$thread ^ @rsi ^ (@r13) > @rdx << $ip >> @r13 << @rdx & $ip ^ -$thread << @r8 & $ip | @rbx << (+0xA) >> @r9 ^ @r8 & $ip ^ $ip & +@r9 ^ @rdx ^ @r9 | 0y1011 & -@rsi ^ @rbp)  { test_statement(0xDDD); } elsif (@rbx >> @r9 & $proc >> $ip ^ @r13 ^ $teb & @r10 | ~0n4 & @rdi ^ 0y11 & @rsi | 0n13 & +22 ^ @rdx ^ @rdx | @rbp >< @rbx >> @r9 & $proc >> $ip ^ @r13 ^ $teb & @r10 | ~0n4 & @rdi ^ 0y11 & @rsi | 0n13 & +22 ^ @rdx ^ @rdx | @rbp) { test_statement(0x59D); } elsif (@rdi >> @rsp & @rdi ^ 0y10000 & 2 ^ @r12 ! 0n9 >> @rdx | 0xF ^ @r11 | @r12 ^ 0xE | @rdi) { test_statement(0x722);  while  ($teb < ~@rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x18B1);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx = @rbp ^ 0n3) ; ; }
$error$
$end$
923
 if ($ip + $thread << $proc >> 0y11 >> $proc >> @rsp($ip + $thread << $proc >> 0y11 >> $proc >> @rsp)  { test_statement(0x1CB3); } elsif ($teb << @rbx >> @rdi & 0y1000 >> @r9 & ~0y1011 & @r9 | 3 >> @rbx | @rax & @r8 < 0n6 ^ @rsp & -@rax & @rsi) { test_statement(0xA2C); } elsif (+@rdi & @r8 ^ @r11 ^ @rdi ^ @r10 <> +@rdi & @r8 ^ @r11 ^ @rdi ^ @r10) { test_statement(0xCC9); } elsif (@r8 & @rax ^ 0xC)(@rdi) & @r9 ^ -0n0) { test_statement(0x240); } elsif (0y1 == 0y1) { test_statement(0xD59);  while  (@rbp >= @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx | @rax >= @rbx | @rax) { test_statement(0x859); }
$error$
$end$
924
 if ($proc + @rax << @r11 << 0y1001 & $teb ^ @rdx >> $thread >> $thread & @rdx >> @rbx & -+0n11 & @rdx | (0n2) >> @r12 | @r13 >> @rbp ^ @r10 & @r8 ^ $teb ^ 0n3 | $thread != @r10 << 0y1000 >> @rdi >> @rbp & 0y101 << $ip >> @rax >> -@rsp & @rbp >> 0n1 | @r12 << @rbx & @rdx >> @rax | @r9 >> $ip & @r11 | @rsp)  { test_statement(0x1FC5);  This is a not opened comment */  break;  break; } elsif ($ip & @rsi >> $thread & @rax | 0y10001 >> @rbx | @rdi ^ @rdi ^ $teb | @r10 | 0y1001 | @rsi <> @rdx << $thread & @r8 >> @rbx) { test_statement(0x10F2);  break;  /* This is a comment */ }
$error$
$end$
925
 if (@r12 + $buffer << @r10 >> @rdx <= @r12 >> @rax)  { test_statement(0x22CC); } elsif (@rbp << $ip ^ $ip & @r12 | $buffer ^ @r11 & -@rbp ^ @rsi ^ @rsp | @rdx & @rsp <> @rbp << $ip ^ $ip & @r12 | $buffer ^ @r11 & -@rbp ^ @rsi ^ @rsp | @rdx & @rsp) { test_statement(0x1FF5);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 | (@rbx) ! $thread) ;  /* This is a comment */ } elsif ($ip & $thread & @rdx ^ @r9 ^ @r8 ^ @r12 | 7)-0y100 >> @rsp & 0x7 & @rsp ^ 0x4 & @r12) { test_statement(0x1903); } else { test_statement(0x1C7B); }
$error$
$end$
926
 if ($thread + @r10 << $teb << @rbp ^ @r13 << @r8 & @rbx >= @rbx << 0y1011 | 0xE << @r13 >> -@rax & @rsp ^ @rbx >> ~~@r11 & $buffer ^ @rbx & ~0x7 ^ @rbx | @r9 ^ @r8 ^ 17 ^ $ip)  { test_statement(0xB8C);  break; }
$error$
$end$
927
 if (@r8 << 0xD >> @rsp & @rsp & @r12 & @rbp & @r9 ^ @rsp << @rax >> @rbx >> @rbp & @rsi | @r10 << @r9 >> @rax >> @r8 & 0n2 >> @rsp ^ @rsi & $proc | $ip >> -~0y101 | @r9 ^ $ip ^ 3 == @rdi >> $buffer | ($proc) << $thread & @rbx & @r8 & +@r13 | @rdi & 0xD & $ip | 0x1 & ~@r12)  { test_statement(0x1BA0); } elsif ($proc & @rdi ^ 0y0 >> $buffer ^ @rsi & @rdi ^ @r8 ^ ($ip)(($teb >> @rdi >> 0x0 & +@r12 >> $proc & $thread | (@r10) & @r8 & 0y1001 | $thread) { test_statement(0x59B);  if (@r12 ! @r12 | @r11)  { test_statement(0x2185); } else { test_statement(0x25C5); }  /* This is a not closed comment  /* This is a comment */ ;  while  (@r8 @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x22BA); }
$error$
$end$
928
 if (17 >> ~@r9 >> @r8 >> 0xA ; 17 >> ~@r9 >> @r8 >> 0xA)  { test_statement(0x2BF); } else { test_statement(0x2702);  while  ($proc ^ @r13 < $proc ^ @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
929
 if (@rsp + @rbx >> @r9 << @r9 | @rax & $proc >> @rsi | 17 >> $buffer ^ @r9 | @r12 & @r8 | @r12 = $ip << 0x7 << @rdi)  { test_statement(0x1B69);  This is a not opened comment */  break; } elsif (-@r9 >> ($teb) | @r9 & @r12 | @rdx & 0xD ^ @r10((-@r9 >> ($teb) | @r9 & @r12 | @rdx & 0xD ^ @r10) { test_statement(0x1651);  This is a not opened comment */ } else { test_statement(0x1227);  if (@rbp ^ 12 != @rbp ^ 12)  { test_statement(0xCCF); } elsif (@r13 | 0xF(@r13 | 0xF) { test_statement(0xE75); } }
$error$
$end$
930
 if (@rdi + @rax << @rdi >> $buffer & ($thread) << 0n14 | @rbx & @r10 & @r12 & @r8 ^ @rbp >> @rdi | @r8 = @rdi + @rax << @rdi >> $buffer & ($thread) << 0n14 | @rbx & @r10 & @r12 & @r8 ^ @rbp >> @rdi | @r8)  { test_statement(0x50E); } elsif (-@rsp << @r11 >> @rsp >> @rbx | @r10 & -$proc & @rsi | @rax))@rax << @r13 ^ 0x9 & $buffer ^ @rdi ^ @rax) { test_statement(0x1378); } else { test_statement(0x108E); }
$error$
$end$
931
 if (0y0 + @r13 << @rsi << (@r8) | 0 >> $ip | @rbp & 1 | ~$thread & @r13 ! 0y0 + @r13 << @rsi << (@r8) | 0 >> $ip | @rbp & 1 | ~$thread & @r13)  { test_statement(0x130); } elsif (23 >> $ip ^ @rax ^ $thread ! 0n15 << $thread >> 0y100 & @r13 >> $ip ^ 0n19 & @rsp | @rax & 0n6 & ~(-@r12) ^ 0n10 & @r8 ^ +@rbp | @rdx ^ 14) { test_statement(0x58A); }
$error$
$end$
932
 if (@rax + 0n7 << @rsi ^ @r10 >> @r8 >> @rsp ^ @rdx & -+0y10010 < @rax + 0n7 << @rsi ^ @r10 >> @r8 >> @rsp ^ @rdx & -+0y10010)  { test_statement(0x1431);  for (val = 20 & ~0y1001 | @rsi; ~$thread & 0n3 ! @r9 & @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx << 0n6 >> @rax | 3 & @r10 & $thread ^ @r10 & +$buffer ^ $buffer >= $buffer >> 0y10 & (-~0y1111) | @rbx | $buffer) { test_statement(0xBFE); } else { test_statement(0xD9B); }
$error$
$end$
933
 if ($buffer + @rbp >> @rsi & @r11 >> @rax >> $thread & @r10 | @r12 << ~@r12 & @r8 >> @rbx & 0y1000 & @r8 | @rdi >> @r13 & $proc ^ -@r8 & $thread | @r9 | $buffer ^ @r13 | $buffer ; $buffer + @rbp >> @rsi & @r11 >> @rax >> $thread & @r10 | @r12 << ~@r12 & @r8 >> @rbx & 0y1000 & @r8 | @rdi >> @r13 & $proc ^ -@r8 & $thread | @r9 | $buffer ^ @r13 | $buffer)  { test_statement(0x241B);  /* This is a not closed comment }
$error$
$end$
934
 if (@rsi + @rsp & $teb & (@rbp) >> @r10 ^ 23 >> @r11 >> @r11 ^ @rbx >> 0y10000 & @rax = @rbp + 3 >> @rsp << @rbx >> @rdi >> @rbx & @rsp & @rbp)  { test_statement(0x206); @rax = @r8 >> 0y10001 ; } else { test_statement(0xDFA); }
$error$
$end$
935
 if (@rbp >> 0y0 >> $teb >> +@rbx | $thread >> @r8 >> @rax))@rbx + @rax >> 0n18 & @rbp ^ @rbx << +0n2 >> @rsi & @rbp)  { test_statement(0x26DF); } elsif ($buffer << $proc | @r13 >> ~(0x5) & @rsi & @rax == @r13 << @r12 >> +@rax ^ @r8) { test_statement(0x131E); } else { test_statement(0x24); }
$error$
$end$
936
 if (++@r10 + @rsi & @r9 >> $buffer ^ @rdx ^ @rbx & @rsp & @rsp | ~11 | $thread >> 6 & $ip & @r8 ^ 1 ^ -@rdx == $thread + @rbp & $teb >> @rax >> @r12 & @rax >> @r11)  { test_statement(0x2050); } elsif (0n1 << @r8 != -+~@rax << @rbp >> @rbp ^ ~$buffer | @r10 & $buffer) { test_statement(0x7E2);  while  (15 ^ $buffer | @r13 < 0n8 ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@rbx ^ 0y100 & $ip ^ @rdx(@rbp >> @rsp & 0y1101 & @rsi | @rbp & @rdx | @rax) { test_statement(0xD0); } else { test_statement(0x1440); }
$error$
$end$
937
 if (@r8 + @rdx >> @rbx >> @rbp & 5 >> @r8 >> @rbx ^ $thread << @rax >> @rbx ^ @rsi >> (@r9) | @r10 | @r13 >> $thread & @rdi | @r11 & $teb | -@rbx @r8 + @rdx >> @rbx >> @rbp & 5 >> @r8 >> @rbx ^ $thread << @rax >> @rbx ^ @rsi >> (@r9) | @r10 | @r13 >> $thread & @rdi | @r11 & $teb | -@rbx)  { test_statement(0x2439);  /* This is a comment */ } elsif (@r9 & @rbx >> @r9 & @r12 ; +0n17 << $proc ^ @r9 & @rsi & @r8) { test_statement(0x102); } elsif (@rsp >> @rsi & @r8 & +@rbx ^ @r8 | @rbp ^ @rbx ^ 0n4 | $teb ^ $teb | $thread(@rdx >> (@rsp) & @r13 & @rdi | @rdi | @rsp) { test_statement(0x20B0); } elsif ($ip ^ $proc ^ $buffer | 0xD | $buffer((@r8 & @r9 ^ @rdx | @rax ^ 0n5) { test_statement(0xE5D); } elsif (@r13 ^ @r10 | $thread == @rdi) { test_statement(0x2B0); }
$error$
$end$
938
 if (0y101 >> 0y10011 << @r10 >> (~@r13) >> 0n15 & 0n7 >> @r11 >> @r12 & 0x8 >> @r13 | @rbx << @r11 | @rdx >> $ip & $proc & 0xB | @rdi & @r9 ^ $buffer <= @rsi + $buffer)  { test_statement(0xAFB);  while  (~7 | @rax | 0n15 | @r13 <> ~7 | @rax | 0n15 | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rbx | 0y1100(0n12 ^ $thread | 0y10011)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y1101 | +@rdx >> $proc & 0y1100 ^ $thread & @r10 ^ @rsi ^ $thread | @rbx ^ 0x9 ^ 0x4 | @r9 ! @rsi >> 0y1011 & 0xC & 0y1101 & 0xC ^ 0xA >> @r10 | $thread >> @r11 ^ @r12 ^ $thread ^ @rbp) { test_statement(0x1BD7); }
$error$
$end$
939
 if (0n19 + @r12 << +$buffer & +0n10 & $ip & @r8 | 0x7 >> @r10 & @rsi ^ @rbx >> @rbp & @r13(0n19 + @r12 << +$buffer & +0n10 & $ip & @r8 | 0x7 >> @r10 & @rsi ^ @rbx >> @rbp & @r13)  { test_statement(0x48E); }
$error$
$end$
940
 if ((+~@rdx) ^ @r12 & 0y110 ^ @r8 >> @rdx >< (+~@rdx) ^ @r12 & 0y110 ^ @r8 >> @rdx)  { test_statement(0x900); }
$error$
$end$
941
 if (@r12 << 0y1100 << @rdx ^ @rsi << @rbx >> @rax ^ @r10 | (+$ip) << 0y1001 >> @r12 >> @r10 | @rbp >> @rax & @r8 & @rdi ^ +$thread ^ @rbx | 0n6 ^ @rbx ^ @rbp | 0n3 | $thread = +$buffer + $proc >> $proc << @rbx & 0n12 & (0n8) >> @r12 & @rdi & $thread | @r10 & $buffer >> @r9 & ($thread) ^ @r11 | $thread ^ @rdi & @rax ^ @r12)  { test_statement(0x1085);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip & @r8 ^ @r8 ^ @rsi = @rsi ^ @r9) ; }
$error$
$end$
942
 if (@rdi + @r12 | @rbp & +$thread | @r12 & @rbp & (@rax) ^ @rbp ^ @rsi | @rdx & @rax ^ 0n14 ^ @rbx | @rax ^ @rdi | $proc | @rsi <= @rax + @r8 >> 0xA >> $ip >> @r9 & 0x5 >> $thread >> 0y10010 & @r13 >> 0xF & @r8 & $thread ^ 0x10 & 0y1001 >> 0x4 & ~(@r9) ^ @rax ^ @r8 ^ @r10)  { test_statement(0x19E6);  /* This is a not closed comment } else { test_statement(0x3CE);  This is a not opened comment */ @rax = 0n15 ^ $ip ; }
$error$
$end$
943
 if (@r8 + @rdx << @r8 << @r10 | $ip >> @rsi >> ($thread) >= @r8 + @rdx << @r8 << @r10 | $ip >> @rsi >> ($thread))  { test_statement(0x23A8);  for (; 3 | $ip > @rsi & @r11 | $thread ^ $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x382); }
$error$
$end$
944
 if (@rsp << 6 & ++@r13 << @r9 >> @rdx >> $teb & $proc & $teb & $proc(-@rbx + @rbp << 0x4 >> 0xB ^ +@rdi >> @r12 & @r9 & $buffer)  { test_statement(0x44B); }
$error$
$end$
945
 if (@r12 + $ip >> @rdi << 0y10001 & 1 << @rsp & -@r13 & (@r10) & -@r11((@r12 + $ip >> @rdi << 0y10001 & 1 << @rsp & -@r13 & (@r10) & -@r11)  { test_statement(0x17DB); ;  while  (@rsi)@rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@rsp << @rsi | (0x12) >> @r12 ^ @r11)@rsp << @rsi | (0x12) >> @r12 ^ @r11) { test_statement(0x1B87);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (2) | $proc | $thread <> -0n7) ; } elsif (@r8 >> @rsp ^ -@r10 & @rbp | 0n1 ^ $ip ^ @r9 | @r9 ^ 0y1100 | 0xD = 0n9 >> $teb & @r8 & ($buffer) | $ip | $ip) { test_statement(0x26CE);  // /* This is a comment   break;  This is a not opened comment */ } elsif ((@r13) & @rsi ^ @r13 | @r10 ^ 15 | -@rax ; (@r13) & @rsi ^ @r13 | @r10 ^ 15 | -@rax) { test_statement(0x23DA);  /* This is a comment */ } elsif (@r12 ^ @rax >< @r12 ^ @rax) { test_statement(0x2654);  This is a not opened comment */ val = @r11 ;  for (; @r11)$thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
946
 if (@rsi + @r11 << ($thread) >> @r13 & -@rsp ^ $buffer ^ $teb >> 0xA ^ @rsi ^ -@rsp ^ +~(@rdx) | 0y1000 ! @rsi + @r11 << ($thread) >> @r13 & -@rsp ^ $buffer ^ $teb >> 0xA ^ @rsi ^ -@rsp ^ +~(@rdx) | 0y1000)  { test_statement(0xABF);  // /* This is a comment   while  (~@rsp < ~@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y11 ^ @r12 & 3 & 0n3)@r11) { test_statement(0x176); } elsif (14 & @rax | $proc & $teb)14 & @rax | $proc & $teb) { test_statement(0x1A2E); } else { test_statement(0x1621); val = -@rsi ^ $teb | @r8 | $proc ; }
$error$
$end$
947
 if (~@rsi + @r11 << @rdx & @rdi >> @rbp ! @rbp << @rsi << @rsi >> +@rax & @r8 << @r12 >> $buffer & $proc >> $ip & 0n14 & 2 | $buffer >> @r8 | @rsp >> @rdx)  { test_statement(0x2603);  /* This is a comment */ ; } elsif (@r9 >> @rdx >> @rsp ^ @rsp >> @rsi ^ 10 | -@r13 | $ip | @rdx | $teb = @r11 ^ $buffer & ~@r10) { test_statement(0x1829); ;  /* This is a comment */ val = @rax ; } elsif (14 >> $ip ^ $proc ^ $teb ^ 0y100 | @rdi & @r8 <> 14 >> $ip ^ $proc ^ $teb ^ 0y100 | @rdi & @r8) { test_statement(0x16DE); val = @rbx | (@rbx) ; } elsif (@r9 & 0x3 ^ $teb | @r12 | ~23 ; @rax & @rdi ^ 0 ^ 0y10001) { test_statement(0x642);  while  (0y10000 < @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  /* This is a not closed comment  if (+@rdx -@r12)  { test_statement(0x2359); } } else { test_statement(0x2107); }
$error$
$end$
948
 if (0n12 + ($proc) >> @rdx & @r9 & ~0 >> @rdi ^ 0y1101 << @r9 >> @r13 ^ ($proc) >> $teb & $ip & 0x2 ^ @r9 & @r9 | 0x5 << 22 >> 0y1010 >> $teb | ~@r13 & @rdx & @rsi | (@rbx)((0xB + @r11 & $thread << ~+0x11 >> @rsi >> +0n8 ^ 0n0 >> @r12 >> @rsi & -@r8 | @rsi ^ @rbp >> @r12 & @r9 ^ ~$buffer & @r11)  { test_statement(0xD2C); } else { test_statement(0x1C56); }
$error$
$end$
949
 if (@r8 + @rbp >> 15 << @r11 & ~$thread << @r13 >> @r11 & @rdi ^ 0x1 & 0n12 >> 0n18(@r8 + @rbp >> 15 << @r11 & ~$thread << @r13 >> @r11 & @rdi ^ 0x1 & 0n12 >> 0n18)  { test_statement(0x23A7);  This is a not opened comment */ } elsif ($teb >> 0n13 >> @r9 & -0n15 ^ @r8 != @rax << 16 ^ @r13 | @rdi >> @rbx) { test_statement(0x16AC);  This is a not opened comment */  This is a not opened comment */ } else { test_statement(0x1A6F);  // /* This is a comment  }
$error$
$end$
950
 if (@rbx + $teb ^ @r11 << @rbx & @r12 & $thread | (@r12) ^ 0y1110 & @r12 & $teb ^ 0x6 ^ @rsi >= ~@rdx + @rbx ^ -@r12 << $thread ^ @rdx >> $thread | @r10 >> 0y1000 ^ @r10)  { test_statement(0x215); } elsif (0y1010 << 0 ^ 0y0 >> $thread & 0y100 ^ +~0n0 ^ @rsi = $thread >> -@rax >> @rdi & @r10 >> @rdx ^ @r11 & @r13 & 0x12) { test_statement(0x9B4); ;  break;  for (val = 10; @rbx >< @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (12 & 0x11 ^ @rdx & @rax ^ @r10 ^ 13 | $teb & 0x10 ^ -$teb ^ @r11 == $ip ^ $proc ^ ((@r13)) | $proc ^ $proc ^ $ip | @rbp | $proc | @rdi) { test_statement(0x351);  /* This is a comment */ } else { test_statement(0x19C6);  if (@rbx ^ $ip | $thread ; @rbx ^ $ip | $thread)  { test_statement(0x1858); } elsif (@r9 | +@rax >= ~7 | 0y10001) { test_statement(0x1B8); }  while  ($proc = $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rdx > @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  if ($buffer = @rsp)  { test_statement(0xA31); } }
$error$
$end$
951
 if (@rbx << $buffer & $teb >> 0x6 >> $buffer ^ @r8 >> @r9 >> 0y101 > $buffer << ~2 << @r8 ^ 17 >> ~$ip >> $proc & @rbp >> @rbp & 0n10 & $buffer ^ @r12 >> +(@rax) & $ip ^ 0x10 & @r10)  { test_statement(0x7FE); } elsif ((@rbx) << $thread >= (@rbx) << $thread) { test_statement(0x18C);  break; ; }
$error$
$end$
952
 if ($proc << @r10 << @rbp & +@rsp << @rax >> $buffer & @rbp | @rbx >> @rdi & @r8 & (@rbp) <> @rbp + @rdi << $thread >> @rdx >> $proc >> $proc)  { test_statement(0x25FA);  break; } elsif (@r11 << 4 ^ @rsp & $teb & +0n10 @r11 << 4 ^ @rsp & $teb & +0n10) { test_statement(0x2078);  This is a not opened comment */ } elsif (0y1101 & $thread != 0y1101 & $thread) { test_statement(0x17A8); } elsif (@rdx))@rdx) { test_statement(0x26C9); val = @r10 ; } elsif (@rdi = 4 | @r11) { test_statement(0x22D4); val = @r8 ;  /* This is a comment */  /* This is a comment */ } else { test_statement(0xFD9);  for (val = 10; 0x9 ^ -0y0 >= 0x9 ^ -0y0;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
953
 if (@rax & 0n1 ^ @rbp >> $ip >> @r8 ^ @rdi & ---@r11 | $proc << @r13 & @r13 >> @rsp & @r8 | @rsi >> @r11 ^ @r8 <> @rax & 0n1 ^ @rbp >> $ip >> @r8 ^ @rdi & ---@r11 | $proc << @r13 & @r13 >> @rsp & @r8 | @rsi >> @r11 ^ @r8)  { test_statement(0xAB0); ; } elsif (@r9 >> -$thread ^ @rdi >> $teb ^ $teb & @rdi ^ 21 ^ @rbp | 11 ^ @rax & 0n7)@r9 << 0y1111 >> @rdx ^ $teb >> (@rsi) & $buffer) { test_statement(0x1CAC);  if (@rsp ^ $buffer((@rsp ^ $buffer)  { test_statement(0x1A72); } else { test_statement(0x1497); } }
$error$
$end$
954
 if (@rsi + ++$buffer << $teb >> 6 << +$buffer ^ @r11 << @r13 >> ($ip) & @r9 >> @rsp))@r12 << $ip >> @r10 << ($proc) >> @rsp >> @rsp & $proc & @rax >> $ip & @rdi & $teb ^ @rsp << 11 | @rsi << $buffer & @r9 & @r10)  { test_statement(0x1032);  while  (@r13 & $buffer | 10 ^ $proc | (($teb)) | @rdi >= (@rbx) ^ @rsp ^ $thread | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
955
 if (@r10 + $proc << $buffer & $teb << $ip & (0xC) >> $buffer & 0n10 ^ @rdx ^ @r10 >> $teb ^ @rsi != $teb >> @r9 >> @rbp >> @r12 ^ @r12 | @rsi >> $thread | $thread ^ @r12 ^ $thread ^ @rsi)  { test_statement(0x1CE9);  while  (@rsp & -$buffer | ($thread) > 0x8 | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x19FB);  break; val = -@rbx ^ @rax | $buffer | @rsp ; }
$error$
$end$
956
 if ($ip << @r10 >> @rax | @rbx | $ip >> 7 & $thread ^ $thread & @rsi)$ip << @r10 >> @rax | @rbx | $ip >> 7 & $thread ^ $thread & @rsi)  { test_statement(0x177F); } elsif (@r9 & 0x12 >> @rdi ^ @r10 >> +$teb & @rdx ^ $proc & $thread >< @r9 & 0x12 >> @rdi ^ @r10 >> +$teb & @rdx ^ $proc & $thread) { test_statement(0x1DB1); @rax = 0n1 & $proc ;  // /* This is a comment   if ($teb >< $teb)  { test_statement(0xD58); } @rax = ($proc) ; }
$error$
$end$
957
 if (@r12 + @r9 & $ip << @r12 >> ~$ip = @r12 + @r9 & $ip << @r12 >> ~$ip)  { test_statement(0x261E); }
$error$
$end$
958
 if (-$teb >> @rbp >> +@r11 & @r9 << 11 >> 0n9 & $teb >= 0xB)  { test_statement(0x78A);  /* This is a comment */ }
$error$
$end$
959
 if (@r11 + +@r11 << @rax & 0n15 << @r9 ^ 0 << @r13 >> @rdx & @r8 >> -@r8 | @rsi | @r13 | @r12 & 0x13 | @rbx != @r11 + +@r11 << @rax & 0n15 << @r9 ^ 0 << @r13 >> @rdx & @r8 >> -@r8 | @rsi | @r13 | @r12 & 0x13 | @rbx)  { test_statement(0x242F); } elsif ($thread | ~@r13 >> @r9 > @rdx << @rsp >> @r12 & @rbx & @r8 & @rsp | @r9 ^ ~@rbp & +@rbp ^ @r10) { test_statement(0x144C);  for (; 0y1001 ^ $buffer | @rax | @rsi > @r10 ^ +@r11 | -@rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rbx = +@rsi | ~$teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  for (val = @rax; @rax <= @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@r8 & $teb & @rdi | $ip & @r13 | @rdx | 5 | -@rsi +@r12 >> @rbx & 0y101 ^ @r8 ^ @rax | 0n19 | @rbx | @rbx | @r8) { test_statement(0xF7A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc))$proc) ; }
$error$
$end$
960
 if (0xC + @rdx << 0n15 & 0n10 & @rax | @r13 ^ 0x1 >> $buffer & $ip & $thread ^ @r10 ^ 6 ^ @r10 | @r8 & @r12 & @r8))0x4 << @rax >> @r9 << $buffer)  { test_statement(0x400); } elsif (-~@rsp << $ip ^ @rsp >> @r8 >= $thread << $buffer & 0xA >> (@r9) & @rax ^ 0n11 & @rbx) { test_statement(0x2253); } elsif (@rdi >> @r11 ^ +0n1 ^ @r10 ^ $ip >= @rsi >> +@r10 & @r12) { test_statement(0x215F); } elsif (-@r11 & @r13 | 0n16 | $buffer <= $teb | -@r10 ^ @rbx) { test_statement(0xDF0);  // /* This is a comment   for (val = @r8; @rsi >= @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
961
 if (-@rax + @r12 << @rax >> @rdi << @r10 >> (@r9) & @r10 ^ @rsp & @r9 ^ $buffer >> @rdi & 0y10010 | 1 << @r12 ^ @r11 >> @r11 ^ @r8 ^ @r10 ^ 0y1100 >= @rax >> @rdi >> +$proc)  { test_statement(0x5F5);  This is a not opened comment */  for (val = 10; 0y1001 == $teb ^ ($buffer);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r13 | @rbp != +$teb | 0y1100)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  /* This is a comment */ } else { test_statement(0xAA0); }
$error$
$end$
962
 if (@rax >> @r9 >> @r10 >> @rax | -0x3 << (0n8) & @r13 & @r9 & @r9 > @r13 ^ @rsp ^ @rax >> @rbp | @rsi << ~@rsp >> @rsi >> (@rbp))  { test_statement(0x212); } elsif (~0x10 << 0n2 >> $ip & @rsp & (@r10) | @rax >> @r12 >< @r12 >> @rdi >> $teb & 0y1100) { test_statement(0x1E0); }
$error$
$end$
963
 if (@rdi << 21 << $proc >> (@rsi) << $proc >> 0n18 >> +~($ip) <> +@rsp + $proc ^ 0n2 << $proc ^ @rdx & +~@rsi & @r13 ^ @rsi & @rdx | @rsp >> +@rdx >> $teb & @rbp >> 0y11 ^ @rbp | @rsi ^ 0y10)  { test_statement(0x857); } else { test_statement(0x14B2); }
$error$
$end$
964
 if (@r9 + @r13 << +23 | @r11 >> 0x10 & (0n7) >> $thread & $ip ^ $buffer >> @rax & @r10 ^ @rdi & 0y1001 ^ @r12 ^ ~@rsp | 0xF & $proc & 4 = @r9 + @r13 << +23 | @r11 >> 0x10 & (0n7) >> $thread & $ip ^ $buffer >> @rax & @r10 ^ @rdi & 0y1001 ^ @r12 ^ ~@rsp | 0xF & $proc & 4)  { test_statement(0x168D); } else { test_statement(0x1660); }
$error$
$end$
965
 if (15 >> $buffer << @rbp >> 0y1001 >> @r12 | @r10 << 0x4 >> ~@r13 >> @rbx & ($thread) >< @rbp << @r10 << @r10 & $thread >> @rsp >> @rdx & -@r10 >> @rsi ^ @r9 << @rdx >> $ip & (@rbp) >> @rdx)  { test_statement(0x269D);  This is a not opened comment */  /* This is a comment */  for (val = 10; $thread($thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 << $proc >> ~12 >> @rsp & @r9 & @rbx > @r11 << $proc >> ~12 >> @rsp & @r9 & @rbx) { test_statement(0x41E); ;  // /* This is a comment  } elsif ((0y0) >> 0n13 ^ $ip & 0n6 | $teb ^ 12)@rax >> @r8 ^ @rax & 12 ^ 0n18 ^ (@r12)) { test_statement(0x969);  break;  // /* This is a comment   break; } elsif (@rbx & $teb ^ +@r8 ^ @r8 | -@rax ^ @rdi)@r10 & 0xF ^ $proc | ~@r10 ^ $buffer) { test_statement(0x9B3); }
$error$
$end$
966
 if (@r9 + $buffer | @rdx << @rdi >> @rbx >> @rdx ^ (@r8) >> 0y1100 & @r9 & @rbx ^ @r8 ^ @r12 ^ @rsi | @rdx >> @rbp & $proc & $proc ^ @rsi ^ +$buffer)@rbx >> @rbp | @rsp >> +-@r9 >> +0y1001 ^ 4 >> $teb ^ @rsi & @r8 | 6 & -$teb | $thread ^ 20 ^ $buffer | @r10 ^ @rbp)  { test_statement(0x82C); } elsif (0y1010 >> @rbx ^ $buffer & @rdx >= (@r13) >> $thread | @rax | @rax & @rsp | ~@rbp | -+@rdx | @r11) { test_statement(0x1780);  /* This is a not closed comment }
$error$
$end$
967
 if (@r13 + @rsp << -(@r9) >> $proc << $proc >> 0y1011 & @rsi << ~@r11 ^ +@r12 << @rbx >> $thread >> +$proc & ~@rbx & 0y1010 | 0y1111 >> 0n18 >> @rsp & 6 & -$thread & 0xA ^ @rsi & @rsp | @rdx & $ip ; @r13 + @rsp << -(@r9) >> $proc << $proc >> 0y1011 & @rsi << ~@r11 ^ +@r12 << @rbx >> $thread >> +$proc & ~@rbx & 0y1010 | 0y1111 >> 0n18 >> @rsp & 6 & -$thread & 0xA ^ @rsi & @rsp | @rdx & $ip)  { test_statement(0x15AB);  for (val = 10; $thread >= 0y10000 & @rsi | $teb | $thread | @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb << @rdx >> +$ip & @rdi & @r9 ^ @r9 ^ 5 ^ @r13(-@r13 >> @rdi >> 0xA) { test_statement(0x148A);  for (; @rdi ! @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (0n3 | -@rsp)+@r9)  { test_statement(0x1A0E); } } elsif (@rdi & $thread & $buffer ^ $teb ^ @r12 | @r11 & $proc | @r13 != @rdi & $thread & $buffer ^ $teb ^ @r12 | @r11 & $proc | @r13) { test_statement(0x1DBB); } else { test_statement(0x16A5);  This is a not opened comment */  for (@rax = -@rbx | @rax; $ip | @r11 = @rax | 0;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  This is a not opened comment */ }
$error$
$end$
968
 if (@r11 << $buffer & -$ip << 0y100 >> @r10 >> @r11 >= @rdx + $thread << @r9 << $proc & @r9 << 10 >> -$proc >> -+$ip & (@r8) >> +@rdi & 0y10011)  { test_statement(0x17A5);  for (; $thread & $buffer $thread & $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb >> @rsp ^ @rdx | @r11 >> 0n7 & 0x11 & 21 ; (-@r13) << @rdx & @r13 >> ~@r9 & $thread & $proc ^ $proc & $buffer | @r10 ^ -@rax) { test_statement(0x560);  break;  if (@rdx > 0x11)  { test_statement(0x1E); } } elsif (-@rsp ^ @r12 & @r12 ^ 0y101 ^ @r12 | @r10 & 0n14((-0 ^ 0y111 & @rdi | ~$buffer & +@r10) { test_statement(0x1610); } elsif (@r13 & $ip ^ @rbp))@rax ^ +5 ^ @rbp | ~$proc ^ 0n12 | $teb | $buffer) { test_statement(0x1987);  break; }
$error$
$end$
969
 if (0x9 + $buffer << ~@rbp >> @rax << @rax >> @r13 >> $thread & @rdx << 0y100 >> @rdi >> @rbp | @rax | ~@r8 >> 4 ^ @rax & @r13 | $ip & $ip ^ 0n5 | @r9 ^ 14 | @r13 <= @r13 ^ ~0y10 >> (@rbx))  { test_statement(0xD4C); } else { test_statement(0x71F); }
$error$
$end$
970
 if (@r12 << 0n15 & @rsp << @r10 & @r9 & 0n9 & @rbp ^ 0n5 << $ip ! @rbx << @rbp << @r9)  { test_statement(0xB65);  break; } elsif ($teb << +0y1001 & @r12 | @r11 >> (0xD) & 0y1011 & @r13 <> @r13 & @rax >> 7 & @rbx) { test_statement(0x327); }
$error$
$end$
971
 if (0x7 << @r11 << @rdx >> @rsp << 0n6 >> ~-0n18 >> @r9 | +@rax << 1 & +@r10 & 0y110 & $teb ^ 0xA >> @r13 ^ @r11 ^ @r9 ^ (@rsi) | 0n7 >> @r10 & 0n10 & @rbx < @r11 + 13 << @rax ^ $proc << @rdx)  { test_statement(0x394); } else { test_statement(0x2616);  for (val = 10; @rax ^ ~@rdi | @r10 | $buffer != @rax ^ ~@rdi | @r10 | $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
972
 if (@rbp + @rdi << 0n15 << @r11 >> $thread << ~$ip >> @rdx & @r13 & @r11 ^ 0x4 >> $ip & @r9 >> $teb ^ ((@rbp)) >> @rdx & 0y110 & @rbx | @rbp << 0y1111 | $buffer ; @rbp + @rdi << 0n15 << @r11 >> $thread << ~$ip >> @rdx & @r13 & @r11 ^ 0x4 >> $ip & @r9 >> $teb ^ ((@rbp)) >> @rdx & 0y110 & @rbx | @rbp << 0y1111 | $buffer)  { test_statement(0x5BB); } else { test_statement(0x1433);  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
973
 if (+@r9 << $buffer >> @r11 >> @r12 >> $thread & $buffer << $buffer >> @rax & 0y10 >> $thread ^ @r12 << @r9 & @rsi >> $teb & $teb & @r11)~0y11 + 0x6 >> @rdi << 14 >> @r8 >> @rdx & $proc << @rdi ^ @r12 >> -@r8 & @rdi >> @r11 & @rsi & @rbx)  { test_statement(0x85E); ; } elsif (@r13 << @rax & 0n11 >> 0n6 | $thread >> @rdx | @r13 | @r11 ^ ++0y1110 <> ~@r11 << @r10 & @r10 & -$thread & $ip ^ $proc ^ ~0y1111 | $buffer >> 10 & @rsi ^ +$proc & @rax ^ @r13 | @r13 & @rsi ^ +@rdx ^ @rsp) { test_statement(0x1335);  /* This is a comment */  /* This is a comment */  while  (@r12 ; $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = +@rbx; 0y1101 ; 0y1101;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($buffer >= $buffer)  { test_statement(0x946); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 ; @r9) ; } elsif (@r11 ^ 0y1010 & 1 ^ @r9 | 0y1101 ^ @r10 ^ ~($ip) | ~@rsi | ~$buffer >< @r10 ^ 0y100 & -~@rdi | @rbp) { test_statement(0x1070); } elsif ($ip & $ip | +0y1011 | 0n6($ip & $ip | +0y1011 | 0n6) { test_statement(0x1A8D); } elsif ($ip ^ @rbx | @rdx | @r8(@r11) { test_statement(0x3DF); } elsif (@rdx | @r8 == @r8) { test_statement(0x1309);  if (~((~$ip)) != ~((~$ip)))  { test_statement(0x25A6); } } elsif ($thread == @r13) { test_statement(0x1099); } else { test_statement(0x242E); }
$error$
$end$
974
 if (@r13 + $buffer << $thread << @rdi >> @r10 & 0n10 >> 0n6 | ~$thread >> $teb >> @r13 ^ @r11 >> @r12 & @r12 & $teb = @r13 + $buffer << $thread << @rdi >> @r10 & 0n10 >> 0n6 | ~$thread >> $teb >> @r13 ^ @r11 >> @r12 & @r12 & $teb)  { test_statement(0xAB4); }
$error$
$end$
975
 if (@rdi(@r9 & $thread << @rsp)  { test_statement(0x2F8); } elsif (0n0 << -$teb >> @r9 >> 2 ^ @rbx ^ (@r8) & 0n2 ^ $buffer | 0n2 >> @rdx & 0xD & @r8 ^ +$buffer & @rbx(@rsp << $teb & ~0xA | @r9 & @rsi & @r10 | +@rdi & @rbx ^ @rax | 0n5 ^ $thread | @r12 | @r8) { test_statement(0x10A3);  for (val = 10; 17 ^ @r13 = @rdi | 0 | 0xC;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x15CB); ;  /* This is a comment */ }
$error$
$end$
976
 if (@r10 + @r9 >> @rdi << @r13 ^ 6 << @r12 >> $ip >> @rsi & 0n0 & +@rbp & @r12 ^ -@rdi >> 0y1011 & 0n12 ^ -$teb & $proc | ~$teb & $buffer >> 23 ^ @r10 >> @r12 & @rax ^ @r8 & (@r8) ^ 0y10010 | @rsp >> $proc & @rsp & @r12 | @rdi & $buffer ^ @r11 ^ @r11 | @rdi | @rbx | @r10)@r10 + @r9 >> @rdi << @r13 ^ 6 << @r12 >> $ip >> @rsi & 0n0 & +@rbp & @r12 ^ -@rdi >> 0y1011 & 0n12 ^ -$teb & $proc | ~$teb & $buffer >> 23 ^ @r10 >> @r12 & @rax ^ @r8 & (@r8) ^ 0y10010 | @rsp >> $proc & @rsp & @r12 | @rdi & $buffer ^ @r11 ^ @r11 | @rdi | @rbx | @r10)  { test_statement(0x749); } elsif (@rsi >> @rax <= @rsi) { test_statement(0xD6F);  for (@rax = @rax ^ ~~@r10; 0y1100 ^ ~~@r12 | @rdx <> @rbp | 0y1;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
977
 if (@rdi + @rbp << -@r11 << @r10 >> @r10 << @r12 & @rdx >> @r11 >> -22 ^ 21 >> @rax | $thread << ~@rsp >> @rsi ^ @r12 & @rdx ^ $teb & 14 ^ @r10 ^ 0x0 | @r8 >> 0y11 & 0n5 & ~$teb ^ -$ip ^ @rbx ^ -~@rsp <> @rsi << $teb & @r11 & 0x8 & ~@r10)  { test_statement(0xAB0);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +$thread ^ ~+6 | @r10)@rdx ^ @r11) ; } elsif (0y1111 << ($teb) ^ (0x1) & 3 ^ $ip & @r13(($teb >> @r8 >> 0y101 & $buffer & ~@r9 & $thread ^ $ip >> @rdx & 0x12) { test_statement(0x1322);  /* This is a not closed comment }
$error$
$end$
978
 if (+$proc + $proc << @rbx << @rsp & @rsp << -0y10010 >> -20 & @r9 >> $proc & @r11 ! +$proc + $proc << @rbx << @rsp & @rsp << -0y10010 >> -20 & @r9 >> $proc & @r11)  { test_statement(0xB86);  // /* This is a comment   /* This is a comment */  for (val = 10; 0y1000 | @r12))@r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } else { test_statement(0x23E7);  This is a not opened comment */  while  (@rbx != @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ((@rbp))$ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
979
 if (@rax << 0x8 << 0y100 ^ 0n12 << @r10))@r12 + $ip)  { test_statement(0x2155); } elsif (@rbx >> 0xA & 1 >> $teb ^ $buffer >> @r13 & @r8 & @rsi | 0y100 >> @r9 ^ $thread & @rax ^ $thread ^ @r9((@r9 << +@rbx >> $buffer) { test_statement(0x1D1C);  /* This is a comment */ } elsif (~-@rdx >> @rsi ! $teb & @rbp & @r10 | @r10 & ~@r12 | @rax ^ $proc | @r12 | -~@r10) { test_statement(0x319); @rax = $ip ^ @r12 ;  if ($proc ; $proc)  { test_statement(0xAEC); } elsif (0n10 == $buffer) { test_statement(0x14AD); } else { test_statement(0x24EB); } } elsif (@rsi ! @rsi) { test_statement(0x1B93); ; val = @r13 ;  break; }
$error$
$end$
980
 if (@rax + @rax << $proc & -0x9 << @rsp & @rbx ! @rax + @rax << $proc & -0x9 << @rsp & @rbx)  { test_statement(0x2C9);  // /* This is a comment  } elsif (@r10 << $proc >> 0y1101 & 6 & @r13 | ~@r8 >> @r10 & ~@rsp & @rbp != $ip << @rdi | $buffer >> 0x13 ^ $proc & @r11 | 0y1101 | -@r11 ^ @rbp) { test_statement(0x531); } else { test_statement(0x21DE);  if (@rbp ^ $buffer >< 0x11)  { test_statement(0x26E7); } else { test_statement(0x1C05); } }
$error$
$end$
981
 if (~@rbp + @rdi >> @r8 >> $buffer >< ~@rbp + @rdi >> @r8 >> $buffer)  { test_statement(0x32C); } else { test_statement(0xDC8);  if (@r10 @rbp ^ @r12)  { test_statement(0x101D); } elsif (-@rdi | @r10 -@rdi | @r10) { test_statement(0x1AB6); } elsif (+@rax(+@rax) { test_statement(0xC82); } elsif (@r13 < @r11) { test_statement(0x1304); } elsif (@r10(@r11) { test_statement(0x1C77); } else { test_statement(0x2108); } }
$error$
$end$
982
 if (@r10 + +$teb >> @r13 >> 0 == @rax >> @rbp << @rsi ^ @rsi >> 0xA >> @r10 & @rax >> @rbx)  { test_statement(0xD7B);  for (val = $buffer & 0n0 | @rdi ^ $ip | @rsp | @r12; @r13 & @rdi)@r11 | 0n7 ^ @r9 | @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12 & 0y111 0y1110 >> @r8 >> @r13) { test_statement(0xD0D);  while  (@rbp ^ @rbx)@rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
983
 if (@rax + @r13 << -~@rsp ^ @r8 << 0xA >> +@r13 >> (@rbx) & -$buffer >> 0n13 < @rax + @r13 << -~@rsp ^ @r8 << 0xA >> +@r13 >> (@rbx) & -$buffer >> 0n13)  { test_statement(0x148F); ; } elsif (@r8 << @r8 >> @rax >> ~+$teb((0x10 & $teb >> @r10 & @r13 ^ (@r11) | @r11 >> @rax ^ @rdi & 0xB | 4 ^ @rax ^ @r9) { test_statement(0x976); }
$error$
$end$
984
 if ($thread + @rax << @r11 >= 0y10 << $proc << @r8 >> +0y111 << @rbp >> 0x8 | ~@rsp >> +(0n1) >> 0n5 ^ @rax >> @rbp & @rax | @r9 >> @rbp & +~@rax & @rbp ^ @rdi)  { test_statement(0x2009); } elsif (@rdi >> -0 ; @rdi & @r11 >> @rsp) { test_statement(0x2095); }
$error$
$end$
985
 if (@r9 >> 0n2 | $thread ^ @r13 > @r10 & $ip << @r10 >> @rdx | @r12 | +@rsi)  { test_statement(0xB72);  for (val = 10; @rbx ^ $teb | +$ip ^ 2 <= @r8 & @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
986
 if (@rbx + @r12 << -@r9 << 0n7 & 0y10001 >> @r10 >> 0xE ^ ~@r11($buffer + 0xF << 0x0 << @rbp >> @rbp ^ 0x2 << @rsi >> @r13 >> -$teb)  { test_statement(0x650); } else { test_statement(0x6E0); }
$error$
$end$
987
 if (@r11 + @r9 | @rdx >> (0y1011) >> @rbx & @rdi >> @rsi & 0n1 & $buffer | 10 = @r9 >> $proc << @r11 & 0n19 & $proc >> @rsi | @rdi << $proc >> @rbx)  { test_statement(0x1EFE);  This is a not opened comment */ }
$error$
$end$
988
 if (($ip) << ~@rax ^ @rsp >> @r8 & @rbx & @rdi & @r12 ^ 0n13 >> @rsp & $buffer & @rbx ^ @r13 & @rdi | @r12 >> @r13 >> @rax & @rax >> $thread & @rax & $teb ^ +$buffer >> 6 ^ @rdi ^ 7 | @r10 ! 0y1 << $thread >> -@r9 << @rax >> @r12 & @r8 >> 0n16 ^ $proc << 0x3 >> 0y10001 & $proc & @r10)  { test_statement(0x1CF4); @rax = ~@rsp >> @r10 ^ @rsp & @rbp ; }
$error$
$end$
989
 if (@rbp + @rdi << 5 >> @r8 | @r12 << @rdi >> +@rax >> 10 & @r11 & -$buffer & 0y1010 | @r10 <= @r8 << @r11 << $thread ^ $teb >> @r11 | 0x2 << @rdx & 6 & $proc)  { test_statement(0x803); }
$error$
$end$
990
 if (@r11 + 0y0 << 0n13 << @rbp ^ 5 >> @rbp >> @rdi ^ @r12 & @rbx & (0x0) ^ $teb & @r10 | @r11 << ~@rdi >> $proc >> @rsp ^ @r12 >> @rdi | +@rbx ^ $teb | ~@r12 & @r10 >< 5 << @rax << @r12 >> $teb << @r10 >> @r13 >> (@rax) ^ @rsi >> @r10 >> $proc)  { test_statement(0x1D6F); }
$error$
$end$
991
 if (+@rax + ~@r13 >> @rdi << (-$teb) ^ @rdx >> 0 & @rsp >> $proc & @r11 & $thread ^ $ip >> 0n11 ^ $thread & @rbp <= @rax ^ @r12 & 11 >> 0x0 & @rbp & @r8 ^ 0x4 & 0x1 & (0x3) | 7 >> 0x9 >> @r12 | @r11 >> @rdi & @r11 & @rbp ^ $teb)  { test_statement(0x5E1); ; }
$error$
$end$
992
 if (~+0y1001 + $thread ; @rax ^ $buffer << (0y110) >> $ip >> 0n0 & @r11 ^ @r9 & $teb ^ @rax ^ @r13)  { test_statement(0x164); } elsif ($ip << @r8 >> @r8 >> 0x4 & @rbp & ~@r9 | $thread & ($thread) ^ 0n2 | $buffer ^ @rsi <= @r10 << @rsp >> @rsp & @rdx ^ @rbp >> @r13) { test_statement(0xC60);  /* This is a not closed comment ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (-$proc) = (-$proc)) ; }
$error$
$end$
993
 if (@rax + @r10 << 0y100 >> $ip & @r10 & @r13 & @r9 ^ +@rsi >> @r12 >> @rsi & @rbx >> @rbp <= @rax + @r10 << 0y100 >> $ip & @r10 & @r13 & @r9 ^ +@rsi >> @r12 >> @rsi & @rbx >> @rbp)  { test_statement(0xEC1); } elsif (@rdx <> 0n5 << $thread & @r12 & @rbp & @rdx ^ @rdx) { test_statement(0x1D29); } elsif (@rbp >> $proc & $thread & @r8 ^ +$teb ^ (-($teb)) ^ ~@rbx((@r12 ^ @r9 & -$buffer ^ @r13 ^ (@rax)) { test_statement(0x1C23);  /* This is a not closed comment  // /* This is a comment   for (val = 10; $ip > ~$thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @r9 ; val = $teb ;  for (; 0n3))0n3;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
994
 if ($thread + $teb << @rax << @rbx >> @rdx >> @rbx & 6 << @rbx | ~$thread | $buffer >> @r13 & @r10(($proc << (@rsp) >> $proc ^ $ip << @r10 & $thread ^ @rsi)  { test_statement(0xC8);  /* This is a comment */ } else { test_statement(0x563);  while  (0y1110 ^ @rsp | @r9 | @r11 > ~@rdi | ~-(@r11))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
995
 if (@rbp << @r13 << @r11 >> @rdx & @r11 << 17 >> @rdx >> 0x5 >< @rbp & ~0x11 ^ $teb << @rsi | @rax >> $ip & 23 & $buffer & @rbp ^ $buffer | @r11 & $teb & +0x10)  { test_statement(0x220B); val = ~0x10 & @r12 | @r8 | $proc | @r12 | @rsp ; } elsif (-@r12 << -+@rsi & $teb >> 0n14 & $teb ^ $thread >> $ip(@rbx >> @rax & @r12 ^ $buffer) { test_statement(0x1E29);  /* This is a not closed comment  /* This is a comment */ }
$error$
$end$
996
 if (7 << (+0n0) << @rbx | ~$thread >> @r9 >> 0x12 & @r13 >> $buffer | 0n12 ^ -@rbx ^ @rsp = 0n0 >> @r12 << @r10 & @r8 & (@r8) >> $proc & $proc & 0x12 ^ +$teb >> 0n18 ^ @rbp | 0x6 << @r9 >> @r10 >> 0y1100 ^ @rbx >> @rdi & @rsi | @r12)  { test_statement(0x1A20); } elsif ($ip << 0n8 >> @r10 | @rax & @r9 | $buffer ^ @r13 ^ @rdi <= $thread & @r8 >> -0y10010 & $ip ^ @r11 >> @r12 & @r10 & 15 ^ @r13 & ($ip) ^ 0x4) { test_statement(0x4BD); }
$error$
$end$
997
 if ($thread & -~@r9 >> @rdx ^ 0y10 & @r11 >> @rdi & $proc & @r12 | @r11 & $thread ^ 0x8 & @rdi ^ $proc >< $thread & -~@r9 >> @rdx ^ 0y10 & @r11 >> @rdi & $proc & @r12 | @r11 & $thread ^ 0x8 & @rdi ^ $proc)  { test_statement(0x21AB); } elsif (16 << @rbp >> @r13 >> $thread < $thread >> ($proc) >> 0x5) { test_statement(0x178C);  break;  break; } elsif (@r13 >> 0n18 = ~@rsp & @rdi & $teb) { test_statement(0x87E);  while  (@r10 | @r8 >< @r10 | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rbx)$thread)  { test_statement(0xD41); } elsif ($proc($proc) { test_statement(0xD08); } } elsif ($proc & (15) ^ @r8 ^ (($teb)) ; @r11 & @rbp ^ @rbp ^ @r13) { test_statement(0xCAD); } else { test_statement(0x2058);  // /* This is a comment   break; }
$error$
$end$
998
 if (@rbx >> @rsi & ~@r12 << @r9 ^ (@rdx) = @rbx >> @rsi & ~@r12 << @r9 ^ (@rdx))  { test_statement(0x266D); } elsif (@r10 << @r10 & @r13 & 2 ^ ~23 >> @r8 & @r13 <= $ip >> $ip & @rsi | @rsp >> @rsi ^ @r12 ^ @r8 ^ 3 | +~$buffer & @rsp | @r13 ^ @rdx | $buffer | @r8) { test_statement(0x1A09); } elsif ($proc >> @r10 ^ @rdi $proc >> @r10 ^ @rdi) { test_statement(0x322);  break; } else { test_statement(0x5B7);  for (val = 10; $buffer ^ @rdi | ($ip) @rsi | @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
999
 if (($teb) + @rax ^ @rsp << +$buffer >> $proc >> $thread ^ @r10 >> @r8 & 14 | @r13 >> @r8 ^ $ip & (0x4) & $ip ^ 5 <= @rax + @rax << $thread << $teb ^ (@r8) ^ @r9 >> 0n3)  { test_statement(0x332);  for (val = 10; @rsp & ~@rdx > @rax ^ 0n10 ^ @r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r10 | @r8 == +$buffer | @r12 | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r12 ^ $teb | @r9 ; } elsif (@r13 << @rdi >> @r9 >= @rbx & 0n8 >> 0x9 & @rax ^ @rax & ~$teb | @rdi | @r10 & $thread) { test_statement(0x110C); }
$error$
$end$
1000
 if (@rsi << @r12 ^ @rbp & @r8 | +@rbp & $ip & 0y11 & @rdi ^ +@rdx >> @rax ^ $proc ^ @rbp ^ @rdi(@rsi << @r12 ^ @rbp & @r8 | +@rbp & $ip & 0y11 & @rdi ^ +@rdx >> @rax ^ $proc ^ @rbp ^ @rdi)  { test_statement(0x1A56); } elsif (@r10 >> $teb & @rdx >> @rbp ^ 5 & @r9 & @rsi ^ 7 | @r8 >> ~@r11 & @rax ^ $teb ^ $teb ^ @r12 | -@r13 & 0x11 ^ @r9 = @r9 >> @r12 & $thread) { test_statement(0x1639);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x1 ^ @rbp | @rdx < 0x1 ^ @rbp | @rdx) ; } else { test_statement(0x3AE);  while  (@r12 ^ 0y1011))-$buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc == 0y1011 | @r13) ; @rax = $teb ; }
$error$
$end$
1001
 if (0x5 + @r11 >> @r9 << @r9 >> @rdi >> ++@rbx & @rsi ^ @r8 >> $buffer != 0x5 + @r11 >> @r9 << @r9 >> @rdi >> ++@rbx & @rsi ^ @r8 >> $buffer)  { test_statement(0x1119); } else { test_statement(0x2663);  This is a not opened comment */ @rax = @rdi ;  /* This is a not closed comment }
$error$
$end$
1002
 if (@r11 & @r9 >> @r11 ^ @rsp >> $ip | ~@rbx << $buffer >> @r10 | @rax >> -@r9 & @rsi & @r13 ^ 4 | $thread)3 + @rdi << @rdi >> $ip >> 12 | $teb | @r11 ^ 0y110 & @r8 ^ @r9 ^ $thread | @rsp & @rdi)  { test_statement(0x1A70);  This is a not opened comment */ }
$error$
$end$
1003
 if (@rax << 0y1011 << @r8)0xB | 0y1011 << (@rax) >> @r10 & $ip ^ @r13 >> @rsp & @rdi ^ @rdx ^ (-$proc) ^ 0x2 | @rbp & @rbx ^ @r8 ^ 0x9)  { test_statement(0x1445);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 ^ 0y1111 | $buffer <> $teb & 0n6 ^ -0y10011 | ~@rax ^ @r10 | $thread | 0y1100) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip ^ $buffer | @r10 | @rax)0x12 ^ @rsp | @r12 | @r8) ;  for (val = 10; 10 <= 0y1 | +$thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (7 >> @rax >> ~@rax & 0xF & @rdi ^ -@rax & -$ip & @r10 | @rsp & @rbx & @rdx ^ (@rsi) | $proc & 0y111 ^ @r11 ^ @rbp | +$buffer | $thread != ~@rdi << @r12 >> @rax >> @r10) { test_statement(0x11CA); } elsif (4 & @rbx ^ $ip & 4 ^ @rdi ^ 0n2)$ip ^ @r10 & 0n2 ^ @r8 ^ $thread) { test_statement(0x912); } else { test_statement(0x1202);  if (@rbx >= @r13 ^ $teb)  { test_statement(0x1ABE); } elsif (@r11 | @rdx > @r8 | $proc) { test_statement(0x795); } else { test_statement(0x1EA6); } }
$error$
$end$
1004
 if (@r11 >> 0 >> @rsp ! $buffer + -@r12 & +@r9 << @r11 >> $buffer)  { test_statement(0x14D9);  /* This is a not closed comment  /* This is a comment */ } elsif (@r12 ^ 0y110 & @rsp & @rsi ^ $buffer & +0y111 <= $teb ^ @rsp >> @rdi | @rdx >> 0y110 & @rdi | 0x1 & $teb ^ @rsp ^ $buffer | @rsi ^ $ip | $proc | $buffer) { test_statement(0x257F); } elsif (@rdx & @r9 | 0n19 & 3((@r10) | ~@rax & @rsp) { test_statement(0x9A1);  if ($ip ; $ip)  { test_statement(0x20B1); } elsif (@rbx >< $thread) { test_statement(0x161B); } else { test_statement(0x1354); } } else { test_statement(0x21A5);  This is a not opened comment */ }
$error$
$end$
1005
 if ($teb + @r13 << @rbp >> $buffer << @r8 >> ~@r9 >> @r12 & @r9 ^ $teb << $ip >> @rsi >> -@rax | 0x11)@r12 + @rsi << $buffer << @rsi & @r10 >> 2 ^ -(@rdi) << 23 >> $buffer)  { test_statement(0x16B8); } else { test_statement(0x182E); }
$error$
$end$
1006
 if ((@r13) >> +@r11 << @r9 & 0x10 | @r13 & 0n10 ^ $proc ; @rdi + $proc << $teb & $teb & 0n10 & $ip & @r9 | @r10 << 16 >> @rsi ^ @r12 ^ 11 ^ $thread ^ @r10 | 0y1000 & ~@rbx & @rbx)  { test_statement(0x1397);  while  (0n12 & $buffer != @r11 & @r13 ^ @r8 ^ 12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1269);  /* This is a not closed comment }
$error$
$end$
1007
 if (@rdi << $buffer & @rdx << $teb >> 4 & @r11 >> 1 ^ @r13 << @rax >> @rbp >> ~@r13 | @rsp & $proc | -$teb | -~(~@r13) ^ $ip ^ $ip | @rsi ^ $thread | @rbp | @rax >= @rdi << $buffer & @rdx << $teb >> 4 & @r11 >> 1 ^ @r13 << @rax >> @rbp >> ~@r13 | @rsp & $proc | -$teb | -~(~@r13) ^ $ip ^ $ip | @rsi ^ $thread | @rbp | @rax)  { test_statement(0x2390);  This is a not opened comment */ } elsif (@r13 >> ~@r8 >> @r11 >= @r11 << $buffer >> 12 ^ $ip >> @r8 ^ $teb ^ @r12 ^ @r8) { test_statement(0x2349);  while  (~(0y1011) ^ 0x1 >< ($buffer) | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($teb | @rbx ! $proc | $proc)  { test_statement(0x1C7); } elsif (@rsp <= @rsp) { test_statement(0x6D2); }  while  (@rdx == -@r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($ip)$ip)  { test_statement(0x1EBE); } elsif ($teb >= $teb) { test_statement(0x1826); }  for (; ~@rsp)@rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r10 >> @r9 & @rbx & $proc | @rsp ^ 0x3 ^ @rsp | @rsp @r10 >> @r9 & @rbx & $proc | @rsp ^ 0x3 ^ @rsp | @rsp) { test_statement(0xA9A);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax(@rdi) ; } elsif ($teb | @rax ; $teb | @rax) { test_statement(0xD33); } elsif ($proc ^ @rbp | -@r8 | @r9 <> $proc ^ @rbp | -@r8 | @r9) { test_statement(0xC66); ; } else { test_statement(0x1943); ; }
$error$
$end$
1008
 if (~@r10 + 0x6 & 0n12 << @rsi >> @rsi & -0y0 ^ 0y1011 ^ -@r10 & @rbx ^ @rbx & $ip ^ 0 ^ @r13((-+@r13 + @rbp << @rdi & @r11 ^ @r8 >> 0n15 & @rsp)  { test_statement(0xECC);  // /* This is a comment  } else { test_statement(0x2529); }
$error$
$end$
1009
 if (@r11 + $thread << $buffer << ~@rdi == @r10 + @rax << @r11 & ~(~@r10) & @rax & (@rsi) & @rsi ^ @rdx >> @r11 & 5)  { test_statement(0x120A); }
$error$
$end$
1010
 if ($buffer + @r13 << @r11 << @rbx ^ 0n14 ^ $ip ^ @rsi | @r8 << (@rax) >> $ip & @rsi & @rbp & @rax | $teb & 0x7 & @r9 < @rsi + @r8 << $ip >> ~@rax >> @rbp ^ +$thread << $ip & @rdi >> ~$teb ^ @r11 & ~@r8 & @rax)  { test_statement(0x239D); } else { test_statement(0x1445);  if ($teb ^ 0y10000($buffer | -@r13)  { test_statement(0xADE); } else { test_statement(0x9AB); } }
$error$
$end$
1011
 if ($ip + -@r9 & $buffer << @r13 >> ~@r8 >> +($buffer) & @r11)$ip + -@r9 & $buffer << @r13 >> ~@r8 >> +($buffer) & @r11)  { test_statement(0x765);  /* This is a not closed comment }
$error$
$end$
1012
 if (11 + @rax << 0n19 << @rsp | 0n19 << @r10 >> $thread ^ 22 >> @r11 & @rdx & @r13 ^ @r12 < $proc << @r9 << @rsi >> @rsp << $buffer & @rsp << 0xE >> $buffer >> +1 | 0y1011 & @r8 >> $proc & $teb | @r11 | 0y1000 & 12 | -@r9)  { test_statement(0xF09); @rax = -@rbp ^ 12 & @rdx ;  for (val = 10; @rsp ^ @rsp)@rsp ^ @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; ~$teb | 0y10011 >< @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rax << -$proc >> @rdx & $buffer >> @rax ^ @rbp & +@r8 & ~$ip ^ $ip & @r11(0n13 >> @r10 & -(@r11) >> 0n8 | @rdi & @rbp & 0 | @r13 & ~$teb ^ 0n18 ^ +$teb | @rdi) { test_statement(0x6A7); }
$error$
$end$
1013
 if (~@r11 & @r9 << (--$proc) & $ip >> @r12 ^ (@rsi) & @rbx ^ @r10 & $teb & (0n13) | 0y1110 >> 0y1100 ^ @rsp & $thread & @r10 ^ 15(0n12 & $buffer & $buffer >> @rsp ^ @r13 ^ $ip ^ 0n16 & ~@r10)  { test_statement(0x1629); } elsif (@rsp & @rbp >> @r12 | @r9 >> -@rax & 0n0 & 0xE))@r10 >> @r11 >> @r8 ^ +@r9 ^ @rdi & (@r10) ^ 2 | @r12 & 0y10000) { test_statement(0x1CE9); ; }
$error$
$end$
1015
 if ($teb << @rax << @rdi @rbx >> -0n8 << +0n8 & 0y1000 >> @rbp >> ~@r8 ^ 0xE >> @rsp >> -@rax & ~($proc) >> @rdx & $proc & @rsi ^ @rdi >> @rsi & $proc & @rsi)  { test_statement(0xC63); } elsif (@rsp & @r8 & $teb & 0x6 ^ @rsp >> @rax ^ @r9 | @rbx >> -@r8 ^ @rsp | @rsp & $proc | $buffer | @rsi != @rsp & @r8 & $teb & 0x6 ^ @rsp >> @rax ^ @r9 | @rbx >> -@r8 ^ @rsp | @rsp & $proc | $buffer | @rsi) { test_statement(0x861);  if (@rbx > @r13 ^ +($ip))  { test_statement(0x7EC); } elsif (0n12 | 0y11((+@rdx | $thread) { test_statement(0x1B6B); } } elsif (0y111 | 0x11 ^ (@rbp) | $teb ^ @r9 >< 0y111 | 0x11 ^ (@rbp) | $teb ^ @r9) { test_statement(0x20B6);  // /* This is a comment  }
$error$
$end$
1016
 if (@r8 << 0y110 << @r9 < @r8 << 0y110 << @r9)  { test_statement(0x1D56);  This is a not opened comment */ } else { test_statement(0x119D);  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
1017
 if (@rdi + $buffer << +@rdx != 0y111 + $thread << $proc & @rsp << -@r11 >> @r8 & $ip | 17 << @r9 ^ (0x9) & @r11 ^ 0x3 ^ @rsp | @r9 >> @rbp | ~-@rbp & 0n5 ^ $teb | ~$ip ^ ~0n17)  { test_statement(0x3B3); } elsif (@rdx << ~@r13 ^ @r8 >> @rsi | 0y1110 >> 0y10011 = $thread ^ @rdi >> @rsi ^ @rax & -@r12 ^ $teb | @r13 & $ip | @r8 ^ $teb ^ ~$thread | $buffer ^ @r10) { test_statement(0x181B);  break; } elsif (~@rsi >> @r8 & @rsp & +@rsp | @rsi | 0x11 ^ -@rdx | $thread < (-@rbx) & $teb) { test_statement(0x2569);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx ; 0x12) ; } elsif (@rdx & @rdx ^ (@rdi) ^ @r9 >< @rbp & @r13 ^ @rdx) { test_statement(0x257); } else { test_statement(0x1ACA);  This is a not opened comment */ }
$error$
$end$
1018
 if (@rax + @r11 | @r9 >> $thread ^ @rax >> @rbx ^ @r10 ; @r9 << 0y10000 >> @rbp >> 0y1011)  { test_statement(0xA3D); } elsif (@rax >> @rdi >> @r10 & @r8 >> -@r13 ^ @r9 ^ ~3 & $proc)@rax >> @rdi >> @r10 & @r8 >> -@r13 ^ @r9 ^ ~3 & $proc) { test_statement(0x26F); } elsif (@rbx & -0n13 ^ @r8 <= 0n7 & @r11 | -~@r9 ^ @r9 ^ @rbx | $thread) { test_statement(0x1133); @rax = @r8 ^ @r13 | @rdx | @r13 ; } elsif ($ip ^ @rdi ^ @rdx ; $ip ^ @rdi ^ @rdx) { test_statement(0x131F);  // /* This is a comment  ; } elsif (@r9 | +~@r11 | @r11 <> $buffer ^ @rdi | 1) { test_statement(0x1E4E); val = $proc ;  if ($thread @r11)  { test_statement(0xD76); } } elsif ($ip | @rbx == $ip | @rbx) { test_statement(0x2234); @rax = @rbp ; ; } elsif (15 <> $ip) { test_statement(0x31E); } else { test_statement(0x1C2E); }
$error$
$end$
1019
 if (+0y10010 >> @r11 >> @rdi & -$buffer & $thread >> +$thread & $ip > +0y10010 >> @r11 >> @rdi & -$buffer & $thread >> +$thread & $ip)  { test_statement(0x31);  for (val = 10; @r11 & 0n7 ^ $proc ^ $teb <> ~@r8 & $teb ^ @r12 | @rsp | @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp & @r11 ^ $buffer ^ @r11)@rbp & @r11 ^ $buffer ^ @r11) { test_statement(0xE81); } else { test_statement(0x12);  /* This is a not closed comment }
$error$
$end$
1020
 if (@rax + ~0xF << 0x8 << 7 >> $proc << @r10 & @r8 >> @r10 >> $ip | +(~@r12) & $buffer >> +@r8 | @r10 ^ @r9 & $ip ^ @rdi | 0n13 & 2 ^ @r9 = @rax + ~0xF << 0x8 << 7 >> $proc << @r10 & @r8 >> @r10 >> $ip | +(~@r12) & $buffer >> +@r8 | @r10 ^ @r9 & $ip ^ @rdi | 0n13 & 2 ^ @r9)  { test_statement(0x19B6);  /* This is a comment */ } elsif (@r13 >> @r9 >> @r12 != @r13 >> @r9 >> @r12) { test_statement(0x1B97); } else { test_statement(0x1A63); }
$error$
$end$
1021
 if (@rbx << @r13 & @rsp > @rbx << @r13 & @rsp)  { test_statement(0x16C2); ;  /* This is a comment */ } else { test_statement(0x348); }
$error$
$end$
1022
 if (0n10 & @r8 ^ @rdx << ~-@r11 | 0y1100 << @rdi ^ @rsi ^ @rbx ^ 0n15 = 0n10 & @r8 ^ @rdx << ~-@r11 | 0y1100 << @rdi ^ @rsi ^ @rbx ^ 0n15)  { test_statement(0x781); }
$error$
$end$
1023
 if (3 + -12 << -$ip >> @r12 ^ @r9 & $ip <> ($teb) + @r10 >> $ip << (@rsi) ^ 0n8 << $proc >> ~$buffer ^ @rbx ^ 13 | $buffer & @rdi & @rsi & $ip)  { test_statement(0x12CE); } else { test_statement(0x275);  while  (-@r8 ^ @r9 | $teb | @r12 = -@r8 ^ @r9 | $teb | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1024
 if (@r12 & @rsi | 0xF & $proc | @r8 & @r10 | @rdx ^ @rax ^ +@rbp(@rdi << @rdx << @r8 >> $proc << @rax ^ @rbx >> 0x6 ^ @r11 | 0 << @r12 ^ @rax & 0y1 & @r13 ^ ~@rbp | @r10)  { test_statement(0x180C); } else { test_statement(0x888); }
$error$
$end$
1025
 if (-@rdi ^ @r8 << $proc | @r11 << @r8 >> @rsp >> $buffer & $buffer >> -$thread | ~@rdi & @r12 & @r10 == +@r11 + @rax << @rsi << $ip >> @r8 & ~~@rbp << $buffer | @r8)  { test_statement(0x1BA9);  if (3 < $teb ^ @rsi ^ @rdi | $thread | 0n11)  { test_statement(0x1028); } val = 21 ;  while  (@rax = @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1026
 if (@rdi + @r11 << -@rax >> ~15 << $proc & +$proc & $buffer >> $thread & 7 ^ $buffer << 0xF >> @rdx >> @r10 | ($buffer) << @r9 & @r8 & @rsi ^ 0x9 & @r9 ^ @rbx ^ @rbx | $teb & 0n3 ^ @r13 <= @rdi + @r11 << -@rax >> ~15 << $proc & +$proc & $buffer >> $thread & 7 ^ $buffer << 0xF >> @rdx >> @r10 | ($buffer) << @r9 & @r8 & @rsi ^ 0x9 & @r9 ^ @rbx ^ @rbx | $teb & 0n3 ^ @r13)  { test_statement(0x6B); } elsif ($teb | @rbx & @r9 & @r13 | 1 ^ @r9 ^ $teb @rax << @rax >> @r8 & ~@r9) { test_statement(0x780);  break; val = 0x0 ^ $teb | 0xF ;  // /* This is a comment   if (0n10 ; $thread)  { test_statement(0x2646); } elsif ($buffer > 0xC) { test_statement(0x10C0); } } elsif (~7 & @r8 & @rbp))~7 & @r8 & @rbp) { test_statement(0x25ED);  /* This is a not closed comment } elsif (@r11 | @rbp != +$thread | $ip ^ 0n5 | +$buffer) { test_statement(0x1D91); }
$error$
$end$
1027
 if (~@r10 + 0x8 >> $ip ^ $thread << @rax | -@r12 ^ -@r9 >> +@rbx & 0x0 | ~-0x7 >> @rsi ^ 17 & +$teb ^ @rdi 0x5 >> @rsi >> @r9 >> 0x7 ^ 2 & -~@rdx >> 0n11 & $thread & @rsp | $buffer & @rdx)  { test_statement(0x1869); } elsif (7 << $buffer >> @rbp & $thread >> @rsi & $buffer & @r12 ^ @r10 & $ip & @r10 ^ 0y10 ^ 0x12 ^ $ip | $thread & 10 & 0n15 ^ $proc & ($buffer) ^ @rbp | 0n3 & $ip ^ $teb ^ $ip))7 << $buffer >> @rbp & $thread >> @rsi & $buffer & @r12 ^ @r10 & $ip & @r10 ^ 0y10 ^ 0x12 ^ $ip | $thread & 10 & 0n15 ^ $proc & ($buffer) ^ @rbp | 0n3 & $ip ^ $teb ^ $ip) { test_statement(0x1902); }
$error$
$end$
1028
 if (0y10011 + 0x4 << @rbx << @rsi >> 15 >> 0y1111 >> @rax | @rdx >> -@rax >> +0x10 ^ $ip <> 0y10011 + 0x4 << @rbx << @rsi >> 15 >> 0y1111 >> @rax | @rdx >> -@rax >> +0x10 ^ $ip)  { test_statement(0x13F4);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n8 | @r11 | ~$buffer > 0n8 | @r11 | ~$buffer) ; ;  This is a not opened comment */ } elsif (@rdx | @rsp >> $buffer & 0y1100 != 0 << -+$teb ^ @r11 & 0y100 & $teb) { test_statement(0x6C3);  /* This is a comment */  if (@rdi | @rdi > @r13 | ($teb))  { test_statement(0xF16); } elsif (0x7 != @rbp) { test_statement(0x156E); } else { test_statement(0x2492); } } elsif (@r8 ; @r8) { test_statement(0x2315); } else { test_statement(0x1313);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ! 0n7) ; }
$error$
$end$
1029
 if (@rdi >> @r13 & $thread >> @rsp >> 10 | @rdx | @rbx & @rsp & 0n17 ^ 0y1011 & 0y1000 ^ @rdi ^ $teb | @r9 & $proc)@rdi >> @r13 & $thread >> @rsp >> 10 | @rdx | @rbx & @rsp & 0n17 ^ 0y1011 & 0y1000 ^ @rdi ^ $teb | @r9 & $proc)  { test_statement(0x11D9); } elsif ($ip << -+$teb >> @r8 & @rsp >> $proc | $buffer & @rdi = $ip << -+$teb >> @r8 & @rsp >> $proc | $buffer & @rdi) { test_statement(0x309); } elsif (@rdx >> 0x7(@rbx & $proc & $thread | +@r13 & @r8 ^ $thread ^ @r9) { test_statement(0x16AD);  break; } elsif (0x8 & @rsi | @rsp ^ @r8 < @r10) { test_statement(0x225B);  /* This is a comment */ } else { test_statement(0xF37); }
$error$
$end$
1030
 if (~@rdi + ($buffer) >> $proc << $buffer & @rbx << @r10 >> ~-+@rsi | 0n1 << @rsi & @r11 | $teb >> -$thread ^ ~~~@r8 & @rax ^ $buffer ^ @rdi | @rdi & +@r8 ^ @r13 ^ @r8 | +@r11 ~@rdi + ($buffer) >> $proc << $buffer & @rbx << @r10 >> ~-+@rsi | 0n1 << @rsi & @r11 | $teb >> -$thread ^ ~~~@r8 & @rax ^ $buffer ^ @rdi | @rdi & +@r8 ^ @r13 ^ @r8 | +@r11)  { test_statement(0xEB1); }
$error$
$end$
1031
 if ($ip + (0x11) >> @r13 >> 0xA & 0y10 << @r13 >> @r9 | 0n2 ^ @r8 & @rsp ^ (@rdi) | $buffer & @r11 ^ @rbp & @rsi ^ $teb)$ip + (0x11) >> @r13 >> 0xA & 0y10 << @r13 >> @r9 | 0n2 ^ @r8 & @rsp ^ (@rdi) | $buffer & @r11 ^ @rbp & @rsi ^ $teb)  { test_statement(0x1ED5); } else { test_statement(0x1232); ;  // /* This is a comment  }
$error$
$end$
1032
 if (~@r13 + $ip & +$buffer & @r10 >> @rdi((@r12 + @rdx << @rdi << @r12 | @r8 << @r13 >> @r13 >> (@r10) | $thread >> 0n5 & $buffer)  { test_statement(0xF55); @rax = (@rbp) >> +@r10 ; } else { test_statement(0x423);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10))$ip | 0y10001) ; }
$error$
$end$
1033
 if (@r10 + +$thread << 0x8 << 17 ^ $thread << @rax & $buffer & $teb & @rdi < ((20)) << $thread << @r10 >> $proc ^ @rsi << @rsi & $buffer ^ $teb)  { test_statement(0x5CC);  // /* This is a comment  } elsif (@r12 >> $thread ^ $thread | @r10 >> @r9 & 0x8 & $buffer ^ ~(@rsi) & @r11 | @rdi <= @r12 >> $thread ^ $thread | @r10 >> @r9 & 0x8 & $buffer ^ ~(@rsi) & @r11 | @rdi) { test_statement(0x653);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ (+@r11)(@r8 | 0n19 | $ip) ;  This is a not opened comment */ }
$error$
$end$
1034
 if (@rbp << $ip & @r12 << @r9 & @r9 >> 0y1010 ^ @rsp << $ip & 0y101 >> $thread & $proc | @r8 >> @r9 >> +0n9 & @r13 >> $buffer | 0xA >> -4 & @rsp & $buffer ^ +$proc & $proc | @rbx ^ @rsi | @rax | $proc <= @r12 | ~@rdx >> @rdi & @rdx | @rax >> @rdx & $ip ^ 15)  { test_statement(0x2244); } elsif ($proc << @rbx >> @r8 ^ ($ip) >> 0xF & $proc | $ip ^ @rdx & @r11 | @r8 ^ @rax | @rbx ^ $thread | @r8 | $teb > 23 & @r9 ^ 0x6 >> @r13) { test_statement(0xFE6);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi(@r12) ;  while  (@rdi != @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1035
 if ($thread << @r9 << @rbp >> (@r13) >> ($buffer) >> $ip | $teb << @r9 & @r12 & @r13 & @rbp ^ @rdx >> ~@rdx & @rsi ^ @rbx ^ $ip ^ 0y10011 | 0n18 >> ~16 == $proc << @rbx & @rsi ^ @rax & $thread | $thread & @rbx >> @r11 & $teb ^ @rbp)  { test_statement(0x14E9);  /* This is a comment */ } elsif (1 >> $teb & -@r12 >> @r9 & +@rbx & ~~$thread | @r9 >> +@r12 & @rbx & @rdx ^ @rax ^ @rdi | @r9 1 >> $teb & -@r12 >> @r9 & +@rbx & ~~$thread | @r9 >> +@r12 & @rbx & @rdx ^ @rax ^ @rdi | @r9) { test_statement(0x477); }
$error$
$end$
1036
 if (@r13 + @rbp << @rdi << -@rsi & 0x12 << ~$thread ^ @r13 << -@rsi >> $thread >> 0x7 ^ -@rbx & +$ip == @r13 + @rbp << @rdi << -@rsi & 0x12 << ~$thread ^ @r13 << -@rsi >> $thread >> 0x7 ^ -@rbx & +$ip)  { test_statement(0x7F);  // /* This is a comment   /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp))22) ; }
$error$
$end$
1037
 if (@r10 << @r9 << $teb >> @r8 >> +@r9 & $buffer << $thread ^ @r9 << ~@rbp & 0x7 | $thread >> $proc >> @rdx = @r10 << @r9 << $teb >> @r8 >> +@r9 & $buffer << $thread ^ @r9 << ~@rbp & 0x7 | $thread >> $proc >> @rdx)  { test_statement(0x9F2); ;  /* This is a comment */ }
$error$
$end$
1038
 if (@rax << @r10 << (@rbp) & 0n4 << @rax & ($buffer) >> (@rbp) ^ ~0y110 >> @rsi ! -@rsp + $proc & $proc << ($ip) >> @r12 & 0n8 >> 21 & @rsi)  { test_statement(0x1A);  for (; @r11 >= @rbp ^ 0x13 ^ @r13 | @r11 ^ $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1039
 if (@r13 << $teb << $ip | ~$teb >> @rdx >> $buffer != @rbp << @r12 << @rdi >> @rbx << @r11 >> $ip >> 14 ^ @r8 >> (@r9) & $thread ^ 0y100 ^ @r9 | $proc << @r13 ^ 0x5 & $thread)  { test_statement(0x14DB);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp == 0y101) ; } elsif (@rsp << ~@r11 >> @r9 <> $thread << +$buffer >> 0x2 >> @r11 ^ $ip | @r12 & ~$proc | 22 ^ @rsi) { test_statement(0x24A0); }
$error$
$end$
1040
 if (@rdx >> ~@rbx << 0x11 >> +0y0 & @r13 << @r12 >> @rbx >> $ip & @r10 >> @r8 & ~@r13)@rdx >> ~@rbx << 0x11 >> +0y0 & @r13 << @r12 >> @rbx >> $ip & @r10 >> @r8 & ~@r13)  { test_statement(0x1314); } elsif ($proc >> $proc & @r13))$buffer | @rsp & 0y1100 ^ @rdi & @rdx ^ ~0n15) { test_statement(0xA8); } elsif (@rdx >> @r9 | -@rax & @r13 ^ $teb ^ -@r13 | @rsi ^ 0y1011 | 14)@rsi ^ @rdi ^ 14) { test_statement(0x43F); } else { test_statement(0xA2); }
$error$
$end$
1041
 if (@r10 + @r11 << @rax | @r10 & @rdx | @rdi | @r8 | (0x13) | 0xD | +~@rbx(@rbp + (@r9) & @rdi >> @r13 >> @r10 | @rsp ^ @rdi & (0n5) ^ @rdi | @rbx & @r13)  { test_statement(0x84E); } elsif (@r9 << @rdi & @r9 & $ip & ++@rsi ^ @rsp ^ @r9 & 0y1101 ^ @r9 != @r9 << @rdi & @r9 & $ip & ++@rsi ^ @rsp ^ @r9 & 0y1101 ^ @r9) { test_statement(0x134B);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc | $proc > @r11) ; } elsif (@r8 >> ~@rbp | @r12 ^ @r9 ^ $proc | 0n6 ^ @rsi | @r11 | @rsi > @rbp >> (@rsp) & @r13 & +$buffer ^ 0x3 & @r13 ^ $buffer | @r12 | +@rsp ^ $thread | $buffer | 0n8) { test_statement(0x154F);  /* This is a comment */ } else { test_statement(0x882); }
$error$
$end$
1042
 if (@rax + @rax << @rbp >> @rbp >> $buffer >> @r13 ^ @rdx & @rdx <> @rax + @rax << @rbp >> @rbp >> $buffer >> @r13 ^ @rdx & @rdx)  { test_statement(0x24EE);  /* This is a not closed comment }
$error$
$end$
1043
 if (0y1001 & -@rbp << -$thread ^ @r12 << 0n3 ^ @r12 >> @r12 & @r8 & $proc <= 0y1001 & -@rbp << -$thread ^ @r12 << 0n3 ^ @r12 >> @r12 & @r8 & $proc)  { test_statement(0x5DA);  if (@r11 | @r8 ^ $proc | ~@r10 ; 0xD ^ @rdi ^ @rdx)  { test_statement(0x158A); } elsif (15 | @rsi | @r10 < $proc ^ @r8) { test_statement(0xF53); } elsif ($thread = $thread) { test_statement(0x16A4); } elsif (@r8((@rsp) { test_statement(0x1428); } else { test_statement(0x11F); } }
$error$
$end$
1044
 if (0x10 ^ -$ip >> 0n19 >> @r10 == $buffer << $buffer >> $teb << @rbp >> 0 >> @rax ^ @rsi << $proc)  { test_statement(0x53E);  for (val = 10; @r9 | @rdi ; $ip ^ ($proc) | 0x7 ^ $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (-0x0 ^ 0y10011 | @r12 <= -0x0 ^ 0y10011 | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rdi | @rdi < 0x7 | @rsi)  { test_statement(0xD9B); } elsif (0n5 >= 0n5) { test_statement(0x54A); } elsif (@rdx ; @rdx) { test_statement(0x267B); } elsif ($proc >= $proc) { test_statement(0x25D7); } val = @rdi | 22 ;  // /* This is a comment   /* This is a comment */  /* This is a not closed comment }
$error$
$end$
1045
 if (@rax + $proc))0n16 << @rdi << @rbx)  { test_statement(0x2436); } elsif ($teb >> ~@rbx ^ @rsi >> -$ip & $buffer & @rsi | 1 >> @rsi & @rsi & @rbp ^ @r8 > $teb) { test_statement(0x17D1);  /* This is a comment */ } else { test_statement(0x1EF8);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer | @rsp))@rsi | @r12) ; }
$error$
$end$
1046
 if (@r10 << @r13 >> $teb ^ -@rdx & @r13 >> $proc & @r11 & @rbx ^ 20 >> @r8 & @r8 ^ ~@r10 & $ip <> @r13 << @r9 << $teb ^ 0y1100 | @rsp >> @r12 >> @r8 | 0x1 >> @rax & @rdi)  { test_statement(0x580); } elsif ((10) >> @rbx ^ -@r8 | -$ip >> $teb ^ ~@rbp & @rax)@rsp << -+($proc) & @r12 >> @rsi ^ 6 ^ @r13 & 0y10010) { test_statement(0xD02);  for (val = 10; @rsi ^ @rbx | @r11))@rsi ^ @rbx | @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
1047
 if ((@r13) & @rbx | 0n13 << +@rbp & 0n7 >> @rax == (@r13) & @rbx | 0n13 << +@rbp & 0n7 >> @rax)  { test_statement(0x1F78);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ^ ~@rsi ^ @rsi)$buffer | @r8 | 0x0) ;  /* This is a not closed comment } elsif ($teb << 0y1100 & $thread ! $teb << 0y1100 & $thread) { test_statement(0xBF5);  for (val = 10; @r12 ^ @rdi ! $ip | 12 | 0n18;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1048
 if ($thread << 23 >> ~@r11 << @rsp >> @r12 & @r8 | $ip >> $buffer & ~@r13 | +~+14 & @rbp & @r12 | @r12 ^ +@r13 | @rsp | @rax ; 0n11 + @rbx)  { test_statement(0x6C6);  for (val = @r10 ^ @r10 | $ip ^ @rbp; @rbp | $thread ^ @rdx <= $thread | @rax | @r12 | 0y100;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1049
 if ((0xA) & $thread << $ip < 0x3 + $thread << +@rdi >> @rdi << @r8)  { test_statement(0x23FF);  This is a not opened comment */ }
$error$
$end$
1050
 if (+(@rbx) << @r11 << @r10 & @r10 << @rdx >> $thread | $buffer << $buffer ^ 0 & ($ip) & $buffer ^ $buffer & +0n15 ^ 0y100 | @rsi >> 0y1010 ^ 0x6 & $buffer <= 23 & $proc >> @rsp >> @r13 ^ @r10 >> @rdx >> 0y1010 & @rbx >> @rsi)  { test_statement(0x1B9A); @rax = ~@r12 ^ $ip & @r9 ^ @r13 ;  if (@r8 ^ @rbx | @r12 | @r10))$teb)  { test_statement(0x705); } else { test_statement(0x14EA); }  /* This is a comment */ } elsif (@rbx >> @r10 ^ 0y1111 & ~$buffer))@r9 << @r13) { test_statement(0x4EC); } else { test_statement(0x88F); }
$error$
$end$
1051
 if (@r11 << @rdi << -$thread ^ $teb << @rdi >> @rbp >> $thread ^ $buffer ^ @r13 | ~@r8 << @rdx >> 11 ^ @rdx | 0x10 & @r10 & ~$ip ^ $buffer & @rsp | 0y1011 & 0y1001 > $proc << @rsi & $thread & @r12 >> 0x3 & @rsp ^ @r11)  { test_statement(0x1367);  while  (@r11 & @rdx ^ $ip | -@rdi ^ $thread ; 0x12 & @r13 | ~@r8 ^ @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1A40);  if ($proc ^ $buffer | $thread | @rdx != $proc ^ -@rbp)  { test_statement(0x26ED); } else { test_statement(0xA86); }  while  (@rdx | 0x2 >< @rdx | 0x2)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@r10) == @rax) ;  break; }
$error$
$end$
1052
 if (@rbx << @r9 << 22 | @r9 & @r11 & @rbp & @rbp | -0xA >> ~+@rdi ^ 0y1110 | 0n2 | @rax ^ -@rax <= @rsp << 7 >> @r10 << @rdi & @rbx << @r8 ^ @r9 << 0x2 & @rsp >> $teb ^ @r13 & $teb ^ @r13 & 0n4)  { test_statement(0x4CD); } elsif (@r13 << @rbp | $buffer >> $thread ^ --@r8 ^ @rdx ^ $ip | +$proc = +@rdi << ($buffer) & +($thread) >> $thread & $teb & $thread ^ @rsp & $ip) { test_statement(0x492); } else { test_statement(0x4A6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rsp ^ 0y10001 | 0y1 | $teb = @rbp ^ @r8) ; ;  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx(($proc)) ;  break;  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi @rax) ; }
$error$
$end$
1053
 if (@rax << ~0x7 << -@rsp ^ @rdi << @r11 >> $thread & $teb & @rdi ^ @rax ^ @rsp & $thread ^ 0y10010 ^ @rbx | 0n3 ^ @rsi >> $thread ^ +@r12 & $buffer | ~$ip & 0n17 | @r12 ^ @rdx < @rax << ~0x7 << -@rsp ^ @rdi << @r11 >> $thread & $teb & @rdi ^ @rax ^ @rsp & $thread ^ 0y10010 ^ @rbx | 0n3 ^ @rsi >> $thread ^ +@r12 & $buffer | ~$ip & 0n17 | @r12 ^ @rdx)  { test_statement(0x63D); }
$error$
$end$
1054
 if (-0n6 ^ $proc << $buffer & @r12 >> 0y1111 & @r13 @rsi << @rsi & $buffer << 0y1001 >> @r11 >> $thread | (@rdi) << $buffer & @rsi | +$thread >> ~$buffer | @r11)  { test_statement(0x1131);  for (val = @rax | @r13 ^ @rbx | @rax | @rsi; @r8 & 0xB ^ (0y110) > +@rax | $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1055
 if (0n5 + @r8(@r8 + @r8 ^ (@rdi) << @rsp >> @r12 >> @r9 & @rdi ^ +(0xA))  { test_statement(0x1BA4);  for (val = @r11 & @rsp | ~0x13 ^ @rbx; $buffer | 0 ^ @r11(($buffer | 0 ^ @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   // /* This is a comment   /* This is a not closed comment ; } elsif (@rdx & @rdi & $thread & @rsp ^ $thread >> (@rbp) ^ @rax & $thread ^ $proc < @rdx & @rdi & $thread & @rsp ^ $thread >> (@rbp) ^ @rax & $thread ^ $proc) { test_statement(0x2513);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ^ 0n13 == @r11 | @r9 | $thread) ; } else { test_statement(0x1211);  /* This is a not closed comment }
$error$
$end$
1056
 if (@rdx + @r12 & (@rsi) ^ @r10 >> @r12 | @rax >> ~@r11 >> $teb & $teb >> 0n6 ^ $teb & ~@r11 & @rbp >= @rdx + @r12 & (@rsi) ^ @r10 >> @r12 | @rax >> ~@r11 >> $teb & $teb >> 0n6 ^ $teb & ~@r11 & @rbp)  { test_statement(0xA35); }
$error$
$end$
1057
 if (@rdi >> $thread << @rbx & (~@rax) << $teb >> +@r8 >> $thread & @r8 >> @r13 | 0y10001 >> @r12 >> @r8 ^ @rsp >> @rbp & @rdx >= @rdi >> $thread << @rbx & (~@rax) << $teb >> +@r8 >> $thread & @r8 >> @r13 | 0y10001 >> @r12 >> @r8 ^ @rsp >> @rbp & @rdx)  { test_statement(0x629); } elsif ((0y1010) << @rsp >> (0x9) >> $buffer & @r11 >> @r8 ^ $teb & $teb ^ @rdi ^ @r12 ^ (0n11)(0y1010 & +@rdi & ($thread) & 0x0) { test_statement(0x781);  while  ($ip | $buffer >= $ip | $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (~@r13 >> 3 | @rdx & @r11 ^ $buffer | 0n18 ; ~@r13 >> 3 | @rdx & @r11 ^ $buffer | 0n18) { test_statement(0xA7C); }
$error$
$end$
1058
 if (@rbp & $proc << 0xD >> @rsi >> @rbx | @rbx ^ 0y10001 & @r10 ^ @rax & $teb != @rbp & $proc << 0xD >> @rsi >> @rbx | @rbx ^ 0y10001 & @r10 ^ @rax & $teb)  { test_statement(0x230E); } else { test_statement(0x595);  for (; 0x11 ^ $thread | @rbx > 17;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1059
 if ((@rsi) + @rbp & 0xB << $ip ^ $proc >> ~20 >> @rbp @rbp >> @r8 << $buffer & 17 & -0y1101 & @r10 ^ $teb << $thread ^ @r11 >> $buffer ^ +@r10 & @rsp | @r10 << @rdi)  { test_statement(0x14BB);  for (; 0x12 | @r12 ^ @rdx | @rdx = 0x12 | @r12 ^ @rdx | @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
1060
 if ($buffer + @r12 << $ip << ~@rdx >> $teb >> 0x1 >> $ip ^ ~@rax >> $proc >> @rdx & $buffer ^ @rsi >> @r9 & @rsp & @rbx | @r8 ^ $buffer >> $ip & @r13 ^ @r9 ^ @r9))$buffer + @r12 << $ip << ~@rdx >> $teb >> 0x1 >> $ip ^ ~@rax >> $proc >> @rdx & $buffer ^ @rsi >> @r9 & @rsp & @rbx | @r8 ^ $buffer >> $ip & @r13 ^ @r9 ^ @r9)  { test_statement(0x19); }
$error$
$end$
1061
 if (@r8 + @r13 >> @rsi >> 0y10010 >> @rdx((@r8 + @r13 >> @rsi >> 0y10010 >> @rdx)  { test_statement(0x9EF);  // /* This is a comment  }
$error$
$end$
1062
 if (@rdx + @rbp @r9 >> 5 << $buffer & 15 << 13 >> (@r13) & @rdi >> @r10 ^ $proc >> @rsp)  { test_statement(0x175B); @rax = 16 >> @rbp | @r9 ; } elsif (@r11 >> -0n17 & @r9 ^ -(@r8) >> $proc & 6 & @rbx ^ @rax & @r11 | @r13 >> 0n19 & $thread & $teb +(@r12) << $thread >> 0n14 ^ @r11 >> @rbp & @rdi ^ @rdx ^ @rdi ^ @rdx) { test_statement(0x259E);  while  ($buffer ^ @rbp <= @r8 | 0y11 | ~@rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rsp ; } elsif (@rdi ^ 0y1101 & @r13 <> $buffer >> @r13 & $thread ^ @rsp | (((@r11))) & @rbx ^ ~@rdi ^ @rbp) { test_statement(0xC8B); } elsif (@rsi & @rbx ^ @r9 ^ $proc >= @r13 & @r8) { test_statement(0x868); } elsif (@rbx ^ $proc | @r9 != $teb) { test_statement(0xEB7); ; } elsif (@rax > $teb | ~$ip) { test_statement(0xC08);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip ! @r10) ; } elsif ($teb))$teb) { test_statement(0xE47); ;  /* This is a not closed comment } else { test_statement(0x265C);  if (@r10 ^ $ip(@r9)  { test_statement(0x2277); } else { test_statement(0x238D); } }
$error$
$end$
1063
 if (@rsi + @r11 >> @rbx >> +12 & @rax << @rdi >> $buffer & @r10 >> @rsp & @r10 & (0x13) | @r8 >> 13 >> @r11 | $ip >> @rbp ^ @r9 ^ @rsi ^ $thread | @rbp & $teb | @r12 ^ (0x2) | $thread | @rax ; @rsi + @r11 >> @rbx >> +12 & @rax << @rdi >> $buffer & @r10 >> @rsp & @r10 & (0x13) | @r8 >> 13 >> @r11 | $ip >> @rbp ^ @r9 ^ @rsi ^ $thread | @rbp & $teb | @r12 ^ (0x2) | $thread | @rax)  { test_statement(0x1D24);  // /* This is a comment   /* This is a not closed comment }
$error$
$end$
1064
 if (@rdi + 0n4 << @r8 << @r12 & 0n8 >> +0n6 >> $thread ^ @rbx << $ip & @rdx ^ $buffer >> @r9 ^ @rsp < $buffer + +@r9 << @rax << +@rax & $buffer << 0x6 & @r9 >> (@r8) | +@r9 & $proc >> @rdx | 0x9 >> @rdx)  { test_statement(0x1DB7);  while  (@r12 & $thread ! @rax & @r9 | @r9 ^ @rdx | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rbp & $buffer ^ (@r8) ^ +@rax ;  if (@rbp @rsp)  { test_statement(0x2256); }  This is a not opened comment */ } elsif ($ip >> $proc ^ 0x5 ^ @rsi & -@r9 = @r11 & $proc >> -$teb ^ @rsi & @rdi & @r9 ^ @rdx & @rdi ^ @rbp ^ $ip | 1 ^ (@r10) & $ip ^ @r12 ^ @r13 | +@rbp & @r10 ^ @r12 ^ @r8) { test_statement(0x1C49); } elsif (@rbp & @r8 & 1 ^ 0n6 & @r10 > @rdi) { test_statement(0xA5F);  for (; +@rsp != +@rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r13 & @r10((0n1 | +(~@r9) | ~@rdx) { test_statement(0xF84);  for (val = 10; 0y11 > 0y11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0y1100 < @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r13 ! ~$thread)  { test_statement(0x109C); } } elsif ((@r9) ^ 0xD(((@r9) ^ 0xD) { test_statement(0xA10); } elsif (-0n6 | (+0y1011) != -@r12) { test_statement(0x1A28);  for (; @rbp))0y10000;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x52C);  break; val = @rax ^ 0n2 ;  if ($buffer == @rbx)  { test_statement(0x525); } elsif (0 >= @rax) { test_statement(0x20C9); } else { test_statement(0x1DA5); } val = @r11 ; }
$error$
$end$
1065
 if (@r8 << (~~~~~(@rdi)) & +@rdi << +@rdi >> ~0n19 ^ @rsi << +0x3 >> @rsp & 0y1010 >> @r11 ^ @rdx >< 0y1111 >> $ip >> @r8)  { test_statement(0x64A);  break;  /* This is a not closed comment  while  (-23 >= @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } else { test_statement(0x2498); ;  // /* This is a comment  @rax = $buffer | -~@r13 ; ; }
$error$
$end$
1066
 if (0y1100 >> @rax ^ $ip & $teb & $teb & $proc ! 20 + -+$teb << @rsp & 6 >> @rsp & @rsi >> +@r11 & $buffer ^ 0x6 << -@rsi >> -@rsp ^ @r12 >> 0n3 | 15)  { test_statement(0x2406);  /* This is a comment */ } elsif (~$teb << 0n8 & $proc >> @rax ^ +$thread))@r10 << @r9 ^ @rbp & +$proc | @rbp | $buffer ^ -0n5 ^ @rbx) { test_statement(0x1859); } elsif (0xD >> 0n19 & @r13 & $proc == @r12 >> 5 & ~23 & @rdx) { test_statement(0x2FB); @rax = $teb ; } elsif (@rsp & @r13 ^ $proc ^ @r8 | +@r13 ^ $ip | @rax((@rsi ^ @rdx) { test_statement(0x118A);  while  (0x13 ! @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx <= $teb) ; } elsif ($thread ^ 16 | $teb == $thread ^ 16 | $teb) { test_statement(0xE5E);  /* This is a not closed comment val = @r9 ; ; ; } else { test_statement(0x23CC);  if (@rax | ~@r11 == @rax | ~@r11)  { test_statement(0x2260); } else { test_statement(0x2386); }  This is a not opened comment */ }
$error$
$end$
1067
 if (@rbp + @r10 << 0n10 << @rax ^ @rsi << @r11 | @rbp << 16 & @r10 >> @r10 & @rdi & $ip | @r11 >> ($teb) ^ @rsp ^ $thread ^ @rdx >< @r13 + @rbp ^ @rbp | @r13 >> @rsp & $buffer >> @r11 & @r9 & (0n3))  { test_statement(0x220F);  break;  /* This is a not closed comment ;  This is a not opened comment */ } else { test_statement(0x137A); val = $proc | $buffer ^ @r9 | @r12 | @rsi ; }
$error$
$end$
1068
 if (+(0y111) + +@rbx >> 0xD >> @r13 ^ (@r10) >> @r10 >> $proc ^ +0n2 >> @rax & @rbx == @rbx + @rsi)  { test_statement(0x18C3); }
$error$
$end$
1069
 if (0n11 + $ip << ~@r13 << ~@r10 & 0x8 | @r13 ^ @rdx & @rdx & @r13 | +@rdi >> 0x10 == $thread + $teb | @rax << @r10)  { test_statement(0x1C3E); } elsif (@rdi & @r13 >< $proc << @rax >> +@r12 >> @rax & @rbp ^ 5 >> 17 & @rsi) { test_statement(0x42); }
$error$
$end$
1070
 if ($proc + @r11 << @rsi >> 0y0 << @rsp >> @r8 >> @rax < 0xC + 0 << @r13 & 0x10 >> $thread >> @rdi & -$proc >> (@rsi) & 0y10000 ^ @rbx << 0y11)  { test_statement(0x1AFF);  /* This is a not closed comment } elsif (@rdx << @r8 >> 0y1001 | @r11 ^ 0n2 & @r13 <> @rsp >> @rdi >> 0x2) { test_statement(0x1226); ;  while  (@rdi <> $thread | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  for (val = 10; @r12 = $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rbp)@rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp & @rbx ^ @rdx & 3 | -@rsi & $proc | @rdx > @rsp & @rbx ^ @rdx & 3 | -@rsi & $proc | @rdx) { test_statement(0x1869); } elsif (~@rbp & @rsp | $buffer ^ @rbx | @r9 >= @r9 | @r9 ^ @rsp) { test_statement(0xEEC);  /* This is a comment */  /* This is a comment */ val = $teb ; } elsif ($teb ^ @r9 10 | $ip) { test_statement(0x118F); } elsif (@rsp | $ip)0n12 | @rdi) { test_statement(0x19CF);  // /* This is a comment  } else { test_statement(0x559); }
$error$
$end$
1071
 if (@r12 + ~@rbp << $ip << @r13 & $teb << $buffer & @rbx & @r10 ^ @rbp >> @rsi ^ @r11 >> @r8 ^ $teb & $proc ^ @rbp < @r12 + ~@rbp << $ip << @r13 & $teb << $buffer & @rbx & @r10 ^ @rbp >> @rsi ^ @r11 >> @r8 ^ $teb & $proc ^ @rbp)  { test_statement(0xC52);  if ($ip & +-$thread <= $ip & +-$thread)  { test_statement(0x1AD2); }  if (@rsp ^ @rdi > @rsp ^ @rdi)  { test_statement(0x89B); } else { test_statement(0xABE); }  for (@rax = @rsp | ~@rsp; $buffer | @rdi ; 0x7 | @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1072
 if (+@r11 + @rax << @r13 << 17 & @r8 >> @rbx | @r12 << @r8 >> $proc & ~@rsi & @r12 +@r11 + @rax << @r13 << 17 & @r8 >> @rbx | @r12 << @r8 >> $proc & ~@rsi & @r12)  { test_statement(0x20BF);  while  (7 ^ @rax >= 7 ^ @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rdi & @r13 ; } elsif ((@r8) << +@r11 >> $proc >> $teb & $proc >> $teb & @rsp | $thread & $ip & @r8 ^ @r12 & @r8 | +@rdi)(@r8) << +@r11 >> $proc >> $teb & $proc >> $teb & @rsp | $thread & $ip & @r8 ^ @r12 & @r8 | +@rdi) { test_statement(0xB0A); } else { test_statement(0x3D4); @rax = 10 & @rsp | @r13 ^ 0y10 | @r10 ; ; }
$error$
$end$
1073
 if (0y1 + @r8 << @rsi >> @r12 << -$proc >> $thread >> $proc & @rax << @rsp ^ $ip << @r13 >> @rax & @r10 >> 13 & $proc & $proc | @r12 >> @rbx ^ @rsp ^ (@rdx) ^ 0n2 | 13 >> $ip | @r9 ^ @r8 | 0y0 | 0 | -$buffer >= 0y1 + @r8 << @rsi >> @r12 << -$proc >> $thread >> $proc & @rax << @rsp ^ $ip << @r13 >> @rax & @r10 >> 13 & $proc & $proc | @r12 >> @rbx ^ @rsp ^ (@rdx) ^ 0n2 | 13 >> $ip | @r9 ^ @r8 | 0y0 | 0 | -$buffer)  { test_statement(0x1A88); } else { test_statement(0x160C); }
$error$
$end$
1074
 if (@rbp + $teb >> @r13 << @rax >> $teb >> ~@rdi ^ @rdi << @rbx | +@r13 & @rdi | 6 & $thread & @rbx ^ @r8 & 0x2 ^ @r8 ^ @rdx | $buffer & $proc ^ @rbp ^ @rdx ; -@rdi + @rdx & +0y1001 << $thread | $teb << @rbp >> @r8 ^ 0y1000 >> @rsp)  { test_statement(0xA47); } else { test_statement(0x2504);  // /* This is a comment   This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y0)0y0) ;  if (0n12((@rdx)  { test_statement(0x12CD); } elsif (@rsp @rsp) { test_statement(0x1162); } else { test_statement(0x190B); } }
$error$
$end$
1075
 if (15 + (@rbx) & 0y1 >> 0y0 >> @r8 ^ @r13 << @rsi >> -$ip >> @r8 ^ ~$teb >> @rsi & @r10 & @r8 >< $buffer & 13)  { test_statement(0x2016);  break; } elsif (@rdi << @r12)@r11 << 0x3 | @r8 >> @rax) { test_statement(0x1B39); @rax = +$thread & $thread | @rbx ^ ~-@rsi ; } else { test_statement(0x2261);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x0 < 0n9) ;  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 = @r10) ; }
$error$
$end$
1076
 if (@rax + @r9 ^ +@rax >> @rsp >> $thread & @rax >> $teb | @r8 << @r10 & @r11 ^ @r12 ^ @rbx > 0n4 << @r10 << (@rsp) >> 0n16 >> @rsi >> @r12 & @rdi << @r8 >> @rdi & $ip & 0x13)  { test_statement(0x5A8);  for (@rax = @r11 & $buffer ^ @rsp ^ $proc | +0n14 ^ @r8 | $ip; @rdi & @r10 ^ +@rdi | 0n17 ^ @r9 <> @rdi & @r10 ^ +@rdi | 0n17 ^ @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp | @r8 <> ($ip) | $ip) ; }
$error$
$end$
1077
 if ($ip + 0n13 >> @rbx == $ip + 0n13 >> @rbx)  { test_statement(0x1BBC); } elsif ($thread >> (@r12) >> $buffer ^ $proc >> @rdi & +@rax & 0xE ^ @rbx | @rax >> 0x3 ^ @rdx & @rbp ^ @rbx ^ (@r11) >= $thread >> (@r12) >> $buffer ^ $proc >> @rdi & +@rax & 0xE ^ @rbx | @rax >> 0x3 ^ @rdx & @rbp ^ @rbx ^ (@r11)) { test_statement(0xCAA); }
$error$
$end$
1078
 if ($proc + @rsp << @r10 << @rdi & @rbx ^ $ip & @r10 >> $thread & @r11 & $ip ^ @rdi & @r9 & @r10 ^ $ip & +$teb < $proc + @rsp << @r10 << @rdi & @rbx ^ $ip & @r10 >> $thread & @r11 & $ip ^ @rdi & @r9 & @r10 ^ $ip & +$teb)  { test_statement(0x50);  This is a not opened comment */ } elsif ($ip >> @rsi >> @r9 ^ ~@rax >> @rsi | @r11 >> @r12 == @r12 << @rbx >> $proc | ~$ip >> @rbp ^ $proc ^ 17 ^ @rbx | @r13 & ~0n14 ^ 0y10011 ^ @r12) { test_statement(0x213A); } else { test_statement(0x234A); }
$error$
$end$
1079
 if (@r12 + (0y1110) << $ip << $teb | -0n14 >> @rsi >> @r12 & @r10 ^ @rdx >> ~$proc & @r12 & 0y10010 ^ 0x3 & @rsp | @rdx & $teb & $proc | $proc | @r9 | @rbp | ~$teb != @r12 + (0y1110) << $ip << $teb | -0n14 >> @rsi >> @r12 & @r10 ^ @rdx >> ~$proc & @r12 & 0y10010 ^ 0x3 & @rsp | @rdx & $teb & $proc | $proc | @r9 | @rbp | ~$teb)  { test_statement(0x1A73);  // /* This is a comment  }
$error$
$end$
1080
 if (@rsi + 0y1001 << 0y11 ^ @rbx << @r10 & @r9 & $teb & (@r10) ^ -@r8 & @rbp & $ip ^ $ip(@rsi + 0y1001 << 0y11 ^ @rbx << @r10 & @r9 & $teb & (@r10) ^ -@r8 & @rbp & $ip ^ $ip)  { test_statement(0xA13); } elsif (@r8 >> $proc & $teb >> @r12 ^ ~-@rdi & $teb ^ 0y10000 & @rax ^ @r9 ^ $proc($teb << @rsi >> @rdx & @rdx >> (@rax) & @rbx & @rsp ^ @r8 & $thread | @r10 >> -@rsp & $buffer | +0 ^ @r13 | @rdi | $ip) { test_statement(0x56A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax | 0xC | @rdi = @r11 | $ip | $thread) ; } elsif (+@rbp >> @rsi ; +@rbp >> @rsi) { test_statement(0x1BEE);  break; } elsif ($buffer ^ +@rdi ^ @r9 >= 0y0 & @rbp ^ @r11) { test_statement(0x1297); }
$error$
$end$
1081
 if (@rbp + $buffer & @rax >< 5 + @r9 << @rax << @rax & $thread | @r13 << $proc >> @r13 >> @r12 & @rbp >> @rbp)  { test_statement(0x1E69); } elsif (~(@rdi) >> 0xA | @r11 & 0y10000 & -(+$teb) | @r10 & @rdi))~(@rdi) >> 0xA | @r11 & 0y10000 & -(+$teb) | @r10 & @rdi) { test_statement(0x1BD9); } elsif (-@r10 & 0y1111 & @r12 ^ @rsp | @rsp <= 0xF & +@r11 & @rbx ^ +@r13 & $buffer ^ @r10 ^ @rdi | @r10 | 0y1001 ^ $proc | @r12) { test_statement(0x8B5); val = @r11 ^ @rsp ; } elsif (0 ^ $teb $thread & @r12 ^ $thread ^ @rdi | ~+@r13 ^ @rax) { test_statement(0x26D3);  for (val = 10; @rbp < @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1082
 if (0n9 + (-$ip) & ~0n14 ^ @r11 << @r9 >> @rbx >> (@rsi) < +0x12 << $teb >> $ip << 0x10 >> @rsi & @rsi << @r12 & @rsp & @rbp | @rsp >> $buffer)  { test_statement(0x1309); } elsif ($teb << ~$ip & @r10 ^ @rbx >> 0x2 ^ $proc | $ip & @rsp & @r11))@rax << 0n7 ^ $thread >> 0n13) { test_statement(0x23F7); } elsif (@r9 = @rdx >> 0y10001 & ~@r8 & @r11) { test_statement(0xBE9); }
$error$
$end$
1083
 if ($proc + $proc << @r11 << $thread >> @rsp << +-@rdx >> ~@r13 >> $thread & (@r12) << 16 & @rbx >> @r9 >= 0x4 << @r13 >> 0x1 << $thread | $ip << $proc & $proc >> @r8 ^ $buffer >> 0y1111 & @rdi & 12)  { test_statement(0xE8B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~0xA)$thread & 0y101 ^ @rax) ;  while  (0y1011 ^ @rsp | (@r11) | @rsp == @rbx ^ $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x95C); }
$error$
$end$
1084
 if ($proc & @r13 | (23) << @rsp ^ (0y0) & @rsp & @r11 ^ @r10 & +@rax | ~$proc < @rdx + 0y110 & @r11 >> $ip & @rbp >> 23)  { test_statement(0xDAD); ; ;  /* This is a comment */ } elsif (@r8 & +@rbx >> @rdx <= @r11 >> $thread & $proc ^ @rbx | 0xF >> @rbp & ($thread) & -0y10) { test_statement(0x1D39);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 = @rdx) ;  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc(($proc) ;  // /* This is a comment  }
$error$
$end$
1085
 if ($buffer + @r13 & $proc >< -@rbx + -$buffer >> (@rsp) << 0n5)  { test_statement(0x1057);  break; } elsif (6 >> @rdx >> @r13 ^ @rsi >> @rdi ^ $thread & @rsi ^ @rdi ^ 0y10 | 0x1 ^ @r8 & @rbx | @rdi = @r8 << 0y0 >> @rsi ^ @r8 >> @r9 & (@r11) & @r13) { test_statement(0x10AC); }
$error$
$end$
1086
 if (@rdx << +~@r8 & $ip | @r11 << $thread & 0 >> $teb | @rbx & @rsp & @r11 | @r9 & @rsp ^ @r12 ^ $ip | @r13 | @r12 | -@rsp))@rdx << +~@r8 & $ip | @r11 << $thread & 0 >> $teb | @rbx & @rsp & @r11 | @r9 & @rsp ^ @r12 ^ $ip | @r13 | @r12 | -@rsp)  { test_statement(0x1F8B);  for (val = @r13; @rbp | @rdx ^ 20 ! @rbp | @rdx ^ 20;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1087
 if (@r10 + -@rdx @r9 >> $thread >> @r8 >> @rsi & @r8 << 0y10011 >> @r13 & @r11 | $proc >> -@r12 >> $thread | @r10 ^ +$proc & +@rdx ^ 0y10 | $ip & ~$thread)  { test_statement(0x1A5C); } elsif (@rdi << 0n16 | @rbx >> ~@rdx & 20(@rdi << 0n16 | @rbx >> ~@rdx & 20) { test_statement(0xCCE); } elsif ((@rsi) & @rsi | -@rsi & $teb ^ @rbp ^ @r11 > (@rsi) & @rsi | -@rsi & $teb ^ @rbp ^ @r11) { test_statement(0x1E44);  while  (+(-0n14) | 0y1100 ! 0y10010)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x8EA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer ^ @r8 | @r10 | -@rbx ; $buffer ^ @r8 | @r10 | -@rbx) ;  /* This is a not closed comment }
$error$
$end$
1088
 if (@rdx + ~@r9 << $ip >> @rbp ^ 14 >> @r8 ^ ~@rbp >> -$proc & @rdi ^ +@rbx & $proc ^ -~+@rbx ^ @r11 | @r11 >> @rsi & @rbx ^ $thread >> @r12 & +$teb ^ @rax > $buffer + $thread << ~@rsp & $buffer << $buffer >> 0y1010 & @r8 >> @rax ^ $thread ^ @rbp >> $buffer & $ip & ~@rbx ^ @rbp)  { test_statement(0x87D); val = $thread | $ip ^ @r13 ; } else { test_statement(0x1241);  while  (@rsi ^ @rdx((@rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (~@r9 == @rdx)  { test_statement(0x1766); } elsif (0xB >< 0xB) { test_statement(0x1D16); } }
$error$
$end$
1089
 if (~@r13 + @r8 << -@r8 == @rbp << ~0x2 & @rdi ^ @rbx & $buffer)  { test_statement(0x3EC); } elsif ($ip << @r13 >> @r8 | 0x1(0y110 << $ip & 0x7 | +@r8 ^ @rbx) { test_statement(0xB92); @rax = $proc & 15 ; } elsif (@r8 ^ 0x12 ^ 6 ^ ~@rsp | 0y1011 & ~@r10 > @r8 ^ 0x12 ^ 6 ^ ~@rsp | 0y1011 & ~@r10) { test_statement(0xD31);  /* This is a comment */  /* This is a comment */  if ($thread < $thread)  { test_statement(0x2373); } elsif ($teb <> $teb) { test_statement(0x261B); } else { test_statement(0xA7A); }  while  (@rsp ; @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
1090
 if (@r13 + @r13 << 20 >> @r11 & @r12 ^ @r10 >> @rbp >> @r13 < @r10 + 0xB << @r13 << @r11 >> (@rbx) & $buffer << @rbp & @r8 & 0n1 & @r10 ^ @r12 >> @r10 >> $teb ^ 0n0 ^ $thread)  { test_statement(0x1EFA);  for (val = 10; $thread & (@r11) | $ip >< $thread & (@r11) | $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~$ip << @rax >> @r11 >> 0n0 & ~+@rax >> +@rbp & @rbp ^ 0xD & $ip | @r11 >> @rbp & @rbp(~$ip << @rax >> @r11 >> 0n0 & ~+@rax >> +@rbp & @rbp ^ 0xD & $ip | @r11 >> @rbp & @rbp) { test_statement(0x2645); }
$error$
$end$
1091
 if (@r9 + $buffer ^ (@rax) << 0y110 & @rbx >> 0n19 & 13 & 0xE ^ @rbx >> +@r12 & @rdx & $thread ^ @rsp & @r12 <> $thread + @rax << @rbp >> @r10 << $thread ^ $buffer << +@r10 >> @rdx ^ $buffer & @rsp & $buffer)  { test_statement(0x852);  for (val = 10; 0x8 ^ $teb ^ @r12 = 0y1 & @r9 ^ $teb | -@rsi ^ $buffer | $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xFC3);  /* This is a not closed comment val = @r8 ^ @r9 ; }
$error$
$end$
1092
 if (@rdi + @r9 ^ $proc < @rsi + @rsi << @rbx ^ 0xE & @r9 >> 0y1011 & @r12 ^ @rdx & $ip)  { test_statement(0x134D); ;  // /* This is a comment  } elsif ($proc >> $teb >> 21 ^ @rdi | $thread ^ @r10 & @rbp ^ 0y1010 ^ -(0xF) | (@rsi) ^ @rbx ; @r11 | @r11 >> @r12 ^ @r9 & @r9 ^ @r9 | ~@r9 & 0y11 ^ @rax | ~@rbx) { test_statement(0xE29); } elsif (-$teb >> -$buffer ^ 0n19 & @rdx | +@rdx ^ $ip)@r9 >> $proc | @rbp & $buffer) { test_statement(0x1A);  /* This is a not closed comment } elsif (@r11 > @rax ^ (0x5) | 0n17 ^ 16) { test_statement(0x1260);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n14(@r9) ; } elsif (0n4 ^ @rsi > 0n15) { test_statement(0xAEF); } elsif ($buffer | 0xC @rsi) { test_statement(0x42E); } elsif ((@rbp) (@rbp)) { test_statement(0x2203);  // /* This is a comment  ; } elsif (@r12 < @r10) { test_statement(0x1292);  for (; (~0n15) <> (~0n15);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 == @r8) { test_statement(0x34A); } else { test_statement(0x1DF6);  if ($proc ^ @r12 | ~@r12 = 11 ^ @r13 | 0x13)  { test_statement(0x8A8); } elsif ($ip < 0n0 | @rbp) { test_statement(0x15E7); } elsif (@rax <= @r11) { test_statement(0x2474); } elsif (-$proc >< 6) { test_statement(0x8F2); } elsif (@rdi))@rbx) { test_statement(0x124F); } }
$error$
$end$
1093
 if ($teb + $thread << 0y1110 << @r12 & ($proc) << @rsp >> $ip >> $teb < $proc << 0y1110 << $thread >> ((@r11)) << $thread >> @rdi & @rsi << +$thread ^ @rsi << @rbp >> @r11 & @rax >> @rsi ^ @r9 >> @rbx ^ @rsp)  { test_statement(0x23AD); } else { test_statement(0x19BE); }
$error$
$end$
1094
 if (@rdx & 0y10001 << @rsp >> @rsi & @rbp ^ @r12 << 0xA >> @rdx & (@r12) >> $buffer | $thread & @r12 >> @rsp >< 0n17 << @rbx & @rsi << @r13 >> @rbp >> (@rax) & @rbx >> 7 ^ @r12 | -15 & 0x12 >> $teb | 0y10001 >> -@rsp & 0xD ^ $buffer & @rdx)  { test_statement(0x861); ; ; @rax = @rdx ; } elsif (0n0 >> $proc >> @rbp & @rdx >> $buffer ^ @rbx >> @rdi & @r12 & @rdi < @rdx >> $thread >> 0n8) { test_statement(0x167);  if (@r8 > @r12 ^ 0x5 | $proc)  { test_statement(0x21CE); } elsif ((@r12) ; +@rsi) { test_statement(0x229D); } elsif (@r12 > +@rbx) { test_statement(0x1672); } elsif (0y111 ; 0n7) { test_statement(0x807); } elsif (@r11 == @r11) { test_statement(0xB6); } }
$error$
$end$
1095
 if (0y1101 << @rbp << @rdx & @r11 << $thread & @r11 & @rbp | @rax & $thread >> @r12 | @rsi >> $proc ^ 15 ^ $buffer <= 0y1101 << @rbp << @rdx & @r11 << $thread & @r11 & @rbp | @rax & $thread >> @r12 | @rsi >> $proc ^ 15 ^ $buffer)  { test_statement(0x1FB1); } else { test_statement(0x1CB8);  break; }
$error$
$end$
1096
 if (-~$proc << @r8 & (0x4) << @rax & @rbx >> (($teb)) ^ $proc ^ (0x4) >> 0y101 >= -~$proc << @r8 & (0x4) << @rax & @rbx >> (($teb)) ^ $proc ^ (0x4) >> 0y101)  { test_statement(0x10D9); ;  if (~@rbp <> ~@rbp)  { test_statement(0x110D); } } elsif (0y10010 << @rdi & 0n8 >> -@r9 & $teb ^ @rax & $teb & @r13 ^ 0y1001 | $buffer ^ $buffer & @rbp ^ @rbp | (@rsi) & 0xB ^ 0y0 = @r13 << $proc >> @rsi >> @r11 ^ 0x8 >> @rsp & @r8 & $teb ^ @r13 ^ $proc ^ @r12) { test_statement(0xA6B); } elsif (0x3 = 0y1101 >> $buffer & $buffer ^ $proc ^ -@rbp ^ 0n17 | 0y1101 & @rdx | @r13 | 0xE) { test_statement(0x811); } else { test_statement(0x1E26); }
$error$
$end$
1097
 if ($thread + $buffer << @rbx << 0n10 >> 0x0 << @rdi >> 0x6 ^ @rsi >> +@rax >> @r9 & +$buffer >> $ip & @rax & +@rsi = 0x11 | 0y101 << $thread & @rsi & @r8 & 0y1010 | 17 ^ 0x9 | 0y1111 ^ +@r13 | $proc | @r13 | @rdx)  { test_statement(0x37F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x10 & 10 ^ $teb ^ @r8 | +~~@r12 ^ $proc | @rax == 0x10 & 10 ^ $teb ^ @r8 | +~~@r12 ^ $proc | @rax) ;  /* This is a not closed comment  // /* This is a comment  }
$error$
$end$
1098
 if ($ip >> @r13 >> @rax >> 0n8 & @r10 << 0y10001 >> @rdi >> $ip | -@rdi << @r13 & @rdi >> @r8 & @r10 >< @r11 << (22) << $ip >> 0n13 << @rbp ^ @r11 << @rdi)  { test_statement(0x1A80); } else { test_statement(0xCCF); val = @r8 ^ 15 | +@rdx ^ +$thread ; }
$error$
$end$
1099
 if (@r8 + -@rdi & @rsi << @r10 >> $ip >> @rdi & @rdi >> $thread ^ @rbp << $buffer >> +$buffer | -21 >> $thread & 0xB >> 0n9 ^ @rbx ^ @r11 = @r12)  { test_statement(0x24EC); } else { test_statement(0xE8A); }
$error$
$end$
1100
 if (@r13 + $buffer << @rax | @r8 | ~-$ip & @rdx ^ @rdx & @rsi ^ $proc > @rax << $proc & @r13 << @r10)  { test_statement(0x120A);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n8((0n8) ; } else { test_statement(0xB3D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi | +@rax | @rsi))@rsi | +@rax | @rsi) ;  for (; (0y1110) $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1101
 if ($proc << 0y110 & @rbp << @rsp >> @rdx >> 15 ^ 20 ^ @r10 & @r13 & @rsp ^ 10 ^ $teb <= $proc << 0y110 & @rbp << @rsp >> @rdx >> 15 ^ 20 ^ @r10 & @r13 & @rsp ^ 10 ^ $teb)  { test_statement(0x33C); } elsif (0xF << @rsi >> @r8 == $ip) { test_statement(0x23DC);  if (@rsi | @r13 >= @r9 | @r8)  { test_statement(0xE56); } } else { test_statement(0x1AC4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rbp ^ @rdi | @rdi | 0x7 >< $ip ^ @r10 | 0y10011) ;  This is a not opened comment */ }
$error$
$end$
1102
 if (@r11 | 0x4 << @rbp & @rdx >> $teb == @r11 | 0x4 << @rbp & @rdx >> $teb)  { test_statement(0x22A); } else { test_statement(0x31C);  // /* This is a comment  }
$error$
$end$
1103
 if (@rax << @rdi << @r13 & (0y10011) >> @r9 = @rdi + @rsp << @rsp & @rdi << @r11 >> 3 & $buffer >> $buffer ^ @r12 >> @rsp ^ $teb | @r13 >> $ip >> @r8 ^ @r13 >> @rsp & @rdx & @r11 | @rsp & @r11)  { test_statement(0x1825); } else { test_statement(0xB49); }
$error$
$end$
1104
 if (@rax << 0x13 & ~@r13 >> @rdi >> ($proc) & @rdx >> @rax ^ @r9 & @rsp & $thread ^ @rdi >> @rbx & @rsp ^ @r13 & $proc ^ $buffer ^ 0n1 < 0x8 + @r12 >> (@r13) << @r13 & @r13 >> $buffer >> ~0n16 & $thread ^ @r8 >> @r13 >> ~@r10 ^ (@r10) & ~@rbp & (0x10) ^ (@rsi))  { test_statement(0xCFD);  This is a not opened comment */ } elsif ($teb << @r10 >> @rdx >> 0y10011 & -@r11 >> $thread & $buffer & -@rsi ^ @r9 >> 0x13 ; $teb << @r10 >> @rdx >> 0y10011 & -@r11 >> $thread & $buffer & -@rsi ^ @r9 >> 0x13) { test_statement(0x222D); } else { test_statement(0x14E0); ;  // /* This is a comment  }
$error$
$end$
1105
 if (@r11 >> @rbx & @r11 >> @r13 >> @rax & @rbx >> 0x5 | @r9 << @rsp))@rbx + 3 ^ @rdx << +@r11 ^ 0n11 & @rsi | 0n12 << $teb >> @rax >> @r8 ^ $teb >> +@rdx ^ @r11 & @r13)  { test_statement(0x470); } elsif (@rdi >> $thread & 0x6 >> @r9 ^ $buffer & @rsp & @rax ^ $buffer ^ (5) ^ @rsp ; 0xC << $teb & @rbp & $teb & @rbx ^ 0xB & $thread & @rbp ^ -@rdx & $thread ^ $ip | @rsp ^ @r10 & $proc) { test_statement(0x17D8); } elsif (@rsi ^ $thread & $ip ^ @rsi ^ @r12 | @rdi | $teb ^ @rdx <> 0x12) { test_statement(0x2580);  break; } elsif (@rsp & @rdi ^ $thread | $buffer ^ @rbp | @r8 | $buffer <= @rsp & @rdi ^ $thread | $buffer ^ @rbp | @r8 | $buffer) { test_statement(0x1933);  /* This is a comment */ }
$error$
$end$
1106
 if (@r12 << 0y1101 >> $thread >> 0y0 & (@r10) >> 0x4 >> @rdi & @r8 & @r12 & +~0y1010 >< @rax + @r8 >> @rdi << @r9 | @rdx << @r13 & @r8 & ~@rsi & @r12)  { test_statement(0x1143); } elsif (0y1101 << $proc & @r10 ! 0y1101 << $proc & @r10) { test_statement(0x2493); } elsif ($thread >> 14 ^ $teb ^ @rsp ^ @rax | -@rbx | $thread | 0n11 ; @rdi & @rsp & @rax ^ @r10 & @r12 ^ (@r9) ^ 0x1 | @r13 ^ @rdx) { test_statement(0xEB9);  This is a not opened comment */ } elsif (~0n18 & $ip ^ @r13 ^ @rsp))~0n18 & $ip ^ @r13 ^ @rsp) { test_statement(0x745); } elsif ($teb ^ @r12 | @r9 >< @r11 | @r12 | 0y111) { test_statement(0x1A45);  if (@rbx != 0y1)  { test_statement(0x1555); } else { test_statement(0x25F5); } } elsif (@r11 $buffer) { test_statement(0xB78);  while  (0n19 != $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (@r11 >< ~0x3) { test_statement(0x13CF);  This is a not opened comment */  break; } elsif (0n16 ! 0n16) { test_statement(0xBA1); } else { test_statement(0x20B9); }
$error$
$end$
1107
 if (@rdi + $buffer >> @r9 >> ~-7 ^ @rsp << @rbx ^ @rsi >> @rsi & @rdx & 0y10010 ^ $buffer & @rax = @rsi + @r9)  { test_statement(0xF5D);  if (12 ^ -@rax | @r10 ^ $proc | @rdx | @rbx >= @rax & @rsp | $ip ^ @rbx)  { test_statement(0x1A8); } elsif (@r8 | ~@r9 | @r12 >< $buffer) { test_statement(0xBC1); } elsif (@rbp | @r9))@rbp | @r9) { test_statement(0x26C1); } else { test_statement(0x212D); }  for (val = 10; @rsp ^ @rdx(($buffer | ~@r9 | $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  break; } elsif (0n14 << @rsi >> @r10 >> $thread & 0xF >> @rdi & @rsp & ~$ip <> 0n0 >> @rdi >> +@rbp & 0 | @rdx & 0n0) { test_statement(0x227);  while  (@rbx(($thread | @r9 | 0y101)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; ; } elsif (@rdi >> $teb | -@r13 | $teb | @rbp | 17 >= @rsp) { test_statement(0x1B06); } elsif (@r11 ^ $proc)@rdx & @r12 ^ $ip | (0n0) | 0y1 | @rbp) { test_statement(0x216F); }
$error$
$end$
1108
 if (@rdi + @rsp << @rsi | ~0xA << @r13 | @rax | 0y11 & @r11 < @rax + 0n11 << @rdx << @rbp & -@r11 ^ $ip ^ @rsp & @r10 & @r8 ^ @rdi & $buffer)  { test_statement(0x1134); }
$error$
$end$
1109
 if (0y0 + 1 >> 0n9 ^ $buffer >> @r8))(~@rdx) + @rsp >> 0xA >> 0x2 >> @rax & $proc << @rdi & $proc >> $buffer & @r8 & $buffer ^ +0n1 >> $teb & 14 & 0n13 & +$buffer | @rsi >> @r8 & 10)  { test_statement(0xAC6);  for (; $thread = 0y1100 ^ 0y110 ^ $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1110
 if ($thread << @rdi & @rsp << @r13 >> @rax ^ $ip << (@rdx) >> 0y1110 >> @rsi ^ +@rsp >> @r8 ; $thread << @rdi & @rsp << @r13 >> @rax ^ $ip << (@rdx) >> 0y1110 >> @rsi ^ +@rsp >> @r8)  { test_statement(0x21B8);  while  (@r10 ^ @r11 > @rdi & $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rdi ^ @r8 | $buffer | @rbx != $buffer ^ @rax | @r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r8 ; } elsif (@rsp << @rsp >> 0xF & @r11 ^ @rax >> -0xC & @r8 & (@rbx) | @r8 >> 0n18 & 0x0 & @rbp(@r9 >> $proc >> @r12 ^ @r13 >> 0n8 & $proc & $thread | +0x7 >> 6 & @r8 ^ @r10 & 17 ^ @r8 ^ $proc | @r12 ^ 2) { test_statement(0x1DFF);  /* This is a not closed comment ;  /* This is a not closed comment } elsif (0n4 ^ @r13 >= -@rdx | 0xB ^ @r8 ^ (@rdi)) { test_statement(0x2252); } else { test_statement(0x2306); }
$error$
$end$
1111
 if (23 >> $buffer & ($teb) ^ @rdi & $ip >> @rbx & @rsi & @r10 ^ @rdx >> $buffer)@r9 << 0n10 & @rax << $buffer ^ +$ip & @rdx >> @rax & $teb ^ (@r12) & 0y1 & @r11 | @rdi << @rdi ^ @r12 >> ~@rdi | @rsi >> @r9)  { test_statement(0x142);  if (0y10010 & @rdi ^ @rsi(@rbp)  { test_statement(0x9DD); } elsif (2 < 0y1101 ^ @rdi) { test_statement(0x16C9); } }
$error$
$end$
1112
 if (@rsi << @rax & @rbx > 0n19 & @rdx & +@r11 >> 1 ^ @r13 << @r10 ^ 0y1000)  { test_statement(0x7D);  if (@rsi & $buffer | @rsp ^ $buffer <> 10 & 0y10000 ^ @r9 ^ 0x7)  { test_statement(0x2082); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n14 ! 0n14) ;  This is a not opened comment */ } else { test_statement(0xCB6);  /* This is a comment */ }
$error$
$end$
1113
 if ($thread << @rdx << @r9 <= $thread << @rdx << @r9)  { test_statement(0x5A4);  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
1114
 if (0x5 + @rbp >> -@rsi >> $thread >> -0n12 & @r10 & @r8 >> @r13 & $ip & +$ip ^ @r8 << @r13 >> -@r8 | 0n19 >> 0n17 >> @rbp | $proc & 0y1011 & +$thread | 0x4 | @rsi ^ $buffer((-@rax + @rbp ^ $ip << $buffer >> +~0x12)  { test_statement(0x1AE3); } elsif (@rbp << @r11 ^ @rax >> @rsi ^ -@r13 & 2 ^ (@r10) | 0y1011 & $proc & @rsp ^ @rdi & @rbp < $teb & $buffer & ~@r10 | $buffer >> @r9 & $proc & (@r10) ^ 0n15) { test_statement(0x672);  This is a not opened comment */  if ($ip >= 0x8 | @r11)  { test_statement(0x1E8E); } elsif ($buffer < $buffer) { test_statement(0xA95); } else { test_statement(0x101); } } elsif (-$proc >> @r12 & @rsi <= @rbx >> @r8 ^ $proc & @rbx) { test_statement(0x623);  /* This is a not closed comment } else { test_statement(0xEEB);  for (; 0n4 | $ip((0n4 | $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb(-$proc) ; }
$error$
$end$
1115
 if ($buffer << 0y111 >> @r8 >> @rdx >> @rbp & @r11 << @rsi)0n16)  { test_statement(0x2CF);  /* This is a comment */ } elsif ($proc << $thread >> $thread & @r13 ^ @rdi ^ @r11 & ~@rbx ^ @rbp | +10 >> $thread | @r10 & $buffer))$proc << $thread >> $thread & @r13 ^ @rdi ^ @r11 & ~@rbx ^ @rbp | +10 >> $thread | @r10 & $buffer) { test_statement(0x1E92); } elsif ($ip | @rbp & $thread ^ @rbp | +@rdx ^ @rdi < 0y10010 & @rbp | 0xB ^ 0n19 ^ @r8) { test_statement(0x2284); } elsif ($ip & @r9(0x12 | (@r8)) { test_statement(0xE2E); } elsif (@rbx != @rbx) { test_statement(0xFE4); val = @rbp ; } elsif (0n12(($ip) { test_statement(0xF46);  /* This is a comment */ } elsif (@r9 = 0x0) { test_statement(0xB3A); } elsif (@r9))$buffer) { test_statement(0x256); val = @rdi ; } elsif (@rax((@rdi) { test_statement(0x186); } else { test_statement(0xB8E);  while  (@r10 ^ 0n18 <> @rbx ^ +@rbx | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  /* This is a not closed comment  /* This is a not closed comment }
$error$
$end$
1116
 if ($ip & $ip << $buffer & 0n19 >> 0x2 ^ @r11)@r10 << 0y1011 & $thread & $buffer >> @rdi ^ $thread & $teb >> $buffer)  { test_statement(0x15AB); } elsif (@rsp << 0x9 & @rdx)@rsi >> @rbx >> $ip & 0y1001 ^ -@rax >> 0n10 ^ 0n0 ^ $buffer ^ @rax) { test_statement(0x3CE); }
$error$
$end$
1117
 if (0y1 << @rbx >> @r12 & 0n13 << $buffer & @rdx ^ ~@r9 != 0y1 << @rbx >> @r12 & 0n13 << $buffer & @rdx ^ ~@r9)  { test_statement(0x1E72); } else { test_statement(0x18FF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 ^ @r10))@r9 ^ $teb) ;  // /* This is a comment  }
$error$
$end$
1118
 if (@r10 + @rsi >> (@rbx) | 0n4 << @rax & $buffer ^ ($thread) $thread + @r12 << @r9 << @r10 & $ip >> 0x3 >> @r9 & @r9 | $ip << @rdx >> @rax & $buffer | @r11 ^ @r12 & @r13 ^ 0y1111)  { test_statement(0x1B10); }
$error$
$end$
1119
 if (@r9 | @r8 << @r12 ^ $thread >> 5 ^ @rbx 0n9 + @rdx >> $buffer & $buffer << @rdx >> $proc ^ +@rbp)  { test_statement(0x223A); } else { test_statement(0x26DE); }
$error$
$end$
1120
 if (@rbx + @r8 > @r9 >> @rdi & @rbx << $thread >> @r10 >> @rsp ^ @r12 << @rsp & @r11 >> ~$buffer & @rdx | 0n2 << $buffer ^ 0x3 ^ @r11)  { test_statement(0x669); } elsif (@rdi << ~@r11 & @r13 >> @r12 ^ 0y101 >> $ip ^ $teb | 10 ^ @r13((~0y1011 << @r11 >> @r9 & ~@r13 >> 0y1011 ^ @r10 ^ $thread ^ 0x0 ^ @r13) { test_statement(0x16E8); } elsif (@r10 >> @rbx)+0n10 ^ 0y1000 & -@r8 | $proc & 15 ^ @rax ^ @rdi | +$thread) { test_statement(0x225E); } else { test_statement(0x559); }
$error$
$end$
1121
 if (@rdi + @rbx & $ip >> $teb & @rbx >> $teb & @r13 & $thread ! -0y100 << 0x4 ^ $buffer >> 0n4 >> @r13 & 23 >> $teb ^ @r11 & 0n17 | 0n19 & @r10 >> 5 ^ ($proc) & 0y10000 ^ 0n6 & $teb)  { test_statement(0x228A); } elsif (@rdi << @rbp >> $buffer & @r9 >> (@rsi) ^ @rax >> @rdi ^ 0n17 ^ @rdi ^ @rsp >= $teb >> @r13 & @rsp >> @r8 & $ip & @r12 ^ @r13 ^ 0xD & ($buffer) ^ $buffer) { test_statement(0xCAD); }
$error$
$end$
1122
 if (@r8 << 0n10 >> @r9 ^ @r9 << @r12 >> @rdi))@r12 & @rbp >> @r12 & @rbx & @rsp & ~@rsp)  { test_statement(0xE3A);  This is a not opened comment */  while  (@r8 ^ $ip | -@rax((@r8 ^ $ip | -@rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1FB2); }
$error$
$end$
1123
 if (+~$ip + @rax << (@rsi) >> 3 << 22 >> @rbx ^ 0y1000 & $teb & +@rbx | @rax & 7 ^ 0x8 >> @r13 & @r13 ^ $buffer < $proc & ~$thread >> @rbx >> @rdi | @r9 >> @r12 | 0n4 & @rax & (-@r13))  { test_statement(0x1F2A); } else { test_statement(0x261E);  break; }
$error$
$end$
1124
 if (0y10010 << 0n14 << @rbp ^ $teb & @r10 ^ @r10 >> 6 & @r13 & $proc ^ @r11 & @r8 ^ $teb ^ @rbp == +$buffer + $ip ^ 0y10011)  { test_statement(0x4C5); } else { test_statement(0x7E);  /* This is a comment */  This is a not opened comment */  while  (@rdi(@rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1125
 if (~@rdx + 0n0 >> 0n4 & 0y10011 >> -0n1 >> @rsp & @rsp >> ~$thread & 0y1011 & @rbp ^ ~@rdi & @rdi & +@r12 & 0x3 | @r11 & 0x0 >> @r10 | 0xD & @rdx & 0y1101))0n17 & @rbx << $ip & @rdx >> $proc ^ $proc << @r11 >> @rbp >> @rbx | 0n4 << @rdx >> (@rdx) & 0x7 >> @rsp ^ @r8)  { test_statement(0x1BFC);  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
1126
 if (@r12 + @r8 >> @rbx >> @r12 >> $buffer & -@r13 ^ 0n1 | $thread & $teb >> @r9 ^ @r12 ^ @r12 ^ @rsp $proc + @rdi ^ @rax << @rbp >> (@r13) >> @r10 | @r9 >> @rsi >> @rbx & -15 >> 0n13 & $buffer & +@rsi ^ $proc >> @r12)  { test_statement(0x1358); } elsif (@rdx >> @rax & @r9 ^ @r12 ! @rax << @rbp >> +@r10 ^ @rax ^ @r9 & 7 ^ 3 ^ $thread) { test_statement(0xBC5); } elsif (@rax >> @rbx & +23 >= ~@r9 >> @r13 ^ @r13 ^ @rbp) { test_statement(0xE71);  for (val = 10; @r8 | +@r9((@r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif (21 & +$teb ^ @r8 | +0x8 @r9 & @rbp | @r9 ^ @r10) { test_statement(0x75C); } elsif (@rdi | 13))@rdi | 13) { test_statement(0x1620); }
$error$
$end$
1127
 if (+$proc & 0y0 << @rax >> @r9 | @r9 << $buffer & @rsp >> ($proc) & $thread = @r10 + @rdx >> -(~(@rsi)) & @rdx << @r10 & @r10 >> @r12 & 0y11 ^ @rsp << @r10 >> 0y1 >> @r8 & @rsi | @r12 & @r10 & @rdi | @rbx >> $proc ^ 0x9 & $buffer ^ +0n5 | 0y1 ^ $ip | -@rsi)  { test_statement(0x1CDC);  for (@rax = @r13 & $thread; @r12 ^ 0x1 ; 3 & $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 >> @rdx >> $thread & @r13 ^ $buffer >> @r9 & 0y1001 ^ @rsi & -@rdx ^ @r13 | @rsp > @rbp << -$buffer | @rsp >> @r11 & ($ip) ^ -@rdi ^ @r13 | $proc ^ 0n12 | @r10 ^ @r8) { test_statement(0x177B);  /* This is a comment */  for (; @r12 @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb >> +0x3 & ~@r10 & @rdx == @r9 & 0x4 ^ 14) { test_statement(0xC5B); } else { test_statement(0x26EA);  if ($buffer <= @r13 | $proc)  { test_statement(0x2B4); } elsif (+@r11((@r12 | @rdx) { test_statement(0x6E0); }  /* This is a comment */ }
$error$
$end$
1128
 if ($teb + 6 << $thread >> $proc >> 0xD >> (-$thread) ^ $ip << @rax | @r11 ^ @rbx >> @rbx & @rsi & @rdx ^ +@r10))$teb + 6 << $thread >> $proc >> 0xD >> (-$thread) ^ $ip << @rax | @r11 ^ @rbx >> @rbx & @rsi & @rdx ^ +@r10)  { test_statement(0x76A); } else { test_statement(0x2054); }
$error$
$end$
1129
 if (@rbp << 0y10001 << @r10 >> $teb >> @rsi & @r12 << $teb ^ -7 << @rax ! @r8 + $thread << (@rdi) << $proc & $thread << @rsp >> @rdi >> @rax ^ @rax << @rbp & @rax >> @rbp ^ 0x7)  { test_statement(0x5CF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@r12 & +@rax ^ @r9 = @rbp | @rsp | 0y100 | $teb) ; } elsif (~@r13 << @rbx & @rdi >> ~+~7 & 1 ^ @rsi >> --@rdx | -$thread >> 0x7 & ~@rbx <= ~@r13 << @rbx & @rdi >> ~+~7 & 1 ^ @rsi >> --@rdx | -$thread >> 0x7 & ~@rbx) { test_statement(0x26EA); } elsif (@r9 ^ @r9 & @r10 | 0y1111 & $ip ^ $ip ; ~~@r11 >> @rbp & @r13 & $buffer ^ ~$teb | @r11 ^ $teb | @r12 | 0n13 | -$teb) { test_statement(0x440);  break; } else { test_statement(0x1B29); }
$error$
$end$
1130
 if (@rdi + (@rbp) << ($thread) << 0y111 & @r11 << @r10 | @rax << @rdx & @rbp ^ @r13 >> ~$proc & @r12 ^ $thread & @r10 | @r12 & @rsp ^ $thread | @rbp ^ $thread ^ $thread | ($thread) ^ $thread <= @rdi + (@rbp) << ($thread) << 0y111 & @r11 << @r10 | @rax << @rdx & @rbp ^ @r13 >> ~$proc & @r12 ^ $thread & @r10 | @r12 & @rsp ^ $thread | @rbp ^ $thread ^ $thread | ($thread) ^ $thread)  { test_statement(0x10B3); } elsif (0 >> @r11 >> (@r11) ^ @r8 <= 0 >> @r11 >> (@r11) ^ @r8) { test_statement(0xA79);  // /* This is a comment  }
$error$
$end$
1131
 if (@rdi + +@r12 << $ip >> (@rsi) << @rsi & ~@rsp ^ ~$proc << @rdi & @r11 >> $thread | @rsp & +$thread ^ @r12 & (@rdi) ^ @rbx | @rsp & $proc ^ @r12 | @r13 | @rbp > @rbp + ~@rsi ^ $teb)  { test_statement(0x142E); }
$error$
$end$
1132
 if ((0n5) & ~@r13 << 7 >> 0x1 >> @rbx | $thread >> @rsp >> @r11 & --@r12 & 4 | @rbp >> @r9 & 6 & @r12 ^ @r11 ^ @r8 ^ 15 == $proc + $teb >> +0n8 << $buffer | $buffer >> $ip & @r9 & 0xD & -$ip ^ @r13 & $thread | $ip >> @r13 & @r11 & $buffer | $ip & @rsi ^ @rbp | $buffer)  { test_statement(0x17AA);  while  (@rdi ^ @r8 ^ @r10 == $thread ^ ($ip))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsi << @rdx ^ @rax & @rsp ^ 0xA < @rsi << @rdx ^ @rax & @rsp ^ 0xA) { test_statement(0x1B35); } elsif (~@rsi >> $teb ^ @r10 & @rbx <> @rdx >> @r8 & $ip & 0x1 ^ @r11 ^ @r9 | (@rdx) & (~@rsi) ^ @r9) { test_statement(0x969);  // /* This is a comment   This is a not opened comment */  for (; $teb <> $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r8 @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer ^ ~$thread | @rdi | $teb(($buffer ^ ~$thread | @rdi | $teb) { test_statement(0xDB0); } else { test_statement(0x231F); }
$error$
$end$
1133
 if (0n14 >> $ip = 0n14 >> $ip)  { test_statement(0x12EA); } elsif (@r12 ^ 0x4 | 0y101 ^ $ip & $ip ^ @r10 ^ 0n3 | @rdi & @rdx ^ 0x10 ^ ($ip) ; @r10 >> @r10 & -@rdi >> @rdi & @rbp ^ (@rsi) & 7) { test_statement(0xCD1); } else { test_statement(0x119C); }
$error$
$end$
1134
 if (@r11 << 0x12 << @rsp ^ @rsi << $proc ^ @r12)@r11 << 0x12 << @rsp ^ @rsi << $proc ^ @r12)  { test_statement(0x1278);  for (val = 10; @r8 & @rdx))@r8 ^ @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  // /* This is a comment  } elsif (16 ^ @rbp >> $proc ^ $proc & ($proc) ^ @r8 ^ $ip ! @r9 << @rbx >> @rax >> @rdx) { test_statement(0x1734);  This is a not opened comment */  while  ($ip | @rbx($ip | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  This is a not opened comment */ } else { test_statement(0x1860);  /* This is a not closed comment ; }
$error$
$end$
1135
 if (@rdi + $teb >> @rdi << @r12 >> $teb & 0n17 >> @rdx ; $thread + @r13 << 22 | @rsp << (@r12) & 0x8 ^ @rdx >> @rdi)  { test_statement(0x224C); } else { test_statement(0x584);  // /* This is a comment   This is a not opened comment */  // /* This is a comment  }
$error$
$end$
1136
 if (+0y1000 ^ $proc << @rbx >> @r11 >> @rsi & ~0x5 >> @rdx & 0y10011 | 16 << -$ip & ~@rdi & -$buffer & @rax(-$thread + @rdx >> $proc << ~@r10 & 6 << 0n10 >> @rax >> @rax | @r10 >> 0y111 & @rsp >> 0xC ^ ~~+@r9 >> 0n8)  { test_statement(0x1722); } elsif ((@rsp) >> @rax >> -@rsi & @rsi >> 23 & 0y10000 & @r12 ^ @rdi >> @rbp & $teb & $proc | $buffer >> $proc ^ @r13 ^ @rdi ^ $thread > 20 << 0n10) { test_statement(0x50B);  // /* This is a comment  } else { test_statement(0x1D35);  /* This is a comment */  // /* This is a comment  }
$error$
$end$
1137
 if (@r10 + @rbx & +$proc << @r11 >> @r11 >> ~1 & @r10 >> $ip | 0xA >> ~$proc >> ~$thread | @rdx & @rbp & @rsi ^ @r8 & $proc ^ @r12 | 0y111 | @rsi <= 0y110 + 0n11 ^ @rdx >> @r12 ^ @rsp >> $teb & @rsp)  { test_statement(0x2C1); } elsif (@rsi ^ $ip >> @rsi ^ 0y111 & @rdi | 0n9 >> +0y1011 & @r11 ^ ($teb) & @rbx | @rsp ^ @rsi | @rdx <= @rsi ^ $ip >> @rsi ^ 0y111 & @rdi | 0n9 >> +0y1011 & @r11 ^ ($teb) & @rbx | @rsp ^ @rsi | @rdx) { test_statement(0x26B9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ^ 0x10 | ~@r10 >< @rdx | +@rax | @r9) ;  /* This is a not closed comment  while  (@r13 ; @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x5EC); }
$error$
$end$
1138
 if (@rsp & 6 << @rbx @r13 + @rdi >> ~$buffer & $proc << @r9 >> 17)  { test_statement(0x15A8); }
$error$
$end$
1139
 if (13 + ~@r8 & -@rdx << $teb >> @rbp >> -2 ^ 0x8 << @r11 ^ $ip >> $teb & 0n11 & @rdx | +($buffer) << $thread >> @r13 & @r10 >> @r10 | @r10 >> @rax & @r10 & $buffer > 0x0 + $thread << -$proc & $thread >> $ip ^ ~16 << $proc & @r11 & @r10 & $teb ^ -@r9 >> 0n6 & +$teb & @rdi)  { test_statement(0x20CB); ;  /* This is a comment */  /* This is a not closed comment  This is a not opened comment */ } elsif (@r13 & $buffer ^ (@rbx) >> $ip & +@rsp ^ $ip ^ 0x5 ^ $thread | ++@r11 >> 5 ^ $buffer ^ $teb((0x11 << @r13 >> @r11 & 0xC | @r11 >> $teb ^ $teb ^ @r8 ^ 3) { test_statement(0x10C8); } else { test_statement(0x15E6); }
$error$
$end$
1140
 if (@rsi + $proc >> @r11 >< @r8 >> @r9 << 0n0 ^ ~@rdi ^ $ip >> $teb & $teb & @r11)  { test_statement(0x6B0);  /* This is a not closed comment }
$error$
$end$
1141
 if ((-@rbp) << @r10 << @r12 >> -$thread << +@rbx & (@rsp) << $teb >> @rdi >> @rsi ^ $buffer << 0y1010 == @r11 + $buffer & @rsp & @r10 ^ @r13 << @r11 >> @rbx & 0y101 >> @rax & @rbx & @rsp)  { test_statement(0x1A00);  while  (@rax ^ @r10 ^ @r10 | 20 <= 0x13 & +@r12 ^ 20)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r12(-@r13 ^ @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~$ip & @rsi >> $thread ^ $ip & $ip ^ @rsi | @r13 >> ++0n18 & @r11 & @r12 ^ (@rax) < ~$ip & @rsi >> $thread ^ $ip & $ip ^ @rsi | @r13 >> ++0n18 & @r11 & @r12 ^ (@rax)) { test_statement(0x1A7F);  if (-$proc ^ @rbp | @rbx @rbx ^ ~~@rbx)  { test_statement(0xE27); } else { test_statement(0x1D5F); } } else { test_statement(0x6F1); }
$error$
$end$
1142
 if (@rdi << 0xD >> -$proc << 0x12 & @rdi << -$ip >> @rsi >> (@rdi) ^ 22 << (@rax) >> 0n11 >> @r10 & @r13 & @r13 | @rdx << @r9 >> @rbx >> @rbp | ~$buffer == $thread + @rsi << 0n6 >> @rsp << -@rax >> @rbx ^ @rdi << @rdi & 0x9 ^ @rdi >> 15 ^ 0y1011)  { test_statement(0xC6F);  /* This is a not closed comment }
$error$
$end$
1143
 if (@r12 & 0n10 << 0xC >> $ip | 0x0 << $buffer & $ip & $proc | +@r8 ^ -((-@rbp)) & @rdx | @r8 ^ $proc ^ $proc | $proc | @r13(@rdx ^ ~$ip << 0n12 | (@r13) | (0n15) & @r13 | ~@r12 & @r10 ^ -@r12 | @rbx | @rbx | -16)  { test_statement(0x1648); }
$error$
$end$
1144
 if (0x12 >> @rsi & 0n17 & @rsp >> $proc & @rax | $teb << @rsi & 0n12 >> $buffer ^ $ip >> 0x4 | 0n3 & @r9 <= +@r8 + @r10 >> @rdi << (@r12) & @r9 | +~@rax << @r9)  { test_statement(0x103F);  // /* This is a comment  val = $proc & -$proc | $ip | @r8 | $thread ;  /* This is a not closed comment  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0xB <> 0xB) ; }
$error$
$end$
1145
 if ($proc + @rbx >> -0x4 << $ip & @r10 >> @rdx & +@r9 >> -@r13 & @rsi & @rbx | @rbx | ~0n10 & 0y10 > @rbx & @rbx << 0x6 >> @rsp & -@rbx >> 0xE ^ @r9 << @r10 & @r10 | @r13 >> @r10 >> 0y1100 | @rsp | @r8 & @rbx ^ @rsi)  { test_statement(0x296);  while  (+$ip ! +$ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rbx ^ $buffer | @r9 | 0xD = @rbx ^ $buffer | @r9 | 0xD)  { test_statement(0x109D); } } elsif (@r10 << $buffer >> @r9 ^ $buffer ^ $thread & 0x0 | @r13 >> @r11 & @r11 ^ $proc ^ +@rdx((@r10 << $buffer >> @r9 ^ $buffer ^ $thread & 0x0 | @r13 >> @r11 & @r11 ^ $proc ^ +@rdx) { test_statement(0x20B3);  for (val = @rsi ^ @r12 | $thread; 0y1101 ^ @r8 | $buffer | $teb <> $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (@r8 ^ 0xB & @rbp @r8 ^ 0xB & @rbp) { test_statement(0x934); }
$error$
$end$
1146
 if ($buffer << @rsi << 0y10 >> ~@r10 << @r12 >> +@r12 | @rdx << @rsi +($teb) + 0x7 << ~$buffer | @r8 << @rbp | @rbx >> $teb ^ @rax & 0xA ^ $buffer | @rbp | @r8 ^ 0n18 | $teb | @rsp)  { test_statement(0x1E62); } elsif ($thread >> (@rdx) >> +0y11 | @rsi >> @r12 ^ @rdx ; @r8 << 0x13 ^ ~@r12 & @rbx & $proc) { test_statement(0x10A2); } elsif ($proc & @rsp & @r12 >< $ip >> @rax & @r11 & 0n7) { test_statement(0x14C5);  for (val = 10; @rbp = @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx <= (@r10)) ; }
$error$
$end$
1147
 if ($teb ^ @rdx >> @r10 == $teb ^ @rdx >> @r10)  { test_statement(0x1941); } else { test_statement(0x22A9); }
$error$
$end$
1148
 if (($ip) ^ $thread << @r11 & 0y101 >> $proc ^ 0x12 >> (@rdi) & @r10 ^ 0y1011 ^ ($proc) ^ @r10 | $thread & 0y1100 >> $teb | @rdi >> @r11 +@r8 + $proc >> @r8 | @rdi & @rdi ^ $thread & @r11)  { test_statement(0xB4F); } elsif (~@r13 >> @rsi ^ @r13 | @rdi >> $thread & $teb ^ ($buffer) & ~+14 > ~@r13 >> @rsi ^ @r13 | @rdi >> $thread & $teb ^ ($buffer) & ~+14) { test_statement(0x9DF); } elsif (0n10 >> 0n9 & $buffer | $ip & 0y111 | +@r8 == @r10 ^ (@r9) ^ $proc | @r9 | -@rdi | 0x12 | @r9) { test_statement(0x11C8); }
$error$
$end$
1149
 if (@rsp >> 0y1111 << @rax >> @r9 >> @rdx & @rax <> $teb << 0y10001 | $teb & (0x8) & $teb)  { test_statement(0x625); } elsif (@rbp ^ $ip >> @rsp >< @rbp ^ $ip >> @rsp) { test_statement(0xAE4); } elsif (~$thread >> 7 ^ $teb & $thread | 0n11 & @rsp | @r11 ^ $thread | $thread | @r13 ; ~$thread >> 7 ^ $teb & $thread | 0n11 & @rsp | @r11 ^ $thread | $thread | @r13) { test_statement(0x1746);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp != @rsi | @rax) ;  /* This is a not closed comment  break;  break; } else { test_statement(0x17CB); }
$error$
$end$
1150
 if ($teb + 0y101 << ($teb) << 0y1010 >> $buffer << $thread >> +16 = @rsi >> $teb & 13 >> @r9 >> (@rbp) & -$thread & @r9 ^ 0x13 << @rbx)  { test_statement(0x1CC5); }
$error$
$end$
1151
 if (~@rbx + $thread << $teb >> @r13 & $teb << @rsp & @rax >> @r10 ^ $ip << @rbp ^ $proc >> 0y1 & @rbp & @r13 ^ 0n17 >< @rdx + @r9 << 0x4 >> @r13 << $teb & @r10 & @r13)  { test_statement(0x17A5);  /* This is a not closed comment } elsif ($proc >> 0y11 >> $ip ^ 0x12 >> 0y1110 & @r12 & 2 | +$teb >> $ip | +0x1 | 16 | 2(($proc >> 0y11 >> $ip ^ 0x12 >> 0y1110 & @r12 & 2 | +$teb >> $ip | +0x1 | 16 | 2) { test_statement(0x1994);  break; }
$error$
$end$
1152
 if (0x3 << @rax << ($teb) & @rsp >> $teb & @r9 & @rax & @rdx ^ $teb ^ @r8 >> 0x4 & 0y0 & @rax ^ $thread ! 0x3 << @rax << ($teb) & @rsp >> $teb & @r9 & @rax & @rdx ^ $teb ^ @r8 >> 0x4 & 0y0 & @rax ^ $thread)  { test_statement(0x1B34); } elsif (@rdi << $thread >> +0y11 >> @rax < @rdi << $thread >> +0y11 >> @rax) { test_statement(0x1969); } elsif ($teb >> @rbp ^ 0n1 ^ $thread ^ @rbp >< @r13 >> @rdi & @rsi) { test_statement(0xC18); }
$error$
$end$
1153
 if (@rax + @rdi << @r13 << @rdi >> 0n5 & -$proc >> @rsi >> $teb & @r8 >> @rax & -@rbp & 0n19 ^ @r9 << 0y10010 >> @rax >> @r10 | ~@rdx & @r12 >> ~$teb & @r11 & @rbp < ~@r10 + $buffer << @rbx)  { test_statement(0x6C6); }
$error$
$end$
1154
 if (~-$buffer + @r12 >> @rbp << 0xA & $buffer & @rbx >> 21 > @r11 << @rsp << @rsp ^ @rax << $teb ^ @r13 & @r13 ^ 0x12 ^ $buffer | 4 << $buffer >> @rdi >> @rax & @rsp >> +@rdi ^ @r13 >> @rbx & @rsp)  { test_statement(0x18F8);  while  (~23 & @r13 ^ 16 | @rdi))@rbx & (~@rsi) | +$thread ^ 0y1 | 20)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  /* This is a comment */ }
$error$
$end$
1155
 if ($proc + 0n14 << @r13 >> $thread & @rdx << @rsi >> 0y110 >> $buffer <= $proc + 0n14 << @r13 >> $thread & @rdx << @rsi >> 0y110 >> $buffer)  { test_statement(0x2539); } elsif ($ip << @rsi ^ 0x2 & -@rax ^ @rax & @rsp ^ $proc ^ $ip(($ip << @rsi ^ 0x2 & -@rax ^ @rax & @rsp ^ $proc ^ $ip) { test_statement(0x1FCC); } else { test_statement(0x1BB9);  // /* This is a comment  }
$error$
$end$
1156
 if (0xD & @r10 ^ $buffer << @r10 & -@rdi ^ ($teb) & @r12 & @r12 ^ $buffer ^ $buffer ^ 7 | @r13 << +$buffer >> +~$proc ^ @r11 >> 0y1100 & @rsi ; @r8 + ($thread) | @rdx & 0n13 >> @rbp)  { test_statement(0xE81);  // /* This is a comment  } elsif (@rsi << ~@rbp >> ~$teb & @rbp ^ @r10 <= -~@r11 ^ $thread >> @rdi) { test_statement(0x143);  /* This is a comment */ } elsif (@rbx & @rsi & 0x1 ^ @r10 < (@r9) >> 6 ^ @r9 ^ 0y100 | @r12 | $buffer ^ $teb) { test_statement(0x22EE); } else { test_statement(0xE20);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 | $thread ; @rax | +(-@r8)) ;  /* This is a not closed comment }
$error$
$end$
1157
 if ((@r13) + $thread << +$teb << $proc >> 0y1101 >> @rbp >> @r13 ^ @rax << @r13 ^ 0xE ^ @rsi & -$proc(($thread + $teb << @r13 << @rdx >> (@r12))  { test_statement(0x2644); } else { test_statement(0x1A0F); }
$error$
$end$
1158
 if (@rdi >> @rdx >> ~@rsp ^ @rax & @rdi >> $thread | $buffer >> ~($thread) >> (0x10) ^ @rdi ^ @rsi ^ $proc = @rdi >> @rdx >> ~@rsp ^ @rax & @rdi >> $thread | $buffer >> ~($thread) >> (0x10) ^ @rdi ^ @rsi ^ $proc)  { test_statement(0xD03); val = $thread ^ 7 & @rsp ^ 0n10 ; }
$error$
$end$
1159
 if (0y11 >> @rax << 0x10 | $proc | @r11 & $buffer & @rbx | @r8 & $teb | @r8 == 0y11 >> @rax << 0x10 | $proc | @r11 & $buffer & @rbx | @r8 & $teb | @r8)  { test_statement(0x193F);  for (val = 10; @rsi & $proc ^ 17 | 0y1110 ^ ~@rsi $ip ^ @r9 ^ $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; 0x5 | 0x10 <> @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (~-@rdi | 13 >= 0y1110)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@r9 != 0y1110) ; val = @r12 ; } elsif ($ip >> 1 | @rdx ^ (@r13) ^ ~(@rdx) ^ @r12 | @r8 >< -0n3 << $buffer & @rbp >> @r13 & 1 & -$proc ^ @r13 >> 0x6) { test_statement(0x181C);  // /* This is a comment  } elsif (0y1101 >> @r11 | @rsi ^ @rax ^ @rbx | @rdi ^ 0n9 > 0y1101 >> @r11 | @rsi ^ @rax ^ @rbx | @rdi ^ 0n9) { test_statement(0x1753); val = $teb | @r9 | $teb ; ; ; } elsif (-@r13 ! -@rbx & @rsp | 22 | @rsp | @r13) { test_statement(0x2BC); } elsif (@rbp | 0y100 | 22 @rbp | 0y100 | 22) { test_statement(0x1425);  /* This is a comment */  This is a not opened comment */  /* This is a comment */ } elsif (@rdi | 0xB != @rdi | 0xB) { test_statement(0x12B5); }
$error$
$end$
1160
 if ($thread << @r8 | @rax >> @r13 >> @rsi ^ @rax >> 16 & @rbx & @rsp | @r8 >> 0y111 & 0y10000 & @rbp ^ @r9 & 23 ^ +(0y10010) ^ @rbp == @rdx << @r11 << 0x3 & @rsi & ~@r9 ^ $thread & $teb ^ @r13 >> 2 & @rsp)  { test_statement(0x1CD5);  while  (@r9 | $ip ^ @r9 | $ip != @r9 | $ip ^ @r9 | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rax << $thread >> $buffer | ~@rbp >> 0x5 | 5 & 0n13 ^ 0y10010 | $proc | $teb | 0x9(@rdx >> @r10 >> @r9 & @r12 & @rdi | ~0x12 >> @rsp | $buffer | @r11 ^ @r12 | $ip | @rsp) { test_statement(0x2658); } elsif ($ip & @rdi & @r11 ^ 0y1000 & 0n4 | @r8 | 0y10010 | $ip))$ip & @rdi & @r11 ^ 0y1000 & 0n4 | @r8 | 0y10010 | $ip) { test_statement(0x1D13);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip $ip) ;  break; } else { test_statement(0xCDE);  /* This is a comment */ }
$error$
$end$
1161
 if ($ip + $buffer << @r8 << @rdi | $thread << @r9 & @rdx >< $ip + $buffer << @r8 << @rdi | $thread << @r9 & @rdx)  { test_statement(0x1192); @rax = @r12 ^ 0n1 & @rsp ^ $teb ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 ^ 0x6))@rsi | (16)) ;  while  ($ip | @rax < $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x18);  This is a not opened comment */ @rax = 2 | $ip ;  while  (@r12 ! @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc(@rbx) ;  while  ($teb $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  while  (@rdi <= @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1162
 if (@rsp + @r9 << @r10 & @rdx >> $buffer ^ @r9 <= @rsp + @r9 << @r10 & @rdx >> $buffer ^ @r9)  { test_statement(0x14D7);  while  (0y10 ^ @rax == 0n1 | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; $teb | @r11 | @rbx)@rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @r11 ^ $ip ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 21)@rsp) ; } elsif (+$buffer << @rsi >> @rbp >> ~@r8 ^ @rdx >> @r13 | $thread >> 0y10011 & @rdi & @r9 @rbp & $thread ^ $thread & 0y111 & @rdi ^ $proc & $teb ^ -@r13 ^ ~@r12 | @r11 & +@rdx ^ $thread & @r12) { test_statement(0xF1D); ; ; } elsif ($ip ^ $thread | $thread & $proc ^ @rbp ^ +@rdx | 0n14 ^ $teb | 0x10 | @rsp != $buffer ^ @rbp ^ @rdx ^ @r13) { test_statement(0x4E1); }
$error$
$end$
1163
 if ($buffer + @r10 << @r11 | @rax >> $proc | @r8 & ~$buffer ; @rsp & @r11 & @r9 >> $ip & @rsp)  { test_statement(0x2318); } elsif (@r11 << 0y1000 >> 0n5 >> @r11 ^ 10 >> $ip & @r11 ^ @r9 ^ @r9 | @r10 & @rax & @rsi == @rdi << @r10 & @rdi >> 16 ^ $proc >> $buffer) { test_statement(0x1209); @rax = $buffer | ~@r12 ^ @r11 ;  while  ($thread | @rbp <= $thread | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } else { test_statement(0x18D2); }
$error$
$end$
1164
 if (~$proc >> @r13 << 0x13 & $buffer >> $thread >> $buffer & @r12 | 0xE >> $thread >> 0y10011 ^ 0n5 >> @r10 & $teb | 0n19 & 0xA ^ $teb & @r8 | $thread)0xC << @rdx << @r11 >> @rbp << ~+@rsi >> @r9 >> $buffer ^ @rsi << @rbx ^ $ip >> @rsp & @r12 & @r9)  { test_statement(0x138D); } elsif ($proc << @r9 >> @rdi >> -@rax ^ 0x1 >> $buffer & @r8 & @rsi | 0n15 & 0n12 = $proc << @r9 >> @rdi >> -@rax ^ 0x1 >> $buffer & @r8 & @rsi | 0n15 & 0n12) { test_statement(0x4C9); ;  for (val = 10; @r12 | $teb < @r8 | @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r11 >> @rsi & $ip ^ $thread & +@rbx | @rdi((@r11 >> @rsi & $ip ^ $thread & +@rbx | @rdi) { test_statement(0x12F6); } else { test_statement(0x14D6); }
$error$
$end$
1165
 if (@r13 << ~@r8 << +@r11 >> @rdx << 20 & ~$thread >> @r13 >> $buffer & @r12 & (@rax) ^ $buffer & @rbp >> 0xB ^ 0n3 & @rdi & (@r9) ^ 0n19 | (+@rsp) << $ip ^ $buffer ^ $proc ^ $thread ^ 0x9 | @rax ^ $teb & 0y1110 = @r13 << ~@r8 << +@r11 >> @rdx << 20 & ~$thread >> @r13 >> $buffer & @r12 & (@rax) ^ $buffer & @rbp >> 0xB ^ 0n3 & @rdi & (@r9) ^ 0n19 | (+@rsp) << $ip ^ $buffer ^ $proc ^ $thread ^ 0x9 | @rax ^ $teb & 0y1110)  { test_statement(0xCC6); } elsif (@r12 << $ip >> @rsi ^ @r10 >> $teb & ~$proc & +$thread ^ $teb ^ -@rdx ^ @r12 | (@rsp) >> @r9 > $thread << $teb >> @r8 | @rdx & $proc ^ @r10 & @rbx ^ @rdx ^ 0x10 | 0n11 ^ 0x8 | @rbx) { test_statement(0x254); } elsif (-@rbx & @r8 & @rbp ^ +@r13 ; 21 & @rdi & @r12 ^ @r8 & 0n5 | $ip & $ip) { test_statement(0x2140); val = @r8 ^ 0n7 | -@r9 ;  if (@rsi(@rsi)  { test_statement(0x1E7C); } else { test_statement(0xC50); }  break;  if ($ip ; 15)  { test_statement(0xB66); } @rax = ($thread) ; }
$error$
$end$
1166
 if (@r10 << @rdi << @r12 >> 1 << @rax >> @r8 >> 0x5 ^ 0x5 >> -@rsi >> @rdi >< @rsp << 0y1011 >> 0n19 >> @r10 >> 0n16 ^ -$buffer ^ @r9 >> @rsp)  { test_statement(0x528); }
$error$
$end$
1167
 if (-@rsi + $proc << @r9 << @r11 ^ 0n0 ^ -0n9 >> +@rax | @rdx << $proc ^ (20) ; @rsp + ~$buffer >> 0n7 << +@rdi ^ @r11 >> @r10 ^ 0xC >> $proc ^ -@r12 & @rdi | @rbx << 0x5)  { test_statement(0x1257); } elsif (~14 >> +(@r10) >= @r9 >> @rax & +@rbp ^ @rsi >> 22 ^ @r8 ^ @r9 | 0n16 >> +@rdi & @rax ^ 0x2 ^ @r10 ^ @r13) { test_statement(0x1ECD);  /* This is a not closed comment } elsif (@rbp ^ ~$thread & $teb ; ~(@r8) >> $thread & -$teb & @rdi ^ @r10 ^ (+@rbp) ^ @rsi | 0y100 ^ 0n15 ^ $buffer | @r13) { test_statement(0x209E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax > @rax) ;  break; } elsif ($ip & @r13 ^ @rbx ^ -$teb | @r9 > $thread ^ $proc) { test_statement(0x1AD); }
$error$
$end$
1168
 if (0n19 >> @rbp & @r11 >> @r12))@r10 ^ 0x9)  { test_statement(0x174B); } elsif (@rdi << -0x10 > @rax) { test_statement(0x6B8); } elsif (@rbx ^ @rdx & @rsp ^ @rbx >= @rbx ^ @rdx & @rsp ^ @rbx) { test_statement(0x2138);  break; } elsif ($ip & $proc | @rbp ^ +@rsi)@r9 & 0n6) { test_statement(0xD1C); } elsif ($thread ^ 0y0 < $thread ^ 0y0) { test_statement(0x13FE);  while  ((0y11) (0y11))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx < $ip) ;  /* This is a not closed comment } elsif ($thread | $proc))$thread | $proc) { test_statement(0x630);  /* This is a comment */ val = ~~@r12 ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 <= @rsi) ; } else { test_statement(0xBA4); }
$error$
$end$
1169
 if (@rsp + @rbx >> @rbp >> $thread ^ $proc & @r12 >> $thread ^ $buffer)0n18 + @rsp | 1 >> 13 >> @r11 ^ $buffer & (~$teb) ^ $proc ^ @rbp ^ $proc)  { test_statement(0x3F6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n17 | 0y10011 ^ $teb < 0n19 & @rsi ^ $thread) ;  // /* This is a comment  } else { test_statement(0x2376); }
$error$
$end$
1170
 if (@r10 + --~@rbx >> -$teb << 0xE >> @rdi ^ @r13 >> @rdi >> @r8 & -$ip & @rbp & 0n5((@r11 + $proc & @rbp << @rsp >> @r10 & $ip >> +@rdx & (@r11) ^ @rdx & +@rdx | @rbx >> $ip & $buffer | @r13 >> @r10 & @rdx ^ $ip & 0n6 ^ 0n11)  { test_statement(0x23D5); } else { test_statement(0x2408); }
$error$
$end$
1171
 if (@r11 + @r8 >> 0n1 << 15 >> @rbp >> @rdi)@rsi + $proc >> @rdx >> @r11 >> $ip & @r9 << 0y111 >> $proc ^ +@r11 >> $ip >> $buffer & 0y10 & 0n3 ^ @rsi ^ (@r12) | 0y10000 & @rbx >> 0x11)  { test_statement(0x178D); val = @r9 >> ~$buffer & @rax ^ $ip & $proc ^ @rsp ^ @rax | @rbp ^ $proc ^ @rdx | 0n4 ;  /* This is a comment */  break;  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
1172
 if (@r9 + @r12 << (+0) >> -~$buffer << @rdx >> (@r12) >> ~@rdi <= $proc + @rax | $teb << @r11 >> 5 >> +@rbx & @rdx & 0n1 & $ip ^ $thread >> @r11 & +@rdx | ~-@rsi & -@r11 & @rdx ^ +@r12 ^ @rbp)  { test_statement(0x821); } elsif (@r13 @r12 << @r13 ^ $ip >> 0x0 ^ (~@rsi) | @rbp & ~@rsp | $teb & $proc | @r9) { test_statement(0x4B7); } else { test_statement(0x1F4); val = -~@rsp | @r11 ^ $thread ;  for (@rax = @rdx | $ip; @r8 <= -$buffer | 0n16;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r12 == $teb)  { test_statement(0x2566); } elsif (-$ip = -$ip) { test_statement(0x5); } elsif (14 != $thread) { test_statement(0x16F9); } else { test_statement(0x1D24); }  while  (@r13)+@r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1173
 if (0x9 + $buffer << @r13 >> @rsi << $ip >> @r10 | 0xB << @r9 >> @rbx & @r11 >> @r9 & ~@rbx & 0xC | $proc >> @rax <> 0n13 + 0n11 << ~@r10 >> @r10 >> @rdx >> @rbp & @rdi << @rdx & -0n17 >> @rbp & $teb & @rsi)  { test_statement(0x77C); val = 0n8 & $teb | 0n7 & @r10 ; ;  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread > $teb) ; }
$error$
$end$
1174
 if (@rbp & 0y1001 & @r8 & @r13 & @r11 = @rsi >> 0x1 << 0n3 >> 0n9 >> @rdi ^ @rax << @rdx >> @rbp >> ~@rsi & @r13 >> -@rdx)  { test_statement(0x17E7); } else { test_statement(0x20A); }
$error$
$end$
1175
 if (@r11 + @r11 >> @r13 << $teb & $buffer << 10 >> @rdi & $thread ^ @rsi << @r12 >> @rsi ^ $buffer >> $proc | $thread << @r10 & @rsi >> @r11 | @rdx & $proc & @rax | @rax & @r12 ^ @r9 == $teb + @r9 >> 0n7 ^ @r10 >> @rbp ^ ~0y10001 >> @rax & @rdx)  { test_statement(0x365);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 ^ @r10 > 0n2 | $proc) ;  if (@rax ^ (~@rbx) @r8 | +@r11 | $teb)  { test_statement(0x13FD); }  /* This is a comment */ } elsif (@rbx << $teb >> $thread >> @r12 ^ $buffer >> $teb & $ip & @r9 ^ $ip))$proc | 0y100 >> @rsp) { test_statement(0x1808); } else { test_statement(0x24B0); val = @r8 | @r11 ; }
$error$
$end$
1176
 if (@rdi & $ip << @rdi >> $buffer ^ @rsi >> $ip ^ @rdx >> (@r11) ^ (@rdi) & $teb ^ $buffer | @r11 >> @r12 ^ @r12 >> @rbx == $proc + $proc << @r10 << @rsi | $proc << @r12 >> $ip >> @rdx & $proc >> @r13 ^ 0n0 ^ $ip)  { test_statement(0x9E2); } elsif (+@r10 ; $teb >> $buffer >> @r10 ^ @rdx & ~~$teb & $teb | @rdi | $ip | @rsi ^ $thread | $buffer | $proc) { test_statement(0x1116); }
$error$
$end$
1177
 if (~0n13 + @rbp << $thread & 11 >> @r13 >> @rdx ^ @r8 << $teb ! @rdi << $buffer & 0n3 << 0y1001)  { test_statement(0xE8); }
$error$
$end$
1178
 if (-@rax << @r11 << -@r8 >> 0x4 << @rax & @rsi >> 0xF >> 0n17 ^ 0n6 << @r12 >> ~@rdi & 0xE >> @r13 | @rdx << @rdx >> @rbx | @r8 >> 0n4 | 0y10001 & @r11 ^ @r12 ^ +3)@r13 << 20 << $buffer >> @r12 >> $thread >> ~@rbp & @rax >> 21 & @r8 >> -@rdx & @r13 ^ @rbx >> @r11 >> @rdx & $buffer & 0y111)  { test_statement(0x3FC); }
$error$
$end$
1179
 if (@rax << @r9 << +@rsp >> @rdx >> $thread ^ $proc >> @r13 >> @rbp ^ @rbx ^ @rsp & @rsi | @rax | $ip & $thread | @rbx & @rbx | $thread | -4 | @rax))(@rdi) << $thread)  { test_statement(0x169C); }
$error$
$end$
1180
 if ($proc << @rbx << @r12 | 12 << @r8 & 0n11 >> $buffer & ~@r13 & 0x3 >= $proc << @rbx << @r12 | 12 << @r8 & 0n11 >> $buffer & ~@r13 & 0x3)  { test_statement(0x1030);  while  (+@rbp & @rdi ^ ~@r10 ^ -@rdx >< 0n5 & @r13 ^ $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ! @rsp ^ -$ip) ; } else { test_statement(0x962); }
$error$
$end$
1181
 if (@r11 + (@r12) >> @rsp & (0y101) << @rbp >> $buffer & @r12 >> @rdi & @rbp ^ $teb << $ip ^ $buffer >> ~@r10 & @rdx & @rsp | -@r12 << $thread >> 0x9 >> $buffer & 0x10 >> ~@rax & 0x9 & @r11 ^ -@r13 & (@rsp) & 3 ^ +@r11 & +$ip ^ @r9 ^ @r8 ; @r11 + (@r12) >> @rsp & (0y101) << @rbp >> $buffer & @r12 >> @rdi & @rbp ^ $teb << $ip ^ $buffer >> ~@r10 & @rdx & @rsp | -@r12 << $thread >> 0x9 >> $buffer & 0x10 >> ~@rax & 0x9 & @r11 ^ -@r13 & (@rsp) & 3 ^ +@r11 & +$ip ^ @r9 ^ @r8)  { test_statement(0x2512); } elsif (-@rax | (@r10) >> (0y1110) & @r10 & @r9 ^ $thread & @r9 | @rax & $buffer ^ @r9 ^ +@rsp | ~~$thread ^ $thread < -@rax | (@r10) >> (0y1110) & @r10 & @r9 ^ $thread & @r9 | @rax & $buffer ^ @r9 ^ +@rsp | ~~$thread ^ $thread) { test_statement(0x1566);  // /* This is a comment   while  ($ip | $teb((@r8 | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  // /* This is a comment  } elsif ((0y10011) >> @rdx ^ @rsp ^ +~+0y10010 | 0y110 ^ @rbx | +@r10 ^ ~@rbp | @rdx ; (0y10011) >> @rdx ^ @rsp ^ +~+0y10010 | 0y110 ^ @rbx | +@r10 ^ ~@rbp | @rdx) { test_statement(0x1883); } elsif ($teb & @r12 ^ 0 ! @rbp) { test_statement(0x25DA);  while  ($buffer == @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  if ($proc((@r12)  { test_statement(0x9AC); } ; } elsif ($ip ^ @rsi((@r13) { test_statement(0x1C9D); ; } elsif (@r9)@r9) { test_statement(0x215E); } elsif (@rax >= @r12) { test_statement(0x160);  /* This is a comment */ } elsif ($thread < @r13) { test_statement(0x333);  // /* This is a comment  }
$error$
$end$
1182
 if (0x6 + 0xE << -@rax << -@r11 & @r8 >> (@rsp) >> +@r8 < @rdi & -(@rbp) << @rbx >> +@rdi >> 0xA ^ 0y100 & $thread >> $proc & @rdi ^ (@r8) >> @rdi | @rsi >> @r12 >> @r11 & $proc & 0x6)  { test_statement(0xC10);  if (((0y11)) & @r12 <= $ip ^ $thread | @rdi ^ @r9 | 0y1001)  { test_statement(0x2479); }  while  (@rsi > @rbp | @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1183
 if (@r10 + @rdx >> $ip | @rdx & (@rsp) >> 0x13 | $teb >> @r10 & @rbp & $teb ^ +0y1101 & -@r9 ^ @r11 ^ 1((@rdx >> $buffer & 0xD << 0y111 & @rsp >> @rsi & $ip & @rdx | @rdx << $buffer >> @r13 & ~@rsp & 14 | @rdx | ~@r8 & (0x1) ^ $proc ^ @rax | $ip ^ @rdi)  { test_statement(0x4D6);  /* This is a not closed comment ; }
$error$
$end$
1184
 if (~@r8 + ~@r11 >> @r9 & 14 << 22 >> 0n3 >> $proc | @r8 | @rsi >> @rsi & $proc ^ @r11 & $teb(($ip << @r8 << +@rax >> @r12 << $buffer & @r11 >> 0xB ^ 0n0 >> @r9 >> $thread ^ @r12 & @rax & @rdi)  { test_statement(0x585);  /* This is a not closed comment  for (; @rsp ^ @r12 = @rdi ^ @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif (@rbx >> 0n0 >> -@rsi & @r8 & @rsi & @rsp ^ $proc ^ $ip & $buffer <= 0n10 << -0y11 & $teb & @r8 ^ $ip ^ $thread & $thread ^ @r13 | @r13 >> $buffer | $teb & 2 ^ -$proc ^ 0y1101) { test_statement(0x2474); } elsif (@r13 >> @rsi & +@r10 ^ $proc & @r12 ^ 0n3 ^ @r12 ; $ip >> $thread & @r10 ^ 12 ^ 0y10011 ^ @rbp | @rsi | @r12) { test_statement(0x3C1);  for (val = 10; @r13 <= $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($teb <= $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1185
 if (0n19 + @r12 & @rbp << $ip >> ~22 >= @r12 + 0xB >> @rbp >> @r8 & @rsp >> +@rbp & 0x2)  { test_statement(0x93F);  /* This is a not closed comment  /* This is a not closed comment } else { test_statement(0x109E); @rax = -@r13 | 6 | -$buffer | (@rax) ; }
$error$
$end$
1186
 if (~0x0 >> $proc << $proc)~0x0 >> $proc << $proc)  { test_statement(0xC09);  /* This is a comment */ } else { test_statement(0x4E5);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx ^ 0x2))0y10) ;  while  (@rsi @rsp | $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1187
 if ($buffer << @rdi << @rsp >> @r12 & $teb | $teb >> 10 >> @r13 & @r9 & 0x1 & 23 ^ $proc >> $teb & @r8 & -@r11 >= 0n11 >> @r12 >> 0n7 >> @rsi)  { test_statement(0x15AA); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 ^ $thread | $proc | 0n4))@r8 ^ $thread | $proc | 0n4) ; val = @rsi ;  // /* This is a comment  }
$error$
$end$
1188
 if ((@rsi) + @rsi >> @r10 << @r10 & $ip & 0x6 >> @rsi ^ $ip ^ @rdi >> @rax ^ $ip(@r13 + @r12)  { test_statement(0x2557); }
$error$
$end$
1189
 if (@rsi + $ip >> @r8 << @r8 >> @r13 >> 0x0 & $thread & ($teb) >> 0y10 >< @rsi + $ip >> @r8 << @r8 >> @r13 >> 0x0 & $thread & ($teb) >> 0y10)  { test_statement(0x12AF);  for (val = @r13 ^ 0y110 ^ @rdi | @r10 | $teb; -0y10 & 0y10011 != $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xF0); }
$error$
$end$
1190
 if (+@rdx + 0n7 >> @rsi | @rbx & @rdi >> $ip | @rdi >> @rbx & -@r13 ^ @rax ^ 22 = +@rdx + 0n7 >> @rsi | @rbx & @rdi >> $ip | @rdi >> @rbx & -@r13 ^ @rax ^ 22)  { test_statement(0x67C);  break; }
$error$
$end$
1191
 if ((@r8) + 23 << @r12 << (@r10) ^ -$thread >> $ip >> @rsi)(@r8) + 23 << @r12 << (@r10) ^ -$thread >> $ip >> @rsi)  { test_statement(0x19A); }
$error$
$end$
1192
 if (0y10010 + @rsp & 0x0 << @rbp >> +(@rax) >> @rsi & $teb & (+$buffer) & $ip 10 >> @r10 << @r12 >> @r11 & @rdx >> @rsi & @r11 >> $thread & +$ip | +@r8 << $proc >> @rsi | @r9 ^ @rbx)  { test_statement(0xE3D);  This is a not opened comment */  This is a not opened comment */ val = @r13 ^ $buffer | $buffer ; } elsif (@r8 >> $thread >> @rax | $ip ^ @rbx <= 0n3 >> @rbp >> @r9 & @rsp ^ 7 & @r13 | @rbp >> 0y10011 & @r9 ^ -0n15 ^ +$proc) { test_statement(0x1DCF); @rax = $ip ;  while  (0y10011 <= @r12 | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1193
 if (@rax << $ip >> $thread ^ @r9 >> $ip >> $teb ! $teb | @rdx >> @rbx | ~@rsi >> $teb & @rdi ^ @r12 & 6 ^ 0y10000 | $buffer | 0x0)  { test_statement(0x6E8); } elsif ((@r8) & ++~16 & -13 & (@rsp) | @rbp >> $thread | $thread | -@rdx ^ $thread | @rbx | @r12 <> @rbx << 14 ^ (@r8) >> $ip) { test_statement(0xD99); } elsif (@rsp >> @r8 & @r9 ^ $ip & @r8 | ($thread) & (+0x7) != @rsp >> @r8 & @r9 ^ $ip & @r8 | ($thread) & (+0x7)) { test_statement(0x24AA); } elsif (@r13 ^ @r11 ^ @r9 < @r13 ^ @r11 ^ @r9) { test_statement(0x2664); } else { test_statement(0xBA1); }
$error$
$end$
1194
 if (+@rax + (@r10) >> @r13 << @rbx ^ @rsi << @r12 >> $thread >> ~@rsp = @rsp & @rdx >> ~$buffer & @rdx >> ((@r9)) & @rbp ^ ~@r12 << $buffer >> @r9 >> @rax ^ $teb | $ip << @rdi >> 0n7 & $buffer >> +20)  { test_statement(0x1855); } else { test_statement(0x1AB4); val = 11 ^ 0n3 ^ $buffer | 0n12 | @rdx ; }
$error$
$end$
1195
 if ($thread + @r12 >> @rsp << (@r10) >> 0 & $buffer << 0x2 ^ $ip >> +@rbx | 0y1011 | (0y1) & $proc & @r8 ^ @rbp >< (@r9) + 0x12 >> -@rax & @rsp >> +@rbx >> @rsp & $buffer >> ($teb) | @rbx << @rbx >> ~$thread | +@rsi ^ @rsp & $teb)  { test_statement(0x2313); } else { test_statement(0x178D); }
$error$
$end$
1196
 if ($buffer << @rbx << $proc >> @rbp)($buffer) << @rax >> $buffer >> @rsp >> $buffer | @r10 << @r12 >> @r12 >> 5 | @r11 >> @r8)  { test_statement(0x211C); } elsif (@r8 << @rax((@r12 & @r13) { test_statement(0x1641);  for (val = $ip; 0y1001 ^ @r8 == 0y1001 ^ @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } else { test_statement(0x9D3); }
$error$
$end$
1197
 if (@rbp + @r9 << $proc ^ @rsi << 0y1110 >> $proc >> $thread | @rbp << 21 >> @r9 & @rdx >> $buffer ^ @rbp ^ --@r9 & 0x5 ; @rbp + @r9 << $proc ^ @rsi << 0y1110 >> $proc >> $thread | @rbp << 21 >> @r9 & @rdx >> $buffer ^ @rbp ^ --@r9 & 0x5)  { test_statement(0x542);  // /* This is a comment   // /* This is a comment  }
$error$
$end$
1198
 if ($buffer + (++$ip) << @r8 << @rdx & @r12 << $thread >> @rax >> @rax | @rsi << @rbp ^ $ip)$buffer + (++$ip) << @r8 << @rdx & @r12 << $thread >> @rax >> @rax | @rsi << @rbp ^ $ip)  { test_statement(0xA2A);  while  (@rdx & @r13 ^ @r13 | @rdi))+@rbp ^ @rdx | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  /* This is a not closed comment } elsif (@rbp >> $thread & @rax >> $thread & @r11 & ~@r9 ^ @rbx | 0y1000 ^ @rdi & @rbx ^ @rsi ^ @rdx(@rbp << (0xC) >> 0y1101 >> 0n3 | @rax >> @rdx & @r11 & $buffer | @rsp & 12) { test_statement(0x617); }
$error$
$end$
1199
 if (@rbp + $ip | @r12 << @rax >> @rsp & (@r13) & $proc ^ @rbp ^ 6 ^ ~@rsp | 0xF >> @r12 & @r11 & @r13 = 0x13 << 6 & $teb << @rdx ^ @rsp & @r12 >> 0)  { test_statement(0x13E);  for (val = -$buffer & @rsi | 0xC; @rdi & 0n12 >= @rsi ^ @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 ^ @r12 | @rdx | 0y111 != @rdi ^ $buffer | -$buffer | -@rsp) ;  break;  for (val = 10; 0x4))0x4;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 & $buffer >> @r10 ^ @rsi >> @rbp & $ip & @rbp ^ @r8 & @r8 | 0y1 | 12 & $teb | +@r9 <> @r11 & $buffer >> @r10 ^ @rsi >> @rbp & $ip & @rbp ^ @r8 & @r8 | 0y1 | 12 & $teb | +@r9) { test_statement(0x2368);  // /* This is a comment  } elsif (+@r11 >> $thread & 0y10011 & 0xE ^ 0y1100 ^ (0y110) | @rdi & @r13 != 12 >> @rbx | ~@r9 ^ +-(~@rdi) ^ $ip) { test_statement(0x196F);  if (@rsp = @rsp)  { test_statement(0xF11); } else { test_statement(0x24DD); }  // /* This is a comment   while  (@r10)@r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x739); }
$error$
$end$
1200
 if (($ip) << (0xE) >> @rsi << @rdx >> $thread & @r12 >< ($ip) << (0xE) >> @rsi << @rdx >> $thread & @r12)  { test_statement(0x164F); } else { test_statement(0x37E);  if (@r10 = (@r9))  { test_statement(0x41F); } else { test_statement(0x461); } }
$error$
$end$
1201
 if (@r13 + 0x10 @rsi + 7 << 0y0 >> @rbp >> @r10 | @r11 >> ~$thread >> $teb)  { test_statement(0x1727); } elsif (@rsi & ~~+$buffer & 0n17 | @r13 >> @r12 & $proc & @r9 <> $buffer << @rbx >> (0n12) >> ~-@rbp & @rbx >> @r13) { test_statement(0x221E); } else { test_statement(0xE66);  break; ;  // /* This is a comment   This is a not opened comment */  for (; @rdx)@rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  @rax = ~@rdx ; }
$error$
$end$
1202
 if ($proc << (@rbp) >> @r13 << @r10 & @rdi | 0n14 & @rbx & 0n8 & ~@r8 ^ @rbp & @r10 & @r12 ^ ~+$buffer & @rsi >= $proc << (@rbp) >> @r13 << @r10 & @rdi | 0n14 & @rbx & 0n8 & ~@r8 ^ @rbp & @r10 & @r12 ^ ~+$buffer & @rsi)  { test_statement(0x2038);  for (val = 10; @rax ^ @rdi ^ @rbp <= @rsp | @r13 | @rbx | @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  while  (@r8 >= @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
1203
 if ($ip & @rax << @r10 ^ @r11 ^ @r9 >> -@r12 ^ @r11 ^ @r8 ^ 0x10 >< $teb + @rsi << @rsi >> @rbx >> @rbx & @r9 << 0y1110 & $teb & @r8 & @r13 ^ $teb ^ @r10 & $proc ^ @rax & @rax)  { test_statement(0xF4C); } elsif ($ip & 0y1110 ^ @r12 & $ip <= @r11 << @rdi >> @rbx >> @rdx ^ (@rbp) ^ @r9 & @rdx ^ @r12) { test_statement(0x249B);  // /* This is a comment  } elsif (-$proc & @r8 ^ 0x1 & $thread ^ @rdi <> @r9 & @rdi & 0n7 ^ @r11 ^ (@r11) | $proc | @rsp ^ -@rax | -~@r10 | $proc) { test_statement(0x1E7);  for (val = 10; @r9 | 0y1100 <> @r10 | 3;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  /* This is a not closed comment }
$error$
$end$
1204
 if (1 + @r13 | @rbp ^ @r8 & (@r10) & 15 ! $proc + @r13 << @rbx & 0n18 >> +$buffer >> 21)  { test_statement(0x2109); } elsif ($proc >> @rax & ~@r12 & @r12 & @r11 != @rsp << @rdi & @r10 & @r11) { test_statement(0x114F);  for (val = 10; -@r9 ^ 0y1100 ! $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1205
 if (0n2 + @rbx >> 1 >> $proc | 0n12 << $thread >> @r11 ^ 16 >> +@r10 | $buffer >> @rsi ^ @rdx > 0n2 + @rbx >> 1 >> $proc | 0n12 << $thread >> @r11 ^ 16 >> +@r10 | $buffer >> @rsi ^ @rdx)  { test_statement(0x22C5); } else { test_statement(0x163E); }
$error$
$end$
1206
 if (0n9 >> @rbp >> $proc & 0n8 << ~~@r10 >> @r12 >> ~0x9 | @r10 >> @rbx < 0n9 >> @rbp >> $proc & 0n8 << ~~@r10 >> @r12 >> ~0x9 | @r10 >> @rbx)  { test_statement(0x562);  // /* This is a comment   // /* This is a comment   break;  break; } else { test_statement(0xD22); }
$error$
$end$
1207
 if (-@rbp + @r10 << (@r13) << @r9 >> 0x10 << (-@rax) | @rbp << 20 | @r10 & (@r8) & (@r9) ^ -@rsp != -@rbp + @r10 << (@r13) << @r9 >> 0x10 << (-@rax) | @rbp << 20 | @r10 & (@r8) & (@r9) ^ -@rsp)  { test_statement(0x1998); } elsif (@r13 << @rax ^ $thread >> @r11 & 0y101 & @rdi ^ @rbx | 0n12 & $thread & (@r11) ^ +@r8 & @rdx ^ (@rdi) == @rbp >> $teb ^ $ip ^ @rsi) { test_statement(0x13C5);  break; } elsif ($proc ^ ~0n6 & 0 | @r10 ^ @r11 ^ $ip | @r11 $ip & $buffer ^ @r9 & +@r10 ^ @r13 | @r8 & @r12 ^ $teb ^ @rax | (@rsp) ^ 0x4 | (@r9) | $proc) { test_statement(0x43A); } elsif (@rsi & +0y10011 | @r13 <> @rsi & +0y10011 | @r13) { test_statement(0x1B22);  break;  if ((@rbp) < (@rbp))  { test_statement(0x1298); } else { test_statement(0xF44); } } else { test_statement(0x814); ; }
$error$
$end$
1208
 if (0n6 + 0n3 << 0x2 << 0y1101 | @rbp << @r13 >> @r8 & @rax ^ $proc >> @r12 & ~0n6 ^ @r10 | @r13 & $buffer & @rbx ^ @rdi ^ $buffer ^ @r11 | @r11 & @r8 ^ +(@rsi) | @rbx((@rsp << @r9)  { test_statement(0x47B);  /* This is a not closed comment  for (val = 10; @rax ^ 0x0 | @r12 < @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1717); }
$error$
$end$
1209
 if (@rsi + 12 << 0y110 >> ~@rbx >> @rdi ^ 22 ^ @r12 >> @r13 & @rsi & @rax | @rsp << (@r8) ^ -($buffer) | @rbp >> @rbx & @r11 & @rdi ^ 12 & 0xB > @rdx << $thread << @r13 >> @rax >> @r8 & @r12 << @rbp & $thread & @rdx)  { test_statement(0x613); } elsif (0xD ^ @r10 >> @r10 | @r13 >> @rdi & @r10 <> +2 >> 0y111 >> $ip & 0y10010) { test_statement(0x4B1);  /* This is a not closed comment val = $buffer | @rsp | @rbx ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp != @r12) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 > @r13) ;  if ($buffer < $buffer)  { test_statement(0x107B); }  /* This is a comment */ } else { test_statement(0x243D); @rax = +0xD ^ @r11 ^ @r8 ; @rax = @rbx ; }
$error$
$end$
1210
 if (@rdi << @r9 & @r10 << @rdx & @rsp != @rdi << @r9 & @r10 << @rdx & @rsp)  { test_statement(0x33B);  for (val = 10; ($proc) & 0n8 | $ip ^ +@r13 >< @rsp & ~$proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1211
 if (7 != @rdi + $teb << 15 ^ @rbx << (@rsp) >> (-@r9) >> @rax & @rbp)  { test_statement(0xD6F);  // /* This is a comment  val = @r9 & $ip | +@r12 ; }
$error$
$end$
1212
 if (~@r13 + 0y11 >> @r9 << $thread <> (0y10011) << 0y10000 << @rsi ^ @rbp << 0y1001 ^ 0x2 >> 0n17 & @r9 ^ @rax ^ 22)  { test_statement(0x1978); } elsif (@rbx >> @rsi >> @rbx & ~@r13 >> $teb & @rdx((@rsi & @r10 & @rdx & 3 | $buffer ^ @rbx & -+$proc | @r13 ^ $proc | @rax ^ @r11 | 0n16 | @rdi) { test_statement(0x1199);  if ($buffer 0x8 ^ @rax)  { test_statement(0x51); } } elsif (@r12 | -$teb & @r13 ^ @r10 | @rsi ^ @rax >< @rsp & $buffer | @rbp ^ $thread) { test_statement(0x2093);  /* This is a not closed comment } elsif (+@rax & 20 | 0n12 ^ @rbx <> 0n12) { test_statement(0x1024); val = 0y1111 | +0n13 ; } elsif (@rdi ^ 0y10 | @rdi | $thread < @rdi ^ 0y10 | @rdi | $thread) { test_statement(0xD90);  break; } else { test_statement(0x1CE3); }
$error$
$end$
1213
 if (@r12 + @r11 << 23 << $buffer | @rax & +@rsi >> @rbp & @r8 | @rdi | @rsi & ~@r10 ^ $buffer < @r12 + @r11 << 23 << $buffer | @rax & +@rsi >> @rbp & @r8 | @rdi | @rsi & ~@r10 ^ $buffer)  { test_statement(0xFF4); val = $buffer >> ~$ip | @r10 ^ 0x2 ; }
$error$
$end$
1214
 if (0y1 + 0n6 << @r13 << $teb >> 0x1 >= 0y10 + @rdi >> @r11 >> @r9 >> +$ip & $thread << @r9 & $proc & @rdx & @rax | @rbx ^ 0n14 & @rbp ^ +@r8 & 0y1111 ^ $proc)  { test_statement(0x2083); @rax = -$thread | 0n11 & @r13 | @r11 ^ @rsp | @rax ; } elsif (@r10 >> @r11 >> 0n11 & @r13 >> @rax & @r9 & 4 ^ @rax & $thread & $buffer >= @r10 >> @r11 >> 0n11 & @r13 >> @rax & @r9 & 4 ^ @rax & $thread & $buffer) { test_statement(0x37D);  // /* This is a comment  val = @rsi | @rbp | ~0xE ;  /* This is a comment */ }
$error$
$end$
1215
 if (+@rdx << @r8 << @r13 >> @rdi >> $buffer >> @r10 ^ 0xE >> 0x9 >> ($ip) ! +@rdx << @r8 << @r13 >> @rdi >> $buffer >> @r10 ^ 0xE >> 0x9 >> ($ip))  { test_statement(0x7CC);  if (@rbx & 10 ^ @r10($buffer | $proc ^ @rsi)  { test_statement(0x1880); } else { test_statement(0x221D); } } elsif (@r11 >> 0x4 >> $ip ^ @r12 < @r11 << @r9 >> 0n8 & @r12 >> $buffer & @rdi | 0n3 >> @r11 & @rdi & 0x6 | 0x11 ^ @rbx | 0 ^ @rdx) { test_statement(0x10E6); }
$error$
$end$
1216
 if (@r11 >> @r8 << 0x4 >> @rax ^ 0n12 & @r12 >> @rsi & ~@r13 & $buffer((@r11 >> @r8 << 0x4 >> @rax ^ 0n12 & @r12 >> @rsi & ~@r13 & $buffer)  { test_statement(0xF5B); } else { test_statement(0x87D); ; ; }
$error$
$end$
1217
 if (@rbp & 0y111 << (@r13) >> 21 >> $teb ^ @rdx >> @rsp ^ +@rax >> ($thread) | $buffer << 11 >> +@rax >> +@rsi | $buffer & @rbp ^ 2 & 12 ^ @rax ^ 7 | $proc & @r8 = @rbp & 0y111 << (@r13) >> 21 >> $teb ^ @rdx >> @rsp ^ +@rax >> ($thread) | $buffer << 11 >> +@rax >> +@rsi | $buffer & @rbp ^ 2 & 12 ^ @rax ^ 7 | $proc & @r8)  { test_statement(0xE96); } elsif ($thread << $buffer & $proc >> @rbx & @rsp = +@rdi << @rbx & 0n4 >> -@r13 | ~0xD & @r13 ^ +-@r9 & @rbx) { test_statement(0x15F9); } else { test_statement(0x1310); }
$error$
$end$
1218
 if (@rbx + 0y110 | 0x3 >> @rsi >> 0xB & $ip ; @r9 ^ $proc << 5 >> 0x6 >> ($ip) | @r13)  { test_statement(0x2488);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi & $proc | @rax | @r9 > @rdi & $proc | @rax | @r9) ; } else { test_statement(0xF25);  while  ($thread ^ ~@r13 | @r11 @r12 | 0n12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment ;  if ($teb(@r12)  { test_statement(0x19E2); } elsif ($teb = $teb) { test_statement(0x1578); }  if (@r10 > @r10)  { test_statement(0x15DC); } }
$error$
$end$
1219
 if (@rax << @r11 << 0n15 >> ~@rdx << +$thread >> @r11 | @r12 << $proc >> 11 >> ~$buffer & $ip & @rsi((@rax << @r11 << 0n15 >> ~@rdx << +$thread >> @r11 | @r12 << $proc >> 11 >> ~$buffer & $ip & @rsi)  { test_statement(0x18D5);  // /* This is a comment   if (~@rdx | +0y10001 < @rbp ^ +-@r9 | $thread | @r8)  { test_statement(0x384); } else { test_statement(0x15C4); }  if (0x11 <> @r10)  { test_statement(0x83E); } } elsif (0xC << @rax == 0y1101 >> $buffer >> 0y1110 ^ 0y110 >> @rsi) { test_statement(0x394);  // /* This is a comment  } else { test_statement(0x20CA); }
$error$
$end$
1220
 if (@rsi + @r12 << (6) & @r8(@rsi + @r12 << (6) & @r8)  { test_statement(0x197E); } elsif (@r8 << @r8 >> $proc >> ~@rdx & 0xF & @r13 & @r12 ^ @r12 >> @rsp & $buffer ^ @r10 ^ +0n8 ^ -@rdx != @r8 << @r8 >> $proc >> ~@rdx & 0xF & @r13 & @r12 ^ @r12 >> @rsp & $buffer ^ @r10 ^ +0n8 ^ -@rdx) { test_statement(0x2545);  for (val = 10; @r8 >< @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif ($thread >> 0y1 ^ @rsi & @rbx ! @r13) { test_statement(0xBC7);  if (0n9 | @r8((0n9 | @r8)  { test_statement(0x79A); } else { test_statement(0x16F8); }  break; } else { test_statement(0x8CF);  // /* This is a comment   /* This is a comment */ }
$error$
$end$
1221
 if (@rdi + $proc << 0n10 << @rdx >> 0x6 << +@r13 != @rdi + $proc << 0n10 << @rdx >> 0x6 << +@r13)  { test_statement(0x1ED9); } elsif (@rsp >> @r10 >> @r9 | @rsp >> @r13 & @rsi ^ @rsi | 0y1001 & $ip ^ -@rdi == 0x11 << 0n7) { test_statement(0xA1); } else { test_statement(0x10A2);  // /* This is a comment   while  ($ip | ~@rax 0n8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1222
 if (@rbp >> ~@rdi << 0y10010 >> @r9 & $ip >> @rax >> $teb & @r12 & $thread & $teb | @rdx << @rbx >> @r13 & 0x2 & $teb & +@rsi ! $proc << @rsp >> $teb << @r12 ^ 0n19 >> 17 >> @rdx ^ @rdx & @r12 & @rsp)  { test_statement(0x1496);  if (+$proc ^ @rax == +$proc ^ @rax)  { test_statement(0x1B92); }  This is a not opened comment */  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 14 <= ~@r11) ; }
$error$
$end$
1223
 if (@rax + @rdi << @rdi >> ($proc) << (-$buffer) >> @rdi & @rbp >> $ip >> 0x5 & @r10 & @r9 & +4 ^ @r9 <> ~@r8 + ~$ip << @rax << ($teb) ^ @r8 ^ @rbp ^ @rsp ^ @rbx ^ 23 | @rax & @r9 ^ @rax & -0y1111)  { test_statement(0x125F); }
$error$
$end$
1224
 if ((--@rsi) >> @rbx << $ip >> @rdi & -@r10 << $ip ^ @rbp << @rbx >> ($buffer) | @rdi >> ($proc) & (@rbp) >> @r8 & $teb & @rbp | @rdi >> @rdx & 0n18 & @r8 ^ @rdx | $proc ^ @rax | @rdi ^ +@r11 | @rdx | 0y10001 = @r12 << 0n6 >> @r10 << @rax & 0y1100 & $buffer ^ -@r13 >> ~@r8 >> @r11 & $buffer | @rsp ^ @r13 & @rsi & $teb)  { test_statement(0x240C); } else { test_statement(0xE15);  /* This is a comment */  /* This is a not closed comment  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax)@rax) ;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y111 <= 0y111) ;  This is a not opened comment */ }
$error$
$end$
1225
 if (-@rdx >> @rsp << @rdx >> -+0x1 >> @rsi & @rbp << @rdx & @r10 >= -@rdx >> @rsp << @rdx >> -+0x1 >> @rsi & @rbp << @rdx & @r10)  { test_statement(0xB8B);  if (@r10 & @rdi ^ @r9 | @rdi > @r12 & @rax ^ 0x7 ^ @r9 | @rsi)  { test_statement(0xA3E); } }
$error$
$end$
1226
 if (-~-@r11 + ~@r12 << $thread & @rsi << ~@rbp >> ~@rax >> ($teb) & $proc & @r10 & @rdx | $teb == @rsi << $proc & @r9 << $proc >> 0y111 & $teb >> 0y1000 & -@rsp & @r12)  { test_statement(0xF54); }
$error$
$end$
1227
 if (@r8 + +@rdi << $thread << -5 >> $ip << @rbx >> 0y10011 >> $teb ^ 0y1100 << $buffer & @rbx >> @r10 & @rbx > -@r12 >> $ip ^ @rax << $proc | @r10 & @rsi & @rdi ^ $proc)  { test_statement(0x5B9); ;  if (0n1 ^ +$teb | $teb | @rsp < 0n1 ^ +$teb | $teb | @rsp)  { test_statement(0x951); }  /* This is a comment */  /* This is a comment */ }
$error$
$end$
1228
 if (@r9 + -(@r13) << $teb << @r13 & @rax << $ip & @r8 >> 0n17 | @rbx & @r11 & +@rdx & @r12))$ip >> $teb << $teb >> @r13 >> @r11 ^ @rbp << $teb >> @rbx >> (@r10) ^ 23 >> @rbp & +@rsi & @r13)  { test_statement(0x437); } elsif (@rsp << @rsp & @r8 ^ -0y1111 >> @rsp & (0y1100) ^ ~$teb & ~@rdx ^ @r10 != @rsp << @rsp & @r8 ^ -0y1111 >> @rsp & (0y1100) ^ ~$teb & ~@rdx ^ @r10) { test_statement(0x1F87);  // /* This is a comment  } elsif (@rbp & @r12))0xB ^ @r12 | @r12 | -$proc | @r12) { test_statement(0x1C15);  if (@rbx | 0n9 > $teb | @r9)  { test_statement(0x16AA); }  break; } elsif (14 & @rbx ^ 0y10011 ^ @r8 ! @r9 & $buffer ^ @rbx ^ ~@rsi) { test_statement(0x1739);  // /* This is a comment  }
$error$
$end$
1229
 if (0y100 >> @r8 >> @r13 >> @rbx ^ @rdx << $ip >> (@rdi) >> @r12 ^ 10 & (@rsi)(@rbx + +@rsp << $teb >> $teb << $teb >> @rax & $teb & $ip >> $ip & @r10 ^ ~12 ^ @r11 >> @rsi ^ @rax)  { test_statement(0x13B4);  break;  for (val = 10; @rbx = 0n16 | @r10 | @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1230
 if (@r8 >> @rbx << @rsi & 0y1010 >> (@r12) & @rbx >> @r13 ^ 0xA >> @r10 & @rax >> @r13 & $ip & @r11 ^ @r13 | @rbx << @r11 >> $ip >> @r12 & @rbp ^ @rbx >> @rax & -@r8 ^ @rbx <= +@rax + $thread >> $buffer << @r11 ^ @rsp | @rax)  { test_statement(0xE63); } elsif (0n16 << 0x3 >> $ip ^ +@rax & $ip & @rdx ! @rsp >> @r11 >> @rsp) { test_statement(0x18D9); ; } elsif (@r11 | 0y0 & ~17 ^ 0y1111 ^ $proc | @r8 ^ @rsi | 11))@r12 ^ +0n7 & @rsp) { test_statement(0x2671); } elsif (@rsi & $thread ^ @r9 ^ @rdx((@rsi & $thread ^ @r9 ^ @rdx) { test_statement(0x85E); } else { test_statement(0x2127);  break;  if ($thread | @r13 = $thread | @r13)  { test_statement(0x1C14); } else { test_statement(0x1760); }  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi 0y1100) ;  if (~$ip > ~$ip)  { test_statement(0x152D); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc > -@rsp) ; }
$error$
$end$
1231
 if (15(@rdx + @rsi << @r13 >> @r11 << @rsi & -@rbx)  { test_statement(0xAA3);  /* This is a not closed comment } else { test_statement(0x6F0);  /* This is a comment */  if ($thread | @r13 >= @rdi | @r13)  { test_statement(0x1DEC); } elsif (@r8(@rsp) { test_statement(0x1A4F); } elsif (+14 @rax) { test_statement(0x1D1D); } elsif (0x7 != $proc) { test_statement(0x1C2A); } else { test_statement(0x1594); }  /* This is a not closed comment }
$error$
$end$
1232
 if (@rdi >> @r13 << @rdx >> ($teb) & @rdx << @r8 >> $proc >> 11 ^ (1) << +$thread | @r11 << @rdi >> 16 >> $thread ^ (($thread)) & @r13 | @rbx & (14) & @rax ^ @r9 & @rdx < @rdi >> @r13 << @rdx >> ($teb) & @rdx << @r8 >> $proc >> 11 ^ (1) << +$thread | @r11 << @rdi >> 16 >> $thread ^ (($thread)) & @r13 | @rbx & (14) & @rax ^ @r9 & @rdx)  { test_statement(0x3DD); } elsif (@r12 | @rbp = @r10 << @rsp >> -@rbx >> 0n2 & $proc & @r8 & @r13 ^ @r12 >> @r8 & (@r13) ^ @r10 & @r11 ^ @rax ^ $ip) { test_statement(0x21F2); } elsif (0y1001 >> @r9(@r9 ^ @r11 | @r11 & $proc | ($thread) ^ $buffer) { test_statement(0x1505); } else { test_statement(0x179F); }
$error$
$end$
1233
 if (@r11 << 0x9 >> ~@rdx >> $proc >> $ip == +@r8 + @r9 << 0y1010 << @r8 ^ @rdi >> $buffer & @rbx >> $teb | @r9 & $thread >> 0n0 & +@rax & 0y110 | @r10 >> ~0n6 & @rsp & @r8)  { test_statement(0x1758); } elsif (@r9 >> @r13 ^ ~@rdx ^ $ip ^ $thread ^ @r11 | $ip & @rdx ; @r9 >> @r13 ^ ~@rdx ^ $ip ^ $thread ^ @r11 | $ip & @rdx) { test_statement(0x71F); ; } elsif (+$thread >> @rdx & $thread & (5) ^ @r10 & $ip | $proc ^ $proc ^ @rbp < ($thread) >> @rbx ^ $teb ^ $proc ^ @r11 | 0n4 ^ -$thread ^ +@r10 | $proc) { test_statement(0x17B7);  /* This is a comment */ }
$error$
$end$
1234
 if (0n18 << $buffer << @r11 & @rdi >> @r8 >> @r11 & @rbx | @r9 << (@r10) & 0x11 >> $proc ^ @rdi & $thread & 0x12((@r11 << ($ip) >> @r13 >> @r11 ^ (@r13) << $teb >> 0n7 >> +0n13 & $ip ^ @r9 & 0y110)  { test_statement(0x25D7);  while  (0y1100 & $ip ^ @r13 ^ $buffer >= @r9 & @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r11 >> @rbx & @rsi & @rax & @rsp != @r11 >> @rbx & @rsi & @rax & @rsp) { test_statement(0x254F);  /* This is a not closed comment }
$error$
$end$
1235
 if (@r8 + 0y1101 >> @rdx & 0xE & 0xC | @r8 & ~@rbp >> @rbp ^ -$proc & $teb & $teb ^ -@rdx & @r12 | @r9 & @rsp <> @r8 + 0y1101 >> @rdx & 0xE & 0xC | @r8 & ~@rbp >> @rbp ^ -$proc & $teb & $teb ^ -@rdx & @r12 | @r9 & @rsp)  { test_statement(0xEDC); } elsif (@rax << @rsi >> @r13 ^ @rdx ! @rax << @rsi >> @r13 ^ @rdx) { test_statement(0xEC7); } else { test_statement(0x23A); @rax = $buffer & @rbp ^ $buffer ^ $proc ; ; }
$error$
$end$
1236
 if (0xB @rax >> @rbp << $proc)  { test_statement(0x2DD); } else { test_statement(0x20F6); }
$error$
$end$
1237
 if (@r11 + @r13 << @rsp << @r13 ^ @rsp ^ @r8 >> @r9 >< @r11 + @r13 << @rsp << @r13 ^ @rsp ^ @r8 >> @r9)  { test_statement(0x1748);  /* This is a not closed comment }
$error$
$end$
1238
 if ($thread | @rdi << @r9 >> @r11 >> @r11 & @r8 >> @rdx & $buffer((@rdi + $proc >> 0y10000 << @rsp >> $proc >> @rdx ^ 21 & @rbx & @r8 & @rax)  { test_statement(0x1912); }
$error$
$end$
1239
 if ($thread & ($thread) >> 0x4 | @r9 >> ~@r8 >> $teb & 0y1101 | ~$thread >> 4 & @rsi & @rax | 0y10 ^ $thread $proc + 0n11 << $thread << +@rax >> @r8 << @r10 & @rsp << -@r13 >> @r8 ^ (@r9) << @r8 >> @rdi >> 20 & @r8 ^ @r12 >> $buffer & @rbp | @rsi >> @rdx ^ @rdi >> @r11 ^ @rdx & $teb ^ $proc)  { test_statement(0x1233); }
$error$
$end$
1240
 if ($thread >> @rdx >> @rax >> 22 <= @rdx + 2 >> 0n19 | @r8 << @r8 & @r11 & @r12 & ~@r9 | $buffer >> $thread & @r11 ^ $teb & (@rax) | @rax & ~$proc | 0y1110 | $proc)  { test_statement(0x1608);  // /* This is a comment  } else { test_statement(0x1891);  // /* This is a comment  }
$error$
$end$
1241
 if ($teb + @rbp << $teb << $proc & ($thread) >> @rbx & @rbp < $teb + @rbp << $teb << $proc & ($thread) >> @rbx & @rbp)  { test_statement(0xF22);  break; } else { test_statement(0x13DA);  This is a not opened comment */ }
$error$
$end$
1242
 if (0x11 + -~@r10 >> $proc << @rdi & @rdx & 0x1 ^ @r8 << @rax >> 0n18 >> -@rsi ^ @rsp >> @rax ^ $thread & -@r10 ^ $proc ^ @rdi | 0x13 & @rax >> +0n16 & @r11 & @r9((0x11 + -~@r10 >> $proc << @rdi & @rdx & 0x1 ^ @r8 << @rax >> 0n18 >> -@rsi ^ @rsp >> @rax ^ $thread & -@r10 ^ $proc ^ @rdi | 0x13 & @rax >> +0n16 & @r11 & @r9)  { test_statement(0x134E); } elsif (@rdx & $teb & @r12 & -@r8 ^ 0y1101 >> +$buffer & +$buffer >= @r8 << +$buffer & @rbp >> @r8 & @r12 & @r9 | @rsp & @r10 & @rbx ^ @rdi | $proc & @r12) { test_statement(0xA08);  // /* This is a comment  } elsif ($buffer & ~$buffer)@rsi & 0y1110 | 0xF & @rax ^ 0y1111 ^ 14) { test_statement(0x1EFE); @rax = $ip ;  // /* This is a comment  } elsif (@rax & @rdx @rdi & $ip ^ @rdi | 0y100 ^ @r8 | $ip | 0y110) { test_statement(0x8F9); } elsif (~@r11 | @r11 ; $proc ^ 12 | @rsi) { test_statement(0x22F9);  /* This is a comment */ } elsif (@rbx)@rbx) { test_statement(0xBCA); ; } else { test_statement(0x17B6);  /* This is a comment */  This is a not opened comment */  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12((@rsp) ; }
$error$
$end$
1243
 if (2 & 0n5 << $buffer >> @r9 >> 10 ; 2 & 0n5 << $buffer >> @r9 >> 10)  { test_statement(0x133E); ; } elsif (@r8 << 0n5 >> (0n16) & 15 >> @r12 ; @r8 << 0n5 >> (0n16) & 15 >> @r12) { test_statement(0x152); ; } elsif ($teb >> 0n17 < $ip | @r12 & $buffer) { test_statement(0x303); } elsif ($proc & $ip ^ $thread((@r8 & @r10 ^ @rbx) { test_statement(0x26AC); } elsif (@r8 == 0xE ^ @r9 | 0y10000 | 0y11) { test_statement(0x1EA9); }
$error$
$end$
1244
 if (0y10 + @rdi >> 0y1111 << -@rdi & @r13 >> $thread >> @rdi & @r12 & @rbp | -@rbx >> 0n15 >> @rdx & $proc 0y10 + @rdi >> 0y1111 << -@rdi & @r13 >> $thread >> @rdi & @r12 & @rbp | -@rbx >> 0n15 >> @rdx & $proc)  { test_statement(0x14BE);  while  ($buffer & $teb | (0n3) ^ @rdi <= $buffer & $teb | (0n3) ^ @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1245
 if (@rdx + @r13 << -@r10 << @rdx >> @r11 & @rbp >> 0n11 & @rdi ^ -0y11 << $thread | $ip << $buffer >> -@rsi >> @rdi | @r11 >> +(-@rsp) & ~$buffer | -21 ^ @rsi | $proc ^ 12 | @rsp | -~@r8 < @rdx + @r13 << -@r10 << @rdx >> @r11 & @rbp >> 0n11 & @rdi ^ -0y11 << $thread | $ip << $buffer >> -@rsi >> @rdi | @r11 >> +(-@rsp) & ~$buffer | -21 ^ @rsi | $proc ^ 12 | @rsp | -~@r8)  { test_statement(0x17D2); } elsif (@r9 & ($thread) ^ @r13 & @rdi & @rsp | $thread >> $thread & $teb & @rbp ^ 0n2 ^ @r8 ^ @r11($proc << @r8 & @rsi & -@rbx & @rbx | @rdi) { test_statement(0x1CD5); ; } elsif ($proc >> @r10 & @r9 ^ @rbp | $proc & $buffer | @rbp ^ ((@r13)) ! 0n11 ^ @rsp ^ +@r10 ^ -0y10010) { test_statement(0x1491); } elsif (-0y1100 & $proc <> -0y1100 & $proc) { test_statement(0x1121); } elsif (@rbx | @r8 = @rbx | @r8) { test_statement(0x159B); val = @rsp ; } elsif (0n9 >< @r12 | $proc) { test_statement(0x441);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~(@r11) +0x2) ;  /* This is a not closed comment } elsif (+@rdi >< +@rdi) { test_statement(0x25B0); } elsif (0y10001((@r9) { test_statement(0x1300); } elsif (22 >= $ip) { test_statement(0x1E26); } else { test_statement(0x18D0);  // /* This is a comment  }
$error$
$end$
1246
 if ($buffer + @rdx << @rax >> ~@r12 >> @r9 >> @rax & @rdi >> @r8 >> ~@rax ^ 15 << (+$buffer) ^ $thread | 0xA >> @r10 >> @r11 & @r11 & $thread ^ @rsi & @rsi & ~@r10 | @rsp >> 0x8 & -$thread & 0n15 ^ @rbx != @rsp + @r10 & @rsi << @r11 >> ~$buffer)  { test_statement(0xA90); } elsif (~@r9 << @r10 >> $teb | 0 >> 0n16 ^ -@r12 ^ $thread <= ~@r9 << @r10 >> $teb | 0 >> 0n16 ^ -@r12 ^ $thread) { test_statement(0x261); } elsif (-0x3 & @rsi & @r13 | $thread & (2) >= @r9 >> (0y1100)) { test_statement(0xBFF);  /* This is a comment */  /* This is a not closed comment  This is a not opened comment */ } elsif (@r10 ^ $proc ^ @rsi | 0n12 ^ $buffer | @rdx))@rbx & @rbx) { test_statement(0xD0F); } elsif (@rbp ^ $teb | 0x12 = @rbp ^ $teb | 0x12) { test_statement(0x2119); } elsif (@rdx | 0y0 < ($teb)) { test_statement(0x1650); } elsif (@rax)+@rbx) { test_statement(0x1303); }
$error$
$end$
1247
 if (0y101 >> $teb ^ @rdx >> @r8 >> ~$proc & @r11 >> @rdx & $ip ^ 0xB & @rbx ^ 0y11 ^ $thread ^ (~@r13) <> 0y10001 >> @rbx & ~0y10010)  { test_statement(0x20A6); }
$error$
$end$
1248
 if (@r10 + -$buffer << @rbp << @r11 & $thread << +-$thread & @rdi ^ $teb >> @rsp >> @rsi & @r11 >> $ip & @rbp & @rbp(-@r13 + ~@r12 & $thread >> @r8 & $buffer | @rsp << $teb ^ 0x7 >> -@rbx)  { test_statement(0x1486); }
$error$
$end$
1249
 if (0x8 << 0y11 << $proc & @r8 << @rax ^ ~(22) >> @rbx >> $buffer ^ @rsi & @rsi | $buffer << @r12 >> @rdi >> @rdi ^ @rax >> @rbp < 0y1000 << @r11 & @r13 >> $buffer >> 2)  { test_statement(0x10ED); } else { test_statement(0x6B4); val = @rbp & $thread ; }
$error$
$end$
1250
 if (@rsp & @r8 << $buffer >> @rbx >> @rbp & @rbp = @r9 << ~0n6 << 0y101 & 0n18 >> 13 & ~$thread >> 0n3 & 0y10 & @r9 | @r12 << -@r11 ^ ~-@r12 >> -@rdx & @r12)  { test_statement(0x1F99);  while  (@r9 ^ @rbp | $buffer | @r9 = 0x4 & @r11 ^ @r11 ^ ~0n12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rdi ^ 0n8 ^ @rsi | @rbx ^ 0n8 | @r11 | 0y1 ; }
$error$
$end$
1251
 if ($buffer + @r8 >> 12 & @r12 << 0n11 | @r8 << @rax >> $buffer & $buffer >> -+$ip & @rsp & @rdx 0y1 + @r13 ^ ~@rsp | @rdi << @rsi ^ @r12 >> 0y101 | $buffer >> $ip)  { test_statement(0x1D0E);  for (val = 10; @rbx & -@r9 | @r13 ^ +$teb | -@r12 <= @r9 & $teb ^ @r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n13($buffer) ;  /* This is a comment */ } elsif ((@r9) << @rsi >> @r12 >> @rdi & 0y1101 ^ @rbx & (@r11) & (-0x13) | @r13 >> @rax & @r8 ^ (($teb)) & $ip <> @rdi >> $buffer >> @rbp & @r13 >> @rdi ^ @r11 >> @rdi & 12 & @r9) { test_statement(0xBBF); ;  while  (@rbp == 0y1111 | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1F88); }
$error$
$end$
1252
 if (-$teb + ~$teb << -@rdi << @r10 & $buffer << @r12 >> $proc >> 0y10 & $ip >> @r9 ^ 0xB ^ @r8((@r13 + $proc >> $buffer << @r9 >> @r10 ^ @r12)  { test_statement(0x2283);  while  (@rbp & -@r13 ^ @rdi ^ @rbp | @rbx ^ @r11 | 10 = @rsp | @r8 ^ @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1253
 if (@rax + $thread << ~0n15 << ~@r11 ^ +$thread << $thread | @rdx << $teb >> @r10 >> @r11 | $ip & 0y10 & @r11 ^ @rbp & @rdx | 0y1 & @rsp ^ 0x8 ^ @rsp | 22 ^ 0n12))$proc + @r10)  { test_statement(0x2072); } elsif (@rbp << @rdx >> @r9 >> +$ip & @r11 & $proc ^ @r12 >> ~0 & -0y10011 & @rbx ^ @rax ^ $ip | $ip ^ $ip ^ @r8 ^ @rbp))@rbp << @rdx >> @r9 >> +$ip & @r11 & $proc ^ @r12 >> ~0 & -0y10011 & @rbx ^ @rax ^ $ip | $ip ^ $ip ^ @r8 ^ @rbp) { test_statement(0x9C0); }
$error$
$end$
1254
 if (0y1000 + ((@rax)) >> @rdi << @rbp & @rdx << $ip >> $teb >> @rbx != +@rbx + ~(@rdx) >> @r11 << @r12 ^ $thread << @r8 >> @rsp >> -@rdx & @rbx ^ @rsp >> @r13 ^ @rax ^ 0n8 | @rsp ^ @r9 >> @rdx ^ $teb & @r9)  { test_statement(0xDE9); }
$error$
$end$
1255
 if ($teb & 0y101 >> ($buffer) >> -@rbx & @rsp >> 10 & @rbp | $proc << $thread ^ (@rbx) >> @rdi ^ -0xE ^ (@rax) ! @r11 + $buffer ^ @rbx | 0x2 & 0n7 & @r8 & @rbp ^ @r12 & @rsi | $teb | $thread & 0y10010 | 4 ^ ~$teb)  { test_statement(0xDBE); } else { test_statement(0xD85); }
$error$
$end$
1256
 if (@r13 << +20 | @r12 << @rbp >> @r10 >> @rdi & $thread >> 0n19 & @rbx ! @rbp | 0y1001 & ($thread) >> @rsp)  { test_statement(0x2297);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx & (@rsi) ^ @r8 | @rbx ^ @rbp | @r9 $ip & +@rax | 16 | @r8) ;  /* This is a not closed comment  /* This is a not closed comment } elsif (@r13 << @r9 >> @r10 | $teb & @rdx & @r10 ^ ($thread)(($buffer >> @rax >> $thread & @rsi & 10) { test_statement(0x17C2);  This is a not opened comment */  // /* This is a comment   if (@rsi)-+2)  { test_statement(0x1973); } elsif ($buffer >= @r13) { test_statement(0x21FA); } elsif (@rdi <= @rbx) { test_statement(0x16D1); } else { test_statement(0x1283); } } elsif ($teb >> @r10 ^ 0y1110 ^ 0x12 ^ 0y10011 >= 0y100 >> @rdx | (@rbx) ^ $ip | 0y1100 ^ @rbp) { test_statement(0x8E1); @rax = $thread | @r12 | +$proc ; } elsif ($proc | (~($ip)) ^ 0x7 | $proc ; @r11 | 0xD ^ @r12 | $proc) { test_statement(0x51A);  This is a not opened comment */  break; } elsif (0n3 ^ 0y1010 | 0n12 == $teb) { test_statement(0x5E1); }
$error$
$end$
1257
 if (@rdi + +$buffer << @r11 << 0xD & @rdi << 0y1101 >> 0n19 >> @r10 ^ 0n10 << ($buffer) & @rbx & ~0xB & @rbp ^ -@rsp | $proc << @rsp >> @rbp >> 0x2 & @rsp | @r8 & 0y10011 | $thread <> @r12 + @r8 << @r8 ^ $ip >> @rdx ^ @rbx | $thread << $buffer & $teb | @rdi >> @r12 & @rsp | @r12 & @rbx | ~~0xB)  { test_statement(0x14FB); val = $proc >> $proc & @r12 & $buffer | @r12 ; } elsif ($proc << $ip & @r11 ^ +0x13 >> 0xE & @rsp & @rax | 0y1 >> @r12 & 0x1 & @r11 > @rax << @rax & $proc >> @rsp & @r8 ^ $proc ^ +@rsi ^ (@r10) ^ 0y11 | @rdi >> $buffer & @rax & @r11) { test_statement(0x1118); ;  /* This is a comment */  break;  // /* This is a comment   /* This is a not closed comment  break;  if (+@rsi)0y10001)  { test_statement(0x1886); } } elsif (@rsi >> @rsi | $proc < @rsi >> @rsi | $proc) { test_statement(0x10B2); ; val = @r13 ; } elsif (@r10 ^ 0xD ^ 0y10000)$buffer ^ @rsp | $teb | $ip | $teb) { test_statement(0x158F); }
$error$
$end$
1258
 if (@rbx + @r13 << $teb << $teb >> @r9 @r9 >> $proc)  { test_statement(0x17B6); ; }
$error$
$end$
1259
 if (@rdi + 15 | $teb >> 10 ^ @rsi >> $proc & $proc | -@r8 >> @r10 != @r9 | @rdi ^ $ip >> $proc | @rbp & @r11 ^ @r12 | @r11 & ($proc))  { test_statement(0xFCA);  break;  /* This is a comment */  break;  for (; @rsi 0n12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 << $thread >> (0y10010) & @rdi >> @r8 | -@r9 & 0x3 <= @r13 << $thread >> (0y10010) & @rdi >> @r8 | -@r9 & 0x3) { test_statement(0x227F);  /* This is a comment */  /* This is a not closed comment @rax = $proc | @rsp ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip = $ip) ; } else { test_statement(0x1271); ; }
$error$
$end$
1260
 if (0n13 ^ @rdi << @r11 >> @r13 < 0n13 ^ @rdi << @r11 >> @r13)  { test_statement(0x1889); } else { test_statement(0x1A1B); }
$error$
$end$
1261
 if (@r13 >= @r13)  { test_statement(0x196E);  // /* This is a comment   if (@rdi | $proc <= 20)  { test_statement(0x15D1); } else { test_statement(0xAC1); } } elsif (@rbx << @r8 < @r10 << $buffer >> @rbx) { test_statement(0x14A0); } else { test_statement(0x21FB); }
$error$
$end$
1262
 if (0y11 << @r9 >> @r9 << @rdx & ~@r13 << @rax >> ~@r13 >> 0y1110 >< 0y11 << @r9 >> @r9 << @rdx & ~@r13 << @rax >> ~@r13 >> 0y1110)  { test_statement(0x5BB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax & $buffer)@rax & $buffer) ; } elsif (@r11 << @r9 ^ @r10 ^ ~$buffer & @rdi)@r11 << @r9 ^ @r10 ^ ~$buffer & @rdi) { test_statement(0x1606); } else { test_statement(0xF28);  // /* This is a comment  }
$error$
$end$
1263
 if (@rbx + @rdi << $proc & @rsp >> @r13 < @r11 + @rsi >> (@rbp) & -0n11 << @rbp & (@rsp) ^ @rdi << @rsi >> @r10 ^ @r12 & 0n18)  { test_statement(0x8DF); } elsif (+0n9 << 12 | $proc >> @rsi & $buffer & @rax | 0xD & ~@rbx | @r12 ^ @rbx | $proc | @r8 <= @rax & @r8 >> $ip & 0x12 & @rsp) { test_statement(0xD4B); }
$error$
$end$
1264
 if (@r9 ^ @rdx << $proc >> @rax >> (@r13) | 0n5 << $teb >> 0n7 >> @r10 | @rbp & 0n5 | $proc & $teb ^ @r8))@r9 ^ @rdx << $proc >> @rax >> (@r13) | 0n5 << $teb >> 0n7 >> @r10 | @rbp & 0n5 | $proc & $teb ^ @r8)  { test_statement(0x1A60); } else { test_statement(0x1395); ; }
$error$
$end$
1265
 if ($thread & $thread << @rbx >> 0x3 >> @rdi($thread & $thread << @rbx >> 0x3 >> @rdi)  { test_statement(0x636); ;  for (val = 10; (@rbx) ^ $proc >= +@rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } else { test_statement(0x94); }
$error$
$end$
1266
 if (@r9 = @rsi >> @r12 >> @r10 ^ (@rdx) << $teb >> ~$proc)  { test_statement(0x1ED); } elsif (@r11 & @rbx >> @r9 & @r12 & @rax | @r13 & $thread ^ 0x12 & @rsp ^ @rbp | ~$proc & @r12 < @r11 >> 0 ^ 0x1 ^ $proc) { test_statement(0x1D16); } elsif (@r10 >> @r9 & @r11 & @r8 ^ @r10 ! @r10 >> @r9 & @r11 & @r8 ^ @r10) { test_statement(0x1BEC);  /* This is a comment */ } elsif (@rbp | ~@rbx ^ @r13 | (0n10)(@rsp & 0x1 ^ 16 | +$buffer) { test_statement(0x16DF); @rax = 0x9 | 16 ;  while  (@rax == @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif (@r12 | $buffer ! @r12 | $buffer) { test_statement(0x1F13);  if (@rdx = @r9)  { test_statement(0x213); } elsif ((@r13) == (@r13)) { test_statement(0xBD0); }  /* This is a comment */ } elsif (@r12)0) { test_statement(0x247D);  while  (@r11 @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n3 ; 0n3) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 1 = 1) ; } else { test_statement(0x13A2); }
$error$
$end$
1267
 if (+5 + $ip ; @rbx << @r8 & @r13 << 0y1011 >> 0n2 >> +0x12)  { test_statement(0x25DA);  break; } elsif (@rax >> (@rsi) & 0x11 >> @rsp & 0n7($teb << @rbx >> @rax >> @rbx & +0n19 >> $buffer) { test_statement(0x4BE);  /* This is a not closed comment } else { test_statement(0x25B8);  break;  /* This is a not closed comment }
$error$
$end$
1268
 if ($teb + @r10 << $thread << $thread & @rdx >> @rbp >> 0x6 | @r10 ^ @r12 | @r13 >> 0y1 & @rdi & @rbx $teb + @r10 << $thread << $thread & @rdx >> @rbp >> 0x6 | @r10 ^ @r12 | @r13 >> 0y1 & @rdi & @rbx)  { test_statement(0x143A);  for (val = 10; @rbx & @r8 ^ ~@rbx ^ ~@rbp ; @rbx & @r8 ^ ~@rbx ^ ~@rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x946);  /* This is a comment */ }
$error$
$end$
1269
 if ($buffer << @rbx << 17 >> (@r11) << @r13 ^ $buffer >> @rax >> $teb == $buffer << @rbx << 17 >> (@r11) << @r13 ^ $buffer >> @rax >> $teb)  { test_statement(0x19AF); }
$error$
$end$
1270
 if (@rdi >> $proc << (@rbp) | @r12 << $ip ^ @rdx >> @r10 ^ @rsp ^ $teb ^ @rax | $proc >> $teb ^ @rdx ^ @r10 | @rbx & 0n16 ^ @r10 <= @rdi >> $proc << (@rbp) | @r12 << $ip ^ @rdx >> @r10 ^ @rsp ^ $teb ^ @rax | $proc >> $teb ^ @rdx ^ @r10 | @rbx & 0n16 ^ @r10)  { test_statement(0x1AA8); } elsif ($proc != $proc) { test_statement(0x269C);  while  (@r12 ^ (5) | @r13 >= @r12 ^ (5) | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1271
 if (0y10001 + @rbp << $proc >> ~$thread << @r13 | -@rbx << (@rsi) & @r12 >> 10 ^ 14 < $proc << @rax & @r12 << 0n18 ^ $ip << @rax >> $proc & @r13 & @rdi)  { test_statement(0x25CA); } elsif ($proc << @r8 >> @rbx >> @r8 & @r11 >> 0y10000 | -0xD >> @rdi & @r12 & @r8 <= $ip ^ $teb & $thread | @rbp & @rsp ^ @r13 ^ @r11 ^ @rsi) { test_statement(0x1DA0); } elsif ($buffer >> @rbp != @r10 ^ $buffer & @r11 ^ $ip) { test_statement(0x2519);  break; @rax = (@r13) | @r8 ;  /* This is a comment */  /* This is a not closed comment ;  break; } else { test_statement(0x8B);  This is a not opened comment */  // /* This is a comment  }
$error$
$end$
1272
 if (0n2 + @rsi << --@rsp >> (0y0) >> 0x12 >> $proc | $teb << $teb >> @rbp <= $ip << $thread << @r8 & 0y1001 >> $teb ^ 12 >> @r12 & @rbx & @rsi & $proc | @rdx >> @rbp >> ~$buffer & (@rdx) >> $buffer & +@r9 & @rdi ^ @rbx & @rax ^ $buffer ^ $ip)  { test_statement(0x20D); val = @r10 >> 0y1001 & @rsp ^ +-@r12 & -@r11 | $teb ^ 0n4 ;  while  (0n7 > @rdx | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  while  (@rsi(@rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif ($teb & @rbx ^ $buffer & 0x13 & @r8 ^ $ip | $thread >> @r10 ^ $teb & @rdi | -@rdi & @rsp < 0y1011 >> @r9 & @r9 >> @rbx & @rsp & ($ip) | 0n5 >> (+@rax) & @rsi ^ $ip ^ 0x12) { test_statement(0xAC3); ; ; } elsif (0n1 & @rbp & $ip == $thread) { test_statement(0xC7); }
$error$
$end$
1273
 if (@rbx + 0y1100 << 0y1010 >> 0y0 << @r11 & @r8 >> @r11 & -@r8 >> $ip & @r10 & $teb ^ @r13 << @rdi >> @rax | @rdx))@rdx >> @rsi >> 0n2 & @rsi << $proc)  { test_statement(0xC27); } elsif ($buffer << -@rsp >> @rsi ^ (0) ^ -$proc & @rsp ^ @rbx == @r11 << (@rdx) & @r8 & $thread | 0xD >> @rbx | 0xD) { test_statement(0x1ED2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx | 0y10010((0 ^ @rbx | @r13) ; } elsif (0n9 >< 0n9) { test_statement(0x9C4); } elsif (@r13 & @rsp ^ 0y1000 ^ $buffer | @r10 <= @r13 & @rsp ^ 0y1000 ^ $buffer | @r10) { test_statement(0xBC6);  /* This is a not closed comment  // /* This is a comment   while  (@r8 == $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (0y11 ! 0y11)  { test_statement(0xF08); }  /* This is a comment */ } else { test_statement(0xA1E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread ^ 0x6($thread | $proc | $teb) ; }
$error$
$end$
1274
 if (0y1101 >> @r8 >> 0n11 >> 12 ^ $buffer & $buffer >> $thread <= @rsp >> $proc << -@r8 >> 0n7 & 0y1000 << $proc & @rsp >> 0x10 & $teb ^ $proc << ~-@r9 ^ @rdx ^ @r12 & $teb)  { test_statement(0x26CA);  /* This is a comment */ } elsif (@r9 << -0x0 >> $ip >> $thread & 22 & $ip(@r9 << -0x0 >> $ip >> $thread & 22 & $ip) { test_statement(0x1F9F);  if (@r8 >< @rax ^ @rbp)  { test_statement(0x2F); } elsif (@rbp | @rsi((@rsi | @rax) { test_statement(0x725); } } elsif (@r9 ^ $teb = $proc & $thread ^ ($buffer)) { test_statement(0x226D);  /* This is a comment */ } elsif (@rsp & $teb ^ @r13 ^ -+@r13 == @rsp) { test_statement(0x1D24);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12(0x3) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y10011 > @rsp) ; }
$error$
$end$
1275
 if (@rbx + 15 << @r13 << @rbp & @rsi << 14 >> 23 >> @r13(@rdi << @r12 >> (@rsp) << $thread & @rsi >> 0xE >> 0y1110 & +@r12 >> @rbp & 0y11 & @r8)  { test_statement(0xD7E);  /* This is a not closed comment } else { test_statement(0x69A);  while  (4 ^ @rax | @rax > 4 ^ @rax | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1276
 if (-@rsp >> 0n9 << @rbp >> ~@r12 & @r9 >> $ip & 0y1010 & $thread >= (@r9) >> 12 >> @r8 >> @rbx & @r13 >> @rdx & +0n3 & @rdx ^ $proc ^ 0xA >> +$ip ^ $teb | @rax & 0y11 & $teb ^ @rdx)  { test_statement(0xA8B); }
$error$
$end$
1277
 if (@rsi + @rax ^ 6 ^ $ip >> $teb & 0x8 ^ @rbp & $ip | +$teb << @r8 & $thread >> 0n18 ^ $teb ^ $teb < @rsi + @rax ^ 6 ^ $ip >> $teb & 0x8 ^ @rbp & $ip | +$teb << @r8 & $thread >> 0n18 ^ $teb ^ $teb)  { test_statement(0x9B1);  This is a not opened comment */ }
$error$
$end$
1278
 if (@rbx >> @rax | (~-@rsi) >> ~@rdi = @r10 >> @rdi << @r8 & @r10 & @r13 & 0x5 & @rdi | -14 >> @rdx >> @rbx & $ip >> $ip & 0x7 & @rsp ^ @rbx & $ip ^ $ip ^ $thread ^ @r10 | @rsp)  { test_statement(0xD9D);  /* This is a comment */ } else { test_statement(0x26CC);  break; }
$error$
$end$
1279
 if (~$ip + +$proc << @rsi << $proc >> ~@rdx << @r9 >> @rdi | @r10 << $buffer & @rsp >> +0n17 & @rdi ^ @rax >> @rsp <= 10 + @r10 >> $buffer << @r11 >> $proc >> @rbx & @r10 << @rdi >> -1 >> 0n19 & $teb >> $thread & @rsi)  { test_statement(0x142); @rax = @r8 & $thread ; } elsif (@r11 << $proc @r11 << $proc) { test_statement(0x10A7); } elsif (@r8 >> -(0n7) ^ $proc ^ @r13 | $thread | @r8 | 14 ! @rdx | ~@r13 ^ ~@rbx) { test_statement(0xD9A);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip != 0y10000) ;  This is a not opened comment */ } elsif (23 ^ $ip ^ -@r10($ip & @r12 ^ $proc) { test_statement(0x143D);  This is a not opened comment */ } elsif (@r13 ^ ~$thread <= @r13 ^ ~$thread) { test_statement(0x1BCB); } else { test_statement(0x342);  /* This is a comment */  while  (@rax 0y10001)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rbp < @r9)  { test_statement(0xF36); } else { test_statement(0x188E); }  /* This is a comment */  if (0y110 > 0y110)  { test_statement(0x1CC4); } }
$error$
$end$
1280
 if (@rsi << @r11 << @rdx ! 10 << 4 << 0xF & @rdx << +@rdi >> 0y10 & $thread | 10 & 0n10 & 0x7 ^ @rdx | -@rdi >> @rbp & (0xC) & (-@r9) ^ -2 & (@rbp) ^ @rsp ^ @r9 | @r11)  { test_statement(0x375); } elsif (@r13 & 0y1 | $teb >> @rax & 0y10000 & @rax ^ @rbx & 14 | ~$ip & (@r12) | @rbx | $buffer | $ip >= $teb ^ @rax & @r9 & @rsp) { test_statement(0xCCA); } elsif ($proc >> +$thread & @rsi & $ip ^ -@r11 & @rax | $buffer & @rbp ^ $ip ; $proc >> +$thread & @rsi & $ip ^ -@r11 & @rax | $buffer & @rbp ^ $ip) { test_statement(0x17BA); } elsif (0n8 & @rdi ^ $teb(0n8 & @rdi ^ $teb) { test_statement(0x231D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi ; @rsi) ; } else { test_statement(0x1DF4); }
$error$
$end$
1281
 if ($buffer | @rax << +@r10 ^ ~@r11 >> -$buffer & @rsi ^ 0n6 | $ip >> @rbx ^ @rax & @r10 ^ @rax == @r10 + @rax << 0y1110 << $teb & @rsp >> $thread)  { test_statement(0x7A5); } elsif ($thread << @rdi >> @r12 >> @rdx ^ @r13 & $ip & @r9 ^ @rdx & +$thread ^ $teb | (@rsp) >> +@r10 ^ @r13((@rax >> $ip & 0x2 >> ~-@r11 ^ (@r10) >> @r9 & $buffer & @r11 | @rdi) { test_statement(0x17A1);  if (@r11 ^ @rdx <= $buffer | +$ip)  { test_statement(0x14DF); } }
$error$
$end$
1282
 if ((0xB) >> $teb << @rsi >> 0x8 >> @r11 & @rbx >> -0x12 & @rdi >> @r10 | @r11 << @rsp ^ $thread ^ 0y1000 ^ 23 ^ ~@r11 | $teb & @r12 ^ 12 ^ @r9 | @r8 & @rdi ^ ~@r10 ^ ~++@rsi | 0x8 | @rsi((@r9) >> @rax & 23 << @r8 >> 0n2 >> -@rdi & $proc)  { test_statement(0x1C2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 & $buffer ^ -@r8 ^ @rbp ! @r13 & $buffer ^ -@r8 ^ @rbp) ; } else { test_statement(0x1E39); }
$error$
$end$
1283
 if ($teb ^ @rsi >> $teb & @rax & @rsi | 0y0 << +22 & -@rdi >> 0x10 & @r9 & 17 ^ $thread >> @rsp | 4 >> @r13 >< 21 + @r8 >> @r12 << @r8 >> 0 >> @r11 | $thread >> @rax >> @rbp ^ @r12 & @r9 & @rsp)  { test_statement(0x14D3); } elsif (@rdx << $proc >> -$ip & $buffer >> @rax >= @r10 << $buffer >> $teb >> 17 & @r10 >> @rdx & $thread & $teb | ~0x1 >> -12 ^ $teb & @rsi | @rsp ^ @r13) { test_statement(0x968);  This is a not opened comment */ }
$error$
$end$
1284
 if (@r8 >> @r11 >> @r11 ^ @rsp >> $teb & @rbx & ~(@rdi) & @rdx | @r10 << @rax >> ($thread) | 0y0 >> @rdx & 0y10001 & 23 | $teb ^ +@r10 ^ @r9 | @rdi ^ @r9 ! @r11 & @rsp << @rdi >> @r9 >> $thread | ~@rdx ^ $buffer ^ -@rdi & ~@rdi ^ -0xB)  { test_statement(0x22A3);  break;  /* This is a not closed comment } else { test_statement(0xFC1); }
$error$
$end$
1285
 if (@r13 << @rbx > @rsp << @r12 << @r11 >> @rsi << 10 & 6 >> +$teb >> $teb & 0n15 >> $ip & @r12)  { test_statement(0x1B49); } elsif ($proc << 0y101 @r12 << @rsp & $teb >> @r8 ^ @r8 & $buffer & $teb ^ 0x11 ^ $buffer | $thread >> @rdx & 0x7 & @r8 ^ @rsp ^ @rdx | @rbp & (@rsp)) { test_statement(0x1E31);  if (@r10 ^ $proc != @r12 ^ $buffer)  { test_statement(0x212C); } elsif (@r12 != -@rsp | (@rbx)) { test_statement(0x1389); } elsif (6 != 0y1) { test_statement(0x1DD); } elsif (0n6(@rdx) { test_statement(0x554); } elsif (@r11 == @rsi) { test_statement(0xEFC); } else { test_statement(0x588); } } else { test_statement(0x144); }
$error$
$end$
1286
 if (@rdi >> @r8 << @r13 & @rax >> @rdi & @rbx & @r8 & @r11 ^ @r13 >> (@rbp) >> 0x0 | -@r9 ^ $thread ^ $thread & 0n19 ^ 0n13 ! @rdi >> @r8 << @r13 & @rax >> @rdi & @rbx & @r8 & @r11 ^ @r13 >> (@rbp) >> 0x0 | -@r9 ^ $thread ^ $thread & 0n19 ^ 0n13)  { test_statement(0x478);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@r8 & ~0x4 | @rdx | @rax | ~@rdx 0n10 & (@r11) ^ @r8 ^ @rax) ;  /* This is a not closed comment }
$error$
$end$
1287
 if (@r9 + +@r11 << ~0x5 << $teb & @rax << @rdx & @r11 >> 0x3 ^ @rdi >> @r12 >> @rbp & @rbp ^ 20 >> $buffer & 0xC & @rbx ^ @r10 ^ @r12 ^ @r11 <= @r9 + +@r11 << ~0x5 << $teb & @rax << @rdx & @r11 >> 0x3 ^ @rdi >> @r12 >> @rbp & @rbp ^ 20 >> $buffer & 0xC & @rbx ^ @r10 ^ @r12 ^ @r11)  { test_statement(0x4B2);  if (@rsi & 23 = @r10 & @r12 ^ 0n12 ^ @r11 | 0x11 | $teb | @rsp)  { test_statement(0x228D); } elsif ($buffer <> $buffer) { test_statement(0x26A1); }  break; } else { test_statement(0xC97);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer)0n10) ; }
$error$
$end$
1288
 if (@rdx << @rsi << 0n18 >> @r9 << @r10 >> 4 >> 0x6 ^ 0y110 << $proc >> @rsi >> @rax ^ @rdi >> $thread ^ @r12 ^ ~@rsp | (@r8) >> @r10 & -0y1 | @rdi & @rbp | $buffer & -@rdx > @rdx << @rsi << 0n18 >> @r9 << @r10 >> 4 >> 0x6 ^ 0y110 << $proc >> @rsi >> @rax ^ @rdi >> $thread ^ @r12 ^ ~@rsp | (@r8) >> @r10 & -0y1 | @rdi & @rbp | $buffer & -@rdx)  { test_statement(0x863); } else { test_statement(0x22F1); }
$error$
$end$
1289
 if (0x4 + @rbp << @r8 << $thread >> @r10 << @r11 & @r9 & @rsp & $teb < ~@rdi + $buffer << 0y1010 ^ @rsi ^ @rdx >> @rdx & @r12 & 0xB ^ @r9 & (+@rsi) ^ $buffer | @rbx | $buffer & @rdi & $ip | 0x12 ^ ~@r10)  { test_statement(0x39); } elsif (~@rsp))@r8 << -$proc ^ @rax >> @rax ^ 0xA ^ $teb) { test_statement(0xD4A); @rax = -@r13 | @rax ^ @rdi | @rbx ; } elsif (@rax ^ @rbp & 0y10000 ^ $ip ^ @rbp | -0y1 | @r13 ^ @r8 = $proc >> @rdx ^ 14 ^ @r10 ^ 0n18) { test_statement(0x1876);  /* This is a not closed comment  while  ((@r11) != ~@rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1290
 if (@r9 + $proc << @rsi & -0y10 & -@r8 | ~+@r11 << 22 & ~0n9 >> @rsi ^ @r13 & 0x12 & $teb | $ip & $buffer & @r10))$teb | 0x1 << @r12 >> @r13 >> $teb | 0xB >> @rdx)  { test_statement(0x115D); ; } else { test_statement(0x1247); }
$error$
$end$
1291
 if (0y110 + $buffer << ~@rdx << @r8 & @r12((0y110 + $buffer << ~@rdx << @r8 & @r12)  { test_statement(0x1B54); } else { test_statement(0x50); val = @r10 & +-@rsp | $thread | -~2 | 0y10010 ;  /* This is a not closed comment  /* This is a comment */ }
$error$
$end$
1292
 if (@rbp ; -15 << $buffer << @r12 | @rax >> @rsi >> 0x5 | @r10 >> $buffer)  { test_statement(0x1D92); } elsif ($buffer << $thread ^ @r12 & +$buffer ^ @r12 & 0y0 0y11 << $buffer | -10 >> $thread ^ @rsp ^ (-@rax) | @rbp & @r11 ^ @r12 | @rdx ^ $buffer) { test_statement(0x1679);  break;  while  ($ip | $teb = $ip | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi | $ip & 0x6 | @rdx ^ $proc | $thread = $buffer >> 0y1111 | @rdi & @r12 ^ 17) { test_statement(0x2026); } else { test_statement(0x1DA4); }
$error$
$end$
1293
 if (@rsp + @r13 & 11 << 0 >> $buffer >> @rsp & @r9 >> @r9(@r8 + (@r9) >> @rdx << 0x1 & 0n12 << $teb | @r10 << @r11 ^ @r9 | @r12 >> @rsi)  { test_statement(0x2235);  /* This is a not closed comment } elsif (0x11 >> 13 >> 0y1010 & 0y111 >> $proc < 0x11 >> 13 >> 0y1010 & 0y111 >> $proc) { test_statement(0x1BCA); } elsif (@r8 | 0y10001 & $teb ^ $proc <= @r8 | 0y10001 & $teb ^ $proc) { test_statement(0x1C); }
$error$
$end$
1294
 if (0xB << @rbx << @rdx & 0n19 << @r13 & 4 & @rax | 0x3 ^ @r11 ^ @r12 | 0y1110 | 0n12 ^ @rbp | @rsp >< 0xB << @rbx << @rdx & 0n19 << @r13 & 4 & @rax | 0x3 ^ @r11 ^ @r12 | 0y1110 | 0n12 ^ @rbp | @rsp)  { test_statement(0xFD0); } else { test_statement(0x44C);  if (~@r13 | 0y1111(0y110)  { test_statement(0x17CE); } else { test_statement(0x8BE); }  if (@rax)@rsp)  { test_statement(0x270E); } else { test_statement(0x4F2); } }
$error$
$end$
1295
 if ($buffer + $teb << @r8 ^ $ip | $teb << 0y11 >> @rdx & $ip ^ @r10 >> +10 & $buffer ; @rbx + @rsi << 0y11 << @r8 ^ @rsi << @r12 & $ip >> @rbp ^ 0x10 & $teb | @r12 >> (@r12) >> +@r13)  { test_statement(0x2461); } elsif (+-$ip ^ 3 != +-$ip ^ 3) { test_statement(0x19C);  for (val = 10; 11 ^ $ip | @r12 ! 11 ^ $ip | @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1353); }
$error$
$end$
1296
 if (($ip) + $proc << @r13 | @rdx >> @r8 >> $teb | $thread))$ip + (0y1010) & @rsi << @r9 >> $proc | @r8)  { test_statement(0x176A);  This is a not opened comment */  for (; @rdx | $teb | @rsp = $thread ^ @rbp | $teb | @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x21E3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi >= $teb) ;  /* This is a comment */ }
$error$
$end$
1297
 if (@rbx + $thread & @r12 != $thread + @r12 << @r10 >> $proc & 0y1101 << @rax >> 0n16 | 0y111 << @r10 >> @rbx >> $teb)  { test_statement(0x1B9B);  // /* This is a comment  } elsif (@rbx >> (@rbx) | $ip >> @rsi & @rsi & $thread != @rbx >> (@rbx) | $ip >> @rsi & @rsi & $thread) { test_statement(0x1FAF); } elsif ($thread ^ $thread ^ (@r11) >= 0y1110 >> 10 & @r11) { test_statement(0x1A8F); } else { test_statement(0x1B96); }
$error$
$end$
1298
 if (@rdi << @rsp << ($thread) >> $thread & @r9 & $proc >> 5 ^ @rsi ! @r11 << @r10 >> 0y110 << $thread & @rdx << @r13 >> $ip | @r11 << @rdx & @r9 & $proc & @r10)  { test_statement(0x18DB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ^ @rsi ^ $teb >< $teb & 0n2 ^ @r9 | @rsi) ;  for (val = 0n18 ^ 17 | $ip | 22; 11 | @r12 = ~$teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ((23) & $thread & $ip & @r8 ^ @r10 >> +@r10 | $proc >> 20 ^ @rbx | @rbx & +@r13 <> (23) & $thread & $ip & @r8 ^ @r10 >> +@r10 | $proc >> 20 ^ @rbx | @rbx & +@r13) { test_statement(0x7C8); ;  break;  // /* This is a comment  } elsif (@rax <> 5 & $buffer & @rbp | ~@rsi | +@rax ^ $proc | @r13 | $ip) { test_statement(0xD95); } else { test_statement(0x43F); }
$error$
$end$
1299
 if (0y10010 << @r11 >> @r8 << @r13 >> -$buffer & @r11 << @r8 & @rsi >> @r13 & ~@r8 & @rdi))+$thread << $buffer & @rdx >> $proc)  { test_statement(0x220E); } elsif (@rdi >= @r13 >> @r10 & @r10 & 0y1100) { test_statement(0x110E); ; } elsif (+@rsp != +@rsp) { test_statement(0x1A4D); } elsif (0x2 & @r12 ^ $ip ^ @rdx | $ip | 0y0((@r10 ^ $teb ^ +(+@r8)) { test_statement(0xD2C);  while  (@r9 >< @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   break; } elsif (+@r12 ^ @r11 | $teb | @rdx((@r12) { test_statement(0xE2B);  // /* This is a comment   break;  /* This is a comment */ } elsif (0x6 != 0x6) { test_statement(0x6A2); } elsif (@r11 == @rbx) { test_statement(0x1FD7); ; }
$error$
$end$
1300
 if (0y10010 << @rdi & @rbp < 0y10010 << @rdi & @rbp)  { test_statement(0xD86); } elsif (@rdi ^ $teb >> @r8 & @rbx | @rdx <= @rdi << $buffer >> -0x11 >> (@r11) & @rax >> @rdi ^ @r11 & 0x9 & (@rdx) | ($teb) >> 13 & @r11 ^ $thread & ~0y1010 ^ @rbp ^ @r9 | $proc ^ @r10 ^ $teb) { test_statement(0x53A); @rax = ~@r13 | 0y1000 ;  This is a not opened comment */  break; }
$error$
$end$
1301
 if (@rdi >> 3 & -@r11 >> (@r8) ^ @rdi << @r13 >> @r11 >> @r10 & ~@rsi >> $buffer ^ 0n8 >> @r9 ^ $thread & @rbp ^ @r8 | @rsp << (~0x0) & @r12 & 0x8 & 0xD)@r10 & @r12 >> @rsi)  { test_statement(0x1BE7);  while  ($ip & 0n15 ^ 0n11 ^ $thread @rsi | $ip ^ @rdx | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1A13); }
$error$
$end$
1302
 if (@r8 + $buffer ^ @rsp >> $thread ^ @r12 >> 0n15 | ~$ip << @rdx >> @rdx & @r13 ^ @rdx & @r10 | @rsp >> 0n17 & @rbx ^ $teb ^ $buffer ^ $teb | $buffer & 0y1101 ^ +($buffer) = +@r11 + $proc << $teb << @rdi >> 16 >> $buffer & @r12 << $teb >> +$ip & @rbx >> 0y1011)  { test_statement(0x2FB);  // /* This is a comment   // /* This is a comment  } else { test_statement(0xE18); ; }
$error$
$end$
1303
 if (@rsp + +0xD >> $proc << @rdi >> @r11 >> 0n6 & +$teb >> 12 ^ $buffer & @rbx ^ -@rbx & @r13 & @rsi ^ @rbp & 0y101 != @rsp + +0xD >> $proc << @rdi >> @r11 >> 0n6 & +$teb >> 12 ^ $buffer & @rbx ^ -@rbx & @r13 & @rsi ^ @rbp & 0y101)  { test_statement(0x2614);  if (@r8 > @r8)  { test_statement(0xC20); } elsif (0n15 | @rsi >= 0n15 | @rsi) { test_statement(0x741); } else { test_statement(0x222D); }  // /* This is a comment   for (val = 10; $buffer < 14;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1BA3); }
$error$
$end$
1304
 if (@r8 >> $buffer >> $thread >> @rsp & @r10 << $thread & @rbp | 0y111 << (-@rbp) >< @r8 >> $buffer >> $thread >> @rsp & @r10 << $thread & @rbp | 0y111 << (-@rbp))  { test_statement(0x13A2); }
$error$
$end$
1305
 if ($teb & @rbp << 1 >> $proc & 0xE >> ($proc) & @rdi | 0y1000 >> @r9 >> @rsp & @r11 >> $buffer ^ @rdx >> @r13 & @rbp & @rdi ^ ~-@r9 & @rsi ^ @rbp | (0n11) >> @rdx ^ $thread & +@r8 ^ @r13 | @r12 & $proc ^ -0y100 ^ @rdi | -0n1 ^ $teb != @rsi << $ip ^ $ip & -$ip >> @rax | @rsp << $teb & @rbp)  { test_statement(0x14AF);  if ($thread(($teb & @rbx)  { test_statement(0xAA5); } elsif (@r8 ^ $teb((@rax ^ @rsi | @rax | @rsi) { test_statement(0x20F7); }  while  (-@r10 ^ $thread | $proc | ~(@r13) ! ~@r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  /* This is a comment */ } elsif ($ip << ~$teb <> @rdx << ~@rbx >> $buffer & @rsi >> @rbx) { test_statement(0x145C); @rax = @r11 & ($thread) ^ $thread | @rax ^ -(0x1) | 0y1001 ; } elsif (@r11 | $thread & @rbx ^ @rbp ! @r11 >> $ip & ((@rsi)) & +@r10 | @rbx & 20 ^ @rbp ^ @r11 | $ip) { test_statement(0x22E2);  for (val = 10; 3 | @rdi ; 3 | @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y1111 & 21 >< ~@rbp ^ @rbx | 15 ^ @r13 | ~@r11) { test_statement(0xB75); } elsif (@r12 ^ @rsp == @r12 ^ @rsp) { test_statement(0x1D78);  for (val = 10; @rdx ! @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0xB | @rsi < @r12 | @r10) { test_statement(0xDA9); }
$error$
$end$
1306
 if (@rax + @rsi >> +~@rsp & $teb << $thread >> @r12 <= @r8 + @rdi << @rbx >> @rbp << $proc >> $proc >> 0n9 ^ 0y1101 >> @r8 & @rdx >> 0n14)  { test_statement(0x1A69); } elsif (@rax & 0 >> $ip ^ $teb >> $buffer | $teb >> @r10 & ~@rbp & 17 | +@r8 | @rsp | $buffer | +(@rbx) ; @r12 >> @rsi >> @rsp & @rdx) { test_statement(0x189C); }
$error$
$end$
1307
 if (@rbx >> ($thread) << @rbp >> @rbp & +--@rdi << 5 & $buffer & -@rbx & @rbp | 11 & 3 >> $buffer ^ 16 >> +@rax))@rbx >> ($thread) << @rbp >> @rbp & +--@rdi << 5 & $buffer & -@rbx & @rbp | 11 & 3 >> $buffer ^ 16 >> +@rax)  { test_statement(0x29F);  if ($thread ^ 0n9 <= ~0y1001 ^ @rsi)  { test_statement(0xFA8); } } elsif ($buffer << @r13 >> ~@rbx & @r11 >> @r13 & 0n2 & @rsp | 0y10010 <= @rbp << @rax & @r8 >> 5 ^ @r13 | @r13 & 0y1001 & @r12 ^ +$thread ^ @r10) { test_statement(0x243C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0xA ^ @rax | @rsp | 0xA ! 0x10) ; } elsif ($proc >> $teb ^ @rdi & @r10 ^ @r11 | ~@r9 ^ @rax <> $proc >> $teb ^ @rdi & @r10 ^ @r11 | ~@r9 ^ @rax) { test_statement(0x1CC8); } else { test_statement(0x21BA); }
$error$
$end$
1308
 if (@rbp + @rax & $buffer << @r8 >> @rax >> @rsp ^ @rbp << @rsi ^ +@rax & @rdi & $ip ^ 20 & $proc | 0xC >> 0x11 >> 0n16)@rsi + 0n5 ^ 0x13 << @rsi)  { test_statement(0x1FB2);  /* This is a not closed comment } elsif (@r10 ^ (@r11) >> 16 ^ 0y1110 ^ @rdx = @r10 ^ (@r11) >> 16 ^ 0y1110 ^ @rdx) { test_statement(0x2C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ^ (@r12) | @r10 | @rbx ; @rbp ^ @rax | @rbx | 0x5) ; @rax = ($teb) ^ (0n12) ; }
$error$
$end$
1309
 if ($ip & $ip & 0y10010 & +-+$thread ^ @rbx << 0y1001 >> @rsp | @rdx << @rsp & $buffer >> $buffer(@r10 + @rdx >> 0n3 << +@rbx ^ $ip >> $buffer >> @r12 ^ $buffer)  { test_statement(0xD5A); }
$error$
$end$
1310
 if ((@rsp) << @r11 << @rsp >> +0x10 << @r12 >> +$teb | @rbp << @rsp >> @rbx >> @r10 ^ -@r8 >> ~@r13 & -$proc ^ 0n16 ^ @rdx | @r13 >> $buffer & ~@r11((0y1111 >> @rdx << @rax >> @r10 & $proc)  { test_statement(0x1233);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 ^ -~@rax | @rbx | $thread != $teb ^ @rbp) ;  if (2 < 2)  { test_statement(0x29C); } } elsif (~@rbx >> @rbp & @r11 >> @rax | $thread >> $ip ^ $teb & $proc | @rbp ^ @r11 ^ @rbx >< ~@rbx >> @rbp & @r11 >> @rax | $thread >> $ip ^ $teb & $proc | @rbp ^ @r11 ^ @rbx) { test_statement(0x37D); } elsif (@rdi & @rbp & ~$thread == +@r9 >> @r9 & @r9 & @rsp ^ @rdx ^ $proc ^ @rbp) { test_statement(0x46C);  // /* This is a comment  } else { test_statement(0x208B); }
$error$
$end$
1311
 if ($teb << @rbp >> @r13 << @rdx >> $teb ^ @rbx << 0n17 & @rax & @rbp | $buffer & @rsp >> @rdx ^ @r13 >> +0y0 ^ $proc ^ 0n14 ^ $proc($ip + @rsp ^ @r13 >> 0x13 >> @rax & -@r12 ^ @r8 >> 0y1110 & @rsp ^ @rbx & @rsi ^ @r9 ^ @r11)  { test_statement(0x22E); } elsif ($thread >> @rbp | @r8 >> 0xE & -@rsp & @r11 != @r10 ^ @rdi & @rbx | (-@r11) >> @rsi & 11 ^ 0xF & @rax ^ @r13) { test_statement(0x2539); } else { test_statement(0x1BFD); }
$error$
$end$
1312
 if (+2 + @rdi << @r13 & @r11 << +@r11 >> @r10 >> @r12 = +2 + @rdi << @r13 & @r11 << +@r11 >> @r10 >> @r12)  { test_statement(0x750);  if (@r10 & 0y1 ^ $thread ^ @rdx | @rbp ^ 0n14 | (@rbx) ! @rbp ^ @rsp ^ 0n2)  { test_statement(0x1D4D); } elsif ($proc | $proc | @rdi(@rdi) { test_statement(0x1CB1); } else { test_statement(0xB1A); } } else { test_statement(0x2643); }
$error$
$end$
1313
 if (++@r8 & +++5 >> 0y101 & $proc & 11 & $teb | $buffer & @r11 >> @r13 ^ (@rdi) | @r13 & @rsp & $ip | @rdx ^ 0y1100 ^ $ip))++@r8 & +++5 >> 0y101 & $proc & 11 & $teb | $buffer & @r11 >> @r13 ^ (@rdi) | @r13 & @rsp & $ip | @rdx ^ 0y1100 ^ $ip)  { test_statement(0x1AA3);  /* This is a comment */  // /* This is a comment   if (20 | 0n14 <= 20 | 0n14)  { test_statement(0x3EF); } else { test_statement(0x4AA); } } elsif (@rdi << 0n11 >> @r8 >> @rsp == @rdi << 0n11 >> @r8 >> @rsp) { test_statement(0x2062); val = +@rsi ^ $buffer ^ @r8 ; } else { test_statement(0xABF); }
$error$
$end$
1314
 if (0x1 + @rax << ~@r8 << $buffer | $ip ^ ~@r9 >> @rax ^ @rax & @r12)0y10011 + @r11 >> ~$proc << @rsi | $teb & $buffer >> ($buffer))  { test_statement(0xFFB); } else { test_statement(0x1E25); }
$error$
$end$
1315
 if (@rdi + @r13 << @r13 << @rsp & ~@r11 & @r11 ^ 0y111 ^ @rsi >> +$teb & -@rdx ^ @r9 ^ @rbp ! (0y10010) << @r12 << @r10 ^ 22 & @r8 >> $thread)  { test_statement(0x1224);  /* This is a comment */  for (@rax = $proc | @rbp; 0n10 ^ 0x13 <= (~@r10) ^ @rdx | 12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  /* This is a comment */ }
$error$
$end$
1316
 if (@rsi + @rax & @rsi >> @rax >> @rbp & $teb >> $thread & @r10 & @rdi ^ 0n19 & @rbx & @rbx)@rsi + @rax & @rsi >> @rax >> @rbp & $teb >> $thread & @r10 & @rdi ^ 0n19 & @rbx & @rbx)  { test_statement(0x527); } elsif (@r13 >> 0n12 >> @r11 ^ (@rdi) & @rdi & @rax ^ @r12 & 23 != @rsi & (-~@r11) >> -$buffer ^ @r10 >> 16) { test_statement(0x1DB0); @rax = 0n4 & @rbp ^ @rbx ^ @r11 ; } else { test_statement(0xB4A); }
$error$
$end$
1317
 if ($buffer >> +-0n13 << @r12 & 21 << 1 >> ~@r13 ; $buffer >> +-0n13 << @r12 & 21 << 1 >> ~@r13)  { test_statement(0x8A2); } elsif (@rax ^ @rdx >> @rbp ^ @r11 & @rdx ^ 0n9 ^ @r13 > @rax ^ @rdx >> @rbp ^ @r11 & @rdx ^ 0n9 ^ @r13) { test_statement(0x166D);  This is a not opened comment */ } elsif (@rax & 0y1001 & 0n3 | @r10 ^ 0x13 | $buffer ^ $ip <> @rax & 0y1001 & 0n3 | @r10 ^ 0x13 | $buffer ^ $ip) { test_statement(0xF28); }
$error$
$end$
1318
 if (@r10 + @r10 == @r10 + @r10)  { test_statement(0xB24); } elsif (@r12 ^ @rax & $proc ^ @r13 ^ @r9 ^ 0y1111 ~~+@rbp << @rbx >> @rbx & @r12 ^ 0x2 & @rbp ^ @rsp & (@rbx) | ~$ip >> @rdi & 0y1101 & (@rdi) ^ 0x7 | @rsp & $buffer ^ @r12 ^ @r13) { test_statement(0x2025); }
$error$
$end$
1319
 if (@r10 >> @rdi >> ($ip) | @rbp << @rdi | $thread | +@rax ^ @rbx | $teb ^ @rsi))@r10 >> @rdi >> ($ip) | @rbp << @rdi | $thread | +@rax ^ @rbx | $teb ^ @rsi)  { test_statement(0xA79);  /* This is a not closed comment  if (~$ip ^ $buffer | ((@rbp)) >< $teb)  { test_statement(0x594); } }
$error$
$end$
1320
 if (@rsi + @rdi << $thread >> $ip ^ @r8 & @r13 >> @rbp ^ @r10 >> @r11 ! @rsi + @rdi << $thread >> $ip ^ @r8 & @r13 >> @rbp ^ @r10 >> @r11)  { test_statement(0x1EA7);  This is a not opened comment */  /* This is a not closed comment  while  ((@r12) < +@r10 | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1321
 if (~@r11 << @r11 ^ @r11 >> $proc ^ $ip & $proc & ~@r12 ^ (0y101) & @rsp ^ @r13 ^ @r12 | 23 << @rdi >> @rbp >> $proc & @r10 & 5 & 21 | $ip == 0x4 + @r9 >> 0y111 >> $buffer & ~0xF >> @rbx & $proc >> @r11 & @rdi & @rdx | $thread & 2 & @rdx ^ @r10 >> @r12)  { test_statement(0x2098);  if ($ip ^ @r9 ^ @r11 | @rdi ^ @rax | (@r9) | 0y10011 < @rdi | $ip ^ @r8)  { test_statement(0xF80); } elsif (+@r10 ^ @rbp((@r9 ^ $buffer) { test_statement(0x11FA); } else { test_statement(0xC6D); }  while  ($teb == $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rax | $teb != @r13 | @rbx)  { test_statement(0x146); } elsif ($thread >< $thread) { test_statement(0x420); } elsif (@rdx)@rdx) { test_statement(0xA51); } elsif (@r10 < @r10) { test_statement(0xE87); } else { test_statement(0x1600); } val = $proc | $ip ; } else { test_statement(0x10AE);  if (@rbp | @rax | @rsi <= 0y1100 ^ $ip)  { test_statement(0x94D); } @rax = @r8 | 0y100 ;  while  (@r11 < @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  break; ; }
$error$
$end$
1322
 if ($buffer << @r12 << @rbp >> @rsi & @r10 << +@rax >> +@rsi & @rbp & ~13 & @rdx >= $ip << (@rbx) << 13 & @r8 >> @r9 & @r10 >> @rbp ^ 14 << @rdi >> 0n12 >> $thread ^ @rbx >> -@r12 & $ip & @rbp)  { test_statement(0x1E4E); } elsif ((@r9) << $proc >> @rbx & $ip >> @rdi & @r10 ^ @r8 <= @rdi | @rdi ^ $thread | @r11 ^ (@r11) ^ $buffer | (+@rdx)) { test_statement(0x13B2);  /* This is a comment */  /* This is a not closed comment } else { test_statement(0x2040);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@r10 ^ +0x2 | @r12 ! -@rax | @rax) ; }
$error$
$end$
1323
 if (@r11 + @rbx << @rax << @r12 | @rsi >> 0y110 >> 21 ^ @rsi >> 6 ^ @r11 & 0y1 ^ 0x13 | $thread & ~@rsi & @r9 ^ $thread ^ @r12 ^ @rbx | @r9 ^ $buffer != @r8 + 0y1101 & @r13 >> $teb & @r10 & +@rdx | @rsp << @r10 | $teb ^ $buffer ^ @rbx ^ $ip | @rbp & 0y11 ^ 10)  { test_statement(0x1D3A); } elsif (@rsp & 12 & 0x11 & 14 ^ ~$teb & @rdx & @r11 ^ $teb & $proc ^ @rbx ^ @rax ; $teb >> -@rbx >> $buffer) { test_statement(0x6D7); } elsif (@r10 >> @r8 ^ @rbx ^ @rdi ^ $teb | @rdi & +@rbx ^ +@rdi((@r10 >> @r8 ^ @rbx ^ @rdi ^ $teb | @rdi & +@rbx ^ +@rdi) { test_statement(0x6D4);  // /* This is a comment   /* This is a not closed comment @rax = @r12 ; } elsif (@rsp & +0xD ^ @r13((@r12 ^ @rdx ^ @rdx) { test_statement(0x221);  This is a not opened comment */ } elsif ($ip >= $ip) { test_statement(0x3A5); } elsif (@r13(17 | (@r11)) { test_statement(0x1F56);  break; } elsif ($ip((@r13) { test_statement(0x968);  /* This is a not closed comment } elsif (@rax(0n0) { test_statement(0x2503); } else { test_statement(0x93F); }
$error$
$end$
1324
 if (@r9 + @r10 >> @rsi >> @r11 >> ~@r11 & @rsi >> $thread ^ $proc << @rdi == @r11 << @rbx & @rsi << 17 >> 0n6 >> @rbp & @rax >> ~+0xC & $thread ^ +@rbx << 0n3 & @rdi ^ @r13 ^ 0x0 & @rdx ^ @r9 ^ @rdx)  { test_statement(0xB75); } elsif (@r13 & @r10 >> @rsp ^ $ip & $buffer ^ ($ip) & @rbp ^ 0x3 ^ @r11 > @r13 & @r10 >> @rsp ^ $ip & $buffer ^ ($ip) & @rbp ^ 0x3 ^ @r11) { test_statement(0x47C);  // /* This is a comment  } else { test_statement(0x2702); @rax = $proc ^ @rdi | -$thread | @r11 | @rsi ; ;  This is a not opened comment */ }
$error$
$end$
1325
 if (@rax >> $proc >> 0xA >> $proc & @r13 & @r11 >> @r11 ^ @rbx << 15 ^ +@rbx & @rdi & @r11 ^ @rbx & 0n8 | @r12 ! @rax >> $proc >> 0xA >> $proc & @r13 & @r11 >> @r11 ^ @rbx << 15 ^ +@rbx & @rdi & @r11 ^ @rbx & 0n8 | @r12)  { test_statement(0x25DF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc & @r9 >= -@rdx & $ip ^ @rdx | @rdx ^ @r12 | @rdx) ; }
$error$
$end$
1326
 if (@r11 + @r12 << @rdx << 0xF >= @rsp + $thread << $thread >> $ip >> @r13 ^ 0x2 & 7 & $teb & @r11)  { test_statement(0xB80); } else { test_statement(0x2283);  /* This is a comment */ }
$error$
$end$
1327
 if (--@rsp + 0y11 >> 0x0 << @r11 >> -$ip | @rax << @r9 >> @rbx & @r13 >> @rsp ^ @rbp ^ $buffer(-~@r11 << $proc ^ $thread << $buffer >> @rdx >> $teb ^ @rsp)  { test_statement(0x1233); }
$error$
$end$
1328
 if ($proc + @rsi << $thread | @rsi($buffer + @rax << -$teb << @r9 | (@rbp) << -$teb & ~@rax >> @rdx & $thread ^ $thread & @rbp & $proc ^ @r12)  { test_statement(0x2560);  break; }
$error$
$end$
1329
 if (-~$proc >> -@r13 & @r9 & $buffer & (@r9) ^ -@rbp >> @r9 ^ @rax >> 0x8 | @rsi << @r12 & @rsi >> @r8 ^ @rsi & @rdi & $thread | @r12 & @r13 == -~$proc >> -@r13 & @r9 & $buffer & (@r9) ^ -@rbp >> @r9 ^ @rax >> 0x8 | @rsi << @r12 & @rsi >> @r8 ^ @rsi & @rdi & $thread | @r12 & @r13)  { test_statement(0xCE4);  if (@rbx ^ 0x8 | $proc ; @rbx ^ 0x8 | $proc)  { test_statement(0x16C6); } elsif (-@r12 != $proc ^ @r12 | 0n6 | (0y1000)) { test_statement(0x1F4A); } elsif (@rsi | $ip < @rsi | $ip) { test_statement(0x19AE); } elsif ($proc $proc) { test_statement(0x21F9); } elsif ((@r8) == (@r8)) { test_statement(0xD1A); } else { test_statement(0x114); } } elsif ($thread << @rax & $teb >> @rdi ^ 0x1 >> 0y10001 & @rbp & 0y10011 | 0x0 | -@r9 ^ @rax ^ @rax | @r12 | 3 | $teb)$thread << @rax & $teb >> @rdi ^ 0x1 >> 0y10001 & @rbp & 0y10011 | 0x0 | -@r9 ^ @rax ^ @rax | @r12 | 3 | $teb) { test_statement(0x10B0); } elsif (@rbx >> @r8 ^ @rdx > @rbx >> @r8 ^ @rdx) { test_statement(0x1E7C);  for (val = 10; @rdi | ((@rbp)) = $ip | @r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rsi | -@r9 ;  for (val = 10; $teb $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1330
 if (@r12 << $ip >> -@rsp > @rdi + $thread >> $ip << ~$ip & @r13 << @r12 >> @r8 ^ ~@rbp ^ 0n1)  { test_statement(0x23CF);  /* This is a comment */ ; }
$error$
$end$
1331
 if (20 << @rsi << (@r11) & 0y10 ^ 0n1 ^ @r12 >> @r8 & @rbx ^ $ip ^ @rax != 0y10011 ^ @r9 << @r12 >> @r13 >> @rax & @rbp | 0y10 << @rax & @r9 & $buffer)  { test_statement(0x2275); }
$error$
$end$
1332
 if ($buffer << $ip << @rdi >> 15 << $buffer >> $ip & 12 << @rax & @r8 >> $thread & @rbx & -$teb = $buffer << $ip << @rdi >> 15 << $buffer >> $ip & 12 << @rax & @r8 >> $thread & @rbx & -$teb)  { test_statement(0x16A4); ;  break;  /* This is a comment */ } else { test_statement(0x70D);  while  (@rbx ^ @r8 | (@rdx) | +~(@rsi) @rsi | (@r8))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1333
 if (@r9 + 11 ^ @rdx << 0y110 | @r12 > @r9 + 11 ^ @rdx << 0y110 | @r12)  { test_statement(0x92E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 & ~@rsi ^ @r8 ^ @rsp != @r9 & ~@rsi ^ @r8 ^ @rsp) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n18 ^ @rsi ! 0n18 ^ @rsi) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | $buffer >= -@rbp | (@rsi)) ; } else { test_statement(0x1E25); }
$error$
$end$
1334
 if (0x4 >> ~@rsi & @rdi << $buffer | @r10 & 0n18 & @r9 & $thread ^ $proc >> 16 ^ @r9 & @r12 ^ 0n17 ^ @r13 | @rdx ^ @r11 ^ $teb <= $teb + ~@rdx << @rbp << @r11 ^ @r9 << @rbp >> @r12 & $proc & 0n14 & (0n12) ^ $buffer >> (@r11) & (@r12) & 0y1 ^ 0x2 & @r8 ^ @rax)  { test_statement(0x1746);  for (val = 10; $ip & (@rax) | $teb ^ @r13 | +@rbx(($ip & (@rax) | $teb ^ @r13 | +@rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($teb | @r13 | (0y10001)(@rbx ^ $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1912);  for (val = 10; @rax | @r11 | -@rax != $ip ^ 14 | @rdx | @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  This is a not opened comment */ }
$error$
$end$
1335
 if (@rax + @r11 | $thread >> @r12(@rdx + 0xB >> @rsi >> @rdi >> 0n13 & $ip << @rax & @rax >> $thread ^ @r12 << 0n13 & 0x10 >> 0x8 ^ @r13 >> +11 & @rax & @rdi)  { test_statement(0x9B2); }
$error$
$end$
1336
 if (@rbx + $proc << ($proc) >> 0n7 >> 15 >> @r9 | @rdx >> @rbx ^ @r10 >> @rbp & $proc & 0x0 ^ 0xA & @rsp = @rdi + @r8 | 0n6)  { test_statement(0xD8C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip ^ @r12 = @rdi | (@rdx) ^ @rax | @rsp) ; } elsif (@r11 << $ip >> $thread >> $ip ^ @r11 >> @rbx & @r8 ^ @rsp & $buffer)@r10 ^ $buffer >> @rsp & -$proc & @r9) { test_statement(0xCE6);  break; } elsif (@r9 >= @r13 >> (@r13) & @r13 & @r11) { test_statement(0xE57);  for (@rax = ~$ip; @rdi | @rdx <= @r12 | @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x81E); }
$error$
$end$
1337
 if (@rax ^ (@rsi) >> @rsp ^ ~$buffer >> @rbp & @rdx & @r13 | $ip ^ @rdi ^ $thread ^ $proc(@rax ^ (@rsi) >> @rsp ^ ~$buffer >> @rbp & @rdx & @r13 | $ip ^ @rdi ^ $thread ^ $proc)  { test_statement(0x96A); } else { test_statement(0xFA6); }
$error$
$end$
1338
 if (0n12 << ~12 << (+@rax) >> @rsi << $teb >> 0y1110 >> $buffer ^ @rsi << @rdi & 22 ^ +@rbp >> @rbx & @rbx & 0n10 ^ @rbp | 16 ^ $ip ^ $teb & @r9 ^ $thread | @rdx & ~@r8 ^ +0n1 ^ @rdi | $proc | @r12)0n12 << ~12 << (+@rax) >> @rsi << $teb >> 0y1110 >> $buffer ^ @rsi << @rdi & 22 ^ +@rbp >> @rbx & @rbx & 0n10 ^ @rbp | 16 ^ $ip ^ $teb & @r9 ^ $thread | @rdx & ~@r8 ^ +0n1 ^ @rdi | $proc | @r12)  { test_statement(0xBF3); } elsif (+$buffer & @rsi & +20 & 0x6 ^ @rbp >> @rdx & @r9))+$buffer & @rsi & +20 & 0x6 ^ @rbp >> @rdx & @r9) { test_statement(0xB14); }
$error$
$end$
1339
 if (@rdi + @r11 << @r12 << @rsi = -0n7 + @r8 << @rbx << @rax | +17 << @rax & @rdi & @rdx & +$thread ^ +$ip ^ @r13 | @r8 >> $thread ^ 0n7 ^ $buffer ^ 0x13 | 4 | 0n6 ^ 12)  { test_statement(0x85F);  for (@rax = @r10 & $proc; +@r9 & $ip +@r9 & $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = @rax ^ @rdi; @r9 ^ @r9 | @r10 | @rbx == 17 | $buffer | 0x1;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x17EA); }
$error$
$end$
1340
 if ($teb + 0n17 & $thread << @r8 ^ 0n15 << @r8 >> @rsi >> @rdi & @rsp >> (@rbp) & @rbx & @rdx ! $thread >> @r13 << 4 >> ~0n11 & 3 << @r11 >> $ip >> @r13)  { test_statement(0x22C5);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax & @rdx >= @rsi & $proc ^ @r8) ;  break;  for (; @r13 | 0y10001 <> @r13 | 0y10001;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rdx <= @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } else { test_statement(0x1962); }
$error$
$end$
1341
 if ($thread + 2 << ~@r13 >> @r13 << @rax & 0y10000 & @rsp & @rsi ^ 0y111 << +@rsp | ~@r11 << $proc & $buffer >> @rsp & (@r13) & @rax | @r12 >> @rdx & @r8 < $thread + 2 << ~@r13 >> @r13 << @rax & 0y10000 & @rsp & @rsi ^ 0y111 << +@rsp | ~@r11 << $proc & $buffer >> @rsp & (@r13) & @rax | @r12 >> @rdx & @r8)  { test_statement(0x17BE); ; ;  for (val = 10; @r13 | 16 == @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x159A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread ^ @r10 @rbx) ; }
$error$
$end$
1342
 if (@rbx << $proc >> (@rsi) & -@rdx << @rsi >> ~@r9 ^ @rsp & @rbp >> @r10 & +0x7 | @rsp << 0y100 >> @rbx & --@r12 ^ @rbp ^ $thread ^ @r9 ^ 0xC | @rdi >> -@rsi $thread + $proc << @rsi)  { test_statement(0x1A37); } else { test_statement(0x187E); }
$error$
$end$
1343
 if (0y10000 + @rbx << ~@rdx << @r8 ^ (3) << @rax >> @rbp ^ @r10 >> @r13 ^ @rbp & 0n7 @rdi + -$teb << 0y100 << @r11)  { test_statement(0x1742);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +~+@rsi | @r10 >< $proc | $ip | @r9) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer | (@r12) 2) ; @rax = @rbp | @rax ; } elsif (16 >> @r10 & @rbp & 0n6 ^ +@r13 >> +@rbp & $thread ^ ($proc) & (0n5) | $buffer >> @r11 & @rbx | @r10 & $thread ^ @r12 <> @rbp) { test_statement(0xDA6); } elsif (0y1 >> @rdx & @rax & 0y1001 ; 0x11 & @r12 & @r9 | @rax ^ @r13) { test_statement(0x18B1);  This is a not opened comment */ } elsif (@rax & @rax @r12 & @r9 ^ @rsp ^ -(0x13) | $buffer ^ 0n4 | $proc) { test_statement(0xB65); }
$error$
$end$
1344
 if ($buffer + $ip | @r8 << @r8 & (@rax) >> @r13 & +@rbx ^ @r9 >> @r9 & 0x2 & @r9 | $ip >> $proc & @rdx ^ @rsp >< $buffer + $ip | @r8 << @r8 & (@rax) >> @r13 & +@rbx ^ @r9 >> @r9 & 0x2 & @r9 | $ip >> $proc & @rdx ^ @rsp)  { test_statement(0x8FE); }
$error$
$end$
1345
 if (@rbx + @rdx & $ip >> ($thread) | @r8 << ~$thread >> @r12 >> @rsp & $teb ^ 0n1 ^ 0n18 & 0x5 | ~@rdx >> @r9))0x10 << +7 << +$ip >> @r12 >> @r11 >> @rdi ^ @rsi << @r9 >> @rbx & 0xC >> -@rdi & @r12)  { test_statement(0x20E3); }
$error$
$end$
1346
 if (@rsi >> @r12 << @r11 >> @rax >> $ip & @rsp << $buffer & @r9 >> $proc | $ip >> @rax))@rsi >> @r12 << @r11 >> @rax >> $ip & @rsp << $buffer & @r9 >> $proc | $ip >> @rax)  { test_statement(0xDAD); } elsif (@rdx << @r11 & $thread ^ @rbx >> 0n18 ^ $proc | $proc & @rsi & @r13 | @r12 & ~@rsi ^ @rbp ^ 16 | 0n9 ^ -$buffer | @r10 | 0x2))@rdx << @r11 & $thread ^ @rbx >> 0n18 ^ $proc | $proc & @rsi & @r13 | @r12 & ~@rsi ^ @rbp ^ 16 | 0n9 ^ -$buffer | @r10 | 0x2) { test_statement(0x22D7); }
$error$
$end$
1347
 if (-@rsi << @rbp ^ 0n10 & @rdx >> @r10 & $thread < -$buffer + 0n6 << +-@r8 << $thread >> -@r13 << @rdx & +@r11 << 0n13 ^ (@r11) << $buffer)  { test_statement(0x6ED);  while  ((@r11) & @rbx ; $proc & $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (($thread) << 3 & +@r10 >> @rdx | @rdx & +@rsp ^ @rax & @rbx ^ 0y10001 | @rbp ^ @rdx((($thread) << 3 & +@r10 >> @rdx | @rdx & +@rsp ^ @rax & @rbx ^ 0y10001 | @rbp ^ @rdx) { test_statement(0x664); } elsif (~@rbp >> @rbx & @r10 & $ip ^ @r9 & 6 >= ~@rbp >> @rbx & @r10 & $ip ^ @r9 & 6) { test_statement(0x208C); }
$error$
$end$
1348
 if (@r8 << @rbp << @r11 ^ @r12 << @rdi >> @rsi >> $proc & @rdi >> @rdi ^ @rbp | @rbp << $ip >> 0n17 >> 0n6 | @rax >> @r10 | @rbp & 3 >< $thread + @rbp & ($teb) << @rbp >> @r8 | @r9 >> -@rbx ^ ~$ip ^ $teb & @r10 | $ip & +$thread ^ @rdi)  { test_statement(0x11B8); } else { test_statement(0x212);  /* This is a comment */ val = ~(@r8) ^ ~@rdi | 0x13 ; }
$error$
$end$
1349
 if (@r8 + $proc >> @r12 >> @r10 & -+@r10 << 0x1 ^ $teb << @rdx >> @rdx >> @r12 & $ip >> 0x8 & @rbp & @rbx ^ -@rax >> @r11 ^ $proc))@r8 >> 23 << 0xD & $buffer << @r10 ^ $ip << +@rdx & $ip)  { test_statement(0x190D);  while  (@r12 ^ -@r10 ^ @rdx | (@rsi) ^ ~@r8 | @rbx | (0x4) = @r12 ^ -@r10 ^ @rdx | (@rsi) ^ ~@r8 | @rbx | (0x4))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@rbx >> (@rsp) >> @r8 | $proc >> @r10 ^ @r13 ^ @rbp ^ @r9((@rsi & 0y11 >> +@r9 & @rax & @rbp) { test_statement(0x713);  This is a not opened comment */ ;  // /* This is a comment   // /* This is a comment  }
$error$
$end$
1350
 if (0xA + $proc & @rdi >> @rsi & ~$proc >> $proc ^ --$proc >> @r10((0xA + $proc & @rdi >> @rsi & ~$proc >> $proc ^ --$proc >> @r10)  { test_statement(0xC80); }
$error$
$end$
1351
 if (@rdx + 0n18 >> ~@rbx << 10 >> ~@r12 >> (@r9) ^ @rdx << @r10 >> $proc & ~(+(@rsp)) >> @rsp & @rbp & @rsp ^ 0y1100 & @r12 <> @rsp << @rdi << $proc & @rbx << ~@rbp & 15 | @r8 >> 0y1001 & @rsi ^ -$proc >> -@rsi ^ +$buffer & $ip ^ @rdi | @rdx >> -$proc)  { test_statement(0x25FD); }
$error$
$end$
1352
 if (~~$proc & 0x1 & @r9 >> 0n12 & 0n15 & @rsp | @rdx & @r12 >> @r11 | +0xD >> @r11 ^ @r9 & $proc != $proc + $proc >> 0y10 >> @r12 >> 1 | $buffer << +@r10 >> ~$proc >> 0x1)  { test_statement(0xF89);  This is a not opened comment */  break;  break; } elsif (@rsi & @rax >> $buffer & +@rdx & 7 | 0x6 >> ~@r13 & @rdx & $thread | $teb | +@r12 | ~~@rsi <= @r11 << 0x13 >> 0y11 & @r12 & $buffer & @r9) { test_statement(0x24C1);  /* This is a comment */ } elsif (@rax >> ~0n17 & @rdx & $thread ^ @r13 >= 0n2 >> $buffer & $ip & $thread) { test_statement(0x16DC);  break; } elsif (@rdi & @r8 ^ $buffer ^ ~@r12 >= @rdi & @r8 | $buffer) { test_statement(0x1624); }
$error$
$end$
1353
 if (@rbp << 0xE << @rsi & @rbx >> $teb >> (0n8) & $thread >> +0n17 ^ 0y10010 | 12 << $thread >> 20 | 22 >> @rsp & @r10 & @rax ^ $ip & @rsi | @r12 | 14 ; @rsp & 0n13 << ~~$teb ^ @rax << $ip >> @rbp >> @r12 ^ 0xA >> $thread & @rax & $ip)  { test_statement(0x1250); } elsif (0y0 >> @rbp >> (@rbx) & (0x10) & -$buffer ^ +@r10 >> 0n19 ^ $thread & 0y100 ^ $ip | @r12 >> @rsi ^ $buffer ^ 0n9 ^ @rsp)$teb ^ -@r11 >> @rbx & $teb ^ @rbx & 0n2 | @r11 & -0x5 & @r12 ^ @rsp) { test_statement(0x23EE);  /* This is a comment */ } elsif (@r8 ^ @rsi ^ @rbx ^ $proc | @rbp & (0n4) ^ (0n14))+@r10 >> @rdx & @rsi ^ @r9 ^ $buffer ^ @rdx | @r12 & 0n13 | @rdi ^ @rbp) { test_statement(0xB45); } elsif (@r9 != @r8 ^ 0y1000 | $proc ^ $proc | @rsi | 0x7) { test_statement(0x1E68);  break;  /* This is a comment */ } elsif ($thread ^ @r10 | $buffer != @rbx | 0n4 | (0xE)) { test_statement(0x25B5); } elsif (@rsi | @rdx = @rsi | @rdx) { test_statement(0x19E1); } elsif (@rsi == @rax) { test_statement(0xCDC); } elsif (@rdi >= 0y1101) { test_statement(0x23BD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc >< $proc) ; } elsif ($thread >< @r10) { test_statement(0xBE2); }
$error$
$end$
1354
 if (@r13 + 0n2 & @r13 >> -$ip & @r9 >> @r8 & $thread & @r10 | (~$thread) << @rbx >> @rbx & @rsi >> @r9 | $teb >> @rdx | $teb @r13 + 0n2 & @r13 >> -$ip & @r9 >> @r8 & $thread & @r10 | (~$thread) << @rbx >> @rbx & @rsi >> @r9 | $teb >> @rdx | $teb)  { test_statement(0x46B); } elsif (7 ^ +@rdx >> +(@r10) ^ @rdi)7 ^ +@rdx >> +(@r10) ^ @rdi) { test_statement(0xE04); } elsif (-@r13 >> $buffer & @rsp & @rdi ^ @r10 & 0y0 | +@rbx & 0x2 >< @rdx | @rdi | @r10) { test_statement(0x2062); } elsif (@r10 ^ 0y11 ^ $teb | @rax ^ @rbp | @r11 = @r13 & @r11) { test_statement(0x261E);  for (val = 10; @rsi ; @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1355
 if (@r9 << 0x5 >> ~@r11 << @rdx >> $ip & @rsi & ~$thread != 0xE & @r10 >> @r11 >> @rsp)  { test_statement(0xF31);  // /* This is a comment  } elsif (@rsp << 0x1 >> $buffer >> @rax & $teb >< 0y1100 ^ 0xF >> 0y1 | $proc >> 14 | $proc & @rdx ^ @rax ^ -(@rax)) { test_statement(0x1BB0); } elsif ($buffer >> @rdx <> 0y10011 >> ((@r11))) { test_statement(0xF6A);  /* This is a comment */  // /* This is a comment  } elsif (0xB == 0xB) { test_statement(0x1F1E);  This is a not opened comment */  // /* This is a comment   break; }
$error$
$end$
1356
 if (@rsp + @r9 ^ $thread << (+@r9) ! @rsp + @r9 ^ $thread << (+@r9))  { test_statement(0x24BC);  /* This is a comment */ } elsif ((0y10) << $buffer & @r11 >> +@rbp & @rdi & @r11 ^ 0 ^ @r9 & @rax = $teb << @rdx & @r13) { test_statement(0x1703);  break; } else { test_statement(0x313);  This is a not opened comment */ }
$error$
$end$
1357
 if (@rbp << @rax << $buffer ^ (21) ^ @rsi & 11 ^ @rsp & @r11 != @rbp << @rax << $buffer ^ (21) ^ @rsi & 11 ^ @rsp & @r11)  { test_statement(0x14E9); ; } elsif (@rdx ^ $proc ^ -$ip ^ @rbx | 0n8 & @rbp | @r13)@rdi << @rsp >> $teb >> $ip | @r9 & @rbx) { test_statement(0x1DD6);  if (@r10 @r12)  { test_statement(0x1F93); } elsif (@r13 < ~@rdi) { test_statement(0x19D0); } else { test_statement(0x1A7F); }  for (val = 10; @r12 | 0n2 < @r12 | 0n2;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; ~@rbx >< ~@rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1358
 if (@rbp << $ip | @r10 << ~@r11 >> -0 >> 0y10001 & @r8 & $ip > @rbp << $ip | @r10 << ~@r11 >> -0 >> 0y10001 & @r8 & $ip)  { test_statement(0x1B5F);  while  ($ip ! @r9 | @rax ^ @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax | @rbx <> -@rbx | $ip) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx != @rbx) ; } elsif (20 << -$ip >> @rbp & @rsi >> @rbp & +$teb & ~@r12 ^ 0n1 & @rdi & @r12 | @r9 & @rdx | @r9 & ~-@rbx))@rsi << $proc & @r12 & @rdx & @rbp ^ ~0x4 & @rsi ^ $thread & $teb | +@rsi >> @rax & @rsp & @r11 | @r10 ^ ~@rax | @rsi ^ @rdi) { test_statement(0x160C);  /* This is a not closed comment  // /* This is a comment  }
$error$
$end$
1359
 if (@r9 >> $ip << 0x8 ^ 0n2 << @rax & @r8 & 12 & @r11 ^ @rax >> $proc & @r13 & @r12 ! $proc + @rbp >> @rbx & -$proc << 0n15 ^ $proc & 2 >> @rsp & @r10 & $proc ^ @rbx >> -0xE & $buffer)  { test_statement(0x12F9);  while  (@r9 & @rbx ^ 13 | $proc ^ @rsi | @rsp | @rsi ! @r9 & @rbx ^ 13 | $proc ^ @rsi | @rsp | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
1360
 if (@r11 + 4 << ($buffer) >> @rdi >> @r12 | 0n17 << @rax ^ $buffer ^ +$proc & $thread ^ 10 ^ -@rdx | @r8 & @rdi ^ @rsp | @rsp & $proc ^ $buffer((2 << $teb << @r8 | 11 << 0xA)  { test_statement(0xC9); }
$error$
$end$
1361
 if (@rdi + @rdx & 6 >> (@rax) & @rax >> @rbp | 0n6 << @r10 >> $proc ^ 0n19 >> @rsp ^ @r10 & $thread | @rdi & 0y100 ^ 0y111 & +@rdi ^ -@rsp | @rbx | @rbp(0n14 + @r11 & @rdi << @r11 >> @rdx ^ 0x12 >> 0y0 >> @rbx ^ @r10 & @rbp & -$buffer | @rsi << @r13 & @r12 & @rsp & @rsp | $buffer & @rsi)  { test_statement(0x172F); val = 0n9 | @r10 ; }
$error$
$end$
1362
 if (@rdi << 16 >> @r8 << ($ip) >> @rsp >> 21 & @r11 ^ 0n11 << @rsi & ~@r13 & $teb & $proc | -~0xB | @rbx >> @rbx ^ @rsp & ($teb) ^ 11 | @r9 & 0xE))@r8 >> @rdx << @rsi ^ @r8 << @rax | $buffer >> @r11 >> 0n14 | @rdx ^ 5 & @r13 | @rdi & @rdi ^ $proc)  { test_statement(0x23C6); } elsif ($proc >> 0y0 ^ $teb & @rdi & 0xA)$proc | @r13 >> 0y10 & @rdx ^ @rsp & @r12) { test_statement(0x1E60);  This is a not opened comment */ }
$error$
$end$
1363
 if (@rax + 0y11 >> @rbp << @rsi >> $teb >> -0n16 & -@rdi << @rsp >> $buffer >> @rsi | -~+0y101 << -2 >> @rsi & ~-$proc >> @rdi ^ @rsp & +0 ^ ~$ip & +@r13 ^ +(@rdi) | $buffer & @rdx ! @rax + 0y11 >> @rbp << @rsi >> $teb >> -0n16 & -@rdi << @rsp >> $buffer >> @rsi | -~+0y101 << -2 >> @rsi & ~-$proc >> @rdi ^ @rsp & +0 ^ ~$ip & +@r13 ^ +(@rdi) | $buffer & @rdx)  { test_statement(0x13B1); } elsif (@rdx >> @rax >> @r13 | @r10 >> @rbp & $buffer & 0y100 ^ @rdx & 0y1000 | @rbx ^ @r13 ^ ($thread) | @r12 ^ 0n15 | 0y101 <> @rdx >> @rax >> @r13 | @r10 >> @rbp & $buffer & 0y100 ^ @rdx & 0y1000 | @rbx ^ @r13 ^ ($thread) | @r12 ^ 0n15 | 0y101) { test_statement(0x656); } else { test_statement(0x269A); }
$error$
$end$
1364
 if (@r10 >> $teb << @rbx >> -@rbp & @rsp >> @r11 >> $proc & $thread ^ @rsp << 0n8 >> @r11)~$proc + $thread >> @r11 << $ip | 15 & $proc >> 0y1001 & 0y110 & -@r13)  { test_statement(0x1D49);  This is a not opened comment */ ; } elsif (@r8 ^ (@r12) & $buffer & ((@r9)) ^ @rbp(@r8 ^ (@r12) & $buffer & ((@r9)) ^ @rbp) { test_statement(0x40B); } elsif (@rdi & $proc | @rsi ^ 0n15 ^ @r9 <> 0x12 & @rbp) { test_statement(0xEA5);  /* This is a comment */ } elsif (@rdx | 0n11 ^ @rax | @rsp(@rdx | 0n11 ^ @rax | @rsp) { test_statement(0xAF6); } elsif (@rax ^ @rsi | @rdi >= @rax ^ @rsi | @rdi) { test_statement(0x1A17); } else { test_statement(0x1102); }
$error$
$end$
1365
 if (@rsi << @r11 << $proc >> $teb ^ @r10 << @rbp >> @r11 ^ @rbp >> @r11 ^ @r11 ^ @rbx ^ @r11 | 16 ^ @rax & @rdx & @r13 ^ ~@rsp ^ (@r11) ^ @rbp != $proc << 3 << -@r10 ^ 0x9 << @rbx & $ip >> $proc & 0xA)  { test_statement(0x1E4E);  /* This is a comment */ } else { test_statement(0x20AF);  // /* This is a comment   break; }
$error$
$end$
1366
 if (@rdi ^ @r13 << $buffer >> @r12 ^ $buffer >> @rsi & -@r12 & @r13((0y1001 + @rsi >> +23 >> 22 >> @rdi ^ @rbx << @rsi >> @r10 | $thread << 0y1100 & @rsi >> @r10)  { test_statement(0x1364);  while  ($teb & (-$buffer) ^ -@rax ^ @rdx <> $teb & (-$buffer) ^ -@rax ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (1 << $proc ^ @r9 | +@r11 & $ip ^ +@rdi & +$proc ^ @rax ^ @r11(-0xA >> @rax & @rbp >> @r9 ^ @r11 >> +~@rbx) { test_statement(0xCF1); }
$error$
$end$
1367
 if ($buffer + $proc << 0n10 << ~@rdi >> @rbp >> @rdx >> @r13 ^ @r8 >> @r10 | $teb | @r8 >> 0n2 & +@rsi ^ $buffer | $proc ^ 4 > $ip + @rbp << ~$proc & 10 ^ -$teb >> $proc >> @r13 & $teb | @rbx & @r10 & @r12 | @r9 & @r12 & @rsp | $buffer)  { test_statement(0x972); }
$error$
$end$
1368
 if (@rdi + $ip >> 22 << $ip >> @r12 >> +0y1001 & 0n16 << @r10 >> @rdx ^ -$ip >> @r10 & @r12 >> 0n9 <> @rdi + $ip >> 22 << $ip >> @r12 >> +0y1001 & 0n16 << @r10 >> @rdx ^ -$ip >> @r10 & @r12 >> 0n9)  { test_statement(0x1EA4); }
$error$
$end$
1369
 if (0n15 << $buffer != -~0y10000 + @r12 >> +@rsp >> @rbx & @r12 << @r9 >> @rax)  { test_statement(0xAFD); } elsif (@r12 << @rax >> $proc >> 0xF & $proc >> $teb ^ @r11 & @r11 & @r12)@r9 << $buffer & @rsp & 0y1111) { test_statement(0x63);  /* This is a comment */ } elsif (0x12 >> 15 & $proc <> +@rsp >> $proc ^ @r9 | @r9 & @rdi ^ @rbp) { test_statement(0x1116); } elsif ($ip & +@r10 ^ @rbp ^ $thread | +@rdx <> $ip | @r8 ^ @rax | $teb) { test_statement(0x229C); val = $proc ;  break;  This is a not opened comment */  for (; ~@rbp > $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x17E2);  // /* This is a comment  ;  /* This is a comment */ }
$error$
$end$
1370
 if (@r11 & $buffer))+@rdi >> @r9 ^ @r10 << 22)  { test_statement(0x1FA9); ; } else { test_statement(0x259D); }
$error$
$end$
1371
 if ((@rax) << 0x3 >> @r12 & @rax << @rsi >> @r9 >> 1 & 0n8 >> ~-$buffer ^ 0x9 << +@r13 >> @r10 & $thread >> 0n8 ^ @r9 >> 22 & 0y1011 & @rbx <= @r11 << @rbp >> @rsi << $thread >> $teb ^ $teb >> @r9 | @r8 << @r10 & @r11 ^ @r8 >> @rsp & @rbx & @r8 ^ @r13 & +@rbx)  { test_statement(0x1F19);  /* This is a not closed comment } elsif (@rdi >> $buffer >> -21 & @r9 & @r8 <> ~6 << @rax >> @r10 >> @rdx & 22 ^ 2 >> @r9 ^ 0y110 & 0n13) { test_statement(0x42C); } else { test_statement(0x2149); }
$error$
$end$
1372
 if (@rsi + ~@rdx ^ $ip << $teb = @r10 << @r13 >> $buffer & 23 << $teb >> (0x5) & @rbx)  { test_statement(0x1AA9);  /* This is a comment */ } else { test_statement(0x2064); ; }
$error$
$end$
1373
 if (-0n6 + (@r8) >> -~$ip << $thread >> $thread ^ ~2 << 0x5 >> @rbx & -@rsp & 0x3 & @rdx ^ +@rsi >> $ip & @rbx & 7 ; $buffer << @r10 & @rbx & $thread)  { test_statement(0x112B); } elsif (@rbx << @rax & 0xD >> @rax > $buffer ^ $thread ^ ($buffer) ^ $buffer ^ $ip) { test_statement(0x1442); } elsif ($buffer($buffer) { test_statement(0x1ECA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1111 | @rsp <> 0y1111 | @rsp) ; }
$error$
$end$
1374
 if (@r10 + $buffer << @r13 >> $ip ; @r10 + $buffer << @r13 >> $ip)  { test_statement(0x121F); } elsif (0n8 & @r8 & @rbp & @rdx ^ @r9 >> @rbx ^ ~-@rsi < $proc >> +@r8 >> $ip & @r11 & +15 & $thread ^ @r10 >> ~-~@r8 & @rbp | @rbx ^ $ip) { test_statement(0x11AA); } elsif (0x4 >> @rbx & @rbp & $teb ^ @r10 ^ @r13 ^ @r9 | @r13 ^ 7 <= 0x4 >> @rbx & @rbp & $teb ^ @r10 ^ @r13 ^ @r9 | @r13 ^ 7) { test_statement(0x1421); } else { test_statement(0x3E2);  for (val = 10; @rdx | @r13 >= @rdx | @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1375
 if (+$proc << $proc << 0x10 ^ $proc >> @r13 >> @rax ^ 5 ^ $teb & ($buffer) +$proc << $proc << 0x10 ^ $proc >> @r13 >> @rax ^ 5 ^ $teb & ($buffer))  { test_statement(0x15AB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1110 <= ~22 ^ ($buffer) ^ @rbx) ; } elsif (@r11 @rdx >> $ip) { test_statement(0x564);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi | @rbx > $teb | @rbp | 0n8) ; } elsif (@rbp >> @rdi >< @rbp >> @rdi) { test_statement(0x1EA3);  break;  if (@rdi))@r12)  { test_statement(0xCF6); } } elsif (21 & @rsp | @rbp ! 0y111 & @r8 ^ 0n3 ^ @r10) { test_statement(0x1958);  /* This is a comment */  break;  break; } elsif (0x3((0n15 ^ @rsi | 0n14) { test_statement(0xC7C);  while  (@rax >< @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp >= @rbp) { test_statement(0x482);  // /* This is a comment  } elsif ($teb >< 0x8) { test_statement(0x1504);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n3 != $ip) ; } elsif (($buffer) $buffer) { test_statement(0x1EE); ; } else { test_statement(0x1A12);  // /* This is a comment  }
$error$
$end$
1376
 if (@r13 + @rsi << $teb << @rsp >> $teb >> @r13 ^ (@rbx) | 0x13 | $proc >> 0y1101 | @rax ^ $proc ^ @rsi | @r13 ^ @rbp | @r11 ! @r13 + @rsi << $teb << @rsp >> $teb >> @r13 ^ (@rbx) | 0x13 | $proc >> 0y1101 | @rax ^ $proc ^ @rsi | @r13 ^ @rbp | @r11)  { test_statement(0x18D0);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc & @r11 < $buffer ^ 0x13 ^ (@rbx) | +@rsi | $thread) ; } else { test_statement(0x10D4); }
$error$
$end$
1377
 if (@r9 + $proc ; @rax >> @r8 ^ @rsp << @rbx >> @rax & (@rsi) & @rbx ^ -@rbp >> 6 ^ @rsi ^ @r12 ^ @r11)  { test_statement(0xAE6);  This is a not opened comment */ } else { test_statement(0x465);  for (val = 10; @rdx ^ @r9 | @r11 | ($proc) < 0xB ^ @r9 | 0n5;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = 0n16 ; }
$error$
$end$
1378
 if (@r11)@rbp + -$thread >> $ip >> 0y100 >> 1 & 22 << @r9 >> @rdi ^ @r10 << @r12 | 0y1010 >> @r9 & @r8 ^ +0y11 & 0y0 & $ip ^ @rdx ^ 0y1110)  { test_statement(0xAF2);  for (@rax = @rsi; @r13 & 0n16 >= @r13 & 0n16;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1379
 if (@rdi + @r10 << @r9 << @rbp & @r10 << @r9 & $thread & @rsp & -@rbx ^ @r8 <> @rsp + @r13 << (+$proc) ^ @r12 << -+@rax >> @rsi)  { test_statement(0xA39);  /* This is a not closed comment  if (@rbx ^ $ip 0y1101 ^ @rbx)  { test_statement(0x18D5); } elsif ($proc((($thread)) { test_statement(0x156E); } elsif (@r13)@r13) { test_statement(0x326); } else { test_statement(0x2333); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx 0n9) ;  This is a not opened comment */ } elsif (@rsi ^ $buffer & @r9 | @r11 >> $ip & @rbp | @r8 & 0x0 ^ @rsp ^ -@rax | @rsi ^ -$ip 0n9 | $ip ^ @rbp & @rdi) { test_statement(0xB7A); } elsif (@r12 & -@rax ^ @r11 & @r9 ^ @rdi ^ +@rsi | @rdi | @r12 | ~0y110 | 0n18 >= @r12 & -@rax ^ @r11 & @r9 ^ @rdi ^ +@rsi | @rdi | @r12 | ~0y110 | 0n18) { test_statement(0x191D);  for (@rax = (+@r10) | @r9; @r12((@rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($teb < $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread | @rbx $teb & @rsi ^ $teb) { test_statement(0x213B);  /* This is a not closed comment } else { test_statement(0x1DB4);  for (val = 10; @r13 <> @rax | @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1380
 if (@r13 << $teb & @r10 << @rsi ^ $teb << @rdi ^ @r8 >> @rax ; @r13 << $teb & @r10 << @rsi ^ $teb << @rdi ^ @r8 >> @rax)  { test_statement(0x6A9); } else { test_statement(0xCFF);  while  (@r10 | -@r13 | $thread ! 2 | -$proc | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1381
 if (+$proc >> @r11 << ~@r10 & @r9 << 0n6 >> +~@r11 & $teb & @r10 & @rbx ^ 0y1001 << @r8 >> @rsi >> @rdx & ~@rbp & 2 & @rax ^ 0x2 >> @r11 & 0n17($ip << $teb << @rdx & 0n18 << $buffer >> +10 & 0xC & $teb & @rbp ^ @rbx << 0n3 ^ @rdi >> @r12)  { test_statement(0xD30);  This is a not opened comment */  if (@rsp | @rsi < @rbx | @rbp | -0y1010)  { test_statement(0x259D); } else { test_statement(0x1856); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 | @rax ! $thread) ;  while  (@rbp <= @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   /* This is a comment */ } elsif (@rdx << $buffer >> 0y1 >> @r10 & $proc >> ($buffer) ^ $proc >> @r8 | @rbp | @rbp & @r12 ^ @rbx ^ @r9 | @r13 < 0n15 << 0n6 >> $ip >> @rdx | (@rsi) >> @r12 ^ (@rdx) ^ @r8 | 20) { test_statement(0xF6F); } else { test_statement(0x879);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ^ $teb >< @rdx ^ $teb) ; @rax = $proc ^ @r9 | @rbx ; }
$error$
$end$
1382
 if (@r13 + 5 >> 0x7 << $teb >> @rbx & @r8 >> @rdx >> ~@r8 & $thread & $proc & @r12 ^ 0n18 > @r12 & 0x8 << @rbp >> @r10 ^ 15 << 0x2 & 0x6 >> 0y100 ^ ~$buffer >> +@rdx & @rax ^ @r11 & @r13 ^ $teb ^ $ip)  { test_statement(0x14BE);  // /* This is a comment  } elsif ($thread << 0x7 & $ip ^ @rdx >> +@rbp ^ @r8 >= $thread << 0x7 & $ip ^ @rdx >> +@rbp ^ @r8) { test_statement(0x2AB); } elsif (@r9 >> @r10 ^ @rax | -0x12 ^ @r8 != @r9 >> @r10 ^ @rax | -0x12 ^ @r8) { test_statement(0xBDB); } else { test_statement(0x1146); }
$error$
$end$
1383
 if (0x9 + @r13 << @rdi << @rsi & @rbp & @r11 <> 0x9 + @r13 << @rdi << @rsi & @rbp & @r11)  { test_statement(0x10CF);  /* This is a comment */ } elsif (@rax << @rsi >> +@rbx | -0xC | @rbx @rbp >> 0n9 ^ @rdi | @rsi >> @r13 ^ -@r10) { test_statement(0x890); } elsif (~@r8 & ~$ip ^ $thread | @r12 & @rsp ^ $thread ^ -@rbx | @r10 ^ @r11 < ~@r8 & ~$ip ^ $thread | @r12 & @rsp ^ $thread ^ -@rbx | @r10 ^ @r11) { test_statement(0xA2B);  break;  if (@r12 <> @rsi)  { test_statement(0x1E87); } else { test_statement(0x1435); } }
$error$
$end$
1384
 if (@rdi + @r13 << $buffer << +0 >> +$buffer << @rdi >> (~@r13) >> @r10 & @rax << $ip ^ @rbp ^ @rax & ~0x7 & @rbx | $buffer >> (@r11) >> @rsi & @r8 & @rsp & $buffer | @rsp >> @r11 & @r10 & $buffer ^ @rdx & $ip ^ @r9 ^ 0x2))@rdx >> $ip & @rbx & @rbp & 22 ^ $ip & $proc >> @r13 | @rdx << ~@r9 >> @rbp & ($teb) ^ @rdi >> 0y1101 & @rax ^ 0xE & @rsp)  { test_statement(0x1BED); ; val = @r9 | @rax ^ 0n11 ; } elsif ($proc | @rdi >> @r13 & 0y1001 & 0y1110 ^ 0y101 & 0x5 ^ @rsi ^ $ip != 0n8 << 0y1001 | -@rdi & @rax & +@r8 ^ @rsi ^ 12 ^ @rdx | @r9 | 0x2 ^ (-@rdx)) { test_statement(0x1A4C); }
$error$
$end$
1385
 if (@rsi << @rax << @r8 >> @r12 << $teb | $teb >> @r11 ^ @rbp & @r8 & @r10 ^ $buffer | 0n6 ^ @rax & @r13 <= @r11 << $buffer & @r8 & @rbp & $thread & $buffer ^ -@r10 & 3 >> @r11 & @r11 ^ @r13)  { test_statement(0x1A29);  break; }
$error$
$end$
1386
 if (@rdi << @rbp & @r12 >> @r12 >> @r9 ^ @rbx << (0n11) & ~@r10 ^ +@rbx >> 17 & $thread >< @rdi << @rbp & @r12 >> @r12 >> @r9 ^ @rbx << (0n11) & ~@r10 ^ +@rbx >> 17 & $thread)  { test_statement(0x1770); } elsif ($buffer & ~@r9 ; @r11 << @rdi >> @rdi & $proc) { test_statement(0x8FF); } elsif (-6 & $thread ^ @rbp ^ $ip ^ @r13 <> -6 & $thread ^ @rbp ^ $ip ^ @r13) { test_statement(0x1181);  for (val = 10; 0y1010 | 0y1001 > 0n6;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
1387
 if (~$buffer + @rdi << @rsi << $thread >> $thread & @r10 << @r11 >> @r8 & 3 & @rdi ^ @r11 << @rdx >> @rsp >> 7 > $ip << 0x6 | $teb << $thread & @rdi >> @rbx & @rbx & 0y1000 ^ @rdi)  { test_statement(0x835); } else { test_statement(0x1D03); }
$error$
$end$
1388
 if (@r11 + @rbx << @rbp << @r11 & ~0n7 >> $thread >> ~+@rsi & +-@rbp >> @r10 ^ @rbx << $proc >> -(@r12) >> 14 & $teb >> @rax < @r11 + @rbx << @rbp << @r11 & ~0n7 >> $thread >> ~+@rsi & +-@rbp >> @r10 ^ @rbx << $proc >> -(@r12) >> 14 & $teb >> @rax)  { test_statement(0x224);  while  (@rdx ^ @r13 == @rsi ^ @r13 ^ @rax | 0y1111 ^ @r8 | 15)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } else { test_statement(0x1C73);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax | -$thread | @rbx)@rsi) ;  while  (11(@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1389
 if (14 + @rax & @r12 >> @rbp & $proc < 14 + @rax & @r12 >> @rbp & $proc)  { test_statement(0x1F0E); } else { test_statement(0x368); }
$error$
$end$
1390
 if (@r10 = -@rbx + ((+@r8)) ^ $proc << -$proc ^ @rax >> @rsp & 5 ^ @r12 & 0x2)  { test_statement(0x1483); } elsif ($buffer ^ @r11 ^ @rbp & @rsp ^ @r12 ^ @r11)$buffer ^ @r11 ^ @rbp & @rsp ^ @r12 ^ @r11) { test_statement(0x1552);  This is a not opened comment */ } elsif (@r8 ^ @r12 & $ip | @r10 ; @r13 >> @rdx ^ @r12 ^ @rbp ^ @r11 | 0x4 ^ @rbp ^ @rdx) { test_statement(0x378); } else { test_statement(0x1A34);  while  (0n4 | @rdi | $proc > 3 ^ $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rbp | 0n7 <> @rbp | 0n7;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1391
 if (@rdx << $thread >> $ip ^ $proc | @r13 >> 7 | @r11 & @r9 ^ (@rdi) >< @r9 << -$buffer)  { test_statement(0x63D);  for (; @rdi | @rsi | +$proc | (@rdx) @rbp & 14 ^ -@r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (~0n2 ^ (0x7) | 2 != @rsi ^ @r13 | @r12 | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; 0y1 == 0y1;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = ~-@r9 | @rsi ;  /* This is a not closed comment  for (; $buffer ; @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1392
 if (@rsi << @r12 << ($thread) >> 0n13 << @rsp >> 0y100 & $thread << $ip >> @r11 >> @r9 ^ @rbp >> $thread | 0x10 << 0y1111 & @rax & @r9 & (+0y100) ^ @r9 >> 13 & $thread | @rsp ^ 15 & 1(@rsi << @r12 << ($thread) >> 0n13 << @rsp >> 0y100 & $thread << $ip >> @r11 >> @r9 ^ @rbp >> $thread | 0x10 << 0y1111 & @rax & @r9 & (+0y100) ^ @r9 >> 13 & $thread | @rsp ^ 15 & 1)  { test_statement(0x264); } else { test_statement(0xDB8);  for (val = 10; $proc = @rdx ^ @r11 | @rdi | $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = -@rbx ^ ~(@rdi) ;  while  (@rbp(~@r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1393
 if (0y10000 + $thread << $teb << -@r12 >> @r9 ^ @rsi << @r9 & @r12 | 0x4 << @rbx >> $proc & 0y1101 >> $proc == @r10 + $teb >> @r11 ^ @r11 >> $teb ^ @r13 >> ~@r13 ^ @r9 & @rbx ^ 0n16)  { test_statement(0x1FE2); } elsif (@r12 & $proc @rsi | $ip ^ ~(@r11) & @rsi | @r12 & 15 | -0n5) { test_statement(0x1234); } else { test_statement(0x10B8); }
$error$
$end$
1394
 if (@rsp + $thread << 0y1010 >> +0xE >> $ip ^ $teb << @r10 & @rbx & +$buffer <= $teb >> 0y10001 << @rbx >> ~@r10)  { test_statement(0x14E6); ; ;  // /* This is a comment   // /* This is a comment  } else { test_statement(0x1A7D);  // /* This is a comment  }
$error$
$end$
1395
 if (~@rbx << 0y1000 >> @r13 << @rax >> @r12 ^ @r13 << 22 ^ @r12 & @rsi $teb >> 0x8 >> @rsp >> @rbp & (~@r10) << $thread >> @r13)  { test_statement(0x1C8E); }
$error$
$end$
1397
 if (0n15 << +@r12 << @r10 >> 0y1110 ! @r9 + @rbx << 0n14 >> 0x1 << ($thread) >> @r11 | @r10 >> 13 & 2 & @rbp & @rsi)  { test_statement(0xA89); @rax = ($proc) ^ @rdi & @rsi ^ @rbp | @r8 ^ 0y10001 ^ @rbx | @rbp | @rdi | @rax ;  for (val = 10; @r12 == @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc << $buffer >> @r10 >> @r12 ^ $proc >> @r13 & 0n14 ! $proc << $buffer >> @r10 >> @r12 ^ $proc >> @r13 & 0n14) { test_statement(0xF1D); } else { test_statement(0x1C3F);  while  ($ip))$ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  @rax = @r9 | @rdi ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n19)0n19) ; }
$error$
$end$
1398
 if ($teb + -~$buffer & @rsi << +@rax & @rbp >> $ip & @rax & $proc >< $ip ^ 0y100 << @r12 & 0y10001 & @r13 & $proc)  { test_statement(0x1824); ; } elsif (+@rdx & $buffer ! @r10 << ~0n0 >> @r11 >> 0x4 & $thread & $ip & @rdi) { test_statement(0x1F21);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb | $proc $teb | $proc) ;  // /* This is a comment  } elsif (@r8 & 0x11 ^ @rdi != -$thread ^ 0y1001 | $thread & @rsi | (@rsp) ^ @rax | $thread | @r12) { test_statement(0x64B); } elsif ((@r11) ^ @rsp ^ 0n17 <= $thread & @rdx) { test_statement(0x498);  // /* This is a comment   break; } elsif ($proc ! (~$proc) | @rdi | @r9) { test_statement(0x1BE2);  /* This is a not closed comment  /* This is a comment */ } elsif ($teb((@rax) { test_statement(0x95C);  // /* This is a comment  } elsif (@rsi ; @rsi) { test_statement(0x2577);  while  (@r10 >< @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (+@rsi <> $teb) { test_statement(0x620); ; } else { test_statement(0x11B); @rax = $ip & @rbx | @r12 ^ @rbp | (@r9) ; }
$error$
$end$
1399
 if (@r9 + 0y1110 << $buffer >> 3 >> 0y1 ^ $teb >> $thread >> @r8 & @rbx ^ ~$buffer ^ @rax & @rax ^ 11 ^ $teb | 0x12 & (@r11) >> $buffer | $teb >> 0y1 & +@rsi & @r9 <> @r9 + 0y1110 << $buffer >> 3 >> 0y1 ^ $teb >> $thread >> @r8 & @rbx ^ ~$buffer ^ @rax & @rax ^ 11 ^ $teb | 0x12 & (@r11) >> $buffer | $teb >> 0y1 & +@rsi & @r9)  { test_statement(0x2548); }
$error$
$end$
1400
 if (3 << $proc << @r11 >> @r9 & $ip ^ $teb << @r10 >> ($thread) & $thread ! 3 << $proc << @r11 >> @r9 & $ip ^ $teb << @r10 >> ($thread) & $thread)  { test_statement(0x250F); } else { test_statement(0x310); }
$error$
$end$
1401
 if ($buffer + @r12 << @r10 << 17 >> 0y10010 >> $proc >> $proc & @rax >> @r11 >> $proc & @r8 >> @r8 & +@rbx ! @rdx | 0x4 << 1 >> @r13)  { test_statement(0xF5D); } else { test_statement(0x56B); ;  /* This is a comment */ }
$error$
$end$
1402
 if (@r12 << @r11 ^ @rbp << @r12 >> @rbp ; $teb + 0n18 >> $thread << @rsi & $proc << 20)  { test_statement(0x254); } elsif (15 >> 0n1 >> @rsp & @rdx & 13 | @rdi >> @rsi ^ @r11 ^ 0y101)-+@r8 << @r9 >> (@r9) ^ 0xF & @rsi & $proc ^ @rsp & +0x7) { test_statement(0x1415);  // /* This is a comment  } elsif (+$proc >> @r12 ^ ~+0x9 & $buffer | ~$ip != @r9 >> $buffer & @r12 ^ @rax) { test_statement(0x39B);  This is a not opened comment */  while  (@r11 @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (($proc) & @rdi ^ ($ip) ^ @rbx < $thread & @rdx ^ @rsi ^ (@rdx) | @r9 | @rax) { test_statement(0x232D); }
$error$
$end$
1403
 if (@r11 + @r9 << -@r12 >> @rbp << 0x0 >> @rdx >> +@rbx((@r11 + @r9 << -@r12 >> @rbp << 0x0 >> @rdx >> +@rbx)  { test_statement(0x26A2); }
$error$
$end$
1404
 if (@rbp << ~@r13 << +$thread >> @rdx >> $buffer >> +@rax & @rax << -@r8 >> @r8 & @rax >> $teb | @rsp << $teb & @r10 ^ @rsp & (@rax) & @r9 | @r12 >> 0n12 & @rsi ^ $thread & @rax | 0y10011 | 20 ^ ~@r12 <= @rbp << ~@r13 << +$thread >> @rdx >> $buffer >> +@rax & @rax << -@r8 >> @r8 & @rax >> $teb | @rsp << $teb & @r10 ^ @rsp & (@rax) & @r9 | @r12 >> 0n12 & @rsi ^ $thread & @rax | 0y10011 | 20 ^ ~@r12)  { test_statement(0x1B4D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc & @rbx ^ @rax ^ $proc ; @rsi ^ $proc ^ @r9 | @rax ^ 0xD) ; } elsif (@r9 << @rax & $proc | $buffer >> @rdx & $proc & +@r13 ^ @rdx & @r11 >= @r9 << @rax & $proc | $buffer >> @rdx & $proc & +@r13 ^ @rdx & @r11) { test_statement(0x1ECC); } elsif (@rsi >> $proc & 21 ^ @rdi & @rsp >< @rdx ^ @r11 ^ 0y111 | @r8 | @r12) { test_statement(0xD7D); } else { test_statement(0x4F5); }
$error$
$end$
1405
 if (@rsi + @rsi << @r12 << @r10 >> 22 << @rsp & @r10 << (@rsi) >> @rdx = @rsi + @rsi << @r12 << @r10 >> 22 << @rsp & @r10 << (@rsi) >> @rdx)  { test_statement(0xD5F); } elsif (@rax << $buffer | @r12 >> @rdi & @rax ; @r9 << @rdi ^ 0n18 >> $thread & @r11 & $proc ^ 0n12 ^ @rsp ^ @rdx | $buffer >> @rax & @r11 & ~@r11 ^ $buffer & -$proc) { test_statement(0x26CD);  This is a not opened comment */  /* This is a comment */  if (@rsi $thread)  { test_statement(0x497); } elsif (0xA = $teb) { test_statement(0xAF); } else { test_statement(0x1F64); }  break; } else { test_statement(0x99F); @rax = @rsp & ((@r11)) | 0n15 ; }
$error$
$end$
1406
 if (@rsi + @rax & $buffer << @r12 & $ip & @rbp | $thread << @rdi & @r13 >> @r12 ^ ~@rsi >> @rsp | @r12 >> @rbp & @rsp & @r13 ^ @rsp ^ $teb | @rax <= @rsi + @rax & $buffer << @r12 & $ip & @rbp | $thread << @rdi & @r13 >> @r12 ^ ~@rsi >> @rsp | @r12 >> @rbp & @rsp & @r13 ^ @rsp ^ $teb | @rax)  { test_statement(0xC3);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip ^ $ip | @r9 | @rsp @rsp) ; }
$error$
$end$
1407
 if (@rsp + @r11 << 0x8 << @rax >> (-@rax) << @r8 >> @rbx >> $buffer ^ @rdx >> @rbx >> ~@rsp & $buffer >> @rax & @rbp & @r10 | $proc >> $buffer ^ @rdx & @rax | @r9 >> @r13 ^ $ip != @r8 << @r11 >> $thread ^ @r12 << @rdx | ~@rsp >> $ip)  { test_statement(0x4DC);  This is a not opened comment */ } elsif (0x2 << $proc & @rbx >> @rbx | @rdi >> @r8 | $proc >= +0xE << @rsp & @rax >> 10 ^ $proc >> $ip & @r10 & @rax ^ $proc & @r8 ^ @rbx ^ @rdx | @r12 & @rdx ^ +@rbx & $thread) { test_statement(0x130D); } elsif (@rdx >> $teb | @r8 | ~+@r8 ^ @r13 > @rdx >> $teb | @r8 | ~+@r8 ^ @r13) { test_statement(0xC82); }
$error$
$end$
1408
 if (@rbp & @rdi & @rbx >> $ip)(0n6) + @r13 << 0x2 & $ip ^ @r11 >> @rsp >> @rsi ^ @rbx | @rbp | -$buffer >> $proc & $teb & @rsp)  { test_statement(0x25C9);  /* This is a comment */  if (+@rdi ! +@rdi)  { test_statement(0x871); } elsif (@rsi)@rsi) { test_statement(0x103A); } elsif (@rbp >= $buffer) { test_statement(0x4E2); } elsif (@r10 ; @rsi) { test_statement(0xE4F); } elsif (@rsi $thread) { test_statement(0x41D); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rdi | 0 ! $thread) ; } else { test_statement(0x811); }
$error$
$end$
1409
 if (0y1 << @r8 << @rdi & @r8 >> +@r12 & @r8 & @rbp & $ip ^ $teb << @r13 >> @rbx >> @r10 & @rsp ^ (+0xC) >> @rdx(0y1 << @r8 << @rdi & @r8 >> +@r12 & @r8 & @rbp & $ip ^ $teb << @r13 >> @rbx >> @r10 & @rsp ^ (+0xC) >> @rdx)  { test_statement(0x3EE);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc ^ @r11))$proc ^ @r11) ; } else { test_statement(0x19B); }
$error$
$end$
1410
 if (@rax + +@rdi << @r13 ^ @rbx << $teb & 0n3)@rdx + @rax << $proc & @r13 << @r9 >> 0y1101 >> $buffer & +$teb | 0n0 ^ -@r8 >> $teb ^ @r12)  { test_statement(0x1D9E);  // /* This is a comment   break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer >< @rbp) ; ;  /* This is a comment */ } elsif (@r8 & $thread & $thread & @rsi != $ip << @r8 >> $teb >> 0x11 ^ $teb & $teb ^ @rbx ^ -@rax ^ 23) { test_statement(0x1D6E);  if (@rbx ^ +(@r12)))@rbx ^ +(@r12))  { test_statement(0x109D); } } elsif ($buffer & $ip ^ @rax | @rsp & 0n0 < $buffer >> @rdx & @rsi & $ip) { test_statement(0x12B8);  break; } elsif (~-@r11 | @r12))~-@r11 | @r12) { test_statement(0x484); } elsif ($teb >< @rbx ^ @r8) { test_statement(0x199F);  while  (+@r13($teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($ip ; $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (@r8 == @r8) { test_statement(0x54);  break;  while  ($buffer <> $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0xD))-$buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1411
 if (-@rax + ~0y1011 << @r8 << $teb >> @r13 << 0x5 >> @r10 ^ $thread << @rdx >> ~@r13 >> @r12 ^ +0n10 >> @r12 & +~@rbx & @rax >< @rax + @r11 >> @r12 & @r11 ^ $proc >> 0y1111 >> 0y1 & @r9 >> @r13 | @r10 << -23 | @rax >> @rdx & ($buffer) & 0y110 ^ $ip & 15)  { test_statement(0x25BA); }
$error$
$end$
1412
 if (@rdx >> 12 << @r8 ^ $proc >> @rbx >> @rax | -@rbx << @rdi & @rdi >> @rbp ^ $buffer >> $ip & ~$proc ^ @rdi ^ @r12 ^ $thread | 0y101 >> @rdx | @r12 | @r8 ^ $teb $proc + 0n13 >> @r8 << $thread)  { test_statement(0x189D); } elsif (@r12 << @r11 & -$thread & @r11 & ~0n3 ^ @rbp >> 0y10000 ; $ip ^ @r13 >> +@rbx) { test_statement(0xA40);  for (val = 10; @r13 ^ (0x9) ; @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1413
 if (@rsp + (@r13) << @rax ^ @r11 << @r8 | @rax >> $proc & @r13 & @rbp & $ip ^ @rax >> 0xD ^ @r9 & @rsi | @rax >> @rdi | @rbp & @r13 | 0x12 ^ 0y100 != $ip >> @rbx << @r8 & $buffer & $buffer & @r12 ^ @r8 << @rdx & 0n7 >> @rsp & @rbp & @r12)  { test_statement(0x2481);  if (@rdi & (~(21)) | @r9($teb & @r11 | @rdx)  { test_statement(0xCAE); } elsif (@r9 ^ 0n14 | @rbp ! @rax | 0xF | 0y1110) { test_statement(0x10DC); } else { test_statement(0x2091); } } else { test_statement(0x844);  if (@rdx ^ $teb | ~10 | @r13 != (@r11) ^ $ip)  { test_statement(0x270F); } elsif (@r13 | 22)@r13 | 22) { test_statement(0x1080); } else { test_statement(0x912); } }
$error$
$end$
1414
 if ($buffer + $proc & @rbx >> @rbx & @rsp >< @r9 << $proc << @rdi >> $thread >> @r9 & @rbx >> @r12 & -@r12 >> @rax & 0y0 | $buffer << $buffer)  { test_statement(0x1879); } else { test_statement(0xBDD);  This is a not opened comment */ val = @rbx | @rsp | $thread ; }
$error$
$end$
1415
 if (17 + @r13 << (0) & $thread << @r11 >> $teb & 0x7 >> @rsp & $ip & 0y1111 | @rax >> -@rdi | 0y10011 >> 0y101 | @r8 & @r12 ^ @rsp >< @rsp + -@r8 >> -$thread << @rbx >> @r13 >> -@r11)  { test_statement(0xBBF); } elsif (@r11 & 0y1100 ^ @rax >> ($proc) & ~@rax & 0n9 ^ -$buffer ^ @rsi | @rsp & @r10 | $buffer & $ip ^ $ip ^ @r8 | @rdx ^ 0x1 | @r12 != @r11 & 0y1100 ^ @rax >> ($proc) & ~@rax & 0n9 ^ -$buffer ^ @rsi | @rsp & @r10 | $buffer & $ip ^ $ip ^ @r8 | @rdx ^ 0x1 | @r12) { test_statement(0x1315); } else { test_statement(0x74);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11((@rsi | @r12 | $thread) ; }
$error$
$end$
1416
 if (@rdx + @rdi | @r10 << $proc >> @r10 >> @r12 & 0n11 | @rsp >> @rax ^ @r9 & @r12 | @r11 ^ @rax ^ @r8 = @rdx << @rax >> @rdi << 14 >> @r9 >> $teb & 13 << 0y1000 ^ @r10 >> $proc >> +$buffer & @r13 >> @rbx ^ $proc & $teb & $buffer ^ @r13 & 0x12)  { test_statement(0x531); } else { test_statement(0x210A);  /* This is a comment */  while  (@rsp))0xC)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1417
 if (@rdi + (@rdx) << ~@rdi & @rsi << ~$thread >> $thread >> $proc | $thread << 0y10010 >> $ip >> @rsi & 0y10 ^ @rbx ^ @r12 & $teb < 0y1 + $ip ^ @rax >> $ip)  { test_statement(0x1ED4); } else { test_statement(0x4E9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 ^ @r12 != -$ip | @r10 | @r12) ; }
$error$
$end$
1418
 if (@rdx + 0n7 | @rbx ^ @rdx >> 10 >= @r10 << 0y111 & (@rbp) << @rbx >> $teb >> 0n11 & $thread >> @rbx ^ @r10 >> @rsp | @r9 << $ip >> $buffer >> @rsp & @rdx ^ @rax & +$thread & @rax)  { test_statement(0x905);  while  ($teb | @rsp >< 0xB & $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc ^ 0n17 | @rax | @rdx < @rsp ^ @r10 | $buffer | @r8) ;  while  (@rsi ! @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = -$ip ; } elsif (~$ip << @rbx ^ @rdx ^ @rdx ^ $buffer | @rbp >> -@r11 ^ @r13 | $thread & 12 < 0y1010 << 0xA & +@rbx >> @rbx | @rbp ^ @rsi & 0n12 ^ $thread) { test_statement(0x25CF); } else { test_statement(0x2258); }
$error$
$end$
1419
 if (@r12 + @rsp << @r10 >> +0n18(@r12 + @rsp << @r10 >> +0n18)  { test_statement(0x2142);  break; } elsif (~$ip & $teb >> @rsi ^ @r13 >> ~@r9 & @rdi & @rbx ^ @r10 ^ 0x1 >= ~@rdx << @r9 >> $thread >> ~@r10 ^ $thread & @rbx & 15 | @r11 >> 0n11 & $ip | @rbx & -@rax ^ @r9 ^ @rsp) { test_statement(0x1EEE);  // /* This is a comment  }
$error$
$end$
1420
 if (@r13 + 0n7 << @rsp << ~20 >> @r11 << 0n16 ^ @r8 << @rbx & @r12 & ~0x11 & @rbx ^ $ip >> ~--@r9 ; @r13 + 0n7 << @rsp << ~20 >> @r11 << 0n16 ^ @r8 << @rbx & @r12 & ~0x11 & @rbx ^ $ip >> ~--@r9)  { test_statement(0x12F7); }
$error$
$end$
1421
 if (@rbx >> 1 != @rbx >> 1)  { test_statement(0x704);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer ^ $thread | 0y10000 | $buffer <> @r8 | @r12 | $ip) ; } elsif (@r9 << $ip >> 0x11 >> @rsp(0n7 << @rdi >> $teb >> $proc & @rbp) { test_statement(0x41A);  // /* This is a comment   if (~0y100 > ~0y100)  { test_statement(0x1D98); } elsif (@r13 $buffer) { test_statement(0x1295); } else { test_statement(0x1D19); } } elsif ($buffer & $thread & @r11 | -@rbp ^ -@rdx($buffer & $thread & @r11 | -@rbp ^ -@rdx) { test_statement(0x1103); }
$error$
$end$
1422
 if (@rbp | @r13 & @rsp >> @rbp ^ 6 >> +@r9 & @rsp & @r9 ^ @rsi ^ @r10 | @rax >> @r13 | +$proc & @rbp | @rdx ; ~$thread + @r9 >> @rsp << @rsi ^ $ip << 0x8 & ~@r9 | @r10 & @rbx & @rbp)  { test_statement(0x336);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread & -5 ^ $thread | (+0) ^ $buffer | $buffer | $buffer ; $thread) ;  /* This is a not closed comment } else { test_statement(0x694); }
$error$
$end$
1423
 if ($buffer >> @r11 >> @rax >> @r11 & +@rsp << @r11 >> +($thread) & 0x9 >> @r11 | 0x6 & @r11 & @r13 & $thread ^ ~@rsp >> 2 & @r13 | (@rdx) >> @rsp ! +0x2 + $buffer << @rsi & @rbp >> @r11 >> @r11 & 0y1010 >> 0y1111 & @r9 & $proc)  { test_statement(0x21F8);  if (0y1001 & (~(@r10)) ^ $teb ^ $ip > @r13 & 0y101 | @r9 ^ 0n14)  { test_statement(0x81); } elsif (@r11 ^ 0x9 | -$proc ! @r11 ^ 0x9 | -$proc) { test_statement(0x1C0B); } elsif (@rax >< +@rsp) { test_statement(0x1191); } else { test_statement(0x266E); }  // /* This is a comment   /* This is a not closed comment  while  (@rdx(@r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif (0xE >> @r8 | @r12 >> @r8 ^ @r8 & +$thread < $buffer << @rbx) { test_statement(0x9CA); } elsif ($teb == $thread & $proc ^ $ip | $teb | (@rsi)) { test_statement(0x77F);  for (val = 10; @r10 | @rbx <= @r10 | @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  while  (@rbp = 10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif (@rsp | @rsi ^ @rsp | @r11 @rsp | @rsi ^ @rsp | @r11) { test_statement(0xB1F);  if (0y101(@r11)  { test_statement(0x2141); } } elsif (@r11 ^ @r12 | @rdx ! $proc) { test_statement(0x1324);  /* This is a comment */ }
$error$
$end$
1424
 if (@r9 | @rsi & 0xA >> (2) & @rdx ^ @r12 >> ~@rbp ^ @r12 & ~@rdx ^ 0n18 | 0n0 & @r9 | @rbp | @r13 ^ $teb | @rdx))@r9 + @r8 << ~0x8 | @r12 >> @r11 >> (@r10) ^ @rsp >> 0n4 & -$thread ^ 16)  { test_statement(0x2172); } else { test_statement(0x2305); @rax = @rsp ^ @r8 ; }
$error$
$end$
1425
 if (0xA + 0y1110 << @r8 >> 6 >> @rbp >> @rbx & @rdx << 0y1110 & @rsi >> 0y0 & @rsi & @rax ^ @rsp >> @rdi | -17 << $buffer >> -0x2 & ~@r8 & (@rbp) & ~$ip ^ @rax & +@rdx ^ $proc ^ 0n16 ^ @r12((0xA + 0y1110 << @r8 >> 6 >> @rbp >> @rbx & @rdx << 0y1110 & @rsi >> 0y0 & @rsi & @rax ^ @rsp >> @rdi | -17 << $buffer >> -0x2 & ~@r8 & (@rbp) & ~$ip ^ @rax & +@rdx ^ $proc ^ 0n16 ^ @r12)  { test_statement(0xB32); } elsif (6 & @r12 & $buffer & (0x7) | @rdx | @rbp & @rbx ^ @r13 ^ $buffer | 0y1(@rdx | @r11 >> +$ip & 17 | ~$teb ^ @rax ^ $thread) { test_statement(0x84E);  /* This is a not closed comment  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
1426
 if (@rdx + $ip << $ip << @r8 & @r9 << @r13 >> $thread >> @r11 | @r10 << (@rax) & +@r12 & @r13 & @rbp ; $thread + 3 << $buffer >> 0n18 & @rsp << -+@r10 & +@rbp & +13 | @r10 << @r10 & @rbp & +0y10011 & @r11)  { test_statement(0x3D4); val = @rbx ^ $ip ;  while  (@r12 = @rsp ^ @rsi | 0n7 | $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rsp >< @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 << $ip >> @rax >> @rsp ! @r11 << $ip >> @rax >> @rsp) { test_statement(0xC79);  /* This is a comment */ } else { test_statement(0xBB9); ;  break;  // /* This is a comment  }
$error$
$end$
1427
 if (@rsi << @rdi >< @rsi << @rdi)  { test_statement(0x1751);  break;  if (+@r9 ^ @r13 < 0x4 ^ @rsp | @r8 | @rax)  { test_statement(0x1806); } else { test_statement(0x1E9E); } } else { test_statement(0x651);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11))@r11) ; }
$error$
$end$
1428
 if (@rbp << @rsp << @rdx ^ @rdx | 0n3 >> @r10 <= @rbp << $teb << @rbx)  { test_statement(0x11C0);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx & @rdx ^ @rax | (0y10000) ^ @rdx))@rax) ;  while  (@r12 ^ ~$thread | @rsp | $thread)@r12 ^ ~$thread | @rsp | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 << @r12 & $ip)@rbp >> @r8 >> @r11 & (@rbp) ^ 21 ^ 0y10000 ^ @r13) { test_statement(0x149F);  for (; @rbx ^ $proc)@rbx ^ $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; $thread == $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = 4 | @r12 ; } else { test_statement(0xF7A); }
$error$
$end$
1429
 if (@rdx >> -$proc >> $ip & -$buffer << @rbx >> (~@r11) @r11 + $proc & @r13 << 0n8 & @rdx >> -@r9 & @r9 ^ $teb >> $proc ^ $thread >> @rdi & $proc ^ @r11 & @rax ^ @r10 | @r11 << @r9 >> 0n4 >> @rax & @rsp >> @rax & 4 ^ -@r8 >> 6 & @rdi & $proc ^ ($buffer))  { test_statement(0xAE5);  if (@rax & 0xB >< @rax & 0xB)  { test_statement(0xCA6); } elsif (@r9 | ++$teb > @r9 | ++$teb) { test_statement(0x1721); } elsif (@r13 <> @r13) { test_statement(0x1949); } } else { test_statement(0x1FE4); }
$error$
$end$
1430
 if (~$thread + -@rsp & @r8 << $teb >> @r12 >> @rax ~$thread + -@rsp & @r8 << $teb >> @r12 >> @rax)  { test_statement(0x2493); } else { test_statement(0x6B3);  /* This is a not closed comment }
$error$
$end$
1431
 if ($proc << @r12 << ($buffer))$ip + @rdi << -$buffer << ~@r13)  { test_statement(0x1396); } elsif (@rsi | @r8 >> $proc & @rdx ^ $teb & -0n11 >< @rsi >> $thread & $teb >> @rbp & $buffer & @r10) { test_statement(0xB00); } elsif (12 >> @r9 & +@rbx ^ ~@rsi ^ ~$ip | @rdi & $ip @rsi & @r12 & @rbx | @r9 & @rbp ^ @rsp | 0n6 ^ @rsi) { test_statement(0xAFF); } elsif ($teb & 0y111 | 0x13(~$teb ^ @rdx | (@r13) ^ @r8) { test_statement(0x1118); @rax = ~@rdx | @rsi ; ;  break;  This is a not opened comment */  This is a not opened comment */ } elsif ($thread ^ @rbp | $proc | @r12(($thread ^ @rbp | $proc | @r12) { test_statement(0x926); ; }
$error$
$end$
1432
 if (@r10 + @rbp << 0n9 << @r12 & @r12 >> @rbp >> $ip | @rsp << @r8 >> +$proc >> $proc ^ @r12 & $ip & @rdx >= @r11 << 0n6 << @r10 >> 23 << @r11 >> @rdi >> $teb & 5 << @r13 >> @r13 >> $ip)  { test_statement(0x4B9); } else { test_statement(0x2150);  while  ($proc ^ @r9 | -@rsp | @r9 ! $proc ^ @r9 | -@rsp | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0xD | $thread)+(@rdx) | @r10) ;  // /* This is a comment   break; }
$error$
$end$
1433
 if (@rsp + @r11 << @rax << --@rdi >> @rsi & -@r11 >> 23 & $thread >> @r9 & @rdx | @r13 ^ +~$buffer >> @rax & @rdi ^ @r12 & @rax | -$ip >> $teb & 0n17 ^ @rdi ^ @r9 ^ $buffer | @r9 | $thread = 0n10 << @r8 >> @rbp << @rdx | @rax << @r13)  { test_statement(0xCE2);  break; } else { test_statement(0x2345); }
$error$
$end$
1434
 if (@rsi >> $teb << @rbx >> $teb ^ 0y1110 ^ @rbp >> @r13 & $proc & @r8 ^ 22 & @rdi ^ ($teb) ! 1 >> @rsi << @r10 >> -$proc >> @r8 ^ $buffer << ~@rbx >> $ip >> @rdx & 0x10 ^ @r9 >> $ip & $teb ^ @rsi ^ @r10)  { test_statement(0xA3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (-((-0y100))) & @rdi | 0x1 < @rdx ^ @rbp ^ @rbx | 10 ^ @r13 | $teb) ; } else { test_statement(0x24C1); }
$error$
$end$
1435
 if (@r12 >> +@r12 << @rdi & @r13 >> @rbp >> 0y110 & @rsp ^ @r13 << $teb >> $ip & -$ip & @rbp | $teb >> @rdx >> @r12 & @rdi >> @r11 & 0xD & @rsi ^ (@rbx) & @r13 | @rax ; @r12 >> +@r12 << @rdi & @r13 >> @rbp >> 0y110 & @rsp ^ @r13 << $teb >> $ip & -$ip & @rbp | $teb >> @rdx >> @r12 & @rdi >> @r11 & 0xD & @rsi ^ (@rbx) & @r13 | @rax)  { test_statement(0xC94);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip & 0n11 ^ 14 | @rbx ^ @rbp | ~@rsp ; @rdx ^ @rbp | 14 | @rbp) ;  if (@r12 == @r12)  { test_statement(0x20FB); }  for (val = 10; @rdi < @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (0x3 @rsi)  { test_statement(0x130B); } else { test_statement(0x77F); } } elsif (@r11 >> @r12 | @r12 >> @r13 & @rax & $thread ^ $buffer & @rsp ^ @rsi ^ $ip | ($thread) ^ $teb ^ +@rax | @rsi ^ $buffer | @rdi >< @rsi >> @r9 >> @rbx ^ @rbp ^ @r8 ^ @rdx) { test_statement(0xA9E); } elsif ((@r12) & @r11 ^ 4 & @rbx | -@rbx & $thread))@rsp) { test_statement(0xAB4); }
$error$
$end$
1436
 if (~-2 + @rbx))@r13 + @rsi & 0x3 << $thread >> @r10 >> @rax ^ $thread << @r8 >> @r9 | 0xA >> @rax >> 0xA)  { test_statement(0xCB2); } elsif (@rdi << @r8 >> @rsi >> $proc | $proc >> $proc & 0n3 | $teb ^ 0x12 ^ $buffer | +$proc ^ 0n16 | $proc >< @r13 | @r10 & $proc ^ 17 & @rdx | @rdx ^ 0n15 ^ @r12 | @rsi ^ @rdx | 0x11 | (-@rdx)) { test_statement(0x35E); }
$error$
$end$
1437
 if (@r13 ^ $ip << @r12 & @r12 >> @r13 & 0n6 | $ip << @rbp >> +@r10 >> $teb & 0n1 >> $ip & @rbx(@rsi + @rdi << $teb ^ @rbx << $buffer ^ @r8 >> @rbx & 0n16 & @rbx | ~@rsp >> @rsi & @rdi >> 0n13 ^ $teb)  { test_statement(0x1021);  break; } else { test_statement(0x201A); }
$error$
$end$
1438
 if (@r8 << @r10 & @r8 << +$buffer >> (@r10) >> @r10 & @r8 >> 7 | @rbx << @r8 >> @r13 ^ 0n0 ^ $ip & (0x5) $buffer << -@rbx << @rdx)  { test_statement(0x817);  /* This is a not closed comment @rax = +@r10 & @rbp ;  break; } else { test_statement(0x94); }
$error$
$end$
1439
 if (@rdx + +@rbp << 0xF << -@rax & 2 << $thread >> @rsi >> $proc & ~@rbp >> $teb & (@r13) >= @r9 >> @rbx >> @rdi | @r8 << 0x11 >> 0xA ^ +@rax >> @r10 & @rbx & @rbp | @rax >> @rbp & @rbp | @r13 ^ $thread | 1 ^ $proc)  { test_statement(0xA); ;  for (val = 10; @rdx | -@r8 | @rsp ! @rsi ^ @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | $thread > $proc) ; }
$error$
$end$
1440
 if ($ip << -$proc >> @rdx >> $buffer & @r10 & ~@rbp >> 23 & 0n1 ^ @r11 | $buffer | +@r12 & @r8 <> $ip << -$proc >> @rdx >> $buffer & @r10 & ~@rbp >> 23 & 0n1 ^ @r11 | $buffer | +@r12 & @r8)  { test_statement(0x176F);  for (val = 10; 0y1000 & @r12 ! 0y1000 & @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x11 << $thread >> @rbp & ~@r12 & (12) & $thread ^ 0n7 >> @r10 & $proc >< @rax | @r9 >> @r10 ^ ~@rdx & @rbx) { test_statement(0x1F4D); } else { test_statement(0x86A); }
$error$
$end$
1441
 if (@r11 | @rbp << $ip >> $ip ^ $buffer >> ~@rsi ^ @rdi & @rsi <> @rbx << @rsi & 0xF << @rdx >> @rsi & $thread ^ 13 << $buffer | @r8 << 11 >> -@r12 & @rsi >> 0y10011)  { test_statement(0x2579); ;  This is a not opened comment */ } elsif ($ip << $ip >> 5 ; $ip << $ip >> 5) { test_statement(0xFCC); } else { test_statement(0x253F); }
$error$
$end$
1442
 if (0y1001 & @rsi >> $proc >> $proc +@rdx << @r12 | @rdi << 0n3 >> @r11 & +@rax >> $buffer ^ $teb ^ $buffer & 0y10010 | $proc ^ @r11 ^ ~@rax ^ 0y1)  { test_statement(0x4FD); ; }
$error$
$end$
1443
 if (@r11 + @r13 << -@r13 >> @rax << @r8 & @rbx << (@rbx) ^ ~+$proc >> +~0n7 & ~(5) & @rdx | $proc << @r11 & $thread >> 0n13 & @rbx & @rax ^ $thread >> @r8 & @rsp & @r12 ^ @rdx & (@r9) ^ 16 ^ ($teb) == 4 << ~@rdi >> @rdx >> @rax >> @r12 & $ip << +-(0y1000) >> 0y1010 & @r12 & 0y1111 & 15 ^ 0x2 << @rdx | @r8 >> @r8 >> @r9 | $ip >> @r11 | @rdi ^ 0x6)  { test_statement(0x21F9); } elsif ((@rsi) & @r11 >> @rsp ^ @r13 >> @rsi & 0y1101 <> 0n19 << @rsp & +$buffer) { test_statement(0x1165); } else { test_statement(0x1D70);  This is a not opened comment */  if (@rax | @rax((@r13 | $teb)  { test_statement(0x5D7); } val = +@rdi ; val = @rbp ; }
$error$
$end$
1444
 if ($thread << ~$teb ^ @rax >> @rbx ^ $ip & @rbx & @rbp ! $thread << ~$teb ^ @rax >> @rbx ^ $ip & @rbx & @rbp)  { test_statement(0x943); }
$error$
$end$
1445
 if (0y110 + @r9 >> @r9 & 0n15 ^ +@rsi & 0y10001 ^ $ip >> $teb & @rbx & @rdx))0y110 + @r9 >> @r9 & 0n15 ^ +@rsi & 0y10001 ^ $ip >> $teb & @rbx & @rdx)  { test_statement(0x879);  /* This is a comment */  // /* This is a comment  } elsif (@r10 >> 20 > 0y111 << +@r9 >> (20) & @rbx >> 0n14 & ~((0x10)) & @r13 | @rbx & $proc ^ @rbp ^ +@rsp | ~$ip) { test_statement(0x1BC8);  This is a not opened comment */  /* This is a not closed comment } else { test_statement(0x146A);  if (0n8 ^ $proc | 0n10 | @r9 > +@rbp)  { test_statement(0xFCB); } elsif (~21 | @rsp(@rsi) { test_statement(0x1C22); } elsif (@rbx ! @rsi) { test_statement(0x15BB); } else { test_statement(0x224C); }  for (val = 10; @r10 | @r13 ! 0x6;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1446
 if ($teb + 0n13 << @r12 & (3) << @rbx >> 0n8 ^ 0xC & @rax | @r13 << (@rbp) & @rbp ! @rdx >> @rsp >> $proc & @rax ^ @rdx << $proc >> @rsp | 3 ^ @rsi | $proc ^ @r11 | (@r10) ^ @rbx | $teb)  { test_statement(0x216D); } elsif (@rbp ^ 0x0 >> $ip | @r8 & @r12 & @rsp ^ ~(+~@rbp) | ~@rsi & (@rsp) < @rbp ^ 0x0 >> $ip | @r8 & @r12 & @rsp ^ ~(+~@rbp) | ~@rsi & (@rsp)) { test_statement(0x2462); } else { test_statement(0x20CE);  break; }
$error$
$end$
1447
 if ($thread << $buffer ; $proc + @r10 ^ ~0y1101 >> $buffer >> $proc | @rsp & @r9 | @r11 >> @r10)  { test_statement(0x242A); @rax = @rdi >> @r10 & $thread & $thread | @rax ^ @r9 ^ @r12 ;  // /* This is a comment   This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 != 0y100) ; }
$error$
$end$
1448
 if (-@r9 << @r9 >> @rdi & @rbx >> $proc & @r9 >> @r9 ^ @r11 << @rbp >> @rdx >> +$proc ^ $ip(-@r9 << @r9 >> @rdi & @rbx >> $proc & @r9 >> @r9 ^ @r11 << @rbp >> @rdx >> +$proc ^ $ip)  { test_statement(0x85E); }
$error$
$end$
1449
 if (@r9 + 0y1110 << $ip >> @rbp << @r13 >> @rsi >> @r12 & 0y1 << 0y100 >> @rsp)@r12 + @rdi >> @rax ^ (@rax) << $teb >> $ip >> -@r12 & @r12 >> $buffer ^ @rdi & @rbx & (0y1100))  { test_statement(0x832); }
$error$
$end$
1450
 if ($thread + @rsp << @rdx << 0y1000 >> +@r11 >> @rsi | @r10 >> $teb & +@r13)$thread + @rsp << @rdx << 0y1000 >> +@r11 >> @rsi | @r10 >> $teb & +@r13)  { test_statement(0x17B4);  break;  for (@rax = @rdx; @rsp | @rsi >< @r10 ^ $ip | $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1451
 if (@r8 >> @rsi << @r8 >> $buffer >> @r8 ^ @rbp ^ 0xB >> (@rax) & 0n13 & 20 ^ @r13 & $proc | +$proc << @r12 & @r11 & ~$ip ^ +@r10 & @rdx & @rdx ^ @rbp & @rdi < 22 >> @rdx & @rbp << ~@rax | 0x10 >> 10 >> -@rsp ^ $buffer ^ @rdx & $proc ^ @rsp)  { test_statement(0x17D2); } elsif ($thread << -@r11 ^ 0y101 >> ~@r8 | $proc & $buffer & (@rbp) | ~$teb & 0y1011 | @r13 ^ @rbp >= -@r12 >> @r10 | @rax >> $teb & 15 & @r8) { test_statement(0x8CF);  This is a not opened comment */ } elsif (0y1 & -$ip & @rax < ~@rsi >> +@rdi & @rdi & @r8 ^ $thread & 0y1011) { test_statement(0x26B1);  for (val = @rsp; $teb >< @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (17 & @rax | @r9 | @rbx | $thread >< (@r13)) { test_statement(0x5FB);  break;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx <= ~@r11) ; }
$error$
$end$
1452
 if ($teb + @rbp >> @r13 >> -@r11 & 0x4 >> @rax ^ $proc ^ @rbp ^ @r13 & ~@rbp ^ 3 ^ $buffer <= $teb + @rbp >> @r13 >> -@r11 & 0x4 >> @rax ^ $proc ^ @rbp ^ @r13 & ~@rbp ^ 3 ^ $buffer)  { test_statement(0x11D2);  // /* This is a comment   // /* This is a comment   This is a not opened comment */  // /* This is a comment  @rax = (0) ; }
$error$
$end$
1453
 if (@rbp << +(@r10) << @r9 & @rax << ~(@r10) & @rbp >> @r12 ; $thread << (@r13) << @r11 >> @rbp & ($teb) << @rax & @r9)  { test_statement(0x1A28); } elsif (@rdi << @rsp >> $ip >> @r8 & @rsi & ~~@r9 = @rsi << @rdi >> @r9 | +@rdx ^ $proc & @rsi ^ @rsi) { test_statement(0x14B0); }
$error$
$end$
1454
 if (0y1101 ^ $ip >< +@rbx << @r11 << @rbp | 0xC & $ip ^ @rsp | $buffer ^ $proc & 11 ^ @r11 ^ $thread | @r10 ^ @rbx)  { test_statement(0x1A31);  if ($ip ^ @r10 = @r13)  { test_statement(0x2198); } elsif ($buffer ^ 4 | $proc <= @rdx | @r8 | $buffer) { test_statement(0x814); } elsif (15 | $thread > $teb | @r10) { test_statement(0x1C5E); } else { test_statement(0x1669); } } else { test_statement(0x55B); }
$error$
$end$
1455
 if (0y10 << +@rsp >> $teb ^ 0y110 >> +0x7 >> @rdi & $thread >> @r11 | 22 & @rsi | 0y1000 >> 0x5 ^ @rsi & $thread ^ @rsp | $buffer & @r8 ^ $buffer((0xE + @rdx << @r9 >> 0y1100 << @r13 ^ @rsi << $proc ^ @r12)  { test_statement(0x11ED); } else { test_statement(0xA1); }
$error$
$end$
1456
 if (0n15 + 0n2 << @rax << @rbx ^ $buffer >> @r9 <> 0n15 + 0n2 << @rax << @rbx ^ $buffer >> @r9)  { test_statement(0x871);  /* This is a not closed comment  // /* This is a comment   break; } else { test_statement(0x131D); ; }
$error$
$end$
1457
 if (0xF + @rdx << @rax | $buffer << 0n17 ^ ~@rdx >> 0xB @rbp + @r11 >> $proc << ($buffer) | @rsi << @rsp & @r11 >> 0n8 & $teb ^ @r12 >> 23 ^ 0y1110 & @r9)  { test_statement(0x11BA); @rax = (@rsi) >> @r11 & +0x10 & 0y1101 | @rdi ;  if ($ip ^ $proc(@r8 ^ 0x0)  { test_statement(0x87B); } elsif (0xE))+@r9 | @r9) { test_statement(0x10BA); } } else { test_statement(0x1663);  while  (~0x13 ^ @r9 | @r13 >= @rdx ^ 0y0 | (~@rbx))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
1458
 if (@rdi << @r9 << @rdx >> @r11 << 0n5 >> @rsp ^ ~+$proc & @rax <= @rdi << @r9 << @rdx >> @r11 << 0n5 >> @rsp ^ ~+$proc & @rax)  { test_statement(0xFAD); } elsif ($ip << @r11 ^ 6 & @rbx > (@rsi) & 0x8 | +$buffer >> @rsp & @r11 ^ 0y100 ^ 0y10010 ^ @r13) { test_statement(0x1472); } elsif (@rdx ^ 0y11 | @r12 & @rbx))@r12 >> $ip & @r13 ^ @r12 & ($thread) | 10 & 0n6 | @rsi ^ @r12 | $ip | @r8) { test_statement(0x1788);  break; @rax = -$teb | $teb ; } elsif ($teb & @rsp ^ @r12 <= 0n13) { test_statement(0x431); } elsif (@r13 | @rbx ! -@r8) { test_statement(0xE6B); } elsif (@rax | $ip > $teb) { test_statement(0x282);  while  (@rbp = @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  if (2 <= 2)  { test_statement(0xFDB); } } elsif (@rsi <= 14) { test_statement(0xC70); } else { test_statement(0x2337);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~$proc ^ @r13 | 0 | @r13((~$proc ^ @r13 | 0 | @r13) ; }
$error$
$end$
1459
 if (~@r11 + $teb >> @r13 & @r12 << (@rdx) & $buffer >> 23 & @rsi ^ @r12 << @r9 >> @rsi >> 0x13 & @r13 & @rsi & 0y1111 ^ @rax >> @r11 ^ @rbx & @rbx > @r13 + 10 & $teb ^ $buffer)  { test_statement(0xE56); }
$error$
$end$
1460
 if (@r11 + @r13 << @rbp >< 17 + (0n14) << -$ip << @r12 | @r9 << @rbx >> @r8 & -@r9 & $teb & $teb ^ @rax ^ @rsp & 0y11)  { test_statement(0x204B); } else { test_statement(0x2298); }
$error$
$end$
1461
 if ($ip + @rbp | -@r12 << @r11 ^ 0n18 & $teb & @rsp ^ $thread & @r9 | @r8 & @rdx & $teb | @rax & @r11 | @r12 | @r11 | $ip $ip + @rbp | -@r12 << @r11 ^ 0n18 & $teb & @rsp ^ $thread & @r9 | @r8 & @rdx & $teb | @rax & @r11 | @r12 | @r11 | $ip)  { test_statement(0xEE6); ; }
$error$
$end$
1462
 if (@r11 + (@r10) << @rsp << @rsi >> 0x0 & ~@rbp & $ip >> @r12 & (@rax) | @rsi << $buffer($teb + @r9 << @r13 ^ $buffer << @r9 ^ $thread & @rbx ^ @rbx & -0x9)  { test_statement(0x22F7);  while  (+(14) & @rax ^ @r11(@r9 & -@rdx ^ 0y10001 | @rdi ^ @rsp | @r13 | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x9AF);  // /* This is a comment  }
$error$
$end$
1463
 if (0x8 << @rbx ^ @r13 >> $buffer >> 0y0 & @rbp & @rdx ^ 7 >> $ip & $proc ^ @rdi ^ 0y111 ^ ~@r10(0x8 << @rbx ^ @r13 >> $buffer >> 0y0 & @rbp & @rdx ^ 7 >> $ip & $proc ^ @rdi ^ 0y111 ^ ~@r10)  { test_statement(0x158F); } elsif (@r11 & $thread & @rdi & @rdi | 0y0 >> 0y110 ^ @r12 & $thread ! 0y10 & 0x5 >> @r9 & @r11 & 0 ^ @r9) { test_statement(0x18EF);  // /* This is a comment  ; } elsif (@rbp >> 0n12 & @rdi & 0y10 ^ 20 ^ 0n8 | $buffer & @r13 ^ @rax))$thread & @r11) { test_statement(0x8CE); }
$error$
$end$
1464
 if (@rbx ^ @rbx << 0n12 | @r9 << +0xE >> @r13 >> @rbx & $proc & @rsi & $proc ^ ~0n7 >> 0n12 & $buffer & (@rbx) | @r9 >> 0n2 ^ $proc & @r10 ^ @r10 ^ 0y1 != @r11 + @rbx << +~+$ip)  { test_statement(0x51E); } elsif (@rbp & 0xA >> @rdx | @r10 > @rbx >> $buffer >> @r8 & 0x1 & 2 & -$thread) { test_statement(0x7F1); } elsif (@rax >> 0x0 & @r13 & @rsi ^ 5 ^ 0y1110 | $proc & @r13 != @rax >> 0x0 & @r13 & @rsi ^ 5 ^ 0y1110 | $proc & @r13) { test_statement(0x5BE); ; } elsif (@r8 ^ 0n5 ^ $teb > @r12 & @rax) { test_statement(0x1E8F); } elsif (@rsi ^ @rdx)@r10 ^ 0n18 | @r11) { test_statement(0x7B3);  /* This is a not closed comment }
$error$
$end$
1465
 if ($ip + $teb << 7 << 0y1 & @rbp << ~@r8 >> 0n5 & $thread >> @rax(($thread >> @rsi >> $thread >> $proc ^ +$proc << @r13)  { test_statement(0x1FA9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx & 0n4 ^ @rsi ^ @rax))$thread ^ 0xF) ; } elsif (@rdx << @rsp <= @rdx << @rsp) { test_statement(0x20E4);  // /* This is a comment   // /* This is a comment  } elsif (@r8 | @r8 = @r8 | @r8) { test_statement(0xD17);  for (; @rbx < 0;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 > ~@rdx & @r8 ^ ~0y10010 ^ ~$teb | 0y101) { test_statement(0x10C4); } else { test_statement(0x1E13); }
$error$
$end$
1466
 if ($proc >> @rsi >> @r8 & $ip << -$teb >> (@rbx) >> @r10 & 0x10 >> $ip ^ @rdi ^ $ip ^ @r10 ^ -@r13 | 0n18 | @rsi >> @rbx & 0n17 & @r9 ^ 0n18 | 0n10 & @rax | ($ip) | @rbx(@r12 + @rsi << 0n9 & @r12 ^ @r11 ^ @r12 ^ @rdi ^ @rsi | @r9 ^ $proc ^ @r13 ^ +@r12 | 0x10 >> $proc)  { test_statement(0x13EB); } elsif ($proc ^ $teb >= $proc << $teb >> @rbp & @r12 >> $ip | $thread >> ~@r9 & $thread & @rax ^ $teb & +@rdi | $ip & @rsi ^ @r11 ^ $proc) { test_statement(0x13CA); } elsif (@r13 >> @r13 & (@rdi) ! +@rbp ^ @rsp & @rax ^ @rbx ^ @r12 | (-@r12) & -@r12 | @r10 | @r10) { test_statement(0x23BF); } else { test_statement(0x251); }
$error$
$end$
1467
 if (0y1101 >> @r12 & @r12 << ~@rbx & @rsp & ~@r10 & $buffer))@r12 + @rsi >> $thread << $proc ^ $teb << @r8 & @rax & 0y110 & @r13 ^ 20 >> $ip | 0x9 >> 1 & @rbp >> $ip & @r13)  { test_statement(0xEDB); } elsif (~@rax << $proc >> $ip ^ @rsi >> @rbp | @r13(~@rax << $proc >> $ip ^ @rsi >> @rbp | @r13) { test_statement(0x25A7); }
$error$
$end$
1468
 if (0y1011 + @rsp >> @r12 ^ +-$teb << $teb >> @rdx <> @rdx >> -$thread & -~@rdi ^ 17 << @rbx & +@r12 & @r10 & (0x12) | 0x7 >> 0n17 >> @r13 ^ ~0n16 >> @r11 ^ @rbx)  { test_statement(0xCDE);  This is a not opened comment */  if (@r10 <= $proc | -$thread | 0n8)  { test_statement(0x1885); } elsif (@r11 ! $thread) { test_statement(0x1CF8); } elsif (@rdx <= @rdx) { test_statement(0xCC5); } else { test_statement(0x1210); } ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 != @r11) ; } elsif (@rbp << $ip & 21 ^ @r8 & $thread & @rax ^ @rbx ^ @rdx ^ @r11((@r13 & @rdi & @rsp & @rsi | $buffer | $proc | ~20 | $ip) { test_statement(0x409); } else { test_statement(0x2333); }
$error$
$end$
1469
 if ($buffer << $ip >> +@r8 & $teb >> $buffer >> @rbx ^ 0xC << $proc | @rdx << $thread >> 0n9 | @r9 != $buffer << $ip >> +@r8 & $teb >> $buffer >> @rbx ^ 0xC << $proc | @rdx << $thread >> 0n9 | @r9)  { test_statement(0xAD1); }
$error$
$end$
1470
 if ($thread + @r9 >> @rdi << @rbx >> $ip & @rsi << 1 & @rdx >> @rbp & -@r12 ^ @rbx << @r10 >> +$buffer & @r8 >> @rax)$thread + @r9 >> @rdi << @rbx >> $ip & @rsi << 1 & @rdx >> @rbp & -@r12 ^ @rbx << @r10 >> +$buffer & @r8 >> @rax)  { test_statement(0x1BE9); } elsif (($thread) << 0n17 >> ~@r10 & @rsi >> $teb & 0x8 & +~$thread ^ @r8 >> @r9 | (@r10) >= $ip << @rdx & $buffer >> 0n19) { test_statement(0x1DCC); }
$error$
$end$
1471
 if ($thread + $buffer << @r12 >> -$thread << $thread & $proc & @rsp <= $ip << -@rdx & ~@rdx >> @r11 & @rdx)  { test_statement(0x80C);  for (; @r9 & (@rdi) ; @r13 & @rbp ^ @rsp | $teb ^ (@rbx);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   while  ($proc = (+-@r9))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x30E);  This is a not opened comment */ }
$error$
$end$
1472
 if (@r12 + ~@rsi << @r11 << @r10 & @r11 << @rdi & 0n2 ^ $ip >> 5 >> @rdx ^ @r12 & ~@rbx((@r11 << @r10 << ~@r13 ^ @r9 >> 0n11 ^ 0y110 >> @rdx | $ip << @rdi | 16 >> 13)  { test_statement(0x2015);  This is a not opened comment */ } elsif (@r12 & @r8 ^ $teb >> @rbx ^ @r10 & 0x9 | @r13 | @rbp ^ @rsi ^ $thread > @r13 << @rax & @rdx & 0n5 & $buffer | @rax >> @rdi & $ip ^ @r12 | (@r11) & $thread ^ @r9) { test_statement(0xE01);  This is a not opened comment */  for (val = @rbp; (@r13) | @r11 <> (@r13) | @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   if (@rbx != (0n14))  { test_statement(0x1FB3); }  /* This is a comment */  break; } elsif (~@r10 >> @rdi & @r8 & @r9 ^ $ip & @rsp ^ @r13 | $ip((+-(@r9) ^ @r12 & @rsi | $proc & $buffer ^ @rdx) { test_statement(0x3A8); } elsif (-~$proc | @r12 <= 0xB ^ @r8 ^ 0y10001 | @rdi) { test_statement(0x1C1F);  if ($buffer <> $thread)  { test_statement(0xBBB); } elsif (@rax ! 14) { test_statement(0x223A); } elsif (@rbx != @r10) { test_statement(0x19A0); }  for (; @r12((0y1110;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  // /* This is a comment  } elsif ($teb ^ @rax | 1 | $ip))+$teb ^ @rsp) { test_statement(0xC5D); }
$error$
$end$
1473
 if (((@r11)) + @rdx >> @r12 << @r11 & @rbx >> $buffer >> 11 ^ 0n7 >> @rax >> $teb & @r8 >> @r13 ^ @r13 ^ $buffer ^ 0y1100 == 0n13 + $thread << @rbp)  { test_statement(0x1F37); ; ;  while  (~+@r11 | -@rsp ~+@r11 | -@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rax ; } else { test_statement(0x1A5D); }
$error$
$end$
1474
 if (@rsi << --$proc << @rbp >> $ip & @rbx << @r11 & @rsi >> @r8 <= @rsi << --$proc << @rbp >> $ip & @rbx << @r11 & @rsi >> @r8)  { test_statement(0x17B1);  This is a not opened comment */ } elsif (@r11 & @rsi ^ @r13 >> @r10 | $thread >> (@r10) & @r13 & $proc | @r11 ^ @rsi ^ @r11 | 1 | $buffer | @r13 <= ~$teb & @rbp) { test_statement(0x1045); } elsif (@rbx & (-@r12) & $buffer ^ ($thread) & @r11 ^ @r8 >< 0y10 >> $thread ^ @rsp & $buffer | -@r12 ^ $buffer) { test_statement(0x22E4); } elsif (@rax & @r12 ; @rax & @r12) { test_statement(0xCCB);  This is a not opened comment */ } elsif (0y1110 != @rdi) { test_statement(0x58D);  /* This is a not closed comment } else { test_statement(0x1372); }
$error$
$end$
1475
 if (@r11 ^ @rsp << @r9 & @rdx >> @rsp | @r11 << @r11 >> (@rax) & ~+@r12 >> @rdx & +0n5 & +-@rsp | @rdx & 1 & 0x11 ^ @rsi & @r8 @rbp ^ @r8 << 0y1000 >> @rdi >> @rbx)  { test_statement(0xB42);  // /* This is a comment   break;  /* This is a comment */ } elsif (@rdi << -@rbp & @rsi(@r13 << @r8 >> @r10 ^ @r12 >> $ip & $proc | @rsp >> @r13 & @rsi ^ (@rdi) ^ @rsi | $ip) { test_statement(0x16EB);  break; } elsif (0y1011 ^ 0n0)0y1011 ^ 0n0) { test_statement(0x1048); } else { test_statement(0xB40); }
$error$
$end$
1476
 if (@r12 ^ 0n18 >> @r10 >> @rdi & @r10 & 0y11 & @rsi ^ 15 | @rsp & -@r8 >> +@rax ^ $buffer >> -@rbx ^ @rbx | 16 >> @rax & $ip ^ @r8 | +@rdx ^ @r11 = @rax + @rdx)  { test_statement(0x118C); } elsif ($thread << 0n9 >> @rax >> 2 & @rsi >> $proc ^ $teb >> 0y1110 ^ @r12 | @rax & @rdx & @rsi | 0y111 & @rbp = @rdx | @r11 >> $thread & (@r11)) { test_statement(0x853); } elsif ($teb >> 0n11 & $ip & $teb >< 0x10 & @rax | @rsp ^ (@r12) ^ $ip) { test_statement(0x1684); }
$error$
$end$
1477
 if (@rbx + ~+@r9 << $proc >> @rax >> 0x9 >> 0x5 ^ $thread << 13 & @rax ^ @rbp >> @r10 ^ 0n17 | @rax & @r13 & @r12 & ($ip) ^ @r10 & @r9 & $thread | 0n12 & 0n19 ^ $proc ^ $proc ^ @r13 <= $teb + @rax >> @rbp << @r10 >> @r13 & $ip << $proc >> $ip & $ip >> @rbp & (0xC))  { test_statement(0x2232);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx ^ @r13 ^ $teb > @rdx & @rdx ^ @r8 ^ $buffer) ;  // /* This is a comment  } elsif (@rax << @r12 >> @rdi >> +@rbp & @rsi >> @rsp & $buffer & -$ip(@rax << @r12 >> @rdi >> +@rbp & @rsi >> @rsp & $buffer & -$ip) { test_statement(0x1051);  if (@rbp | $thread | 0n7))@r12 ^ @rsi)  { test_statement(0x246A); } elsif (~0n2 | @rbx != @rsi | $ip) { test_statement(0x72E); } elsif (@r10 < $proc) { test_statement(0x18B4); } } elsif (@r12 & @r9((@rdi & @r12 ^ @rbp & 0x12 ^ @rsp | @r11 & @r12) { test_statement(0xA57);  /* This is a comment */ } elsif ($thread ^ @r11 0n12 & @r8 | $buffer) { test_statement(0x253B); } elsif (@rsi >< @rsi) { test_statement(0x1E69);  if (@r12 <= $teb)  { test_statement(0x117B); }  // /* This is a comment  } elsif ($proc | $ip($thread | @r9) { test_statement(0x57C); } else { test_statement(0x9E6);  /* This is a comment */ }
$error$
$end$
1478
 if (@rbp + $thread << @r9 << @rsp ^ @rax >> 0n16 & @r10 ^ 0n5 >> @rbp & $teb & $thread ^ $proc ^ $proc ^ @r12 | @rbx >> +@r8 >> 0n16 & -@r10 >> 0y10000 ^ @r12 ^ $proc | 0y101 >> -$teb ^ $teb ! @rbp + $thread << @r9 << @rsp ^ @rax >> 0n16 & @r10 ^ 0n5 >> @rbp & $teb & $thread ^ $proc ^ $proc ^ @r12 | @rbx >> +@r8 >> 0n16 & -@r10 >> 0y10000 ^ @r12 ^ $proc | 0y101 >> -$teb ^ $teb)  { test_statement(0x773); } elsif ((@r13) << $thread >> 16 >> @r13 & 12 ^ @r8 >> @r8 & @r12 & $proc ^ @rbp ^ @rsi | $thread ^ 0x8 | 0x4 & 0y101 | @rsp($thread << $ip ^ @r10 >> $buffer & 0y1011 | -0n16 >> @r10 | $thread & @r12) { test_statement(0x19C9); } elsif (@rsp >> (@r11) & $ip & @r12 ^ @r10 & 3 ^ $thread | 23 & 0x8 ^ $buffer | $proc $ip) { test_statement(0x1C8C);  /* This is a not closed comment  /* This is a not closed comment } else { test_statement(0xDF5);  /* This is a comment */ val = 12 ^ @r8 | 0y1101 | $teb ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx != @rbx) ;  while  (@rbp > $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rbp = @r12)  { test_statement(0x1992); }  break; }
$error$
$end$
1479
 if (0y10000 << -@r8 >> @rsi & @r11 ^ @rsp << --@r8 >> @r11 | @rsp << 0x5 >> @r12 & @rdx >> +@r10 & @r8 ^ @rbx & $ip ^ $ip & @r12 ^ $ip))(@rbp) + @r10 ^ @rdi << -$teb >> ~@rdi >> -$buffer & @r9 & (@r9) ^ $buffer ^ @rsp ^ (0n11))  { test_statement(0x2551); } elsif (@rsi << @r8 >> @r9 >> @rbp ^ @rbx ^ @rdx & @rsp))$proc << (@r10) >> $ip >> @r9 ^ @rsi & ($buffer) & ~0n12 ^ $ip & @r11 | @r10 >> $thread & $ip) { test_statement(0x1C01);  // /* This is a comment   for (val = 10; 0y100))@rdx | +@rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (0n6 >> 0xB ^ 3 & @rdx | @r9 | 0y10010 ^ @rbp < 0n6 >> 0xB ^ 3 & @rdx | @r9 | 0y10010 ^ @rbp) { test_statement(0xF0F); } elsif (0y1010 ^ @rbx ^ @r10 > +@r11 & $buffer | @rsp ^ @rdi) { test_statement(0x1D49);  while  (+@rax <= @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc | @rsp | 0x10 <> @r8 ^ @r13) { test_statement(0xBA7);  for (@rax = $teb; @rdx = @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread | (@rbx) = @r9) { test_statement(0x86D); }
$error$
$end$
1480
 if ($proc + @r13 >> @r8 & @r9 << 0x8 & $thread >> @rax | @r8 << @rdx | @rbx ^ @r11 | @rsp | $proc ^ -@rdx)$proc + @r13 >> @r8 & @r9 << 0x8 & $thread >> @rax | @r8 << @rdx | @rbx ^ @r11 | @rsp | $proc ^ -@rdx)  { test_statement(0x2451); } elsif (0n15 & 0n16 >> 21 | @r8 >> 0y10011 ^ $thread & @r9 ^ +0x12 | @rbx & ~@r12 ^ @r11 > @rdx << $ip >> @r10 >> 0x1 & $teb ^ 0n17 >> @rsp | -0n3 & $buffer) { test_statement(0xE18); }
$error$
$end$
1481
 if (@r12 ^ @rsi << @rbp | @rax >> $ip >> @r9 & @rbp >> @rbp ^ $thread >> $teb & 5 <= 0n13 & @rax & $proc | $proc << @r13 >> $buffer & @rsp >> @rsp & @rsi)  { test_statement(0x1ABD); } elsif (@r10 << @r8 >> $thread ^ @r9 >> @rbp & $ip <= @r10 << @r8 >> $thread ^ @r9 >> @rbp & $ip) { test_statement(0x18B1); } elsif (@r10 >> $buffer & $buffer)@rdi) { test_statement(0x1901);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (+@r11) >< -$buffer | $ip) ; ; } elsif (@rdx & $buffer((0n0 & 0x8 ^ @r10) { test_statement(0x1C58); } else { test_statement(0x4CF); }
$error$
$end$
1482
 if (~$buffer + @rdi << +22 << @rsp >> 11 << @rsp ^ @rax >> 0n19 & @r9 >> $teb & 0x6 | @r11 >> $proc >> @rbp & @rdi >> -$thread == 0n6 + ~$buffer << @rbp << @r11 >> 0y1000 & @r11 << $proc >> @r8 ^ @r8 << @r13 & @r11 & @r12 & @r11 | $proc << @rbx >> $proc >> @rsp & 23 >> @r11 & @r8 & @r11 ^ +$thread & @rdx & @r13 | 0n8 & @rsp ^ -$teb & @r12 ^ 0n4 ^ $teb | @rbp & 0xC ^ $teb | @rax ^ @rax)  { test_statement(0xDBD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (-@rdx) & $ip | 0n12 <> @r9) ; } elsif (-+0x11 & @rbx | 23 >> +@rbp ^ @rdx | $proc == -+0x11 & @rbx | 23 >> +@rbp ^ @rdx | $proc) { test_statement(0x1B5F); } elsif (@r13 & $proc ^ @rbp & @rdi > @r13 & $proc ^ @rbp & @rdi) { test_statement(0x1D5F); val = $teb | @rsi | $ip ; } elsif (@r9 & $buffer | @rax ^ $teb | @rax ; @r10 ^ 0y111 | @r12) { test_statement(0x2075); } elsif (@r10 | 0y1111 > @rbp ^ @rbx) { test_statement(0x1E6D); }
$error$
$end$
1483
 if (@r13 << -@rax << $proc & $teb & @rbp ^ @rbx << 0xE >> @rbx >> 23 ^ @rbp >> @rdx < @r9 + (@rax) << @rbx ^ $ip ^ @rsi >> +@r9 & 0n16 ^ @rbp ^ @rbp)  { test_statement(0x4A6); } elsif (@rbp << @r13 >> @r12 >> @rbx & @rsp >> 0n3 ^ @r13 ^ @rbx & @r13 | 0n13 >> 0n9 | ($buffer) & +@rsp(0n6 << $proc >> @r10 >> ~-@rsi ^ $buffer) { test_statement(0x147B); } else { test_statement(0xD72);  while  (0n8 <= 0n8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment ; @rax = 0x5 ; }
$error$
$end$
1484
 if (@r10 + ~@rsi ^ 0n0 << 13 >> $teb >> 0y1001 & -@r10 ^ 0n10 >> ++@r13 & 0n1 ^ ~(@rax) | @rbp >> 0 >> @rbp | @r11 ^ +$ip & @r11 >< @r10 + ~@rsi ^ 0n0 << 13 >> $teb >> 0y1001 & -@r10 ^ 0n10 >> ++@r13 & 0n1 ^ ~(@rax) | @rbp >> 0 >> @rbp | @r11 ^ +$ip & @r11)  { test_statement(0x1D87); ;  This is a not opened comment */ } else { test_statement(0x1E5F);  // /* This is a comment  }
$error$
$end$
1485
 if (@r13 << -@r8 << @rdi >> @r9 >> -@rbx ; @r13 << -@r8 << @rdi >> @r9 >> -@rbx)  { test_statement(0xA98); } elsif (@rdx >> @rsi ^ @r8 & @r12)$ip << @rdx | @rbx >> @r12 & 0n18 & (@rsp) ^ ~-@rdi ^ @r9) { test_statement(0x11EC);  for (@rax = $ip ^ $ip | $ip; 0x10 ; 0n5 ^ -0n4;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@rax >> @r9 & @r8 | @rdi & 6 ^ @rdi ^ @r10 | ~0x5 | $teb | @r12 < 0y0 | @r11 & @rdx ^ @r13) { test_statement(0x115A); } elsif (@r10 & 7 ^ (@rdx) ! 0n9 & ~@rdx | @rdx | $buffer | $buffer) { test_statement(0x1D01); } elsif (@r9 ^ 21 | @r9 | @rsp ; $thread) { test_statement(0x19C2);  /* This is a not closed comment ;  // /* This is a comment  @rax = @rbp ; }
$error$
$end$
1486
 if (@rbp + @r11 >> @rbx >> +13 >> +@rsp & 20 >> $proc & $proc >> $proc & @rsi & @rdi >= @r9 + ($teb) << 0n7 ^ 0)  { test_statement(0x1131);  /* This is a not closed comment } elsif (@rbp & 4 & @r11 & 14 ^ @rsp >> @rdi ^ $thread ^ 0y10011 > $proc ^ $teb >> -@rbp ^ -13 & @r9 ^ @rsp | @r13 >> 0y1 & @rbp & ~@rdi | ~~14 & +@rax) { test_statement(0x56B); } else { test_statement(0x98E);  // /* This is a comment   /* This is a not closed comment }
$error$
$end$
1487
 if ($teb + @rdx << @rsp << @rbp | @r10 << @r11 & $thread >> @rax & -@r11 & @rdx | 16 >> -@r11 & @rax & @r10 | (@rdi) ^ @rsp ^ @rax >< $teb + @rdx << @rsp << @rbp | @r10 << @r11 & $thread >> @rax & -@r11 & @rdx | 16 >> -@r11 & @rax & @r10 | (@rdi) ^ @rsp ^ @rax)  { test_statement(0x19E); } elsif ($proc << $ip >> @rdx & @rbp & @r11 | ($teb) >> 20 ; +~-+$thread >> 15 & -@r13 | $proc ^ @rdi & $thread ^ @r11) { test_statement(0x177E);  This is a not opened comment */  /* This is a not closed comment } elsif ($ip >> @r9 & $proc & @r10 ^ 23 ^ 0y10000 | ~@r11 & +@r13 ^ 0x11 | @r10 >< 0n19 >> 0xB | @rsp | 17 ^ @rbx) { test_statement(0x1ECF);  /* This is a not closed comment }
$error$
$end$
1488
 if (~($ip) + $teb << 15 << @r11 ^ $ip << 0n7 >> $ip >> 0y11 & @rsi & 3 & (@r8) ^ ($buffer) & 0xA & ($proc) = $buffer ^ 0y1100 >> @r8 ^ @r8 & @rbx & @rbx ^ 0y1000 & @rsp ^ ~@r9 ^ +$proc)  { test_statement(0x1023); } elsif (@rsp << @r9 & @rdi >> @r9 ^ @r13 >> $teb & 16 & @rdi = $buffer ^ @r13 >> $buffer | 0y100 ^ 0x13 & $buffer ^ -@rbx ^ @r8) { test_statement(0xB0F); } elsif (-$teb >> @rax & @r8 & $ip ^ @rax | @r9 | @r8 | @rsi >= 0y1000 >> $teb) { test_statement(0xF86); }
$error$
$end$
1489
 if (16 + @r11 << (@r8) << $teb >> @rsp << ~@rdi & @rdx << @r10 & ~$buffer >> ~@r12 | @r9 >> $buffer >> @rdi | 10 | @r12 & @r8 ^ 0y100 ! 22 + @rbp << @rax >> 5 << @r13 & @r9 << $buffer >> @rbp >> @rbp & 0xC >> @r8 & ($ip) & $thread)  { test_statement(0x191F);  break;  // /* This is a comment  } else { test_statement(0x1681); }
$error$
$end$
1490
 if (-~$buffer + 11 << @r11 << @r12 | $buffer & @rdx ; -~$buffer + 11 << @r11 << @r12 | $buffer & @rdx)  { test_statement(0x24DA); }
$error$
$end$
1491
 if (@r11 << @r8 << $ip >> $proc << 0n3 & @r11 << @r10 | @rsp << $proc >> -22 ^ 5 >> @r11 ^ @r12 | 0x0 & @rdi & +@r12 ^ 0y111 ^ @r13 ^ (@r8) | +@rbp ^ @r11 ^ 0n15 | +@r9 == @r13 & @r13 << @rbp >> @rsp | 0n14 >> @rsi)  { test_statement(0x63C); }
$error$
$end$
1492
 if (@r10 ^ @r9 << $ip >> $thread & @r9 >> @rsp & 0n3 & @rdx | @r10 << $ip >> @r8 >> @r13 & @rbx | @r8 >< @r11 + @r10 >> $ip << @rax ^ -@r13 << @rdx >> @rsp | @rsi >> @rbp >> 0n5 & @rbx >> @r12 ^ @r9 >> 17 ^ @r12)  { test_statement(0x1D7B);  for (val = 10; $proc & $proc <> $proc & $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (-@r8 << $thread & @r8 ^ 0n13 & ~@rbx & @rdx | $thread >> (@rdi) & @rdx & @r11 ^ $teb = 4 << @r8 & $buffer | @r9 | $buffer & @rax ^ @r10 ^ -0x6) { test_statement(0x1D56); }
$error$
$end$
1493
 if (@r11 + 0x9 & @r9 ^ @r9 & $ip & $buffer & 0x13 ^ 0x1 >> @r10 & $thread != @rbp + $buffer >> (+@rax) << @rsi & 15 ^ 0 >> @rdx & $teb >> 0y10000 & @rdi & @r11 | @rbx & $ip >> @rax & +@r13 | $ip ^ ((@rbx)) ^ $proc)  { test_statement(0x105A); }
$error$
$end$
1494
 if (@rsp << @r13 << @rsi >> $thread << $buffer >> 0n16 >> @r10 ^ @r10 << ~@r12 | @rdi << $teb & 0n6 ^ @rdi >> 0n19 | $proc >> (@rsi) & $buffer >= @rdx + @r11)  { test_statement(0x1522); } elsif ($teb << @rbp & @rdx & @r8 & $ip ^ +@rsi & 21 & 10 | 0y1110 >> @rbp | @rbx | @r13 | $teb ; @rsi ^ 0y1) { test_statement(0x851); }
$error$
$end$
1495
 if (@r10 + @r11 & ~0y10010 >> @rbx >> @rbx ^ 0xD << @rbp ^ $buffer >> @r13 & $proc ^ 0xB & 0y1101 = @r10 + @r11 & ~0y10010 >> @rbx >> @rbx ^ 0xD << @rbp ^ $buffer >> @r13 & $proc ^ 0xB & 0y1101)  { test_statement(0x154B);  /* This is a comment */ } else { test_statement(0xB51); }
$error$
$end$
1496
 if (~@r12 << $buffer & @r12 >> @r13 | 20 ^ @r11 >> $ip & 0n1 | @rdx >> $thread ^ (@r9) | @rbp | @r12 ^ 17 ! ~@r12 << $buffer & @r12 >> @r13 | 20 ^ @r11 >> $ip & 0n1 | @rdx >> $thread ^ (@r9) | @rbp | @r12 ^ 17)  { test_statement(0x2457); ; }
$error$
$end$
1497
 if ($ip << @rsp << $buffer >> @rdi >> @rbp & 0x6 >> $proc | @rdi << @rdi >> $buffer & @rbx ^ @r9 >> @r10 & $teb & @rsi ^ @r13)@r13 + ~~(23) >> $buffer << $proc >> @r10 ^ ~$proc >> @rbp)  { test_statement(0xC19);  while  (@r10 & 0n16 ^ @r12((@r10 & 0n16 ^ @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1498
 if (~$buffer + $teb | @r9 << 0y11 >> $thread >> 1 ^ @rsi >> $ip ^ @r12 & 0x8 ^ @r8 ^ 0n7 | @r10 >> @rdx ^ $thread | @rsi & 13 | $buffer | (@r12) <> @r9 + @r10 & @rdx)  { test_statement(0x868); }
$error$
$end$
1499
 if (0 << 0x2 >> +$thread ^ @r10 >> 0x3 ^ @r9 >> @rdx & 0x1 ^ $buffer & @rax ^ ~@r11 | @rbx >> -@rdx >> $ip ^ @rdx >> 0x0 & @r11 ^ 0y10001 & @r10 ^ 0n13 ^ @rbp @rax + -1 << ~0y110 >> @r12 << -@r12 & $buffer >> 0n13 ^ 0x11 | 0x2 >> $ip | @rsp >> 12 ^ @rbp & 0n17 ^ $teb | $thread ^ 0xD ^ @r8)  { test_statement(0x104C); ; }
$error$
$end$
1500
 if (@r8 ^ @r13 << @rdx >> 0n0 & @rsp >> 0xF & 0n19 & $ip ^ @rbp & (@r12) & @rbx ^ @rdx & @rax(@r8 ^ @r13 << @rdx >> 0n0 & @rsp >> 0xF & 0n19 & $ip ^ @rbp & (@r12) & @rbx ^ @rdx & @rax)  { test_statement(0x5BB); ; } elsif (@r8 << @rdi >> @rbx >> ($buffer) ^ @r10 >> 0n19 & @r8 & @rbx | $ip($proc >> @r12 & 0x6 ^ $thread & $buffer & 0y10 ^ $buffer) { test_statement(0x934);  for (val = -@r9 ^ +$proc | @rsi; ~$thread ^ 0n7 | $ip >= (0n19);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
1501
 if (-@rsi & +0n17 & +@rsi & ~@rax > -@rsi & +0n17 & +@rsi & ~@rax)  { test_statement(0xB8A); } elsif ($buffer << @rsi & ~0x8 & @rsi & @r13 > $thread << @rax & 0n17 | $proc >> (@rbx)) { test_statement(0x19F6); } elsif (--0xD >> @r8 | @rbx | 0xE | $ip --0xD >> @r8 | @rbx | 0xE | $ip) { test_statement(0xD4A); } else { test_statement(0x1433); }
$error$
$end$
1502
 if (@r11 >> ~0x6 << 0y10011 >> @rbp >> @r9 & -@rdi ^ -@rbx >> @rbx >> @rsi | @r9 ^ @rbx >> $proc & $buffer & 0x6 > @r10 ^ @rax >> @r12 >> 0x5)  { test_statement(0x3FE); } elsif ($buffer << ((@rsp)) >> @rdi ^ @rax & @rax | @rdx & @r12 $buffer << ((@rsp)) >> @rdi ^ @rax & @rax | @rdx & @r12) { test_statement(0x218B);  if (@rdx ^ 0n11 != @rdx ^ 0n11)  { test_statement(0x1C57); } elsif (@r10 | ~~~0x13(@r10 | ~~~0x13) { test_statement(0x226); } else { test_statement(0x645); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n4 $teb | @r10) ; } elsif (@rdx >> @rdi ^ (++@rdi) & @rbp ! @rdx >> @rdi ^ (++@rdi) & @rbp) { test_statement(0x1BF2); } else { test_statement(0x112F);  break;  if (@rdx > @rdx)  { test_statement(0x664); } elsif (+0y1101 = +0y1101) { test_statement(0x297); } else { test_statement(0x1D73); }  This is a not opened comment */  for (val = 10; $proc >< @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
1503
 if ($thread >> @r12 << 0xA >> $thread & @rax >> @r9 >> 0 & @rsi & ($teb) & +@r8 == 0n4 + +@rdx << @rsp << @rsp)  { test_statement(0x16C6); } elsif (10 << @r11 | 0x10 >> @r9 | 0x9 = ~@rsi << @rdi) { test_statement(0x10E);  for (val = 10; $proc | 0n7 | @rsi >< 0x5 ^ $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx | $buffer & @r9 | @r11 ^ +22 ; $ip ^ @r13 & @rdi ^ -@rsp) { test_statement(0x19ED); } else { test_statement(0x1A41);  if ($thread ^ +@rsi)@r12 | @r9)  { test_statement(0xF43); } elsif ($ip ; $buffer) { test_statement(0x156D); } else { test_statement(0x82A); }  This is a not opened comment */ }
$error$
$end$
1504
 if (@r13 + @rdx << +-@r9 << @r11 >> @rsi << @rdx >> @rbp >> $thread & @r13 >> 0y1 >> ++@rbp ^ @rdi <> @rbx + $ip << @rbx & @rsp | @rsi << @r8 & @r8 & $ip ^ @rax & $teb & -@r10 ^ 0x13)  { test_statement(0x1F42);  if (~@rax | $teb ! ~@rax | $teb)  { test_statement(0x20E3); } elsif (@r12))@rdx ^ @r10) { test_statement(0x644); } }
$error$
$end$
1505
 if (($ip) + $thread << 0n6 << -@r12 >> ($teb) << @rax >> @r8 & @rdx ^ @rbx & 0y101 >> 0xC ^ $teb | 23 & ~$thread >> 0n5 ^ @rsp ^ @rbp ^ @rsi >= @rdi + @r13 << ~$ip)  { test_statement(0xD11);  // /* This is a comment   // /* This is a comment   /* This is a comment */ } elsif ($teb & @rax ^ @r12 >> 0x11 ^ +(0y1110) & @r8 ^ -$proc | 0y11 >> @r9 & @r11 & 2 ^ 0x6 & @rsp | $buffer & 13 | $ip | @rsp == $teb & @rax ^ @r12 >> 0x11 ^ +(0y1110) & @r8 ^ -$proc | 0y11 >> @r9 & @r11 & 2 ^ 0x6 & @rsp | $buffer & 13 | $ip | @rsp) { test_statement(0xA0);  /* This is a comment */ }
$error$
$end$
1506
 if (-@rbp + $ip << 0y10011 & @r13 << @r8 >> 0x6 & +@rdx >> @r10))(@r11) + @r13 >> @rax ^ @rbp >> @rsp >> @r13 & @r13 & @rbp & 23 ^ @rdi >> ($teb) | $thread >> @r8 >> @r12 & @rbp >> $ip)  { test_statement(0x15A7); } else { test_statement(0x19); }
$error$
$end$
1507
 if ($ip + 0y10000 << +$thread >> 21 << @r11 >> @r12 >> -@r8 ^ @rsi & $ip ^ 0x3 | @rdi & 0n17 <> $ip + 0y10000 << +$thread >> 21 << @r11 >> @r12 >> -@r8 ^ @rsi & $ip ^ 0x3 | @rdi & 0n17)  { test_statement(0xE4A);  if (@r12 ^ @r12 != $ip & @rdi)  { test_statement(0x15E7); } elsif (@r13 ^ @r10 | @rax = ~3 ^ @rdi | @rdx | @rax) { test_statement(0x617); } elsif ($proc | @r9(@rsi | @r9) { test_statement(0x1A63); } else { test_statement(0xF51); } val = 0n19 ^ -(@r10) ^ @rax ; } else { test_statement(0x1893); }
$error$
$end$
1508
 if (@r9 + $proc & @rbx << $thread | ~$teb << @rbp & 0x10 ^ 22 & $ip ^ +$ip & @rdx | $ip >> @rdx & $thread ^ 0 | @rsi & @r9 ^ @rdi ; $ip << @r12 ^ @rbx >> (((@rsp))) >> $buffer)  { test_statement(0xFB7); } else { test_statement(0x777);  /* This is a comment */ val = @r8 ; }
$error$
$end$
1509
 if (@r9 + +@rax | @rbp << $proc | @rbx >> @rdx & -$buffer & $buffer ^ @r10 ; $thread + 0n11 & $proc << @rbp >> ($proc) & @r13 >> @rax)  { test_statement(0x1213); }
$error$
$end$
1510
 if (@r10 << @r9 << @r9 >> (@rdi) << 0n12 >> $ip & @rsp << @r12 ^ @rbp >> $buffer >> @r10 @r10 + @rdi << 0n14 << @rbp | @rsi << @rdx & @rbx & 0y1001 & $teb ^ @rbx & $ip | @rdi >> @r9 ^ @rax & @r13)  { test_statement(0xAFC); } elsif (0y1001 << @rbp & $thread ^ @rsi & $proc | @r13 ^ $thread & $teb | @r10 != @rdi & 0x10 ^ @rdi & 0n18 & 0n12) { test_statement(0x409); } elsif (@r11 & $teb & @r9 | 0n7 ^ @r13 | @rsi @r11 & $teb & @r9 | 0n7 ^ @r13 | @rsi) { test_statement(0xA6E);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi <> +-@r12) ;  if (@rsi >< $buffer)  { test_statement(0x1E5B); } else { test_statement(0x15BE); } } elsif (0x10 & 5 >= 0x10 & 5) { test_statement(0x12D7); } elsif (@r12((@r9 ^ $proc | @rdx | @r8) { test_statement(0xACF);  if (@rbx == 0y100)  { test_statement(0x2612); } elsif ($thread <= @rax) { test_statement(0x26D4); }  for (; $thread != @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xB4E); }
$error$
$end$
1511
 if (@r13 + (@r8) << 0n11 << ($thread) & ($teb) << @rbx >> $teb ^ +0x2 << @rbx >> $ip >> @r13 ^ @rax >> (@r11) & -@rsp ^ @rbx == @r13 + (@r8) << 0n11 << ($thread) & ($teb) << @rbx >> $teb ^ +0x2 << @rbx >> $ip >> @r13 ^ @rax >> (@r11) & -@rsp ^ @rbx)  { test_statement(0x11A5); } else { test_statement(0x1C7D); }
$error$
$end$
1512
 if (@rdx + 0n0 >> @r9 >= @rdx + 0n0 >> @r9)  { test_statement(0x183A);  if (@rsp != @rsp)  { test_statement(0x8D9); } else { test_statement(0xF24); } } elsif (@rbp & @rbx >> @r13 ^ @rax >> $buffer & @r12 & @r13 ^ $thread & $thread ^ +@r11 ^ @rax | @r9 >> @r12 | @r12 | $proc ^ @r11 | @r8 >= @r9 ^ 2 ^ @r8 | @rsi & 0x0 & $buffer) { test_statement(0x1138); }
$error$
$end$
1513
 if (0n15 + @r11 << @r9 << $proc & @rax << 3 & @rbp >> (0x11) & ~$thread == @r8 >> @rbx >> @r12 >> -0xB & $proc << @rax >> @rsp & 0x13 ^ @rax << 0y10001 | @rax >> $buffer >> $buffer ^ $thread & +$thread & @r8 ^ @r12 & 0x5)  { test_statement(0xA3A); @rax = $proc >> 0y110 ^ 0y1100 & @rdi ^ @r13 ^ @rbp | @rax ^ $ip ;  /* This is a comment */  for (val = 10; $proc <= @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rsi != 14)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = @rax; @rbp <= 0x5;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rdi ;  while  ($thread == (@rbx))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1514
 if (@rdi + $thread >> @r8 << (($proc)) >> 0y1100 >> ~@r8)(~@rbx) + 12 << @r13 ^ $buffer << @rdx >> @rbp >> 0n2 & @rax & 0n19 & @rdi)  { test_statement(0x2233);  /* This is a comment */  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (0x10)((0x10)) ; ;  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 <= @r8) ; } else { test_statement(0x1E2D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~$buffer ^ @rdi ; @r8) ;  if (0y10010((@rdi | @rdx)  { test_statement(0xAC4); } elsif (@rbx > @rbx) { test_statement(0x26EA); } elsif (@rbx ; @rdx) { test_statement(0x156F); } elsif (@rbp(@rbp) { test_statement(0x1175); } }
$error$
$end$
1515
 if (+@rsi + $teb | @rdi << @rdi ^ @rbp & @rax & @rsp ^ $buffer & 0y10011 | $proc & $thread & @rsi ^ @r12 & @rbp ^ (@rdx) ^ (@rax) ! @rbp + @rbx >> 0x4 >> -@rdx >> +@r11 & 0xD << @r8 | 0x3 >> @r9 >> @rax | @rdi >> 0 & @r12)  { test_statement(0x1DCE); @rax = 2 & 0y10011 & @r13 ^ ~0xB & @r13 ^ (10) | @r10 & @rdx ^ $buffer ^ 2 ; } else { test_statement(0x1BA4); }
$error$
$end$
1516
 if ((@r13) & @r9 & (@r10) | @r8(((@r13) & @r9 & (@r10) | @r8)  { test_statement(0xF77);  break; } else { test_statement(0x1F40); @rax = @r10 & 0n8 ^ @rdx ; }
$error$
$end$
1517
 if (0x8 ^ @rsi & @r12 >> $buffer & @r9 & 0y10010 ^ -~-@rbp >> @rbx ^ 0y1100 ^ @rsp))0x8 ^ @rsi & @r12 >> $buffer & @r9 & 0y10010 ^ -~-@rbp >> @rbx ^ 0y1100 ^ @rsp)  { test_statement(0x1D83);  /* This is a not closed comment } elsif ((@rsi) >> $teb & 0y110 ^ @r13 >> 0n8 ^ @rdi & @r9 ^ @rdi | @rax & @r8 & ~23)$ip << @r9 | $thread >> @rsp & 0x9 ^ @r9 & $ip) { test_statement(0x17CC); }
$error$
$end$
1518
 if (@r10 >> +0x1 & $buffer << $teb ^ $buffer << @r11 & $proc & $thread ^ $buffer >> ($buffer)(@rdi >> @r13 >> @r11 ^ @r10 << 0y1111 >> -$thread)  { test_statement(0x1CAA);  while  (@rbp & @rax | @rax < @rbp & @rax | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 << $buffer <= @r12 >> 21 | @rbx >> -@rbp | @rbx & @r11) { test_statement(0x2AB);  /* This is a comment */ } elsif ($buffer ^ 0x13 <> $buffer ^ 0x13) { test_statement(0x142);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx = @rbx) ;  break; } else { test_statement(0xEB4); }
$error$
$end$
1519
 if (@rax << @rsi << $buffer ^ 0y0 >> +$buffer & $thread & @r11 & @rbx ^ 0x12 >> @rax & @rdi & $ip = @rdi >> 0n9 << @rbp & @r8 >> @r12 >> @rdi & @r8 | @rbx & @rbx & @r13 & -$ip)  { test_statement(0xDD0);  // /* This is a comment  }
$error$
$end$
1520
 if (@r8 << @r11 << @r11 & @rax >> 0n7 & 4 >> $thread(@rdi << ~12 >> 0x12 << $thread >> $thread >> ~@rbx ^ 0x0 & @r10)  { test_statement(0x9F4); } elsif (@r11 & (0n16) & $teb ^ @r11 & $teb > @rdi ^ @r13 >> @rsp & @r13 & @rax | @r11 & @rsi & $proc ^ @r13 & 0n13 | $thread & $ip) { test_statement(0x115B);  // /* This is a comment  } else { test_statement(0x351); }
$error$
$end$
1521
 if (@rdi + $ip << ~@r13 >> @rdx << @rdi >> 0y10001 & @rsp << 0n12 | -@rax >> @rax ^ $proc & $thread ^ $proc & @rax | ~@rsp & 0x12 & @rbp ^ @rbp))@rdi + $ip << ~@r13 >> @rdx << @rdi >> 0y10001 & @rsp << 0n12 | -@rax >> @rax ^ $proc & $thread ^ $proc & @rax | ~@rsp & 0x12 & @rbp ^ @rbp)  { test_statement(0x2132);  This is a not opened comment */ } elsif (@rdx << $teb ^ @r9 ^ @rbp & 5 ^ 0x10 ^ @r12 = @rdx << $teb ^ @r9 ^ @rbp & 5 ^ 0x10 ^ @r12) { test_statement(0x2095); ;  /* This is a comment */ }
$error$
$end$
1522
 if (0x12 << $ip << @rbx & @rsi << $buffer ^ 13 >> @rsi >> @rsi & @r12 & @rdx & @r10 ^ @r11 >> @r8 | $teb ^ $ip >> @rdx & @r12 | $proc >> @r8 ^ $teb)0x12 << $ip << @rbx & @rsi << $buffer ^ 13 >> @rsi >> @rsi & @r12 & @rdx & @r10 ^ @r11 >> @r8 | $teb ^ $ip >> @rdx & @r12 | $proc >> @r8 ^ $teb)  { test_statement(0xBC6);  break;  for (; @r9 ^ @rax | 0y0 | $ip)$teb | $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = $buffer ^ 0x6 ;  break; ; } elsif (@r8 << $teb >> @r12 >> 0xF ^ @rdi >< @rsp << 0x3 & @r9 & @rdx | +@rbp >> @rbx) { test_statement(0x1C00); }
$error$
$end$
1523
 if ($ip + @r12 << @r13 & 0y11 & $proc >> 0n10 & @r10 & $teb ^ @r12 >> $proc & @rbx >> $proc >< ~0n7 & $proc >> @rax >> 0n5 & ~@rbx >> @rdx & @rsi | -@rsi & $proc ^ $buffer >> @r10 & $proc & $proc | @rsi & -$ip & 13 ^ @r10)  { test_statement(0x1401);  // /* This is a comment  val = 0y11 ^ @r12 ^ $thread | @rsp ^ @rbx ;  /* This is a not closed comment  break; }
$error$
$end$
1524
 if (@rsi >> @rax << @rbx ^ @r10 >> 0y0 ^ +@r9 >> 0y1101 ^ @rbx | 0x12 << @r9 & +@rax & 0xE & @r9 0y101 >> 0n19 >> @rsp ^ $teb << @r13 & +@r13 & @r11 & 0y1011 ^ ~0xA >> @rdx & (@rax) & @rdx)  { test_statement(0x888);  /* This is a not closed comment ;  /* This is a not closed comment @rax = $teb ;  for (@rax = @rbx; @r8 >< @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = $teb ;  while  (@rbp @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip ! @r10) ; } else { test_statement(0x1940);  This is a not opened comment */ }
$error$
$end$
1525
 if (+@r8 + -+@r9 ^ $buffer << 0xE & (@rsp) & @rdx | +@r11 >> @rax & 0y10010 >> (@r8) & @r9 & @rbp +@r9 << @rbp >> @rbp << @r12 >> $buffer >> @rdi & +@rbp >> (@rsp) >> ~$teb & @rbp | @rdi << (0n19) & 0y110 >> $proc & +@r10 ^ 14 >> @rax ^ $thread)  { test_statement(0xDA5);  break; } elsif (@r12 >> @rdx >> @rbx ^ $ip >> -@rsi | @r8 >> @r12 & @rbp & $proc ^ ~$thread ^ @rbp ^ $buffer | @rax & $teb >= +@rbp & ($thread) >> @rdi & @r11 ^ $teb | @r13 | @r8 & 11 ^ 0y1001 | -$teb | @rdx | $thread) { test_statement(0x151B); } elsif (@rax & (@r13) & +$thread ^ $proc | $ip & @r10 | $thread | $proc | $buffer ; @rdi & 15) { test_statement(0xBB2);  break; @rax = @r12 ;  This is a not opened comment */ } elsif ($thread & (21)(@r12 & @r9 | @rsi ^ @rbx) { test_statement(0x2398);  break;  /* This is a not closed comment  while  (@r8 <= @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x26F5); }
$error$
$end$
1526
 if (@rdx << $teb << $teb >> @r13 & @r9 << ~13 >> @r13 ^ @r13 ^ @r11 >> @rdx & 14 ^ @rdi ^ @r13 ^ $thread > @rdx << $teb << $teb >> @r13 & @r9 << ~13 >> @r13 ^ @r13 ^ @r11 >> @rdx & 14 ^ @rdi ^ @r13 ^ $thread)  { test_statement(0x378); }
$error$
$end$
1527
 if ($buffer + @rdx | @r11 << @rbp ^ 0n3 >> +12 & ~~@r9 ^ -@rdx & $proc ^ @rbp ^ $teb))@r12 << @r12 << @rbp)  { test_statement(0x17D4); } elsif ($teb >> $thread ; -0n7 >> -@rbx ^ @r8 >> @r11 | @r11 & @rbx ^ @r9 & -$teb) { test_statement(0x1929); } elsif (@rsi >> ~23 & 0n12 & $thread <> $proc & ~@r9 & @r11 ^ @rdi ^ @r9 ^ $thread | 0n2 ^ 0n17 ^ @rbx | $proc ^ 0n10 | +@r8) { test_statement(0x1821); } elsif (0y1111 | @r9 == 0y1111 | @r9) { test_statement(0x1A33);  while  (-+@r13 -+@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp | @r8 > @rsp | @r8) { test_statement(0xF43);  if (@rbp > @rbp)  { test_statement(0x138F); } else { test_statement(0x1B3E); }  /* This is a comment */  break;  break; } else { test_statement(0x10B6);  while  (@rsi ^ @rbx != $proc | @rsp | 0x0)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = $teb ; }
$error$
$end$
1528
 if ($teb + $proc << @rsp << @rdi & @rdx << @r9 $teb + $proc << @rsp << @rdi & @rdx << @r9)  { test_statement(0x110B); }
$error$
$end$
1529
 if ($ip << $buffer & -21 >> $teb & -@r10 <= 0y101 >> $thread >> $teb >> 0xA | @rax << $thread ^ @rax ^ @r9 ^ @r12 ^ 21 | @rdi ^ 0n19 ^ @rdi | @rdi | $ip | 0x10 | 0y1111)  { test_statement(0x16A3);  if (@r11 ^ @rbp >< +15 ^ 0n3 ^ @rsi | -$thread ^ 0y100)  { test_statement(0x13BE); } else { test_statement(0x2182); } }
$error$
$end$
1530
 if (@r13 >> (@r13) << $buffer ^ 0y1001 << @rax >> 3 >> -@r9(($ip) << @rdi << -$ip & @r12 >> 1 & 0y1110 >> @rbx & @rax & $buffer ^ $thread << 0n9)  { test_statement(0x24A1); }
$error$
$end$
1531
 if (@rdi << 0y100 >> $buffer << 6 ^ @rbx << @rsp ^ @r11 >> @r12 & -$buffer & @rbx | $ip << @r11)@rsp + 0y110 << @rbx << @r11 >> $ip << @r8 & @r12 & @rdx | @rsp >> @r8 >> @rbx & @rax >> @rsp & 0x1 & @rbx ^ @rsi >> 0y10 & @rdx ^ -@r11)  { test_statement(0x980); } elsif (@r9 >> @r8 & $ip >> $teb ; @r10 & ~0xF | @rdi >> @r10 & @rdx ^ @rdx) { test_statement(0x24DB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 | 17 <> ~0y101 ^ @rax | -+@rsi) ; } elsif ($ip >> 0x3 | 0n16 & ~@rax ^ @r9 >= $ip >> 0x3 | 0n16 & ~@rax ^ @r9) { test_statement(0x17F7);  for (val = 10; @rdi))$ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 ^ @rbx ^ @r8 | @rax))@rbx ^ $buffer) { test_statement(0x1D55); ; }
$error$
$end$
1532
 if ((@rsp) + ~@rbp << $proc << 17 ^ 0x10 << $buffer >> @rsp >> @rdx & @rbp >> ~$ip ^ @rsp & 0n5 | @rdx | @rax >> @rbp | @rbp < (@rsp) + ~@rbp << $proc << 17 ^ 0x10 << $buffer >> @rsp >> @rdx & @rbp >> ~$ip ^ @rsp & 0n5 | @rdx | @rax >> @rbp | @rbp)  { test_statement(0x520); }
$error$
$end$
1533
 if ($ip + -@rsi >> @rdx << 0xE & @rax << 0n5 & $thread >> @rax <= $ip + -@rsi >> @rdx << 0xE & @rax << 0n5 & $thread >> @rax)  { test_statement(0x1BE1);  break;  /* This is a comment */  // /* This is a comment   /* This is a not closed comment  while  (((@r11)))0xE)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rsp <= @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (~$ip ! ~$ip)  { test_statement(0x46A); }  /* This is a not closed comment } elsif (@rdx & @rdi >> $buffer ^ @rsi & @r12 ^ 0xD & @r8 ^ (0y100) = @r8 & $buffer & $thread & @rbp | @rdx >> @rdx & @r12 | @rax & $teb ^ @r12 ^ @r11 | 0y1111 | $teb | 0xF) { test_statement(0x11E7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y110 | @rsp | $thread ! 0n12 | $proc | @r8) ;  // /* This is a comment  } elsif (@r10 & 0x13 ^ @r12 & @rbp ^ 0y11 ^ $teb != ~@rbp ^ @rbp ^ 0x10 ^ (@rdi) | 0y10001 & @rsp ^ 16 ^ +~0y1111) { test_statement(0x1395); val = 0xA ; ;  /* This is a comment */ } elsif (@r12 = 0x8 ^ @rdi | @rax) { test_statement(0x1FA3); } elsif (0y1001 ^ ~@r10 | ~$proc == $proc ^ $proc) { test_statement(0x62A);  while  ($ip ! $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1534
 if (0y1111 ^ 0y10001 & @r11 & $thread((0y1111 ^ 0y10001 & @r11 & $thread)  { test_statement(0xEF4);  if ($buffer ^ @rsp ^ 0n0 | $proc ^ @r11 == $proc & $thread)  { test_statement(0x265A); } elsif (@rdi | $proc | $buffer < @rdi | $proc | $buffer) { test_statement(0x2125); } else { test_statement(0xE88); }  /* This is a comment */ } elsif (@rbp >> $buffer ^ -(@r8) & $thread | @r12 < 13) { test_statement(0x1C84);  while  (0n10 ^ @rdi <> @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  This is a not opened comment */  while  (@rdx = @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1535
 if (@r11 + $thread & @rsi ^ -0x9 >> 0 >> 10 & @rbp ^ (@r13) | (@rsp) & @r11 & @rbx ^ ~$thread & @rbp & (@rbp) | @rbp | -@rsi ^ @r9 ! @r11 + $thread & @rsi ^ -0x9 >> 0 >> 10 & @rbp ^ (@r13) | (@rsp) & @r11 & @rbx ^ ~$thread & @rbp & (@rbp) | @rbp | -@rsi ^ @r9)  { test_statement(0xD8B); } elsif ((@r8) >> 0y1 & @r10 ^ @rsi @rbp >> @r9 & $ip >> ~@r12 & 3 ^ @rdi >> @rdx & @rsp & @r8 ^ $ip & @r10) { test_statement(0x34E); @rax = @r9 & $teb ^ 0n2 | @rsp | +~@r8 ; }
$error$
$end$
1536
 if ($buffer + @rsp << $proc & @r13 & 0x9 ^ $buffer & +-@r10 >> @rdx & @rax & @rdx | @r13 >< @rsp + 0xD << @rsp << $teb >> @rsi << @r12 >> 0n11 ^ 5 >> 0y10 & 21 >> @rdi & @r13 ^ @rsp >> (~0x10) | @rdx ^ @r13 >> @r10 | @r11 >> 0y10011)  { test_statement(0xABB); } elsif (@rbx >> 0n18 ^ @rsp >> ~@r8 20 >> $ip ^ $proc) { test_statement(0x15C1);  if (@rsp >= @rsp)  { test_statement(0x260D); } elsif ($buffer))$buffer) { test_statement(0x260); } elsif ($proc))-$ip) { test_statement(0x7C7); } elsif (-@r11 ! @rdi) { test_statement(0xA); } elsif ($teb(-@r11) { test_statement(0x1D7E); } else { test_statement(0xCA2); }  while  (17(($teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
1537
 if ((@rdi) << @r13 << $teb >> (@r10) >> @rbp >> @rbp ^ 0n0 << @r10 >> @r12 >> 0n5 > (@rdi) << @r13 << $teb >> (@r10) >> @rbp >> @rbp ^ 0n0 << @r10 >> @r12 >> 0n5)  { test_statement(0x218); } elsif (@r12 << @rdx ^ +$proc)@rbx << $proc & $ip >> (23)) { test_statement(0x1029);  for (val = 10; 0y1001 ^ @r13)@r10 ^ 0n5 | @r9 | @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x919);  // /* This is a comment  @rax = @r9 ^ @r13 ; }
$error$
$end$
1538
 if (@r9 ; 0n19 + @rsp >> @r9 << @rsi & @r10 >> @r10 >> 0x13 & @rax >> +@r10 & @rbp & @r13 | $teb >> @r11 & @r8 >> @rbp ^ (@rax) >> 0y100)  { test_statement(0xA1F); @rax = @rsi >> @r11 & @rax & @r12 | (@r10) & $ip ;  This is a not opened comment */ }
$error$
$end$
1539
 if (-@r8 + @r12 << 0xE << @rsp >> 0y1001 & @rdi >> $ip & $ip & $proc & @r11 ^ 0n1 >> (@r8) >> @r12 & @rdx >> @rsp ^ @rbx & $thread > @r12 + $teb & $teb << @rbx & @r10 & -+@r10)  { test_statement(0xA6D);  // /* This is a comment  }
$error$
$end$
1540
 if (0y111 + $ip >> 14 >> @rdx >> 0n4 & @r11 << @r10 >> @r12 >> $proc & @rsi >> @rax ^ $buffer << $proc & $thread >> @r13 ^ @r11 == 0y111 + $ip >> 14 >> @rdx >> 0n4 & @r11 << @r10 >> @r12 >> $proc & @rsi >> @rax ^ $buffer << $proc & $thread >> @r13 ^ @r11)  { test_statement(0xF2E); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx ^ 0n3 >= @r9 ^ 0y101) ; } else { test_statement(0x1550);  /* This is a not closed comment }
$error$
$end$
1541
 if (@r12 >> 0y1011 << @rsi >> 0n5 >> @rbp = @r12 >> 0y1011 << @rsi >> 0n5 >> @rbp)  { test_statement(0x2587); }
$error$
$end$
1542
 if (+@r12 << @r13 << $thread ^ 6 ^ --@rdi >> $buffer & @r11 <= @r11 << 0x1 << $teb >> $teb >> @rbp ^ @rsp << $thread | @rax & @rsi >> $teb & @rax & $teb)  { test_statement(0x251E); } elsif ((@rbp) << @r11 ^ $teb >> 22 | @rdx >> $ip ^ @rdx & ~@rbp ^ 0y10 ^ @r12 >< $thread << @r12 ^ $thread & $teb & 23 | @rsi >> 20 & @rdi ^ $proc) { test_statement(0x8CD);  while  (@rsp ^ 0y1111 @r13 ^ 0n11 | 21)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  /* This is a comment */  This is a not opened comment */  This is a not opened comment */  break; }
$error$
$end$
1543
 if ($ip + @r13 << $thread >> $teb & 17 >> @r8 & 0n0 >> $proc & @rsi & @r12 ^ @r9 << @r9 ! $ip + @r13 << $thread >> $teb & 17 >> @r8 & 0n0 >> $proc & @rsi & @r12 ^ @r9 << @r9)  { test_statement(0x1C75);  if (@r8 | @rbp | @rdi(@rsp ^ @rbx | @rsi)  { test_statement(0x2014); } elsif (@r10 | $ip | @rdi == @r12) { test_statement(0xA74); } elsif (@r13)0y10010 | 0n9) { test_statement(0xF4); } }
$error$
$end$
1544
 if (0n4 + (@r8) >> @rbp << @r11 & $proc >> @r11 <= @r10 + @rax >> $proc << $ip >> $ip >> @rax | 0n4 << ($thread))  { test_statement(0x4DD);  if ($buffer & 15 ^ 0x3 ^ $proc | (@r9) ^ 0n14 | @r10 = @rbx ^ @r9)  { test_statement(0x5A8); } elsif (0n1 | @rsi | @r13 <= @r11 ^ @r10 | @rsp | @r10) { test_statement(0xB25); } elsif ($thread | @r10(0xC | $buffer) { test_statement(0x1569); } elsif (@r10 = ~(@r8)) { test_statement(0x139F); } elsif (0y10010 >= 0y10010) { test_statement(0x5DA); } } else { test_statement(0xE60); }
$error$
$end$
1545
 if (0x8 + 22 & $teb >> @r13 ^ @r8 << @rsp & @rsp ^ 0n13 >> 0y10010 & @rbx & @r8 ^ 0y1110 ^ +@r8 ^ $proc | @r8 << @r8 >> $teb >> @r13 | @rbp = 0x8 + 22 & $teb >> @r13 ^ @r8 << @rsp & @rsp ^ 0n13 >> 0y10010 & @rbx & @r8 ^ 0y1110 ^ +@r8 ^ $proc | @r8 << @r8 >> $teb >> @r13 | @rbp)  { test_statement(0x1EDA);  while  (@r11 & @rbx ^ ~@r11 ^ ~@rbp +-$teb & @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rbx))$buffer | $thread | 10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x742); }
$error$
$end$
1546
 if (@rbx << @rax >> @rbx ^ @rsp << @r11 & @r11 >> @r10 ^ 0y1101 >> @rbx & @r8 & $teb == 0n2 + $proc >> 0n18 >> $proc >> @r8 ^ ~@rax)  { test_statement(0x24C0);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rbp & 0y1011)-@rbp & 0y1011) ;  /* This is a comment */ @rax = @r8 ^ @rbp ; ; } else { test_statement(0x256B);  while  (@rbx <> @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  if (($buffer)(($buffer))  { test_statement(0x148A); } elsif (@rsi >= @rsi) { test_statement(0x1B4F); } }
$error$
$end$
1547
 if ($buffer << @rax & $ip & @rsp & @rax & (0n19) ^ @r9 << 13 & 21 >> @rbp & (@r11) ! @r13 + ~$proc << @r13 >> @r11 << @r11 >> +$ip & @r13 << @r10 >> @r12 & 0xE >> @rax & $thread & @r11 | 0n11 & $proc & @rbx | @rdi)  { test_statement(0x10F); ; }
$error$
$end$
1548
 if (@r9 + @rsi << @r12 << @r11 >> $teb << 0n17 ^ $buffer << @rsp >> @rdx & @rsp >> @rbx & $ip ^ @rbx & @rax ^ 0y100 & @r11 | @r11 >> $proc >> @r13 > @r9 + @rsi << @r12 << @r11 >> $teb << 0n17 ^ $buffer << @rsp >> @rdx & @rsp >> @rbx & $ip ^ @rbx & @rax ^ 0y100 & @r11 | @r11 >> $proc >> @r13)  { test_statement(0x1741); }
$error$
$end$
1549
 if (@rbx + ~$teb >> @rbx & (0n5) << @rbp >> 0y1001 ^ @r11 << +0n18 >> +@rsi >> +-$buffer & 0x4 & $buffer & @rbp | @rsp >> @r10 | 0x6 >< @rax & @r13 << @r11 | @rdx)  { test_statement(0x2112); } else { test_statement(0x17BC); }
$error$
$end$
1550
 if (@r10 + @rdx << $thread << $thread & @rdx >> $buffer >> 0y1011 & 2 >> $buffer | @rsi | -@rax >> 0y110 & +16 ^ $thread & @rdi ^ ~@rdx | @rsi & @rdi | @r9 | $teb = @r10 + @rdx << $thread << $thread & @rdx >> $buffer >> 0y1011 & 2 >> $buffer | @rsi | -@rax >> 0y110 & +16 ^ $thread & @rdi ^ ~@rdx | @rsi & @rdi | @r9 | $teb)  { test_statement(0x15E2);  if (@r10 = @r10)  { test_statement(0x1B0B); } }
$error$
$end$
1551
 if ($proc + @r10 >> $buffer | $buffer << @r11 & $teb >> @rbp ^ $teb & @rdx & 0xF | @rsi ^ @rsp ^ ~@r11 ^ @r13($proc + @r10 >> $buffer | $buffer << @r11 & $teb >> @rbp ^ $teb & @rdx & 0xF | @rsi ^ @rsp ^ ~@r11 ^ @r13)  { test_statement(0xF79); } elsif (@rbp << $ip ^ @r9 ^ @rbx)@r11 >> $thread | @r8 >> +$thread & 0n16 & $thread ^ @rdx ^ @r12 ^ ($buffer)) { test_statement(0xBD3);  This is a not opened comment */ } elsif (@rsi >> 0n0 & 17 & @rsi | $thread | 3 <> 10 >> $buffer ^ @r12 & ($teb) ^ @r10 ^ 17) { test_statement(0xEE7); } else { test_statement(0x755); }
$error$
$end$
1552
 if (@r9 & @r9 << @rax | $ip >> @r12 >> (0n6) & 0x9 ^ 0n6 ^ 22 | @r11 >> @r9 & @r8 ^ $ip ^ $buffer | 17 ^ 0xA ^ (@rsp)((0n18 & $proc << ~+$teb >> @rsp & @rsi | $proc << ~0xC & @r10 & @rdi | 0x3 & @r8 & @rdi ^ 0y101 & @rsp ^ @r13 ^ $proc | @rbx & @r8 | @r9 ^ $thread)  { test_statement(0x9F3);  /* This is a not closed comment } elsif (0n1 << @r10 >> -7 | @rsp & @r9 & @rdi))0n1 << @r10 >> -7 | @rsp & @r9 & @rdi) { test_statement(0x730);  /* This is a not closed comment } elsif (@r13 >> 0x13 & @r13 & @rsi | $teb ^ @r10 <= @r11 | @r12 & @r8) { test_statement(0x2E1);  // /* This is a comment  val = @r8 ;  break; ; } else { test_statement(0x215C);  if (@r9 ^ $thread >< +@r12 ^ @rbx)  { test_statement(0x2224); } elsif ($proc | $thread < 17 | 0x13) { test_statement(0x1899); } elsif (~@rbx = ~@rbx) { test_statement(0x122C); } else { test_statement(0x14BF); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( --16 == $buffer | @rax) ; }
$error$
$end$
1553
 if ($proc >> @rbx << @r13 & @r10 & @r10 >> @r9 | ~@rbx ^ $teb >> @rdx & $teb ^ @rdx ; $proc >> @rbx << @r13 & @r10 & @r10 >> @r9 | ~@rbx ^ $teb >> @rdx & $teb ^ @rdx)  { test_statement(0x48E);  /* This is a comment */ ; } elsif (@rdi << @r8 >> @rbx ^ $proc | @rdx & 0y1110 & 0y11 ^ @rax & @r9 ^ $teb ^ @rbp(@r13 >> -$proc) { test_statement(0x583); }
$error$
$end$
1554
 if ($proc << @rbx << +@r11 >> -@r11 >> $teb ^ ~@rax << 0n3 >> (0y1011) >> $ip & $thread >> @rsp & @rax & ~@rbp | $proc ^ @rbx | @r11 & $ip ^ -@rbp & 0n5 ^ @rsp ^ 0n14 $proc << @rbx << +@r11 >> -@r11 >> $teb ^ ~@rax << 0n3 >> (0y1011) >> $ip & $thread >> @rsp & @rax & ~@rbp | $proc ^ @rbx | @r11 & $ip ^ -@rbp & 0n5 ^ @rsp ^ 0n14)  { test_statement(0x1F49); } elsif (~-$proc ^ $thread >> @r10 & @rax | ~0n14 >> $teb & @rsi | @rdi & @rsp ^ @r9 ^ @rsi <= @rax >> @rax & 0x0 & ~@rbp & @rsi ^ +@r11 & $ip & -0n5 ^ 0x7 ^ @r13 | @rdi ^ $teb & @r9 ^ @rsi | @rbp | @rax ^ @r11) { test_statement(0x3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x13 | 3 | @rdi = 0x13 | 3 | @rdi) ;  /* This is a not closed comment } else { test_statement(0x1533); }
$error$
$end$
1555
 if (@rsp + @rdx << @r9 ^ @rax >> 0y100 & @rbx >> @rdx ^ 0 | (@r12) << @rdi & @r12 >> $teb & +@rbp & @r9 <= 11 >> 0y101 << $ip >> 0y1000 >> @r13 & 17 << 0y1010 >> 0y111 ^ $proc ^ @r10 & @rdi)  { test_statement(0xA3B); @rax = @r12 & -~($buffer) & @rbx ^ ~(~@r11) & 0y1110 | @rdx & @rbx ^ @rdx ; } else { test_statement(0xEC6); @rax = (0) ; }
$error$
$end$
1556
 if (@r13 << 0n6 | $teb << @rdi ^ @rbp >> @rsi ^ @rax & $thread ^ $proc ^ @rbx)@r13 << 0n6 | $teb << @rdi ^ @rbp >> @rsi ^ @rax & $thread ^ $proc ^ @rbx)  { test_statement(0x148B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 & $proc ^ $thread ^ 0x8 | $ip ^ 0n12 == @rdx) ; } else { test_statement(0x1D3); }
$error$
$end$
1557
 if (@r8 & 2 << 0n10 >> -(+@r9) | @r12 | @r12 <= @rdi << @rdi << 0xC & @r12 & 0xA | 0n0 & @rbp >> 0n4 & 0y1000 & @rbp ^ @r12 ^ @r9 & $ip ^ $teb | $teb >> @rbx)  { test_statement(0x26E1); }
$error$
$end$
1558
 if (@r11 ^ @rdi << (@r10) ^ @r12 >> $ip ^ -@rbx & 0n9 | @rdx << 22 >> @rdi & (5) >> $teb & (@rax) | 0y1101 >> @rsi & $proc & @rbx ^ $teb == 0y1 << @rbp << 17 ^ @rbp >> @rbp & $buffer & @r13 | 0n1 & +@rdx ^ $buffer ^ $teb & @r8 ^ $thread ^ $buffer | @r10 >> @rsp & 1 & $teb | 0y11 | $buffer)  { test_statement(0x1B4C);  for (val = 10; $teb ^ @r12 ^ 0y1110 <> @rax & @r11 | @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1559
 if (-$ip | @rbx << +@r10 <= @rdi << 0n18 & ~$thread << @r9)  { test_statement(0x165E); } else { test_statement(0x2067); }
$error$
$end$
1560
 if (@r12 + @r10 << @r12 << @rsi | $teb & @r13 >> $thread == @r12 + @r10 << @r12 << @rsi | $teb & @r13 >> $thread)  { test_statement(0x304);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~(@r8) & 7 | +(@r12)((@r8 ^ +0n3) ; } else { test_statement(0x221D);  This is a not opened comment */ val = @rbp | $teb ; }
$error$
$end$
1561
 if ($ip + 0y10001 >> $teb >> +$proc & @rsp ^ $teb >> $thread @r10 + 0n0 ^ @r8 >> 0x12 >> @rsi ^ 0y1000 >> @r13 & @rbx & $thread | @r9 >> 0y1000 >> @r13 ^ 0x2 | $teb & @r9 | +0x8 ^ -@rbp)  { test_statement(0xB01);  for (@rax = (~@rsp) | @r11 | +@rsp; $teb ^ @rax ^ @rbx | +@rsp ^ 0n17 > @r10 | @rsp | $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif (20 >> -@r12 >> @r13 & $buffer & @rsi ^ @r10 >> @r12 ^ @r8)20 >> -@r12 >> @r13 & $buffer & @rsi ^ @r10 >> @r12 ^ @r8) { test_statement(0xF73);  while  ($teb ^ @rax ! @r13 ^ @r13 | $proc | 0y10010)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; 13 <> @r10 | @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi & @rbp >< @r11 >> @r12 ^ 0y110) { test_statement(0x3FB); } elsif (@r8 ^ @rsp ^ $thread @r8 ^ @rsp ^ $thread) { test_statement(0x1DD7);  // /* This is a comment  } elsif ((0y111) | 0x6 >= @r8 ^ @rbp | $thread | -0n5) { test_statement(0x4E5); }
$error$
$end$
1562
 if (@rdx & @r13 & -@r9 >> -@r11 & $ip & $thread | $teb << 3(@rdx & @r13 & -@r9 >> -@r11 & $ip & $thread | $teb << 3)  { test_statement(0xEB7); }
$error$
$end$
1563
 if (-$ip + ~@r12 << @rsi >> $thread << @r12 ^ @r8 << 0x10 & @rsi & @rsi ^ 20 >> $buffer & $thread <= -$ip + ~@r12 << @rsi >> $thread << @r12 ^ @r8 << 0x10 & @rsi & @rsi ^ 20 >> $buffer & $thread)  { test_statement(0xAF1); } else { test_statement(0x12CC); }
$error$
$end$
1564
 if ($proc + @rsi << @rsi << @r11 & @rdx >> $thread & @r8 ^ @r12 >> @rax >> $thread & @rdx >> +@rdx & 0x4 | $buffer & @rdx & @rbp & @r12 | -@rbp & @rdx != @r9 + $ip & @rdi << $thread & 2 >> $proc | +@rsp ^ +@r11 >> 5)  { test_statement(0x2237);  /* This is a not closed comment } elsif ((~$ip) << @rdi >> @rsi >> @r8 >< @rbp << @r11 & @rbp >> +@r11 & @rsp & -$ip ^ @rax ^ 0y10011 | @r13 ^ @r11 ^ @rsi) { test_statement(0x171E); @rax = 0n3 & +@rsp ^ @rbp ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp <> @rbx) ; val = 0n7 ; }
$error$
$end$
1565
 if (~@rdx & $buffer << @rdi & $teb & 0n11 & 0n7 > ~@rdx & $buffer << @rdi & $teb & 0n11 & 0n7)  { test_statement(0x54B); } elsif (@r13 << 1 >> @rsp >> @r9 & @rsi >> @rdx ^ 0n11 >> $thread ^ @rax & ~$ip ^ -@r12 ^ @rdx | @r10 >> -@rbp < 0y10011 << ~$ip ^ ~@rbp ^ ~@r8 | @r8 & @r13 & @rsp) { test_statement(0x10ED); }
$error$
$end$
1566
 if (@r11 + 0n15 << @r12 << @r8 & @r9 << $ip & @r8 & $thread & -@r13 | (@r10) << @r13 >> @rdx >> @r9 & @rbx >> $thread ^ @r10 >> 0y11 & @r12 & @rsi | +$buffer & $proc & @r13 | @r8 & @rax | @r12 | @rsi ; 0x7 >> $thread >> @r8 & +~@rax >> $thread >> @r8 | @rdi << @r12 >> @rsp & @r12 >> 0n11 & $buffer ^ $ip >> @r13 & @rbp & @rbp | (-$teb))  { test_statement(0x2066);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi ^ -0n1 <= @r10 & 0n17) ; } elsif ($teb << $ip | $proc & $ip & +@rdi ^ @r10 ^ @rsp < @rdi >> 0y1100 >> @rdi ^ 0n3 & 0n3 | +@rsi) { test_statement(0x103); }
$error$
$end$
1567
 if ($proc + @rax & @rdi << ++@r11 >> -0n3 >> 23 & @rsp & @rsi ^ $buffer & $buffer >> @rax & @rsp & $thread ^ 3 >> $thread | @r8 << @r13 >> 11 >> @rdx ; @r8 << $ip >> $proc << @rsi >> @rax >> @rbx & ~@rbp ^ @r13 << 6 >> $thread >> @rax & 0x8 & @r11 ^ @r10 >> $thread & +$teb ^ $proc)  { test_statement(0xAE0); }
$error$
$end$
1568
 if (-@rax + $teb & ~@r13 >> @r13 ^ $buffer & @rax)-@rax + $teb & ~@r13 >> @r13 ^ $buffer & @rax)  { test_statement(0x2520); } else { test_statement(0x1D7A);  // /* This is a comment   break; }
$error$
$end$
1569
 if (@r12 >> @rdi & (@r13) >> $ip & @r8 >> 13 ^ 0y1111 << $proc | @rdx << $teb ^ 0x5 ^ @r13 & -@r13 ^ @r12 ^ @r10 <= @rsi & 0n16 & 0xA ^ $buffer >> 0xA >> $thread & $thread & $proc & +@r12 ^ @rbx & -@r8)  { test_statement(0x8C);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 ^ 0n6 == -@rax) ;  /* This is a not closed comment } elsif (@r10 & @r11 ^ @rdx >> @rax ^ @rdx ^ @r11 ^ @r8 != @rsi << (-@r9) & +@rsi & ~0y1110 ^ ~@r10 >> $buffer & ~$proc) { test_statement(0xAB5); ; }
$error$
$end$
1570
 if (@rdx + @r10 & @r12 >> @rbx >> @r13 | 7 & $ip & 0xD & $teb | @rdi & $proc ; @r12 >> @r9 ^ @rbx >> @r13 & -$teb & @r11 & @rax ^ $proc | 0n1 >> @rax & @rbp >> @r8)  { test_statement(0x23EA);  /* This is a not closed comment  /* This is a comment */  break; val = 0n1 ; } else { test_statement(0x19B7);  This is a not opened comment */ }
$error$
$end$
1571
 if (@r13 << @r8 >> 0y1010 << @rax & @rsp | $proc ^ @rdi >> @rax & (@rbx) | $teb & $buffer & @rdx | 2 & $teb(~@rsi + @r11 << @r10 & @rdx << $teb ^ @r13 << $proc >> @r9 >> 0y111 & $teb >> @rdi ^ +-+@r9 >> 0y1011 | @rbx ^ -@rbx & @r11 & @rbp)  { test_statement(0xFDF); }
$error$
$end$
1572
 if (@rdi + @r11 << $teb << $buffer ^ @r13 & @rsp >> 0x0 & @r10 & @r8 | @rdi & (~0xD) | @rdx >> @r8 ^ @r13 & @rsi ; @rdi + @r11 << $teb << $buffer ^ @r13 & @rsp >> 0x0 & @r10 & @r8 | @rdi & (~0xD) | @rdx >> @r8 ^ @r13 & @rsi)  { test_statement(0x23BD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 14 & ~@rbp ^ @rdx ^ $ip | ~~@r10 ^ @r9 ! 14 & ~@rbp ^ @rdx ^ $ip | ~~@r10 ^ @r9) ; } else { test_statement(0x197E); }
$error$
$end$
1573
 if (@r13 + $teb << +@r13 << @rbx >> @r9 >> @r11 ^ @rdx >> @rdi ^ @r8 >> $teb ^ 0n18 ^ @rbx = @r13 + $teb << +@r13 << @rbx >> @r9 >> @r11 ^ @rdx >> @rdi ^ @r8 >> $teb ^ 0n18 ^ @rbx)  { test_statement(0x22D8); }
$error$
$end$
1574
 if (-$teb + @r12 << @r11 << @r11 ^ 0y11 << @rdx >> 0y1110 & $buffer >> $thread ^ $buffer >> $thread & @r11 ^ $thread ; @rsi & 22 << @rdx >> 22 >> @r10 & ~@rax >> $buffer & @r10 & @rbp)  { test_statement(0x1999); }
$error$
$end$
1575
 if (@rdx + @r8 << @rsi >> $ip << ~@r9 & ~@rax >> @rax >> $ip ^ $thread ^ $buffer & @rbx > 22 + +@r11 << 10 ^ @r12 & @r11 >> 17 & +0x4 | @rsi << $ip >> $thread ^ -(@r11) >> @r12)  { test_statement(0x1AD2); ; } elsif (@rdx ^ ~@r11 & @rax & +-@rbp ^ @rdx & @rbp ^ (+($ip)) ^ $teb != @rdx ^ ~@r11 & @rax & +-@rbp ^ @rdx & @rbp ^ (+($ip)) ^ $teb) { test_statement(0x97); ;  /* This is a comment */ @rax = +0xA ;  for (val = 10; @rbp((@rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb & @rsp & 21 ^ @rsp & 0y1010 ^ +@r12 ^ 0n19 == @rdi >> @r12 ^ @rsi & $thread) { test_statement(0x603);  for (val = 10; @r11 ; @rbp | @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1BAB); }
$error$
$end$
1576
 if ($proc + $teb & $teb | 0y1100 << @rax & @rsp >> @r13 & $proc & @rbp)@r10 + $thread << @rsi >> $thread & $thread & @r12 ^ $ip >> $proc ^ $thread)  { test_statement(0x8CD);  break; } else { test_statement(0x22E3);  break; }
$error$
$end$
1577
 if ((@rdi) << $ip >> @r13 << $teb ^ 0xF << +~(@rax) & @r13 >> 0x10 & @rsp | (@rbx) ^ ~@rdx >> $thread == (@rdi) << $ip >> @r13 << $teb ^ 0xF << +~(@rax) & @r13 >> 0x10 & @rsp | (@rbx) ^ ~@rdx >> $thread)  { test_statement(0xBD5);  while  ($ip & 0y1101 ^ @r12 | 4 ^ ~+@rax))@rdx | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2535);  /* This is a comment */ }
$error$
$end$
1578
 if ($teb + @r12 << @rsi >> $teb << ~$buffer >> $proc >> @rbp | @r13 >> @r9 >= 0x3 & $ip >> $ip)  { test_statement(0x40A); ; ;  /* This is a comment */  if ($thread)@rsp)  { test_statement(0x2049); } elsif (@r10 != @rsi) { test_statement(0x119C); } elsif ($ip != $ip) { test_statement(0x1AC9); } else { test_statement(0x232A); } } elsif (@r11 << @r11 ^ 12 ^ 0y10011 ^ $buffer ^ +@r9 | @r11 | @r9 | $proc ^ @rsp | -$thread <= @r9 << 0n9 >> @r9) { test_statement(0xA60); } elsif (0n13 >> @r11 == @rbx ^ +~$buffer & @rax ^ @r10 ^ @r13) { test_statement(0xF03); } elsif (@r12 ^ @rax ^ ~2 | @rax | 0x13 | $proc $proc ^ 20 ^ @rax | @r13 | @r13) { test_statement(0xCAB); val = -@rax | 0x6 ;  This is a not opened comment */ ;  for (; @r11))0x1;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12 ^ $ip | $ip | 0n17 <= @r9 ^ $buffer) { test_statement(0x73A);  for (val = $teb; +@r13 <> +@r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($buffer > -+$thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  /* This is a comment */ } elsif (@rbx != @rbx) { test_statement(0xF72); } elsif ($teb < @r12) { test_statement(0xD6D); } elsif (0y1010 != @rsp) { test_statement(0x26B6); } elsif (+@r10((+@r10) { test_statement(0xF83); }
$error$
$end$
1579
 if (@r11 + @rbx << $buffer & @rdx >> 0xC >> @rdi($buffer << -@r9 << @rbx >> $teb << $ip >> +@r9 & +0n0 << @rax & 0y10000 >> @r10 & $buffer ^ -@r12 << $ip | @r13 << @rsi >> $proc)  { test_statement(0xDA1); } elsif (@r12 & @rax >> +~$teb | @rsi | ~@r13 & @r11 <> (0y111) >> @rbp >> @r8) { test_statement(0x15E8); }
$error$
$end$
1580
 if (21 + $proc << @r8 << @rbp >> @rdx << @rdx >> @rdi >> 0y1101 & @r11 << (@r12) & @rdx >> @rsp ^ @rsp << $teb >> +@rdi >> @r12 | @r8 << -$buffer >> -@r8 >> 5 ^ 0x8 ^ ((@rax)) & $ip | $buffer >> 0x1 & $thread & (0n14) ^ @rdi & -@rsi((-$teb | $thread >> @r13 >> $proc | $thread & $buffer)  { test_statement(0x2064); }
$error$
$end$
1581
 if ($ip >> @r11 >> @r12 | 0n5 & @rsi >> $teb <> $ip >> @r11 >> @r12 | 0n5 & @rsi >> $teb)  { test_statement(0x1FE7); } else { test_statement(0xCB7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +$buffer ; @r11) ; }
$error$
$end$
1582
 if (0x10 + @r9 << @r11 & @r8 << $proc >> -$ip >> ~@r12 ^ 0xA & 0n19 >< @r9)  { test_statement(0xF4B);  // /* This is a comment   if ($ip ! $ip)  { test_statement(0x21C1); } else { test_statement(0xE2); }  while  (@r9 | 0n11(0x11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (0n5 | @r13 >> -$ip ^ $thread | @r8 >= 0x11 >> $thread ^ @r11 >> 0n9) { test_statement(0xACC);  if ($ip | @r10 | ~@rbx = @rsi ^ @r11 | @r13 | $teb)  { test_statement(0x1D2B); } elsif (@rbx | @rax >= @rbx | @rax) { test_statement(0xC8D); } else { test_statement(0x2410); }  break; } elsif (($ip) >> 0x10 & @rax & $thread ^ @r13 & 22 ^ @rsi | +~@rdx(($ip) >> 0x10 & @rax & $thread ^ @r13 & 22 ^ @rsi | +~@rdx) { test_statement(0x79E); }
$error$
$end$
1583
 if (0n16 << @rax << $ip ^ @rsi << @r9 | 0n17 & $thread ^ @r11 >> 0xA & 0y1001 | $buffer >> +@rdi & (@r8) & $thread < 0n16 << @rax << $ip ^ @rsi << @r9 | 0n17 & $thread ^ @r11 >> 0xA & 0y1001 | $buffer >> +@rdi & (@r8) & $thread)  { test_statement(0x1006);  if (+@r8 & @rdx ^ @r13 | $teb != @rax & ~@r13)  { test_statement(0xA04); } } elsif (@rbp << $proc & @rsp >> @r10 ^ +22 >> $teb >< @r11 >> @rdx >> 0 & ~@r12 >> $buffer | @rsi ^ @r13 & @r9 ^ $ip ^ $buffer | -@r9) { test_statement(0xBC4); val = @rsi & 0x1 ^ @rsp | @r10 | 0n3 | $teb ; } elsif (-@rax >> 13 ^ @r8 & @rbx | $buffer & 0xB ^ @rdi | 22 ^ 0x1))@r9 & -@r9 | @rdi & @rdi) { test_statement(0x1620); } elsif ($buffer < $buffer) { test_statement(0xEF8);  while  (0xD(@r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; ;  /* This is a not closed comment } elsif (@r9 ^ 10 | (@rax) | 0n18 @r9 ^ 10 | (@rax) | 0n18) { test_statement(0xB0E);  /* This is a not closed comment  while  (@r9))@r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @r8)15;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rbx >< @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1584
 if (0y1011 + $proc << $proc << $teb | @rbx << @rdx ^ 0n7 >> @r12 & @r8 & @rbp ^ $thread | $ip >> ($proc) & @rsi ^ @rdx ^ @rbp ^ @r12 | @rsp & 6 ^ @rsi ^ $buffer >< $teb)  { test_statement(0x22D2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 ^ @rbp @r11 ^ @rbp) ; }
$error$
$end$
1585
 if (@rdx >> $thread << 0y1011 >> @r11 | $thread << @rsp >> $buffer >> @r13 ^ 0y1010 >> @rbp))@rdx >> $thread << 0y1011 >> @r11 | $thread << @rsp >> $buffer >> @r13 ^ 0y1010 >> @rbp)  { test_statement(0x1F33); } elsif (@r8 << $proc & @r11 | $proc >> $thread & @rax ^ @rdi > @r13 >> $proc) { test_statement(0x2407); @rax = @r12 & 0x4 | 0y1 ^ @r11 | @rbx | $teb ; }
$error$
$end$
1586
 if (@rdi + @r13 & @r9 << ~@r11 >> @r12 >> 0n8 ^ $buffer >> @r13 >> ~0y10010 & $teb >> @r8 & 10 = @rdi + @r13 & @r9 << ~@r11 >> @r12 >> 0n8 ^ $buffer >> @r13 >> ~0y10010 & $teb >> @r8 & 10)  { test_statement(0x3FC); } elsif (0y100 << @rax ^ $buffer >> -@rdi & 12 = +0x11 >> 0n0 | @rsp & $thread | @r12 & @rdx) { test_statement(0x182E); } else { test_statement(0x1CA2);  while  (+$thread ^ @rbx > @rax ^ @rsi | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1587
 if ($thread << @r12 << @r11 >> $proc ^ 0y101 >> @r11 >> @rsp | ~11 << @rax & @rsp >= $thread + 0n5 << $teb << @rdi)  { test_statement(0x641); }
$error$
$end$
1588
 if (@rdx << 0y10000 >> @rsi << @rbx ^ @rdi >> @r11 & 11 >> @rsp & @rsi ^ @r11 & $buffer & @rsp ^ 0xB == @r10 + ~~(@r12) | @r8 << @r11)  { test_statement(0x13FE);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rbp))$buffer ^ $ip) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0xF <> (@r10) | @r12) ;  // /* This is a comment   /* This is a not closed comment  for (; $proc))@rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1589
 if (@rsi << @rdi & @rax & -~0xD >> @r10 ! @rbx + 0n19 ^ @r11 | @rsi & @rax & $thread & 0y1000 ^ -@r12)  { test_statement(0xEA4); } elsif (@rax = @rax) { test_statement(0x1539); }
$error$
$end$
1590
 if (@rsi + @rbp >> @rax | $buffer << +@r8 >> $buffer ^ 0x7 < @rsi + @rbp >> @rax | $buffer << +@r8 >> $buffer ^ 0x7)  { test_statement(0x1470); }
$error$
$end$
1591
 if (@r12 << $proc << 0y1100 >> @rax >> @rsp >> $proc ^ (~0xA) << @rdi >> 0x13 & @rdx | 0x2 << ~@rbp & $thread & @r9 | @rsp >> @rbx | @r12 & +$proc))$proc + $ip & $proc << 0x11 ^ @rdi << @rdi ^ @r10 ^ @r11 & $thread ^ $teb)  { test_statement(0x19EE); }
$error$
$end$
1592
 if (@r8 << @rsp << $proc >> ~(+@r9) >> $proc ^ @r8 << 16 ^ @rsi ^ $thread & 3 ^ 0y1010 ^ @r12 | @rbx >> @rdx == $proc & 0xB << +@rsp >> 0n9 ^ @rbp)  { test_statement(0x587);  while  (@r8 & @rdx ! @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r10 & @rdx & @rbx & $teb @r10 & @rdx & @rbx & $teb) { test_statement(0x1307);  while  (@rdx | @rbx | @rbp != @r8 ^ $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rdx | +@r13 <= @r11 | 0y1000;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1593
 if ((@r8) >> 12 ^ 0xE << $thread >> 0n8 ^ 0n6 | -@rsp >> @r10 & -@rsp | $buffer >> @rdx ^ $teb ^ @r8 ^ 0x0 ! @r9 + @rsp & @rax ^ 12 >> 0y111 & @rax)  { test_statement(0x402); } elsif (@r10 << @r10 ^ $thread >> +~$thread = @rdx >> @rsi & $teb >> $teb & @rsp & @r10 ^ @rax & ~@rdi ^ @r10) { test_statement(0x2023);  if (0n10(-0n10 ^ @rbx)  { test_statement(0xF0F); } else { test_statement(0x221F); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread($thread) ;  if (@r9 >< 10)  { test_statement(0x2567); } elsif (@r12 @r12) { test_statement(0x1470); } elsif (0x0 > ((@r8))) { test_statement(0x18A8); } else { test_statement(0x332); } } elsif (@rbp = @rbp & @r11 ^ 0y10001 ^ 0x1) { test_statement(0x14AB); @rax = @rax ^ @r10 | $buffer | $ip ; } else { test_statement(0xBFD); }
$error$
$end$
1594
 if (0y0 + @rdi << @r9 & 0y101 << $proc & @rdx & $thread & ~-(@r11) ^ $teb >> $buffer >> $teb & $teb >> @r11 & 11 & $thread ^ @rdi & @rax | $thread & @rax | (@r13) >> 0n6 ^ @r8 & 0n19 ^ @r10 | @rbx ^ (@r12) < $buffer + @rbx >> @r13 & (@rbp) << $thread >> (0n1) ^ @r10 >> $proc & @rdx)  { test_statement(0x1074); } else { test_statement(0x147A); }
$error$
$end$
1595
 if (-@r11 + @rsi << $ip << @rbx & 0n15 << @rsp))-@r11 + @rsi << $ip << @rbx & 0n15 << @rsp)  { test_statement(0x1C43);  This is a not opened comment */ @rax = @rsp | 0n1 ; }
$error$
$end$
1596
 if (0x11 + @r8 << ~@r9 << 0y1110 ^ @rdi << ~-@rdx >> $thread >> ~$ip ^ $teb ^ @r10 & @rdx | @rax << @rbp & $buffer >> @rdx & $thread & $proc ^ $teb & $ip & +@r12 ^ 0n3 ^ @rbx ^ $ip))$thread + (0y10011) >> $thread >> @rbx ^ @r12 >> @r8 | @rsp >> 0y1110 & $buffer >> @rax & @rdx ^ -0y101 >> $teb | $teb)  { test_statement(0x785); } else { test_statement(0x1C3E);  break; }
$error$
$end$
1597
 if ((+@r9) + @r13 >> $teb << @r10 >> @rbp >> @r13 & +@rsp << $teb >> @rsi >> @r9 & 0n12 & (@rbx) | @rbp << 0xB & @r10 >> @rsi & 0y0 & +$proc | $ip ^ @rdx & @rsp))(+@r9) + @r13 >> $teb << @r10 >> @rbp >> @r13 & +@rsp << $teb >> @rsi >> @r9 & 0n12 & (@rbx) | @rbp << 0xB & @r10 >> @rsi & 0y0 & +$proc | $ip ^ @rdx & @rsp)  { test_statement(0x18D9);  if (@r12 | @r11((@r13 ^ 11)  { test_statement(0x1215); }  /* This is a comment */ ; } elsif (@r13 << @r13 >> @rbp >> -@rbp ^ 0n14 & @rdx & @rsi ^ 0xA & @r10 ^ ~0y1100 | @r11 >> -+@rbp | @rbx | @r12 | @rsp)@r13 << @r13 >> @rbp >> -@rbp ^ 0n14 & @rdx & @rsi ^ 0xA & @r10 ^ ~0y1100 | @r11 >> -+@rbp | @rbx | @r12 | @rsp) { test_statement(0x1C6F); }
$error$
$end$
1598
 if (@rbp << @rsi << (0x4) ^ $ip << @r10 & 0x8 & (@r13) & 0x10 ^ $teb >> @rdx & 0n1 >= -@rdx & 0x13 << @rsp ^ @r8 >> @r10 >> 0n3 ^ @r13 ^ @r11 ^ @r11 ^ @rbx | @r12 >> 17 >> 0n2 & @rdi & ~~$buffer & @rbp ^ +$ip >> -0y10000 & @rdi & @r13 | @rsi >> $ip & @rsp | -@r13)  { test_statement(0x1DF4); }
$error$
$end$
1599
 if (0x10 >> @r12 & @rax ^ @r13 | @rsi << (0y1100) >> @rax >> @r9 & @rax & @rsp(@r12 + @rdi << (@r9) << $thread ^ +0y100 | $ip >> (@rdi) >> @r9 & @r9 ^ @r12 >> @rbx & @rsp & @rbx)  { test_statement(0xA65);  for (val = 10; @r11 | ~($proc) <> @r11 | ~($proc);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip | @rbp >> @r8 & $proc & @rax | @rdx | 0y110 ; $ip | @rbp >> @r8 & $proc & @rax | @rdx | 0y110) { test_statement(0x1441);  break; } else { test_statement(0x6B2);  break;  for (val = ~@rbp; @rax | $thread((-$thread | @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1600
 if (@rbp >> @r10 << 1 >> @r11 & @rsi & -$teb ^ $proc << (0xD) & $thread >> 0y1110 & ~$ip | @rax << @rbp >> @rdx & @rdi >> $ip ^ @r10 >> @rsi & @rax & (@rdi) | @rsi >> @rdi ^ @rdi & @rbp < @rbp >> @r10 << 1 >> @r11 & @rsi & -$teb ^ $proc << (0xD) & $thread >> 0y1110 & ~$ip | @rax << @rbp >> @rdx & @rdi >> $ip ^ @r10 >> @rsi & @rax & (@rdi) | @rsi >> @rdi ^ @rdi & @rbp)  { test_statement(0x1B96);  while  (-0n1 & $ip ^ $buffer ^ @rbp | @rsp ^ @rdx | @r8 -0n1 & $ip ^ $buffer ^ @rbp | @rsp ^ @rdx | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (4 << @rbp & +@r11 >> 0n7 & @r13 ^ 0n16 & @rax & (-@r11) ^ (@r12)(4 << @rbp & +@r11 >> 0n7 & @r13 ^ 0n16 & @rax & (-@r11) ^ (@r12)) { test_statement(0x1D2E); } elsif (-@r10 | @r8 ^ @r9 ^ 0n4 | 0n9 ^ +@r8 | 7 != $thread >> ~@r9 ^ $buffer & $buffer | @r12 & @r9 ^ 0x6 ^ -@rdx | @rax | +~@r11) { test_statement(0x2682); }
$error$
$end$
1601
 if (5((5)  { test_statement(0xC92); }
$error$
$end$
1602
 if (@rsp & @r11 >> @r12 & $teb >> @r12 & @r12 & @rsi ^ @rdi << @r13 & @r12 & @r12 ^ @r11 & @rsi & @r8 <= $proc << ($proc) & @rdx << @r10 >> (@r9) >> @rsp | @rbp << @rsi)  { test_statement(0xA5D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +0n19 & 0y1000 ^ 0n18 | $teb | @r13 | @r8(0n18 & $thread) ; } else { test_statement(0x245A); }
$error$
$end$
1603
 if (+0y1011 >> 0y10011 & -$teb << @r12 >> @r10 >> @r11 & 22 & (@rbx) <> +0y1011 >> 0y10011 & -$teb << @r12 >> @r10 >> @r11 & 22 & (@rbx))  { test_statement(0x231E); } elsif (@r13 << @r11 ^ @rax >> @rbp | $buffer ^ @rdi & @r10 ^ 0y10000 | 0xC = @r13 << @r11 ^ @rax >> @rbp | $buffer ^ @rdi & @r10 ^ 0y10000 | 0xC) { test_statement(0x123F); } else { test_statement(0x25F); ;  /* This is a comment */  break; }
$error$
$end$
1604
 if ((@rsi) + @rbp << @r8 >> @r8 >> $proc | 1 << @r13 >= (@rsi) + @rbp << @r8 >> @r8 >> $proc | 1 << @r13)  { test_statement(0x2672); } else { test_statement(0x14E5);  for (val = @r11; @r8 | @rbp | $ip != @rsp ^ 20;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1605
 if (-~@r12 + 0x8 | @r13 >> ~@r11(-~@r12 + 0x8 | @r13 >> ~@r11)  { test_statement(0x22F4);  /* This is a comment */  /* This is a not closed comment }
$error$
$end$
1606
 if (0n0 >> @rbp >> @r10 >> +@rdx == ~@r9 << 21 >> $thread ^ $proc >> @r13 >> @rsi ^ $ip ^ @r10 ^ $ip ^ 15 | $ip << @r9 >> 0 & $buffer & $proc & @r12)  { test_statement(0x2008);  This is a not opened comment */  break;  /* This is a comment */ } elsif (@r13 >> @r8 >> (@rsi) & @r11 >> @rbp | (-15) & @rsi | @rdi & @rax ^ @r10 ^ @rdi | $teb | $ip | @rsp >= @r13 >> @r8 >> (@rsi) & @r11 >> @rbp | (-15) & @rsi | @rdi & @rax ^ @r10 ^ @rdi | $teb | $ip | @rsp) { test_statement(0x12F5); ;  // /* This is a comment  }
$error$
$end$
1607
 if ($thread + 0n9 >> $proc << @r9 & $proc & 10 >> $ip & @r9 ^ @r13 << @rbp ^ 2 | 0x8 ^ ($proc) & @rbp & @r9 ; $thread + 0n9 >> $proc << @r9 & $proc & 10 >> $ip & @r9 ^ @r13 << @rbp ^ 2 | 0x8 ^ ($proc) & @rbp & @r9)  { test_statement(0x171);  This is a not opened comment */ }
$error$
$end$
1608
 if (0y110 << @rdx >> @r11 << 0y100 & 7 >> 0xE >> 0y1011 & @rax >> ~$thread | @r10 << @r10 | +$thread | @r12 ^ @r12 ^ $proc ; @r9 >> @r13 >> $ip ^ +@rbx & ~$proc & @r12 | 1 << @rbp >> $proc >> $ip & @rbp)  { test_statement(0xB29);  if (@rsi & @rbp))@rsi & @rbp)  { test_statement(0xD2E); } else { test_statement(0x1CF1); }  if (~@rax != @r10 ^ +$ip | @rbx | @rsp)  { test_statement(0x1607); } elsif (@r10 <= $ip) { test_statement(0x37); } elsif (0x3 > @rbp) { test_statement(0x927); } elsif (@r9((0y1110) { test_statement(0x1230); } } elsif (@rbx << 0y1111 >> -@r13 ^ @r11 >> @r11 ^ @rsi & @rbx | 0y1100 >> @rdx & @rdi | $teb & $ip ^ @rax ^ +~@rdi | 0x8(@rbx << 0y1111 >> -@r13 ^ @r11 >> @r11 ^ @rsi & @rbx | 0y1100 >> @rdx & @rdi | $teb & $ip ^ @rax ^ +~@rdi | 0x8) { test_statement(0x21EE); } elsif (@r12 & 0n8 & $buffer ^ -0n13 & $teb ^ 0n0 | @rdi & @rdx | ($buffer) ^ @r9 ; @r8) { test_statement(0xD8A); } elsif (@rax & @rbp ^ $proc ^ @rax)@r9 ^ @rbp) { test_statement(0x1C03); val = @r10 | $buffer ; }
$error$
$end$
1609
 if (@r8 + @r12 >> @r13 << @r9 ^ @rdx >> (@r8) >> -@rsi >< @rsi + @rbx << $buffer & @rsp & $buffer & +2 ^ @rbx << @rax)  { test_statement(0x7B9);  // /* This is a comment   if (@r11 ^ (@r10) | $teb >< @rax ^ $teb)  { test_statement(0xFCB); } elsif (@rdi == @rdi) { test_statement(0xF8C); } } elsif (@r10 << @r12 & $proc >> 0y110 ^ @r10 >> $teb ^ @r13 ^ ~@rbp >= ~@rsi << @r12 >> @r10 ^ @r9 >> @r13 & @rax & -@rbp ^ +@rbp & @rax ^ $buffer) { test_statement(0x1DAC); ; } elsif ($proc >> @rbp & (@rbp) & @rbx ^ $thread & @rdx ^ @rdx | 14 & -0n1 ^ 0n14 ^ ($ip) | $thread | $teb((@r8 ^ @r13) { test_statement(0x131A); } elsif ($ip ^ -$teb ^ @r8 | @r8 ^ +0n4 | @r11 | @rdx ; 0x6) { test_statement(0x25FE); } elsif (@rdx ^ 21 < @rdx ^ 21) { test_statement(0x21E4); } elsif (@rsp | (0y1000)))@r8) { test_statement(0x111F); } else { test_statement(0x197C); val = $thread ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n12 @r9 | @r11) ;  This is a not opened comment */ }
$error$
$end$
1610
 if (@r9 + -0n16 << @r13 ^ @rbp << 0y1001 >> @r10 & @rdx +@rbx << -@r11 << -$proc & @r8 >> (0y1011))  { test_statement(0x1B0B); }
$error$
$end$
1611
 if (+0x1 + $thread << @r12 & @r12 | $buffer << @r9 >> 0n0 >> 7 ^ 0y1 >> $proc | $thread >> +$ip & $buffer ^ $buffer | @rsp & @r10 ^ 0n4 ^ $teb | ($ip) <= +0x1 + $thread << @r12 & @r12 | $buffer << @r9 >> 0n0 >> 7 ^ 0y1 >> $proc | $thread >> +$ip & $buffer ^ $buffer | @rsp & @r10 ^ 0n4 ^ $teb | ($ip))  { test_statement(0x1F9A); } else { test_statement(0x7E8);  if (@rdx ^ 0x13 <> @r13)  { test_statement(0x20C7); } elsif ($thread | @rsi = (@rsi)) { test_statement(0x18CB); } }
$error$
$end$
1612
 if (@rsi + 1 << (@r10) >> @rdi ^ $ip << +(0n19) ^ @rbx & @r9 & @rsi != $ip + @r8 << @rsi << 0xB >> $teb << @rsi >> @r13 & @rsp << @r10 & 0n7 & @r12 & $proc ^ @rsi >> @rax & @rdi)  { test_statement(0x1052); } elsif (@r9 | $buffer ^ (-(5)) ^ @r12 > @rdi << @r11 >> @r10 & @r8 & $buffer ^ @rsi | @r8 >> @r11 & $proc & $teb ^ +@rsp & 0y1001 | @r12 & @rbp ^ @r13) { test_statement(0xADC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ^ @rsi | 0x11 | (@rsp) >= @rsp ^ @rsi | 0x11 | (@rsp)) ;  /* This is a comment */ } elsif (+@rbx & 0y0 ^ $thread & 0n11 | (@rax) & 0x1 ^ @rbx ^ @rdx | @rsi ^ (@r10) | @rdi ! +@rbx & 0y0 ^ $thread & 0n11 | (@rax) & 0x1 ^ @rbx ^ @rdx | @rsi ^ (@r10) | @rdi) { test_statement(0x133E); } else { test_statement(0x1B3D); }
$error$
$end$
1613
 if (0n2 + $thread ^ +0n12 << @r9 ^ $buffer >> $buffer & @r9 & @r13 | 0y10010 >> $ip >> $teb ^ $buffer & (+@rax) & 0y1010 ^ @r12 & @rax | @rdx | @r12 ^ @r11 ^ @r11 <= 0xC >> @r10 << 0n4 >> -@r11 >> +$ip & (@r10) >> $buffer >> ~@r13 ^ -$thread & -+@rax >> $thread & $teb ^ @r8 >> @rdx & $thread & 0y10010 ^ @r13 & @rbx | @rbx >> 0n14 & @rdi & (+$proc) & @rsi ^ @rbp >> +0n8)  { test_statement(0x1987);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx & ~@rbp | @rbx ^ @r11 | @r13 | @rdi(@rbx & ~@rbp | @rbx ^ @r11 | @r13 | @rdi) ; } elsif (@rdx << $ip >> @r8 & $buffer & ((@rbp)) | @rdi >> @rsi ^ +@r8 & @r11 ^ $teb)-$ip << -@rdi & @rbx) { test_statement(0x23B2);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 | ($thread) == @r8 | ($thread)) ; } elsif (-@r9 >> ($proc) ; 0y1 ^ $teb & +@rax ^ @r10 ^ 0y10000) { test_statement(0x1640); }
$error$
$end$
1614
 if (-0y110 ^ @r12 & @r10 >> @rsp & @rax & @rax | 0n9 ^ @rbx & @rdx ^ -+@r8 | $thread >> @r8 | @rbp & ~@rsp ^ $buffer ! @r11 + @rdi & @r10)  { test_statement(0x7EE);  for (val = 10; 11 | $buffer ^ $ip >< @rdx ^ $buffer ^ @r8 | @rsp | 0y1100;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~$proc ^ @rdi | @r12 | @r8 = (0x3) ^ @rbp | 0y1111) ; } else { test_statement(0xC52); }
$error$
$end$
1615
 if (@r12 << 0y10 << @r8 >> $proc << @rsi >> 22((@r9 + 0n12 >> @r9 << -@r8 & $buffer >> $proc ^ @rbp << @r13 | 0x3 << @rsp ^ @rdi)  { test_statement(0x179A); ; } else { test_statement(0xE0F); }
$error$
$end$
1616
 if ((@r9) << $ip & @r9 & @r13 & @rsp ^ 0x12 << @r13 >> @rdi & $teb ^ $proc ^ @rbx & 0n13 ^ @rax = (@r9) << $ip & @r9 & @r13 & @rsp ^ 0x12 << @r13 >> @rdi & $teb ^ $proc ^ @rbx & 0n13 ^ @rax)  { test_statement(0x12BE);  This is a not opened comment */ } elsif ($proc << @rbp >> 0y100 >> @rax & @rax >> @rdi ^ +-+-0y1001 | (@rbx) | @rdi <> @rdx << @rax & ~~0x5 >> @r10 & 0n16) { test_statement(0x124F);  break; } elsif (0n1 >> @r8 & +@r13 & 0y1101 ! 0n1 >> @r8 & +@r13 & 0y1101) { test_statement(0xCCC); } else { test_statement(0x7D8); }
$error$
$end$
1617
 if (0n1 >> @r12 >> @r8 >> +@r11 & --0y0 << $ip >> $teb >> $buffer & $ip >> $thread & $thread & @rdx ^ @r8 >> @r10 >> $thread & @rax & @rdx | +@r11 << @rbx >> @rdx >> @r11 ^ 0 >> -0n13 & @rsp & @r9 0n1 >> @r12 >> @r8 >> +@r11 & --0y0 << $ip >> $teb >> $buffer & $ip >> $thread & $thread & @rdx ^ @r8 >> @r10 >> $thread & @rax & @rdx | +@r11 << @rbx >> @rdx >> @r11 ^ 0 >> -0n13 & @rsp & @r9)  { test_statement(0x1927);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ $proc | @rbp | ($ip))0y1011 & 21 | @rbx ^ $proc) ; } else { test_statement(0x15DF); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip > $ip) ;  This is a not opened comment */ }
$error$
$end$
1618
 if (@rbx + -@rsi >> @rbx << @rsi >> @rdx >> @rsp > @rbx + -@rsi >> @rbx << @rsi >> @rdx >> @rsp)  { test_statement(0x2151);  break; }
$error$
$end$
1619
 if (~0xB + @rdx << $buffer >< ~0xB + @rdx << $buffer)  { test_statement(0x26A4); } elsif ($ip & 0n10 & -@r12 >< 0n1 << 21 >> @r12 & @rsp & 17 ^ @rdi & ~@rdi & $teb ^ @rdi | @rax >> @r13 & @r8) { test_statement(0x1F67); } else { test_statement(0x1A6E); }
$error$
$end$
1620
 if ($teb << @rsp & ~@r10 >> $thread & -@rsp >> $teb ^ $thread >> 14 >> @r12 & @rsi >= @rbp >> $thread << @r9 | @r13 << 0y100 & $buffer >> $buffer & 4 & 11 | @r10 | $ip & (+$buffer))  { test_statement(0x25ED); } else { test_statement(0x16BA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 ^ $buffer((@r9 ^ $buffer) ; }
$error$
$end$
1621
 if (@rdi ^ @rbp << 23 & $teb >> @rbx ^ (@rsp) & @rax ^ (@r8) & -@r9 | @r11 << $teb >> @r12 >> @rdx & @rbx & @rbp > ~@rdi | 0y101 << 0xD >> $teb & @rsp & (@r11))  { test_statement(0x229E);  /* This is a not closed comment } else { test_statement(0xA6B); }
$error$
$end$
1622
 if (+(0n5) + $ip >> -$proc & 0xD << @r9)@r13 & $ip ^ -0y10010 >> 10 & @rdi | @rdi << 0y1111 ^ 0y1 ^ 0n11 & @rdx ^ @r11)  { test_statement(0x5B2); }
$error$
$end$
1623
 if (@rsi + @rdx & @r9 & -@r9 >> @r12 <> 0y1010 + $teb ^ @r11 << @r13 ^ @rdx >> 12 | $thread << @r10 & 2 >> $teb ^ $teb & 0y1101 ^ @r8 & $proc | 0y1001 ^ 0y10010 & @rbp)  { test_statement(0x1100); val = @rbp & @rax & +0xA ^ @rdx & @r9 | $thread ^ @rsi ^ -0x5 | $buffer | @r12 | $thread ;  /* This is a comment */ } elsif (+$proc << @r8 >> @rax >> $buffer & 0n1 >> @rbx | @rsp >> $proc | +0n4 ^ @rdx | @rsp | @rsp >< +$proc << @r8 >> @rax >> $buffer & 0n1 >> @rbx | @rsp >> $proc | +0n4 ^ @rdx | @rsp | @rsp) { test_statement(0x14F3);  /* This is a not closed comment  break; ; ; }
$error$
$end$
1624
 if ((($proc)) >> @rbp >> $thread & @r8 << @rbx ^ @rdi >> ~@rdi >> @r8 & @rax ^ @rsi & @r13 ^ $buffer & 0y11 ^ $teb)(($proc)) >> @rbp >> $thread & @r8 << @rbx ^ @rdi >> ~@rdi >> @r8 & @rax ^ @rsi & @r13 ^ $buffer & 0y11 ^ $teb)  { test_statement(0xEA); } elsif (@rdx >> $teb & +@rsi >> 0n2 & @r12(4 << $teb ^ @rbx >> @r12 ^ 0n10 | @rdi ^ @rdi & @rbp ^ @r9 ^ 5) { test_statement(0xC77); val = @r12 ^ 0n0 ;  This is a not opened comment */  // /* This is a comment  } elsif (-+$proc >> $thread & @rbp & 3 ^ $ip & @rdi | 0n6 & @rbx < -+$proc >> $thread & @rbp & 3 ^ $ip & @rdi | 0n6 & @rbx) { test_statement(0x17FE); } elsif (@rdx & @rsi(($buffer | 0n14 ^ ~(@r11) | @r13 | $proc) { test_statement(0x12AA);  if (@r11 == (0y1010))  { test_statement(0x2672); } }
$error$
$end$
1625
 if (@r12 >> @rsp ^ +$proc >> @rbp ^ 0y1010 & @rax & @rax ^ 0x11 & @rsi ^ @r10 | $teb << @rbx >> @r11 ^ 0x8 >> @rax & -5 | @rbx | @r13 ^ @r9 | 12 <= @rax ^ @rbx << @rbp >> @rsi >> $teb ^ @r13 ^ (@r10) & $ip | ~@rdx << $buffer & @r9 >> @r12 & +0x11 & @rbx ^ @rax ^ @r10 ^ -0xA)  { test_statement(0x20C4); } elsif (@rdx >> @rbp & $ip <> @rbx >> $buffer >> @rax & $teb >> $proc & @r13 & @rdx) { test_statement(0xA05);  // /* This is a comment  } elsif ($thread >> $buffer & @r11 >< @rsi & @rsp | @rbp) { test_statement(0xADA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb | @r9 <= +(@r12) | $teb) ; @rax = $teb | ~@r10 ; } else { test_statement(0xD51);  for (; @r13 ^ @r12))@r13 ^ @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1626
 if ($buffer + @rsp >> 12 << @r9 >> @rax >> @r10 & @rsp >> @rax >> (-+@rsi) | @r8 ^ @r11 | $proc | 0x11 & @rax ^ $buffer ^ @r10 >= ($buffer) << $ip ^ @rbp >> @r13 & ~@r12 >> $teb & @rbp & -0y10001 ^ $proc & 0n15 | @rbp << 0n18 >> @rsp >> $ip)  { test_statement(0x18BE); } elsif (0y10001 << @r11 ^ (20) >> @r12 ; 0y10001 << @r11 ^ (20) >> @r12) { test_statement(0xA8E); } elsif (@r10 >> $ip & @rax & @rax <= @r11 >> $ip & ~@r8 & @rbp | @rsi & @r8) { test_statement(0x208A); } elsif (@r11 & @rax != (~$buffer) | @rbx) { test_statement(0x799); } elsif ($buffer(($buffer) { test_statement(0x1243); } elsif (@rbp <> @rsi) { test_statement(0x1D77); } elsif (~@rbp != $buffer) { test_statement(0x1E84);  while  (@rdx >< @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x17CC);  /* This is a not closed comment  if (@r13 | 0xD >= $proc | @rbp)  { test_statement(0x2353); } elsif (0n18 0n18) { test_statement(0x245E); } elsif (0n9 == @r8) { test_statement(0x2397); } elsif (@r12 > 22) { test_statement(0x691); } else { test_statement(0x207B); }  break; }
$error$
$end$
1627
 if (+@rsp << $buffer << @r12 & $teb >> +@r10 & @rsi ^ $thread << @r12 ^ @r8 >> @rbx & 0y10010 & @r13 ^ ($teb) & @rbx ^ @rdx | @rdi << 14 >> $proc & @rbx & $proc & @r12 ^ $teb & 14 & ~@r11 | 0n15 >> $buffer & ($buffer) & $teb ^ $ip ^ +@rsi ^ +$ip | @r10 ^ @r12 ^ ~--@rax | +$ip ^ @rbx ; 7 << @rdx << @r8 ^ ~$thread << @r8 >> +$ip & 2 >> +@r10 & @r8 ^ @r12 & @r10 ^ @rsi ^ $ip | 0n18 ^ -~@r8 >> @rbx ^ 0n13 & @r13 ^ $proc ^ -@rsp)  { test_statement(0x116F); } elsif (@rdi >> $proc >> @r9 ^ 0xA))@rsi << ~@r11 >> $thread >> 0n12 | $ip ^ -$thread ^ $proc ^ $teb | +@r8 & @rbx ^ @rbp ^ $ip | @rdi) { test_statement(0x634); }
$error$
$end$
1628
 if (@r12 & @rsp >> 0n11 >> $proc @r12 & @rsp >> 0n11 >> $proc)  { test_statement(0x2683);  if (@rbp & @r10 ^ 0n11 ^ @r8 <= $thread ^ @r12)  { test_statement(0x1AAD); } elsif (@rbx ^ @rsp | @r10 >= @rbp | $buffer) { test_statement(0x11B4); } else { test_statement(0x26D1); } }
$error$
$end$
1629
 if ($proc >> @rsi >> @r9 ^ @rsi >> @rbx >> (@rdx) ^ @r8 & $buffer & @rbx | $buffer & ~@r12 & @r9 ^ @rdi | @r11 >> @rsi ^ -$teb ^ $buffer ^ @rax | ($teb) | -~0n5 ^ $proc ! @r8 << ~$thread << 0x10 >> ~~$ip | $thread ^ @r12 ^ @rdi & @r10)  { test_statement(0x217C); } else { test_statement(0xB2);  for (val = 10; @rdx))@rdx | @rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
1630
 if ($proc & @rsp << @r12 >> 0y1001 | @r10 << @r13 >> 0x13))$proc & @rsp << @r12 >> 0y1001 | @r10 << @r13 >> 0x13)  { test_statement(0x216E); } elsif (@rbx << @r9)@rbx << @r9) { test_statement(0xCF6);  This is a not opened comment */ val = @rdx ; } else { test_statement(0xA92); }
$error$
$end$
1631
 if ($teb + @rbp & -(@r12) << @r10 >> 0n4 & @r13 & @rdi & (@rdi) == ($proc) >> $teb & @rdx << @rax ^ @rdx ^ @r8)  { test_statement(0x72F); } else { test_statement(0x14C3); }
$error$
$end$
1632
 if (@r11 + $thread >> @rdi << @rdx >> +$thread ^ @r10 >> 0n8 >> @r10 & 14(($thread + 0x12 << 5 & +$buffer << 0n19 >> @rbp)  { test_statement(0x1B52); @rax = +@r10 >> $proc & @rax & $buffer ; } else { test_statement(0x12C3); @rax = -@r9 | @rbp ^ 0xD | @r13 | @rax ; }
$error$
$end$
1633
 if (@rbx < $buffer << $ip << @r10)  { test_statement(0x1537);  while  (3 & $ip | +~@rsi | 0y100((3 & $ip | +~@rsi | 0y100)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; +@rdx >= @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  /* This is a not closed comment } elsif (@r13 >> ~@rdi & @rbx & -$proc | @r9 >> +@rsp | 0xC & $proc | @rbx ^ @r8 @r13 >> ~@rdi & @rbx & -$proc | @r9 >> +@rsp | 0xC & $proc | @rbx ^ @r8) { test_statement(0x2D);  if (@r9 <= @r9)  { test_statement(0x232); } else { test_statement(0x1F42); } ; ; } elsif (@rdx & 0x0 ^ @r13 & @rax ^ $thread ! @rax) { test_statement(0x263A);  This is a not opened comment */ } elsif (0y10010 <= 0y10010) { test_statement(0x9D8);  for (val = 10; 5 < $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb < @r8) ;  if ($ip > @rdx)  { test_statement(0x105C); }  // /* This is a comment   // /* This is a comment  } elsif (@r10)@r10) { test_statement(0x12A6); }
$error$
$end$
1634
 if (@rsi >> (@r9) >> $buffer ^ ~$teb << @r13 >> @r11 == @rbx + $ip >> $buffer << @rdi >> @rbx & @rbx & @r10 >> +0x3 & @r11 & @rbx | @r9 >> $buffer >> $ip & @r12 & $proc)  { test_statement(0x1695); @rax = $buffer >> @rdx & @r13 & @rdx ; } elsif (0n4 & -0n5 & @r13 & +$ip | $proc & (@r10) ^ @r11 | @rbx & @r13 == $buffer >> @r8 & 0x1 & @r8 | $teb | @r13) { test_statement(0xA6E); val = @rbx ^ @r13 ; }
$error$
$end$
1635
 if ((@rdx) << @rsi << @rsi & @r9 << @rdi | @r12 >> @rbx ^ +0xC >> @rsi ^ @rax & @r13 == @r8 + @rbp << $thread)  { test_statement(0x2641); } elsif (@r13 << @r10 >= @r13 << @r10) { test_statement(0x860); } elsif (+0y110 >> 0y10011 & $ip > @r10 & @r11 & @rsp) { test_statement(0x10FA); } elsif (~$proc | $ip | 0y1101 | $proc <> ~$proc | $ip | 0y1101 | $proc) { test_statement(0x1BDB);  This is a not opened comment */  This is a not opened comment */  // /* This is a comment  } elsif ($thread ^ $teb < $thread ^ $teb) { test_statement(0xC07); } elsif ($proc | @rbp))(0n9) | @rsp) { test_statement(0x247A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@r12 <= @rbp) ; } else { test_statement(0x695); }
$error$
$end$
1636
 if (~@rbx << 22 & 0x10 << @r13 >> @rbx >> @rsp $buffer >> $proc << @rbx ^ 0y111 << @rax >> +1 >> 0x11 | @rdx << $ip >> @r11 | @rbp >> @r10 & 16 & @r13)  { test_statement(0x582);  /* This is a comment */  if (@rbp | @r9 | @rbp <= @rbp ^ @r13)  { test_statement(0x8F7); } elsif (0n5 @r11) { test_statement(0x1FCA); } else { test_statement(0x1976); } } elsif (0y110 << @r9 >> @rbx & @rax ^ 0x9 >> @r9 & @r13 & (@r8) ^ @r12 & +10 ^ @r9 ^ @r13 ; 0y110 << @r9 >> @rbx & @rax ^ 0x9 >> @r9 & @r13 & (@r8) ^ @r12 & +10 ^ @r9 ^ @r13) { test_statement(0x19E9); }
$error$
$end$
1637
 if (~@r13 & $proc << @r13 & @rdi >> @r9 ^ $ip << @r10 ^ 0n19 & $thread ^ 0y1101 & $ip)@rdx + 1 >> $teb ^ 0y111 & $proc >> $teb ^ @r9 >> @r9 ^ 0y0 | @r8 >> @r11 | @rsp & $ip ^ (@r8) & 0y1110 ^ @r8 ^ 0x13)  { test_statement(0x2145); }
$error$
$end$
1638
 if (@r12 + @r9 | (@r10) << @rdx >> -@rax ^ $proc & @rbx & 0x8 | @rdx >> @r13 ^ ~@rax & @r8 ^ 0xB != (@rax) << @r13 | @rbx >> @r13 >> @rsp)  { test_statement(0x165C); ; @rax = @rax ^ $thread | $thread ^ @rdi ; }
$error$
$end$
1639
 if (@r10 + @rsi << @r12 >> $teb >> 16(@r10 + @rsi << @r12 >> $teb >> 16)  { test_statement(0x1B7D);  if (-@r13 -@r13)  { test_statement(0xC08); } elsif (@r10 ^ ~0x7 ; @r10 ^ ~0x7) { test_statement(0x1DF); }  if (~@r10 == @r13 ^ @rdx)  { test_statement(0x1370); } elsif (@r12 | ~22 >< @r12 | ~22) { test_statement(0xB4E); } else { test_statement(0x474); } } elsif (@r11 << @rsp <= $thread << @r10 >> $buffer >> @rdx ^ @r10 >> @rdx ^ @rbp | 7 >> 0n6 & $teb & 1 ^ @rdx) { test_statement(0x1E92); ; } else { test_statement(0x9FA); @rax = @rdx ^ 0xB ^ 0y1000 ; }
$error$
$end$
1640
 if (0n5 + $proc << @rax >> @rsi << @r11 & (@r12) << +@r8 >> @rbx >> @rbx ^ @rax << 0x9 >> @rsp >> $thread | @rsi << (@r11) & @rbp)@r8 & @r10 | 13 << +@rsp ^ -@r11 & +@rdx | @rbx >> @rdx & @r9 & $teb | @rsp | @r13 | @r13)  { test_statement(0x174C); } else { test_statement(0xEC); }
$error$
$end$
1641
 if (0 << 0y111 << $proc ^ @r8 & @r13 >> $proc & 0y110 ^ 0n17 >> @r13 & 0x3)10 << 0y1011 >> @rbp >> +@r13 >> @rax & 23 >> +$proc >> @rax ^ @rbp << ~$thread ^ $proc >> @r11 & @r11)  { test_statement(0xC21); } elsif (@rbp >> 0 ^ $teb & @r10 & @rax | @r12 ^ @rdi & @r13 ^ @rsi | @r12 ^ $ip | 0n14 ^ $thread | @rax((@rbp >> 0 ^ $teb & @r10 & @rax | @r12 ^ @rdi & @r13 ^ @rsi | @r12 ^ $ip | 0n14 ^ $thread | @rax) { test_statement(0x1EF6);  for (; @rax | @r12)@r11 ^ +@r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif ($teb ^ +@r11))$ip >> $thread | @rsp & @rsi ^ @r11 ^ @rbx) { test_statement(0xD36);  break; } elsif (@rdx ^ (-@r9) ^ 22 | @rsi ^ @rdi | @r10)@rdx ^ (-@r9) ^ 22 | @rsi ^ @rdi | @r10) { test_statement(0x1302); } else { test_statement(0x4D3);  This is a not opened comment */  while  (@r10 | @rsp != @r10 | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  for (val = 10; ~(+@rdx) = $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1642
 if (~@rbx ^ $ip << $teb >> +0xC & @r12 & @rbx | @r13 << @rdx >> 0n4 | $buffer ^ @r11 & @rdx | $teb ^ 0n8 ^ $teb($thread << @rsp >> (+$ip) >> @rax >> @rax ^ 0n4 & -+@rdi & 0xE ^ $buffer ^ $proc & 0n14 ^ $thread ^ $teb)  { test_statement(0x1D62); @rax = $ip & 0y10 & @r12 ^ 0n4 ^ +@r13 ^ +0x0 ;  for (val = 10; @rdx > @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r10 << @r11 >> 0x8 >> @r12 & @r12 > ~@r13 & $teb ^ $thread ^ @rdi & @rbx | 0n3 >> @r11 | @rsp & 12 | @r11 ^ @rdi | $teb) { test_statement(0x2C1); ; } elsif ($buffer ^ 15 & @r12 ^ @rsp >< $buffer ^ 15 & @r12 ^ @rsp) { test_statement(0x2C2);  if (0x6 <= 0xB | @r12)  { test_statement(0x2531); } elsif (@rsp <= @rsp) { test_statement(0x158F); } elsif (~@rsi <> ~@rsi) { test_statement(0x2CB); } elsif (@r13 <> @rax) { test_statement(0x1D17); } } else { test_statement(0x1B02); }
$error$
$end$
1643
 if (11 << 0xF & @rdx << @r11 ^ @rsi << @rbx & @rbx & --$teb 11 << 0xF & @rdx << @r11 ^ @rsi << @rbx & @rbx & --$teb)  { test_statement(0x1B7E); } elsif (@rbx << ($ip) >> 0y10010 & @r9 >> 0x9))@rbx << ($ip) >> 0y10010 & @r9 >> 0x9) { test_statement(0x148B); } elsif (@r13 | 11 & 0y1000))@r13 | 11 & 0y1000) { test_statement(0x14BD); } elsif (~(0xD) | @rbx | @rdi = ~(0xD) | @rbx | @rdi) { test_statement(0x2343); } elsif ($teb ^ @rdi <= $teb ^ @rdi) { test_statement(0xEE0);  /* This is a not closed comment }
$error$
$end$
1644
 if (@r10 >> @r13 << $thread >> -(@rsi) >> ~0n14 & 0y10 > $buffer << $proc >> 0n6 ^ @r8 | $ip >> @rsi >> -$teb ^ +@rbx)  { test_statement(0xB6A);  for (val = @rdi & @rsi | @rdx; $proc & +@r13 >= +~$buffer & $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1047);  if (@r11 ^ @rsp(@rax | ~$teb | 0x4)  { test_statement(0x10CE); } else { test_statement(0x92E); }  This is a not opened comment */ val = @rsi ; }
$error$
$end$
1645
 if (0n1 + -@r11 << 6 & @r9 >> 0y10011 | @rdi << -@rax >> ~@rdx | ~$thread >> $ip & @rdi & @r8 > 0n1 + -@r11 << 6 & @r9 >> 0y10011 | @rdi << -@rax >> ~@rdx | ~$thread >> $ip & @rdi & @r8)  { test_statement(0x1B59); } elsif (~$buffer >> $buffer >> @rsi & $proc >> $buffer ^ @rsi >> @r10 & 0y1110 ^ $teb & @r13 ^ $thread | @r11 & $proc | @rdx | 21 ^ @r8 <= @r13 | @r12 >> $thread & @rsi) { test_statement(0x2347); } else { test_statement(0x1DAD);  if (@rbx(($ip ^ -0x11 | @rax)  { test_statement(0x2368); } elsif (@rdi (+@rbx)) { test_statement(0xEB4); } else { test_statement(0x1265); } ;  /* This is a comment */ @rax = -0n18 ; }
$error$
$end$
1646
 if (15 & @r10 & $proc >> -$ip & 3 & 0y1001 ^ @r10 >> @r11 & @rdi ^ 0xA >> @r10 = 15 & @r10 & $proc >> -$ip & 3 & 0y1001 ^ @r10 >> @r11 & @rdi ^ 0xA >> @r10)  { test_statement(0x9FE); } elsif (@r13 & @rax >> @rdi)@r13 & @rax >> @rdi) { test_statement(0xFA2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi >= @r8 | @rsp | @r11) ;  while  (@r9 | ($thread) == @r9 | ($thread))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  /* This is a not closed comment  /* This is a not closed comment  for (; ($teb)(($teb);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (+@rbp != 0x9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1647
 if (3 >> 0xE >> $buffer ^ +($proc) << ~11 & @r12 >> @rax | @r12 >> @rbx >> 0x0 & 0n15 >> 10 & +@r12 ^ $proc >> @rbp ^ @r11 ^ @rdi | @r12 >> @r9 & @r10 ! $proc + @rsi)  { test_statement(0x210D); } elsif (@rbp | @r9 >> $buffer | @r8 & @rbx | @rbp ^ $proc | 0n19 | ~@r11 ! @r13 ^ @r12 >> 0x12 ^ $thread & 6 ^ 0n3 | $thread & $ip & $teb) { test_statement(0xEE7);  while  (@r12 ^ @r8 = @r10 ^ @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r11 | $thread >= 0xB)  { test_statement(0x1F8D); } else { test_statement(0x267A); }  while  (-(@rbx) >< 0x11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  for (; -0x8 ! @rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ @rax = 0n10 ; }
$error$
$end$
1648
 if ($proc + @rdi << 0xE >> 0y100 & @r11 << ~@r10 & $ip & +@rax ^ @rbx <> 0n2 >> 0x0 << @r8 & $thread & +~10 & @r9 & 4 ^ $buffer << 0x6 ^ ~$teb >> @rdx)  { test_statement(0x2007);  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
1649
 if (~@rax + $thread & @rbp >> @rsp ^ 0y1011 ^ $teb ^ @r12 & @rdi | ~$ip))~@r10 << @r12 << $buffer >> 0y10011 << @r11 >> $ip)  { test_statement(0xC09); }
$error$
$end$
1650
 if (-0n13 << 0xE << 0x10 >> @rsi ^ @rdi >> @r13 >> @r13 ^ 0n13 & @rdx ^ @r13 & @rdi | $buffer >> @rsi ^ @rax & +@r12 & $buffer | $teb >> ((0y111)) & 0x12 & @rsi ^ +@r9 & (0y1100) ^ $thread | +$thread & $thread | $proc ^ @rsp ; $thread ^ @rbp << @rsp >> @rdi >> @r8 | 0y111 << $teb >> @rdx >> $teb ^ +$proc >> @r8 ^ +~0x13 & @rax)  { test_statement(0x12C9);  if (@r13 & $buffer ^ @r8 ^ $buffer | @rsi ^ @rbp | @rsp | $ip = 0y10010 & @r12 ^ @rdx)  { test_statement(0xAC7); } elsif (@rdx <= @rbp ^ @rsp | $thread | @rax) { test_statement(0x1112); } elsif (0x5 | 0n0 ! @rbx) { test_statement(0x18B0); } } else { test_statement(0x20F6); @rax = @rax ; }
$error$
$end$
1651
 if (@r8 + @rsp >> @r9 << $proc >> @rsp >> @rsi & @rsi & $teb != $buffer + (16) << +$proc ^ 0x13 & 0y10011 >> @rsp ^ @rsp >> $buffer ^ ~@r9 ^ @r10)  { test_statement(0x211E); } else { test_statement(0x12A9); }
$error$
$end$
1652
 if (@r8 + $thread & +0n17 >> @r9 >> @rdi ^ @rdx << @rdx & @rbx ^ +@rdx >> @r13 & @rbp ^ @rdi)@rsi & 2 << @r8 ^ @r10 >> @r12)  { test_statement(0x22CA);  while  (+4 ^ @rbx <> 5 ^ @r8 ^ $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1653
 if (-~$thread + ~@rbx & @rdi << @r9 >> @r10 >> $ip ^ 0xE >> ~@rsi(@rbx >> $buffer << (@rdi) | @rsi)  { test_statement(0xAE1);  // /* This is a comment  }
$error$
$end$
1654
 if ($teb + ($ip) << @r9 << @r8 >> @rdx >> ~0n19 & @rax << $buffer >> +@rsi >> @r10 ^ @r11 >> 0xF >> @rbx & +@r10 >> @r10 ^ @rdx >> @rax | @r12 << @r13 ^ @rdi ^ $ip >= ($thread) >> -0n19 << @rdi ^ @r9 ^ @rsp >> @rax ^ @rax & 0xD ^ @rsi ^ 0x4)  { test_statement(0xAAF);  while  (@rdi & -22 | @r8 ^ @rdx > @rdi & -22 | @r8 ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ @rax = @r10 ^ -@rsp ; }
$error$
$end$
1655
 if ($thread & @r11 << 0n18 & @r12 >> 0x7 & $buffer)@rdi >> @r13 & @rax >> $buffer >> 0y1110 & @r11)  { test_statement(0x1282); ; } elsif (@r9 << @rbp ^ $buffer >> @r8 ^ 0n17 & $teb ^ $buffer ^ @r8 | @r11 >> @rdi & @rdi <> @rsi & @rdx & @r11 ^ 0y1100 | @r11 ^ $ip) { test_statement(0x10AA);  while  ($ip | 21 <= @rsi ^ $proc | (@rdi))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@r11 ! $thread) ; } elsif (@rbp))$thread >> @rsi & @rax ^ @rdx) { test_statement(0x204D);  This is a not opened comment */  if (@rsp ! @r13)  { test_statement(0xFAC); } elsif ($teb <> $proc) { test_statement(0x1C9C); } elsif (-@rax(~@r10) { test_statement(0x19F4); } else { test_statement(0x1A4D); } } elsif (0n17 & @r12 | 0xB ^ @rsp | $ip >= 0x12 & $proc) { test_statement(0x93B); }
$error$
$end$
1656
 if (@r11 | $thread >> @rbp >> 0n10 & @r8 ^ $thread >> @rdi & $thread & @r9 ^ $buffer & ~(@rsi) ; @r11 | $thread >> @rbp >> 0n10 & @r8 ^ $thread >> @rdi & $thread & @r9 ^ $buffer & ~(@rsi))  { test_statement(0x114); } elsif (@rsi << $ip >> @r11 ^ @rbp >> 3 & $proc | $proc | 0x9 | @r8 | @rsi == @r9 >> @rbp >> @r8 & @rax & ~0x2 & @rdi ^ +6 >> 0n16 ^ @rsi ^ @rax | @r10 >> 0y10000 ^ 0y1101) { test_statement(0x28); ;  for (val = 10; ~0y100 | $ip >< 0n10 | @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc & $ip & 0y10000 < $proc & $ip & 0y10000) { test_statement(0x1A4C);  if (@r8 | @r8 <> 0x8)  { test_statement(0x164C); } else { test_statement(0x2627); } }
$error$
$end$
1657
 if (0n6 + 0y1000 >> @r10 << @rsi >> $buffer & $ip << @r9 >> @rsi ^ $teb << @rbp & @rbx))5 << $buffer >> +@rsi | @rdi & (@rdi) >> @rdx & ~~~-~+@r11 ^ @rbx & @rsp & @rbp)  { test_statement(0x12A3);  /* This is a not closed comment @rax = @r11 & @r12 ; } elsif (~@r13 << @r11 & $ip & @r11 & @rdx ^ 0n9 & $ip))@rdx << @rdx & $teb >> 0n3 ^ 0y10001 ^ @r11 ^ $proc | @rax & ($ip)) { test_statement(0x855); }
$error$
$end$
1658
 if (0y1111 + (($thread)) << @rbx & 0n3 << @rsi ^ 0n6 << $buffer >> 14)0y1111 + (($thread)) << @rbx & 0n3 << @rsi ^ 0n6 << $buffer >> 14)  { test_statement(0x1AB7);  This is a not opened comment */ } elsif (@r9 << @r10 >> $ip ; @rdx >> @r11 >> (@rbx) ^ +0y10000 >> $proc ^ @r13 & -$thread | @r10 >> @rdx & 0y0 ^ @rdi & @r9 ^ @r12 ^ 0xF) { test_statement(0x115B); } elsif (@rbx ^ +$teb > @rbx ^ +$teb) { test_statement(0x1D49); } elsif (@r9 | @rbp ^ @rbp 0n1 ^ @r13 ^ @rdi) { test_statement(0x64B);  break; } else { test_statement(0x1823); val = @rdx & $proc | @rbx | $ip | +@r8 ;  while  ($proc | 5 = @r9 | ~@r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx != @rsi) ; }
$error$
$end$
1659
 if (@rsi + $teb << @rsi << @r11 >> $teb << @r12 ^ -$ip >> @r11 & (-@rbp) >> @r9 & $ip ^ @rsp >> 0y1101 & $thread & ~0n19 | $teb << 2 >> @rax >> @r8 ^ +@rax >> 0xB = @r12 << @r9 << -@rdx >> @rdi << @r8 >> @rdi >> $teb & $ip >> @r9 >> 0n13 | @r10 ^ $thread)  { test_statement(0x1547);  for (val = 10; -@r11 ^ @rdi ^ $teb ; @r11 & $buffer | ~0n15;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x0 << +@rsi | $teb >> @rdi ^ @r12 & 13 | -$ip | @rdx = @rdx << @r9 >> @r11 & 0y1 >> $teb | @rsp >> @rax & @r12 & $teb | $teb & $proc | @rax ^ $ip | @rsp) { test_statement(0x1BA6);  /* This is a not closed comment } elsif (0n18 ^ $proc & @rdx ^ $thread ^ $thread | $teb & @rbx ^ @r9 ^ @r12 > 23 >> $proc ^ @rdi ^ @r10 ^ ~(@rsp)) { test_statement(0x17F1);  break; } elsif (($teb) ^ @r12 | 0xF | @rax | 0xD < $thread) { test_statement(0x24F9);  while  (@r8 = @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   for (; $buffer < $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread ^ +@r10 | @rsi == 0n0 | $ip) { test_statement(0x471); } else { test_statement(0x383); }
$error$
$end$
1660
 if ($thread + 0x6 << ~@rsp << -@rdx ^ 0n3 >> @rsi >> 0n5 ^ 0x6 >> $buffer))$thread ^ ~@rsi << @rsi ^ @r11 ^ @r12 & @r12)  { test_statement(0x20C9); }
$error$
$end$
1661
 if (@r13 + @r9((~-@rsp + @r12 ^ $proc << @rbp >> @rdx >> $thread | @rsi >> @r10 & @rsi)  { test_statement(0x236A); } elsif (~@r9 << --($teb) >> -$buffer & $proc & 17 & @r13 ^ @rsi @rdx >> @r13 >> ~$ip ^ @r13 & 0n3 & ~@rbp) { test_statement(0x328);  if (@rsp(0y10 ^ 0y10010 | $buffer | @rbx)  { test_statement(0x122C); } ; } elsif (0n4 & @rdx & @r9 ^ $proc <= $proc >> ~0x5 ^ $teb ^ $thread ^ -@r9 | $ip) { test_statement(0xA0F);  /* This is a comment */ } elsif (@r10 < @r10) { test_statement(0x6B9); ; ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ! (@r10)) ; }
$error$
$end$
1662
 if (@rsp + $ip << @r8 ^ @rsi << @rbp & 0x8 | @rsi << @r10 ^ @rbp >> $thread ^ $thread ^ $teb ^ 0x5 | $proc & $buffer & @r8 ^ @r11 & @r9 ^ $buffer($buffer + @r11 & +22 & $teb & @rdx | $ip << @rdx & @rbp >> $buffer | @rax >> $thread | (@rbp) ^ @rsp ^ @r9 | @rsi)  { test_statement(0x3BE); } elsif (~$thread >> $buffer >> @r8 ^ 0n18 >> @r13 ^ 4 & $proc ^ @r10))~$teb << +$proc ^ $proc >> @rsi | @rbx & @r12 & @rbx) { test_statement(0x3F0); }
$error$
$end$
1663
 if (@rsp << 0y10001 ^ 0y110 << @r10 >> @rax & $proc >> $proc & +@rbp ^ @rax & @rsp & @r8 ^ 0n0 ^ $buffer)@rsp << 0y10001 ^ 0y110 << @r10 >> @rax & $proc >> $proc & +@rbp ^ @rax & @rsp & @r8 ^ 0n0 ^ $buffer)  { test_statement(0x1F87);  break;  /* This is a not closed comment } elsif ($buffer >> +$thread >> $teb))$buffer >> +$thread >> $teb) { test_statement(0x1542); } else { test_statement(0x25E2); }
$error$
$end$
1664
 if (@rdx << @rdx << @rdx >> @r8 >> $ip >> 0x12 ^ +@rax >> @r10 >> $ip & $buffer >> @rsi & 0xC & 0x9(-@r10 + $thread >> @rsi & @rbx << @r12 >> @r12 | 0y10 >> @r11 ^ ~@r12 >> @r11 & -$teb | -0n4 >> (+@r9))  { test_statement(0x1A13); } elsif (@rax << @r13 & -@rsp & @r8 & 0y1111 ^ @r10 | $ip >> @rbx | @rdx ^ @r13 | @rsp | @rdi | @rbp @rax << @r13 & -@rsp & @r8 & 0y1111 ^ @r10 | $ip >> @rbx | @rdx ^ @r13 | @rsp | @rdi | @rbp) { test_statement(0x104B); }
$error$
$end$
1665
 if (@r13 + $buffer | $thread & -$proc ^ $thread & 0x5 & @rdi | @rdi & @rax | 0x3 ^ 0x8 ^ 0xF > ~4 + -@r13 << +1 << -@r11 ^ $proc >> $ip >> $buffer ^ @rbp >> $thread ^ @r9 ^ @r10 ^ -@rsp | @r10 >> @rbx >> @rdi ^ $proc >> $teb & @rdi & @rbx)  { test_statement(0x1758); } elsif (1 << @r12 ; 2 >> @r12 & @rbp) { test_statement(0x108); }
$error$
$end$
1666
 if ($proc + @rbx >> -+0x9 << 22 & $ip << 0x0 ^ (@rbx) << @rbx ^ $thread >> @r9 | 0n10 ^ $buffer & @rsi & @rbx ^ $ip & $ip ^ @r8))-@r8 + $teb << $buffer >> $buffer >> $thread >> 0x2 ^ @rbx >> @r9 >> ~(@r10) & @r10)  { test_statement(0x5A9); }
$error$
$end$
1667
 if (@rbp << @r11 << 0x11 & ((@r9)) >> $thread >> @rsp ^ $thread >> 0xC >> @r10 & (0x4) >> 0n4 & @rsi ^ @r8 >> @rdi ^ @rbp & @r8 ^ @rbx ^ @r11 | $buffer >> (0x13) >> $ip >< $ip ^ +0 >> $proc | 15 & @r13 >> -+$ip & @r9 | $proc)  { test_statement(0x12B7); } elsif (@rdi ^ ~@rsi ^ @r11 ^ @rdi))0x5 >> @rax >> $proc ^ @rbp & @r11) { test_statement(0xA48); } else { test_statement(0x11C5); }
$error$
$end$
1668
 if (0n5 + @r12 >> ~$ip << $buffer >> ~0n10 ^ @r12 >> @r13 >> $proc | $buffer >> -@rdx ^ ((@rsp)) & @rbx & @rsp ^ -@rbx ^ @rdi ^ @rbp($proc << @rdx & (0y100) << @r11 >> @rsi >> @r10 & 0y10011 | @rdx >> @rdi >> 0n0 ^ @rsi & $buffer & $buffer | @r10 >> 0 & 0x2 & 0x10)  { test_statement(0x1479);  // /* This is a comment  } elsif (@rsi << ~@r10 & $proc ^ @r11 & @rsp | +0n18 >> $teb & (@r9) & $teb | (@r13) | $proc ^ @rdx != @r12 >> ($ip) >> @r12 & @r9 & ~@rsp ^ $ip) { test_statement(0x18EA); }
$error$
$end$
1669
 if (~@rbp << @r11 & $thread << +@r13 ^ $buffer & ~0y101 & @rsp | @r12 << @rsp >> +@rdi <> ~@rbp << @r11 & $thread << +@r13 ^ $buffer & ~0y101 & @rsp | @r12 << @rsp >> +@rdi)  { test_statement(0x5A2); } else { test_statement(0x1F92); }
$error$
$end$
1670
 if (@r10 + @rsp >> 0y1110 ^ -@r8 << $thread & @r11 & (~@r11) ^ @rax >> @r8 ! @r12 << @r9 << $ip ^ @rsi >> @r13 & $teb & -@rsi | 0y1010 >> @rdi & $proc >> $ip & +$teb ^ @r8)  { test_statement(0x9FC);  /* This is a comment */  // /* This is a comment   while  (~$buffer | 0n15 <> ~0n17)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1671
 if (~+@rbx + $thread | @rbp >> $ip >> @rbp & @r12 ^ @r11 >> ~$thread | @r9 >> @rsi ^ $teb ^ 0xC | 0y1010 & $ip ^ ~-0n13 | @rbx ^ $ip | 0xD | @r9 == ~+@rbx + $thread | @rbp >> $ip >> @rbp & @r12 ^ @r11 >> ~$thread | @r9 >> @rsi ^ $teb ^ 0xC | 0y1010 & $ip ^ ~-0n13 | @rbx ^ $ip | 0xD | @r9)  { test_statement(0x15C1); } elsif (@rbp << @rbx >> @r13 >> @r11 ^ 6 & @r8 & 0n19 ^ $teb & +-$buffer((0y1001 >> 0n5 & ($proc)) { test_statement(0x2557); }
$error$
$end$
1672
 if (@rbp + @r10 >> $teb >> @r10 >< 0y101 + @r8 ^ @rsi >> (0xC) >> 16 & @rsp & @rsi)  { test_statement(0x3C4); } else { test_statement(0x2F4);  /* This is a comment */ }
$error$
$end$
1673
 if (@r11 + 0x6 >> (@rsi) & -12 << 0x1 >> @rsp & @r9 & @r13 & 0x9 | @r10 >> $proc & -@rsi(@rbp & 0n9 << $teb ^ @rdx >> (@rbx) >> @r8 ^ @rsi & $buffer)  { test_statement(0x1B57); } else { test_statement(0x895); }
$error$
$end$
1674
 if ($proc + $proc >> $thread & $buffer << @rbx >> 0n18 >> @r10 & 0y10001 >> ~$ip ^ ~@rdx < @rbx << @rbx << 0y1001 ^ $buffer << @rax >> -$thread >> $thread & $thread >> @rdx & $proc ^ 0n3 >> @rbp)  { test_statement(0x4B3); } else { test_statement(0x1A5D);  /* This is a not closed comment  while  (-+$ip > 0)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rbx <= @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1675
 if ($buffer << @rdi ^ $buffer >> $buffer <> 0n16 ^ 0n16 & @rdx >> $proc & $teb & $buffer ^ @r13 & 0y10010 & 5 | $teb << @r10)  { test_statement(0x727);  if (@r10 & @rbp ^ @r12 | ~@rbp != $proc & $proc)  { test_statement(0x1FF0); } elsif ((@r10) ^ @rdx | $ip | @r11(@r8 ^ @rsi | @r10) { test_statement(0x1AAF); } else { test_statement(0x1181); }  while  (0n10 ^ @rbp ; ~$buffer | @r11 | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi << 0y1101 >> $thread ^ 20 & ($buffer) & @rsi | $proc ^ $buffer | 12 & $buffer ^ @rax | @rsp ^ -@rsi | +0x3 | @rsi(($proc ^ ~@rdi & @r9 & 3 ^ $buffer & @rdx | @rbx ^ -0n10 & @rdx) { test_statement(0x32A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp != @r12 ^ @rsi) ;  while  (@r12 | @r12 $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (+@rdi & $teb & (@r12) | $buffer & @rbp ^ 0n0 | @r13 ^ -@r12 ! $ip & @rdx) { test_statement(0x7F2);  This is a not opened comment */ ;  while  ($thread <> $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   /* This is a not closed comment  This is a not opened comment */ } elsif (@rsp < @rsp) { test_statement(0x9E2);  while  (0x13 < @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r10((-@rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1676
 if (@r8 + @rsi >> $thread << 3 >> @rsp >> @rdx & $thread << @r8 >> @rbx | +@rsp << $teb >> @r10 ^ 7 >> @rbx ^ @r12 ^ @r13 ^ (@rsp) | -@r9 & @r13 & 23 ^ $proc | $thread & @rdx < (@rdi) & $ip << @rsi & @rax & $teb ^ $ip << @rdx >> @rdi >> 0x5 & @rbx >> $proc ^ +@rax & -0xF & 0y1110 ^ $teb & $buffer ^ 0y10010 ^ $thread)  { test_statement(0x14E2); } elsif (@r11 >> $teb >> @rax & @r12 ^ @rdi >> $teb & @rdx < @r10 >> 0x4 >> @r8 & (@rax) & @r10 & 4) { test_statement(0x2638);  break; } else { test_statement(0x257D); }
$error$
$end$
1677
 if (+(@r8) << @rdx >> @rbx << @rdi >> @r11 & $teb << @rbx >> (0y1110) ^ $ip >> 0x0 >> @r13 & -(@r10) & @r9(+(@r8) << @rdx >> @rbx << @rdi >> @r11 & $teb << @rbx >> (0y1110) ^ $ip >> 0x0 >> @r13 & -(@r10) & @r9)  { test_statement(0xEC3); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8)0x9) ;  /* This is a not closed comment } elsif ((@r9) << @r9 | 0y1111 >> @r12 & @rsp & 0y10 $ip >> @r9 & @r8 >> @rbx & @rdx) { test_statement(0x1CE7);  /* This is a comment */ @rax = $buffer ;  break; } else { test_statement(0x104); val = @rax ^ @rbx ; }
$error$
$end$
1678
 if ($ip << $ip & $teb << @rdi & $thread & @r11 ^ @r13 << 0y1001 >> 0y1010 ^ +16 & @rsp | @r12 & @rbp >> @rdx)$ip << $ip & $teb << @rdi & $thread & @r11 ^ @r13 << 0y1001 >> 0y1010 ^ +16 & @rsp | @r12 & @rbp >> @rdx)  { test_statement(0x17D3); }
$error$
$end$
1679
 if ($teb + @rax << $buffer & @rdx << 0n8 <> @rbp << @rsi << @r9)  { test_statement(0x25A8); } elsif (@rsi >= ~$ip & @r9 & $thread & 0y1100) { test_statement(0xB95);  /* This is a comment */  while  ($proc == @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12 >> @rbx & @rbx & @rdi | $thread ^ @r13 == $teb) { test_statement(0xFDF); } elsif (@rsi | ~$buffer ^ @rdi | $proc | $thread != -@r12 ^ @rax) { test_statement(0x2420);  break; }
$error$
$end$
1680
 if (@r9 + +~$buffer << -@rbx & @rsi << @rsp ^ 0y1100 ^ (+((~@rdi))) & 0y10011 | @r12 << (@rsp) | 0n8 >> 0n4 & @r11 & $buffer < @r11 + $ip << 7 >> $teb << $buffer)  { test_statement(0x18B0);  break; } else { test_statement(0xF29); }
$error$
$end$
1681
 if (@rsp + @rbp >> +@r11 << @rbp >> @r10 >> 15 & @r11 | @r8 ^ $buffer ^ 20 & @r13 ^ @rdx ^ @rsp | @rsi >> $ip ^ 0x7 & @r10 ^ $teb | $buffer & $proc | @r9 | @rdx < @rsp + @rbp >> +@r11 << @rbp >> @r10 >> 15 & @r11 | @r8 ^ $buffer ^ 20 & @r13 ^ @rdx ^ @rsp | @rsi >> $ip ^ 0x7 & @r10 ^ $teb | $buffer & $proc | @r9 | @rdx)  { test_statement(0x1F6A);  while  (@r10 & (@rsi))@r10 & (@rsi))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y10000 << $thread >> @r8 >> -@rsp > 0y10000 << $thread >> @r8 >> -@rsp) { test_statement(0x2146); } else { test_statement(0xCCF); }
$error$
$end$
1682
 if (13 + $proc >> @rbx & @rdi >> $teb >> 0n10 & 0y0 >> @rax & @rdi & @rdi ^ -$ip >> 0y10011 >> @rax ^ @rdi >> @r13 ^ 0n17 & @rdi ^ 0n18 ^ ~@rax | @r13 << @rdi | @rdx & @rdx & @rax ^ @rsp & ~@rsi ^ @r13 ^ @rbp | +@r8 & $teb | @rax ^ 2 | @rbx ! 13 + $proc >> @rbx & @rdi >> $teb >> 0n10 & 0y0 >> @rax & @rdi & @rdi ^ -$ip >> 0y10011 >> @rax ^ @rdi >> @r13 ^ 0n17 & @rdi ^ 0n18 ^ ~@rax | @r13 << @rdi | @rdx & @rdx & @rax ^ @rsp & ~@rsi ^ @r13 ^ @rbp | +@r8 & $teb | @rax ^ 2 | @rbx)  { test_statement(0x102); }
$error$
$end$
1683
 if (0y10000 + @r10 << @r12 >> @r9 << $thread >> 0xA >> @rbp <> (@rsi) << @r10 << @rbp & $thread >> $ip >> $ip ^ ~0y1101)  { test_statement(0x13D5);  while  ($thread | @rsp ^ @rdx ! $thread | @rsp ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1684
 if (@r10 ^ $ip >> $ip >> @rdi ! @r10 ^ $ip >> $ip >> @rdi)  { test_statement(0x86F); } elsif (@rbx << @r8 >> 0x6 & @r13 >> 2 | $buffer ^ ($buffer) & $thread))@r9 ^ @r11 >> +@r12 & @r12 | @r13 >> $proc | @rbp & @r12) { test_statement(0xB07); } else { test_statement(0x7B0);  This is a not opened comment */ }
$error$
$end$
1685
 if (@rbp << $ip >> @rax & @r13 >> @rdi >> 0y1010 $proc << ((@r9)) & @r10 & @r10 ^ @r11 & -$teb >> @rdi & (15) ^ @r11 >> @rsi ^ @rax & $teb ^ ~5)  { test_statement(0x1443);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +0x3 & @rbp ^ $thread ^ @r13 | $teb | @r10 | @rsi = @rbx & @rbp) ; } else { test_statement(0x2117); ; ;  break;  This is a not opened comment */ @rax = ~$thread ; ;  /* This is a not closed comment }
$error$
$end$
1686
 if (@rax + @rdi << $teb & 0y1001 << (@rbp) >> @r9 & @rdi & @rdi & @rdx ^ +0n9 << $buffer & @rdx >> @rsp((-$proc + @rsi << $teb << @rsi >> @rbp << @r10 >> $teb & @rbx << @rsp & @r13 >> @r13 & @r9 | @rbx >> @rdx ^ $ip ^ @rdi & $buffer ^ 0xC ^ @r12)  { test_statement(0x1009); } elsif (21 >> @rdx & 0y10010 | $teb & $proc ^ @rsi ^ +@rsi | $proc ; 21 >> @rdx & 0y10010 | $teb & $proc ^ @rsi ^ +@rsi | $proc) { test_statement(0x1225); } elsif ($teb | $buffer & @r11 ^ 0y1110 ^ @r10 | (@r8) <> $teb | $buffer & @r11 ^ 0y1110 ^ @r10 | (@r8)) { test_statement(0x1A21); } elsif (@rdi | 23 ^ @r9 | 0n18 | $buffer $ip) { test_statement(0x188); } else { test_statement(0x1A50); ; }
$error$
$end$
1687
 if (@rdi >> 1 << $teb ^ @r12 >> $proc | @rbx << @r9 >> $teb & ~@rsp & @rdx ^ $teb & @rsp & ((@rbp)) ^ -0y1111 & @r8 | @rbx >> $buffer ^ @r10 & $thread ^ @rdx ^ @r8 | @rbx & 0n16 >< @rdi >> 1 << $teb ^ @r12 >> $proc | @rbx << @r9 >> $teb & ~@rsp & @rdx ^ $teb & @rsp & ((@rbp)) ^ -0y1111 & @r8 | @rbx >> $buffer ^ @r10 & $thread ^ @rdx ^ @r8 | @rbx & 0n16)  { test_statement(0x6ED);  if (@rsi & $buffer ^ @r11 ^ ~$ip = $proc & -@r11 | 0n19)  { test_statement(0x88D); } elsif (@rdx ^ $thread != @rbp ^ (@r12) | $thread | @r12) { test_statement(0x25FE); } }
$error$
$end$
1688
 if (2 << ~23 << $buffer >> $buffer ^ @r9 & @rbx & $teb | @r12 << @r13 >> ($buffer) != @r9 + 0x11 >> $buffer & $buffer >> @r10 | $teb << @rdx >> @rbp | @r12 >> $proc ^ @rsi ^ @r10 ^ $teb | 2)  { test_statement(0x50C); } else { test_statement(0x1188);  if (@r12 @r12)  { test_statement(0x926); } elsif ($teb | $thread ; $teb | $thread) { test_statement(0x27A); } elsif (@rax ; @rax) { test_statement(0x1CC3); } elsif (@r12 ; 5) { test_statement(0x229A); } elsif ($buffer >= 0y1110) { test_statement(0x18F4); } else { test_statement(0x26A5); } }
$error$
$end$
1689
 if (@r12 << -+$thread & 0n0 >> @rax >> @rsp & @r9 & 21 != -$teb + @rbx >> 0x0 ^ 0x0 << $ip & @r8 & $ip)  { test_statement(0xD07); val = ~@rsi >> ~@r11 & @rbp & @rax ; } elsif (@r11 << @r13 >> -@r12 >> @r9 & +@r13 >> 0x7 & 0n11 ^ @r13 & @rax > @r11 << @r13 >> -@r12 >> @r9 & +@r13 >> 0x7 & 0n11 ^ @r13 & @rax) { test_statement(0x70F);  break;  This is a not opened comment */ } elsif (@rax | @r8 & 12 | @rax((-@rdx >> @r9 & @r12 | @rsi) { test_statement(0x607);  while  (5 > @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 & @rsi ^ +@rdi ^ @r11 | @rdx | @rbx | @rbp))@rbx & @rax ^ @rbx ^ -@rax | @rdx) { test_statement(0xF8E); }
$error$
$end$
1690
 if (0n15 >> 0n4 << 0x2 >> @r9 >> $thread & @rsi >> @rbp & 0n10 >> -@rax & @rbp ^ $teb << -@r9 >> @rdi <> 0n15 >> 0n4 << 0x2 >> @r9 >> $thread & @rsi >> @rbp & 0n10 >> -@rax & @rbp ^ $teb << -@r9 >> @rdi)  { test_statement(0x1088); }
$error$
$end$
1691
 if (@r8 << 0n16 << +0y10 & @r8 | (@rsi) << @r13 & $proc >> @rdi ^ @r10 & $buffer ^ @r11 ^ 0xC <> @r8 << 0n16 << +0y10 & @r8 | (@rsi) << @r13 & $proc >> @rdi ^ @r10 & $buffer ^ @r11 ^ 0xC)  { test_statement(0x1C95);  while  (0x13 | @rbp)@r12 | $thread ^ @rdi | @rbx | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = 0y1001 ; } else { test_statement(0x1FAD); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0xC | @r12 >< @r13) ;  This is a not opened comment */ }
$error$
$end$
1692
 if (@r8 + @r12 >> @r8 << @rdi ^ $thread << $proc & @r9 >> @r11 & $ip | 0n7 << @rsi >> (0x6) & @rax & @rsi & $thread < @rax << 0x4 & @rdi >> @r12 >> $ip ^ +@rbp & @r10 >> @r11 & (0n13) ^ @rbp ^ @r11 ^ $proc)  { test_statement(0x1C27);  while  (@r13 ^ 0n18 <= @r11 & @r8 ^ 5 | $ip | $buffer | @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi << @rbx >> +@r11 >> @r8 ; @rdi << @rbx >> +@r11 >> @r8) { test_statement(0x16C3);  while  (~@r13 ^ 0x7((~@r13 ^ 0x7)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1588); }
$error$
$end$
1693
 if (+$buffer + 0x1 << @r13 << $buffer & @r13 & $ip >> @r10 == +$thread + @rsp >> @rax & @rax << $buffer >> $buffer >> $ip & $ip >> @rdi & @rax ^ $buffer << (@r10) & 0n15 >> 0n6 & @rsp | $teb >> @r11 & @r10)  { test_statement(0x988);  /* This is a not closed comment } elsif (~-@r10 << +@r11 ^ @rsi >> @rsp & $teb & @r12 ^ 16 | 0x1 >= @r10 & @rbx & @r9 | @r10 >> 0xA & @rax ^ $teb ^ 0y111 | -+@r11 & @r9) { test_statement(0xC2D); } elsif ($ip | @r8 ^ +@rsi ^ @r9 | (@r8) ^ @rdx == $ip & $thread ^ @rax | $thread ^ $thread) { test_statement(0x234E); } elsif (@r11 ^ @rax | -0y1100 ^ @rdx | @r12 | 0xA ; 17 & 0x1 | $thread ^ 0y10011 | @rsi) { test_statement(0x853); }
$error$
$end$
1695
 if (@r13 & $teb << @rdi >> $teb & @rbp & @rdi & @r13 | +@rdi ^ ~-16 & @rbx ^ @rsi | @r12 ^ $ip ^ @r9 | @r9 ^ @rdx == +@rdi >> $teb | @rax << 0x9 & 2 >> @r11)  { test_statement(0xAF9);  /* This is a comment */ val = $buffer ; }
$error$
$end$
1696
 if (@rbx >> -$teb >> @rsp >> $teb & @r8 & @rbx | $teb << $teb >> @r9 >> @rbp & @rdi >> 0x0 ^ @rax ^ @r13 & @rax | @r11 >> 0x5 >< $ip + @r8 << +12 & @rdi >> @r11 >> $thread)  { test_statement(0xFBC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 ^ 0n0 | @r11 ^ 0x5 | $thread | $buffer <> @r12 ^ 0n0 | @r11 ^ 0x5 | $thread | $buffer) ; } else { test_statement(0x15ED); }
$error$
$end$
1697
 if (@rax << 0y110 << @rax ^ 0y111 >> 14 >> @rbp & @rdx >> $proc & $teb & @rax ^ @rax ^ 13 & $thread ^ @rbx ^ -$teb +@rsp + $ip & $proc << @r12 & 0xA | @r9 >> @rbx >> ~4 & @rsp >> $ip & @rsi & @rsi)  { test_statement(0x1146);  while  (@r10 | @rdi ^ $buffer ! @r10 | @rdi ^ $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (16 | @r11 <> @r8 ^ $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@rbp << @rbp >> -@r8 >> 17 & @rsi >> $proc < $ip << ~@r13 >> $thread >> @r8 & 0n15 >> @rax ^ @r10 & +~@rdi ^ @rsp ^ @r11) { test_statement(0x17DF); }
$error$
$end$
1698
 if (0n2 + @r12 >> $buffer << 0x2 >> ~0n8 & @rbp & 0n11 & 0n2 ^ @r11 << @r10 >> $ip >> @r11($teb + @r11 >> @rbp ^ @rax << (@rdi) >> 0n1 | 0x7 | @rax & ~@rdx & @r11 | @r12 | $thread | @r13 | $buffer)  { test_statement(0x129D); }
$error$
$end$
1699
 if (15 << @r9 & @rbx << 0y1010 @r10 + $proc << @rdi >> @r9 & +0x12 ^ $teb >> @r10 >> $ip ^ @rdx & $teb & @rbp)  { test_statement(0x506); }
$error$
$end$
1700
 if (+@rsp + @rbx >> @r13 << @rbx >> @r9 ! +@rsp + @rbx >> @r13 << @rbx >> @r9)  { test_statement(0x1943);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x6 ^ @r11 | $thread | $ip <= 0x6 ^ @r11 | $thread | $ip) ; } else { test_statement(0x18EF); }
$error$
$end$
1701
 if (@r10 >> @rdx << @rbp < @r13 << 0n5 << @rdi ^ 0n11 ^ $buffer >> $thread)  { test_statement(0x4F6); @rax = 0x11 | 0n5 & (0x5) | $buffer ^ @r10 | $proc ; } else { test_statement(0x1310); }
$error$
$end$
1702
 if (@rbp << @rsi & @rdx))@r11 + @rsi << 0xC & (@r8) << @rsp ^ $teb)  { test_statement(0x241E); }
$error$
$end$
1703
 if ($thread + -0x4 >> @r8 << $ip ^ @rsp ^ (@rdi) >> @r11 & +~@rdi & 0y110 ^ ~@r8 & @r11 ^ 0x8 ^ 7((@rdx + @r13 >> @rsp & @r9 >> @r8 & @r9 >> @r8 | @rsi << 0y1000 >> $buffer >> 0xC & -@rbx & 0x9 & $teb ^ @r10 & $thread | @r10)  { test_statement(0x1303); } else { test_statement(0x23DB); }
$error$
$end$
1704
 if ($buffer << @rax >> 0xB >> @rsp & 0y10000 ^ 0y1000 << @rdi & 0y1000 >> @r13 & $proc ^ 15 & @rdi & @r12 ^ ($teb) ^ @rsi ^ +@r12 ! $buffer << @rax >> 0xB >> @rsp & 0y10000 ^ 0y1000 << @rdi & 0y1000 >> @r13 & $proc ^ 15 & @rdi & @r12 ^ ($teb) ^ @rsi ^ +@r12)  { test_statement(0x671);  for (val = 10; @r9 ^ @rdx ^ -@rsi @r11 & -11 ^ @r8 ^ @rsi | 0n9 ^ @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 << @rsi >> $teb >> $ip | @r10 >> ~@r11 & @rsp @r8 << @rsi >> $teb >> $ip | @r10 >> ~@r11 & @rsp) { test_statement(0xD4C);  if (@r10 >< @rbp | @r9 | @rsi)  { test_statement(0x486); } ; val = $teb ; } elsif (@rbx >> 0x7 & $buffer != @rbx >> 0x7 & $buffer) { test_statement(0x1D0D);  This is a not opened comment */ } elsif (@r11 | 0 | @r10 > +@r12 & $proc ^ @rsp ^ 0y1101 | 0n17 ^ @r8) { test_statement(0x1996);  break; } elsif (@rax != @rax) { test_statement(0x4C8); } elsif ($proc | @rax == $proc | @rax) { test_statement(0x1CAE); val = @r8 ; ;  break; }
$error$
$end$
1705
 if ($buffer >> 23 & @r9 & @rbx & @r13 & ($buffer) | +@r13 >> ~@r13 & 0y1001 ^ 16 >> @r10 & 0x8 | @r12 | @r13 & @rdx ^ @r10 ^ @rsi >= 0n14 + +@rax & $ip << @r11 >> @rdi >> @rbx & -@rbx & $teb & @rsi | 0n12 >> @rbp >> 5 ^ $buffer)  { test_statement(0x1282); } elsif (@rbp ^ @rdi | @rdx >> @rbp $buffer >> 0x0 & @r13) { test_statement(0x2491); }
$error$
$end$
1706
 if ($buffer << 0x13 >> 0y101 << $teb >> 0n19 >> @rbp ^ $ip << 0y101 ^ @r11 <= -0x13 << $buffer << @rdx ^ 0n17 << @rsi)  { test_statement(0x2287); } else { test_statement(0x1345);  break; }
$error$
$end$
1707
 if (@r11 << @r11 & @r12 << @r9 >> $proc >> 0n8 ^ @r13 & @r11 = @rdx + $teb << @rsi & -0x3 & 0n5 ^ +@r13 >> @r10)  { test_statement(0x1BBA); } elsif ($ip ^ @r12 & 0n9 & 0xF <> +$buffer << ~@r8 & $ip | @r8 & $proc & @rsp ^ @rdi ^ @r10 ^ @rbp) { test_statement(0x1D9B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc ^ @r11)$ip ^ @r13 | $teb) ; } elsif (@r11 & @rdi & $buffer | 0n18 ! (@rbx) & @rsi ^ 0y10010 & @rdx ^ (@r10) | @rsp & @rbx | $buffer ^ (@r9) | @rbp) { test_statement(0x1129); } elsif (@r9 | @rsi ^ @r13 | @r9 >< $thread & @r12 | @rbx ^ @rdi | @rdx | @r11) { test_statement(0x2043); }
$error$
$end$
1708
 if (@rsi << @r11 >> @rax & @rsi >> 17 >> 0 ^ @rdi << --@rsi & @rsi & @rsp | -11 << @r9 >> 0xE <= @rbx << @r13 | @rsp ^ @r11)  { test_statement(0x1F26); } elsif ($teb << (0xC) ^ $teb & $buffer | @rdi ; 17 << 0y110 & $thread >> 0x12 & @rdi) { test_statement(0x25F1); } elsif (@r12 >> @r13 & @r10 & @r8 ^ +@rdx & @rbp ^ +~@r8 ^ @r8 | @r10 ; @r12 >> @r13 & @r10 & @r8 ^ +@rdx & @rbp ^ +~@r8 ^ @r8 | @r10) { test_statement(0xB50); } else { test_statement(0x266);  break;  for (val = 10; $buffer | @rax))@rsi | -@rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp @r12) ;  This is a not opened comment */  This is a not opened comment */  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
1709
 if (@rsi + +@r8 & @rbp << @r10 & @rdi & @rax & @r11 ^ 1 << @rsp >> +$ip | (@rsp) ^ @r11 >> ~$thread & @r8 & @rsi ^ 0n16 & @r10 != 0x6 + @r11 & @r10 << @r8 >> @r9)  { test_statement(0x4C6); }
$error$
$end$
1710
 if (@r12 + $teb >> @r9 << 0n3 ^ @rdi << $proc >> @rbx >> (@rdx) & @rbp >> @r10 >< @r12 + $teb >> @r9 << 0n3 ^ @rdi << $proc >> @rbx >> (@rdx) & @rbp >> @r10)  { test_statement(0x1A37); ;  for (val = 10; @rsi ^ +0y101)0xE ^ -0y1101 | +$teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1711
 if (-@r10 & @rsp >> -0n15 = 0y1110 << @rbx << @rsp >> @r8 >> 0y10011 >> @r13 & @r11 ^ @r11 & @r13 >> @r9 ^ @rbx >> $buffer | @r11 >> @rsp >> @rbx & @r9 ^ $proc >> @rbx & @rbp)  { test_statement(0x1B80);  // /* This is a comment  val = $ip ;  break;  break;  if (@r8 = 0x9)  { test_statement(0x1A9B); } else { test_statement(0xDFF); } } elsif (@r10 << 16 | +0y1011 & @r8 | @r9 & @r10 ^ @rdx | $buffer ^ @rbx <> @rdi >> 0n0 & @r12 >> $buffer & -@r8 | 0n5 >> $teb | @r9 & $ip ^ (@r10) | 0y10001 | $proc | ~@rbx) { test_statement(0x696); ;  if (@rbx == 0x3 | @rbp)  { test_statement(0x1940); } }
$error$
$end$
1712
 if ($teb << 0y1000 >> @r12 << @r11 & @r13 << 7 >> @r8 >> 12 & 0y1 & @rax ^ @rax >> $buffer >> @rdx & 22 & @rbp | @rbx >> @rax & ~@r13 >> @rax & @rbx ^ @rbx & @r9 ^ @r10 ^ @rax ^ @rax <> @r11 + $teb >> @rsi >> ~$teb >> +@rsp | +@rdi & 0n15 >> @r11 | @rsp >> @rdi & @rbp ^ @r8 ^ $teb | @rbp & +$ip ^ ~@r10 ^ @rdi | ~$teb ^ ~@rsi)  { test_statement(0x998); } else { test_statement(0x13A3); val = 0y10 ^ $ip ^ @rdi ; val = $thread | $teb | $teb ; @rax = @r10 | 0x7 ; }
$error$
$end$
1713
 if (@r11 + +($ip) << @r12 >> 0n15 & $buffer >> ~@r8 ^ @r12 << @rsp >> @r13 & @r12 >> @rax & @rdi & ~0xE > @r10 >> @rsi >> @rsp >> @rbx & @r9 << @rdi | @r8 << $proc & @rax & $proc)  { test_statement(0x14E4); ;  if (~@rax | @rdx | @rdx ; @rbx | @rsi)  { test_statement(0xF2C); } } elsif (0n12 << @r12 >> (5) >> (-@rdi) & $ip & 0y0 ^ @rdx >> @rsp & @r11 ^ @r8 ^ @rdi ^ 0x7 | $proc & 2 & @rsi | 6 ^ @rsp((0x7 >> $buffer ^ $teb ^ @rsi | 0y100 ^ @rsp & (~@rdx)) { test_statement(0x447); } elsif (@r13 & @r12 & @r8 ^ 0x6 ^ $proc $buffer >> @r12 | $proc & +12 ^ @rbx ^ @rbx | $thread ^ $teb | $teb) { test_statement(0x98);  This is a not opened comment */  while  ($buffer((~~@r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb & +$proc ^ 0y0 ^ @rdi < @rdi & @r13 | @rdi ^ @r13) { test_statement(0x2504); }
$error$
$end$
1714
 if (0n1 + $proc >> @rsi << $buffer >> @r11 & ~0xF >> 0x5 ^ @rdx >> 0x13 ^ 0 ^ $proc < 0n1 << @rbx << @r10 & @rax << @rdi)  { test_statement(0x11F9);  break;  This is a not opened comment */ }
$error$
$end$
1715
 if (@rsp >> $thread << @rsi & @rbp << @r13 >> @r10 >> $buffer & @r10 >> @rsi & @rdx | $ip & @r11 & +$ip ^ @rbp >> @r9 & 4 & @rax ^ 0y100 | 12 >> @rdi | 0x13 & $proc ^ @r9 | @rdx >< @rsp >> $thread << @rsi & @rbp << @r13 >> @r10 >> $buffer & @r10 >> @rsi & @rdx | $ip & @r11 & +$ip ^ @rbp >> @r9 & 4 & @rax ^ 0y100 | 12 >> @rdi | 0x13 & $proc ^ @r9 | @rdx)  { test_statement(0x90A); } elsif ($buffer << @rbx & @r10 > @r10 << $teb >> @rax & $thread >> +1 | +@r8 >> (0n13)) { test_statement(0x79B); } else { test_statement(0x2478); val = 0y10 & $ip ; }
$error$
$end$
1716
 if (@r9 + @rdx >> $buffer >> @rdx & ~$thread << @r10 >> -$thread($proc + @rdx << 0x8 | 12 | @r8 & +0n18 | 0x0 & $ip | @r9 | @rdx | @rdi)  { test_statement(0xE93);  /* This is a not closed comment } elsif (@rdx << @rbx >> @rbp & @r8 >> $buffer & $buffer ^ 0n12 >> $thread | @r9 > @rdx << @rbx >> @rbp & @r8 >> $buffer & $buffer ^ 0n12 >> $thread | @r9) { test_statement(0x17A9); } elsif (-(0n15) >> @r10 < $buffer >> @r8 ^ @r8 & $thread | $thread & $proc ^ $thread) { test_statement(0xE61); } elsif (@rbp & +$thread >< @r12 | 0xF | @rbp | @rdx) { test_statement(0x1D45); ; } elsif (@rdx = @r12 | @r10) { test_statement(0x8E5);  if (@rsp != @r9)  { test_statement(0x10C4); }  /* This is a not closed comment  if ($teb(@r12)  { test_statement(0x532); } val = $buffer ; } elsif ($ip))-@rax) { test_statement(0x610); } elsif ($thread))~@r13) { test_statement(0x1CC4);  /* This is a comment */  for (; 0n15)0n15;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1717
 if (~0n2 >> @rbx >> @r10 >> $ip & @r10 << @rsi & -$thread | @rsp >> -0n3 & 17 >> 0y10011 & @rdx | -($teb) | $proc | @rdi <= ~0n2 >> @rbx >> @r10 >> $ip & @r10 << @rsi & -$thread | @rsp >> -0n3 & 17 >> 0y10011 & @rdx | -($teb) | $proc | @rdi)  { test_statement(0x7);  if (@rsp & @rdi ^ ($teb) | 21 ^ @r8 >= @rbx & $proc ^ @rdi | 0x1)  { test_statement(0x2588); } else { test_statement(0x2FA); } }
$error$
$end$
1718
 if (@r8 + $teb << -16 << @r10 ^ @r8 >> @r12 == $teb << @rbp ^ @rsp << @rbx & @r10 >> 0x12 | @rdx << @r13)  { test_statement(0x8F8); } elsif (@rsp >> @r8 & @rax >> -@r13 | ($teb) & @r8 ^ @rax & --@rdx ^ ~@rbp | @r10 & @r10 ! 0x0 >> ~0n14 >> $proc) { test_statement(0x26FB);  This is a not opened comment */ } else { test_statement(0x16EB); }
$error$
$end$
1719
 if (@rbx << @r12 << $proc >> $buffer & 0y11 << @r9 ^ $thread << $teb >> $thread(0y1010 + @rdi << @rdi >> 23 >> @r10 >> @rsi & $ip << @rax & $thread)  { test_statement(0x14E);  This is a not opened comment */  // /* This is a comment   if (@rdx | 0x0 >= (@rax))  { test_statement(0xBC9); } elsif (@r10 @r10) { test_statement(0x1C24); } elsif (@r11 > $buffer) { test_statement(0x1521); } else { test_statement(0x17C1); }  This is a not opened comment */ ; } else { test_statement(0x1C78); }
$error$
$end$
1720
 if (6 + @r13 >> $teb ^ $teb << @r8 & ~$ip & @r11 & @rbx <= @r8 + 2 >> -@r10 & $proc << @rdx & @r11 >> +$teb & @rdx & $buffer ^ 0y1001 >> @r8 >> +$buffer & $ip >> ~16 ^ $ip ^ @r11 & $buffer)  { test_statement(0x9C1);  if (@rbx ^ $thread ; @rdi ^ 11 ^ $thread | @rsi ^ $thread)  { test_statement(0xCEA); } elsif ($teb(($teb) { test_statement(0x1BAC); } } else { test_statement(0x1725); }
$error$
$end$
1721
 if (0y1100 + @rsi ^ @r11 ^ $thread >> @rdx | @rbx << +@r8 & @rsp ^ @r13 ^ @rax & $thread ^ 0x0 ^ @r13 | $ip & (@rax) & ($teb) | @rsi & $buffer ^ @r13 | @r8 | @r8 ; $teb << @rdx >> @r10 << -@rbx >> ~@rbx >> @rbp & $ip >> $ip >> (($thread)) & $proc >> @r13 & @rdi & @rsp | $thread >> @r12 & -+@r8 >> 0n14 & (@rsp) & ~-$teb ^ 0y110 >> (@r8) ^ (@rdx) | 0x8 >> @r12)  { test_statement(0x2181); } else { test_statement(0x1276);  if (@r9 >= @r9)  { test_statement(0x211B); }  // /* This is a comment  }
$error$
$end$
1722
 if (~0y10 + @rsi << @rsp >> (($buffer)) << 0x12 ! ~0y10 + @rsi << @rsp >> (($buffer)) << 0x12)  { test_statement(0x1D59); } elsif (@r12 << 0n2 >> @r10 >> @r10 ^ @rax & $teb ^ +$thread ^ @rdx ^ +$ip | @r13 ^ $buffer | @r10 & $buffer ^ $proc(@r12 ^ +@rbx >> +~@rax & 12 & @r10) { test_statement(0x3CE);  for (val = 10; 0x12(0x12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (-@r9 < -@r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r9 = @r8)  { test_statement(0x193C); }  if ($thread == $thread)  { test_statement(0x8C6); } elsif ($ip($ip) { test_statement(0x20AD); } else { test_statement(0xC90); } } else { test_statement(0x1178);  /* This is a comment */ }
$error$
$end$
1723
 if (@r9 + $ip << $buffer << @r12 >> -@rsp << -@rsi >> $proc >> $proc ^ ~@r12 < @r9 + $ip << $buffer << @r12 >> -@rsp << -@rsi >> $proc >> $proc ^ ~@r12)  { test_statement(0x53E);  for (val = 10; +@r10 ^ @rdx < @r9 & @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; 14 ^ @r8 | @r10 >= @rdi ^ ~-$buffer | @rbx | -0y1111;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rax | 20 <= +0y1010 | ~$buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
1724
 if (~$teb << $thread | @rbx & @rsi >> @r10 | @rdi >> $ip ^ 0y1101 & @rax <= (@r12) << @rax >> @rdx | +$proc & ~-$proc & @rbp & $proc)  { test_statement(0x73);  break; } elsif (-@rdx | @rbp ^ (@rax) & @rsi ^ @r13 | $proc ^ (~@r9) >< -@rdx | @rbp ^ (@rax) & @rsi ^ @r13 | $proc ^ (~@r9)) { test_statement(0xF2); }
$error$
$end$
1725
 if (@rsi + @r12 >> 0y1010 & @rbp << @rsi >> 0x5 >> 0n10 & ~@r11 ! 0n7 + @r10 >> @r12 << @r13 >> (@rsi) & +@r13 ^ @rsp)  { test_statement(0x1146);  for (val = 10; $buffer & @r12 ^ @rax | 0y100 <> (+0n9) ^ @rdi | 0n8 | @rax | @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  break; } elsif ($proc >> $teb & @rax & @rax & @r12 | 0n18 >> @rsp & $buffer ^ @r10 | (10) ^ @r13 != $proc >> $teb & @rax & @rax & @r12 | 0n18 >> @rsp & $buffer ^ @r10 | (10) ^ @r13) { test_statement(0x1362); } elsif (0n7 >> 0y10010 ^ @rbp & ~-@rdx ^ ~$proc ^ @rbx | @rsp & @r12 ^ 0n6 ^ @r11((-0n15 >> 0xF & ~$thread ^ 0n12 & $proc) { test_statement(0xFCD); } elsif (@rdx ^ $proc ^ 0n0 | @rbp ^ @rsp >= @r11 ^ @rdi | @r9 ^ @rdi | 0x2) { test_statement(0xEC0); } elsif (~@r12 ^ 0x8 ~@r12 ^ 0x8) { test_statement(0x43F); }
$error$
$end$
1726
 if ($teb + $buffer & $teb << @rdi | @rbp << @r11 & @r13 ^ @rsi & $proc | @r13 & @rdx ^ $buffer | -@r11 ^ @rbp ^ $buffer ! $teb + $buffer & $teb << @rdi | @rbp << @r11 & @r13 ^ @rsi & $proc | @r13 & @rdx ^ $buffer | -@r11 ^ @rbp ^ $buffer)  { test_statement(0xB81); }
$error$
$end$
1727
 if (13 + +@rdi << @rsp << @rsi >> 0n18 << $proc | @rsp << @r11 >> 0n10 & 17 ^ @r13 >< 13 + +@rdi << @rsp << @rsi >> 0n18 << $proc | @rsp << @r11 >> 0n10 & 17 ^ @r13)  { test_statement(0x8CD); } elsif (0n13 << $proc >> $teb = (0n0) & -@rdi >> $teb & $ip & 16 ^ @r10 >> $proc & @rsi & ((~@rbx)) | @r9 >> 0n2 & @rax & @r9) { test_statement(0x1A43); val = $thread & 0xE ; }
$error$
$end$
1728
 if (@r13 + @rsi | (+$buffer) >> 0x13 >> 0x3 ^ $ip & @r12 ^ @rbx ^ 0xB ^ (@r11) | $proc >> @rsp((@r13 << @rbx << 0n11 & 0x0 & @rdi >> @r9 & @rbp & +@rdx | @rbp >> @r11 >> @rsi | @rbx >> $teb & $proc | @rdx)  { test_statement(0x2079); val = $ip >> $proc & @r12 ^ $teb & @r13 ^ @rbx ^ @rax | 0y10010 & @rbp | @rsp ^ $proc | @rdx | @rsp ; @rax = $ip ^ $proc ^ $thread | $teb ; @rax = @r12 ^ 12 ; } else { test_statement(0x1D18);  while  ($teb $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1729
 if (@rax << @r9 >> (@rdx) >> 0xC & 0xE << @r8 >> 1 >> @r8 ^ (@rdx) >> +@rsp >> @rbp ^ @r13 & @r8 != +@rbp + 0y1010 ^ 0x9 | @r11 & ~@rbx & $proc & @rsp ^ $thread | @r12 >> $ip)  { test_statement(0x872); } else { test_statement(0xA12); }
$error$
$end$
1730
 if (@rsi + -@rdi >> -$thread << $ip >> @rbp >> +$thread | @rbp & @r12 & @r9 ^ $proc >> +@r10 == 0y10011 << (@rbx) << $teb >> $buffer << $proc & @rdx << $buffer & -$thread >> @r8 ^ @r8 & @r10 ^ $buffer ^ +@r13 & ($ip) | +@rbx & $buffer >> +@r8 ^ @rdi & 0x2 | 21 >> 0n4 & @r13 & @rsi)  { test_statement(0x695); }
$error$
$end$
1731
 if (@r10 + $ip >> $thread << @r12 & +0n18 << 0y11 >> @r8 >> ~@rbp & @rax & -$buffer ^ @rax << $ip ^ 23 >> ~@rdi)@r10 + $ip >> $thread << @r12 & +0n18 << 0y11 >> @r8 >> ~@rbp & @rax & -$buffer ^ @rax << $ip ^ 23 >> ~@rdi)  { test_statement(0x1119); } elsif (@r10 << 0y1010 >> 13 & @rbx >> -@rbp & @rsi ^ @rsi >> 12 & $buffer & @r10 ! 0x8 >> $teb >> @r9 & @rax >> $thread & 0y1001 & $teb | @r9 | @r13) { test_statement(0x2636); } elsif (@rdx & 0y101 | @r10 ^ @rsi | $proc ^ @rax | ($thread) | -$buffer ! @rdx & 0y101 | @r10 ^ @rsi | $proc ^ @rax | ($thread) | -$buffer) { test_statement(0x449);  /* This is a comment */  if ($buffer <> $buffer)  { test_statement(0x1D8); } } elsif (@rbx | @rsp | @rsi | $ip == @rdx & -@rsi) { test_statement(0xD2D); } else { test_statement(0x1424); }
$error$
$end$
1732
 if ($teb << @rdx(0y1 + +@r10 | +@rsp & ~@r9 >> @rsi & +$buffer | 0x13)  { test_statement(0x1646); } else { test_statement(0x2080);  /* This is a comment */  while  (@r9 | $ip >= @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1733
 if (@rsp << 0n18 << @rdi | +~$buffer & 0y1101 & @r11 & @r8 ^ +@rax >> 0x9)@r13 >> @rdx | 11 >> @rbx ^ @rbp >> @r8 ^ @rsp ^ $buffer ^ $buffer | @r9 >> @r8 & @rax & 2 ^ $buffer & +~-~~$teb | $proc ^ 23 ^ @rax)  { test_statement(0x1B8A); } elsif (@rsi >> 10 >> $teb & ~@rbp >> @r11 <> @rbp & (@r10) >> $proc & @rdi & @rsp ^ 0xA & +0y111 ^ @rsp ^ ($teb) ^ $proc | $ip >> -@r9 & $proc ^ @rdi ^ @rdi ^ @r11) { test_statement(0x5BC);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 = @rdi) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (+@rsp) = @r10) ; } elsif ((0n8) >> (($buffer)) & $thread & @r11 | $thread & @r10 | @rbp ^ @rdx)0n0 >> @r8 & @rsi & @r8 ^ @rbp & (@r10) | @rbx ^ $thread) { test_statement(0x156E); } elsif (@rsp ^ @rsp > 0n7 & @rdx ^ 16) { test_statement(0xD1E);  /* This is a comment */ } elsif (@rsp != @rsp) { test_statement(0x574);  /* This is a comment */ } else { test_statement(0x1FCE); }
$error$
$end$
1734
 if (@r12 + @r12 >> @rdi & @rsi >> @r13 >> @rsi ^ @r9 & $teb >> (@r10) ^ @r9 ^ -@rdx & @r8 ^ @rdi ^ @r8 == @r12 + @r12 >> @rdi & @rsi >> @r13 >> @rsi ^ @r9 & $teb >> (@r10) ^ @r9 ^ -@rdx & @r8 ^ @rdi ^ @r8)  { test_statement(0x1A22); }
$error$
$end$
1735
 if (@rdi << 0n12 << $proc >> @rbp << 0y1111 >> @r11 >> 0y10001 & $thread >> ~@rsi & $teb & $teb ^ @r13 >> 0y1101 | ((@r11)) << @r13 >> @r10 >> @r13 ^ @rbx & @r13 ^ 0x11 = @r12 + @r11 | +@rax << @rax & @r9 & 0n13 & $proc ^ $proc >> 0n10 & 0y10010 & @rbp)  { test_statement(0x123A); } elsif (@r9 >> @rsp ^ $buffer >> @r9 & @r12 & 0y1 | $proc >> $teb & -@rdi & $proc ^ $ip | ~@r11 & @rdx ^ @r9 | @rsi | 7 | @rsp ! @r9 >> @rsp ^ $buffer >> @r9 & @r12 & 0y1 | $proc >> $teb & -@rdi & $proc ^ $ip | ~@r11 & @rdx ^ @r9 | @rsi | 7 | @rsp) { test_statement(0x26B7); } else { test_statement(0xF2F);  while  (-0n3 ; @rbp ^ -$teb | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rsp | ~0y1100 < @rsp | ~0y1100)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1736
 if (-@rsp + @r8 << $teb << -@rbx ^ 0n8 >> $teb >> @rdx & 0xA >> ($ip) ^ ~$buffer & 11 & @rax < @r10 + -20 >> @rsp >> @rsi & (~@rdx) << 0x6 ^ 23 ^ @r13 & -@rax & 0x13)  { test_statement(0x15F3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 & $thread != ~@rbp) ;  // /* This is a comment  }
$error$
$end$
1737
 if (@rdx + @r10 << 12 << @rsp & @rdx << $ip & 0y101 >> 0x6 ^ 0x1 << $thread >> @rbp >> $teb & @r12 & ~@r12 >< 0y10011 << -+@rax >> 0y1100 & $ip & 0n13 & @r13 & @r12 ^ 0n8)  { test_statement(0x1EAB); }
$error$
$end$
1738
 if ((3) + @r12 ^ $proc << $teb ^ $thread ^ 0x4 ^ $buffer((@r9 >> +$thread >> @r9 ^ @rdi << @rbx >> $thread >> $ip ^ @rbp >> @rbx ^ @rsi ^ +@rbp)  { test_statement(0x1264); @rax = @r8 >> -$ip & ~@r8 | $teb ^ @r10 ^ $buffer ; @rax = $proc & (@rdi) | 11 ;  while  ((17) | @rdi >< (17) | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1739
 if (@r8 << @r10 >> @r8 << 5 & $buffer & $teb >> @rsi & $buffer ^ @rsi ^ 0n16 & -$ip & $buffer ^ @r10 & 22 | @r11 << 23 >> @rsp >> 15 & 6 >> $thread ^ +@rbx & @rsi ^ @r8))(@rsp) + @rsp << @r11 >> $thread << (@rax) >> ~@rdi >> 0y10011 & @rsp << @r11 >> @rsp >> @r8 & $teb >> @r10)  { test_statement(0x322); }
$error$
$end$
1740
 if (~@rsp + +$ip ^ $teb & @rdi ^ @rax | $ip << @rdi >> $proc = @rdx << -@r12 >> @r9 | 0n11)  { test_statement(0x1E88);  while  (0n9 & +@r8 | @r13 ^ @r10 | -@rdx >= +$thread & $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x181A); }
$error$
$end$
1741
 if (@rbx << @rsp << @rsi >> @rdx >> @rsp ^ $thread << $teb >> $thread >> 0y1100 <> @rbp << ~@r11 << @r8 >> @r10 >> @rax >> 0x5 & @rbp << $ip ^ @rdx ^ @r13 >> $ip & @r10 | @r10 ^ ~@r13 >> 0n0 ^ @rax)  { test_statement(0xD1E);  // /* This is a comment  @rax = $buffer & $thread ; } elsif (@rdx << @rax & 0y1001 >> @rsp)@rax & -@r13 & $teb & @rdx ^ +$buffer) { test_statement(0x1821);  if (-$ip | @rsi ! @r13 ^ -$buffer)  { test_statement(0xC0A); } elsif (@rsp <= 7 | +$ip) { test_statement(0x7D8); } else { test_statement(0x18AC); }  for (@rax = @rdi; @r13 | @rdi)~@rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~0xE >> @r8 ^ @r9 | 3 <= $teb & @r11 & @rdx | @rsp & $thread) { test_statement(0xCF9); } else { test_statement(0x1A8C); }
$error$
$end$
1742
 if (@rdi << +(@r12) ^ 0n9 << ~0n13 >> @r12 ^ @rdx >> $proc & @rax ^ 0x9 & $buffer | $teb << -$buffer >> ~@rsi >> @rsp | 0x4 & 0x12 & $thread ^ 0y10001 >= @rbx + $thread << @r11 >> @r12 & 0n18 << @r12 >> @rsi >> $ip & @r12 >> @rbp)  { test_statement(0x1A95);  if ($ip >< @rbx ^ @r10 ^ 0y111)  { test_statement(0x162A); } else { test_statement(0x19FE); }  for (@rax = ~~@r10 | $ip; $buffer | $thread >= $buffer ^ @rdi | +12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb == @rbp) ;  // /* This is a comment   while  ($teb > @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (@rax & @rdx >> @rsi & @r8 & @rsp == $buffer >> @r12 >> 0n17 & @r10 >> @rbx & @rsp | @r9 & 0y111 & $teb) { test_statement(0x1C61); }
$error$
$end$
1743
 if ($buffer + @rdx << @r11 << @rsp ^ $proc << @r13 >> --$ip & $buffer >> ~@rsi ^ 0y111 ^ $teb ^ @rdi ^ (@r11) | @rbp ^ $buffer >> @r12 ^ 10 & $proc ^ @rdi ^ 0xD <> 0y10010 & @rsi >> @r12 ^ 0n9 << @r11 >> @r10 & 0n13 >> @r12 ^ @rdx ^ 0x8 & @r12 ^ @rdi ^ @r8 | (@r13) << @rbx | -@rsp & $ip ^ $buffer)  { test_statement(0x1EA0); }
$error$
$end$
1744
 if (@r11 + 0x0 << 0x2 << @r13 != $proc + @r9 ^ +11 >> @rbp >> -@rsp | 0xE >> @rbp >> @r8 & 0xD ^ (14) ^ @r12 | @rsi >> @r9 ^ @rax & $proc ^ 0xC ^ 0xD)  { test_statement(0xA87); } elsif (@rdi << $proc >> $proc >> @r11 & @rsp & $teb & 0x4 ^ @rbp & -$teb & (1) ^ -@rdi <= @rdi << $proc >> $proc >> @r11 & @rsp & $teb & 0x4 ^ @rbp & -$teb & (1) ^ -@rdi) { test_statement(0x454);  This is a not opened comment */  /* This is a comment */ } elsif ($buffer >> @r13 & @rbx >= $teb & $proc & 0x1 ^ 12 ^ @r11 ^ @r10) { test_statement(0x2108);  This is a not opened comment */ } else { test_statement(0xC46);  for (; @rax ^ @rdx | $buffer | @rdi)0x10 | @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (@rax = $thread; @rbx <= 0n10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1745
 if (@rbx >> @r8 >> @r11(@rbx >> @r8 >> @r11)  { test_statement(0xD1B); }
$error$
$end$
1746
 if (@r11 << +@r12 << $buffer >> @r12 << @rsi >> @rax ^ $thread >> $teb >> $teb ^ (@rsi) | $proc >> $teb & $proc | -@r10 ^ ~@rsp & @r10 ^ @r12)@r11 << +@r12 << $buffer >> @r12 << @rsi >> @rax ^ $thread >> $teb >> $teb ^ (@rsi) | $proc >> $teb & $proc | -@r10 ^ ~@rsp & @r10 ^ @r12)  { test_statement(0x1EE3);  This is a not opened comment */  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi <> @rsi) ; } elsif (+$ip & $ip >> @rdx & $proc | @rdx >> @r10 | 23 = @r12 << @rsi & ~@rdx & $buffer ^ 0xA >> $thread & (0y10000) | @rsi >> @rbp & @rsp) { test_statement(0x2100);  if (@rax ^ (16) ; @r10 | $thread | $teb)  { test_statement(0x2057); } elsif (@rdx <> $buffer) { test_statement(0xB85); } elsif ($teb $teb) { test_statement(0xED4); } else { test_statement(0x235F); } }
$error$
$end$
1747
 if (+$thread << 0xF << $buffer ^ @rax << ++~@rbx >> $buffer >> @rdx ^ $teb | @r8 << 1 >> 15 & $teb ^ 7 & 0x7 & 6 | $buffer ^ (@r10) & @r12 | @rax >< @r11 << @r11 << -+$teb >> 0n17 >> $thread & $ip)  { test_statement(0xF72);  /* This is a not closed comment } elsif (@rdx & @r12 >> +0y1101 ^ @r10 >> -@rsp | @rbp >> 0n13 ^ @rax & @rbx | 0y110 | @r11 ^ @rbx($ip >> $buffer & @r8 & @rbx ^ @rsp | @r11 >> @r9 & -@rbx ^ 0y10001 & @rax ^ @r12 ^ @r9) { test_statement(0x2372);  break; } elsif (~@r8 >> 7 | @r10 ^ @rdi ^ @r11)$ip >> +-@r8 & $ip & 0n4 | @r8) { test_statement(0x24F2); } elsif (0y100 & $buffer ^ 0y1101 ^ @rsp))@r11 ^ (@rdi) | @r9 | @rsp) { test_statement(0x1409); } else { test_statement(0x8D1);  /* This is a comment */ }
$error$
$end$
1748
 if (@rax + $buffer << @rdi << @rsi >> @rax | @r10 >> @r9 & $proc | $teb >> @rsp & $buffer ^ 0x0 >= @r9 << 0y10000 << 0n8)  { test_statement(0xC57);  if ((@rbp) & @rsp | 0x1 | $ip | 0n14 >= @rax & $proc | @rbp ^ $proc | 7 | @r9)  { test_statement(0xCC4); } elsif (@rax ^ @r9 | @r11 < @rax ^ @r9 | @r11) { test_statement(0x15E2); }  for (val = 10; $thread ^ @r10 | (@r11) | -($ip) > @r9 ^ $teb | $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip & $teb > @r13 << 0y1 >> ~$thread >> @rbx ^ @r13 >> $thread ^ @r13 ^ 0y1101 ^ @r10 | $teb) { test_statement(0x8A0); }
$error$
$end$
1749
 if (+0x8 & @rbx << 0n14 >> (0n17) >> -@rdx & ~$buffer >> @r12 & 0x0 ^ $proc >> @rdx >> @rsp & @rax >= @rdi + @rbx << @r13 << +@r10 ^ @r8 << @rsp >> @r13 ^ @rbx >> @rax | @rsi ^ $buffer & 0y1010 | 0 >> $buffer & $buffer & @r11 ^ ($proc) & $teb)  { test_statement(0x10D); } elsif (-0y1010 >> @r11 & @r12 & $buffer & @r11 | $ip >> 0n13 ^ @r11 ^ @r11 ^ @r13 >= -0y1010 >> @r11 & @r12 & $buffer & @r11 | $ip >> 0n13 ^ @r11 ^ @r11 ^ @r13) { test_statement(0x2232); } elsif (@r8 >> 0xA ^ -0n0 & @rdi ^ $thread | 0n6 & $ip((@r8 >> 0xA ^ -0n0 & @rdi ^ $thread | 0n6 & $ip) { test_statement(0x14C0);  This is a not opened comment */  break; } elsif ($teb & $ip ^ $buffer ^ ~@rbx <> @rax & $ip ^ @rdx ^ +@r9 | 0n1 ^ $buffer) { test_statement(0x2554); val = $proc ;  break; } else { test_statement(0x9BE); }
$error$
$end$
1750
 if (@rsp << $teb << @rsp >> @rsi << @rdx >> -~(++$thread) & +@rdi << @rdx >> $thread | 3 >> @r10 & @r12 ^ 0y111 >> +@rdx <= @rbx << $proc | @rbx << $ip & ~@rax >> @rsi ^ @rsp & 0y100 ^ @r13)  { test_statement(0x1D84); } else { test_statement(0x19FB); }
$error$
$end$
1751
 if (@rdx & @r8 << @r11 >> @r10 >> @r12 & @r10 >> @rax ^ @r8 << $thread ^ 0x5 & @rdi & @r9 ^ $teb ^ @rbx | 14 >> 0y1111 >> @r8 & +@rsp ^ (0xF))$buffer + @r12 >> $ip >> @r8 >> @rbp & $buffer & @r11 | $thread >> $proc >> @rax ^ @rdi >> $buffer & @r8 & @rbx ^ 0y111 & @r11)  { test_statement(0x574);  /* This is a not closed comment  /* This is a not closed comment } elsif (@r9 << $buffer ^ @rsp >> @rbx & @r8 ^ +@rsp ^ @rsi))$buffer & @rsp & 0x1) { test_statement(0xB04); }
$error$
$end$
1752
 if (+@r8 + ~0n4 & $thread << $ip >> @rdx & @rdi <> @r10 + @r8 << @rsp << @rsp & 0y1010 ^ @rdx & @r10 & $proc & @rbp ^ @rbx >> @rdi | $proc >> @r8 >> $proc & $ip >> @r11 | +7 >> @r11 ^ @rdi)  { test_statement(0x203B); } else { test_statement(0x1D5A);  for (val = 10; +@rdx ^ $proc >= +0n15;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1753
 if (+$proc + $ip << @r11 | @rax << @r8 >> 14 & (0y10000) | $thread >> 0n5 & $ip ^ $thread >< @rdx + $thread << (@rax) & (@rsp) & $teb ^ @rdx >> $proc & @r13)  { test_statement(0x5B5);  /* This is a comment */  // /* This is a comment   /* This is a not closed comment } elsif ($ip >> @rsp >> @rsi | 3 >> +@rbx & 0y110($ip >> @rsp >> @rsi | 3 >> +@rbx & 0y110) { test_statement(0x1A73); } else { test_statement(0x1BD5);  while  ($buffer ^ $thread))$proc ^ @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1754
 if (-@rsp + @rax << @rdx << @rbp >> @r13 >> $proc ^ @r10 | $proc << (0n6) & @rax & $proc | @rdx & 1 | @r13 & @rdi = @r9 | @r10)  { test_statement(0x23EC); } elsif (@rdx << +@rsi ^ $teb | @r13 >> 0n18 & 21 & @rbx | 3 & @r9 | $buffer ^ $proc | $buffer | @r9 <> @rdx << +@rsi ^ $teb | @r13 >> 0n18 & 21 & @rbx | 3 & @r9 | $buffer ^ $proc | $buffer | @r9) { test_statement(0x2067); } else { test_statement(0x1EF3); }
$error$
$end$
1755
 if (@r9 << (0x7) << +$thread & +$proc & @r10 & $ip ! @r9 << (0x7) << +$thread & +$proc & @r10 & $ip)  { test_statement(0x91C); } elsif (0y1 << @rbx >> @r10 >> @rbx ^ @rdx ^ @rsp & (0y10001) | @rsi >> $teb ^ $proc ^ @r9 ^ @rbx | $teb & @rbp ^ +@rsp | ($proc) ^ $thread | 14 ! $thread << ($teb) & 0y101 & $thread & 23 ^ ~$teb & $proc | 0y11 >> @r9 & $teb) { test_statement(0xD2); ; } else { test_statement(0x1F45); }
$error$
$end$
1756
 if ($buffer + @r10 << 0y0 << @r9 & @rdx ^ @rsi << @r9 & @rbp & $teb & @rsp ^ 17 ^ $teb ^ 21 ^ (-16))@rbp >> $teb & @rdi << @rdi >> $buffer ^ $thread << @rdx >> @rbp >> @r10 ^ @r9 | $thread << 0n0 & @rdi ^ @rax >> $teb & 0x5)  { test_statement(0x18B9); }
$error$
$end$
1757
 if (1 + @rbp << 0y10011 << @rdx | 17 >> $buffer >> $buffer & $ip & $proc | 7 | @rsi | @rsp 1 + @rbp << 0y10011 << @rdx | 17 >> $buffer >> $buffer & $ip & $proc | 7 | @rsi | @rsp)  { test_statement(0x185F);  // /* This is a comment  }
$error$
$end$
1758
 if (+-(@rax) << @r13 << @rdi & 10 << $teb | $ip << $buffer & @r8 >> $proc & (@r9) <> @rbx + @rbx << 0x2 >> -@rbp << (@r11) >> @rsp >> @rdi ^ $ip << $teb >> 0xE & @rbx ^ $proc | 0n9 << (-@r10) & $ip >> @r13 & $ip | 0y100 >> $teb | @r11 & @r10 | @rax | @r12 | @rsp)  { test_statement(0x7FB); val = @rax ^ 0n14 & $buffer ^ $buffer ^ +@rax ;  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer | @rsp ; @r9 | @rdi) ; } elsif ($proc << +0x7 >> 12 >> +0x5 ^ $teb ^ @r9 & @rsi < $thread << @r8 >> @r12 & $proc >> $thread | @rsi >> 0y1010) { test_statement(0x109E); }
$error$
$end$
1759
 if (0x13 + @r8 << @rsi << @rsi & 10 & @r9 >> @r10 & @rax > 0x13 + @r8 << @rsi << @rsi & 10 & @r9 >> @r10 & @rax)  { test_statement(0x1310);  while  (@rdx(($buffer ^ @r8 ^ @r11 | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread << (@r8) >> $ip >> $teb & @rbp ^ @r9 ^ @rsi | 0y10 & +@rdi & @rbp ^ @rsp & @r13 ^ 20 ^ -@rbx | $proc & @rdi ^ @rsi == @rsi & @r11 & ~@rax & @rax | $ip & @r10 ^ $thread & (@r11)) { test_statement(0x1D7); } elsif (+@rdi & -@rsp & @rbx ^ @rbx != ~@r10 >> ((-@r8)) ^ 7 ^ @rbx | @rbp & $ip | -$proc ^ @rsi) { test_statement(0x159D);  for (val = 10; 20 | @r8 = 0n19;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif ($buffer & $buffer ^ $thread = @rbp & -$buffer | 0y1011 ^ ~@r11) { test_statement(0x439); } elsif (@rbx | -$ip <> 0y1011 | @r11 | @r12) { test_statement(0xC1A); }
$error$
$end$
1760
 if (@rsp + @r11 >> ~@rdx ^ @r12 >> $teb >> @r10 & @rdx >> ~@r13 & @rax ^ @rdx >> $proc ^ @r13 & $proc | 0n3 >> @rdi >> @rbp & $ip ^ @r9 >> @rbp | 0y10010 >> $proc >= @r10 + 0n10 & @r9 << (@r12) ^ 0x3 & 0y1 & 0xB & @r12 ^ @r8 & @rsp)  { test_statement(0xCA3); } else { test_statement(0x1B03); }
$error$
$end$
1761
 if ($ip + @rsp >> $proc & 0n1 | ($teb) | 10 >> @rbx | 6 | -@rsi | @rdx 0y1110)  { test_statement(0x33); } elsif (@r10 << $proc & @r10 >> ~@rdx & @rdi & 0n12 ^ @rax >> ~-0n12 & @rdx & @r11 ^ $buffer & 0y0 ^ @rbx ^ $ip < +@rsi << @rax ^ 17 | @rdi & 0y1001 ^ @r12 & $ip) { test_statement(0x1B22); }
$error$
$end$
1762
 if (0n14 >> $proc & $proc >> $teb >> @rdi ^ @rsi << @rdx >> -@rax >> (@rsi) | 17 << @rbp & @rsp >> $thread & $proc & $thread ^ @r11 & $buffer | $buffer >> $proc & 0n15 & @r13 >< $buffer + 10 >> @rdx >> @r12 >> @rdx ^ 0n11 >> (0n11) >> @rsp & 11 & @rax & $ip | @r12 >> @r12 ^ $teb)  { test_statement(0x146C); } else { test_statement(0x1211); }
$error$
$end$
1763
 if ($buffer + @rsi = $buffer + @rsi)  { test_statement(0x1539); } elsif (0x1 & $ip >> 0y1100 ^ @r8 ^ -$thread & 0x11 ^ $ip ^ 10 | @rdx & 0y1010 0x1 & $ip >> 0y1100 ^ @r8 ^ -$thread & 0x11 ^ $ip ^ 10 | @rdx & 0y1010) { test_statement(0x1CA0);  for (@rax = 10 ^ ~0x4; @r11 ^ @rdx | $proc | -@r9 > @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 & $teb ^ $ip | @r10 & $ip | $proc ^ @rbp)@r8 ^ 0n15) { test_statement(0x122C);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 <> @r10) ; } elsif (@rbp | $proc ^ $thread))$teb & $thread) { test_statement(0x23E); } elsif ($teb ^ $buffer ; $teb ^ $buffer) { test_statement(0x136C); ;  // /* This is a comment   // /* This is a comment  } elsif (@rbp(($teb) { test_statement(0x120C);  /* This is a comment */  while  ($proc == $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @r8 = 0y1011;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1764
 if (11 + ($buffer) << @rbp >> $ip << @rsi >> @r8 | @rbp << ~@r8 >> @rdx & 0n8 >> (4) == @r8 & 3 << $ip ^ @r13 >> @rax & 0y1011 | $buffer & 0y11 ^ @r9 >> $ip & @rax | 6 >> 0x4 & @r9 | 0y1001 & @rdx | 21 ^ @rax)  { test_statement(0x1683); } elsif (+~@r12 >> @r9 >> @r11 | -@rsp & $proc ^ @r12 & $teb > +~@r12 >> @r9 >> @r11 | -@rsp & $proc ^ @r12 & $teb) { test_statement(0xB46); } else { test_statement(0x1BB8);  if ($ip ^ $buffer >= $ip ^ $buffer)  { test_statement(0x14AB); } elsif ($thread >< @rbx) { test_statement(0x2567); } else { test_statement(0x51F); } }
$error$
$end$
1765
 if (@rsp >> @rbp << +0n4 >> @r12 >> (3) & @rax << @rax & @r9 >> @rax & @r12 & (16) <= 0n18 + @r8 & $thread & ~@rdx ^ ~@rbp >> $buffer >> @rbp & $teb >> @r11 ^ @rax >> @r8 ^ 6 ^ @r12)  { test_statement(0x166A);  /* This is a comment */  /* This is a not closed comment } else { test_statement(0x15BB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 ^ 0n0 | @rsi <= @rbx ^ @rbp | @r13) ;  if (~@r12 ! @r13)  { test_statement(0x1648); } else { test_statement(0x18BD); } val = ~0xE | (+0n14) ; ;  while  (@r9 = @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
1766
 if (22 ^ @rsi << -$thread & $thread >> @rax ^ @rsp >> @r13 & 13 & @rdx ! $thread + @r9 << $thread << @r9 >> @rsi >> +@rbp >> @rbp ^ 0y0 << 0n16 >> $buffer >> (0n16) & (+@rax) & +~@rdi ^ $teb | $teb << @rax >> +@r12)  { test_statement(0x1691); }
$error$
$end$
1767
 if (@r13 + @rsp << @rbx << $ip >> @rdi | @rax << @rbx >> @r8 & $teb & @rsp != @r9 << 1 >> 21 << @rbp ^ @r12 << ~@rsi)  { test_statement(0x120F);  // /* This is a comment   break; } elsif (-$teb >> @r9 ^ $proc >> (@r11) & ~$teb ^ @rsp < @rax << ($proc) >> @rsp ^ @r12 >> @r12 ^ 0y1100 & @rbp | 0x2 >> @rbx & @rdi & @r12 | @rdx ^ $teb) { test_statement(0x1F7C); } else { test_statement(0x1D1E); }
$error$
$end$
1768
 if (@r11 + 13 & 12 << -@r8 >> 0n2 ^ 5 | @rdi >> @r8 >> $thread ^ 0n10 >> @r13 ^ @rdx & @r13 | @r9 >> @r9 ^ 0y1))@rsp + $thread << $buffer << @rbx)  { test_statement(0x187C);  if ($thread | @r11 ^ @rax >< $thread | @r11 ^ @rax)  { test_statement(0xA99); } elsif (@rax ^ @rax | @rsp | @rax > @rax ^ @rax | @rsp | @rax) { test_statement(0x1B96); } elsif ($buffer | @rdi))@r8 | 6) { test_statement(0x10EF); } else { test_statement(0x1BE8); }  // /* This is a comment  } elsif (0y10001 >> 0y1101 >> @rbx & @rdi & $buffer | -@rbp >> 0n8 | $ip & $thread ^ $teb))@rbx << $ip >> @r12 & @rdx ^ @rbp >> $thread & +@rsi | @rax >> ~@r12 & @r13 ^ @rax & @rbx | $proc & 0y101) { test_statement(0x2638); }
$error$
$end$
1769
 if (@r11 >> $teb >> $proc >> $proc ^ (@rdx) & ~$buffer >> @rsi & @rsp(@r11 >> $teb >> $proc >> $proc ^ (@rdx) & ~$buffer >> @rsi & @rsp)  { test_statement(0x5D);  // /* This is a comment   while  (~@r12 | @r12 | @rsp ; @rbp ^ @r8 | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (-@rsp | @r9 ; ~@r11 | @r12)  { test_statement(0x10DA); } elsif (15 = 15) { test_statement(0x1A8E); } @rax = ~@rbp ; } elsif (@r12 >> $thread(@rsp ^ @rdx >> $ip & @r13) { test_statement(0x8D1); }
$error$
$end$
1770
 if ($buffer + $ip(@rdi ^ $buffer << @r13 ^ @rax >> 0y1100 | (@rbp) >> ($teb) >> $ip ^ +$thread >> +0n14 & @r8 & @r13)  { test_statement(0x247B);  /* This is a not closed comment } else { test_statement(0x2137); val = ~@rsi ^ @r8 | $buffer ^ @rbp | @r13 | $teb ; }
$error$
$end$
1771
 if (@r8 >> @rdi >> @rsp >> @rdi ^ @rdi ^ @r12 >> @r8 & ~$proc ^ -~@r11 & +$thread | 0y1001 << @rsp >> @r8 | @rax | $thread ^ +7 ^ 0y1100 == @rdx + $thread << +~$proc << +@rbp | @rax << -@rbx | @rsi & @r10 ^ (@rdx) & $teb ^ 0y1111 | @r13 & 0n10)  { test_statement(0x1AF9);  for (; ~@rsi ^ $proc ^ 0x8(~@rsi ^ $proc ^ 0x8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  This is a not opened comment */ } elsif ($ip >> @r13 >> $proc ^ @rdi & @r8 | +0y1 >> $teb & @rax(0y1011 << $proc >> $buffer ^ $thread & @rbx | @r10 >> @r13 & @r10 & @r9 ^ $proc & @rax | $proc ^ -$thread ^ $thread | @rdi ^ $teb) { test_statement(0x1D79); } elsif ($teb | $buffer & @rax 17 ^ @rbx & +-(@rsp) | ~@r9) { test_statement(0x51E); }
$error$
$end$
1772
 if (@rbx >> $thread & $buffer << $proc >> @r10 & @r10 ^ -0xF << @r11 >> @rdx ^ @r11 & @rsi > $proc + @r10 & $thread << @rdi >> @rax & 0y111 >> @r9 & @rbx & @r11)  { test_statement(0x490); }
$error$
$end$
1773
 if (0x7 + -$proc & 0y10000 << @rax >> @rax >> $teb | @rsp << @r11 & $buffer >> $thread & $buffer ^ @rsp & @rbx & +$proc ^ $ip ^ 0n19 | 0n9 ^ $teb ! +@r9 << 0n16 | @rdi | @rsi & @rax & -~@rbp ^ 6 ^ (@r12) ^ @rdi | -@rsp | +$teb | @rbx)  { test_statement(0xB98); } elsif (@rdi >= @rdi) { test_statement(0x97E); }
$error$
$end$
1774
 if (@r12 & @r9 & @rbx >> $thread(@r8 >> @rax << 0x10 >> $buffer >> @r13 ^ $thread >> @r13 ^ @r8 >> $buffer & $ip | (+@rbx) >> @r8 >> $teb & @rdi >> $teb & @r8)  { test_statement(0x2F5); } elsif (@rdi & @rax & @rsp ^ @rsi >> @rax ^ @rsp ^ $proc ! @r13 << $ip >> $thread & $thread >> @r13) { test_statement(0x1F94);  // /* This is a comment   break;  /* This is a comment */  break;  if (@rsi >= $teb)  { test_statement(0x1901); } } elsif (@rax >> -~@r10 ^ +~$teb(@rax >> -~@r10 ^ +~$teb) { test_statement(0x107C);  while  ($proc >= $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0xF ; 0x7)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r11 ; } elsif (@rbx ^ $ip | @rsi ^ $proc | @rsp > @rbx ^ $ip | @rsi ^ $proc | @rsp) { test_statement(0x1B4C); } else { test_statement(0x1B31); }
$error$
$end$
1775
 if ($ip << @rsi << @rdi(22 ^ 17 << @rdi & +0y10 >> $ip & 0y10010 & @rdx ^ @rbp >> 0n10 & @rbx | @r13 << 0y1101 & @r8 >> 0x3)  { test_statement(0x204A);  while  ($teb & 0y100 ^ $proc | @rbp >= @rdx & ~0n17)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1776
 if ($proc + @r12 << 23 << @r8 >> 0n17 << +@r8 < $proc + @r12 << 23 << @r8 >> 0n17 << +@r8)  { test_statement(0x1D05); } else { test_statement(0x1A1F);  if (0x4 | @rdi <= 0y111 | 0n11)  { test_statement(0x666); } elsif (@rdx | @r11 < @rdx | @r11) { test_statement(0x2586); } }
$error$
$end$
1777
 if ($buffer + @r9 & ~@rdx >> @rdi >> -0n14 & 0y1110 >< $buffer + @r9 & ~@rdx >> @rdi >> -0n14 & 0y1110)  { test_statement(0xB63); } elsif (@r10 << @rsp & ~(@rdi) & @rsi == @rdx << $thread | @rsp >> $thread ^ @rbx ^ (0xB) ^ $teb | $thread & $buffer) { test_statement(0x16EC); }
$error$
$end$
1778
 if (@r9 + @rdi >> @r9 << 23 >> @r8 >> 0x4 & ~@rsi >> $buffer >> @rdi | @r12 ^ +@r10 & 0x10 & @rsp ^ $buffer & @r9 | ~@rbp & @rbx & @rsp | @r13 & @r8 ^ @rdi | @r11 | ~($thread)((0n7 + @r12 >> 14 << @rax >> @r13 >> @rsp & @r13 ^ @r12 >> @r10)  { test_statement(0x1013);  /* This is a not closed comment } else { test_statement(0x21EF);  while  ($buffer ^ +@rdx | @rdx))+@r8 | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1779
 if (@r11 << +@rax << @rax & @r8 >> @r8 >> @rbp & @r13 & @rdx ^ $thread | @r12 >> $thread >> @rdi ^ 0x5 >> $thread = @r11 << +@rax << @rax & @r8 >> @r8 >> @rbp & @r13 & @rdx ^ $thread | @r12 >> $thread >> @rdi ^ 0x5 >> $thread)  { test_statement(0x1B4A);  for (; 17 & 0y1100 ^ $ip ^ 0x8((@r11 & @rsi ^ @r10 ^ @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc >> @r11 & @rdi & 0y10001 | @r13 ^ 0y111 & 0n2(@r12 << 0y1001 >> @rdi >> $ip ^ @r11 >> @r10 ^ 0x3 & @rbp) { test_statement(0x13A1); } elsif ((0y11) ^ @r10 ^ @rsi ^ $ip >= @r12 ^ @rbp & @r12 | $proc & @r9 | 0x0 | @r8) { test_statement(0x24A5); } else { test_statement(0x26C4);  // /* This is a comment   break;  /* This is a comment */ }
$error$
$end$
1780
 if (@rax & -@rdx >> @r10 & @r12 >> @r13 & @rsi | @rax << +@rbp & @rdx >> 0y100 & $proc & @rdx ^ @rbx >> $proc & @r8 <= @rax & -@rdx >> @r10 & @r12 >> @r13 & @rsi | @rax << +@rbp & @rdx >> 0y100 & $proc & @rdx ^ @rbx >> $proc & @r8)  { test_statement(0x10F5); }
$error$
$end$
1781
 if ($thread + -+@rdi << @rdx & @rsi << $buffer & @rdx >> (@r13) & @rsp & 0 ^ +@rbp >> @r9 >> $proc | $proc >> 17 >> +@r13 & 0n16 = $thread + -+@rdi << @rdx & @rsi << $buffer & @rdx >> (@r13) & @rsp & 0 ^ +@rbp >> @r9 >> $proc | $proc >> 17 >> +@r13 & 0n16)  { test_statement(0x1438); }
$error$
$end$
1782
 if (@rdx & @r12 << @r12 ^ (@r10) << +@r13 & $buffer & @r11 ^ @r9 >> (@rsp) ^ @rsi & $teb ^ @rbx ^ 0x13 | $teb | 0y10010 >> (@r8) & @rdi ^ @rsp & @rdi ^ $thread ! @rdx & @r12 << @r12 ^ (@r10) << +@r13 & $buffer & @r11 ^ @r9 >> (@rsp) ^ @rsi & $teb ^ @rbx ^ 0x13 | $teb | 0y10010 >> (@r8) & @rdi ^ @rsp & @rdi ^ $thread)  { test_statement(0x223D); } else { test_statement(0x927);  for (val = 10; 6 ^ @rax ! 6 ^ @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1783
 if ($thread >> @rbx << 0y1110 & 0y1100(($proc + 0y1110)  { test_statement(0x23CF); val = ~0n8 ^ $thread ; }
$error$
$end$
1784
 if (+@rsi << -@r9 << @rsi & @r12 << +0n3 & @rsi & @rsp & @rbp | $teb))$ip << $thread & $thread << @r9 >> $thread >> @r12 | @rbx >> $ip & $buffer & @r13 & @rdi)  { test_statement(0xB0F); } elsif (@r9 << @rdi ^ 0n5 & $proc ^ @r10 | @rdi | @rdi ; @r11) { test_statement(0x10CA); val = @rbx ^ @rsi ^ 0n10 | 22 | ~@r10 ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi | $ip > @rdi | $ip) ; ;  This is a not opened comment */  This is a not opened comment */ } else { test_statement(0x174A); }
$error$
$end$
1785
 if (@rdi + @r8 << @rbx << @rsp >> $buffer << -$teb >> 0n5 >> @rsp | (-0n14) >> @r12 >> $ip ^ 0n5 >> ~@rbx & @r11 & @rax ^ 23 & 0x3 ^ $ip ! 12 & @r12 << (@rdi) & $teb & 0xD | 0n3 << $thread & $teb | $teb ^ ~@rbp & 0n17 | @r9)  { test_statement(0xCE8); @rax = @rbx ^ 16 & 0 ^ ($buffer) | @rdx & @rbx ;  break;  // /* This is a comment  } elsif (@rbx << @rsi & @r8 & -@r10 <> @rbx << @rsi & @r8 & -@r10) { test_statement(0x897);  while  (@r10 ^ 21 | 13 | @r13 == @r10 ^ 21 | 13 | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x223); val = $ip ; }
$error$
$end$
1786
 if (@r12 + @rdx & +20 ^ 20 | @r9 << @rdi < @r8 + @rbx >> @r11 | @rdx << $ip & +0n17 & 0n7 & @r11 ^ 0y1010 >> @r13 & 13 & (@rsp))  { test_statement(0x1A81); } else { test_statement(0x207A); }
$error$
$end$
1787
 if (@rdi + 0n9 << $ip >> @rsp >> @r9 ^ @r11 >> @rdx & @r13 >> @rsi & $teb & @r9 ^ @rdi >> @rdx ^ @rsi & (@r12) ^ 0y1100 ^ @rdi))@rdi + 0n9 << $ip >> @rsp >> @r9 ^ @r11 >> @rdx & @r13 >> @rsi & $teb & @r9 ^ @rdi >> @rdx ^ @rsi & (@r12) ^ 0y1100 ^ @rdi)  { test_statement(0xE4F);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~$thread))~$thread) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 <= @r8) ; } elsif (@rbx(@rdx >> @rdi >> 10 & @r9 & 0n16 | $thread >> $teb ^ @r10) { test_statement(0x1646);  // /* This is a comment   break; } elsif (-0y1110 >> @rax ^ @r11 & $buffer ^ @rdi | 0n17 | 0xA | $ip | @rsi))-0y1110 >> @rax ^ @r11 & $buffer ^ @rdi | 0n17 | 0xA | $ip | @rsi) { test_statement(0x230C); } elsif (@r13 ^ @rbx | @rsi | -@rax(($teb & 0xA ^ @rdx) { test_statement(0x168E);  /* This is a comment */  for (val = 10; $thread >= @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rsi > @rsp)  { test_statement(0x14C5); } ; }
$error$
$end$
1788
 if (~$ip + @rsp >> 15 << +$thread))@r10)  { test_statement(0x164B); } elsif (0x4 << $teb & 13 | $teb & ~-@r10 & @r12 ^ @rdx & @rsi >= $ip << @r9 >> @rdx & @r13 >> ~$teb & ~@rdx & @r13) { test_statement(0x1071); ;  while  (@rsi | @rbx <> @rsi | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x191B);  if (@rax == @rax)  { test_statement(0x25B); } else { test_statement(0x143A); }  while  (@rsp >< $teb | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
1789
 if ($buffer + 21 >> $thread >> +$buffer >> @rsp | @rax << @r11 & ~@rsp >> @r13 & @r10 & 0y10011 | @rsi >> @r8 ^ 0n14 ^ @rdi ^ $teb | 0y10000 & 0y1000(($teb << @r9 >> @r12 << @rbp >> @rbp >> 4 ^ @rbx << $teb)  { test_statement(0x23BE); } elsif (@r10 << @r11 >> @r10 >> @r13 | 0x7 >> 0n13 ^ @r8 & @rsi | 0n15 & @rbp ^ @rbp | @rdi ^ @rsi | @r13 | ~@rdi ; @rbx << @rdi >> (-$ip) >> @r11) { test_statement(0x1797); } else { test_statement(0x1C4A);  /* This is a comment */ }
$error$
$end$
1790
 if (@rax >> @rdx & @rdi & $teb ^ @rdx << @r13 & $ip >> 0n8 & @r12 ^ @rdi >> @r9 >< @rax >> @rdx & @rdi & $teb ^ @rdx << @r13 & $ip >> 0n8 & @r12 ^ @rdi >> @r9)  { test_statement(0x190E); } elsif (@r11 << @rdx = @r11 << @rdx) { test_statement(0x15F0); }
$error$
$end$
1791
 if (@rdx >> @r10 ^ ($proc) << $buffer >> @rdx >> ((-$proc)) & $buffer = 22 << @rbx >> @r8 >> @rsp >> (@r13) | @r8 << $teb & -$proc ^ @r9 >> @r13)  { test_statement(0x20BB);  // /* This is a comment   while  (@rsp >= $teb ^ @rsi | 0y1000)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~~@r11 & @r11 >> @rdi ^ 0x0 >> 12 & @r11 & $buffer ^ @rbp & @rax ^ +@r9 ^ 0n9 == @rsp << 0n14 | $ip >> 0x12) { test_statement(0x334); @rax = $thread & ($ip) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 16 | $proc >= ~@rsp) ; ; }
$error$
$end$
1792
 if ($teb + @rdx << 0y1111 << $proc & @rsi >> @rdi & @r8 & @r11 & +@rdx >= $teb + @rdx << 0y1111 << $proc & @rsi >> @rdi & @r8 & @r11 & +@rdx)  { test_statement(0x557);  /* This is a not closed comment }
$error$
$end$
1793
 if (0n13 + @rdi >> @rsp << @rax & 4 << @rsi >> $teb >> $buffer & @rdi & 0x2 ^ @r9 | @r11 << @r13 & +0n5 >> @r8 & @r10 | (@rdi) & $buffer | @r8 ^ $proc ^ ~@r13 | 0x6 ^ $teb | $proc > 0n13 + @rdi >> @rsp << @rax & 4 << @rsi >> $teb >> $buffer & @rdi & 0x2 ^ @r9 | @r11 << @r13 & +0n5 >> @r8 & @r10 | (@rdi) & $buffer | @r8 ^ $proc ^ ~@r13 | 0x6 ^ $teb | $proc)  { test_statement(0x5A2); } elsif (0n1 | @rdi ^ @rbx & @r8 ^ @rbp ^ +$proc ! $ip << $ip >> @rbx >> 10 & $proc) { test_statement(0x1ACB); } elsif ($teb & @r9 ; @rbp ^ @r13 & @r10 | $buffer & @r9 ^ $buffer ^ 0y101 | 0x1 ^ @rax | $buffer) { test_statement(0x440); ;  for (val = 10; @rsp))$proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@rdi & $thread | 0n10 ^ @r9 > @rdi & $thread | 0n10 ^ @r9) { test_statement(0x1BBF); } elsif (+(@r12) | 0y10010 | @r8 <> 0n0 ^ -@r9 | 0n14) { test_statement(0x252);  This is a not opened comment */  while  ($ip <> (($thread)))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1794
 if (-@r11 + $proc << $ip & -@rax >> @r13 ^ 0n3 << @r9 ^ +-@rsi >> @rbp & @rdi & @r11 ^ @rdi ^ $proc ^ @r12 | @rax << @r12 >> 0x5 ^ @r11 >> @r11 ; $proc << $proc)  { test_statement(0x49);  for (val = 10; $thread & $ip < $thread & $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  if (@r10 > ($teb))  { test_statement(0xFAB); } elsif (@rdi == @r8) { test_statement(0x1ABA); } elsif ($proc <= @rdx) { test_statement(0x1579); }  for (@rax = ~@rax; @r13 ; @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; @rax = @rsp ;  break;  /* This is a not closed comment } elsif ($thread << @rax | 0n15 >> @rbp & $ip | 14 ^ $buffer | @rsp ^ 0n12 | @rdi | @rax))$thread << @rax | 0n15 >> @rbp & $ip | 14 ^ $buffer | @rsp ^ 0n12 | @rdi | @rax) { test_statement(0x1FB3); }
$error$
$end$
1795
 if ($proc << @r9 << $proc & @r8 << @r8 & $teb >> @rdx ! @rdi >> @rdi & @rax >> @r10 >> @r12)  { test_statement(0x1822);  break; }
$error$
$end$
1796
 if (@r8 << @r13 << ~$buffer & 0y1 << @rsi ^ $proc >> @r10 >> $buffer ^ @r11 ; @r8 << @r13 << ~$buffer & 0y1 << @rsi ^ $proc >> @r10 >> $buffer ^ @r11)  { test_statement(0x152B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x10 ^ @r12 | 0n14 ^ @rsi)@rbx & @rdi ^ @r12 ^ $thread) ; } elsif ($thread >> @r10 >> @rdx))(~@r13) ^ $thread) { test_statement(0x9C8);  This is a not opened comment */  if ($thread | -$buffer(@r9)  { test_statement(0x10D); } elsif ($thread > 0y1010) { test_statement(0x435); } } elsif (@r10 >> 0x7 < +@rdi | @r8 ^ @r12 ^ @r8) { test_statement(0xA4B); } elsif (2 & @rax | 17 ^ @rsi | $thread | 0x2 <= @r8 & @r12 ^ @r8 | @r12) { test_statement(0x1946); } elsif (@r11 | -+$teb <= 0y1110 ^ @rbp | @rdx | ~2) { test_statement(0x4D8); } elsif (@rsp(($thread) { test_statement(0xAAC);  if ($proc > @rbx)  { test_statement(0x1FE8); }  This is a not opened comment */ ; } elsif (($proc) >< @rbx) { test_statement(0x178F); } else { test_statement(0x1F0A); }
$error$
$end$
1797
 if (@r12 << $teb << $buffer & @r11 ^ +@rsi << @r11 & @rsp >> @r12 | 0n1 << @rsp >> $buffer)@rsp + +@r11 & @rax | @rdx << $ip & @r12 >> @r12 | +@r8 >> @rbp & $ip ^ $teb & ~@r10 | ~@r9 | @rsp | 0n5)  { test_statement(0x1833); }
$error$
$end$
1798
 if (@r12 & ~@r12 << @r8 >> 0y0 & $buffer | $buffer & @rdi >> @rdi ^ $teb >> @rsp & @r9 ^ $proc)+@r10 >> @rdi << +13 >> @r8)  { test_statement(0x1D28); }
$error$
$end$
1799
 if (13 + @rsi << @rdi & +@r8 & @r13 & (@r13) & @r12 ^ -@rbp << -@r13 >> @rbp & @rsi >> -@r10((@rbx << 0x4 << ~$teb >> (+@rbp) << @rsp >> @r13 & 0n10 << @rdx ^ 0n9 >> 0y0 >> @r9 ^ 0xD >> $thread)  { test_statement(0xE8E);  while  ((0y1100) & ++~@r12 ! +$ip & (@rbp) | 0n16 ^ -0y100)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rbp ^ 0x3 | @r9 | 0x6(@rbp ^ 0x3 | @r9 | 0x6)  { test_statement(0xDCD); } else { test_statement(0xD64); }  This is a not opened comment */ val = @rbp ; } else { test_statement(0x445);  // /* This is a comment  }
$error$
$end$
1800
 if (0n5 + @rdi << $teb << 0n2 >> @rsp ^ @rbx << @r12 & 0x8 >> $proc & @rdx & 0n4 $ip << @rbx >> @r11 | -+@r9 >> (@r12))  { test_statement(0xE28); } else { test_statement(0x2160); }
$error$
$end$
1801
 if (@rdx + @rsi & @r10 << @rsi | @r11 << @r9 & @r8 >> $ip | 0n10 >> 0x2 | @rbp ^ 0x13 ! @r12 >> 0x3 << -0x6 >> @rdi)  { test_statement(0x142C);  /* This is a comment */  This is a not opened comment */ } elsif (@r13 << @r12 & $thread >> $proc & @rdi | @rdi | @rsi ^ 20 = @r9 << @r11 | @rax >> @rdx) { test_statement(0x187D); } else { test_statement(0xCD9); }
$error$
$end$
1802
 if ($teb + @rsi ^ @r11 >> +@r13 >> $proc | 0x7 << $ip | @rsi ^ @r12 & @rsp | ~$proc & @rbx ^ 0x2 ^ @rsi | ~@rdx ^ $ip >= $teb + @rsi ^ @r11 >> +@r13 >> $proc | 0x7 << $ip | @rsi ^ @r12 & @rsp | ~$proc & @rbx ^ 0x2 ^ @rsi | ~@rdx ^ $ip)  { test_statement(0x1C5);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~~0y100 & 22 ^ 0x5 | 0y10011 | 0y1000 ; $thread | @r10 ^ @rdi) ;  This is a not opened comment */ }
$error$
$end$
1803
 if (@r11 >> $teb << $thread >> @rbx >> @rdi & @rdx >> @r12 >> @r12 != @r11 >> $teb << $thread >> @rbx >> @rdi & @rdx >> @r12 >> @r12)  { test_statement(0x76F);  while  (20 <> @rax ^ 0x5 ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  val = $ip | @rdi | @rdi ;  for (val = 10; @rbp ! @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n14 << $ip ^ +0y1001 >> 0n14 & (@rsp) & @r8 ^ @r8 ^ 0x1 ^ @r8)@r11 >> @r11 ^ @r11 >> @r11 & -@rdx & +@r11 ^ +@rsp | @rax >> @rsp) { test_statement(0x1F58);  This is a not opened comment */ }
$error$
$end$
1804
 if (@rsi | @rbx & $buffer >> (~@rbx) ^ ~@r11 @rax + @r10 & @r10 << @rdi)  { test_statement(0xE61); }
$error$
$end$
1805
 if (@rbp + @rdx << 0y1011 << @r8 ^ 0xC >> @rbx >= $teb + @rax >> @r11 << ~@rsp)  { test_statement(0xEF5);  for (val = 10; @rdi | @r8 | $ip | $thread ; @rdi | @r8 | $ip | $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 | @rbp | @rdx)$proc ^ @r11 | @r12) ; }
$error$
$end$
1806
 if (@rbp + @r10 >> $thread)$buffer + @rdx & $proc >> $buffer | -@rdx << @rbp >> @rbx & $teb >> $buffer | -$buffer >> @rbp ^ +@rdx | 6 & @rax)  { test_statement(0x85A); } elsif (@r12 >> $ip & $teb >> 0y1 & 0n12 & @rbp | ~11 & @r8 & @rbx <> @rdi << @rsp & @r10 ^ @r13 >> @r11 ^ @r12 & (@r13) ^ 0x10 ^ 20) { test_statement(0xA68); } else { test_statement(0x96E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@r9 | @r12 | @rbx ; +@r9 | @r12 | @rbx) ;  for (val = 10; $proc | 0y10010($proc | 0y10010;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1807
 if (~@rsp + 0n10 >> $buffer << @r10 >> @r10 & @rsp << @rsi >> 20 >> @r10 & @rbx ^ @r12 << -@r13 < $ip + @rsp & 0n7 << @r12 & $buffer & 0y1101 ^ 0x6 << 0x3 >> 0y1011 & (1) & $proc ^ @r12 | @r11 >> -@rdi | $proc | 0y1001 & @rbp | @r9 | @r8)  { test_statement(0x22A7); } else { test_statement(0x1443); }
$error$
$end$
1808
 if (@r13 << ~@rax >> -@rbx >> @r11 ^ @r10 << +$ip >> @rbx >> @rdi & @r8 >> 0n5 & @r9 ^ -@r10 $buffer + @rdi & @rdi & ~@rbp >> @rdi | @rbx & $buffer >> @r10 ^ @rsp >> 0xD | ~-~@r9 & @r12 & $ip ^ $ip ^ @r11 ^ @rsi)  { test_statement(0x13CD); }
$error$
$end$
1809
 if (~$buffer + $proc >> @rdx & $teb << +@rdi >> $proc >> @rdx & $buffer >> $ip & +$teb)@r12 << +$proc >> $teb >> @rsi & @rbx << @r12 & 0x13 ^ $teb << @r8 >> @r8 >> @rbx ^ 4 & @rdx)  { test_statement(0x161);  /* This is a not closed comment }
$error$
$end$
1810
 if ((@rbx) + @rdx >> @r8 << $buffer >> @r8 ^ @r9 << @rax & @rbx & @rsp = (@rbx) + @rdx >> @r8 << $buffer >> @r8 ^ @r9 << @rax & @rbx & @rsp)  { test_statement(0x1044);  // /* This is a comment   for (val = 10; (@rbx) ^ $proc == $thread ^ $buffer | $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ ; } elsif ($teb << $proc @rdi & @rbp & ~-@rdx ^ ~-@r13 >> @r8 ^ $thread) { test_statement(0x1D5);  // /* This is a comment  } elsif (@r8 & $teb ^ @rbx ^ @rbx | $proc & @rsi | @rsi ^ $buffer | $proc))@r8 & $teb ^ @rbx ^ @rbx | $proc & @rsi | @rsi ^ $buffer | $proc) { test_statement(0x2652);  for (val = @r13; @rsp == 14;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 != 2) { test_statement(0x1C8);  break;  // /* This is a comment  }
$error$
$end$
1811
 if (+($buffer) << @rsp & @rax << @r8 >> 23 >> 21 ^ +@r12 << @rbp >> @r9 | @r9 << $thread >> 0xE >> @rbx ^ @rsi = +($buffer) << @rsp & @rax << @r8 >> 23 >> 21 ^ +@r12 << @rbp >> @r9 | @r9 << $thread >> 0xE >> @rbx ^ @rsi)  { test_statement(0x1892); ;  /* This is a comment */  if (@rsi | $proc <> @r12)  { test_statement(0xCB9); } elsif (@rbp <= 0n4) { test_statement(0xF2D); }  // /* This is a comment  } elsif (@rbx & 0n0 >> @r12(($buffer >> $teb >> -@rbp | 0n3 | $thread & 0y1101 ^ $proc) { test_statement(0x1592); } elsif (~@r11(((0n8) ^ 14 & @rdi | $teb & @r11 ^ @rbx ^ @rdx) { test_statement(0x1331); } else { test_statement(0x1FC); }
$error$
$end$
1812
 if (0n11 + $proc(0n11 + $proc)  { test_statement(0x409); } elsif (@rdi << @r9 ^ @rbp >> 0n15 | $ip >> @r10 & @rax & @rsp | $buffer & @rsi ^ @r12 == @rbp >> +0n8 ^ @rsp & $teb | @r11 | @rdx ^ $thread ^ $thread | 20 ^ 11 | -$buffer) { test_statement(0x2411);  while  (15 ^ 0x12 | ~@r8 < 15)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rsi @rsi)  { test_statement(0x3D); }  while  (-0x7))@r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp @rbp) ; } elsif (1 >> @r13 & @rdx >= 1 >> @r13 & @rdx) { test_statement(0x1840); } else { test_statement(0x74F);  for (val = 10; ~$teb <= ~$teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r12 ^ +@rbx ; val = (0n13) | $ip ;  /* This is a not closed comment }
$error$
$end$
1813
 if (~0n14 << @rax << @r9 >> @r10 << ~@r11 >> $teb >> @r13 & @rsp << 2 >> @r13 & $proc ^ @r12 ^ @rdi & @r10 != ~0n14 << @rax << @r9 >> @r10 << ~@r11 >> $teb >> @r13 & @rsp << 2 >> @r13 & $proc ^ @r12 ^ @rdi & @r10)  { test_statement(0x1C8);  if ($thread)+@rax & @r12)  { test_statement(0x542); } else { test_statement(0x19E); }  /* This is a not closed comment  while  ($ip <> $buffer | $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp >> @r9 | @rax & @rsp ^ @rsi & @r9 | 12 ^ $proc ^ $proc | 0y11 ^ $buffer | @rsi >= $proc << @rsi ^ @r8 ^ @r11 & @rsi | @r8 >> ~@r10 & (0n12) ^ @rax & @r9 ^ -@r10 ^ @rsp | @r13) { test_statement(0x235C); }
$error$
$end$
1814
 if (@rdx + @r12 << 7 ^ @rdx << 5 ^ @rbx | @r8 << +@r9 >> 14 & @r12 & 0xF & @rbx ^ @r11 & -@r11 ^ $thread)@rdx + @r12 << 7 ^ @rdx << 5 ^ @rbx | @r8 << +@r9 >> 14 & @r12 & 0xF & @rbx ^ @r11 & -@r11 ^ $thread)  { test_statement(0x160B);  // /* This is a comment  @rax = @r10 ^ @r13 ^ 0 | @r8 ^ $teb | @rdx | @rdi ; }
$error$
$end$
1815
 if (@rax | @rsp >> @r11 & @rbp >> 14 & @r10 & @rax ^ @r11 & (+$buffer) ^ $buffer > @rbp + 0x5 << 22 | 0n7 << @r8 & $ip >> @r12)  { test_statement(0xD6D); } elsif (@rsp ^ @rsp & @r10 & 17 ^ $teb = ~@r12 << +@rdx >> @r9 >> $proc) { test_statement(0x16D6);  /* This is a not closed comment  This is a not opened comment */ ; } elsif (@r9 & @rbp | $thread ^ +$teb ^ (+($proc)) | 0n13 | 6((@rax | @rsp | @rsp | $teb | $teb) { test_statement(0x154C); } elsif (@r13 | +$teb))@r8 & @rax ^ 0y1010 | $thread ^ 23) { test_statement(0x224E);  if (@r10 <= @r10)  { test_statement(0x1FF); } } else { test_statement(0x19CD); }
$error$
$end$
1816
 if (0n14 + (0y10010) ^ 0n7 >> @rsp >> ($teb) & @r10 >< @r12 + $proc ^ $teb << (@rbp) & @r8 >> @rbp & @r11 ^ @r12 >> @rax & @rsp & @rdi)  { test_statement(0xB3A);  break; } elsif ($buffer >= @rax & 0y10011 >> ~@rdx | $proc & ($thread) | 0n7 ^ 0x6 | $proc ^ @rbx | @r10) { test_statement(0x1B0E); } elsif (-~@rax ^ +@r10 & 0n9 ^ @r12 ^ @rbp)-~@rax ^ +@r10 & 0n9 ^ @r12 ^ @rbp) { test_statement(0x251B); } elsif (0xB = @rax ^ @r8 | @r8 ^ @r13 | @rbp | @rdx) { test_statement(0x1059); } elsif ($ip | +@r12 | -@r13 > $buffer) { test_statement(0x192E); }
$error$
$end$
1817
 if (@rax ^ $ip << $thread >> ~$teb >> @r13 & 0n16 | @rdi >= @rdi & -@r12 >> $teb >> @r9)  { test_statement(0x1A98);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@rbx) <= (@rbx)) ;  // /* This is a comment  }
$error$
$end$
1818
 if (@rax << @r12 >> @r13 >> (@rsi) >> @rbx != @rax << @r12 >> @r13 >> (@rsi) >> @rbx)  { test_statement(0x4BB); } elsif (~@r10 << 22 | +0y10((+@r13 << @rsi & +@rax >> 0x5 | @rdx & 0x3 & @rbp ^ ($teb) | @r11 ^ 0xA) { test_statement(0x973);  break;  for (val = @rsi; @rsp ; @r13 | @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb | $thread & @r8 ^ 10 ^ @rbx | $thread ^ @rdi < @r12 & (@rsi) & @rdx | @rdi | -@rax ^ $teb | @rsi | @rdx) { test_statement(0x415);  /* This is a not closed comment  This is a not opened comment */ } else { test_statement(0x1262);  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
1819
 if (@r9 << $teb << $buffer >= 0n11 + @r9 >> +@rdx << $proc & $ip & @r13 ^ $buffer << @r12 >> @rdx & @r13)  { test_statement(0xE12); } elsif (@r13 | 0y101 >> +@rax & @rsi ^ @rsi >< ~@rbp & $teb >> 0n3 & ~$ip & 0y1) { test_statement(0xFC1);  while  (@rdx ; @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 & @rsp ^ @r10 & @rdx ^ @r12 ^ @r13(@rdx) { test_statement(0x2150); } elsif ($proc ^ @rsi @r12 & 0y10 ^ @rbp) { test_statement(0x39A); } else { test_statement(0x2527);  // /* This is a comment   // /* This is a comment  }
$error$
$end$
1820
 if (@rdx + @r9 << @rdx & $ip >> @r11 >> @r9 & @r11 ^ @r11 >> $proc >> @rsi ^ @rdi >> @rbx & @r13 & @r12 ^ +@rdx ^ @r10 | 0xB << 0y110 & @r8 & @r13 ^ $buffer >> @r11 & 0y10000 & $teb ^ --@r11 & @r12 > @rdx + @r9 << @rdx & $ip >> @r11 >> @r9 & @r11 ^ @r11 >> $proc >> @rsi ^ @rdi >> @rbx & @r13 & @r12 ^ +@rdx ^ @r10 | 0xB << 0y110 & @r8 & @r13 ^ $buffer >> @r11 & 0y10000 & $teb ^ --@r11 & @r12)  { test_statement(0x18F1);  while  (@rdi & 0n9 | 0n1 | -@rax | @rdi)$ip & @r13 ^ @rsi ^ 4)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r10 ^ $buffer ^ 0y1 ^ $teb | +7 ^ 0y1001 ^ @r12 | @r13 & @rdx > 0x1 << @rax & $thread ^ $thread & 0x3 ^ @r8 ^ @rsi ^ @r8) { test_statement(0x9C8);  for (val = 10; -@r8 < $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1821
 if (0y0 << 0y1100 << @rdx >> @r10 << @r13 >> @r8 >> $buffer & -$thread & $thread & $proc ^ ~$buffer ^ @rax >> $buffer & $teb | $proc & +-$buffer >> 0y1100 | +@r13 & $thread & @rbp | @r13 & @r11 = 0y0 << 0y1100 << @rdx >> @r10 << @r13 >> @r8 >> $buffer & -$thread & $thread & $proc ^ ~$buffer ^ @rax >> $buffer & $teb | $proc & +-$buffer >> 0y1100 | +@r13 & $thread & @rbp | @r13 & @r11)  { test_statement(0xDE7);  break; } else { test_statement(0x606); }
$error$
$end$
1822
 if (@rdi @r11 + @r12 << $teb << 20 >> $thread & +$buffer & @rbp >> @rbx & @r13 ^ @r12 & $teb & @r12)  { test_statement(0x4AB);  if (@rax | @r8 | @r12 != @rsp & @r8 ^ @r12 ^ 0n5 | -~$proc | @rax)  { test_statement(0x230A); } elsif (~@r8 ^ @rsp == ~@r8 ^ @rsp) { test_statement(0x18FB); }  if (0 >= @r10 | 0x5 | @r11)  { test_statement(0xDDA); } } elsif (@rdi >> @rsp & @rbx >> 10 & +@r13 & @rsi | @r13 ^ $buffer & $proc ^ @rbx @rdi >> @rsp & @rbx >> 10 & +@r13 & @rsi | @r13 ^ $buffer & $proc ^ @rbx) { test_statement(0x1FD3);  while  (~$teb ^ -@r12)+@rsi | @rax | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1DE);  /* This is a comment */ }
$error$
$end$
1823
 if (@rsi + @rsp ^ @r11 << 0n8 | @r8 ^ @r10 >> -@r10 & 0n18 & (@rsi) | @rbp | @rsp <> @rbx << (+$thread) >> 2 >> ~@rsp >> (@r10) ^ -0x1 << @r10 | (@r10) << @r13 >> @rdx)  { test_statement(0xA68);  if (@rbp & @rdx ^ 0n2 ^ +@r13 ! +~@r12 & $teb | ~@r13)  { test_statement(0xBDA); } elsif (@r11 == @r10) { test_statement(0x1778); } elsif ($ip)~0x9) { test_statement(0x108C); } elsif (@r10 <> 4) { test_statement(0x1EB8); } elsif (@rsp != @r13) { test_statement(0x2DD); } elsif (~@r13 > $thread) { test_statement(0x1527); } else { test_statement(0x13DC); }  for (val = 10; @rbp ^ @r12 | 0n1 | $thread))@rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 13 = $proc) ;  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp((12) ; } else { test_statement(0x484);  /* This is a not closed comment  if ($ip | 0n16 ; $ip | 0n16)  { test_statement(0x769); } else { test_statement(0x26CC); } }
$error$
$end$
1824
 if ($buffer & 0n15 ^ $ip << $teb >> @rsi & 0x2 >> @r8 | @r11 ^ @rsp & $proc ^ @rsi & -@rbp ^ @rsi((-@r11 + @rbx << @r10 << @r10 >> @rdx >> @r10 >> +@r8 ^ 0xC << +@rsi ^ 0n3 ^ $ip ^ $teb ^ @rbp | @r10 << @rsi >> @rax >> $thread & @rax)  { test_statement(0x109F);  while  (-@rdi & @rsp ^ $ip)$teb & -@rsi | @r8 ^ $teb | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip << @r13 & @r11 ^ 14 ^ $teb & @rsi))~+0n1 >> +@rsp ^ @rsp >> 0y0 ^ $ip & $proc ^ @rsi | @rsi) { test_statement(0xA0A);  for (val = 10; $teb | @rsi <> $teb | @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi >> @r10 | @r10 | -@rbp != ($proc) & ($thread) & @r10 ^ @rax & $teb ^ @rbx ^ -@r12 | $proc & $ip) { test_statement(0x11B);  while  (@r10 >= 0y100 | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi == @rsi) ; } else { test_statement(0xCE2); }
$error$
$end$
1825
 if (++@rdi + @r9 << @rbx & $buffer << @rbp >> @rbp((++@rdi + @r9 << @rbx & $buffer << @rbp >> @rbp)  { test_statement(0x117A); } else { test_statement(0x2C5); }
$error$
$end$
1826
 if (0y11 + $ip >> @r10 << @rsi & 0y1101 >> @r10 & @rbx >= @rbx >> +$teb << 0y10 & 0y110 ^ @r13 >> $ip ^ 0x12 & @rdx ^ 0xE)  { test_statement(0xC24); ;  while  (0n2 <= 1 ^ ~+@r9 | @rdi | 0y111)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip & @r11 >> @rax & 0xD ^ 0n8 ^ $proc & @r9 | 0n13 >> @rdi | 0n4 ^ @r13 | 5 ^ @r9 | 0n6))$proc << @r11 >> 7 >> ~@rax & +@rsp >> @r12 & +$teb) { test_statement(0x1EEF);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +3 | $proc >= $proc) ; } elsif ($proc & @r10 & @rbx | @rbp & 4 ^ @r10 ^ $buffer(($proc & @r10 & @rbx | @rbp & 4 ^ @r10 ^ $buffer) { test_statement(0x26B2); val = @rax | 0x0 ;  while  ($buffer > -($thread))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsi | @rsp ^ @rdi ! 0y10010 | @rdi ^ -0y1011 | -@r13) { test_statement(0x1671); } elsif (0x12 ^ 0y0 | 0n10 | @rsi ; -@rdx ^ @r8 | $teb | @r13) { test_statement(0x157B); } elsif (@rdx >= ~@r9 | $ip) { test_statement(0x21A9);  while  (+@r9 == 0xE)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif (+$buffer > @r8) { test_statement(0x1FC5);  break; } else { test_statement(0x6C4); ;  for (val = 10; @rbx | @rax))@rbx | @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
1827
 if (13 + +0n1 << 0y110 << @r12 ^ @r9 == 13 + +0n1 << 0y110 << @r12 ^ @r9)  { test_statement(0x1B82); } else { test_statement(0x157D); }
$error$
$end$
1828
 if (0n13 + @rsi & @r13 >< @r9 + (+@r10) | 0n7 >> @r9 & @r13 >> @rsp ^ 16 | @r12 & $buffer & @r11 ^ @rax & 0y1100 ^ +0n2 ^ @rsi)  { test_statement(0x2465); ; } elsif (@rax << @r10)@rax << @r10) { test_statement(0x967); val = @r13 ^ ~@rbx ^ 0xB | ~@r13 ^ @r13 ; @rax = 0x8 | $proc ;  // /* This is a comment  }
$error$
$end$
1829
 if (@rax << @r11 << @rax & +$teb << 1 & 0n3 ^ @rdx << @rbp >> @rsp ^ @rbx >> +@rdx & $proc | @r10 >> @r11 ^ @rsi >> 0n7 ^ @rsi & @rax ^ 0x3 >< $buffer + ~@r9 >> @rdi << +~@r10 >> @rsp >> @rbp)  { test_statement(0x4F2); } elsif (@r13 << @rbp ^ +@rsp & $teb | (@rdi) ^ $proc & @rbx ^ $thread | @rbx(@r13 << @rbp ^ +@rsp & $teb | (@rdi) ^ $proc & @rbx ^ $thread | @rbx) { test_statement(0x1D70); ;  This is a not opened comment */ }
$error$
$end$
1830
 if (22 << @rsi << $buffer & @rdi ^ @r11 & $teb >> 0n15 & @r11 | $ip << 20 >> ~@rsi >> @r8 | +@rdx & +$thread & $proc | $buffer ^ @rsp ^ @rsi >= 22 << @rsi << $buffer & @rdi ^ @r11 & $teb >> 0n15 & @r11 | $ip << 20 >> ~@rsi >> @r8 | +@rdx & +$thread & $proc | $buffer ^ @rsp ^ @rsi)  { test_statement(0x45E); } elsif (~$thread << @r8 >> (@r8) | @rdx >> @rsp ^ @rax & $teb ^ (+$teb) ^ @rdi((~$thread << @r8 >> (@r8) | @rdx >> @rsp ^ @rax & $teb ^ (+$teb) ^ @rdi) { test_statement(0x1DCA);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer | @r10 <> @rax | 0n3) ; } elsif (@r10 | @r11 & $ip ^ @r13 ! @r10 | @r11 & $ip ^ @r13) { test_statement(0x22AC);  This is a not opened comment */ } else { test_statement(0xD92);  while  (4 ^ $ip | +0y1100(0n12 ^ @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  /* This is a not closed comment }
$error$
$end$
1831
 if (@rbp << @r9 << @rbx & @rbx << $proc >> @r12 | ~@r13 >> $proc >> @r8 ^ @r10 | @r13 >> @r9 ^ 0y1000 ^ $thread ^ 0y1111 | $buffer < @rbp << @r9 << @rbx & @rbx << $proc >> @r12 | ~@r13 >> $proc >> @r8 ^ @r10 | @r13 >> @r9 ^ 0y1000 ^ $thread ^ 0y1111 | $buffer)  { test_statement(0x1AFD);  for (val = 10; @rsi | 16 ^ ~+@rbx | @r13 | -@r11((-@r12 & @rdi | @rdx | 0n15;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xF3E); }
$error$
$end$
1832
 if (0y1 + @rbx >> @rdi << 12(0y1 + @rbx >> @rdi << 12)  { test_statement(0x16F0);  if (@r12 ^ @r13 == ~(@r12) | @rdi ^ @rax)  { test_statement(0x1482); }  This is a not opened comment */  for (@rax = $ip | ~@rbx; @rdi | $ip == -@rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  if (@r9 -@r12)  { test_statement(0x497); } elsif ($buffer <= @r9) { test_statement(0xDB9); } } else { test_statement(0x61C);  for (val = 10; @r11 | +@rsi | $ip >< @rbp ^ 0n12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
1833
 if ($buffer << @r9 >> $proc << $proc >> @rax & @rsp << $proc & @rsi >> @rdx ^ $thread << @rsp & @rdi >> @r11 ^ 0n11 >> $buffer ^ @r11 & @r13 ^ 0n18 | +@r10 & @rbp ^ @r12 >> -@r9 | $thread >> 0n9 | 0n0 <> $buffer << @r9 >> $proc << $proc >> @rax & @rsp << $proc & @rsi >> @rdx ^ $thread << @rsp & @rdi >> @r11 ^ 0n11 >> $buffer ^ @r11 & @r13 ^ 0n18 | +@r10 & @rbp ^ @r12 >> -@r9 | $thread >> 0n9 | 0n0)  { test_statement(0x22F0);  /* This is a not closed comment  while  ($buffer ^ @rdx = @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi | @r9 <> 0x2) ;  break; } elsif (@r13 != @rdi << @rdx >> @r10 & @rsp & @r12 ^ @r13 >> (@rdi) ^ -$buffer | @rsi >> $teb & @r12) { test_statement(0x18C9);  for (val = 10; $teb < @rax ^ @r10 | @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip >> @r12 & @r9 | @rbx & (0n2))$ip >> @r12 & @r9 | @rbx & (0n2)) { test_statement(0x16C4); } elsif (@rsi ^ $teb == @rsi ^ $teb) { test_statement(0x1625); } else { test_statement(0xA8E); }
$error$
$end$
1834
 if (@rbx + @rsi << +@r8 << @r10 | @rdi != @r9 + 0n14 << $buffer & $thread & 0x7 & (@r8) & @r10 | $buffer >> (@rdi) ^ $buffer >> $teb ^ ($ip) & @rax | $buffer >> @r8)  { test_statement(0x22C4);  break;  /* This is a not closed comment } elsif ($buffer << 22 >> 0x13 >< $buffer << 22 >> 0x13) { test_statement(0x1A03); } elsif (@r8 ^ @rax | $thread & @r9 | @r12 ^ $buffer | $proc <> @r8 ^ @rax | $thread & @r9 | @r12 ^ $buffer | $proc) { test_statement(0x19AF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@r9 ; +@r9) ; } elsif ($proc & $teb ^ 13 ! $proc & $teb ^ 13) { test_statement(0xF58); } elsif (@rax ^ 0x8 <> @rsp) { test_statement(0xDF1);  /* This is a comment */  /* This is a not closed comment ; } else { test_statement(0x56E); @rax = -@r9 ^ $ip ^ @rdi | (@r8) ^ $ip ;  // /* This is a comment   if (@r10 == @r10)  { test_statement(0x1BAB); } else { test_statement(0x1E7C); } ; }
$error$
$end$
1835
 if ($teb >> @r13 >> 14 ! $teb >> @r13 >> 14)  { test_statement(0x1931);  /* This is a comment */  This is a not opened comment */ } else { test_statement(0x2455);  while  (@r12 | +@rax | @r12 >< @r8 ^ $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
1836
 if (@r9 + ~@r13 >> @rax << @r9 & @rsp << @rdx >> $ip >> ~2 ^ (-@r11) << @r10 <> @r9 + ~@r13 >> @rax << @r9 & @rsp << @rdx >> $ip >> ~2 ^ (-@r11) << @r10)  { test_statement(0x4F5); }
$error$
$end$
1837
 if (@rbp + $buffer | @r8 << @r8 | +0y1011 >> ~5 & @rdi & 0n1 ^ (@rbx) & @rsi | ($teb)(@rbp + $buffer | @r8 << @r8 | +0y1011 >> ~5 & @rdi & 0n1 ^ (@rbx) & @rsi | ($teb))  { test_statement(0x9F0); } elsif (@rsi << @rsi >> 11 & ~@r11 >> @r11 ^ ~@rbp & $thread & @rax ^ (0x0) & @rax(($thread ^ 13 >> (0n2) | 0y1010 ^ @r13 ^ 0y100 ^ $buffer | $teb | 0y10 ^ @rsp | @r10) { test_statement(0x719); } else { test_statement(0x224D);  break;  while  (@r12 | 0n1((@rdi | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1838
 if ($teb >> $proc << @rsp >> @rbx & $thread >> 0x0 & 0n14 ^ @rsp >> @rsp >> @rdx & @rbp ^ $ip >> 0xA & -0xD & @r12 ^ @r10 & @rdi < @r8 + @rdi >> @rbx << $buffer >> $thread ^ 0y1011 << @r11 >> @rdx)  { test_statement(0x2046);  break; } elsif (@rdx >> @rbx >> @rdx & @r12 ^ 21 ^ @rsi ^ 11 | ~0y1001 >> $proc ^ $proc & @rdx == @r10 ^ @r11 ^ 16 & $thread | @r10 >> 0x0 ^ 0y10000 & @rdx) { test_statement(0x261D); }
$error$
$end$
1839
 if (+@r8 >> @rdi >> @r8 >> @rax ^ $thread >> $ip | @r12 << $thread & @r8 >> @rbx ^ 0n10 ^ @rsi ^ @rbx | -@r10 | @rdx | +@rax >= $proc << 21 & @rbx >> @rsp >> (+$teb) & @rdx)  { test_statement(0x1B38);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp & ~~$teb | ~$ip ^ @rbp > @rsp & ~~$teb | ~$ip ^ @rbp) ; } elsif (@rdx << @rdx ^ $proc & @rsi | @r10 >> $proc ^ -@rax & ~$buffer $thread << @rbp & +3 >> @r12 & +@rbp ^ @r8 >> $thread & (@r8) & $thread ^ @r9 & $ip | 0xE ^ $teb & @r10) { test_statement(0x1A4A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp | $thread | +0n13 ; @rsp ^ @rbp) ; @rax = @r12 | 0y10 | $ip ;  while  (@r13 >= @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 >> @r8 ! @r13 >> @r8) { test_statement(0x1C0F); } elsif (0x4 ^ @rdi >< @r11 & ~+@rdx) { test_statement(0x18DD); }
$error$
$end$
1840
 if (~-@rdi + @r8 >> -@r12 << @rbx >> @r8 >> @rsp((@rsi << +@rax << -$buffer >> @r12 << 1 >> 0y10000)  { test_statement(0x505);  // /* This is a comment  }
$error$
$end$
1841
 if (@r13 + @rbp << @rsp << $ip >> @r8 << -@r10 >> @r11 >> @rdi & @rbp < @rdx + @rbp ^ @rsi >> $thread >> -@rsp ^ 0xC >> @r8 & 6 ^ $ip & @rdi ^ @rdi ^ $proc | $buffer << @rsp)  { test_statement(0x92D); } else { test_statement(0xD10); }
$error$
$end$
1842
 if (+0x12 + 15 << $teb << $proc >> ~0x7 & 3 << @r13 >> $buffer >> (0y11) <= $buffer << @rax & @rdx << @r13 | @r8 << ~@rdi ^ @r10 >> @r11 & @rbp & @r8 ^ 0xC & ~@r9)  { test_statement(0x2415);  /* This is a comment */ } else { test_statement(0x572); }
$error$
$end$
1843
 if (@r13 | @r10 & +$buffer & @r10 & $ip ^ @r9 >> 12 == ~@rdi << -@r11 >> @r9 << 0y101 >> 0n12 >> @rdx & ($buffer) >> @rdx >> @rbp & $thread | $proc << @r9 >> 0n4 >> @rbx & @rsp >> @rax)  { test_statement(0xC05);  /* This is a comment */  /* This is a comment */  /* This is a comment */ ; }
$error$
$end$
1844
 if (@r13 << @rsp >> $buffer & @r10 << 0y10001 >> @rdi ^ @rax >= ~+@rsi + @r13 << @rdx & @r8 >> @r11 >> $ip & @rdi & +@rdi & @rbx)  { test_statement(0x190F); } else { test_statement(0x1EE);  while  (@r9 ^ @rbx | @rbx ! @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1845
 if ($teb + @r11 << 16 << @rbp >> @rax >> 0xF >> -$thread & @rdx & @rbp >> @rax ; $thread << @r11 << @rbx >> @rdx << @rbp >> 0n7 >> $thread & @r9 << @r12 >> $buffer & $buffer & $thread & @r9 ^ @rdx << @r10 >> @rsp ^ $proc >> 4)  { test_statement(0x11);  /* This is a not closed comment }
$error$
$end$
1846
 if (0n10 + $ip << +@rdi << @rsp >> 0y1 << @rsi & -6 << -$proc & $teb >> @r8 & $teb 0y10011 + $ip << @rbx >> $teb << $teb & $thread ^ @rbp & @rdi)  { test_statement(0xA8C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ @r11 ^ 0x0 | @r11 ^ $buffer = @rdi ^ $buffer | +@rsi ^ @rdi | $thread | 17) ;  if (@rdi ^ 0x10 | @rsi ; @rdi ^ @r10)  { test_statement(0x11EB); } elsif ($proc ! $proc) { test_statement(0x2252); } elsif (+~@rbp >= +~@rbp) { test_statement(0x1824); }  /* This is a comment */ ;  // /* This is a comment  ;  /* This is a not closed comment }
$error$
$end$
1847
 if (-@r8 + @r8 & @r13 | @r11 << @r9 | @r8 ^ $teb & $ip ! -@r8 + @r8 & @r13 | @r11 << @r9 | @r8 ^ $teb & $ip)  { test_statement(0x1061);  if ($proc ^ +$thread ^ $teb = $thread & ~$buffer | ($proc) | @rsp)  { test_statement(0xB0A); } } else { test_statement(0x1DB); }
$error$
$end$
1848
 if ($ip & $buffer << 0n0 >> @rbp & $teb >> @r11(+@r8 << @r10 & @rsp << @rdi >> 0n15)  { test_statement(0x21C7); } elsif (@r13 << @rbp >> @rbx | 0n9 & @r13 | $teb))@r13 << @rbp >> @rbx | 0n9 & @r13 | $teb) { test_statement(0x1F2A); } else { test_statement(0xB86);  /* This is a not closed comment }
$error$
$end$
1849
 if ($teb + @rsi > @r11 & $teb << @r13 >> $ip & $buffer >> $buffer)  { test_statement(0x1E10);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~$ip & @rdx ^ (@rbp) ^ @rbx | @rax ^ @rbp | 13 | 0x9 == (+$teb) & (@r10) ^ +@rdx | @rsi | $buffer) ; } elsif (@r13 << 0y1101 >> (@rsi) >> $thread & @rbp >> @r11 ^ @rsp ^ @rbp & @rsp ; @r13 << 0y1101 >> (@rsi) >> $thread & @rbp >> @r11 ^ @rsp ^ @rbp & @rsp) { test_statement(0x111A); } else { test_statement(0x1309); ; }
$error$
$end$
1850
 if (~@rbx + @rbx & $proc << $teb & @rax >> 0n12 ^ 0y101 << @r10 | $proc << 0n19 & @rbx | @rax >> @rsi & @rdx & @rbx ^ @r8 ^ $thread | @r10 & $buffer ^ @r12 <= @rax & 0n1 | $teb >> 0x10 & @rsi & (@rdx) ^ @r13 >> $buffer & @rdi)  { test_statement(0x23D1);  This is a not opened comment */ @rax = $proc ^ @r12 ; } elsif (0x0 >> @r11 >> 0n0 & (@rsp) >> ~0y10010 & @rdx ^ $proc == 0x0 >> @r11 >> 0n0 & (@rsp) >> ~0y10010 & @rdx ^ $proc) { test_statement(0x24E8); }
$error$
$end$
1851
 if (@r8 + 0xF >> @rbx >> @r12 >> @r8 & -@rbp & 0xD >> $proc & ~@r9 & $teb))@r8 + 0xF >> @rbx >> @r12 >> @r8 & -@rbp & 0xD >> $proc & ~@r9 & $teb)  { test_statement(0x24A7); } elsif (@rax << $buffer & @r9 >> @r11 ^ 2 >> $buffer & @r12 ^ $ip ^ 0y1010 | @rdi >> $teb > @rax << $buffer & @r9 >> @r11 ^ 2 >> $buffer & @r12 ^ $ip ^ 0y1010 | @rdi >> $teb) { test_statement(0xDA9); } else { test_statement(0x1F7A);  // /* This is a comment   while  (@r8 | $ip ! $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1852
 if (@r13 + +@r9 << @r12 << ~@rsi | 0x10 << @rax >> @r9 >> $teb ^ @rax & @r12 ^ @r9 | @r10 & @r11 & 0n19 ^ $thread | +@r12 & 0xD ^ $thread != @r13 + +@r9 << @r12 << ~@rsi | 0x10 << @rax >> @r9 >> $teb ^ @rax & @r12 ^ @r9 | @r10 & @r11 & 0n19 ^ $thread | +@r12 & 0xD ^ $thread)  { test_statement(0x1AB2); } elsif (@r10 & @r9 ^ 0n19 & @r13 & @r9 ^ $buffer)@r10 & @r9 ^ 0n19 & @r13 & @r9 ^ $buffer) { test_statement(0x229B);  // /* This is a comment  val = @rsp ;  while  ($proc ; 0y1101)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1233); }
$error$
$end$
1853
 if (@rsi + -@r13 & $buffer >> @r10 >> 0y101 & @r13 >> +0y1100 & $teb | @rsi ^ ~~@r10 & $teb & $buffer >= @rbx >> $ip & @r12 ^ -~@rsi >> @rdx | 0n19 >> @rdx & @rdi >> @r10)  { test_statement(0x25B8); }
$error$
$end$
1854
 if (@rsi + $ip << 0y110 >> @r9 << @r12 >> @rbx ^ @r11 << @r11 & $ip >> $thread ^ @r11 & 0x4 & +@rbx | @r9 & 0n8 ^ 0x2 >> $ip & 16 & (@rdi) ^ -@r12 | 0y1011 >> @r12 $teb + 0y1 & @rsi >> @r9 ^ @rdx >> (@rbp) >> $proc & $thread >> @rbx | $teb >> -@r10 & @r10 | @rdx & @r8 | $ip ^ @r11 ^ @r8)  { test_statement(0xA92);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -$teb | @r11 > $proc ^ @rbp | @rdi) ;  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 <= @r10) ;  while  (-@r13(($teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r9 ; } elsif (@rsi != @r13 << $teb >> 0n11 & -3 | (0y100) >> @rbx | @rdi ^ -0y1110 ^ $ip | @rbx ^ 0n13 | @rsi) { test_statement(0x179);  for (val = 10; @rax ^ @rsi | @rdx | @r9 == @rax ^ @rsi | @rdx | @r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rbp($ip) ; } elsif ((~-~$ip) >> $thread & -0x8(((~-~$ip) >> $thread & -0x8) { test_statement(0x5FE);  /* This is a not closed comment } else { test_statement(0x244B); }
$error$
$end$
1855
 if (0n9 & @rbx << @rsi >> @r11 >> 0n17 & @rdi >> @rsi & $proc & @rax ^ $teb << 0y1010 >> 0n2 | @rbp << @rsp >> $buffer(@rsi + $buffer >> @r10 & (21) << -@r8 & 0xE & @rbx & 0x10 ^ @r13 << $ip >> $ip & $thread >> @rsp)  { test_statement(0x24DB);  // /* This is a comment  }
$error$
$end$
1856
 if ((@r11) >> @r9 >> @rdx >> (0y1) ^ 0n9 ^ $teb >> 0n11 | @r12 ^ @r9 & ~~$thread | +$proc >> @rbx & +@r11 ^ @r9 ^ -@rax ^ @rax > (@r11) >> @r9 >> @rdx >> (0y1) ^ 0n9 ^ $teb >> 0n11 | @r12 ^ @r9 & ~~$thread | +$proc >> @rbx & +@r11 ^ @r9 ^ -@rax ^ @rax)  { test_statement(0x127A); } else { test_statement(0x85B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@rbp | @r11 | @r12 >< @r8 ^ 0x7) ; }
$error$
$end$
1857
 if ($thread << @rsp << @rsi >> @rsi >= $thread << @rsp << @rsi >> @rsi)  { test_statement(0xA7A); } elsif (@rsi << @rsi >> $proc <= @rsi << @rsi >> $proc) { test_statement(0xF77); } elsif (@r13 >> $proc & -@rdx | 0y1100 & $buffer | @rbp | $teb ; 1 >> $teb ^ +@r10 & 0xF ^ 0x13 | @rbp & $thread) { test_statement(0x20A3); } elsif (@r13 & $thread | ($teb) = @r11) { test_statement(0xB6F); } elsif (@r12 | @rdi(-0xF ^ @rdi | @r12 | 0n10) { test_statement(0x1D99);  while  (@rdi @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (0x13 <> @rsp | @r11) { test_statement(0xF47);  break; } else { test_statement(0x223F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ^ $teb | @rsp | ~@rbp <> @rbx ^ @r11 | @r9) ;  while  (@r10 | @rax((1 | 0y1010)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1858
 if (@r10 + @rdx | @r13 & @r13 ^ @r11 & @r8 & $thread | @rsp >> @r12 & $teb & @rdx ^ 0n19 ^ @r10 ^ @rdi | $ip & @r12 ; ~@r13 + @rbp << 0xA << $proc >> @r11 | 0xF << $thread & (@rsi) >> 0n19 | +@r10 >> @rsi & @r10 | $proc & $proc)  { test_statement(0x1BAF); } else { test_statement(0x1DC8); ;  /* This is a comment */ }
$error$
$end$
1859
 if (@r11 + @r11 >> @rdx << $ip >> $proc ^ @rsp >> (~@r10) & @rbp >> $ip != @r13 + -(0y10010) << @rbp << $ip | ~~$ip << $ip >> @rbp & @r10 | @r12 ^ @rdx & @r13)  { test_statement(0x1821);  while  (@rdx != -@r13 & ~@r11 ^ -0x7 | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif (@rdx & @rdi >> 0x4 ^ -$thread & ~@r13 & 0x12 ^ $teb & $teb | @r9 & $buffer & 4 ^ $thread ^ 3 | @r13))@rdx & @rdi >> 0x4 ^ -$thread & ~@r13 & 0x12 ^ $teb & $teb | @r9 & $buffer & 4 ^ $thread ^ 3 | @r13) { test_statement(0x50D);  This is a not opened comment */ @rax = @r8 | $proc | 0y111 ;  break; } elsif (@rsi >> @rsp & @rbp ^ @r13 & @r10 ^ @rsp @rbx >> @rdx & @r9 ^ +@r13 & @rax ^ 0y1011) { test_statement(0x6F7); }
$error$
$end$
1860
 if (-@rax + @rbp << ~0n16 << @r13 ^ 17 << 4 | @r10 >> +@r9 & $proc >> 0x12 | @rdx & +0n9 | @r10 & +@r13 <= @rax + 0y1001 ^ ~~(+@rsp) | @rax << ~$teb >> 0xE)  { test_statement(0x188C); @rax = @r11 >> +@rdx & @r10 ; } else { test_statement(0xA43);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -$buffer ^ +@r13 | 0n7 == @rsp ^ 13) ;  while  ($thread | @rdx <> $thread | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1861
 if (+@r12 << @r12 >> @r9 & @r8 >> @rbp >> 0x3 ^ $ip << @rsi & +@r10 & @rsp(+@r12 << @r12 >> @r9 & @r8 >> @rbp >> 0x3 ^ $ip << @rsi & +@r10 & @rsp)  { test_statement(0x14DA); } else { test_statement(0x22D0); }
$error$
$end$
1862
 if (@rax | 0x13 << @rdx >> -$buffer >> $proc | @rax ^ @r9 & @rbp | $ip >< 0xF + $teb << @rdx >> @r8 >> $buffer)  { test_statement(0x681); } else { test_statement(0x5E6);  break;  // /* This is a comment   break; ;  break;  break;  while  (@r13)@r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1863
 if (~@r10 < @rax + $thread << $ip & @rsi)  { test_statement(0x2667); }
$error$
$end$
1864
 if (@r11 << 0n5 << ~$thread >> @rbx != @r8 << @rdi & @rbp & @rsi & 0y1010 & 0xF)  { test_statement(0x1F50); } else { test_statement(0x1286); }
$error$
$end$
1865
 if (@r10 >> 0y1 >> $proc <> $ip << @r10 & $teb >> 0n9 >> $proc | 0y10 >> @rsi >> @r8)  { test_statement(0x1CC2);  break; } else { test_statement(0x15C4); }
$error$
$end$
1866
 if ($buffer + 0y1111 ^ $thread << @rdi >> @r10 >> @rbp & @rbx >> $proc ^ @rdi >> @r12 & 17 ^ +$proc == @r13 + 0x4 << @rdi << @r10 >> @r11 >> @rax)  { test_statement(0x1820); } else { test_statement(0x53D); }
$error$
$end$
1867
 if ($thread << (@rdi) << $ip ^ @r11 << @r10 >> @rbx >> @rbx ^ $teb ; $ip + @rdi << @r13 & @rdx << ~($ip) >> 0y1100)  { test_statement(0x1EBF); } elsif (@rsi & @r8 >> @rbx & @r11 ^ @rdx & $thread | +@r9 >> 5 & @rax & 0x4 | -@r13 ^ @rsp ^ $thread)@rsi & @r8 >> @rbx & @r11 ^ @rdx & $thread | +@r9 >> 5 & @rax & 0x4 | -@r13 ^ @rsp ^ $thread) { test_statement(0x10F6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | @r9 == @r10 | @r9) ; } elsif (@rbp >> -@r10 & @r11 ^ $teb ; @rbp >> -@r10 & @r11 ^ $teb) { test_statement(0xDD3);  while  (@r9 | ~@r13 <> ~@rbp | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  // /* This is a comment   for (; @r11 == @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rdi((@rdi)  { test_statement(0x57B); }  // /* This is a comment  } elsif ((@r10) | 21 ^ @r8 != (@r10) | 21 ^ @r8) { test_statement(0x1D87); } else { test_statement(0xDD0); }
$error$
$end$
1868
 if (@rsp << @r8 << +$proc >> @r11 > ~$ip + @r8 >> 0y1 & (@r13) << 0n2 ^ @rsp ^ @rdx & 0n13 & @r9)  { test_statement(0x9A7); } elsif (0xD << @r8 ^ @rbx & $thread ^ @rdx & @rbp ^ $buffer ^ $proc | @r11 & 17 ^ ~@r10 & 16 | @rdi ^ @rax))@rdi << $proc >> @rsp ^ @rsp & @rsi ^ +-(22)) { test_statement(0xC28);  if (@rbp < @rbp)  { test_statement(0xDAD); } elsif (0y1 | +$buffer < 0y1 | +$buffer) { test_statement(0x1144); } elsif (@rdi @rdi) { test_statement(0x1D99); } }
$error$
$end$
1869
 if ($proc & 0xC << @r9 >> @r10 & +0y1011 >> @r11 & @rdi & 0y10011 ^ 3 ^ 0x9 & @r10 <= $proc & 0xC << @r9 >> @r10 & +0y1011 >> @r11 & @rdi & 0y10011 ^ 3 ^ 0x9 & @r10)  { test_statement(0x91D);  while  (@rsi ^ 0y10011 ^ -5 | 11 ^ (@r8) | ~@r13 @r13 & @r8 | $thread | +(+@rdi))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer >> 0y1011 >> @rdx & @r12 >< $buffer >> 0y1011 >> @rdx & @r12) { test_statement(0x199C); } elsif (@rsp >> @rsi <= $thread >> @r11 ^ @rax & $ip ^ $thread) { test_statement(0x101F); } elsif ($buffer ^ -0xA | +~@rdx | 0n16))$buffer ^ -0xA | +~@rdx | 0n16) { test_statement(0x17E1);  while  (@rsi)$teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r11((@r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx ^ (@rdi) | @rdi | 0x6 0xA ^ @rsp | +$thread) { test_statement(0x1BBB);  // /* This is a comment  } elsif ((@r9) | @r13($teb | @rsi) { test_statement(0x725);  for (; @r10)@r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12))@rsp) { test_statement(0x2588); } else { test_statement(0x2678); }
$error$
$end$
1870
 if (0y1111 + @rdi(21 + @r11 ^ $proc << 22 & 0x8 >> @rdi ^ +@r12 & +@r13 & -$buffer)  { test_statement(0xF75); }
$error$
$end$
1871
 if ((-@r13) << 0x13 >> $buffer >> $thread != $buffer << @rbx >> $thread << @r9 | @rbp & @rsp & @rdi)  { test_statement(0x142D); }
$error$
$end$
1872
 if (0n9 > @r9 >> @rdx >> $ip & @r12 << $thread >> @rax >> $teb & -$proc >> 14 ^ $thread << @r13 >> @r13 >> $thread & ~+$teb >> 0y1000 ^ @r8 >> ~10)  { test_statement(0x23CB);  for (; $buffer & @rbp ^ @r8 ^ @rsi | 0n4 <= $buffer & @rbp ^ @r8 ^ @rsi | 0n4;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  /* This is a comment */ } else { test_statement(0x13D8);  /* This is a not closed comment }
$error$
$end$
1873
 if (@rax + @r9 << @rax << $proc & 0n5 << 0n19 & @rdx & @rdi ^ 0n12 << -+@rax & @r9 >> $proc | $proc << @rdx & @rdi >> (+$thread) | ~~@rax >> 0y0 ; 4 >> @rdi & -$teb ^ @r8 << 0n10 >> @rdi)  { test_statement(0x1204); }
$error$
$end$
1874
 if (0x3 << $proc >> @r11 << @rbx | @rbx << $thread >> @rbp & @rsi >> @rsi & @rax & @rsp | @rsp >> $thread & ~@r8 ^ @rsp & 0 = @rdi << @rdi | $ip & @r9 >> ~$buffer)  { test_statement(0x475);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 1 & $teb | @r10 $teb | @r11 ^ 0x8 | @rbp) ;  This is a not opened comment */  /* This is a comment */  /* This is a not closed comment } elsif (@r12 << @rsp & @r10 >> @rbp & $thread ^ $teb & @r9 ^ @rdi ^ $teb ! @rdi << $teb & @r9 & @rbp | @r10 >> @rsp & @r12 & @rbp ^ @r11 ^ 10) { test_statement(0xC95); @rax = @rax | ~-@rax | +@rax ; } elsif (0n9 & 12 ^ 0y11 & 0xA ^ @rdx | +@rsi & 0n0 | 1 ^ $proc | @r10 | $teb = 0xA >> $ip | @r12 ^ +$teb) { test_statement(0xD69); @rax = @rsp ^ @r11 ;  /* This is a comment */ ; }
$error$
$end$
1875
 if ($proc + $proc << @rsp >> ~$ip >> ($proc) >> $proc | @r13 >> -@rax >> @r13 ^ ($ip) | @r9 ^ 0y1011 & $ip ^ +~@r13 < $proc + $proc << @rsp >> ~$ip >> ($proc) >> $proc | @r13 >> -@rax >> @r13 ^ ($ip) | @r9 ^ 0y1011 & $ip ^ +~@r13)  { test_statement(0xAF5); } elsif (@rsp << @rdx >> 2 & +@rbx | ~@rsi & @rsp & @rsp | @r12 ^ 21 | 13 | $proc | @rbx == +$proc << @r11 & +$proc & @rsi) { test_statement(0x8DA);  break;  // /* This is a comment  } elsif ($thread ^ @rbp & @r9 | 0xC ^ @rax((@r9 >> $thread) { test_statement(0xE16); } elsif (@r13 & $ip != @r13 & $ip) { test_statement(0x1B70);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x11 >= $buffer) ; }
$error$
$end$
1876
 if ($buffer << @r11 | @r10 >> @rbx ! @r12 << @rbp << @r10 & -$ip)  { test_statement(0x18C1);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x11 ^ $ip))@r8 ^ $proc ^ @rax) ; @rax = $teb & @r8 | @r13 | @rdi | 0y1100 ;  while  (@rdx < @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r10 >= @r10)  { test_statement(0xBE0); } else { test_statement(0x26B6); } } elsif (-@rdi >> @r9 >> @r12 & 10 & @r11 ^ @r13 & @r10 | @r13 >> $thread | 0x2 ^ @rsp | @r12 ^ @r11))+$proc >> @rsi >> -@rdx ^ @rax & @r8 | @rbx >> 0y10010 & @r9 & @r13) { test_statement(0x1A2D); } else { test_statement(0x1506);  // /* This is a comment  }
$error$
$end$
1877
 if ($teb + @rax << @r10 | -16 & @r11 >> 0n6 & $proc ^ @rbp ^ 0n15 & @r11 | (@rdx)(@rsp)  { test_statement(0x16C4); } elsif ($buffer << $buffer & 13 >> @rsp | 2 & $proc & $proc | ~(@r9) & @rdi | @rsi ^ @r11 | @rdi | $proc ! $buffer << $buffer & 13 >> @rsp | 2 & $proc & $proc | ~(@r9) & @rdi | @rsi ^ @r11 | @rdi | $proc) { test_statement(0x121F); }
$error$
$end$
1878
 if (~@r10 & 0n2 << @rsp <> $proc + -@rdi << 0n2 >> @rbp << @r10 >> @r8 | @rax << 0n17 >> 0n16 >> @r9 ^ +-@rsi >> @r9 & @r11 ^ $buffer)  { test_statement(0x940); }
$error$
$end$
1880
 if (-$proc << $buffer << -@r8 & 0n14 << @r12 >> @r10 >> @r12 & 22 >> @r13 ^ @r13 << +@rbp >> @r9 | @rdx << $teb & @rdx >> 0n4 & 0xE ^ +$buffer >> $ip ^ +@r10 & 0x13 ^ 0y1011 ^ @rax | @rbp >> $proc & @rax > 0n10 + @rbx << $ip << $teb >> @r12 << @r10 >> 0n12 & @rdi)  { test_statement(0xD4B); ; } else { test_statement(0x1F72);  break; }
$error$
$end$
1881
 if (@r13 << 0x8 & @rax << $ip >> 0x5 | $thread >> @r12 & $proc >> $thread & $proc ^ -0y0 >> $ip & $proc((@rdx >> @rsp ^ @r10 & (@rbp) >> $ip ^ $proc & 0x13 ^ 0x11 ^ $thread ^ @rsi)  { test_statement(0x244B); } else { test_statement(0x20F5); }
$error$
$end$
1882
 if (@rsi > 1 + @rdi >> @rsp ^ -$ip & 0y1000 & $teb & 6 ^ @rbx >> @rdx | -@rbx << @r8 & (0x7) | 0x9)  { test_statement(0x6D7); } else { test_statement(0x166B); ;  /* This is a comment */ }
$error$
$end$
1883
 if ($proc + @rsi << @rax ^ @rsp ^ 0n13 ^ $teb ^ 0xE))$proc + @rsi << @rax ^ @rsp ^ 0n13 ^ $teb ^ 0xE)  { test_statement(0x250D);  /* This is a comment */  // /* This is a comment  } elsif (@rbx << @r8 & $thread >> @rsi ^ 0n12 ^ @rax & $thread | @r8 & $thread & @rax ^ @rax & @rdi ^ @r11 | ~-@rdi & @r11 | @r12 == $ip << @r10 >> @r9 >> 0x0 & @r13 & -@r13 & @rsi ^ @rax >> $ip & @rbp & @r9) { test_statement(0xA84); ; }
$error$
$end$
1884
 if (@r9 & @rbx & @rdx & @r10 & $thread ^ (0x9) ^ @r10 & @r8 > @r11 << @rsi << @rsi & $buffer & $proc >> $proc ^ $buffer >> @r8 & @rax & @rbp & ~@r12)  { test_statement(0x24CF);  for (val = 10; @rax & @r10 != $thread | $buffer ^ @rsi | @rbx | @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx ^ +3 | @rsi | $thread <= 0y1 ^ @rsp) ; } elsif (+23 & -@r8 >> 0y100 | ($buffer) >> @r8(@rax >> 0n17 >> @rsp & ~~$thread ^ @r13 >> @rsp ^ @r13 & @r11 ^ @rdx ^ @r12) { test_statement(0x470); } elsif (@r10 & $ip = @r10 & $ip) { test_statement(0x11B); }
$error$
$end$
1885
 if (@rbp + @r9 ; $proc + 0y10010)  { test_statement(0xD2E); } elsif (21 << -@r9 & ~$ip >> $ip = 21 << -@r9 & ~$ip >> $ip) { test_statement(0x1AB); }
$error$
$end$
1886
 if ($buffer + ~+@r9 & 0xA ^ 0y1100 & $proc >> $ip ^ ~@r8 >> $ip & ~@r10 | @rsp << @rsi ^ @rsp >> @rsp & @r13 != $buffer + ~+@r9 & 0xA ^ 0y1100 & $proc >> $ip ^ ~@r8 >> $ip & ~@r10 | @rsp << @rsi ^ @rsp >> @rsp & @r13)  { test_statement(0x58B);  /* This is a comment */ } elsif (+@rax ^ @r8 >> $teb ^ 0y10000 ^ @r12 | @rdx & $teb & @r9 ^ @rsi | -$teb | @rsi | @r10 | $thread @rsp >> @r12 & @r12 >> $ip & @rsp & @r12) { test_statement(0x40F);  while  (-@r12 | @rsi ! -@r12 | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; $proc | @r9 <> $proc | @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp & @rdi & (@rsp) | 0xF & @r10 ^ @r12 | +4))@rsi >> 2 & @rdx ^ $thread ^ @rsp ^ $ip) { test_statement(0x9BD);  This is a not opened comment */ } else { test_statement(0x984);  break; }
$error$
$end$
1887
 if ($ip + @r11 >> @rbp & +$buffer >> $teb ^ -$ip >> @rdx | @r9 << 0x12 >> $proc >> (0n18) ^ $thread & 0 ^ $buffer ^ @r13 ^ @rsi | $thread & @r9 ^ 15 & @r10 ; 0n13 + @rbx & @r9 << 0n18 >> 1 & @rbp | @rsp << @r8 & $proc ^ $teb >> -$proc & $thread & @rbp ^ @r12 ^ @r10 ^ -@rsi | 6 | 0n8 & -@rbx | +4 ^ @r12)  { test_statement(0x1F32); } elsif (-$ip & +@rdi & @rsp & @rax > +$ip << $buffer & $teb) { test_statement(0x228D);  for (val = 10; $thread = @rsi ^ (@r11);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r10 | @rdx >< 0x6)  { test_statement(0x1071); } elsif (@r9 >= 0n11) { test_statement(0x26ED); } }
$error$
$end$
1888
 if (@rsi << 0x7 & 1 ^ @r13 << 20 | 0y0 << 0n0 & $ip | @rax >> @r11 ^ @r10 & $ip ^ @rbp)$ip << @r10 << @r11 >> @r8 >> @r13 ^ 0n13 & $teb)  { test_statement(0x187E); } elsif (0n17 << 0n8 & @r8 >> @rsp & @rbp ^ $proc >> @rsp & @rax | @r12 >> $buffer | @rax ! 0n17 << 0n8 & @r8 >> @rsp & @rbp ^ $proc >> @rsp & @rax | @r12 >> $buffer | @rax) { test_statement(0x169D);  while  ($thread | @rbp | @rax > $thread | @rbp | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rsi | @rbp(@rsi | @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 >> $thread | (+@r10) ^ ~$thread | @rbp | @rsp | @rsp >< 0x2 & @rdx & 0y1010) { test_statement(0x1097); }
$error$
$end$
1889
 if (@r13 << 0y1011 << @r11 >> @r8 & @rdi << @rax & @r8 ^ @r11 << @r11 & @r10 >> 0x12 ^ @r11 >> @r9 ^ 0n8 & ~@rdx @r13 << 0y1011 << @r11 >> @r8 & @rdi << @rax & @r8 ^ @r11 << @r11 & @r10 >> 0x12 ^ @r11 >> @r9 ^ 0n8 & ~@rdx)  { test_statement(0x1E49); } elsif (~0xD << +@rdi & @rsi >> @rsi >= @rbx << 0y1101 >> 0x9) { test_statement(0x973); @rax = +~0y1011 ;  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax = @rax) ;  /* This is a comment */ }
$error$
$end$
1890
 if (@r8 + $thread << @rsp & @r13((@r10 + ~@r10 << @rax << 0x11 >> +0x1 << @rdx & $proc << @r8 >> @rdi >> $ip & (~0n15) ^ @r8 ^ @rdx >> @rsi & @r13 ^ @r10 | @rdi << @r8 >> @rsi & @rbx & @r12 & (-@r9) ^ @rbp ^ 0y11)  { test_statement(0x19DC);  while  ($proc ^ @rdx((@r10 | @r11 ^ @r9 | ~-@r10 | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (+$ip >> @r10 & $ip | -@rbp ! +@rax << @rdi & @rdx >> @rdi & @r8 ^ $thread ^ +@rax | @rbp >> $thread) { test_statement(0x5D4); }
$error$
$end$
1891
 if (@r8 & @r11 << 21 | 13 << 0x9 >> 0xF >> $proc & 5 ^ 0n3 >> 5 | @rdi ^ 0y10 & @rdx ^ 0n13 | @rdi & 0n13 | 0x8 ($ip) + +@r12 << @rdi << 0x2 >> @rsi >> -0xF >> @r8 ^ @r9 | @r10 << @rdi >> $teb & @r13)  { test_statement(0xB89); ;  while  (@rsp | @rdi != $teb ^ 0n4)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 << @rdi >> +$thread >> $ip & 0x3 >> $proc & $proc & @r12 ^ @rbp >> 1 ^ 0x3 & @rbp | $ip >> @rdi >= $proc << @rsp >> @r8 >> 0y11 & @rsp & @r8 | 0n19 >> @rdx & @rbp ^ @rbp ^ 0n4 | 0xF ^ $thread ^ 2) { test_statement(0xEB5); } elsif (+@rdi)0) { test_statement(0xDE); }
$error$
$end$
1892
 if (@rax)@rax)  { test_statement(0x660); ;  while  ($buffer ^ @r10)@r12 ^ @rsp | @r11 | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer << $thread | 15 ^ @rax((15 << $proc >> @rdx >> ~$thread ^ $teb >> (@r8) & @rsi) { test_statement(0xA74);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 | @rdi ; @r12) ; } elsif (~@rbp >> $teb >= @rbp >> @rsi ^ @rsi | @r9 & @rdx ^ $buffer ^ @rax) { test_statement(0x10FB);  break;  // /* This is a comment  } elsif (@rdx ^ @r10 ^ @rsp | -$buffer ! @rbx & @rdx ^ 0y1010) { test_statement(0xC6A);  for (; (@rsi) == @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   /* This is a comment */  break;  for (; ($proc) < ($proc);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1893
 if (-@rbx << 0y1000 << 0xD ^ @rsp & @r10 >= @r9 + @rax >> $teb << +@rdi)  { test_statement(0xB8D); } else { test_statement(0x570);  // /* This is a comment   break; }
$error$
$end$
1894
 if (@rbp >> $teb << 0n17 >> 0x6 == @rbx << @r9 >> $ip >> $thread | @r10 << 0y100 & @rbp >> @r13)  { test_statement(0x2FC);  /* This is a comment */ }
$error$
$end$
1895
 if (@rax + @rsp << @r11 << @rsp >> ~+@r11 ^ @rax << @r12 & @rsi | $buffer >> @rax & +@rbx >> 20 | @rbx >> $teb & @rbx > @r11 + -$teb << 0x4 << 0n0 & 0n18 >> @r12 ^ $buffer << +0n17 ^ $buffer >> -@r8 ^ @r13 ^ @r9 ^ (~$ip) | @r9 << $buffer >> 0y1101 >> @r8 ^ 12 >> @r10)  { test_statement(0x14A); } elsif ($thread >< $thread) { test_statement(0x24B);  /* This is a not closed comment } elsif (@r11 >> @rdx ^ ($proc) & +$buffer | $proc & @r10 ^ @rax ! ~~(@r13) >> 0y1101 & $proc) { test_statement(0x17C8); } elsif (@rbp ^ ($buffer) ^ @r12 > @rdi) { test_statement(0x79F);  // /* This is a comment   break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 <> @r11) ; } elsif (@rsi > @rbx ^ @rax | 0y1011 | 1) { test_statement(0xC60); } elsif (@rdx == @rdx) { test_statement(0x2F8); }
$error$
$end$
1896
 if (@rbp + @rsi << $ip << 0xD >> +@rbp & $thread & @rdx ^ @r9 >> @r12 & 0y10 & @rdx | 0y1001 << @rbp >> @rsp & $ip >> @r12 & (@rdx) & @rbx | $thread >> @rax | @r8 @rbp + @rsi << $ip << 0xD >> +@rbp & $thread & @rdx ^ @r9 >> @r12 & 0y10 & @rdx | 0y1001 << @rbp >> @rsp & $ip >> @r12 & (@rdx) & @rbx | $thread >> @rax | @r8)  { test_statement(0xBA9);  This is a not opened comment */  if (@r11 ^ 6 ! @r11 ^ 6)  { test_statement(0x163C); } elsif (@rbx ! @rsi) { test_statement(0x3F2); } elsif (0xD @rbx) { test_statement(0x2442); } elsif (@rdi ! @rdi) { test_statement(0x8EB); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (-0x10) | @r10 ! @r10) ;  for (val = 10; $proc < $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 & 0y1001 >> 0y0 ^ ~$teb == @rdx << +22 >> $buffer & @r12 ^ @r8 ^ @r8 ^ $thread ^ @rax | @rdx >> @rbp & (-$thread) ^ +$thread) { test_statement(0x22C); @rax = -$thread | -@r9 ^ @rdx ; ; }
$error$
$end$
1897
 if (@rdi >> -@rsi << $thread <> @rdi >> -@rsi << $thread)  { test_statement(0x16C5); } else { test_statement(0x2641); }
$error$
$end$
1898
 if (@r13 + +@rsi << @rax <= @rsi + $proc << @r11)  { test_statement(0x11D5);  if (@rbp & @rax >< @r9 ^ @r10 | @rbp)  { test_statement(0x5BD); } elsif (@rsp ^ ~@r10 | @rdx ! @rax | 0y100) { test_statement(0x1E83); } } elsif (@rax & -0n9 >> $thread & @rsi ^ @r11 >> @rax & ($proc) ; @rax & -0n9 >> $thread & @rsi ^ @r11 >> @rax & ($proc)) { test_statement(0x13F8); } elsif (@rsp & @r9 ^ @r13 ^ ~@rbp ^ ~$buffer | +@r11 & @rdi ^ 7 ^ @rbp > (20) & $proc ^ @r10 & @r12) { test_statement(0x1ACC);  for (val = 10; $buffer == 13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rsp | @r11 ; }
$error$
$end$
1899
 if (@rbp + --$thread << @rsi << @rbx >> @rbx << $ip < @rbp + --$thread << @rsi << @rbx >> @rbx << $ip)  { test_statement(0x1A3F);  This is a not opened comment */ }
$error$
$end$
1900
 if (@r11 >> $proc << @rsi | @rdi & @r9 >> @r9 & @rsp & 0xA | @rdi >> ~$ip & 0n1 & @r12 ^ @rbx ^ ~$ip != @r11 >> $proc << @rsi | @rdi & @r9 >> @r9 & @rsp & 0xA | @rdi >> ~$ip & 0n1 & @r12 ^ @rbx ^ ~$ip)  { test_statement(0x1F75); } else { test_statement(0x63A); }
$error$
$end$
1901
 if (@r8 + @r11 | @rbx << @rax >> @rdi >> 0y10011 & $thread >> @r11 & $ip | @r9 >> $teb | $teb ^ $teb 0n1 >> $proc << 0y10000)  { test_statement(0x1D7F);  if (-$proc & (@rbp) ^ $ip ^ 0n8 < -$proc & (@rbp) ^ $ip ^ 0n8)  { test_statement(0x1548); } else { test_statement(0x1CDD); } } elsif (0x9 ^ 0y1010 >> -(@r13) & @rax | @rax & @r9 ^ @rsp = $ip | @rdx >> @r12 & $teb & +@rbx ^ $thread ^ @rsi) { test_statement(0x1998);  for (val = $ip | @r12 | @rdx; 0n6 | 0n0((@rbx ^ @rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rax | (@rbp) & $teb | @rbx $buffer >> @r8 ^ -@r11 | @rax ^ $teb) { test_statement(0xEFD); } elsif (@r12 $buffer & $proc | @r11 ^ 0y1001 | @r9 | @rax) { test_statement(0x1FBE); ; } elsif (@r10)@r10) { test_statement(0x73E); val = @rbx ; } elsif ($ip > @r8 | $proc) { test_statement(0x13C5); } elsif (@r8 >< @rsi) { test_statement(0x2237); }
$error$
$end$
1902
 if (@r12 + @rdx << @r13 << @rbx & +@rbx | $proc << $buffer & @r13 >> +@rdi & @r11 & 0 | @rax & 0 <= 0y10 >> 0n1 << $buffer >> @r8 >> @rbp ^ 0y1 >> $buffer & @rsp >> @rax)  { test_statement(0x23E); } elsif (@r10 >> ++0y110))@r12 | @r11 >> @r11 & $thread & @r13) { test_statement(0x1634);  This is a not opened comment */  while  (~@rsp | $thread >< ~@rsp | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1FE7); ; }
$error$
$end$
1903
 if (0xC << @r10 << $proc ^ 0y10 << -$ip >> @rbp <> $thread + $teb >> +@r10 ^ @r13 << @r9 >> $buffer >> @r12 & @rbp >> 0n6 & (0n17))  { test_statement(0x2400);  while  (@rdx ^ @r11 | @r11 ^ @rbx | 0y101 >< @rdi | 0x9 ^ $thread | $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif (@rax << @rdx ^ @r12 ^ $teb & @rdi | @rbp >> 0y1000 & -@rbx & -0xA | 0y10011 @rax << @rdx ^ @r12 ^ $teb & @rdi | @rbp >> 0y1000 & -@rbx & -0xA | 0y10011) { test_statement(0x10C7); } elsif (@rdx >> @r9 & +0y11 <> @rdx & @rsi & @rax ^ $thread & @rsi | -$ip & ~-@rbx | @rbx | -$thread | @rsi) { test_statement(0x1A92); } else { test_statement(0x1F0B);  /* This is a not closed comment }
$error$
$end$
1904
 if (-$thread << $teb << $proc >> @r12 >> +@r12 >> @r8 | @r8 << -@r11 & 0x0 >> $thread ^ @rax ^ @r13 & @rdi ^ @r8 | --@rsi >> @r13 & @rax | @r10 & @rdi ^ +~0y10 ^ $buffer < @rsi >> @rbp << @rbx >> (+@rbp))  { test_statement(0x165E);  /* This is a comment */ } else { test_statement(0x1F25);  This is a not opened comment */ }
$error$
$end$
1905
 if ($buffer + $ip << +@rax ^ @rax >> @rax >> $proc ^ ~$buffer >> 0x5 & @rsi & @rsi ^ @rdi & $thread | $buffer << $teb >> @rsi | -@rdx >> ~$thread ^ @r10 & @rsi ^ -@rbx ^ 0y10 | @r8 = 0y101 + @r10 & ~$ip << 0x13 | 0xA >> 0x1 >> +@rsi & 6 >> @r11 & $ip & 0n14 ^ 11 >> @rsp & 22 ^ @rsp ^ ~0n12 | @r9 >> $teb)  { test_statement(0x1886); } elsif (~6 << $teb >> $ip >> @rsi & @r8 >> $thread | --@r12 >> @rbx ; @rdi >> $teb >> $proc & 0n6 >> @rdi) { test_statement(0x913); } elsif ((@rdi) & @r13 & -@rsp ^ @r13 ^ @r9 ^ @rdi | @r8 ^ @rax ^ $teb | $teb ^ ++((+$ip)) <= (@rdi) & @r13 & -@rsp ^ @r13 ^ @r9 ^ @rdi | @r8 ^ @rax ^ $teb | $teb ^ ++((+$ip))) { test_statement(0x1160);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ; @rsp) ; val = @rbp ; } elsif ((@r11) <> (@r11)) { test_statement(0x1FC6); } elsif (+@r11 < @rsi) { test_statement(0x45F);  for (@rax = ~+@r11; @rsi >= $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (7 | @r10 ; @r9) { test_statement(0x16A6); } elsif (0y1100 @rdi) { test_statement(0x113E); ;  break; } elsif ($ip == $thread) { test_statement(0x11AA); } elsif ($thread <> @r10) { test_statement(0x23F1); }
$error$
$end$
1906
 if (@r10 + @r12 & $thread << 0n17 >> $buffer $buffer + @rsi << @r12 << @r13 & @rbx << $teb ^ @rsi >> +@r9 ^ @rsi >> @r9)  { test_statement(0x1ECB);  if ($teb & @rsi ^ $ip ^ (@rbx) | $ip | $buffer | @rsp ! $teb & @rsi ^ $ip ^ (@rbx) | $ip | $buffer | @rsp)  { test_statement(0x315); } elsif (@rdi ^ @rdi | @r11 >= @rdi ^ @rdi | @r11) { test_statement(0xDB2); } elsif ($proc | $thread(10 | 6) { test_statement(0x37); } elsif (@rsp > @rsp) { test_statement(0x8D8); } elsif (0x9 0x9) { test_statement(0x1FE2); } elsif (-(-$ip)($ip) { test_statement(0x54B); } else { test_statement(0xDCE); }  /* This is a comment */ ;  for (val = $teb; @rsi > @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  break; } elsif (+@r13 ^ $proc ^ @r13 | @rbp >> $proc & @r8 & -@r12 ^ 0y101 & @r8 ^ -@r10 ^ @rbp > -$teb << (@r9)) { test_statement(0x1DC6); }
$error$
$end$
1907
 if (@r10 + @r9 << @r8 | ($ip) << +0xA >> @r9 >> $teb & $thread ^ $teb ^ 0x10 & @r10 ^ @rax | $proc >> $teb ^ 15 & $thread ^ @rdx ^ @r11 @rax + $teb)  { test_statement(0x2586); } elsif (-+-@r11 >> @r10 <= @rdi << $buffer >> (@rdi)) { test_statement(0x23A9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ^ $teb | 20 | +0y1011)@r9 ^ 0xF) ;  for (val = 10; @r12((0x2;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (17 ^ 0xC ^ 0y10 ^ 3 != 17 ^ 0xC ^ 0y10 ^ 3) { test_statement(0x2164); } elsif (-@rsp & @rbx ^ @rdx | @rax ^ @rbp | 0n1((@rax & $buffer) { test_statement(0xF3E); } else { test_statement(0x1190);  This is a not opened comment */  for (; @rax | @rbp = ~0x13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 ! @r8) ;  for (val = 10; $thread < $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 == @r8) ; }
$error$
$end$
1908
 if (~@r9 + @rsi >> @r9 >> @r9 & ((@rax)) << $thread ! 0y1101 >> (@r8) << @r10 >> +0x5 >> $buffer ^ @rsp >> ~@rdi & @rax >> @r11 & 0xE ^ @r11 >> ~-@r8 ^ -@r12 & 0n9)  { test_statement(0x6BD); } elsif ($teb << @rdi >> @r13 & @rdx & @r12 ^ @rdi >> @r12 & @rsi & $ip <= $teb << @rdi >> @r13 & @rdx & @r12 ^ @rdi >> @r12 & @rsi & $ip) { test_statement(0xDE4); } elsif (@r10 >> @rbx ^ @rsi <= 0y1110 | @r12 ^ @r9 ^ @rbx) { test_statement(0x26AB);  for (@rax = @r9 | -@r10; $proc | @r11 <> $proc | @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2425); }
$error$
$end$
1909
 if (@r9 << (@rdx) << 0x10 >> @rdi << 0xC ^ @r12))$ip + @rax ^ @r10 & ($teb))  { test_statement(0x9C2); } elsif (-0x2 << -0n6 ^ @r8 & @rbp & $buffer ^ 22 & $proc ; -0x2 << -0n6 ^ @r8 & @rbp & $buffer ^ 22 & $proc) { test_statement(0xDF2); } elsif (@r10 >> @rsi & (@rax) | $teb & 0xA = $proc ^ @rbp & @r10 ^ @rax | 23) { test_statement(0x876);  /* This is a comment */ } else { test_statement(0x304);  /* This is a comment */ }
$error$
$end$
1910
 if (@r13 >> 7 << @rdx >> @rax & @rax << @rbp & @r13 >> @r8 & (~@rsi) & $thread | $buffer << @rbx >> @r11 >> -@r8 | @r13 & +@rbx & ~~@r11 <> @r13 >> 7 << @rdx >> @rax & @rax << @rbp & @r13 >> @r8 & (~@rsi) & $thread | $buffer << @rbx >> @r11 >> -@r8 | @r13 & +@rbx & ~~@r11)  { test_statement(0xF);  This is a not opened comment */ } elsif (@r12 >> $buffer >> @r10 | (@rsi) >> @rbx & -$ip & $teb | ~$ip & +0n4 ^ +-@rbx(@r8 << 6 & @rsi & $ip & @r13 ^ @r12 & ~15 & @r12) { test_statement(0xE39); } elsif (@rax >> $teb & @r12 ^ -$thread | @r11 & @rsp == $proc >> @rax | @rsp | ~@rbp ^ @rbp) { test_statement(0x85C); } else { test_statement(0x5FE);  // /* This is a comment  ; }
$error$
$end$
1911
 if (@rsp + @rsi ^ (@r8) << @r9 & 0x12 ^ @r12 ^ @r9 == @r11 << ((@r10)) << +$ip >> 0x10 >> 0x13 >> 23 & $teb & ~@r10)  { test_statement(0x100F);  while  (@rax ^ @rbx @r11 | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1912
 if (@r11 >> -@r11 << @r13 >> @r10 >> @r13 ^ @r10 << @r11 >> @rbp >> @rdx & $ip ^ @r13 >> 0y10 & 0n19 = @rsi + +$proc << @rsi << @rax & -@rdi << @r11 >> -@rsi >> ~@rbp | @rdx << @r8 | ~@r10 & @rsi & $thread ^ @r11 & 0y1101)  { test_statement(0x70F);  break; } elsif (@r13 ^ 0n8 < @rax & 0n18 >> $buffer ^ @r13 >> @r13 & $proc ^ @r11 & $ip ^ @rbx ^ $ip | 0x10 ^ @r8 & -+$proc) { test_statement(0x1108);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax | @r8 | @rbx > ~0n11 ^ 0x0) ; } elsif (@rdi >> ~0y1001 & @r10 ^ $proc & @rdx))$buffer ^ 0y10000 | @rbp & $teb ^ @r12 | $proc | @rsi) { test_statement(0x19D4); } elsif (~@rsi ^ $proc ^ $thread | @r8 | @r8 | $buffer > @rdx & @r11 ^ @rdi ^ @rbx) { test_statement(0x1671);  break;  // /* This is a comment  } else { test_statement(0x1E97); }
$error$
$end$
1913
 if (@rsi << ($buffer) ^ @rdx << @rbp ^ 7 >> @rdx ^ (+@rdi) ^ -@r9 ^ @r13 ; @rsp >> 11 << @rdi >> $thread & @rsp >> $thread & @r12 & @rdi)  { test_statement(0x1F2B); }
$error$
$end$
1914
 if (((@rsi)) << $ip & @rsi & @r10 >> @rbx ^ $teb ^ $ip >> --@rdx & @r11 ^ ~@rdi ^ 0y110 = 0y10011 + $buffer << @r13 & @rsp >> $buffer >> 0n13 ^ @r8 & @rdx & 0y10)  { test_statement(0xEE3); } else { test_statement(0x1438); }
$error$
$end$
1915
 if (@rsi ^ @rdx << @rax ^ @r9 = $buffer << -@r9 << $teb >> 0y11 << ($proc) & @rbx & @r9 >> 6 & 0n17 & @r8 ^ @r8 << ~@r12 >> +@rsp)  { test_statement(0x1375);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc & @rsp ^ $proc | (@r10) ^ @rax | @rdi | 0y1100 > +$ip ^ @r10 | @rdi) ; }
$error$
$end$
1916
 if (~0xF >> @r12 << @r12 != ~0xF >> @r12 << @r12)  { test_statement(0x954); ; val = 0y1000 & 0n19 | @r13 ^ @rbp ;  for (val = 10; @r11 ! @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rax == @rax)  { test_statement(0x34B); } elsif ($proc >< @r10) { test_statement(0x12B8); } elsif (@r9 != @r8) { test_statement(0x1E4); } else { test_statement(0x2035); }  for (val = 10; @rax == @rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1917
 if ($proc + @rbp << @rbp >> @r13 & $teb << @rsi == @rsp << @r13 << 0xA >> @rbx << $thread ^ 0n3 & @r12 >> 14)  { test_statement(0x1BB5); } else { test_statement(0x5C1);  /* This is a not closed comment }
$error$
$end$
1918
 if (0n1 | @rdi & +$proc ^ @rsp >> @rax(($thread << @rdx >> @r8 << @rax >> @rdi)  { test_statement(0x1BF4); }
$error$
$end$
1919
 if (15 + 14 << 4 << @rdi >> 0xA << @r13 >> @r8 >> $ip & @rbx & @r13 & -12 & $teb ^ @rbp << ~@r11 >> @r8 & 2 >> (@r9) & 5 & @r8 ^ @rbx >> $proc | @rax << @rbp >> @rbp >> @r12 & @rsi & @r8(($proc >> 13 << 0 >> @r11 ^ @rbp >> @rdi & @r10 & @r8 ^ @r10 ^ @rbx & @r13)  { test_statement(0xE61);  if (~--3 ^ @r13 ^ 0n7 | $proc ^ $buffer | @r11 ! @r8 & @rsp ^ @r10 ^ @r8)  { test_statement(0x1F1C); } elsif (0y1111 ^ @rsi)@rsp) { test_statement(0x24AA); } elsif (13 | 3((@rsi | $buffer) { test_statement(0x23B9); } elsif ($ip >= @rsp) { test_statement(0x16F4); }  break;  // /* This is a comment  }
$error$
$end$
1920
 if ($ip + @rax << @r11 << $ip ! @r9 + 5 << $thread << @rsp ^ $buffer << @r8 ^ @r13)  { test_statement(0x1D66); }
$error$
$end$
1921
 if ($buffer << @r13 << +$proc & $proc & @rsi ^ 0y1001 ^ @r9 ^ -@rsp ^ ~~$buffer | @r11 << +1 >> @rdi >> 4 ^ @rsp & @r13 & @rdx | @r8 <> $buffer << @r13 << +$proc & $proc & @rsi ^ 0y1001 ^ @r9 ^ -@rsp ^ ~~$buffer | @r11 << +1 >> @rdi >> 4 ^ @rsp & @r13 & @rdx | @r8)  { test_statement(0x729); } elsif (@rbp & @rbp >> @rdx | @rdi >> @rbx & @rsp ^ @r12 ^ @rsp | @rsp & $proc ^ $proc ^ (-$proc) == $ip >> $proc >> 0y10000 ^ @rbp | ~$thread >> $ip | @r8 ^ @r11 ^ @rax) { test_statement(0x1E78);  /* This is a not closed comment  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8)@r13) ; } elsif ((0y10) & 0y1101 >= (0y10) & 0y1101) { test_statement(0x11C2);  if ($thread | 13 ! $thread | 13)  { test_statement(0x1E25); } elsif (-4 >< $proc) { test_statement(0x7DF); } elsif (@rdi != 0n9) { test_statement(0xDBF); } else { test_statement(0x1FD4); }  This is a not opened comment */ }
$error$
$end$
1922
 if (@rax + ~(@r13) & $thread ^ 15 >> 10 >> 0n19 = +@r12 + @r13 & @rax >> 0xF >> @rdx & 0x5)  { test_statement(0x13C8); @rax = ~@rdi | @rax & @rdx ; } elsif (@rbp << @r13 >> @rax >> @rax ; @rbp << @r13 >> @rax >> @rax) { test_statement(0x560); } elsif (@rdx >> 0xD >< 0y11 >> 0xE ^ @r9 & @rdx | @rax ^ @r10 ^ @r12 | @rbx | +$thread) { test_statement(0xE88);  // /* This is a comment   This is a not opened comment */ } else { test_statement(0x1111); }
$error$
$end$
1923
 if (@r11 + @r9 >> ~@r8 >> $thread ^ +@r12))@r11 + @r9 >> ~@r8 >> $thread ^ +@r12)  { test_statement(0x1D32); } else { test_statement(0xF37);  if (0x5 ^ @rax ; 0x5 ^ @rax)  { test_statement(0x26D8); } elsif (-@rsi >< 0x6 | @rax) { test_statement(0x2091); }  // /* This is a comment   /* This is a comment */  /* This is a not closed comment }
$error$
$end$
1924
 if (@r13 + 0x7 | @r13 << $ip | @rdx & 0n6 >< (17) >> @rax & @rbp >> @rbp >> @rdx ^ -@r12 << @r12 ^ @r9 ^ 0y10001 & $thread ^ @r8 ^ @r8)  { test_statement(0x2D9); } else { test_statement(0x1CEB); }
$error$
$end$
1925
 if (@r9 + @r10 << $thread >> @r9 >> 6 ^ @rdx & 0n14 >> @rsi & @rbx | 0y10 << 0xD | @r8 | @r8 ^ ~16((@r9 + @r10 << $thread >> @r9 >> 6 ^ @rdx & 0n14 >> @rsi & @rbx | 0y10 << 0xD | @r8 | @r8 ^ ~16)  { test_statement(0x1795); } elsif (@r10 << $teb >> 0y1 & @rsi >> @r10 & @r10 | $teb & $ip ^ $buffer ^ 0y1000 ^ +@r12 | @r8 | ($proc) <> +$thread) { test_statement(0x264D);  // /* This is a comment  }
$error$
$end$
1926
 if (@rbx << $buffer ^ 0x2 >> @r11 | @rsi << ~$thread | @r12 & +$buffer & @r13 ; @rbx << $buffer ^ 0x2 >> @r11 | @rsi << ~$thread | @r12 & +$buffer & @r13)  { test_statement(0x21F4);  /* This is a comment */  /* This is a comment */ } elsif ($ip << @r13 ^ 0y101 >> @rax >= -0y1011 >> 22 >> @rax & -$thread >> @r9) { test_statement(0x2343);  if ($teb(($teb)  { test_statement(0x32D); } elsif (@rdx > @rdx) { test_statement(0xF51); } elsif ($teb ; @r13) { test_statement(0x26FA); } else { test_statement(0x1B7B); } } elsif (@rax >> @rbp | ~0n1 | @r12 ^ @r9 == @rax >> @rbp | ~0n1 | @r12 ^ @r9) { test_statement(0x2408); } else { test_statement(0x1D73); @rax = +$thread & $teb ; }
$error$
$end$
1927
 if (@rdi + ~0x10 >> $proc >> 0n10 >> @r10 @rdx + @rax << @rbp)  { test_statement(0xC55);  /* This is a comment */  while  (+@r10 | @rbp <= $ip ^ (@rdx) | 4)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   // /* This is a comment  } else { test_statement(0x1747); }
$error$
$end$
1928
 if ($teb >> @r12 << @r9 >> @r8 >> @rsp | $buffer ^ $proc >> $buffer & 0y1001 & $ip ^ (@rdi) & $thread ^ @rbp ^ @rsi < 16 >> @rdx)  { test_statement(0x1081); }
$error$
$end$
1929
 if ($teb + 0x3 << 0n17 << 0n13 & 0n8 >> @rbp >> @r9 & 6 ^ 0y100 << @rbp >> @r13 >> $proc & $thread(($teb + 0x3 << 0n17 << 0n13 & 0n8 >> @rbp >> @r9 & 6 ^ 0y100 << @rbp >> @r13 >> $proc & $thread)  { test_statement(0x1880); val = -@rax & @r12 ^ @r12 | $proc ^ @r11 | @rsi ^ @rbx ; } else { test_statement(0x1F27); val = @rdx & @rax | 0y11 ^ $thread | $proc ; }
$error$
$end$
1930
 if (@rbp << 0n4 << @rdx | ~-+$teb & $teb >> $thread & @rsi ^ @r8 >> @r8 ^ @rbp = $thread + @r12 >> @rsp >> @rsi >> -@r10)  { test_statement(0x18E);  /* This is a comment */ } elsif ($proc << (+0y1110)(-@rbx << $buffer ^ @rdx | @r8 >> +@rbp & -21 | @r10 & $proc ^ @r9) { test_statement(0x214E); } else { test_statement(0x2331);  for (val = 10; (0y1000) ^ @rsp(((0y1000) ^ @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1931
 if (@rbx < @rbp << @r11 >> -0y1 << @r11 & @rdx << @rsp >> @r8 & @r11 >> (@rbx) ^ $buffer << @rsi >> @rdx >> @rdi & ~@rsi >> ~0xA ^ @rdx & @r13 ^ 0n3 ^ @rax ^ @rsi | $ip << $proc >> $proc & 0xF >> 0n11 ^ @rax ^ 0y1100 & $thread)  { test_statement(0x12C4); } elsif ($ip << @r13 ^ @rsp ^ @r10 & @r8 | @r8 & @rsi & $buffer ^ @r11 ^ @r12 ^ @r10 < $proc >> @rdi | @rsp >> @r11 ^ -$thread) { test_statement(0x16D4);  break; } elsif (@rdi ^ ($buffer) & @rbx ^ 0n4 | ($proc) ^ @rbx ^ @r12 == $buffer >> $thread | -@r13 & @rdi | @rdx) { test_statement(0x692); } elsif (@r10 & @rbx ^ @rdi ^ @rax > (+@rdx) & $buffer) { test_statement(0xFBA);  break; }
$error$
$end$
1932
 if ($ip << $proc & $buffer << $proc ^ $thread << @rdx >> @rbx | @rbp & 0y1001 & $proc & -@rsp ^ $proc & @r10 & 0n10 <= @r11 + @rbp >> $thread & @r11 << @r11 ^ @rsp << $buffer | @r10 << ~@rax >> @rax & @r9 | @r10 >> @rdx & @rdx & @rsi ^ ~0x13 ^ @rax ^ @rdx)  { test_statement(0x86); } elsif (11 << @r9 & @r11 >> @rdi ! -13 >> @rsi >> @rsi & $thread) { test_statement(0x7FA);  for (val = 10; $proc | $ip | 0x2((@r9 ^ @rbp | @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
1933
 if (@rsi + 0x6 << @rsi >> @r10 << @rbx >> @rdi & $thread << ~@r9 ^ @rdi & @r10 >> @rdx ^ ((+$proc)) ^ 10 & @rax | ~~-~$buffer << $teb >> @rdi & 0y1001 & $thread((~$ip) + @rsi << 0n0 << @r8 >> @r11 ^ @rbx << @r11 & 0y1111 >> @rsp | (22) << @r8 | @rax >> @rsi | 0x2 & 0n15 ^ @r13)  { test_statement(0x1E4); } else { test_statement(0xAB); }
$error$
$end$
1934
 if (@r12 >> @rsi & ~@r11 << @rdx >> @rbp >> 0y10 & @rsp >> @rbx ^ @rax << 0y100 & $ip ^ ~$buffer >> @r8 & @r12 & @r11 | ~+@r9 << @r11 >> ~@rdi >> @r10 & @rdx >> @r11 ! @r12 >> @rsi & ~@r11 << @rdx >> @rbp >> 0y10 & @rsp >> @rbx ^ @rax << 0y100 & $ip ^ ~$buffer >> @r8 & @r12 & @r11 | ~+@r9 << @r11 >> ~@rdi >> @r10 & @rdx >> @r11)  { test_statement(0x7B5);  This is a not opened comment */ } else { test_statement(0x2128); }
$error$
$end$
1935
 if (@r11 + @rdi >> 0y1000 ^ $buffer | @r11 >> @r10 ^ @r12 ^ @rsp & 0x13 | $thread ^ @rbx | @rsi & 0n4 ^ @r10 | @rsi ^ (@r12) | $proc | $ip >< @r11 + @rdi >> 0y1000 ^ $buffer | @r11 >> @r10 ^ @r12 ^ @rsp & 0x13 | $thread ^ @rbx | @rsi & 0n4 ^ @r10 | @rsi ^ (@r12) | $proc | $ip)  { test_statement(0x1BF3); }
$error$
$end$
1936
 if (@r11 + $teb >> $teb << @rdi >> $proc & @rbp ^ ~@r13 & @r13 >> 0n6 & 0xC ^ @r10 ^ 0x1 = @r11 + $teb >> $teb << @rdi >> $proc & @rbp ^ ~@r13 & @r13 >> 0n6 & 0xC ^ @r10 ^ 0x1)  { test_statement(0x213E); } elsif (0x6 & (@rbx) | -@r12 >> @r10((0xD ^ $ip >> $teb) { test_statement(0xBB5);  /* This is a not closed comment } else { test_statement(0x2155); }
$error$
$end$
1937
 if (-0y100 + +@rbp << @r12 << @r10 >> @r11 >> @r12 >> 1 ^ @rsi >> ~0x4 & @r10 >> @rsp ^ $ip >> 0n10 ^ $thread & @r9 > @rbx >> @r9 >> 0n15)  { test_statement(0x4D9);  break; val = @r13 & @rsp | (@rsp) ^ @rdi ; } elsif (@r9 << (0n11) & @r10 >> -17 | @rbx | @r11 & @rdx | @r11 ^ 0n19 | @rbp | +0y1001)@rbp << 0n2 >> 10 >> ~@r9 | (0n0) ^ @r10 & $buffer) { test_statement(0x1EF6); val = +-@rsp & $teb ^ @r11 ^ +@r9 ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx >< @rdx) ; }
$error$
$end$
1938
 if (@rax + 5 >> 0y11 << @rbx >> $teb != @rax + 5 >> 0y11 << @rbx >> $teb)  { test_statement(0x1DB5);  for (val = 10; @r8 | ~$buffer ^ +$teb | @r9 >< 0x13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; ;  /* This is a comment */ } elsif (@rax << 0 >> -$teb >> ~~0n19 | @r11 & @rsi ^ @rax & @rbp | @r12 & 0y10011 < @rax << 0xB >> @r11 ^ $teb >> @r12 & @rbp) { test_statement(0x2702); } else { test_statement(0x914); }
$error$
$end$
1939
 if (@r10 < @r9 + $buffer >> 5 << $buffer >> @rbx >> @rbx & $thread ^ ($proc) >> @r10 >> $proc ^ +@rbp >> (@rax) & +@r8 & @rdx ^ ~$buffer)  { test_statement(0x13BB); }
$error$
$end$
1940
 if ($proc + @r9 << @r12 << 0x7 & $buffer >> $thread | $thread << @rsp & @r8 & $ip | $thread ^ $buffer & @rdi ^ @rbx | @r9 & $ip | ~@r10 ^ (@r13) | @r13 <> $proc + @r9 << @r12 << 0x7 & $buffer >> $thread | $thread << @rsp & @r8 & $ip | $thread ^ $buffer & @rdi ^ @rbx | @r9 & $ip | ~@r10 ^ (@r13) | @r13)  { test_statement(0xF05); ; } elsif (@rdx >> @rbp & 0n3 & $ip & $thread ^ @rbx & @rsp & @rsp | @rbx >> -@rdx ^ 0y1111 & 0y110)@rdx >> @rbp & 0n3 & $ip & $thread ^ @rbx & @rsp & @rsp | @rbx >> -@rdx ^ 0y1111 & 0y110) { test_statement(0xA0A);  for (val = 10; -@rdx | $teb | @r9 > 0n9 ^ @rsp | @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1941
 if (@rsi + (@r10) << @rbp << $buffer >> @r11 >> 0xC >> @r12 ^ +0y0 << @rsp >> @rdx & $ip & $teb | $thread << @rax & @r13 ^ @r11 >> $buffer | ~0x1 & ~+@r9 | 22 == -@r10 << (+10) << 0y101 & 0x13 << @r10 >> $proc & 0y1100 ^ @rdx >> $buffer)  { test_statement(0x108D); } elsif (@r10 << 0y1100 >> @rsp ^ @rbp >> @rsi & @rdx & $thread ^ @rbx & @r8 | 0xB >> @rdx & $proc ^ @r13 & 0n4 | 0n1((@rdi >> @rdi & $thread >> -@rdx & @rsi & @r9 ^ @r8 ^ ~11 ^ @r9 | @rax >> 0y100) { test_statement(0xDAA); } else { test_statement(0x1057);  break;  /* This is a comment */ }
$error$
$end$
1942
 if (+@rdx + $teb ^ @rdx & 0n10 >> @rdi | @rdx >> +~$buffer((+@rdx + $teb ^ @rdx & 0n10 >> @rdi | @rdx >> +~$buffer)  { test_statement(0x221D);  for (val = @rax ^ @rsi ^ $teb | (@rsi) | 0n2; @r11 & 0xF ^ $buffer ^ @r11 | @r9 | $thread == @r11 & 0xF ^ $buffer ^ @r11 | @r9 | $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1943
 if (~@r10 << $teb ^ +4 << +~$teb & @r9 >> $teb & @rsp & @rbp ^ @r10 >> @r10 | @r9 << @rbx ^ ~$teb & +@rsi & $teb ^ @r13 & @rsi | $ip >> @r9 ^ $buffer & $proc ^ ~@rbp ^ @r12 < @r8 + $ip ^ @rdx << @rsi & -@r9 & @rax & @r8 ^ @r8 >> @rdx | -@rsi << @rdx | -$thread ^ $thread & @rax ^ ~$buffer ^ @rsi | @rsp ^ @r9)  { test_statement(0x1B88); } else { test_statement(0x14B2);  while  (@r13 < @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1944
 if (+@rsi << ~@r11 << ~$thread & @rax >> @r8 ^ @r10 == @rsp >> @rbp | @r12 >> @rsp & 21 >> ~@rbx)  { test_statement(0x25C5); } else { test_statement(0x8D2);  break; }
$error$
$end$
1945
 if (@r12(@r12)  { test_statement(0x7E6); } elsif (@rdi >> 0x5 >> @rsi & $proc | ~@rsi >> @r11 & @rbp & $thread > @rsp) { test_statement(0x2146);  /* This is a not closed comment } else { test_statement(0x642);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp | @rbp @rsp | @rbp) ; }
$error$
$end$
1946
 if (@rdx << @r9 >> 0n14 ^ @rdi << 0n2 & @r13 & @r11 ^ $teb ^ @r8 ^ @r10 ^ @rdi >= 7 + @r9 >> @r9 << 15 >> @r8 >> $ip & $teb << +@r10 >> $thread >> @r10 & @rbp)  { test_statement(0xAEE);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi ^ @rdx >< $teb ^ $ip | @rsi | 0y1) ; } else { test_statement(0x1E); val = @r9 & $teb ^ @r10 ^ 0xC ;  /* This is a not closed comment }
$error$
$end$
1947
 if ($buffer & @r13 >> @r8 & (@r10) >> 0n2 | ($buffer) << @r13 >> @r11 | $teb & @rbx & @rbx != @r9 + @r9 << @r11 & 0x2 >> @r13 >> @r9 & $teb >> @r13 ^ 0y10001)  { test_statement(0xBEF); } else { test_statement(0x1121); }
$error$
$end$
1948
 if (0x0 + $proc << $buffer << @rax & @rdi << @rdx & @r9 >> @r13)@rsi + 1 << +$proc << 0xA >> @r9 << @rdi >> @r11 >> @r10 & 0x5 << @rbx & 0xE >> @r11 & $teb ^ @r8 & ~@r10 >> 0x2 | @rbx)  { test_statement(0x19B3);  break; } elsif ($proc >> +@rsp & -@rsi >> @rdi $proc << +@r13 >> @rdi ^ @r11 & +@rsp & $ip) { test_statement(0x1753); } elsif (($teb) >> $proc ^ @r12 0x9 >> @r13 ^ @r9 | @rsp & @r9 ^ +@r11 ^ @r8 | +@rbp ^ 4) { test_statement(0x1ACA);  for (val = 10; @rsp | @rbp))@rsp | @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rbx))0;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x14FE);  /* This is a not closed comment  // /* This is a comment  }
$error$
$end$
1949
 if ((@rbp) + @rbx << $buffer >> ~$thread >> @rbp ^ @rsi >> $thread & $proc >> +@rdi & -@rsp & @r11 ^ 0xB >> $thread & @r11 & @r13 ^ $ip | @r12 << @rbx))(@rbp) + @rbx << $buffer >> ~$thread >> @rbp ^ @rsi >> $thread & $proc >> +@rdi & -@rsp & @r11 ^ 0xB >> $thread & @r11 & @r13 ^ $ip | @r12 << @rbx)  { test_statement(0x34B); }
$error$
$end$
1950
 if (@r10 << @rbp << $thread ^ -@rax << @rdi ^ ($teb) & $thread ^ $proc & 0y1000 <> 15 + 0x0 << ~@rsi << $proc >> @r12 << @rbx & @r9)  { test_statement(0x110); ; } else { test_statement(0x2437); }
$error$
$end$
1951
 if ((@r11) >> @r9 >> +@r13 >> @r9 & @rdx << @r12 >> @rax | $proc & $teb & 6 & @rbx == (@r11) >> @r9 >> +@r13 >> @r9 & @rdx << @r12 >> @rax | $proc & $teb & 6 & @rbx)  { test_statement(0x12A3); } elsif ($teb << -@rbx | ~0x7 & $ip & $ip ^ @rbp ^ 0n18 | @rbx)$proc << @r8 | @rdx >> @r13 & 0y10011 & $thread ^ $ip & 0n14 ^ -12 ^ @r8) { test_statement(0x31E); @rax = 5 ;  /* This is a comment */  /* This is a not closed comment }
$error$
$end$
1952
 if ((12) & @r8 << @rdi >> @r13 & @rsi == @r11 + @rbp >> @r12 << @r13 >> @rbx >> 0y1111 & @rdi >> 0n13 ^ ~@rsi & $teb | (@r10) >> $thread ^ $proc & @rsi & $buffer ^ @rsi & @rax ^ 0xB ^ @rbp)  { test_statement(0x7C0); } elsif (@r9 & @rsp ^ @r8 >> @rsp & @rbp <= @r8 << @r8 >> @rax & $teb >> +@r12 & @r8) { test_statement(0xE8D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 ^ +@rbp ! @r11 ^ 0x8) ;  while  (@rax | @r11 != @rax | @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1953
 if (@r8 & @rdx & @rsi >> $ip | 0n7 << @rbp <= @r8 & @rdx & @rsi >> $ip | 0n7 << @rbp)  { test_statement(0x186D);  break; }
$error$
$end$
1954
 if ($teb + @r9 << 3 >> (@r9) >> +-(@rbx) & $thread << $thread >> @r9 @r9 ^ +@r9 << 0xE | @rsp << @r12 >> @rbx >> $ip & @r13 >> @rdx ^ @rbx & (-@r9) & @rdi)  { test_statement(0x129F); } elsif ((@r12) & 2 >> 0n16 & $ip | @rdi >> @rbp ^ $thread ^ ~@rdx ^ 0n13 @r8 << 0x7 & @rdx ^ @rsp & @rbp & @r9 | @rax & 1 & @r10 ^ @r11 & @r11) { test_statement(0x817);  This is a not opened comment */  for (val = 10; @rbx != @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1955
 if (@r12 << $proc & @r12 >> @rbx & ~@r11 ^ --@rsp << $buffer >> $buffer & +@rax >> -@rsi ^ @r13 >> @r9((-@rdi >> @r9 << @r13 >> @rax ^ @rsp & @rdi >> $proc & 21 & $buffer ^ @r12 & @rdi ^ $proc & @rsp)  { test_statement(0x6A); }
$error$
$end$
1956
 if ($thread >> $ip >> 0xD >> $proc & @r10 | $proc << ~@r10 >> @r13 & @r13 >> @rbp & ~$ip 0x4 + @rax & @r12 >> @rbx >> @r13 & @rdx >> 0n15 & @r8 ^ 0x1 | ~@r9)  { test_statement(0x1E4E); }
$error$
$end$
1957
 if (@r10 + @r8 << @r10 << @rdi & @r13 >> $thread >> @rsp & 0xD >> 0y10011 ^ @r11 >> @rbx ^ @rax >> ~0n16 ^ @r11 & $thread ^ @rdx ! (@r9) ^ 0n9 << +@r9 >> 0n12 >> @rdi & ~0xF & 0x8 & @r10 | @r11 << @rdi & @rbp ^ $teb >> $buffer)  { test_statement(0x1259); }
$error$
$end$
1958
 if (@r9 + @r10 << @rdi << @r10 & @r9 >> @r12 >> @rsi ^ @r9 << (@rsp) >> @r8 ^ $teb | @r9 & +@r12 & @rdi ^ @r8 & @rdi & @rax ; $thread << 0y1110 >> -0y1011 << @rax | @r11 << 2 ^ @r9 & +@rsi & @r10 ^ 0xA ^ +$proc)  { test_statement(0x241F);  break;  /* This is a comment */  while  (0y110 | ~$teb(@r9 | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 <> @r13) ;  // /* This is a comment  } else { test_statement(0x2278); }
$error$
$end$
1959
 if (-$thread >> @r11 << @rbp ^ @rsp & @r13 & +@r13 | @r11 ^ +$proc | @r8 & 0x12 | ~@r9 & @r8 ^ @rsp -$thread >> @r11 << @rbp ^ @rsp & @r13 & +@r13 | @r11 ^ +$proc | @r8 & 0x12 | ~@r9 & @r8 ^ @rsp)  { test_statement(0x467); } elsif ($teb << @rbx >> ~@r11 >> $proc ^ @rbp & -0y10001 & 0xA > $ip << ~@rsi) { test_statement(0x2062);  /* This is a comment */ } else { test_statement(0x195F); }
$error$
$end$
1960
 if (~@rsi + @r13 << 0x5 << 0xB > ~@rsi + @r13 << 0x5 << 0xB)  { test_statement(0xA23); } elsif (@rbx & @r12((@r11 >> @rbp | @r13 >> @rsp & @rax & @rbx | @rdx & @r13 ^ @r10 | @r8 ^ @rax) { test_statement(0x1528); }
$error$
$end$
1961
 if (($proc) + +@r8 << @r12 << @rsi >> @rbp << @rbx >> @rdi & ($proc) & @rbp >> $proc ^ $proc << 0y110 & ($ip) & ~@r11 ^ @rbp >> @r13 != $proc << 23 << $proc & 0n1 & 0y10011 & @r9 ^ @r11 >> @r10 >> 0n5 & @rbx)  { test_statement(0xF); ;  /* This is a not closed comment } elsif (-@rsp >> $ip & 0x13 >> @rdx & @rbp & @r8 ^ @rbx >> @rax & @r8 | @r13 | @r8 ; -@rsp >> $ip & 0x13 >> @rdx & @rbp & @r8 ^ @rbx >> @rax & @r8 | @r13 | @r8) { test_statement(0x13E0);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi ; @rbp ^ @r11 | ~0 | $ip) ; val = @r13 ^ $thread ;  if (@rbp > @r10)  { test_statement(0x16A6); } else { test_statement(0x1C04); }  if (@rsi($buffer)  { test_statement(0x1B3A); } } else { test_statement(0x1170); ;  while  ($ip == @r9 | @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1962
 if (@r8 + 0n15 >> (@r12) << @r9 >> @rax >> 0x8)~0x13 + @rbx << 0n6 & $buffer << $buffer >> @r11 >> @rsp & @rax >> @rsp | @r9 << $teb & @rbx >> @r9)  { test_statement(0x1DBF); } elsif (@r12 << 0y1010 & @rax >> @rdi & -$teb & @r10 ^ @rdi >> 0n6 ^ $thread & 0y10011 ^ $thread ^ @rdi = @rsi) { test_statement(0x26D0); ;  for (; @rdx | $buffer <> $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y10010($thread) ; } elsif (0xE >> $ip & @rbp & @r9 ; 0x4 >> ~$buffer ^ @r9 & 15 | @rbx & @r8 ^ (-~+@r11) ^ @rdi) { test_statement(0x4B); }
$error$
$end$
1963
 if (~0y1100 << @rdi >> 0n12 << -~@r13 & $ip << 0y1001 >> (@rdi) & $ip >> 0x13 <> @r8 << 0n5 << @r11)  { test_statement(0xA5F);  /* This is a comment */  /* This is a comment */  break; } elsif ((0x1) >> @rdx >> $buffer & @r11 >> 0x8 ^ @rax & -@r8 & 6 ^ @r12 | @r12 >> $teb (0x1) >> @rdx >> $buffer & @r11 >> 0x8 ^ @rax & -@r8 & 6 ^ @r12 | @r12 >> $teb) { test_statement(0x23C4); } else { test_statement(0x605);  /* This is a not closed comment }
$error$
$end$
1964
 if (@r9 << $buffer << @rsp ^ @r9 << -@r11 >> 13 >> ~+$ip & 23 & $thread & @rsp((@r9 << $buffer << @rsp ^ @r9 << -@r11 >> 13 >> ~+$ip & 23 & $thread & @rsp)  { test_statement(0x230F); } elsif (@r8 | +~$ip >> 17 ^ $ip != @rbp >> @rsp >> @rbx & $buffer & @r13 | @r9 >> @r10 | 0x5 & @r11 ^ 0x2 | $teb ^ 0n1 | 17 | +@r12) { test_statement(0x663); } elsif (@rax >> @r12 & ~$buffer & @r11 ^ 0n9 & $buffer ^ @rbp ^ $thread ; @r12 ^ @rbp ^ 0y111 ^ @rdi) { test_statement(0x392);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp == @r12) ; } elsif (@rsp > $teb & ($proc) ^ $proc ^ @rbx | @rbx) { test_statement(0x27);  break; } elsif (+@r12 ^ $thread | ~@rdx +@r12 ^ $thread | ~@rdx) { test_statement(0xE37);  if (@rdi > @rdi)  { test_statement(0x1A7F); } else { test_statement(0x1342); } } elsif (@r13 ; (@r12)) { test_statement(0x24C0);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc((@r13) ;  while  (@rdx >= @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1965
 if (~(@rbx) >> @r11 << @r11 >> 0x10 >> -(@r10) & $thread << @rdi & @rdi >> @rdi & ~0xC | @r8 | @rdi & 6 & 0n0 ^ 20 | @rsi ^ $teb >< @r9 << @r11 << @rbp | @r13 << 3 >> @r8 & (5) >> 0xE & @rax & (17) | @rbx ^ ~$buffer & @rsp ^ @rbp ^ @rdi | ~(@rsi) | 4 ^ @rbx)  { test_statement(0xCC5); } elsif (@rsp & $proc ^ @rsp | @rax >> @rsi != @rsp & $proc ^ @rsp | @rax >> @rsi) { test_statement(0x2294);  This is a not opened comment */ } elsif (+$buffer & $ip ^ $ip)+$buffer & $ip ^ $ip) { test_statement(0x911);  if (+0y11 = +@rbp | @rax)  { test_statement(0x1E3); } elsif (+~@r9 <= @r13) { test_statement(0x1984); } } elsif (@r8 < @r13 & @r12 ^ $thread ^ $buffer) { test_statement(0x14A3); } else { test_statement(0x2EA);  /* This is a comment */ }
$error$
$end$
1966
 if (~$ip + @r9 << ~@r10 <= @rsp ^ +~$proc ^ @rsp >> $thread | -$buffer ^ ~@r12 >> @rax & 0xE & +@rdx ^ @rdx & @r8 ^ $ip | @rsi >> (@rbp) & (@r11))  { test_statement(0xD28); } elsif (@r11 & $proc >> @rbx ^ @rax | 0y10001 >> ~$teb | @r9 > @r11 & $proc >> @rbx ^ @rax | 0y10001 >> ~$teb | @r9) { test_statement(0x1713); } else { test_statement(0x492); }
$error$
$end$
1967
 if (@rbp & @rbx & @r12 >> ~14 & @r12 & @r10 > @r9 + $buffer >> 1 | @r11 << (~@r9) ^ $ip ^ ~@r8 & 0xC ^ 0y100 | 20 & 21 & $buffer ^ @rdi | @rdx & $proc | -@rbp)  { test_statement(0x508); } elsif (@rsi << @rax & @r10 ^ $buffer | ~@r10 >> @rdx <= @rsi << @rax & @r10 ^ $buffer | ~@r10 >> @rdx) { test_statement(0x205F);  break; } elsif (0n5 & @r9 & @rdx ^ ~@rdi ^ (+1) ^ @rsp | $buffer ^ $teb ^ ~$ip | $teb($buffer | @rbp & $buffer ^ @rsp | @rdi) { test_statement(0x1AF7);  if (@r8)@r8)  { test_statement(0x24BC); }  break; } elsif (@r10 ^ $thread ^ $teb >< $ip ^ 0n3 ^ 0xA | @r13 ^ $buffer) { test_statement(0x18C1); } else { test_statement(0x22EB); }
$error$
$end$
1968
 if ($buffer + 1 ^ $ip & (@rsp) & @rdi & @rbx ^ @r12 >> @r8 & @rsp & 0y1011 ^ @r11 & @r9))@rsi + @r11 >> ($buffer) << @rdi >> @rdx & $proc << @rbx >> $teb >> @rdx & @rsi ^ @rdx)  { test_statement(0x1ADE); } else { test_statement(0x5);  while  (+0n6 | (@r10) | ~@r10 ; @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1969
 if (@r9 + 0x7 << $buffer << @rdi >> $proc << @r8 & @rsi & @r9 >> $buffer ^ 0n0 << $proc & @r9 >> -$ip | 0y100 & @r12 = @r9 + 0x7 << $buffer << @rdi >> $proc << @r8 & @rsi & @r9 >> $buffer ^ 0n0 << $proc & @r9 >> -$ip | 0y100 & @r12)  { test_statement(0x1A90);  while  ($proc = ~0xE & $proc ^ $buffer ^ @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  break;  // /* This is a comment  } elsif (0x9 & @r13 | @r9 >> 0y1000 & @r9 ^ @r13 & @rsi | @rbp & @rdx = 0x9 & @r13 | @r9 >> 0y1000 & @r9 ^ @r13 & @rsi | @rbp & @rdx) { test_statement(0x107B);  while  (@r8 <> @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (14 >> @r9 ^ $thread & +0xF | (0x4) ^ $buffer | ~@r10)14 >> @r9 ^ $thread & +0xF | (0x4) ^ $buffer | ~@r10) { test_statement(0x88B);  for (val = 10; @r9)@r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1970
 if (@rbx << $teb << @r9 >> @r12 ^ @r10 ^ @rdi >> @rdx & @r11 & @r9 ^ $thread ^ 0n7 = @r10 + ~$ip << $teb >> +$buffer << @r11 & 0y1110 << @r8 & @rdx & $teb ^ @rdi << @r10 >> 15 & @rax ^ -0y110 ^ @r10 ^ @rdi)  { test_statement(0x1365); } else { test_statement(0x234B); }
$error$
$end$
1971
 if ($thread + $proc >> @rbx >> $buffer >> $teb)@r8 + ~$ip & @r8 & $buffer >> @rax)  { test_statement(0x2689); } elsif (-$ip >> @r9 >> @rdi & @r8 ^ 0x13 >> 6 & $buffer & @rdx != -$ip >> @r9 >> @rdi & @r8 ^ 0x13 >> 6 & $buffer & @rdx) { test_statement(0x782);  while  ($buffer ^ @rdi ; $buffer ^ @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x688);  if (@rbp ^ @rbx | ~@rdx | @r9(($thread ^ +@r13)  { test_statement(0x1564); } elsif (@rbp | @r13 < @rbp | @r13) { test_statement(0x1A60); } else { test_statement(0x1B4B); } }
$error$
$end$
1972
 if (@r11 & $teb >> -~@r12 ; 0xE << @r10 << @rax >> @rdx << (@rax) >> @r11 >> (0x2) & 0y100 << $thread >> @rbp & (@r8) | 0y1 ^ @r13 ^ @rbx & -@rbp ^ @r9)  { test_statement(0x1B1C); } elsif (0n0 >> @r10 >> @r11 & @rax >> @r12 ^ @rbp & 0x11 ^ -5 & ~@rdi ^ $thread ^ @rbx != $thread << 0x4 & @r13 >> @rdi ^ ~$buffer & $ip ^ $buffer & @r13 ^ @r8 ^ -~23 | @r9 | 0y11) { test_statement(0x7D7); } elsif (-@r11 >> @rsi <= -@r11 >> @rsi) { test_statement(0x216E);  while  ($thread < @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rsi ;  for (val = 10; 0y1010 > @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 & @rbx | $thread <> @rbx & (@r8) | +0x13 | @rsi | @rsp) { test_statement(0x6F7); } elsif ($buffer > $buffer) { test_statement(0xDE1);  break; } elsif (@r11 = @rdi | $thread) { test_statement(0xACC); ; } elsif (0x4($buffer) { test_statement(0x848);  while  (@r9 < @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1C8B); }
$error$
$end$
1973
 if (@rax + @rbp >> @r12 << 4 | (@rax) << $buffer >> @r11 ; +$ip + ~@rbx >> @r10 & @r12 >> @rdx)  { test_statement(0x4EE);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx ^ @r13 | ~@r11)@rbx ^ @r13 | ~@r11) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ^ ~@r13 | 0x1 | @r10 ; @rdx ^ ~@r13 | 0x1 | @r10) ; } elsif (@r10 << (@rdx) | @rsi >> 0n11 ; $thread | @r8 & @r12 & -@rdx ^ @r11 & @rsi ^ $ip ^ 0x1) { test_statement(0x1175); } elsif (0n8 & 21 ^ 3 = 0n8 & 21 ^ 3) { test_statement(0x2070);  for (@rax = ~@rbp; 0n2 = @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp ^ @rsi ^ @r12 | @rax ^ (@rsi) | @rsi < @rdi ^ @r13) { test_statement(0x256B);  while  (@rsi > @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 12))@rbx) ;  /* This is a comment */ }
$error$
$end$
1974
 if ($teb | 0n6 >> @rdx >> 0y111 | 0n6 & @rbx & (~@r8) == $teb | 0n6 >> @rdx >> 0y111 | 0n6 & @rbx & (~@r8))  { test_statement(0x2491);  /* This is a comment */ } elsif (@rbx << 0xF >> -(@r10) >> $teb | @r12 >> 0n4)@rbx << 0xF >> -(@r10) >> $teb | @r12 >> 0n4) { test_statement(0x2673); } elsif ($proc >> $proc | ~$thread & @r11 ^ ~+0y1100 ^ @r11 >= $proc >> $proc | ~$thread & @r11 ^ ~+0y1100 ^ @r11) { test_statement(0x1C38);  while  ($ip | $thread > $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  if (@rsi != @rsi)  { test_statement(0x22C8); } elsif (0y10000 0y10000) { test_statement(0xCAE); } else { test_statement(0x18DB); } }
$error$
$end$
1975
 if ($buffer >> $buffer << @rbx & 0n16 << @r11 | $proc >> @rbp >> @rsp & $proc & ~(@r12) & @rbx | (@rdi) >> $thread & @rbp & 0x11 = +$teb + @rsi >> @r8 << +$ip | @rdi << 0n14 & @r8 & @rsp | ((13)) & @rsi & $thread ^ @rbx & $buffer | @rax ^ @r9 ^ $thread | @r10 | @r10 | @rdx)  { test_statement(0xB1E);  while  (@rax ^ @rdx ^ @r11)~@rsi | $buffer | -@rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
1976
 if (0y1111 >> @r12 << @rdx & $buffer << @rsi & 1 ^ $teb >> @rax == 0xC + @r10 << $proc << 0n2 >> 1 >> (@r10) ^ @rsp << @r10 >> @rdi & @rdx >> @rsp ^ @r11 >> @rsp & @r11 & (0n7) | $thread << @r10)  { test_statement(0xC8C);  for (val = 10; @rsi ! @rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer ^ @r9 0y10011 ^ @r9 | $ip | @r13) ; } elsif (@rax << 0x8 >> ($teb) >> +$buffer ^ ~@r12 & @r9 | ~$buffer >> @r10 | @r8 >< $teb << @rsp >> @r13 & 0n14) { test_statement(0x29E);  /* This is a comment */ } elsif (0y101 >> @r12 & @rdx | (@r13) ^ ~@rbx ^ @rbp < ~@r11 | (@rbx) & @rsi | @rdx ^ @rbp | 0y1101 | @rsi) { test_statement(0x79F); } else { test_statement(0x1A17); val = @r12 ^ (0n3) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 > 0y10000) ; }
$error$
$end$
1977
 if (@r10 + -$teb >> @r10 << @rdx >> 0n19 ^ @r9 << @rax >> 0y11(@rdx + @rsi << $thread << $ip >> -$proc << @rdx)  { test_statement(0x4E1); } else { test_statement(0x236);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ @r12 > $thread ^ @rax) ;  /* This is a not closed comment  for (@rax = $thread; @rsi != @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  This is a not opened comment */ }
$error$
$end$
1978
 if ($proc + @r13 & +$buffer ^ @r9 << 0y111 ^ @rbx >> @r13 & (@r9) | +@r9 << @r10 >> 0y11 >> @r10 == @r9 + @rax << @rax >> @rsi >> $thread >> @r11 & @r10 >> @rax & $proc & @rbx & @r12 ^ @r9 >> 0n17 >> 22 & 0y1011 >> 0x11 ^ @rsi & @rsp)  { test_statement(0x1A9E); } elsif (@rdi << $buffer & $buffer >> @rax ^ 14 & @rsp & +@rdi ^ 0n11 & @rdx | @rbp >> $buffer = $ip << ($thread) >> 0n11 >> @rax & @r13 ^ $proc >> @r10 ^ $buffer) { test_statement(0xFA3); } else { test_statement(0x1211); }
$error$
$end$
1979
 if (+@rbx + $ip >> $buffer << @rdi >> @rax >> @rsp(@rbx + $ip << @r11 << 0x7 >> @rdi << @r9 >> @rbp)  { test_statement(0x1DB7);  /* This is a comment */ } elsif (@rdi << -$buffer | 23 ^ $ip ! @rdi << -$buffer | 23 ^ $ip) { test_statement(0x21E4);  if ($thread ^ @r13 ; @r12 | $ip | @rsp)  { test_statement(0x668); } elsif ($buffer | 14 ; $buffer | 14) { test_statement(0x11C); } else { test_statement(0x1331); }  if (@r8 ; @r8)  { test_statement(0x254A); } elsif (@rsp)@r8) { test_statement(0x539); } } elsif ($thread >> $buffer ^ @r11 <> $buffer >> @r13 ^ $teb & ~@r11 ^ 0x5) { test_statement(0xFB5); ;  // /* This is a comment  val = @rbp ;  if (0n14(0n14)  { test_statement(0xA8E); }  while  ($thread)@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1980
 if ($proc + @rdi << $thread >> $proc >> @r13 >= $proc + @rdi << $thread >> $proc >> @r13)  { test_statement(0x20D2); } elsif (@rsi >> $ip >> $buffer & @rbx ^ 13 >> @rbp ^ (~@rbp) ^ @rsi | @rdx & $proc & ~-$buffer ^ $proc & $thread((@r10 & @rdi >> @rbp & +~@r13 ^ @r8 & @rbx & @rdi ^ $buffer & $proc ^ @r8 ^ 0xF | @r12 ^ @r10 ^ @rbp ^ +(@rdx)) { test_statement(0x2380);  // /* This is a comment  }
$error$
$end$
1981
 if (~@rsi + @r8 >> ((@r9)) >> @rax & @rdi >> @r11 >> @rsi ^ +@rbp & @rbx & ~@r10 | 11 << @r9 >> $thread ^ @rbx >> 3 & ~0n6 ! ~@rsi + @r8 >> ((@r9)) >> @rax & @rdi >> @r11 >> @rsi ^ +@rbp & @rbx & ~@r10 | 11 << @r9 >> $thread ^ @rbx >> 3 & ~0n6)  { test_statement(0xC7F); } elsif (@rdx >> @r11 & $ip & 0n11 & @rdi(@rdx >> @r11 & $ip & 0n11 & @rdi) { test_statement(0xC2); } elsif (@rax >> @rsp & ~@r11 ^ $thread & 0y1000 ^ $ip ^ @rbp | +0y10011 & $ip ^ @rdx ^ @rax | 0y10000 ^ $teb | $thread | 0x1 >= @r8 | $thread & 0n10 ^ @r8 ^ -$thread | ~$ip ^ @r8) { test_statement(0x274);  /* This is a not closed comment } else { test_statement(0xFF6);  while  (@r10 ^ 3 | $teb | -4))@r10 ^ 3 | $teb | -4)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1982
 if (@r10 & $teb << @rbx | @r11 >> (@rsi) & @rax & @rdi & (17) ^ @r11 & @r13 & 0y0 ^ @rbp & @rax ^ @r9 ^ $ip | @rax & @r10 ^ @r11 & @r12 ^ @rax ^ $buffer | $ip & 0x5 | (@rbp))$thread + $ip >> (-0y1))  { test_statement(0x1F4B); } else { test_statement(0x1651); @rax = $ip & $thread | @rdi ^ +@rsi ; }
$error$
$end$
1983
 if ((13) >> @r10 << @r9 >> @rsi ^ ~@r12 << @rdx ^ $teb & 0n15 ^ @rax & $teb))@r12 + @r9 << @r13 | @rsi << @rsp ^ @r13 >> $buffer ^ @r10 & $teb | @rbx >> 0x0)  { test_statement(0x26A7); } elsif (@rsi >> @rbp ^ ($ip) & @rdx | @r8 >> @r12 ^ ~(@r13) & (@r9) ^ $teb ^ ((@rsp)) | $buffer & 0n17 ^ @rsp ^ $proc | $proc <= $teb << @r12 & @rbp >> $proc & @rax ^ @rax >> ~@r8 ^ $thread & $thread) { test_statement(0x68A); } else { test_statement(0x1A55); ; }
$error$
$end$
1984
 if ($proc + @r12 ^ @rbp & @r10 >> $buffer & @rdx & @r10 <= @r11 + @r10 << @rdx)  { test_statement(0x143);  break; } elsif (@rdi << @rbp >> @r10 >> @rdi & $teb & @rdi ^ 0n18 >> @r9 ^ @r11 & +$ip = @rdi << @rbp >> @r10 >> @rdi & $teb & @rdi ^ 0n18 >> @r9 ^ @r11 & +$ip) { test_statement(0x2001);  break;  /* This is a not closed comment } elsif (@r11 & $ip & $buffer | @rbx >= @r11 & $ip & $buffer | @rbx) { test_statement(0x1F77); }
$error$
$end$
1985
 if (@rdi + @r13 << $buffer << @rbx & $buffer >> @r8 & @rdx ^ @rax << (0y1011) >> (0y10000) >> $thread ^ @r10 >> -@rbp & @r8 & @r10 ^ @r12 & ((@r12)) > @r9 + $buffer << $ip << $buffer)  { test_statement(0x177A);  /* This is a not closed comment  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp)@rsp) ;  This is a not opened comment */ } elsif (0x4 >> 0x13 & ~0x8 >> +0n0 & @r8 & 0n19 ^ @rdi & 0n8 ^ $proc ^ @r12 | @r11 >> @rbp | @r8 & 0y1000 ^ 0y1011 ^ $teb | 0x9 = 0x4 >> 0x13 & ~0x8 >> +0n0 & @r8 & 0n19 ^ @rdi & 0n8 ^ $proc ^ @r12 | @r11 >> @rbp | @r8 & 0y1000 ^ 0y1011 ^ $teb | 0x9) { test_statement(0x2209);  while  (0x5 >= $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; +~@r12))+~@r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1986
 if ($proc << @r10(@r11 | 12 << @rbp)  { test_statement(0x2082); } elsif (0y10000 >> @rbp >> 0y1111 | -22 & @rdx & @rsp(@rsi << $buffer ^ 0n15 >> @rsi) { test_statement(0x12C5); } elsif (@r8 & @r11 ; @rsp >> @rbp & @rbp) { test_statement(0x254D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 | ~@r8 < $teb | ~@rsi) ; }
$error$
$end$
1987
 if ($proc >> $proc >> @rbx & -@rax << @r13 >> 0y10000 ^ -@rbx >> 0x1 >> $teb & @rdi & @r11 & 0n5(($proc >> $proc >> @rbx & -@rax << @r13 >> 0y10000 ^ -@rbx >> 0x1 >> $teb & @rdi & @r11 & 0n5)  { test_statement(0x16F4); } else { test_statement(0x4F2); }
$error$
$end$
1988
 if ($teb >> @rdi >> $thread & @r8 << $proc ^ +@rdi >< $teb >> @rdi >> $thread & @r8 << $proc ^ +@rdi)  { test_statement(0xF1E);  if (0y1100 & @rax ^ @r10 | @r12 | @rsp | +$teb < (@rdi) & -@r11 | 0n19 | @r10)  { test_statement(0xF8E); }  if (@r12 ^ +$teb ; ~@rbp)  { test_statement(0xA89); } else { test_statement(0x4FE); } } elsif (@r10 << 0y10 >> @rdx | 16 >> ($teb) ^ (@rax) & @r10 ^ $ip ^ $thread >< @r9 << ~+@rsi >> (@rsi) >> @r11 & 5 ^ 0n5 & ~@rdx & @r9) { test_statement(0x107); } elsif ($teb & @r11 ^ @rbp ^ @r10 == $teb & @r11 ^ @rbp ^ @r10) { test_statement(0x22B2);  while  (0x0)0y1001 | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x1038); }
$error$
$end$
1989
 if (@r12 + $buffer << $proc << $proc >> ~@rbp >> @r9 & $buffer & @rdi & $teb | 0n9 >> @rbx & @rdi ^ @rax & @rdx & @rdx | @rdx & $thread | -@rbp & @rsi | @rsi ^ @rsp != ($buffer) + ~0y10001 << @r13 >> @rbp << @r10 & 0x1 << @rdx & ~@rdx >> @rsp ^ @rbx)  { test_statement(0xFDF); } elsif (@r12 | @r9 >> @rax | @rdi & 3 | @r12 ^ 21 == $buffer & @r10 & $ip & +@r13 ^ @r12) { test_statement(0x171D); }
$error$
$end$
1990
 if (~@r11 & $buffer << @rsi >> 0n16 & @r12 & @r10(+$thread << @r8 << 0n8 & @r12 << @rsp >> 0n15 >> @r12 & $thread)  { test_statement(0x3AD); } elsif (0xF >> @r9 >> $proc & @r11 >> $buffer ^ @rbx & 0y1 & @rdi | @rbp & -@r11 != 0y1100 << $thread ^ $buffer >> $ip & @r9 ^ @r8 & @rdx ^ @rdx) { test_statement(0x2566); ;  if (@rdi)@rdi)  { test_statement(0x1D86); } else { test_statement(0x1C1); }  /* This is a not closed comment  break; } elsif (@rbx >> $buffer ^ @r10 & -@r8))@rbx >> $buffer ^ @r10 & -@r8) { test_statement(0xFC6); } else { test_statement(0x142A);  if (@r11((14 ^ @r13)  { test_statement(0x1FEB); } else { test_statement(0x10B8); } }
$error$
$end$
1991
 if (0n19 + @rsp << @r10 >> +$thread >> @rbp >> $ip | @rdx << 0n15 & ~@rsi >> @rsi | @rbx >> $proc == @r8 + 0y10010 << @r11 << @rax | @r10 << (@r8) >> $proc & @rax >> -@rsi & 0x5 ^ 0xA >> -@rbx | $buffer & $thread & -@r9 ^ @rax ^ 0n14)  { test_statement(0x1679); } else { test_statement(0x1A1B);  break; }
$error$
$end$
1992
 if (@rsi + $thread >= 0y1011 << +$teb >> $ip >> 2 >> 0y1000 & 0n4 & 0n7 & $buffer)  { test_statement(0x256E); @rax = 0x0 >> @rbx & 0n0 & @r8 ;  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer | $buffer > $buffer | $buffer) ;  /* This is a not closed comment  for (val = 10; @rdx ~@r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  This is a not opened comment */  if (4 ! 4)  { test_statement(0x1C3); } } elsif (@rdi << @r12 & @r10 & $thread ^ $ip >> @rsp ^ @rax & $thread ; @r8 & @rsp) { test_statement(0x2DA); ; } else { test_statement(0x1C49);  // /* This is a comment  }
$error$
$end$
1993
 if (@rax & 0n1 & $teb >> @r11 & $proc & ~($proc) ^ @r9 << @rbp ; @r12 << 0n13 << @rsi | @r13 >> (@r12))  { test_statement(0x122B); } else { test_statement(0x1632);  while  (@rbx ^ @rax(+@rsp | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
1994
 if (0n14 + 0x11 << 0n1 << $buffer > @r13 + 17 >> @rsi & @rbp & @rbp & $buffer)  { test_statement(0x311);  // /* This is a comment   if (-(0n0) ^ @rdx >= ~$ip ^ $thread)  { test_statement(0x1A81); } elsif (@r13 | @rdi = @r13 | @rdi) { test_statement(0x1203); }  if (@r13))@r9)  { test_statement(0x1D71); } } elsif (@r11 << @r13 >> @r12 >> 0y1011 & $buffer >> 0n13 ^ 0y10000 & 0x7 ^ @rdx & ($buffer) ; @r11 << $ip & @r9 >> @r12 | 0n8 >> +10) { test_statement(0x156F);  /* This is a comment */ } elsif (@r11 >> @rbp & -$proc & $thread ^ @rsp > $buffer >> 0x13 & @rsi | 17) { test_statement(0x1711);  This is a not opened comment */ }
$error$
$end$
1995
 if (-@rdx + @r11 & @rbx << @rsi >> @r13 >> $thread & @rax <= -@rdx + @r11 & @rbx << @rsi >> @r13 >> $thread & @rax)  { test_statement(0xB80); } else { test_statement(0x24B4); ; }
$error$
$end$
1996
 if (0n17 >> $ip << @rbx & -$teb << @r8 >> @r11 >> ~@rbx & @rsp ^ $teb & @rsi != @r10 ^ @rbp << -0n18 >> @rbp | @r12 << @rbp >> @rax >> $thread & 0n16 ^ $ip & 0n16 & @rsp ^ @r13 & $proc)  { test_statement(0xE33); } elsif (@r9 >> @r12 & $buffer ^ +@rbp ^ @rbx & @rsi > @r9 >> @r12 & $buffer ^ +@rbp ^ @rbx & @rsi) { test_statement(0xEA8); } else { test_statement(0x48F); }
$error$
$end$
1997
 if (@r11 + @rax << @rax << @r9 & 0n15 << @rbx >> 0y1011 >> @rsp & 5 >> @rdx & @r8 & @r9 ^ @r9 >> @rsi >> $thread & $teb >> 21 ^ +0y1001 >> @r13 & 20 & @rsp | 0y10 & @r10 >> $teb ^ @rbx >> $thread & 0n8 ^ @rbp & @r12 ^ @r9 ^ @rax))$thread << $thread << +$ip >> 0x6 >> 16 & $proc >> @r13 & @r12 & @rbp & @r9 ^ @rdx >> @rax ^ (@r10))  { test_statement(0x1AFC);  break; val = @r10 ^ @rbp ^ $proc | @rdx ; } elsif (0y0 << @r13 >> 15 & $teb ^ 0y111 >= 0y0 << @r13 >> 15 & $teb ^ 0y111) { test_statement(0xFAF); }
$error$
$end$
1998
 if (@rdx + $teb << $buffer << $teb & 0 >> @r9 & @rbx & 0n11 | @r9 | $ip >> $buffer > @rsp + (0y100) | +0 << @r8 >> 0x13 & @r13 & @rbp & @rdi)  { test_statement(0x1C0);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ^ 0n19 > ~@r10 & $proc | @rdi ^ $teb | @rsp) ;  while  (0y10011 ^ (@r8) <= @rax | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rbx ^ @r8 | $ip | $thread ; ; ;  if (@rax < @rax)  { test_statement(0x1540); } } elsif (@r8 << $thread >> @r11 >> $ip & @r12 >> 0y1011 | @r11 >> 17 ^ 0y1111 > +$teb & 0x10 >> @r8 & @r10 & @rbx ^ @rdx >> @rbx & @r11 & 0x9 | @r12 >> @r10 & @rsi & 0xC ^ @rbx) { test_statement(0x1400);  /* This is a comment */ } elsif (@rax ^ -(@r11) & 0n11 | @r11 | @rdx)7 >> @r9) { test_statement(0x9B7);  /* This is a not closed comment } elsif (@rsp & @rsi ^ $thread ^ 0xD >= @rsp & @rsi ^ $thread ^ 0xD) { test_statement(0xDBD);  /* This is a comment */  while  (@r12 == @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y111 ^ @r10 | $thread | $ip >= 0y111 ^ @r10 | $thread | $ip) { test_statement(0x1711); } elsif (14 -@r8) { test_statement(0x1811);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 23(@r11) ; }
$error$
$end$
1999
 if (0n0 + ~@rax | @rbp >> @r11 >> -@rbp & 17 & $ip | @rsi & $proc & $teb ^ 0x3 & @r12 ^ $proc ^ $buffer >< @rbp << @r9 >> $thread << 0n8 >> @r9 >> @r11 & 0x1 << $proc & $buffer ^ $teb & @r10 | @r12 << $thread >> @r9)  { test_statement(0x3C9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x13 ^ @r13 ^ @r12 | @r10 ^ $thread | (0n15) | 0xB != 0x13 ^ @r13 ^ @r12 | @r10 ^ $thread | (0n15) | 0xB) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@rsi > @r11 | @rbx) ; } elsif (0y10010 << 0x12 & @rbp > 0y10010 << 0x12 & @rbp) { test_statement(0x1A93);  if (@r8 ^ @r10 < @r8 ^ @r10)  { test_statement(0x1C11); } elsif (@r8 != $teb | @r11) { test_statement(0x13FA); } elsif (-@r10 = ~$proc) { test_statement(0x1D1); }  // /* This is a comment   if (@rbp <> @rbp)  { test_statement(0xA59); } else { test_statement(0x1A59); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~+@r11 > 11) ; }
$error$
$end$
2000
 if (@r8 + 0n3 << 0y0 ^ 6 << @r10 & $teb ^ $thread >> -$buffer & @r11 & @r11(($teb + @rbp << (~@rdx) | @rbx >> @r11 >> $proc)  { test_statement(0x1CFB); @rax = @rdi ^ (@r13) & $teb ;  while  (15 = 15)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x12 << ($thread) >> 0n5 | @r10 & @rsi | 0xE ^ @rdx <> 0y1011 << @r10 >> (~+@rsi) >> $teb & -@r13 ^ @r11) { test_statement(0x174F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 | @r12 | $buffer)@r8 | @r12 | $buffer) ; } elsif (0y1100 ^ @rsi & @r11 ^ ~@r11 ^ @r9 >= 0y1100 ^ @rsi & @r11 ^ ~@r11 ^ @r9) { test_statement(0x1EB); }
$error$
$end$
2001
 if (@r11 >> @r13 ^ $buffer | @r11 << -(@r9) | @r9 ^ @r10 ^ @rsp ^ @rbx | 0n0 | ~@rbx ^ @rsp | @rbp ; @rbx + @rbp & @rdx & @rbx | 0n10 << 0y11)  { test_statement(0x1751);  /* This is a not closed comment } else { test_statement(0x1DFC);  break;  This is a not opened comment */ }
$error$
$end$
2002
 if (@rbx << @rsi ^ $ip >> $thread >> $thread & +$buffer >> $proc | @r8 >> (~$proc) >> (16)((((@r10)) & 0y110 | @rsi << @r8 >> @rsp ^ @r9 >> $ip & @rax ^ $ip)  { test_statement(0x1B6B); } else { test_statement(0x2134);  /* This is a comment */  This is a not opened comment */  // /* This is a comment   while  (0y1111 != -~$teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  while  (@rdx < $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rbp ; }
$error$
$end$
2003
 if ($buffer + @r10 << @rbx << ($thread) ^ ~-0y10000 << 0x12 >> (@rdx) ^ 0y110 >> @r12 | $teb << 0n6 >> $thread | 0x3 >> @rsi & @r9 ^ @r11 ^ @rbx ^ 0y111 >< $buffer + @r10 << @rbx << ($thread) ^ ~-0y10000 << 0x12 >> (@rdx) ^ 0y110 >> @r12 | $teb << 0n6 >> $thread | 0x3 >> @rsi & @r9 ^ @r11 ^ @rbx ^ 0y111)  { test_statement(0x24CB); }
$error$
$end$
2004
 if ($teb << @rsp << @rbp & @rsp << -@r8 >> @rsi & @r11 >> @rdi & $thread | +@r8 << @r9 >> $ip | @r11 $teb << @rsp << @rbp & @rsp << -@r8 >> @rsi & @r11 >> @rdi & $thread | +@r8 << @r9 >> $ip | @r11)  { test_statement(0x18E6); } elsif (@rax << @rbp >> -@r10 & $thread & 0x5 | $thread ! $buffer << $thread >> @r9 & @r11 >> @rbx ^ @r8 ^ $teb & @rbx | @r8 >> $proc & $thread) { test_statement(0x22CD);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@r10(-@r10) ; } elsif (@rsp >> $teb & $buffer & 0y10 >< @rsp >> $teb & $buffer & 0y10) { test_statement(0xAF6); } elsif (($buffer) ^ @r13 ^ @rsp | 17 != +@rdi ^ 0xB ^ 3) { test_statement(0xF6E); } else { test_statement(0x14DB); }
$error$
$end$
2005
 if ((@rsp) + $buffer ^ 0x7 ^ @rdi >> -@r9((@rsp) + $buffer ^ 0x7 ^ @rdi >> -@r9)  { test_statement(0x2294); } else { test_statement(0x401);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi | 0y101))@r9 ^ 0n9) ; }
$error$
$end$
2006
 if (@r12 + @r13 << 0x10 | $buffer >> $thread >> @r13))@r11 & @rdx << @rbp >> @r11 >> +$ip ^ @r11 << -@rsi >> @r10 ^ @rdi >> -0n19 & 0x13 | $buffer << -@rsp >> 0xD ^ @rax & @rdx & $proc)  { test_statement(0x3A9); @rax = $teb ^ $proc ; } elsif (@r11 << @r10(@r11 << @r10) { test_statement(0x9BD);  // /* This is a comment   // /* This is a comment  } elsif ($buffer = $buffer) { test_statement(0x5F2); } elsif ($buffer & @r10 @rdi & +@rbx) { test_statement(0x959);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread != $ip) ;  // /* This is a comment  } elsif (@r10 ^ @rsi != @r10 ^ @rsi) { test_statement(0x1810); }
$error$
$end$
2007
 if ($ip + (0y100) << @r13 >> @r12 << @rdi >> @rdx >> @rbp ^ $buffer << @r12 & @r11 ^ @r13 >> @r9 & 0n17 ^ (@r8) | @r9 >> @rdx >> @r9 & $ip))@rdi + @r12 << $ip << @rbp >> +0xE)  { test_statement(0x6A5); } elsif (@r12 | $teb >> ++--$teb ! @r12 | $teb >> ++--$teb) { test_statement(0x1918); } elsif (0y1111 >> --@r12 ^ @rbx | 0x9 & 0y1111 ^ @rsi ^ 0x7 | $thread | -@rdi = 0y1111 >> --@r12 ^ @rbx | 0x9 & 0y1111 ^ @rsi ^ 0x7 | $thread | -@rdi) { test_statement(0x1027);  for (val = 10; $buffer > @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread & @r12 ! $thread & @r12) { test_statement(0x340); }
$error$
$end$
2008
 if (0x2 + @r11 << @rbp == 0x2 + @r11 << @rbp)  { test_statement(0x24F9); } else { test_statement(0x120C);  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
2009
 if (@r10 + 0n11 << 0y10010 << @rax & 3 << $buffer & @r13 >> $ip | (@rax) << @rax >> +$thread & $teb ^ @rax))@r10 + 0n11 << 0y10010 << @rax & 3 << $buffer & @r13 >> $ip | (@rax) << @rax >> +$thread & $teb ^ @rax)  { test_statement(0x1223);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y101 ^ @r12 ! ~@r11 ^ @r12 ^ @rsi) ; ; }
$error$
$end$
2010
 if (@rax + 22 >> @r10 | 0y10010 << @rsp >> @rbp >> @rbx ^ ~@r9 & -@r9 ^ (@r13))@r13 + (@r11) << @rdi << @r12 >> +@rdi << 15 ^ ~($buffer) << ~@rbp)  { test_statement(0x8E7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 & @rbp ^ $buffer ^ @rbx))@r13 & +@r13 | @rax ^ @rdx | -@r9 | 0y1000) ; }
$error$
$end$
2011
 if ((@r13) + -(-0xE) << ~@rdx << ~@rsi ^ @r10 << 0n18 >> @rsi & @r9 >> @r10 ^ @rbx >> @r10 & @rbx != 0x2 + @r9 << @r13 << 0y1000 & @r9 | 0xA | 0xA ^ @rbx & @rdi)  { test_statement(0xEC);  for (val = 10; @rbx & @rbp)@rbx & @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n10 << +0n3 | 0y1110 ! 0n10 << +0n3 | 0y1110) { test_statement(0x21E1); @rax = @r13 ^ -@r11 ^ -@rdi | 0xE ; } elsif (+@r8 ^ @rsp & @rbx ^ 0n17 == @r8 >> 0y10011 & 0xC) { test_statement(0x14F1); }
$error$
$end$
2012
 if ($proc >> $proc << $thread & @r8 << $buffer >> @r9 | ~@r8 << (@r10) >> $proc & 0x12 & @rdi & @r13 ^ $teb & $thread & (@rsi) ^ $ip & -~@rdx ^ @r10($proc >> $proc << $thread & @r8 << $buffer >> @r9 | ~@r8 << (@r10) >> $proc & 0x12 & @rdi & @r13 ^ $teb & $thread & (@rsi) ^ $ip & -~@rdx ^ @r10)  { test_statement(0x1024); } elsif (6 << @rdi >> 7 & @rsp & (@r10) & ($thread) ^ ~0n13 & 0x0 | (@r9) & @rbp != @r13 << @r11 | $thread) { test_statement(0x173); } else { test_statement(0x1C94); }
$error$
$end$
2013
 if ($proc << @r10 << @r10 & ~-+$proc >> (@r8) & $thread & @rsp ^ @r11)$proc << @r10 << @r10 & ~-+$proc >> (@r8) & $thread & @rsp ^ @r11)  { test_statement(0x2009);  if (@r8(@r8)  { test_statement(0x1536); } else { test_statement(0x523); } } else { test_statement(0xFF8);  while  ($buffer <> $ip ^ @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2014
 if (0y11 + @rbx >> 0xE ^ @r12 << 0n4 > 0y11 + @rbx >> 0xE ^ @r12 << 0n4)  { test_statement(0x1E2D); } else { test_statement(0x9DE); }
$error$
$end$
2015
 if (@r10 + @rbp >> 0y1100 >> 0n11 >> ~@rbx & ~@r13 | @r11 & @rsp >> @rbp | $proc | $ip | 0y110 ^ @rbp | @rdx)@r13 + @rbp ^ @r10 << @r9 & ~$buffer & $proc & 0x10 ^ 0y10001 & $ip & @rbp)  { test_statement(0x96); } elsif (+@r13 >> @rsp ^ 12 & $teb & $ip ^ @rax ^ @rsi)@rsp << 0n2 >> @r8 ^ @rdx | @rsp & $teb & 0n14 | @rsi & @rsi) { test_statement(0x267); } elsif (@r8)0y1 & @r13 | $teb & $thread ^ @r13 ^ $ip) { test_statement(0x1C71); } elsif ($teb != @rax) { test_statement(0x2063); val = 0y1001 ;  /* This is a comment */ }
$error$
$end$
2016
 if (@r9 + ~@rsi & $buffer & $buffer >< @r9 + ~@rsi & $buffer & $buffer)  { test_statement(0x15D2); } else { test_statement(0x1999);  This is a not opened comment */ }
$error$
$end$
2017
 if (-@r10 >= @r12 + (0n13) ^ 0x0 >> $ip >> @rdx & ~@rdi & 12 & @rdx)  { test_statement(0x414); ; } else { test_statement(0x224F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ^ $thread | $proc | $teb ; @rdi ^ @r11 | $ip) ; }
$error$
$end$
2018
 if (@rbp >> @rsp & 0y1001 ^ -@rdi ^ @rbx & @rbx <> @rdi + $proc >> @rdi << @r13 & @rbx << @r13)  { test_statement(0x228D); val = 0y10000 ^ @rsp & @rsi ^ $thread ^ $ip ; }
$error$
$end$
2019
 if ($thread << 0n14 << $proc & @r13 >> @rdx >> 0y1011 ^ @rbp << @rdi >> @r9 >> -@rsi ! 0x12 + @rbx << @r9 >> 17 << @rdx & 0n5 >> @r10 >> @r13 & -@rbp >> +@rsp & $ip & $ip)  { test_statement(0xBD0); } else { test_statement(0x24FF);  for (val = 10; @rax ^ $proc == @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  if (--$buffer > --$buffer)  { test_statement(0x715); } elsif (@rsi($proc) { test_statement(0x1A5); } elsif (@r12 == @r12) { test_statement(0x7DE); } else { test_statement(0x835); }  for (@rax = @rdx; @r11 ! @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2020
 if (@rsp + $proc >> 0x6 << $buffer >> $thread | @r12 << @rdi & @rbp >> @r8 | @rbx & @rsi ^ @rbx & $ip <= (@r11) << -$buffer >> @rsp & @rbp >> @r9 >> -0x1 | @rsi << $buffer | @r12 >> @r11 ^ @rdx & 14 ^ 0x7)  { test_statement(0xD65); } else { test_statement(0x110A);  /* This is a comment */  /* This is a not closed comment  /* This is a not closed comment }
$error$
$end$
2021
 if (@rbx + -@r13 & @r13 >> @rsp >> +$ip | -@r9 >> (0n17) | 0n19 >> @rbx | $teb & @rsp ^ $buffer | ~2 ^ @rsp))-$proc >> @r13 << @r8 >> @r8 & @r9 >> 0n8 >> @r8 & @r10 & (@rdi))  { test_statement(0x1596); } else { test_statement(0x1CE9); }
$error$
$end$
2022
 if (@rsp >> $thread >> @rdx ^ $teb << @rdi >> +0xA & +@r8 >> +$ip ^ +~@rsi & 0y100 & (~@rbp) ; @r9 << @rax & @r9 >> $ip >> @r9 | @r9 ^ @r9 >> @r9 & @rbx & 0x8 ^ @rsi ^ @r12 | 0x3 | @r10)  { test_statement(0x26C2);  while  (@rbx & ~0n1 | @r13 < $proc & @rdi ^ $ip ^ 0y1100 | (@rdi) | 12 | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xB5); }
$error$
$end$
2023
 if (@r9 << @r12 << @r11 | @rsi >> @r8 >> @rsp | @rsp >< @r9 << @r12 << @r11 | @rsi >> @r8 >> @rsp | @rsp)  { test_statement(0x2670);  while  (@r13 ^ @r12 >< +@rbx & @rax | +~@r10 ^ @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; 0n19 ^ +@rsp ; @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 << $buffer & +@rsp >> $teb | @r12 & 0y111 <= @r10 & +@r11 >> 3 | $ip & @rdx ^ @r13 ^ +0y110 ^ @r11 | +7) { test_statement(0x1476);  break; } elsif (14 >> @rbp & $thread & @r11 ^ 0x8 | 0n9 & $ip ^ $buffer ; 14 >> @rbp & $thread & @r11 ^ 0x8 | 0n9 & $ip ^ $buffer) { test_statement(0x13B7); } elsif ($buffer & @rsi ^ $proc | @rax ^ @r11 | -@rbx | ($proc))$buffer & @rsi ^ $proc | @rax ^ @r11 | -@rbx | ($proc)) { test_statement(0x1C4F); } else { test_statement(0x216C);  /* This is a not closed comment ;  for (; 10 < 10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2024
 if ($thread + @rbp << @r10 << @r10 ^ @r9 & 0y1111 ^ @rsi ^ $proc | @r13 << @rbx >> 4 ^ 0y10011 ^ @rbx ^ @rbp ^ $buffer < @rdi + $buffer & 15 | $teb & $proc >> @r9)  { test_statement(0x2495); ; ; }
$error$
$end$
2025
 if (($ip) << $proc << $teb >> $ip << @rdx >> @r9 & @r8 << -~16 & @r8 >> -0n18 & @rbx ^ -15 ^ @rsp & @r10 ^ $ip ^ @rax | @rsp << @rax ^ @r9 >> @rax ^ @rbp & @r8 ! ($ip) << $proc << $teb >> $ip << @rdx >> @r9 & @r8 << -~16 & @r8 >> -0n18 & @rbx ^ -15 ^ @rsp & @r10 ^ $ip ^ @rax | @rsp << @rax ^ @r9 >> @rax ^ @rbp & @r8)  { test_statement(0x237B);  break; } elsif ((@r10) >> 0n6 & +0n13 >> 0y1000 ^ @r13 & ~@r13 & @rsp((0xC >> @rsi >> $ip & @rdi >> (22) ^ @r10 ^ 7 | @rdi >> $buffer & 0x9 & @r8 ^ (@rbx) ^ @rsp) { test_statement(0x1D1); } elsif ($proc >> $proc < @r10 | 0y1000 ^ $buffer) { test_statement(0x8D0); } else { test_statement(0x17AC); }
$error$
$end$
2026
 if ($buffer + (+@rdx) << @rsi << @r11 | @rbx ^ $ip & @r12 ^ @rdi ^ @rdi ^ @rdx <= @r11 + @rbp >> @rsp << ($ip) >> @rbp >> @rsi & @rbp >> ($teb) | $thread & $buffer >> 0x5 ^ (@r9) ^ @r10 ^ @rdi ^ +@rdx)  { test_statement(0x25B1); } else { test_statement(0x1ABE); }
$error$
$end$
2027
 if (+@rbp + @rbp << 0y1010 >> -$thread << @r12 & $thread << @rsp >> $teb ^ 0xA <> $proc + @rsp << @rbp << +2 & @r11 << @rsi >> @r8 >> @rdi ^ 0y110 ^ 0y111 & @rsp & @rdi)  { test_statement(0x1EFA); } elsif (0n4 << 0y1001 >> $thread & $ip & @r10 | @r13 >> 0n7 & $proc ^ $buffer & $teb | -@rsi & @r13 ^ $teb ^ ~@r13 | $proc | 0x8 < 0n4 << 0y1001 >> $thread & $ip & @r10 | @r13 >> 0n7 & $proc ^ $buffer & $teb | -@rsi & @r13 ^ $teb ^ ~@r13 | $proc | 0x8) { test_statement(0x1A91);  for (val = 10; @rsp | (@rax) < @rbx | (@rax);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2028
 if (@r13 >> @r8 >> 0y1 >> @r11 & @rdi ^ @rbx << @rbx ^ ~@r11 >> ~--$teb ^ @rax ^ @rdi <= @r8 << $ip & ~@r9 >> @rax & @rdx & @r13 & $thread ^ 17 >> @rax >> @rsi ^ @r12 & @rdi & @rsi ^ @rsp & $ip)  { test_statement(0x1285); }
$error$
$end$
2029
 if (@rdx + 4 << $thread & @rdx << $ip ! @rdx + 4 << $thread & @rdx << $ip)  { test_statement(0x1FB7); } elsif (1 << @r12 & @r11 & @r11 | @rbp >> @rdx & @r12 ^ 0x12 & (~@r8) ; @rsp >> -@rsi >> @r9 ^ 17 & $thread) { test_statement(0x270F); ;  /* This is a comment */ } elsif ($buffer >> $ip <= @rdx & @r11 ^ @rdi ^ $thread | $teb | @rsi) { test_statement(0x906); } elsif (@rsi & -@rbp <= +$thread | $thread ^ $buffer | $proc | @r12) { test_statement(0x80); } else { test_statement(0x38C);  for (val = 10; 0y110 ^ @rbx | @r12 | 0y1101 @r9 ^ $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
2030
 if (@rsi | 0x1 >> $buffer >> $proc & 0y1100 >> @r9 ^ $buffer & @rbp ^ @r10 ^ @rax | @rsp & $thread & ++@r11 ^ $teb ^ 0x12 | $thread | @r13 < @r10 << $buffer << @r12 ^ $ip << @r10 ^ @r12 >> @rax & $thread ^ @rax & (+@r11))  { test_statement(0x267A); } else { test_statement(0x1385); }
$error$
$end$
2031
 if (@rsp >> @r12 & 0y101 & @r13 & $proc & $proc ! @r11 + $teb & $buffer & $proc >> (20) & 0n4 ^ @rsi ^ @rbp)  { test_statement(0x23BF); } else { test_statement(0x1235);  break;  for (val = 10; @r8)+4 | @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2032
 if (0x13 + @r12 ^ (0xA) | ~@rsp | $proc >> $thread ^ @rbp & @rdx ^ +$teb | @r13 ^ @rbx | @r11 ^ -~@rsi | $buffer ! -0x5 >> 0y10001 << $thread | @rbp << $teb & @r12 >> $thread & @r8 ^ @rbp | @rdi | @rax ^ @rdx ^ @rdx | @r11 ^ $proc)  { test_statement(0x3CA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip & $ip ^ @r10 ^ @r9 >< 0y1100 ^ @r8 ^ @r13) ; }
$error$
$end$
2033
 if (@r13 << 0x7 << @r13 ^ $proc >> 7 >> +@rax ^ @r9 ^ @r13 & ($ip) ^ $thread ^ 0y1000 | @r13 >> 14 ^ -$thread >> 0y101 & @r11 | @rax ^ $buffer ^ @r12 | @rbx | 0n9 ^ @rbx | @rsi(@rax + @r12 << $proc & @rax << @r11 >> @r11 >> @rdi & -@rsi & @rdx & @r12 ^ 14 << @r9 >> $proc >> @r8 & 0y111 & $buffer)  { test_statement(0x11F8); } elsif ($ip << 0x5 >> $teb >> @r10 & $ip ^ ~~@r8 >> 5 ^ $buffer & $teb ^ @r11 ^ -@r13 | $ip & @r8 & @r12 ^ ~@r12 & $teb != $ip << 0x5 >> $teb >> @r10 & $ip ^ ~~@r8 >> 5 ^ $buffer & $teb ^ @r11 ^ -@r13 | $ip & @r8 & @r12 ^ ~@r12 & $teb) { test_statement(0xADA); } elsif ($buffer ^ $buffer ^ @r8 | @rsp = @r11 ^ 0y1110 & @rax) { test_statement(0x26E8);  /* This is a comment */  break; } elsif (@r8 ^ @rbx ! @r9) { test_statement(0x1808);  /* This is a not closed comment } else { test_statement(0x257E); ;  for (val = 10; @rax <> @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ! 20) ;  /* This is a not closed comment  This is a not opened comment */ }
$error$
$end$
2034
 if (+(@rsi) << ~@r9 >> $ip >> @r9 >> @rax & @rax << @r13 ^ @r10 << (13) ^ @r12 >> @r13 & $ip & 11 | @rsp << ~@rax >> 0xF >> @rbp & $proc & @r13 ^ @r8 | @r9 <> +(@rsi) << ~@r9 >> $ip >> @r9 >> @rax & @rax << @r13 ^ @r10 << (13) ^ @r12 >> @r13 & $ip & 11 | @rsp << ~@rax >> 0xF >> @rbp & $proc & @r13 ^ @r8 | @r9)  { test_statement(0x2190);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (-@r11) & $thread ^ 15 ^ @r11(($teb & @rsi | ~$buffer) ; @rax = @r8 ^ @rsp ^ @rsp ; }
$error$
$end$
2035
 if (0y1111 >> @r12 & @r13 << @r13 & $thread & @r9 | @rsi >> $proc >> (0xD) <= @rsi + @r9 << $teb << 12 >> @rsp)  { test_statement(0xA9A); } elsif (@rdi << @rsp & -$thread >< -@r11 >> @rax >> @rsi & @r12 ^ $ip & @rdi) { test_statement(0x2);  // /* This is a comment   while  (@rsi @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2036
 if (@rax << @r13 << $ip >> -0x9 >> @rsp >> @rdi & -0n17 << 12 >> 0x11 >> 0n5 ^ @rax << @r9 >> @rsp ^ @rdi >> $ip)@rax << @r13 << $ip >> -0x9 >> @rsp >> @rdi & -0n17 << 12 >> 0x11 >> 0n5 ^ @rax << @r9 >> @rsp ^ @rdi >> $ip)  { test_statement(0x24B7);  break;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip >< $ip) ; } elsif ($thread >> @rsi >> $buffer | 0n13 & ~@r12 | @rax(@rax << @r13 >> $ip >> @r12 & @rdi | @r12 >> $proc | $ip ^ 0y101 ^ 0xC) { test_statement(0x20AF); } elsif (@rdi & ~$teb @r11 & 0x7 & @r12 ^ $ip & @rdi ^ $proc) { test_statement(0xB1C); ;  for (val = 10; $buffer = 0n12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0xB7C); }
$error$
$end$
2037
 if ($buffer + @rsi << $ip << $ip & @r8 << (+@r12) ^ @r11 << $teb ^ @r8 >> 0y110 & @rbp | @r11 << @rdi & $thread & $ip | @r9 ^ @r9 & +@r8 | ~~@rsi & 0y10))$buffer + @rsi << $ip << $ip & @r8 << (+@r12) ^ @r11 << $teb ^ @r8 >> 0y110 & @rbp | @r11 << @rdi & $thread & $ip | @r9 ^ @r9 & +@r8 | ~~@rsi & 0y10)  { test_statement(0x189C); } elsif (~@rbp & 0y101 >> @rdi ^ 6 >> @r13 ^ $ip ^ 0n4 ! $buffer ^ @rsp ^ @rdx & 23 | @rax >> 0y110 | (~+@r10)) { test_statement(0x12E0); } elsif (@rdi >> (@rbx) & @rbp & @rdi ^ @r12 & $ip >< @rbp ^ @r13 & $proc) { test_statement(0x860);  while  (@rdi = 0x7 | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx >= @rsp & -0y11) { test_statement(0x20B3);  while  (@r13 < $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread ^ +@r11 | $proc @r9) { test_statement(0x5D3);  This is a not opened comment */  /* This is a not closed comment } else { test_statement(0x22F0);  /* This is a not closed comment }
$error$
$end$
2038
 if (-1 >> @rsi << 0n2 != @r9 + $thread & -@rdx << -@r8 >> @r8 >> @r8 ^ @rbp >> @rdi & $teb >> 0x2 ^ 0y1100 & 0x11 & @r8 ^ @r10)  { test_statement(0x5E9);  for (val = 10; @rdi | 0x13 | 7 | @rsi)@r8 & 0y100 ^ 0xF ^ $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 << @r9 & @r13 & 0xC & @rbx | 0n9 | @rax | (@rdx) ^ @rbx ! $teb | @rbp) { test_statement(0x2002); } else { test_statement(0x21ED);  for (val = @r11; @r9 < ($proc) ^ @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2039
 if (@rbx + $buffer << $thread << @r11 >> @r13 << @rdi >> 4 >> 0n14 ^ +(~@rdx) << @rsi | @rsp >> 13 >> @rbp & ~$buffer | @rax & ~@r12 ^ @rbx & @rbx ^ @r13 ^ @r9(11 ^ @rsi << -@rsi ^ 0y0 >> @r9 & $ip ^ @rsp & @rax ^ ~$teb ^ @rsp | $proc ^ @r8 | +$ip ^ $buffer)  { test_statement(0xDC7);  while  (@rsp ^ @rdx ^ 0x11 <> @rdi | $buffer ^ @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r10 >> @r8 >> 0x10 ^ $teb >> @rbx ^ 0xC >= ~$ip & -@rdi >> @rdx | +-7 >> -~~0x2 & 0n12 | @r12 ^ 0x7 | 0y10011) { test_statement(0x125F); val = @rdi ^ $teb | @r8 ;  // /* This is a comment  }
$error$
$end$
2040
 if (@rbx << @rdx >> @rax >> @r9 ^ @rax >> @rsi >> @rsp & @rdx >> +0n6 & $ip ^ (@rdi) >> @rsp | $thread | $thread & $teb ^ @rdi & @r11 ^ @r8 ^ @r12 | 4 ^ $ip != @r12 + @r12 << @rsp << $ip & $teb >> @r9)  { test_statement(0xEDB); } elsif (@rsi >> @r11 >> @rax ^ 0 >> $teb ^ @rsp & @r11 ^ $thread ^ @r13 | @rsi >> $teb & @rsi <> @r11 << @r8 >> -@r8 | 0xD >> @rbp & $proc) { test_statement(0x9F8); } elsif (@r11 >> @r10 & $thread & ($ip) >< $ip & @rbx & @r12 ^ (@r8) | @rax & $buffer ^ 6 | 0y10001 ^ $buffer | $ip) { test_statement(0xC3C);  if (+$thread | @rsp <= @r8 | ~@rbp)  { test_statement(0x21FA); } } elsif ((0x5) & @rbx ^ (@rdx) | $ip ^ $buffer | +23 | @r11((0x5) & @rbx ^ (@rdx) | $ip ^ $buffer | +23 | @r11) { test_statement(0x1EA7);  /* This is a not closed comment  /* This is a comment */ } else { test_statement(0x1A4D);  for (; (~@rsi) ^ @r10 | (15) ! @rsi ^ 3 | (@rbp);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ; @r8 | @r13) ; }
$error$
$end$
2041
 if ((@rdi) + 0x10 << 20 << $buffer | $teb << 0n18 & $ip ^ @rbp >> @rbp ^ $thread & $teb >= (@rdi) + 0x10 << 20 << $buffer | $teb << 0n18 & $ip ^ @rbp >> @rbp ^ $thread & $teb)  { test_statement(0xF18); ;  if (0n15 ^ $thread | 0n14 >= $proc)  { test_statement(0x198F); } elsif ($buffer | @rsi ; $buffer | @rsi) { test_statement(0x1B44); } elsif (0 != @r8) { test_statement(0x578); } elsif (@rsp ; 0xC) { test_statement(0x444); } elsif (@rbx >< -15) { test_statement(0xC2C); } else { test_statement(0x3A0); } } elsif (+@r9 << @rax)@r11 >> $buffer >> @rsp) { test_statement(0x1F3E); val = @rsi ^ @r9 ^ 7 | -@r9 ^ @rbp | 0y10010 | $thread ; } elsif (0n17 ^ @r8 ^ @rax ^ @rdx)@rbx | @rbp & @rdx ^ @rax | @r10 ^ 0y1101) { test_statement(0x7B0); } elsif (@rbp & 0y1100 | @rsp ^ @rbp >= @rbp & 0y1100 | @rsp ^ @rbp) { test_statement(0xD6C); } elsif (@r9 | 0xB >= @r9 | 0xB) { test_statement(0x1DCB);  while  (0n3 >= 0n3)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif (@r11 | $ip >= @r9) { test_statement(0x1B70);  break; } elsif (@r12((0xD) { test_statement(0x23A2);  // /* This is a comment   while  ($proc != (@rdx))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 ; @rdx) { test_statement(0x7A3); } elsif (0n19 >= 0n19) { test_statement(0x1675); }
$error$
$end$
2042
 if (0x12 >> @rsi << @rax & @rbx << $buffer >> @rbp & @rbp | @r8 >> $ip ^ $buffer & $ip | (0n6) ^ @rax | @rsi & $thread | 0y101 | $proc((-$thread & @r8 << $buffer >> $teb >> @r9 ^ @rsi & @r8 >> (0y1101) & @rax & @rax ^ @rbx ^ @rsp & @r11)  { test_statement(0x1EA8);  /* This is a not closed comment }
$error$
$end$
2043
 if (@rbx + @rbp <= @rbx + @rbp)  { test_statement(0x23E5);  /* This is a not closed comment  break;  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 <> @r8) ; }
$error$
$end$
2044
 if (@rbx << @rbp << @r9 > @rbx << @rbp << @r9)  { test_statement(0x2072); } elsif (-@rsi >> 21 & -@rsi >> @rax & $ip | @r13 & @rsi & @rsp | @rdi & @rsi((-@rdi << @r10 & (0x10)) { test_statement(0x1CB7);  // /* This is a comment   /* This is a comment */ } elsif ($teb & @r10 & $buffer | $proc & 13 ^ @rax | ~$buffer | -@rdx == @rsi & (@r11) & ~(@r11) ^ @rdi ^ @r10 ^ 0x9) { test_statement(0x72);  /* This is a comment */  if (@r12 >= @r12)  { test_statement(0x4E6); } elsif (@rbp = @rbp) { test_statement(0xD26); } else { test_statement(0x1FF0); } } else { test_statement(0xF7A);  break; }
$error$
$end$
2045
 if ($ip << @rdi << @rdi >> @rdi << 14 & @rbx >> @rbx ^ @r12 << @r13 >> $proc & @rax ^ @rdx = $ip << @rdi << @rdi >> @rdi << 14 & @rbx >> @rbx ^ @r12 << @r13 >> $proc & @rax ^ @rdx)  { test_statement(0xCCD);  if (@rsp & @rsi ^ $teb ^ @rdx | @rdi | @rax | $proc = @rsp & @rsi ^ $teb ^ @rdx | @rdi | @rax | $proc)  { test_statement(0xE77); } else { test_statement(0xB63); }  for (val = ~@rdx ^ @r12; @r13 != @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ((@rsi) << @r13 >> @rbx ^ @rbp >> $teb & @r10 ^ @rbx & @rsi | $ip & $teb & @rdx ^ $proc & -$buffer | $proc & @r8 | @r8 | 0n12 | (@rdx) ! @rsp << 0n17 ^ (@r8) >> $proc | $thread & ~@r12 & $proc ^ +@r13 | (@r11) | @rsi | @r11 | -$buffer) { test_statement(0x148D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi((@r8 | @r8 | $buffer) ; } elsif (-@rsp & @r13 & 12 == -@rsp & @r13 & 12) { test_statement(0x976); }
$error$
$end$
2046
 if (@r9 + @rbx & (@r9) >> @r10 & @rax >> (@rbx) <= $teb << @r12 << @rdi >> @rdi >> ~@r10 >> ~@r10 & @r10 << 0xB >> @rdx >> @rdi & ~@rbp)  { test_statement(0x10D2); } elsif (@rax >> @r13 >> $proc ^ @r11 >> --@rsi & 0x6 | ~(0n0) >> ~@rbp | ($thread) & @r12 $proc << 0x7) { test_statement(0x758);  if (~0x11 ^ $thread == 0n6 | @r12)  { test_statement(0x65A); } @rax = -@rsi | @rsi ; ; } else { test_statement(0x1FEC); }
$error$
$end$
2047
 if (0n15 + @rdi << @rsi << 0n1 >> +~@r11 | @rbp << ~@r8 >> 0y10000 ^ @r11 >> $ip ^ @r11 & ~0n16 ^ 0n12 | @rsi ^ @rsi & @r10 | @r12 ^ 0y1000 ^ $thread <> 0n15 + @rdi << @rsi << 0n1 >> +~@r11 | @rbp << ~@r8 >> 0y10000 ^ @r11 >> $ip ^ @r11 & ~0n16 ^ 0n12 | @rsi ^ @rsi & @r10 | @r12 ^ 0y1000 ^ $thread)  { test_statement(0x24A1); } else { test_statement(0xC49); }
$error$
$end$
2048
 if ($ip + @rbx >> 0x1 ^ @rsp << @r13 ; $thread << 0n19 & @r10 | -@rdx ^ $buffer ^ 0x5 & $proc)  { test_statement(0x557);  /* This is a not closed comment } elsif (+@r13 | $buffer >> @r8 ^ @r10 >= @rsi << @r11 & @rbx >> @rsp & @rbp ^ $buffer >> @r13 | @rsi >> @rdi | @rax ^ @rbp | $thread) { test_statement(0x911);  // /* This is a comment  } elsif (@rdx >> @r10 & @r11 & +@rbp ^ @rbp & @r12 ^ -10 | 0x12 == @r11 >> @rbx & $thread ^ @rbx ^ 0y10011) { test_statement(0x614); }
$error$
$end$
2049
 if (0n19 | $thread ^ $ip & $teb | @r10 >> @r9 ^ $buffer & 2 ^ 1 ^ @r10 | +@rdi @r11 & $teb << 0y1110 >> @rsi ^ -@r13 & $thread)  { test_statement(0x961);  break; } elsif (@r8 << @rdx ^ @r10 >> 16 & @rax & @r8 ^ @r13 <= @r8 << @rdx ^ @r10 >> 16 & @rax & @r8 ^ @r13) { test_statement(0x13FE);  if (@r11 | @rdi != ~@r10)  { test_statement(0x13DE); } elsif (@r9 >= (0n11) | @r12) { test_statement(0x24F0); } }
$error$
$end$
2051
 if ($proc & $ip >> @rbx >> 0y1 & @rdx >> +$buffer ^ 21 << 0x2 & 0n5 >> 0y10001 <= $proc & $ip >> @rbx >> 0y1 & @rdx >> +$buffer ^ 21 << 0x2 & 0n5 >> 0y10001)  { test_statement(0x1733);  for (val = $proc; @r12 & $proc ^ @rsp ^ @rax >< 0y1101 | @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x7FB); ; }
$error$
$end$
2052
 if ((+@r9) << $thread >> @rbx >> $buffer >> @rax & $teb << 0n18 ^ @rbp << ~$ip ^ @rdi >> 0y0 ^ @r11 != 0n12 + $ip << @rax & @rsp >> @r12 >> 0xB & @r12 >> ~@rbp ^ @rax << @rbp & 0n1)  { test_statement(0xFC3);  for (val = 10; @rsp ^ @r8 ^ @rsp | -@rsp = $teb & @rbp ^ 0x8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12 >> @r10 >> 4 >= @r12 >> @r10 >> 4) { test_statement(0x1574); }
$error$
$end$
2053
 if (~@rbp << @rsp << @r11 = ~@rbp << @rsp << @r11)  { test_statement(0x1613); }
$error$
$end$
2054
 if (@rsp + @rsp << @r10 << @rax >> @r11 >> 0x6 & @r11 >> @r8 | @r11 >> 2 >> @rdx((@rsp + @rsp << @r10 << @rax >> @r11 >> 0x6 & @r11 >> @r8 | @r11 >> 2 >> @rdx)  { test_statement(0x7B8);  /* This is a not closed comment } else { test_statement(0xA2A);  /* This is a not closed comment  for (val = @rsi; 11 > @r10 | $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; $ip > $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  for (; @r11))@r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
2055
 if (~---@rsi << @r13 ^ $thread << @rdx & @rbp >= @r12 + @r9 >> +~@rdx << $teb ^ $buffer << @rdi & @rbx | @rsi >> $ip >> $ip & @rsp >> 0y110 & @r10 ^ @rdx & +@r13 & @rbx ^ ~@r11 & (@rsp))  { test_statement(0x1D4); } elsif (@rdi >> 0x2 >> @rdi & @rbx = @r10 & @r10 >> @r8 & @r13 & $ip ^ @rbp >> 0x12 ^ 0n19 & @rdx ^ @r8 ^ @rbx | ~$buffer >> @r12 ^ @rsi & $teb) { test_statement(0x1136);  for (val = @r11 | $proc; ~$teb ^ $ip)@r13 | @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 | @rsp >= @r9) ; } else { test_statement(0x2DB); val = @rdi ^ $thread | $teb ^ @rbx | +$buffer | @rdi ; }
$error$
$end$
2056
 if (-0x2 + @r10 << 0x2 & $proc << @r13 | @r10 & 0n4 >> @rbp | @rdi & @rdx ^ @r11 & @rbp | @r8 & 0y10001 | $teb >= 0n8 << $proc << @r10 >> @rsp << @r13 >> @rbp)  { test_statement(0x243); }
$error$
$end$
2057
 if (@rsp + @r8 << @r10 << @rax < @rsp + @r8 << @r10 << @rax)  { test_statement(0x182B); ;  This is a not opened comment */  break; ; } else { test_statement(0xF89);  // /* This is a comment   // /* This is a comment   /* This is a comment */ }
$error$
$end$
2058
 if (@rax << $teb == $buffer << @r11 << +$teb & @r8 & $teb >> 0x11)  { test_statement(0x134);  /* This is a not closed comment  /* This is a not closed comment } elsif (@rdx << $buffer & (-@rbp) & 0x4 & (@r8) | @rbx ^ @rdx & @r9 | 0xD | @rbp >= +@rdi << @rax >> @rdx ^ @rsi ^ (((@rsp))) ^ @r10 ^ (@rdi) | @r10 >> @rbx & @r9 ^ +$buffer ^ $teb ^ @r12 | @rdx & 22) { test_statement(0x14B9); ; } elsif (@rdi >> 10 ^ @rbx | @rdx & @rbp | @rbp | +0x3 ! @rdi >> 10 ^ @rbx | @rdx & @rbp | @rbp | +0x3) { test_statement(0xC71);  break;  for (@rax = @r12; $proc > $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 < @r11) ;  /* This is a not closed comment }
$error$
$end$
2059
 if ($ip >> (-++0n1) << @rsi >> @rsi >> 0xF ^ 0x12 << 0n14 & $buffer ^ @rdi ^ @rsi < $ip + @rbx | @r13 << @r8 >> @rbx >> @rax & @r13 & 0n12 & @rsp ^ -@r10 >> +@rdi ^ 0xB ^ $teb ^ +@rsi)  { test_statement(0x235E);  break; }
$error$
$end$
2060
 if (@rsi << 0 & @rsp << $thread & $ip >> @r11 & -@rsp ; @rbx + ($thread))  { test_statement(0xFE7); } elsif ($buffer & $proc))$buffer & $proc) { test_statement(0x959); } elsif (-@rdi & @r10 & @r10 ^ $ip & @r11 ^ @rbx ^ @rbx >= -@rdi & @r10 & @r10 ^ $ip & @r11 ^ @rbx ^ @rbx) { test_statement(0x1CA0); } elsif (-$thread & (0y111) ^ @rsi((0n2 & @r12) { test_statement(0x145F);  /* This is a comment */ } else { test_statement(0x1324); }
$error$
$end$
2061
 if (@rsi >> $teb & @r12 & $thread >> $ip & @rdx & @rdx ^ @r8 << $ip >> $proc & @rsp & @r11 & @r13 | 0n13 >> @r12 >> @r13 & @rdi & $buffer & $ip ^ $buffer | -+@r12 >> @r8 & @rsi))@rsi >> $teb & @r12 & $thread >> $ip & @rdx & @rdx ^ @r8 << $ip >> $proc & @rsp & @r11 & @r13 | 0n13 >> @r12 >> @r13 & @rdi & $buffer & $ip ^ $buffer | -+@r12 >> @r8 & @rsi)  { test_statement(0x1FEB); } elsif (@r8 << @r13 & $buffer >> ~@r11 ; @rdx ^ @r10 | -@rax >> $buffer & @r9 ^ @rsi & @rsi ^ @rsi ^ @rbx | @rbx & 0y1011 ^ @r9 ^ ~-0xB) { test_statement(0x1AEC); } else { test_statement(0x17AA); }
$error$
$end$
2062
 if ((@r13) + @r13 >> @rsi << $ip >> $ip >> 0n14 ^ @r12 >> 0x13 >> $ip & @rbx >> +$buffer < @rsp << 0y1101 >> @r9 << @r8 & @r9 << @r11 & 0n9 & @rsi & 0n2 | $teb >> @r13 >> @r10 ^ @rbp >> $buffer ^ ~3 & +(0y1001) ^ 11)  { test_statement(0x5A5); }
$error$
$end$
2063
 if (@rdx((@rdx)  { test_statement(0x1368);  /* This is a not closed comment } elsif ($teb << @rsp >> @rdx & @r9 >> @rdx & $thread ^ @rax ^ $ip & @r12 | 0y10001 & @r10 ^ -@r8 $buffer << 0y1010 & $teb >> 0y110 & @r9 & $teb ^ @rbx | @rax >> $proc) { test_statement(0x1A6B);  for (val = 10; @rdi ^ @r10($proc | @rax | @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 & @rax(@rsp & -4 & +@r9 ^ @r12 & $teb | @r8 ^ 0xA ^ 0y1100 | @rdx ^ @r12 | $thread) { test_statement(0x259E); } else { test_statement(0xA16);  /* This is a not closed comment  for (@rax = 0n12; -$ip | 0n13 < @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
2064
 if (@rax & $thread << @r9 & @r11 >> 0n17 ^ (@r11) ^ @rsi >> @rbx | @r11 << @rbp >> @rax & $thread & +0y1111 | 0n3 >> $thread & @r9 & @r11 ^ @rbx & -$thread | @rbx & @r11 | @r8 ^ @rbx | @rdi | 0n5 != $teb + $thread >> +@rdx >> @rax >> 17 & $teb << ($ip) ^ +0n11 << ~@rax & @r11 & 0x7 & 0n16 | @r11 & @rdx)  { test_statement(0x6E5); val = @rsi >> @rbp & 0n6 & @r8 ;  if (-$teb ^ @rbp < @rbx ^ -@r12 | @r11 | @r13)  { test_statement(0x1435); } else { test_statement(0x89B); }  // /* This is a comment   for (@rax = @r11; @rsp ! $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 << @rdx >> @r13 | @rax ^ $ip & @r11 ^ 0y1101(~@r8 << @rdx >> ~@rsp >> @r13 ^ 0x2) { test_statement(0x16CA);  /* This is a not closed comment  while  (~@rbp | @rsp >< ~@rbp | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2065
 if ($buffer | @rdx << @rax >> 0x8 & +@rdx & $proc & @rdx ^ $ip >> ~@rax | @r8 & +@r12 & 0n17 | @rax & $proc ^ -@r11 ^ @rax | @r11 ^ ~5 >< (@r12) + @r10 << @r12 << (@rdx) & @r8 << @r8 >> $thread | @r13 << $buffer >> $buffer >> 0y10000)  { test_statement(0x22D4); ;  break; } elsif (@r8 << @rsp >> (@r8) >> @rdx | 0x7 & 0x12 | $buffer ^ @r12 ^ 0x13 >< $buffer >> 0x11 ^ @rax & @rbx ^ @rdx ^ -@rsi ^ @r13 | $ip >> 0y10010 ^ 0y1111 & @rdi | 0y101 & $thread ^ (0y1011)) { test_statement(0xE4D);  if (@rdx | -$proc | @rsp < $buffer ^ 0y1111)  { test_statement(0x2465); } elsif (@r12 != @r10) { test_statement(0x2AE); } elsif (@rdi > @rbx) { test_statement(0x310); } else { test_statement(0x1E1D); }  /* This is a not closed comment  for (val = 10; 0xA >= @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1ECF);  This is a not opened comment */ }
$error$
$end$
2066
 if (0n5 >> @r11 >> @rax >> @rbx & @r9 << @r8 >> @r12 >> @r12 <= 0n5 >> @r11 >> @rax >> @rbx & @r9 << @r8 >> @r12 >> @r12)  { test_statement(0x23F9); }
$error$
$end$
2067
 if (@r13 + $thread << @rdx << $proc & 0 ^ $teb >> @rdi | $ip >> @rax >> @r11 ^ ~@rax & @rbx | @rbx & $thread & $thread | @r10 ^ 0y1001 | 21 ^ 5 | @r8))@r13 + $thread << @rdx << $proc & 0 ^ $teb >> @rdi | $ip >> @rax >> @r11 ^ ~@rax & @rbx | @rbx & $thread & $thread | @r10 ^ 0y1001 | 21 ^ 5 | @r8)  { test_statement(0x1F6B); } else { test_statement(0x25A7);  for (val = 10; 0y1011 < $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2068
 if (@r9 >> $ip ^ @r8 ^ @rsp ^ @rdx ^ @rbx ^ $buffer | @rbp >> $proc | ~@rbx >> -$teb & +0x3 & @rbx | $buffer & 0n0 ^ $buffer)@r12 + @r9 >> ~@r13 << 0n11 ^ @rbx << @r13 ^ $thread >> $thread)  { test_statement(0x1972);  break; }
$error$
$end$
2069
 if (@r9 << @rdx & @r10 << @r8 & @r9 >> @r11 & @rbp))@r8 + $teb << @rbx << @rdi & ~-+-0xE << @rsi >> @rdi & @rbp & 0y1110 & $buffer)  { test_statement(0x814);  // /* This is a comment  } elsif (-$teb << 0n1 >> ($proc) >> $buffer & $thread >> @rbp ^ @r8 & @r9 ^ $thread & @rdi ^ @rbx > @rdi << @r10 >> @r12 >> @rdx | 0x4 | -~@rdi) { test_statement(0xBD7);  // /* This is a comment  } elsif (13 ^ 0y1 | 0x0 & 0n1 ^ 11 ^ +@rsi ; 13 ^ 0y1 | 0x0 & 0n1 ^ 11 ^ +@rsi) { test_statement(0x1B5E);  if (@r8((@r8)  { test_statement(0x185F); } elsif (@rbp >= @rsp) { test_statement(0xBDC); } else { test_statement(0xDBC); }  while  (@r8 <> +@rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; 13 > @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x194E); }
$error$
$end$
2070
 if ($teb << @rax & $thread >> @r10 >> 2 & @rdi & 0n13 | $buffer << @r8 = $teb << @rax & $thread >> @r10 >> 2 & @rdi & 0n13 | $buffer << @r8)  { test_statement(0x16EB); } elsif (@rsi >> $proc ^ @rbp ^ @rbp & @r12 ^ @rdi ; -$thread << $thread >> 0n0 & $ip | +@rsi & +$ip | 0y11 & $teb | 0x1 | $teb) { test_statement(0x1DD2); } else { test_statement(0x5CE); }
$error$
$end$
2071
 if ($thread >> @r13 & @rbp >> $thread & ~$buffer ^ ~@rbp << @r11 & $teb ^ (@r13) & @rdi & $teb(@rdx << $thread << @rsp >> -0y1111 | @rdx << 0y10 >> $proc)  { test_statement(0xDAE); }
$error$
$end$
2072
 if (0n15 + ((0n7)) << @rdx ^ @r12 << @rsi | 0 << (0x0) >> -@rbx >> @r9 ^ @rsp >> @r8 & @rsp != @r12 + @r11 >> 0y1011 << (22) >> -@rdi & @r9 >> $thread >> @rax & -@r13 | @rdx >> 5 >> $thread & @rbp | $proc & @r11 & @r13)  { test_statement(0x12A5);  if (0n17 & 16 ^ @r13 | 0y110 = @r11 & 0y11 | 0y0 ^ @r12 | @r13 | @r11)  { test_statement(0x2B5); } elsif (@rsp | @r13))0x6 ^ @rsi) { test_statement(0x1388); } elsif (@rdi | @r9 <> @r10) { test_statement(0x200D); } elsif ($thread < $thread) { test_statement(0xEBC); } } elsif (23 >> $ip >> @rsi & @r11 ^ 0n9 & $ip | @rdx ^ 12 <> $teb >> $proc) { test_statement(0x1D0E);  This is a not opened comment */  if ($proc >< $proc)  { test_statement(0x1227); } else { test_statement(0x13C3); } } elsif (+@r8 >> $teb & $buffer ^ $buffer & 16 +@r8 >> $teb & $buffer ^ $buffer & 16) { test_statement(0x1982);  for (val = 10; (@rbp) >= (@rbp);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12 >= @r12) { test_statement(0x2426);  while  (@r13 >< 0y1000)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x178D); }
$error$
$end$
2073
 if (@rdx + +@r11 >> (@rdi) ^ -@r11 & 0xB >> -+@r8 != 0y10001 + @rbx & @rax << @rdi & ~@r12 & 6 & @r12 ^ 4 ^ $teb >> @rdx ^ +@rbx & 0n6 ^ @r12 ^ @rsp)  { test_statement(0x26AB); } elsif (@rsp ^ @rsp >> @rbp & @rbp & @rbx($proc << +$ip >> @rbx >> ($thread) ^ $ip >> @r9 ^ @rdx & $ip ^ @rsp) { test_statement(0x1924); }
$error$
$end$
2074
 if ($thread >> @r10 << @rsp >> 0n6 ^ +-@r9 >> $proc & @r13 | $ip << @rdx | @r12 >> @rsp ^ @rbp & $buffer <> 0x13 + ~-+@r9 << $proc)  { test_statement(0x46D);  break; } elsif (@rsp << 0y10 >> -@rax >> 15 > @rsp << 0y10 >> -@rax >> 15) { test_statement(0x1467);  while  (@r11 >< 0x11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r9 & $buffer & $ip ^ +0n5 & @rax | +$proc & -@rsp ^ @rbp | -@rbx | @r13 | @r8 = @r9 & $buffer & $ip ^ +0n5 & @rax | +$proc & -@rsp ^ @rbp | -@rbx | @r13 | @r8) { test_statement(0x1E11);  break; } elsif ($thread & ~@r9((0x12 ^ @r8) { test_statement(0x13A0); } elsif ($buffer ^ @rbx != $buffer ^ @rbx) { test_statement(0xE8B);  /* This is a not closed comment } elsif (@r9 | 0xE <> @r9 | 0xE) { test_statement(0x245A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 <> @r8) ;  /* This is a comment */ } elsif ($thread $thread) { test_statement(0xCBF);  break;  // /* This is a comment  } else { test_statement(0xA62); }
$error$
$end$
2075
 if (@r12 + 22 >> $teb & @rax & 0n2 & @rax | $buffer << @r10 & $teb >> @rdi & @rdi | @rax >> 0y1010 | 0x6 & @r11 ^ @rbp | (@r13) ^ @rdx | 0y1100)@r12 + 22 >> $teb & @rax & 0n2 & @rax | $buffer << @r10 & $teb >> @rdi & @rdi | @rax >> 0y1010 | 0x6 & @r11 ^ @rbp | (@r13) ^ @rdx | 0y1100)  { test_statement(0xC69); ;  /* This is a comment */ }
$error$
$end$
2076
 if (@r12 << $proc << @rsp >> @rsp >> $thread >> @r11 & (@rsi) & 2 ^ @r8 << -((@rdi)) >> 0x6 | @rbp << $teb >> 21 >> @r13 ^ $teb | @rax >> 0x13 & @r13 | @rax ^ @r8 ^ 0xD | $ip ^ @rbx(@r11 + @r11 >> $teb & @r11 << 0y110 & +@r13 >> @rsp ^ @r9 << $thread)  { test_statement(0x1E1E); }
$error$
$end$
2077
 if ($thread ^ @rdi << @rdx >> $ip >> 0 | @r12 & (@r10) ^ 1 | (@r13) & $teb & @r8 ^ @rbx ^ $teb ^ @rbp @r13 + $buffer << +0n11 << @rsi | 0x12 >> @rdi ^ (0n3) & @rax ^ @r12 & $ip ^ 0x12 ^ +$thread | 7 >> $buffer | $buffer & 0x12)  { test_statement(0x1C6F); } elsif ($ip >> @r13 <> $proc >> @rax | @r10 >> @r9 & 20 | 0n15 & @rdx) { test_statement(0x190D); } elsif ($thread != @rax >> @rbx & -@rbp & $thread | @rsi) { test_statement(0x912);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp | @rsp))@rbp | @rdx) ;  for (val = 10; $teb = @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } else { test_statement(0xD1); }
$error$
$end$
2078
 if (@r10 + @rsi << ~@r12 << $proc >> -~0n19 << (@rsp) & 0n7 & @rsi ^ $proc ^ @r12 >> $proc & @r10 & @rdx ^ $thread & 21 >= @r8 << $proc << @rax & 0xF << 23 & @rdi >> $ip)  { test_statement(0x149); }
$error$
$end$
2079
 if (@rbx + @rsp << @r13 ! $teb + ~@rdi)  { test_statement(0x26DA); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12((11) ;  /* This is a comment */ } else { test_statement(0xFB7);  while  (0y1100 != 0y1100)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2080
 if (0y101 + $thread << 0y10000 & @rbx << ~2 >> @r8 >> @rsp & 0y1 ^ @rdi & @r11 ^ (@r13) & $proc & 0n5 ^ @r12 ^ $buffer | 0n17 >> $thread >> @r10 ^ @rbx >> @rdi & $proc ^ @r11 & @rax | 5 >> @r10 | $ip & @r13 ^ @r11 ^ -@rsp ; @r13 + -@r13 & @r9 >> 0y10001 >> ~0y10010)  { test_statement(0x2558); }
$error$
$end$
2081
 if ($proc + @rdx ^ $teb >> $ip & @rbx >> 6 | 0n16 << @rax >> +0n13 >> 0y1111 & @rbx >> @r12 & @rsi ^ $thread >> (@r13) & +@r10 ^ 0y1000 & @r9 ^ $proc >= $proc + @rdx ^ $teb >> $ip & @rbx >> 6 | 0n16 << @rax >> +0n13 >> 0y1111 & @rbx >> @r12 & @rsi ^ $thread >> (@r13) & +@r10 ^ 0y1000 & @r9 ^ $proc)  { test_statement(0x577);  This is a not opened comment */  break; } elsif (@rsp >> @rsi >> @rbp & @r13 >> 0xF & @rbp = @rsp >> @rsi >> @rbp & @r13 >> 0xF & @rbp) { test_statement(0x1360); }
$error$
$end$
2082
 if (@rax + @r13 & -@r12 >> @rbp & @rbx >> 0n10 ^ ~@rsp << $proc | @r8 > @rax + @r13 & -@r12 >> @rbp & @rbx >> 0n10 ^ ~@rsp << $proc | @r8)  { test_statement(0x15A5);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp)@rbx & ($teb) | 0 ^ -0x12 | $buffer | @r9) ;  /* This is a not closed comment ; } else { test_statement(0x1BEA); }
$error$
$end$
2083
 if ($buffer + $ip >> $teb | $ip >> $thread >> +@rdi & @rdx < @rsi + @r9 & ~@rdi << @rdi >> $ip | @r9 << $buffer >> @rdi >> @rsp | $buffer ^ @rbp ^ @r8 | @rdi ^ $thread ^ @rbp | $proc ^ @r9)  { test_statement(0x96B); } else { test_statement(0x25C); }
$error$
$end$
2084
 if (0y1100 ^ @rax << $proc >> 0y11 @r10 << @rsi >> @rbp ^ $thread << (@r11) >> @rsp ^ @r13 >> $proc & 21)  { test_statement(0x4A1); } else { test_statement(0x1644); }
$error$
$end$
2085
 if (@r11 << $proc << @rdx >> @r11 >> @r11 >> $teb & @r10 >> @rbp >> $thread | 0y1111 >> 0y10010 | $buffer <= $proc + 0x4 >> @rsi)  { test_statement(0x1670); } else { test_statement(0xD29); }
$error$
$end$
2086
 if (~0n19 & @rsi >> @r12 >> (@r11) ^ @rdx & @rsp >> @rsp & @r10 & $teb ^ @r9 >> ~@r9 > ~0n19 & @rsi >> @r12 >> (@r11) ^ @rdx & @rsp >> @rsp & @r10 & $teb ^ @r9 >> ~@r9)  { test_statement(0x2688);  if (@r8 & @rdx ^ @rbp | -@r13(@r8 & @rdx ^ @rbp | -@r13)  { test_statement(0x1532); } else { test_statement(0x709); } }
$error$
$end$
2087
 if (-0y10011 + @rdi | $thread << $proc & @r12 & @rsp | @rax >> @rbx & 17 | ++$buffer & -0n14 ^ @r8 | @rbp ^ $thread | @r13)@r13 + @rbx & @rbx << @rsi | @rdi << 0x5 & ~@r8 >> 0y10 & @rsp & @rbx ^ @r13 >> $ip ^ (+$ip) ^ @r10 ^ 0xE)  { test_statement(0x1293);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ ~@rdx ^ 21 > @r9 & $ip) ;  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n7((@r9) ; } else { test_statement(0x1A0F);  while  (@rdi ^ @r11 | $ip | @rbp = @r13 ^ (@r11))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2088
 if (0y0 & $teb & $ip = @r11 + @r9 << 0n0 << @rdx)  { test_statement(0x1C6B); }
$error$
$end$
2089
 if ($ip ^ $teb >> $ip >> @rdx ^ 0n5 ^ @rsp & @rbx | @rax << 0xF >> $thread >> 12 ^ 0n8 >> @rdi & $ip & @rdx ^ @r13))$ip << $buffer << @r8 >> 0y1111 ^ @rsi >> @rbx ^ $ip)  { test_statement(0x1AFE); val = @rax >> @r13 & $proc ^ $buffer ^ @r9 ^ @rdi ; } else { test_statement(0x100C); }
$error$
$end$
2090
 if (@rdx << @r11 << 0x7 >> @r13 >> @rdx >> @r13 & ~@rbp << @rbp | @rbx << @rax ! @r10 << @rdi >> -@rdi << @rsp)  { test_statement(0x12CA); } elsif (0y100 & @rbp >> @r8 & @r12 | $teb & $buffer & -@rax ^ @rsi | $ip & @rax | +@rax >= 0y100 & @rbp >> @r8 & @r12 | $teb & $buffer & -@rax ^ @rsi | $ip & @rax | +@rax) { test_statement(0x1BFA); } elsif ($ip >> 0x11 & @rax & @rsp ^ @rsp & ($proc) ! 0y10 >> @rax & @rbx & $teb ^ @rax & (@r8)) { test_statement(0x45);  while  (@rdi | 0x3 != $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@r8 & -@r11 ^ $ip <= -@rdi | $teb) { test_statement(0x15DD); } elsif (@r10 @r10) { test_statement(0xB2); } elsif (0n5 < -@r9) { test_statement(0x2619); } elsif (0xB(@rsp) { test_statement(0xCB8); }
$error$
$end$
2091
 if (@rbx << @r12 & @r9 & @rdx & 0n3 == @rbx << @r12 & @r9 & @rdx & 0n3)  { test_statement(0x19B7);  /* This is a not closed comment } else { test_statement(0x241A);  while  (@rax | $thread | @rsi >= @rax | $thread | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2092
 if (@rsp << $thread << 0x6 | @r13 >> (@r10) >> -@rsp | @rdx >> @rbp ^ $ip & 12 <= @r12 | @rax >> +$proc >> 0n14 & @rsp & $ip | $thread >> $proc & +1 ^ @rsi & @r13 | $ip | 0y1000 | @rax)  { test_statement(0x10BA);  for (val = 10; $teb | $teb ^ $buffer | @rsi | @rbp < 0x12 ^ 0y1111 ^ $teb | @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc << 0x0 ^ 0y1101 & @rdx & $teb == @r13 >> @rdi | $teb >> @r9 & @r11 & $teb | @r8 & @rsi ^ $proc ^ @r9) { test_statement(0x8A2);  // /* This is a comment   /* This is a not closed comment } else { test_statement(0x1D7F);  // /* This is a comment  }
$error$
$end$
2093
 if (@rsp | @rax >> @rax >> $ip & @r13 >> @rbx & @rdi & @r10 ^ (0y10) >> @r9 | @rax >> -~@r11 & @r9 & @r10 | @rsp ^ 0y101 > $proc + $teb << $proc >> ~0x5 << @rdi >> @rax)  { test_statement(0xEA2);  if (@rsp & $ip | @r8 | $ip $buffer & $ip ^ +@rdi ^ +@rdi)  { test_statement(0x16F6); } elsif ($thread ! (@r9)) { test_statement(0x3F8); } elsif (0y10001 | @r13(@r8 | @rsi) { test_statement(0x190); } }
$error$
$end$
2094
 if ($thread >> @r12 >> 0y1010 & -@r11 << -@rdi >> @rbx >> -$buffer & @rbp < @r8 + @r12 >> @r8 << @rsp >> 0x9 >> @r9 & $buffer >> 17 & @rax ^ 0n3)  { test_statement(0x167D); @rax = 0y10010 >> $teb & @rbp ^ 0xD ^ -$ip ^ @r13 ;  if (@r8 ^ @r11(@r8 ^ @r11)  { test_statement(0xBD3); } elsif (@rsi | 0y1100 @rsi | -$thread) { test_statement(0x864); } elsif ((@r10) = (@r13)) { test_statement(0x1585); } elsif (@rbx = $teb) { test_statement(0xEC7); } elsif ($teb ! @r8) { test_statement(0x2AB); } else { test_statement(0xE44); }  break; ; }
$error$
$end$
2095
 if (@r10 + -$proc << 0x5 >> @r10 ^ @rbp << @r13 | $buffer >> $teb >> -@r12 & @rdx & @rdi ^ @r8 >> $proc | ~0n4 & (@r12) ^ @rax > @r10 + -$proc << 0x5 >> @r10 ^ @rbp << @r13 | $buffer >> $teb >> -@r12 & @rdx & @rdi ^ @r8 >> $proc | ~0n4 & (@r12) ^ @rax)  { test_statement(0xD82); } else { test_statement(0x1652); }
$error$
$end$
2096
 if ($proc + 0y10 << @rdi << @rsi >> @r12 >> $ip >> @r12 | @rdi >> +@rax & $teb ^ @rsp >> ~$buffer ^ @r8 ^ @rdx <> $proc + 0y10 << @rdi << @rsi >> @r12 >> $ip >> @r12 | @rdi >> +@rax & $teb ^ @rsp >> ~$buffer ^ @r8 ^ @rdx)  { test_statement(0x17E2); } elsif (@rdi >> @rbx >> @rsi | +0x6 >> @rdx & 0n14 & @rdx ^ @rsi ^ @r9 ^ @rbx = @r8 << 0n15 >> @rsi >> $ip & @rsi & +$proc ^ @rbx) { test_statement(0xA2F); } elsif (@r13 & 0n12 & @r8 | @r9 ^ @rax | $buffer($proc & @r11 & 0n6 | $ip | 17) { test_statement(0xA); } elsif (@rbp & $buffer @rbp & $buffer) { test_statement(0xB6E); } elsif (-@r8 ^ @rsi | $teb | ~@rsi = -@r8 ^ @rsi | $teb | ~@rsi) { test_statement(0x19F9); @rax = @rsi ;  for (; @rdx(@rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1BDF); ; }
$error$
$end$
2097
 if (-@rdi & @rdx << 0xB >> $thread >> +@rbx ^ @r10 << @rsi >> $proc & @rax >> @r11 ^ $thread & $teb & $thread | ~+@r10 & -@r11 >> $thread & @rdx & 22 ^ @r12 >> @rsp)21 >> @r11 << 0y10000 & @r12 << 0y111 >> @rdx >> @r9 & @rbx >> @rdx | -(@rbx) ^ +$ip | @rdi)  { test_statement(0x250A);  for (val = 10; @rdi & @rsi ^ 2 ^ 0y1110 | @r11 ^ @rsp | @r11 | @r9 > +21 ^ $thread ^ @r13 | @rsi | +2;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
2098
 if (@r11 + 4 << $thread << @rbp | @rbp << @rbp >> ~$buffer >> 0n11 ^ $teb >> 17 & $ip & @r10((@rsi << @rsi >> @r9 & 0x7 << @r9 & $ip >> $teb & @r10 & @rdi ^ @rbx << $buffer >> @rsi & @r12 >> +0y0 & $buffer ^ @r11 ^ 12 & @rbp)  { test_statement(0x22F9); @rax = $teb ;  if ($buffer ^ (@r9) ! $buffer ^ (@r9))  { test_statement(0x2519); }  for (val = 10; $teb | @r9($thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 << 13 & @rsi & @r10 | $buffer >> @r10 & $buffer & @rsi ^ 0xC | @rax(@r11 << @rsp >> @rax >> 4 & 0n17 >> @rsp & +@r11 ^ @rdi >> @r10) { test_statement(0x1ED0);  if (@r13 ^ $teb | ((@r10)) != $buffer ^ @rdx)  { test_statement(0x244D); } elsif (@r8 = 0n5) { test_statement(0x72D); } else { test_statement(0x244B); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x5 | @rdx(0x5 | @rdx) ; } elsif (7 >> @rbp & 17 | @rax & ~-$buffer ^ @rbp | @r12 ; 0y10011) { test_statement(0x1575); } elsif (+@r10 & $teb((0xE & @r12) { test_statement(0x139); } elsif (@r8 ^ 0x5 > @r8 ^ 0x5) { test_statement(0x8F3);  if (@r13 >= @r12)  { test_statement(0x13CE); }  break; } elsif ((0xC) != (0xC)) { test_statement(0x9F3);  while  (@rdi = @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  break; } else { test_statement(0x107); }
$error$
$end$
2099
 if (+@rbx + ~$teb << 3 >> -@rdx << @r11 >> @r12 & (0n16) << @rbx >> 0y11 & $ip >> (@r8) | @rbx << @rsi(@r9 << @r8 << @rbx >> @rdx >> @r10 ^ $teb << @rax & @r13 ^ @rdx >> 7 | (@r10) ^ $buffer >> (@rax) & 0x0 & @rbx | 0x2 >> 0y0 ^ @r13 & $ip | @r9)  { test_statement(0x1B63);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 23 & $teb | @r13 ^ +$ip | @r10 | @rbp >= 23 & $teb | @r13 ^ +$ip | @r10 | @rbp) ; @rax = $thread & @r13 ^ @rbp ^ $teb | $teb ^ @r10 ;  break;  if ($thread <> $thread)  { test_statement(0x13A6); } elsif (@rdx <= 5) { test_statement(0x1C0C); } elsif (@rdi < 5) { test_statement(0xB12); } else { test_statement(0xCA6); } val = @r13 ; } elsif (@r12 << $teb & @r8 ^ $proc < @r8 & @r12 >> @rbx ^ 6 >> +$thread ^ @rbp & $ip ^ @rbp ^ 0n1 | $ip >> $proc) { test_statement(0x124E); } elsif (@rbx >> $proc & @rax & @rdx > @rbx >> $proc & @rax & @rdx) { test_statement(0x23E4);  if (@rdi <> $buffer)  { test_statement(0x1B64); } elsif (-0n6 != 3) { test_statement(0x76D); }  for (; @r11 == @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } else { test_statement(0x20CF);  if (@r10 ^ @rdx $thread ^ @rdx | @r10)  { test_statement(0x1B9E); } elsif (@rsi | @r11 = $proc) { test_statement(0xCBD); } elsif ($thread))$teb) { test_statement(0x2261); } else { test_statement(0x1DEB); } }
$error$
$end$
2100
 if (@rdi + @rax & @rax << @rsi & @r10 >> @r10 & $ip | @rbx << 0xD & (0n3) < @rdx + @r8 & $thread ^ $teb >> $proc & @r10 & -@r8 & -@r8 ^ +$teb >> @rsi | +@rax >> @r9 >> @rdi & @r12)  { test_statement(0x181);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@r8 & @r12 | @rdi | -(+$teb) | @rdi ; $thread ^ @rbp ^ @r8 | $proc | 0n17 | @rbp) ; } elsif (-$ip << $proc & @r11 >> $buffer & @r8 & -$thread ^ $proc >> 0n17 & @rsi & ~0y1011 ^ @rdx ^ 6 ^ $ip | ($buffer) >> 0n3 & @rbp ^ $teb | 0y11 >< @r11 >> @rsi >> @r9 & @r8 >> @r11 & @r13 ^ @r10 >> (@rbp) & @rbp ^ @rbx & $thread) { test_statement(0x1E3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rdi($teb ^ 0n7 | @rsi | @r9) ;  /* This is a not closed comment } elsif (-$teb & @r8 & @r9 >= -$teb & @r8 & @r9) { test_statement(0x18E8); ;  while  (@r11(@r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rsp ; } elsif (@r8 ^ @rbp ^ $proc = $buffer & @r13 | @rdi ^ @rbp) { test_statement(0x984); }
$error$
$end$
2101
 if (@rsp + $buffer << $thread << $teb & $teb << @rsp ^ @r10 & -12 >> @r9 @rbp & @rbx)  { test_statement(0x107D); } elsif (-@r12 << (@rsp) >> @rsi < -@r12 << (@rsp) >> @rsi) { test_statement(0x1DD2);  break; val = @rax ; } elsif (@r13 >> ~~$buffer ^ +@rax == @r13 >> ~~$buffer ^ +@rax) { test_statement(0x2372);  break;  if ($proc ; @rsp)  { test_statement(0x11E8); } elsif (@r13))$proc) { test_statement(0x18DB); } } elsif (@r12 & ((@rbp)) | @rsi +($thread) & $ip | @r11 ^ @r10) { test_statement(0x2366);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread <> $thread) ; @rax = @r13 ; } elsif (@r13 | @r10 | -16)0n0 | $proc | -@r12) { test_statement(0x140D); } else { test_statement(0x706); }
$error$
$end$
2102
 if (@r13 << 21 << $buffer ^ 0x6 & @rdi & 0x12 ^ (0n0) >> $teb & @r9 ^ @r11 & @r10 ^ 20 <= @r13 << 21 << $buffer ^ 0x6 & @rdi & 0x12 ^ (0n0) >> $teb & @r9 ^ @r11 & @r10 ^ 20)  { test_statement(0x608); } elsif ($proc & -$buffer ^ @r8 <= $proc & -$buffer ^ @r8) { test_statement(0x21EA); } else { test_statement(0xB54); }
$error$
$end$
2103
 if (@r11 + ~0x12 >> (@r9) << @r9 >> +@rsi & @rsi << @r11 ^ +$buffer & @r11 >> 1 | ~@rdi << $teb >> @rsp >> $buffer & 13 >> $ip | @rbp & @r10 & (@rbp) ^ 0n4 ! 16 + $thread >> $ip << @rbp)  { test_statement(0xACD);  /* This is a not closed comment  /* This is a not closed comment  for (val = @rax | (@rbp); 0y101 >= @rax | @r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer << $buffer >> -0y10011 >> 0x4 ^ $proc >> 0n13 & $thread & $ip | @r8 >> @rbp & +0y10001 ^ @r9 ^ $ip ^ ~$proc | $proc != @rdx << @rsp & @r12 & @r11 | @rbx | @rbp) { test_statement(0x61F);  break; } else { test_statement(0xB8E); }
$error$
$end$
2104
 if (0y100 + @r8 >> +@r10 <> @r8 + (@rsi) << $ip << @r8 & $proc << $teb & @rdi ^ @rdi)  { test_statement(0xD2A);  // /* This is a comment  } elsif (@r12 << @rbx >> @r10 | @rbp ^ @r11 ^ $ip | (@r9) & @r8 | @r8))$thread << ~@rdi | $teb & $ip & $buffer ^ 0n16 ^ $thread ^ @rax | @rdx & 4 | @r9 ^ @r12) { test_statement(0xD79); } else { test_statement(0x1400); }
$error$
$end$
2105
 if (@rbp + 0y1111 << (@rdx) << @r8 & @rsi << +@rbx >> @r8 >> @r8 & @rsi >> +$buffer & 6 ^ ~@r8 << @rsp >> 0y10011 & @r9 ^ @rbp & $thread | @rdi << @r12 & @r13 & @r12 ^ +$proc >> -@rdi & $teb >< (@rsi) + $thread << @rbp >> $teb >> $ip ^ -$proc >> $buffer >> @rdi | @r12 >> $buffer ^ @r11 >> @rsp & $buffer & @rsp ^ ~@r10 & $proc)  { test_statement(0x1766);  This is a not opened comment */ } else { test_statement(0x4F0);  while  (($ip) >< @rbx | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2106
 if (@r8 >> $buffer & 0x4 & @rbx | $thread << @rax >> -$ip & ~0y1 ^ @rdi | @rax >> @rsp ^ -@rsi((@r8 >> $buffer & 0x4 & @rbx | $thread << @rax >> -$ip & ~0y1 ^ @rdi | @rax >> @rsp ^ -@rsi)  { test_statement(0x1CA2); } elsif (@r11 << $buffer >> $proc >> @r12 & -@rax >> 0n10 ^ 0x1 >> +@rbp ^ @r10 | @rsp >> 21 & $buffer ^ 0n14 ^ $teb ^ --0x5 | $buffer != $buffer >> @rbp) { test_statement(0x12A8);  while  (@r11 ^ $buffer @r11 | 21 | 0x3)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x1302); ;  while  (@rsp >< @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2107
 if (@rbp + ~(@rax) >> -@rsp << @rsp >> @rsi & @r11 << -@rsp >> @r9 | @rbp & $teb >> @rsp & @r10 ^ @rbx | @rbx >> +@r12 | @rdx & 0n9 | @rdx ^ $proc > @rbp + ~(@rax) >> -@rsp << @rsp >> @rsi & @r11 << -@rsp >> @r9 | @rbp & $teb >> @rsp & @r10 ^ @rbx | @rbx >> +@r12 | @rdx & 0n9 | @rdx ^ $proc)  { test_statement(0x131C); }
$error$
$end$
2108
 if (@rax + @r12 << ~@rbp >> @r8 & $teb << 0x13 >> @r11 ^ @r10 << @r13 >> @r12 & 4 & @rax & @r12 | @r9 << 0y111 & @rdi & $teb != @rax + @r12 << ~@rbp >> @r8 & $teb << 0x13 >> @r11 ^ @r10 << @r13 >> @r12 & 4 & @rax & @r12 | @r9 << 0y111 & @rdi & $teb)  { test_statement(0xF01); } elsif (@r11 << @rax & @r11 >> @rdx & @rsp & $teb ^ @r11 >> 0x0 | @r11 >> $thread & @r10 & @rdi ^ 0y0 & @rsp ! @r11 ^ @r8 & @r12 ^ @rbp | 0xD >> $proc) { test_statement(0x19F2);  while  (@r9 ^ +-@r9(~$teb | ~@rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x21CE);  while  (@rsi <> 1 ^ @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (~@r11 >= @r13)  { test_statement(0x1591); } ; ;  /* This is a not closed comment  // /* This is a comment  }
$error$
$end$
2109
 if (0x1 + @r13 ^ @rbx << -@rdx >> 0x9 >> $ip | 20 << @r9 & +@r8 & @r13 & @rdi ^ @rdx ^ $ip & $buffer > @r10 << -~$teb & 0y10010 << @r9 >> $proc >> @r8 & @r9 >> @rsp & $teb)  { test_statement(0x7C8);  while  ($thread | ~(@r12) ^ ~($teb) ; @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x9 << $buffer ^ -@r10 ^ 0xA & ~$teb ($teb) >> 10 >> ~@r8 ^ @r9 & @rbx & @r10 | 1 ^ $thread ^ ~(@r13) ^ @rsi) { test_statement(0x162E); } elsif (@rbp >> $proc & $proc ^ @r9 & $ip == @rbp >> $proc & $proc ^ @r9 & $ip) { test_statement(0x2180); } elsif (@rdi ^ $ip > @rdi & +@r12) { test_statement(0xE5D);  /* This is a not closed comment ; ;  break; val = @rbx ; }
$error$
$end$
2110
 if (+$thread >> @r10 << -@rsi < $thread + @r11 & 0n0 << @rbp >> @r13 | 0y1110 << @rsi ^ @r11 >> 20 ^ $thread & $teb | 0n1 & 0n11 ^ ~$buffer & 5 ^ $thread ^ $thread)  { test_statement(0x1069);  This is a not opened comment */ } else { test_statement(0x13F8); }
$error$
$end$
2111
 if (@rbp << @r8 << $proc & @rdi << @rsp ^ $ip >> $proc & $teb >> 0y1001 ^ 3 >> @rdx ^ @r8 & @r12 ^ $buffer ^ $proc | @r8 << $buffer | @rdi ^ @rbp & @r13 < @r11 + @rdi)  { test_statement(0x1410); } elsif (@rdi >> @r10 >> @rbp ^ @rsp & @rbp ^ @r11 & 0x9 | @rsi ^ (@r11) & -+$buffer ^ $teb ^ @rsp(@rbp << @rbx & (~+@rsi)) { test_statement(0x14D9); } elsif (4 & 0x6 ^ 0x5 & @r12 ^ @rbp ; @rdx >> +@rsp & 0x12 | 0y10001 ^ ~@r8 | $buffer ^ @r12) { test_statement(0x572); } elsif (@rsi & @rax ^ 20 ^ @rdi | $thread((@r8 & @rbx ^ @r12) { test_statement(0x1617); ; }
$error$
$end$
2112
 if (@r10 + @r11 << @r10 = @r13 + $proc >> @rdi << @rbp & @r12 >> @rsp >> $thread | @r11 << @rbx & $teb ^ 0xF | $ip >> ~($teb) ^ 0xB & $proc)  { test_statement(0x257D);  break;  /* This is a comment */  // /* This is a comment   // /* This is a comment  }
$error$
$end$
2113
 if (0n15 + -0n11 & @r10 << @rsi >> @rsp >> @rsp & @r12 ^ ~@rax >> @rax >> @r12 = 0n15 + -0n11 & @r10 << @rsi >> @rsp >> @rsp & @r12 ^ ~@rax >> @rax >> @r12)  { test_statement(0x2107);  break;  break; @rax = @rbp ^ -$thread ;  break;  break;  break;  for (; ~$thread > ~$thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2114
 if (-@r8 >> @r12 >> $thread >> @rdx ^ $ip << @rbx | $teb << ~@r8 & @rbp >> 0y1000 & @r13))-@r8 >> @r12 >> $thread >> @rdx ^ $ip << @rbx | $teb << ~@r8 & @rbp >> 0y1000 & @r13)  { test_statement(0x1EFD); val = (@r9) & $teb ^ @rdx & @rbp ; }
$error$
$end$
2115
 if ($thread << ~0xD << @r11 & +@rbx >> +@rdx >> (0y0) & @rdx ! @rax << @rbx << @rdx >> ($thread))  { test_statement(0x1202); @rax = $proc >> 0x12 | @r9 & 0y0 | @rdi ;  for (val = 10; $proc ; $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
2116
 if (@rdi + $proc)0n16 >> $teb << @rdx >> @r9 | $proc & @rsp | @rdi ^ $thread)  { test_statement(0x22CD);  break;  This is a not opened comment */ } elsif ($thread >> @rdi >> @r8 & 0xB & @r10 ^ $thread & 0x13 ^ $ip($thread >> @rdi >> @r8 & 0xB & @r10 ^ $thread & 0x13 ^ $ip) { test_statement(0xB93);  // /* This is a comment  }
$error$
$end$
2117
 if ($teb << 0x9 ^ @rsp >> @rbx & @r8 >> @r9 & @rsi & $buffer ^ ~$ip >> $thread | @r10 >> $teb & 0xB >> $proc & 0n16 & ~@rdx | @r8 >> @rbp & @rax & @rax <> @rdx + $thread | ~@r8 & @r11)  { test_statement(0xB85); }
$error$
$end$
2118
 if (0n9 + +@r11 << $proc << 0xA >> @r11 >> -@rsp ^ @rsi >> (@rsi) & (@r9) >> 0xD | 0n17 | @rdx >> ~-@r12 & $buffer ^ $ip ^ @r13 ^ @rsi | $proc ^ 0y111 @r12 << ~+@rdx >> @r8 & $buffer | $ip << -@r12 & @r11 & @rdx & 0x9 ^ 7 & 0n12 & @r12 ^ @r12 & ~+$buffer)  { test_statement(0x1225); } elsif ($thread ^ 0n19 >> @r9 | @rbx > $proc << @rbp ^ $buffer & 0xC ^ @r9 ^ @rbp) { test_statement(0x2121); } elsif (@rbp & @r9 ^ 0n2 & @rdx ^ @rdx ^ @rbp | @r8 | ($thread) != @rbp & @r9 ^ 0n2 & @rdx ^ @rdx ^ @rbp | @r8 | ($thread)) { test_statement(0x2347); }
$error$
$end$
2119
 if (0n8 << 0n17 << @rsi >> @r8 << $buffer >> 0x13 & 0y110 ^ @rbp << $teb & 0y10011 ^ @r10 | @rsp << @rdi >> @rbp >> $buffer & @r9 & $ip | $buffer >> 0xE & -@rsp & @r9 ^ 0 & @r11 | @rbp & $thread | 0n17 <> ~@rax + +$thread >> @rdi & 0y10011 >> @rax & (((+@rdi))) & @r10)  { test_statement(0xFBE); } else { test_statement(0x1032); }
$error$
$end$
2120
 if (0y1000 + @r13 >> -0x2 & @rbx >> 0y10010 ^ @r12 & 0y111 ^ @r13 >> @r8 ^ @rbx ^ +0n11)@rdx << @rdi & 0x2 << +@rsp ^ @rbp >> @r10 >> @r8)  { test_statement(0x16B2); } elsif (@r12 << $ip & @r10 >> @rbx & $proc & $buffer((@rdx >> $proc >> @rsi & $ip >> @rbp & @r8 ^ -@r13 ^ 0n19 ^ $ip | @r12 >> @r8 & @r11 | @rdi ^ 0n4 | $proc ^ @r11) { test_statement(0x1494); ;  /* This is a not closed comment }
$error$
$end$
2121
 if (0n0 + -(@rsi) << $proc | $buffer >> @rsp | +~@rbx ^ $thread & @rdx ^ @r13 ^ @rax != @rdx >> @rsp & 0y1011 | @rbx ^ @r13 & @rsp | $thread ^ @rbp & @rax ^ @r9 ^ $ip | $thread ^ 0xF ^ $buffer | @rsp)  { test_statement(0x1A57);  // /* This is a comment  }
$error$
$end$
2122
 if (@rsi + @rsi >> @rdi >> @rbp >> @rdx))@rsp + @rdi << @r13 << @r9 & +@rax << @r12 | @r11)  { test_statement(0x1D5D); } elsif (@r8 << @r13 ^ $thread & $buffer & @r12 ^ @rbp ^ $thread ^ 0 | $proc >> @rbx & $thread & (@rax) ^ @rax == 0n18 << $thread >> -@r13 & @rdi ^ @rax ^ $buffer ^ @r13 ^ $ip) { test_statement(0x231F);  break; } elsif (@rsi & $ip & @rsp ^ @rbx ^ $buffer ^ $ip | $proc ^ @r10 | @r8(($ip) ^ 0xA & $teb ^ -@rbx ^ @r11) { test_statement(0x2150);  This is a not opened comment */  /* This is a comment */  /* This is a not closed comment  for (; @r13((0y1101);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi & @rbp | @rax ^ @rsi | 4 | 0x2(@r9) { test_statement(0x1333); } elsif (~+@r10 | 0n3 | 0n10)~+@r10 | 0n3 | 0n10) { test_statement(0x19A6); } elsif (@rdx | @r8(@rdi) { test_statement(0x119D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8))@r11) ;  break; } elsif (@rsp)(0xE)) { test_statement(0xD19); } elsif (7))@rsi) { test_statement(0x1ECA); }
$error$
$end$
2123
 if (@rax + @rdi >> @rdi((@r8 << @rbx << +@rbp >> @rax << $buffer)  { test_statement(0x1051); }
$error$
$end$
2124
 if (@r11 + @r8 & $thread >> @rbp & 0x12 >> @r11 & $teb & 0n1 <> 0y100 + (~@r13) ^ @r9)  { test_statement(0x62C); } elsif (@r11 >> 0x0 >> +0y1010 & @r12 & ($proc) ^ 6 >> @r9 = 0x3 >> 0y0 & $ip >> @rsp & 0n4 ^ $proc >> @r11 | 0n17 >> 0n11 & $thread ^ @r9 ^ $thread ^ @rsi) { test_statement(0xBCE);  // /* This is a comment  } elsif (@rbp ^ @r9 != @rbp ^ @r9) { test_statement(0xF90); }
$error$
$end$
2125
 if (@r12 << 0x4 << 0y1010 & $proc | @r10 >> @rsi >> @r13 <= 0n4 << $proc >> @rbx << ($buffer) >> 0n4 >> @r10)  { test_statement(0x26C2); } elsif (@r10 << +@r8 >> 0y110 >> @r9 & @rdx >> -@rbx & +@rbp & @rdi ^ @rsi >> @rbx | @rdx & (@rax) ^ 0 ^ @rbx >< $teb << @r12 & (22) & @rax & 0y0) { test_statement(0x246D);  This is a not opened comment */ } else { test_statement(0x19E8); val = 0n1 & @r10 | $buffer ; }
$error$
$end$
2126
 if ($buffer + 0y1000 << @r10 << $thread & 0n13 << @r13 >> 0y0 ^ +0n12 ^ @rdi >> -@r12 & 0xC & +@rsp <> $buffer + 0y1000 << @r10 << $thread & 0n13 << @r13 >> 0y0 ^ +0n12 ^ @rdi >> -@r12 & 0xC & +@rsp)  { test_statement(0x1AA);  This is a not opened comment */  break; } elsif (-@rdx >> @rax >> @r10 & @r11 >> @rax & $proc ^ @r11 ^ $teb & @rdx <> -@rdx >> @rax >> @r10 & @r11 >> @rax & $proc ^ @r11 ^ $teb & @rdx) { test_statement(0x1594); val = @r8 ^ ~@r11 ;  /* This is a not closed comment  break; } else { test_statement(0x232);  while  (~@r12 ^ 0n11 != ~@r12 ^ 0n11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rbx(@rsp | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2127
 if ($ip + (@rax) << @rbp >> 0n8 >> 4 & 0n18 & 12 ^ 0y10001 & @r12 >> $proc >= $ip + (@rax) << @rbp >> 0n8 >> 4 & 0n18 & 12 ^ 0y10001 & @r12 >> $proc)  { test_statement(0x247B); } elsif (0xB << $ip >> @r10 >> @rdx))0xB << $ip >> @r10 >> @rdx) { test_statement(0xE68); } elsif (@r13 >> $teb | +@r8 ^ @rax ^ $proc | @r13 ^ 20 >= @r9 & $teb & @r13 ^ @rax ^ -@rsp) { test_statement(0x1C68);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +0n0 @r9) ; @rax = $proc ; } elsif (@rbx ^ @rax ^ ~@rdx ; $buffer & @rdx ^ $thread ^ $ip) { test_statement(0x1B07); ; }
$error$
$end$
2128
 if (@r11 + $teb >> 0x4 << $teb & $teb << @rbp >> @r13 >> $ip | @r12 | 0y11 & $buffer ^ @rax ^ @rdx | 23 & @rsp | @r13 ^ $ip | @rsp))$teb + +$buffer << @rbx << @rsi >> @r9 << @rdi & 0y110 & 15 >> @r13 | @r12 << $thread)  { test_statement(0x16EA); } elsif (0x11 << 0n4 >> $teb ^ +$ip & @r11 & @rsi ! 0x11 << 0n4 >> $teb ^ +$ip & @r11 & @rsi) { test_statement(0x1729); } elsif ($proc ^ @r11 | @r11 & 0y11 | @r8 ^ $buffer | @rsi | $proc <> @r9 >> (-$ip) & @rax ^ (@r11)) { test_statement(0x131B); } elsif (-@rdx & $thread ^ @r10 | +@r9 | 13 >= -@rdx & $thread ^ @r10 | +@r9 | 13) { test_statement(0x89D);  if (@r8))@r12)  { test_statement(0x67F); } elsif (@rdx((@r10) { test_statement(0xA1D); } @rax = -@r8 ;  /* This is a comment */ ; } elsif (@rdx ^ $buffer != 0xE | @rdx) { test_statement(0x11AE); } elsif (@rax >= @rdx | $buffer) { test_statement(0x1B37); }
$error$
$end$
2129
 if (@rbx >> 0xC << 11 >> @r9 & @rsi << $ip >> +@rax >> +0n12 = 0n13 + @rdi >> @rdx << $buffer & @r12 | @r12 << $ip >> $ip & @r12 ^ $buffer >> $teb)  { test_statement(0x190F);  break;  while  (@rax ^ @rbp | $ip | ~@r8 = @rax ^ @rbp | $ip | ~@r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } else { test_statement(0x1323);  while  (@r10 ^ @r13 | @rsi))$buffer ^ (@r10) | -0x8 | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rsp | @r10 < ~@rsi | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r13 ; $buffer)  { test_statement(0xF57); } elsif (@rbx <> (@r8)) { test_statement(0x332); } elsif (@r12 == @r12) { test_statement(0xF73); } else { test_statement(0xFE4); }  This is a not opened comment */ }
$error$
$end$
2130
 if (@r12 + @r8 << @r10 & $buffer & @rbp >> ~@r9 <= @r12 + @r8 << @r10 & $buffer & @rbp >> ~@r9)  { test_statement(0x4D8); @rax = ~@r12 >> 2 & $buffer & 0n1 ^ ~$ip | @rsi & (0x0) ^ $ip | @r13 ^ $proc ; @rax = ~0n3 & $ip ^ @rbx | $proc ^ 0y11 | (@rbx) ;  // /* This is a comment  @rax = ($buffer) | $buffer ; } else { test_statement(0x2C8);  // /* This is a comment   if (0x5))@r11)  { test_statement(0x2485); } else { test_statement(0x1558); } }
$error$
$end$
2131
 if (@r10 + 0n7 << 0xA | 0xD >> 0xD & $thread ; ~$thread + @rbx & $buffer >> @rsi | @r9 >> @r11 >> +@r10 ^ @r13 >> ~@rsp ^ $proc ^ 17)  { test_statement(0x331);  for (val = 10; @r13 & @rax ! @rdx ^ 0n9 ^ 0y100 | 0n11 | ~@r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
2132
 if (@rsp + @rsp >> $teb << ~@r11 & $buffer << 0n19 >> @r9 >> 17 & (@r11) & @rdx & @r12 ^ 0n16 << @rbx & $teb >> @rdi > @r11 + @r8 << $ip << @rbx & 0x11 >> $proc >> @rdi)  { test_statement(0x3C3); } else { test_statement(0xA48);  /* This is a comment */  This is a not opened comment */  while  (@r12 <> $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2133
 if ($buffer >> -@rsi << @r10 >> $teb >> $ip & $teb << $thread((+10 + @rdx << @rsi << $ip >> $thread << @r12 >> 6 ^ $thread ^ $proc >> (@rbp) & 0n18 & (@r9) ^ +~@r12 & 0y10010)  { test_statement(0x1FC5); } else { test_statement(0x174E); }
$error$
$end$
2134
 if (@r11 & @rsi << (@r10) >> @r8 >> 0xB & @r10 & $proc & @rsp ^ 21 << @rsp ^ 0n9 & @rax((@r11 & @rsi << (@r10) >> @r8 >> 0xB & @r10 & $proc & @rsp ^ 21 << @rsp ^ 0n9 & @rax)  { test_statement(0x12E6);  while  (0n19 & 0x12 | @r9 | 0x9 | 0n1(0n19 & 0x12 | @r9 | 0x9 | 0n1)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ ; } else { test_statement(0xDDF);  This is a not opened comment */ }
$error$
$end$
2135
 if (-3 << $teb << -@rsi >> @r8 << $proc >> +@r13 >> @r11 ^ @rax << ($ip) & @rsp >> @r12 | $thread << +@r11 ^ $buffer ^ $proc & $buffer = -3 << $teb << -@rsi >> @r8 << $proc >> +@r13 >> @r11 ^ @rax << ($ip) & @rsp >> @r12 | $thread << +@r11 ^ $buffer ^ $proc & $buffer)  { test_statement(0x163A); }
$error$
$end$
2136
 if (0n6 << @rdi << @rax >= 0n6 << @rdi << @rax)  { test_statement(0x773); } elsif (@rbp << @rsi >> -$teb ^ 0n15 & @rdi & $ip = @rax << (@r11) >> 6 ^ $buffer >> -$teb & $buffer ^ @rdx & ~@rbx ^ @r10 ^ @rbx | @r11 & @r13 & @rsp) { test_statement(0x46); @rax = @rdi & $proc ^ 0y1010 | $teb | @r13 ;  while  ($proc | $teb)$proc | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xECC); }
$error$
$end$
2137
 if (@r11 + @r13 & 5 << $ip >> $teb >> 0x12 & @rdi >> @rdx & @rax | $ip >> 0x8 & @r12 >> $buffer ; @r11 + +@rsi << 0y1001 << 0n2 >> $teb)  { test_statement(0xD0C);  // /* This is a comment  } elsif (@rdx << $thread >> ~~$thread & @r11 & $buffer ^ @r12 & @r11 & @rdi ^ $thread ^ (0n12) | 0xF & @rsi & @r13 ^ @rdi ^ 7 | -@r13 & $ip $ip & $teb & @rbp & 0n14 ^ @r9 >> 0y10 ^ @rdx ^ @rbp ^ $teb | ($thread) >> 0n0 & @r10 & @rbp ^ (@r11) & @rsi ^ @rsp ^ 0y1100) { test_statement(0xE31);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y10011 | @rdx >= @rbp | @rbx) ; } elsif (@rsp >> @rdi & (@rbp) & $proc | (@r9) = @rsp >> @rdi & (@rbp) & $proc | (@r9)) { test_statement(0x2179);  /* This is a not closed comment  // /* This is a comment  } elsif ((~@r11) & @rbp | $buffer ^ @rdx | @r9 | @r12 < @r8 | @r12 ^ @r9 | $proc | @rax) { test_statement(0xE12); } elsif (@rsp >= ~$proc) { test_statement(0x17A9); } elsif (@r11 != @rsp) { test_statement(0x21E5);  if (@rsp))@rdx)  { test_statement(0x234C); }  for (; @r10 ; $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (+0y1100 <> @rbx)  { test_statement(0x14E1); } } else { test_statement(0xC15);  while  (@rdx ; @rax | $ip | 22)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2138
 if ($proc << 0x13 << -@rax & $proc ^ @rax >> @rbp >> @r9 & @rsi ^ $ip & 22 & @r9 | 0n0 >> 23 ^ +@rax >> -21 & @rdx ^ -@rbp == @rbp << $proc << (@rbp) >> ((@r12)) >> @rdx >> 0n12 ^ @rsp)  { test_statement(0x1D9D); } else { test_statement(0x8C); }
$error$
$end$
2139
 if (@rdi + 0y100 >> @r8 >> @rdx >> +@r9 ^ @rdx >> @r8 ^ @rdx >> @r11 | @rsp >> 0y10010 & $teb ^ @r12 >> -0n7 & @rsi & @rdx ^ $buffer(@rdi + @rbp << @rdi << @r11 >> @r8 << 0xA & @rdx << $thread >> @r11 >> $proc)  { test_statement(0x1564);  /* This is a comment */ }
$error$
$end$
2140
 if (-0n10 << $ip >> @r13 >> @r13 & ~@rbp >> @rbp >> @rdx ^ @r9(@rsp + 0n9 << $thread << $teb ^ +$thread >> @r10)  { test_statement(0x2072); } elsif (@r8 << @r12 >> @rdi & @rbp >> @r9 ^ @rsp >> @r9 & @r12 & @rbx == @r8 << @r12 >> @rdi & @rbp >> @r9 ^ @rsp >> @r9 & @r12 & @rbx) { test_statement(0x22DD); } elsif (@r10 | 0 ^ $buffer <> @r10 | 0 ^ $buffer) { test_statement(0xF99); } elsif (@rsi ^ ~@rsi | $thread ^ $teb | @rdi | $ip = @rsi ^ ~@rsi | $thread ^ $teb | @rdi | $ip) { test_statement(0x234F); } else { test_statement(0x1AD6);  /* This is a comment */  for (val = 10; @r11 | +0y1011 ! @r11 | +0y1011;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2141
 if ((@r10) >> 10 >> @r10 >> @r8 & 0xE >> @r10 >> @r12 & @rsi | @r8 ^ $ip >> $teb)@r12 + +@rsi << @rdx ^ @rdx << $ip >> $thread)  { test_statement(0x1F0F); } else { test_statement(0x1157);  while  (@rsp ^ +@r11(@r10 ^ @r10 | 0n18)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2142
 if ($teb << @rdx ^ -@rdx << $buffer >= @r13 | @rax << @rbp & @r8 >> @r9)  { test_statement(0x44A); ; } elsif ($thread << 20 & @rdx ^ $thread >> 0n2($thread << $proc) { test_statement(0xCC6); }
$error$
$end$
2143
 if ($buffer + $teb << $thread << @r9 ^ @r9 << @rdx ^ (@rax) >> @rax | +@r13 << (@rdx) >> @r8 $buffer + $teb << $thread << @r9 ^ @r9 << @rdx ^ (@rax) >> @rax | +@r13 << (@rdx) >> @r8)  { test_statement(0x769); } else { test_statement(0x22F5);  for (val = 10; $proc ! $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  if ((@r8) >< $ip)  { test_statement(0x448); } elsif (@rsi > @rsp) { test_statement(0x2045); } }
$error$
$end$
2144
 if (@rsp + $ip >> @rax << +@r11 >> @r13 == @rbp + 0y1000 << 1 >> $proc >> @r9 ^ @r13 & @rax | ~@rdi << $buffer >> $teb)  { test_statement(0x7EE);  break; } elsif (++$buffer << @r11 >> $teb >> $teb = @r8 << @r12 ^ @r12 >> @r8 ^ $proc & @rsi) { test_statement(0x178B); } elsif (@r9 & @r11 ^ (@r8) & $teb ^ @r10 | @rdi < @rdx >> @rbp) { test_statement(0x133C);  if (+$proc <= +$proc)  { test_statement(0x598); } elsif (@rdx <= 0n0) { test_statement(0x2180); } } elsif (@r13 & @rsi | @rbx | @rax | 0x9 <= +0xB & @rdi ^ $proc | @rbx ^ 0n2 | @rbx | 0n5) { test_statement(0x2592); }
$error$
$end$
2145
 if (0n0 + @rsp >> @rdx >> @r10 ^ @rbx >> $thread & @rsp & @rdi ^ $teb & (0xD) ^ 17 & $buffer ^ @r13 $ip << 0n10 & $thread & @r10 ^ @r8 << @r9 >> -($proc) & @rdi & $buffer & @r12 ^ +$teb & @rax & 7 ^ 0n15 ^ @rax)  { test_statement(0x527); } elsif (11 << (@rbx) >> @rbp >> @rax & @r12 ^ 20 & (@rdi) ^ @r12 & @rdx ^ ~@r13 ^ @rsp >< 0xD << @rbx >> @rax >> @r13 | 0n2 >> +@rdx & $proc & @rdx) { test_statement(0x16C1);  This is a not opened comment */  if (@rsp | @r11 < @r13 | @rsp)  { test_statement(0x1708); } else { test_statement(0x38B); }  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 >= @r8) ; } else { test_statement(0x2111);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 @r8) ;  /* This is a not closed comment }
$error$
$end$
2146
 if ($proc | $proc >> $teb & ($proc) & $thread != $proc | $proc >> $teb & ($proc) & $thread)  { test_statement(0x4D4); } elsif (@rsp << @rbx >> (0y10000) >> $thread ^ -$buffer ^ 0xB ^ @rsp ^ 0y101 | 10 ^ @r11 & @rdi $teb) { test_statement(0x1451); } else { test_statement(0x3FE); }
$error$
$end$
2147
 if ($buffer << @rsi << @r9 & @rdx << $teb >> @rax ^ @rsp << 0x3 & @r8 ^ @rdx & @rbx ^ +@r13 & @r8 | @rbp << $teb >> $proc >> $thread & @r11 >> $buffer)0x1 >> @r9 ^ @rsi << @rax ^ 0n19 & 17 ^ @r9 & @rsi ^ $thread ^ $proc | @r9 << @r8 | @rax >> @r13 & @rdx)  { test_statement(0xF37); val = $proc >> $proc & @rdx ^ ~(@rdi) ^ (0y10) | @rax & @r10 ^ @rdx | $thread ^ @r12 | @r8 | 0y1011 ; } elsif (@rbx << @r10 >> 0xE >> $ip & @r11 & @r12 ^ 0y1011 ^ 0xD <> ~@r12 << @rdx >> $ip >> $buffer ^ @rbx ^ $teb ^ $buffer ^ @rbx | $teb | 0xC & 0n2 ^ @r10 ^ $proc | @rbp ^ ~0n9 | +0y1001 | @r8) { test_statement(0x1D6F);  for (val = $ip ^ @r12 | $proc; $buffer | ~$buffer < $buffer | ~$buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2148
 if (15 + @r11 >> $ip & @rsp >> @r13 ^ -@r9 << @r13 ^ @r12 >> (~$proc) & @rax | @r12 << ~@rsi >> +6 | $thread >> $thread ^ @r9 @rdi + @rax << @r13 >> @rbp << @r12 ^ -@rbx | @rbp >> $thread & 0n16 >> 12 & @r8 & @rdx ^ @r8 >> @r11 ^ ~@rbx & @rbp ^ 0x4)  { test_statement(0x23D6); } elsif (~0n11 << 0y10 ^ @r11 & $proc | @rsp >> ~@rsp | @rdi & @r8 ^ @rdi ^ @r13 | @rdi ; (@rsp) << 0x8 >> 0y10011 >> $ip | @rsi & @r13 ^ $ip) { test_statement(0x968); } else { test_statement(0x93); }
$error$
$end$
2149
 if (@rbx & (0y10000) >> +$teb >> @r10 & @rbp >> @r9 ^ $buffer << @rbp >> 3(@rbp >> -@r9 << $ip >> @rbp & @r9 >> @rbx & 0n8 ^ @r8 << @rax >> @r11)  { test_statement(0x9EB);  while  ($proc & @r8 | @rbx ^ $proc | @rsi < @r10 & @rdx | @rdx | @rsp | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (0n3 << @rsi >> @rsp | @rbp ^ @r11 | -($proc) & -@rdx ^ ~@rsp ^ @r13 | @rax | @rbx | 0x12 = @r8 >> @r8 & ((@rdi)) >> @rbp ^ @rdx >> $teb | @r12 >> 0x10) { test_statement(0x14D2);  // /* This is a comment   for (val = 10; @r11)$thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2150
 if ($thread + @rdx >> @rbp << +@rbp >> @rax | @r9 >> @r10 >> @rax & $proc & @r12 & @rdx ^ @r8 & @r9 & @rdx | @rax >> $buffer & ~@rax ^ 0n11 & ~@rax ^ @r8 | @r11 & @rbx ^ @rbp ^ @r10 | (-$thread) >< $thread + @rdx >> @rbp << +@rbp >> @rax | @r9 >> @r10 >> @rax & $proc & @r12 & @rdx ^ @r8 & @r9 & @rdx | @rax >> $buffer & ~@rax ^ 0n11 & ~@rax ^ @r8 | @r11 & @rbx ^ @rbp ^ @r10 | (-$thread))  { test_statement(0xC29); } else { test_statement(0x1090);  /* This is a comment */ ; }
$error$
$end$
2151
 if (@r13 + @rbx >> @r9 >> @rsp >> @r13 & @rax << @rdi >> @rdi & $buffer >> ($teb) ^ @r12 >> $teb >> 6 ^ @rsp & @r8 & @rsp == 11 + @r13 >> $proc << @r9 >> @rsi >> @rdi)  { test_statement(0x1C74); } else { test_statement(0x806); }
$error$
$end$
2152
 if ((@rdi) << @r11 << @rsp ^ -$teb & @r11 >> -@rsi | @rdi << @rsi ^ $proc >> 13 & @rbx & @rbp ^ $ip & 0n10 <> $thread + @rax << 23 << $teb | @rbx << @rbx & $ip | @rsp >> 0y1000 & @rax & +10)  { test_statement(0x1F88); } elsif (@rdx << @r9 >> 0x0 | $ip >> $ip ^ $proc ^ @rdx @rdx << @r9 >> 0x0 | $ip >> $ip ^ $proc ^ @rdx) { test_statement(0x78C); val = @rsi & @r11 ;  /* This is a not closed comment  break;  if (@r8 >= @r8)  { test_statement(0x180); } elsif ($teb)$teb) { test_statement(0x881); } else { test_statement(0x14E1); }  // /* This is a comment  } else { test_statement(0x686); }
$error$
$end$
2153
 if (@r8 ^ -1 & 0n16 ^ @r10 & $buffer & 0y11 | @rdx << @rsi ^ $ip ^ -@r10 & @rsp ^ 0n18 ^ @rdx < @r8 ^ -1 & 0n16 ^ @r10 & $buffer & 0y11 | @rdx << @rsi ^ $ip ^ -@r10 & @rsp ^ 0n18 ^ @rdx)  { test_statement(0x17BC); } elsif (@rdi >> @rbx >> @rsp & $teb >> 0y1101 ^ @r12 >> 0n17 | 0n12 | 0y101 ^ ~~$buffer ^ @r8 | $buffer ^ @r10))@rbp << (13) ^ 21 >> @r12 | $ip ^ $ip | @r13 ^ $buffer ^ @r9) { test_statement(0xDF8); } elsif (@rbx & @r12 & @rbp | $buffer & @rbp ^ @rsi ! @rdx >> @rdx & -@rax | 0y1100 | -@rax | @rsi | (0y10)) { test_statement(0x7FF);  break; }
$error$
$end$
2154
 if (@r13 << $proc >> $teb >> $buffer & ~@r11 ^ (0n4) << $buffer & @rdx ^ @r12 & @rbp)@r13 << $proc >> $teb >> $buffer & ~@r11 ^ (0n4) << $buffer & @rdx ^ @r12 & @rbp)  { test_statement(0x1B9A); } elsif ($buffer << ~@rbp >> $ip >> @rbx & @rsi >> $buffer ^ ~@rdx ^ 0x6((-@rax | @rdi) { test_statement(0x1BB5);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 ^ @r8 | @r11 | 1))@rsi) ; }
$error$
$end$
2155
 if (@rdx + @rax >> 0n13 << $ip >> (0y10001) | $teb ^ @rsi ^ 15 & +@rbx ^ @rsp ^ @r13 | ~@r9 ^ 0xE ! 0x6 + @r13 << $proc << @r10)  { test_statement(0x236A); } elsif (@r8 << @r9 >> @rdx ^ @r8 & $proc & $teb ^ @rsp ^ @rdx ^ -$teb)@rbp & @r13 >> (@rax) & @r12 & @r11 | @r13 & 0y1111 ^ @r12 & @r8 ^ $buffer ^ ($teb)) { test_statement(0x7CB); } else { test_statement(0x2010);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ^ $teb | @r12 | $ip >< @rdx | @rdi) ; }
$error$
$end$
2156
 if (@rdx + @r13 << $proc << @r10 ^ 17 & 0x6 ^ @rdx ^ @r9 & @r12 ^ $proc | $thread << $thread | ~~@r13 | @r9 | +@r9 ^ @rdi | @r13))@rdx + @r13 << $proc << @r10 ^ 17 & 0x6 ^ @rdx ^ @r9 & @r12 ^ $proc | $thread << $thread | ~~@r13 | @r9 | +@r9 ^ @rdi | @r13)  { test_statement(0x20EC); } elsif (-(@r8) << @r9 >> @r13 ^ 15 & $ip(@rbx >> @rsp >> 0y1100 ^ 16 >> @r9 ^ @rdx) { test_statement(0xA5A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 = @r9) ;  if ($ip < $teb | 20)  { test_statement(0x61F); } val = @rbp | +$buffer ;  if ((@rdi) == @rax)  { test_statement(0x25C9); } elsif (@rsi <> @rsi) { test_statement(0x61D); }  if (@rsi >< @r9)  { test_statement(0xDA2); }  // /* This is a comment  @rax = @rdi ; } elsif (@rbx >> -$thread ^ $thread ^ $thread >= ($proc) >> $thread & @r11 | 0y1101 ^ @rdi) { test_statement(0x1A22);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ; @rax) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 >< 0x11) ; } elsif (@rbx ^ 0y1 | @rbx ^ @r11 ! $proc & (+0y10011) | @rbx | $thread) { test_statement(0xA76);  /* This is a not closed comment  This is a not opened comment */ ; } elsif (0y1011 ^ @r13)0y1011 ^ @r13) { test_statement(0xB68);  if (+@r12))+@r12)  { test_statement(0x794); } } else { test_statement(0x548);  /* This is a comment */ }
$error$
$end$
2157
 if (@rax + $ip << $thread ^ $ip << 0y1100 ^ @r9 >> 0y1001 & @r8 ^ @rbp & ~0n16 ^ @rsp != @rbp + @rbx << $proc & $thread << 0n6 & $proc >> @r12)  { test_statement(0x1928);  This is a not opened comment */  if ($ip ^ (-0y0)((@r10 | @r11)  { test_statement(0x1A93); } else { test_statement(0x1BF0); } } else { test_statement(0xCF4); }
$error$
$end$
2158
 if ($proc + $buffer << 0y1100 << +-@r10 | @rsi << @rdx >> @rdx >> 0x11 ^ @r13 ^ $proc & @r9 ^ (@r11) | 0n5 & $proc ^ @rsp & @rdx >= @rbx << $buffer)  { test_statement(0x12FF); @rax = $buffer >> @rsi & $buffer ; }
$error$
$end$
2159
 if (-@rsi & 0n19 >> 0x4 >> @r13 >< @r11 + @r9 | -$ip << -@rdx & @r12 & 0n8 & @r8 ^ @rdx >> $proc & 0x5 & $thread)  { test_statement(0x14A3); } else { test_statement(0x1862); }
$error$
$end$
2160
 if ($thread + @rbp << $teb << $proc >> 0n13 = $thread + @rbp << $teb << $proc >> 0n13)  { test_statement(0x292);  while  (@rbp & @rdi @r10 & @r9 ^ (@rdi) ^ @r12 | $proc ^ $ip | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($buffer | @rsp | @rbx <= -@rbx | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment @rax = @r12 | @rbp ; } else { test_statement(0x240B); }
$error$
$end$
2161
 if ($ip << 0y10000 << 0n6 | @rbp << @r11 >> @rbp ^ @r11 ^ @r9 & @r12 ^ 0y1110 <= $ip << 0y10000 << 0n6 | @rbp << @r11 >> @rbp ^ @r11 ^ @r9 & @r12 ^ 0y1110)  { test_statement(0x115B); } elsif (@r9 & 11 & 0x10 > @rax << $teb & -@r9 >> 4 | +@r8 >> 0y1101 & -$buffer) { test_statement(0x19D);  /* This is a not closed comment }
$error$
$end$
2162
 if (@rax + $thread ^ $buffer << @rdx >> @rsp | 0n12 >> @rbx & @r12 >> @rdx & 0n4 & -0 > ~+~6 + @r11 << $thread & @r12 | @rax | @rsp >> @rdi & @r13 & @rdi ^ -@r11 ^ @rdx ^ @r10)  { test_statement(0xB6D);  /* This is a comment */ } else { test_statement(0x1835);  break; }
$error$
$end$
2163
 if (@rsi + @r12 >> $ip >> @rbp >> (@r10) & +@r9 << @r12 >> ~-@rbp ^ 1 >> -$ip <> @rdx + @r8 | $ip ^ @r13 & @r12 & 0y11)  { test_statement(0x5B5);  if (@r13 & -@r12 ^ 0n6((@rsi ^ @r12)  { test_statement(0x25F3); } else { test_statement(0x320); } } elsif (@rbp >> @r8 ^ ~0y1110 >> 0y1100 | (~@rsp) >> 11 ^ $teb & @rdx ^ 0y111 ^ @rsp((~@r10 << 0x0) { test_statement(0x18CF); } elsif ($teb & $buffer ^ @r9 ^ $buffer | @r8 = @rsi & 0y10011) { test_statement(0x546); }
$error$
$end$
2164
 if (@r9 << $ip << $thread & $proc << 0x5)@r9 << $ip << $thread & $proc << 0x5)  { test_statement(0x31C); ; } elsif (~@rdx >> @r11 >> +@rbp & -@r11 >> @rsp & @r13((($buffer) & $buffer & @r13 ^ @rsp >> ~@r13) { test_statement(0x119);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | 0x0 | $teb ! @r10 | 0x0 | $teb) ; } else { test_statement(0x171C); }
$error$
$end$
2165
 if ($buffer + 0y101 << @r13 >> @r10 << @rdi ^ @r13 << @rbp ^ ($ip) & (@r12) | @rdi >> @r13 >> @rbx & $buffer & $proc | @r8 >> 6 & @rdx <= @rbx + $thread << @rax << @r12 & $thread & $proc >> @r12 & 0y1011 & @r13)  { test_statement(0xC5E);  while  ($thread < @r13 & @rdx ^ $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 << -0n6 >> $proc & @r9 >> +@rsp | +0y111 >> @r9 ^ 12 ^ @rsi ! @rax >> $buffer & @rbx >> @r11 & @r9 ^ $buffer >> 14 | $proc >> @rsi & @rbp) { test_statement(0x1683);  while  (@rax ^ $ip @rax ^ $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread >> @rdi & @rbx ^ @r11 & @rsi)0n6 ^ @rbx & @rdx ^ $proc) { test_statement(0x471);  /* This is a not closed comment } else { test_statement(0xB21);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ++@r10 ^ +$proc | @rax >< @rsi | @rbx) ; }
$error$
$end$
2166
 if (0x7 + @r9 ^ -@rdx $proc + @r11 << @r9 ^ $proc << ~$teb >> @r9 >> @rdi)  { test_statement(0xAF2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ($teb) ^ 0x5 ^ 7 | ($proc) <= $ip) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rax((@rsi) ; } elsif (@rax << @r11 & @r8 >> (@r13) & 6 <= $proc ^ @rsi ^ @rax & @r9 | ~+0n17) { test_statement(0x982);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 ^ @r10 | 6 | @r12 <= -0x12 ^ $buffer | @r11) ;  break;  if (+~0n11 > $thread)  { test_statement(0x8D4); } elsif (-@r13((@r8) { test_statement(0x8AE); } elsif (@r13 != @r13) { test_statement(0x36F); } else { test_statement(0x10EE); } } elsif (0y1110 & @r12 ; 0y1110 & @r12) { test_statement(0x436);  while  (@r9 | @r11 ! $buffer | @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2167
 if (0x5 + $proc >> @rbp << @r9 >> (10) & $ip >> @r10 & @r8 & +@r9 & $buffer ^ @rdi))$thread + @r13 << @rbx << 0n2 & @r9 >> @r10 & $buffer & @rbp)  { test_statement(0x25AB); }
$error$
$end$
2168
 if (@rax << $teb << @rdx >> $proc << 0x11 >> 0x8 ^ @r8 >> @rbx > @rax << $teb << @rdx >> $proc << 0x11 >> 0x8 ^ @r8 >> @rbx)  { test_statement(0x505); }
$error$
$end$
2169
 if (@rsp + @r12 << @r12 << $proc >> @r9 << @rbx >> $teb >= @rdx + @r10 >> @rdx << ~@rdi & 0xC & +$teb & 16)  { test_statement(0xE21); } else { test_statement(0x2260);  /* This is a comment */  break;  /* This is a comment */ ; }
$error$
$end$
2170
 if ($buffer & $teb >> 22 & @rsi >> @rbx | $proc << 0y111 >> ~0y101 & @rsi >> $proc & @rbp | @rbx >> @r11)$buffer & $teb >> 22 & @rsi >> @rbx | $proc << 0y111 >> ~0y101 & @rsi >> $proc & @rbp | @rbx >> @r11)  { test_statement(0x2251); } elsif (0xE >> 10 >> $proc @r9 << $thread >> ($teb) & @rax | (0n19) & @rsp & $teb ^ @rbx & @r12 ^ @r8) { test_statement(0x19AB); } elsif (2 ; @r9 ^ (0x9) ^ @rax | 0n2 ^ $ip) { test_statement(0x1368);  if (@r9((7)  { test_statement(0x185B); } else { test_statement(0x14F5); } val = $proc | $buffer ; }
$error$
$end$
2171
 if (+@r8 + $teb >> $teb == @r9 << $thread << @r12 ^ @rsi >> @r8 & @rbp & @r11 & @rax | -$teb >> @rsp | @r11 >> $teb & @r13 & 0y10000)  { test_statement(0x6E5); } elsif (@rax << $thread >> -@rbp >> @rax & @r8 >< @rax << $thread >> -@rbp >> @rax & @r8) { test_statement(0x10CF);  /* This is a comment */ } elsif (+~@rdi ^ 0y10 & +@rsi)+~@rdi ^ 0y10 & +@rsi) { test_statement(0xA9B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx >< $proc) ; } elsif ($buffer & @r9 ^ $ip | $ip ^ 22 | (@r12) | $proc((@r12) { test_statement(0x16CF); } elsif (@rbp = @r9 ^ @r8 | $teb) { test_statement(0x128); }
$error$
$end$
2172
 if ($proc + +~$buffer & $ip << ~@rsi >> @rax != @rdx & -$buffer << ~@rax ^ @rax & 12 >> +@r13 & @r12 & @r13 ^ $thread >> $ip ^ @r11 & @rbx)  { test_statement(0x127E);  break; val = $teb ^ @r11 | 0y1010 | 0y1010 ; } elsif (@rsi << $thread >> @rbx & @r13 >> @r12 & @r9 & @rdx ^ 0y111 >> $teb ! @rbp << $ip ^ @r8 & @rax ^ @rsp ^ $proc | ~@r8 & @rsp & @rsp) { test_statement(0x214); ; } elsif (@rdi >> $buffer | @rdi ^ @rbp | $teb | ((@rsi)))0n6 ^ $teb & 0n16 ^ @rax ^ 0y110 | @r10 ^ -@rbx) { test_statement(0x1253);  if (@r12 >= @r12)  { test_statement(0x4A8); }  for (val = 10; @r11)@rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y1100 & $proc | -$proc == 0x13 & @r9 | @r10) { test_statement(0x19EA); } elsif (+$buffer ^ ++@rax == $thread | @rsi) { test_statement(0x269E); } elsif ((@rbx) < (@rbx)) { test_statement(0xB08); }
$error$
$end$
2173
 if (@rbp >> ~@rsi << $thread | $teb << @r12 >> @rdx >> 4 ^ @r11 & @rbx ^ $ip & @r9 = @rsp << (-$buffer) << 0y1010 >> $ip & 0y1011 ^ -@r10 << @r13 & @rbx ^ -+@rax >> @r12 & 0xC ^ 0y100 & @rdi ^ @r11 ^ 0x2 | 5 >> $ip)  { test_statement(0x1977);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer & $buffer >< 0y1 ^ $buffer ^ ~$ip) ; } elsif (0y1100 << @r10 ^ @r8 & $thread & 0n14 ^ 0x3 & @rbp ^ @r10 ^ $thread | @r9 >> @rdi | @r11 & $proc <= 0y1100 << @r10 ^ @r8 & $thread & 0n14 ^ 0x3 & @rbp ^ @r10 ^ $thread | @r9 >> @rdi | @r11 & $proc) { test_statement(0x1FBE);  if ($buffer ^ (@r13) | @rdi)$proc | $teb)  { test_statement(0x3CE); } else { test_statement(0x22AF); }  /* This is a not closed comment  if ($thread == @r8)  { test_statement(0x26A4); } elsif (@r9 ; ~~@r10) { test_statement(0x2649); } elsif (@rbx >< @rbx) { test_statement(0x2165); }  // /* This is a comment  } elsif (+@r10 ^ $teb ^ $thread ^ $thread | 0n14 ^ @rdx)+@r10 ^ $teb ^ $thread ^ $thread | 0n14 ^ @rdx) { test_statement(0x19DA);  break; } elsif ($buffer ^ @r12 | ~@r8 | @r12 ; 0y10011 | +@r10 | 14) { test_statement(0x251D); }
$error$
$end$
2174
 if ($proc + 0x11 != $teb >> @r8 & @rbp & @r8 >> 0x0 & @rdx & $proc | (@r10) << @r12 >> @rsp >> -15)  { test_statement(0x1E99); } else { test_statement(0x1F7B); }
$error$
$end$
2175
 if (+(@r10) >> $teb << @rsi & 0y100 >> @rdx >> @rsi & @rdi >> ~@rbx & @rax & @rdx == +(@r10) >> $teb << @rsi & 0y100 >> @rdx >> @rsi & @rdi >> ~@rbx & @rax & @rdx)  { test_statement(0x1F52);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ; @rsp) ; } else { test_statement(0x768);  // /* This is a comment  }
$error$
$end$
2176
 if ($thread >> $thread ^ (@rbp) << (-(@r9)))$buffer + @r12 << $thread & @rbp << @r13 >> 0n1 & @r11 & ~@r12)  { test_statement(0x2566);  // /* This is a comment  } else { test_statement(0x15CB);  for (; @r11 | @rsi | @rsp >= @r8 ^ $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rbp | ~0n0 == @rbp | ~0n0;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
2177
 if (@r11 + @rbp | 0xF << $teb ^ 0x4 >> @rdx ^ 12 ^ 0x13 ^ 0n1 | @r11 | $buffer ^ $buffer ^ @rdx))@r11 + @rbp | 0xF << $teb ^ 0x4 >> @rdx ^ 12 ^ 0x13 ^ 0n1 | @r11 | $buffer ^ $buffer ^ @rdx)  { test_statement(0x91F);  This is a not opened comment */ ;  /* This is a comment */ } elsif (@rbp >> @rdi >> @r8 & @rdx & $thread | (-@r12) >> $thread & @rbp ^ @r11 ^ @rsi ^ @r11 @rbp >> @rdi >> @r8 & @rdx & $thread | (-@r12) >> $thread & @rbp ^ @r11 ^ @rsi ^ @r11) { test_statement(0x1703);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 ^ @rbp | ~0x3))$buffer ^ +@r9 | ~7) ; }
$error$
$end$
2178
 if ($ip | -@r11 << -$ip & @r9 ! @r10 << @rdi << 17 & @r10 << ~@r8)  { test_statement(0x2256); } elsif (@r8 << 0y11 >> 0n16)@r8 << 0y11 >> 0n16) { test_statement(0x1D19); } else { test_statement(0xF3A); }
$error$
$end$
2179
 if (@r8 + ~0y10000 << 0y10000 ^ @rbp << $thread ^ 0 & (-~0y11) & @r12 ^ @r11 ^ $thread | @r10 << @r10 & 0n1 >> @r10 & 0n5 | 21 >> @r12 & 0x2 & $teb | @rsi | @rsp ^ @rdx((@r8 + ~0y10000 << 0y10000 ^ @rbp << $thread ^ 0 & (-~0y11) & @r12 ^ @r11 ^ $thread | @r10 << @r10 & 0n1 >> @r10 & 0n5 | 21 >> @r12 & 0x2 & $teb | @rsi | @rsp ^ @rdx)  { test_statement(0x88E);  for (; $buffer == @r13 | @r13 | 0y1 | +@rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rdx == @r11 ^ @rsp | $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xB5B); }
$error$
$end$
2180
 if (@rdi ^ -@r13 >> @r13 >> 0x1 & @r12 ^ @r13 >> @rbp & @r13 ^ @r11 & 0x6 ^ @rsp ^ -0y11 >= @r13 + ~@rsp << 0y1011 << @r9)  { test_statement(0x1BE4); }
$error$
$end$
2181
 if ($buffer << @rbx << $ip >> @rax >> @r9 >> +~@r13 | $thread >> $thread >> +@r11 | ~@rsi >> $ip & @r9 ^ @r10 & 0y10010 ^ $thread ^ @r10 | @r10 & @rbx ^ @rdx < @r9 + 12 << @rsi << @r9 ^ (@rdi) << 0n16 ^ 0xF)  { test_statement(0x87A); }
$error$
$end$
2182
 if (-@r10 + +@rbp << @rdi >> ~-$proc ^ (@r8) & +@r12 = -@r10 + +@rbp << @rdi >> ~-$proc ^ (@r8) & +@r12)  { test_statement(0xCBA);  for (; +@r8 | $proc | @rbp > +@r8 | $proc | @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsi << @r9 >> ~@r10 <= $buffer >> @rsi >> 0n0 | @r12 >> @rsp & @rdx ^ $buffer & @r13 ^ $thread ^ $buffer) { test_statement(0x1053);  for (val = +@rsi | @rax; @rax | 0y10 | 0x1 >= $thread ^ @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
2183
 if (-@r13 + @rbp << $proc >> @r10 << ($proc) ^ @r8 >> $ip >> @r11 & @rbx >> 21 ^ @rdi ^ @r12 | 0x6 << @rax ^ @r9 & $proc & ++0n12 | @r13 >> (0n4) & @rbp ^ ~@rdx & @rbx ^ --$buffer <= -@r13 + @rbp << $proc >> @r10 << ($proc) ^ @r8 >> $ip >> @r11 & @rbx >> 21 ^ @rdi ^ @r12 | 0x6 << @rax ^ @r9 & $proc & ++0n12 | @r13 >> (0n4) & @rbp ^ ~@rdx & @rbx ^ --$buffer)  { test_statement(0xB64); }
$error$
$end$
2184
 if (0x8 + 0y10 | $teb & @rdx >> @rbx | @rbp >> 0x11 | @r13 & @rsp | @rsp | @r11 <> @r10 << 10 << @r8 ^ $teb & $thread ^ $teb >> 0y100 & @rax & @r10 ^ ~$teb & $teb ^ 0n15 ^ 0x8)  { test_statement(0x1EF8); } else { test_statement(0x1F27);  This is a not opened comment */ }
$error$
$end$
2186
 if ((+@rsi) + 0y1000 << 13 >> 17 << 0x12 ^ @r8 << @r11 & ($thread) & ~-$teb & @r12 < 11 + 0y100 << 0n1)  { test_statement(0x67F);  This is a not opened comment */ } else { test_statement(0x117); }
$error$
$end$
2187
 if (+@rsp << ~@rbp | ~@rsp << ~@rsp >> @r9 >> (@rdx) & @r8 >> 1 ^ @rax >> 0x3 & @rsp & 0xE))@r10 + @rax << @r13 >> @r10 << ~+@rbp >> @rdi >> $ip)  { test_statement(0x1CF3); }
$error$
$end$
2188
 if (@rdi << (@r12) >> ($teb) << @rdx >> @r9 & (@r9) << @r10 ^ 4 << @r12 >> @rdi & +-@rbp >> +@r10 & @rbp & 0y10000 > 14 >> @rdx << @r12 ^ @rbx & $thread >> @r12 ^ 0x3 & $teb ^ ~@rsi ^ @rax)  { test_statement(0x1E0D);  while  (@r11 ^ $thread ^ $ip((0x9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rbx ^ @r8)+@rbx ^ @r8) ; } else { test_statement(0x2238); }
$error$
$end$
2189
 if (@r9 << @rdi << $teb >> @r8 << -($proc) >> @r13 ^ @r9 >> @rdi ^ -@rsp & (@rax) & @r12 ! @rdi + $thread >> $proc << 0n3 ^ @r9 | $proc & $buffer >> @r12 ^ @rbx)  { test_statement(0xBFE);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0xE | $ip | $proc ; @r13) ; } elsif (@rbx & @r12 >> @rsi ^ @r8 >> $thread >= @rbx & @r12 >> @rsi ^ @r8 >> $thread) { test_statement(0x3BF); @rax = @r9 & @rdx | 0n17 ^ @r9 | @rsp | ~@r10 ; } elsif ($teb >> -@rdi & @r12 & 0n8 == @r10 ^ $buffer & @rbx) { test_statement(0x2050); } elsif (@r10 & @rsi ^ @rax ^ 10 != $teb ^ 0y1010 ^ 0y1 | @rbx ^ +0n13) { test_statement(0xE3);  This is a not opened comment */  /* This is a not closed comment  /* This is a not closed comment } elsif ($teb | ~@rbp ! ~$proc) { test_statement(0x2201);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx = @rbx) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip)@r10) ;  for (; @rbp >< @r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rdi <> 0y100;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n17 < 0n17) { test_statement(0x1A06); } elsif (@rax > @r12) { test_statement(0x241B);  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
2190
 if (@rdi << ~0n16 << ~@r12 >> @r9 >> +($buffer) >> @rbp & +~@rsp << $buffer($buffer + @r8 >> 21 | @r9 ^ 5 >> 0y11 ^ @r10 ^ @r9 | (@rax))  { test_statement(0x26EB);  This is a not opened comment */  break; } elsif (@rbp << (-$thread) >> @r13 >< $ip >> 0n9 | 11) { test_statement(0x1ED6);  while  ($thread ^ $teb | @r13 | 0n0 ; $thread ^ $teb | @r13 | 0n0)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  for (val = 10; @r9 < @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rbp != @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  while  (+($ip) >< $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x11B5);  if (@rdx ^ @r8 | $ip | ~@rsp <= @rbp ^ @rax)  { test_statement(0xFD9); } elsif ($buffer != @rbp) { test_statement(0xFAE); } else { test_statement(0xA75); } }
$error$
$end$
2191
 if (@r9 + $buffer >> @rbp ^ @rsp >> 0n6 >> -~$teb & @rax >> @rbx ^ @r12 >> @r9 ; $proc & @rbp << @rsp >> $buffer & @rbp >> @r8 & $ip | @rbp << 0y1101 >> @r8 >> @rdx)  { test_statement(0x2084);  while  (@rbx & 0y10 ^ @r13 | $thread | @rbp | 0y10000 <= @rbx & 0y10 ^ @r13 | $thread | @rbp | 0y10000)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1FF9); val = $proc & @r10 | 0y1100 ^ @rsp ; }
$error$
$end$
2192
 if (@rsp << @rsi << 0n2 >> @rdi << 0y1110 & @rdi << @rdx | @rdi << $teb <= 0x4 + (-@r8) << $proc & @rsp << @r9 & @r11 >> @rdi)  { test_statement(0xD1E);  for (; @rdx & 0x0 ^ @rsp | $proc ^ (@rbx) < @rdx & 0x0 ^ @rsp | $proc ^ (@rbx);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb >> @r13 >> @rdi ^ 0y0 | @rsp & @r12 ^ @rax = $teb >> @r13 >> @rdi ^ 0y0 | @rsp & @r12 ^ @rax) { test_statement(0x2110);  while  (@r10 | $ip >= 0y111 ^ @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer >> @r13 & @rsi @r11 & $teb ^ @rdx | $ip) { test_statement(0x98B); ;  for (val = 10; @r8))@r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
2193
 if (0x6 >> +$proc << $teb & @r12 << @r13 & @rax >> ~@rbp ^ @rbx & +@rbp | @rbp << $thread ^ ++0x11 & @r11 & $teb | $teb >> @r10 < 5 + $proc << @rbp >> +@r12 << @r8 & @rdi >> @r10 >> @r11 ^ @rsp << (@rax) >> ~@rdi & $ip)  { test_statement(0xA84); }
$error$
$end$
2194
 if ($buffer + $proc << @r9 << @r10 & @rbx >> @r8 >> (0n15) | 0n7 << ~@r11 & 0x8((@r12 + @rsi << @rax ^ @r8 << $buffer ^ @r12)  { test_statement(0x43B); } elsif (@rdx << 0y111 == ~0y1001 << $buffer ^ @rdx >> -@rbx & @r12 & @r13 | $teb >> @r10 & $thread) { test_statement(0x136C);  // /* This is a comment  } elsif (~(@rsp) >> -@r13 ^ @rdx ^ 5 ^ 0x4 | $ip ^ @r11 ^ (+@rbp) | @rsi == @rdi & @r10 ^ @r9 & $buffer | @r8 ^ 0y110 ^ -$buffer | 3 ^ +$proc) { test_statement(0x75A); } else { test_statement(0x186B); val = @r13 ^ @r11 ^ 0x12 | $buffer | 0n18 ;  This is a not opened comment */ }
$error$
$end$
2195
 if (20 + @r8 | $proc >> 0x10 >> @r13 & $buffer & 0y101 ^ 0 >> $thread | @rdi & -$ip & @r11 < $proc << @r8 << @r9 & 21 ^ @rsp << @r8 >> ~$teb >> 6 | $proc << @rsi >> 0x13 & @rbx >> @r12 & 0y1101 | ~@r10 >> ($thread) ^ @rsp)  { test_statement(0x19AC);  This is a not opened comment */ } elsif (@rsp ^ $proc >> $proc & @rsp))@rsp ^ $proc >> $proc & @rsp) { test_statement(0x1436); } elsif (0 & @r12 & 0y1011 = 0 & @r12 & 0y1011) { test_statement(0x8E9); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n9 <= 0n9) ;  for (@rax = @r12; $teb == $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2196
 if ($thread + @rsp << 0n19 & @r8 >> 22 | @rdx << @rsi >> ((@r8)) >> ~-$thread & @r11 >> @rbx ^ @r8 >> @r13 & $buffer & ($buffer) | $thread & @rbx ^ 0n18 & @r9 > @rdx + $teb << 0y1010 & -@r9 >> 0n5 & 0x2 >> $thread ^ @rsi & $thread & 23 ^ @rsi >> +$teb & $ip ^ 0y10011 & @r8)  { test_statement(0x153E); } elsif (@rbx & ~$thread | @rbx > @rbx & ~$thread | @rbx) { test_statement(0x1011); } elsif (0xC & @r9 | @r8 != @rbp & $ip ^ @rsp) { test_statement(0xD12);  This is a not opened comment */  for (; @r13 ! @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi & @r10 | 5 | @rax | $buffer = $proc ^ 0x1 | @r12) { test_statement(0x1E6B); @rax = 0n7 ; } elsif (@rdi | @rbp | @r13 != @rdi | @rbp | @r13) { test_statement(0x1415); } elsif (0xF > 12) { test_statement(0x256D); } elsif (4 >= 4) { test_statement(0x1BFC); } else { test_statement(0x11AD);  /* This is a not closed comment  while  (@rbp)@r13 | 13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2197
 if ($thread + @r11 ^ $buffer << 0n5 >> $buffer >> @rdi & @rsi >> 0xA & @rbx | @r12 << @r12 ^ @rsp >> @rax & $proc ! $teb | 14 << ($proc) & 0y1001 & @r13 ^ @r10 >> +0n9 | @r13)  { test_statement(0xB8C); } else { test_statement(0x2005); @rax = @rdx & @rbx ^ -@rsi ^ @rbx ; }
$error$
$end$
2198
 if (4 + 11 >> $buffer << $proc ^ @rsp << @r9 <> 0xB >> @rdx ^ ~$teb >> @r12 & @rsp ^ +@r9 >> @rbx & @rax ^ @r13 & 0x1)  { test_statement(0x13FC); } elsif (+~$ip & $teb >> (@rdx))+~$ip & $teb >> (@rdx)) { test_statement(0x445); } elsif (@r9 ^ $buffer ^ $proc >< 0n14) { test_statement(0x13CB); } elsif (0x2 & @r9 != @rsp | -@rdx ^ (~$ip) | @r12) { test_statement(0x53F);  break;  if ($ip >< @rax)  { test_statement(0x2212); } elsif (@r10 ! @rbx) { test_statement(0x1FEA); } } else { test_statement(0x1804); }
$error$
$end$
2199
 if (15 << 7 << @rax >> @rbp << @rax >> @r13 ; 15 << 7 << @rax >> @rbp << @rax >> @r13)  { test_statement(0x1B1A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n11 ^ $proc ^ -@rax > $buffer ^ 7 ^ @r11 | $ip) ; } else { test_statement(0xE63); }
$error$
$end$
2200
 if ($thread + $ip ^ $proc >> -0y101 >> ~~~@rdi & ~0xA >> $teb & @r9 & -~@rdx ^ @r9 & @r11 ^ -@rdi & @r8 < 12 & @r12 << @r13 | 0y1110 << $ip ^ @rbx ^ $ip & @rax ^ (@rdx) ^ 0n3 | @r9 >> $ip)  { test_statement(0x13E8);  This is a not opened comment */  /* This is a not closed comment } else { test_statement(0x1398); }
$error$
$end$
2201
 if ($thread & ~~7 << @r10 & @rbp >> @r13 ^ @r12 >> $thread ^ $teb >> -$proc | @rdi >> $buffer >> $thread ^ 1 >> +$proc))0y1000 + @rbx << 0y11 << @rsp)  { test_statement(0xFE6); ;  This is a not opened comment */  break;  // /* This is a comment  } elsif (@r13 << @r10 >> $buffer >> @r10((@rsp << @rsi) { test_statement(0x149D); } else { test_statement(0xBC1);  /* This is a comment */  /* This is a not closed comment }
$error$
$end$
2202
 if (@rdi & @rdx & @rsp >> @rdi & @r13 & @r8(@r9 + -$proc << 0y100 << ~@rdx)  { test_statement(0x2514); } elsif ($buffer & 0n19 & @rsi & @rbp | 0y11 >> @r13 & +@r13 & @rsp ^ 0n2 & @rsi | @r8 ^ -@r11 ^ @r10 | ~0n10 ^ @r10 | (@rsp) $buffer & 0n19 & @rsi & @rbp | 0y11 >> @r13 & +@r13 & @rsp ^ 0n2 & @rsi | @r8 ^ -@r11 ^ @r10 | ~0n10 ^ @r10 | (@rsp)) { test_statement(0x2564); } elsif (@r13 ^ 0n9 & @r13 | @rsp ^ ~@r8 ! @rdi | $teb & @rbp ^ @rsp) { test_statement(0x20FB); ; }
$error$
$end$
2203
 if (@r9 << @rsp >> @rbp >> (-11) >> $ip & @rsp << $buffer >> +@r13 >> @rax ^ $teb >> +@rbx >> @r10 <= 0x13 >> ~@rbp ^ $ip ^ @rbp)  { test_statement(0x6D8);  // /* This is a comment   for (@rax = ~@rbx ^ @rdi; ~$ip | 0x2 != @r10 ^ @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2204
 if ((@r12) & @rax << $buffer >> @rsi >> @r10))0y10001 + 0x5 << @r11 << 0n2 & @r13)  { test_statement(0xDDF); }
$error$
$end$
2205
 if (-0n0 + 21 >> 0x13 >> @r10 ^ $teb(@rsi << @rbx | 0y1010 << ($ip) & 0y11 >> @r12 & @r12 & @rdi | @r8 >> @r9)  { test_statement(0x1C15); } elsif (@rsi << ~@r8 ^ @r13 >> $thread & @r10 | @r11 ^ ~$proc ^ $thread | @rbp & @r11 ^ @r11 ^ 0xD))@rsi << ~@r8 ^ @r13 >> $thread & @r10 | @r11 ^ ~$proc ^ $thread | @rbp & @r11 ^ @r11 ^ 0xD) { test_statement(0x72D); } elsif ($buffer >> $proc & @r12 & @rbp <= $buffer >> $proc & @r12 & @rbp) { test_statement(0x94E); }
$error$
$end$
2206
 if ($proc + @r8 ^ 0x13 & $buffer >> $teb | $teb >> @r10 & @rdx >> @r13 & @rdx == @rsi << @r11 & @rdi << ($buffer))  { test_statement(0x1D96);  /* This is a comment */ } elsif ($ip << $ip >> +0x5 >> --@r8 ^ $ip >> 0n8 ^ $ip & 0y1110 ^ +@rbx))@r9 << 0n16 >> @r13 >> ~@rdx ^ @r11 >> @r12 ^ 0y1010 ^ @rdi) { test_statement(0x1490); }
$error$
$end$
2207
 if (@rax & 17 << $proc >> @r10 & @rax & @rdi & $buffer ^ $thread ^ @r11 >> @r10 >< @rax & 17 << $proc >> @r10 & @rax & @rdi & $buffer ^ $thread ^ @r11 >> @r10)  { test_statement(0x90D); }
$error$
$end$
2208
 if (-@rbx + @r8 << $thread != -@rbx + @r8 << $thread)  { test_statement(0x167A); } elsif (@rdi << $thread & 0y1010 ^ @rdx = @rsp) { test_statement(0x2B3);  for (val = 10; @rsp ^ $ip)@r10 ^ $proc | $thread | $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } else { test_statement(0xD0C);  for (; -$buffer | @rsp((~@r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx((0x13 | $teb) ; }
$error$
$end$
2209
 if ($ip + ~$buffer >> @rbx >> 3 & @rdx << $buffer & ($ip))@rsi << $thread << @r8 & @r11 << @r10 >> @rsi >> 7 & 0y110 & @rdx & @rsi ^ @r13 & @rdi ^ $buffer >> @rdi)  { test_statement(0x147B); } elsif (@rbx << $proc >> @rsp >> 23)0y10 >> @r13 ^ @r12 | +@rsi & @rsi & @r12 ^ +@rsp ^ $thread) { test_statement(0x634); }
$error$
$end$
2210
 if (@r11 + @rbp ^ @rbx << @r12 & @r11 >> @r13 & @rax | 0y10011 & 0x13 >> $buffer ^ $ip >> -@rbp ^ @r8 | @rdx & ($proc) >< (@r10) + $ip << -@r9 & @r8 >> @rdx >> @r10 | ~@rsi << @r11)  { test_statement(0x1635); } elsif (@rbx << 10 >= @rsp >> $teb & @rbx >> ~$teb ^ $ip) { test_statement(0x12C);  break;  // /* This is a comment  } else { test_statement(0x2416); }
$error$
$end$
2211
 if (@r10 + +0x9 >> @r12 | @rdx << @rdi >> -@r12 & 13 ^ @rsp >> @r10 & $buffer ^ 20 > @r10 + +0x9 >> @r12 | @rdx << @rdi >> -@r12 & 13 ^ @rsp >> @r10 & $buffer ^ 20)  { test_statement(0x13AA); } else { test_statement(0xE47);  break; }
$error$
$end$
2212
 if (@rax << @r12 | @r12 >> @r9 ^ @r10 >> @r9 & @r10 >= ~@r11 >> $proc >> @r11 & ~-@r9 << 2 | 0x9 << $thread | 0xC)  { test_statement(0x1923); } elsif (~(@r9) >> ~@r9 ^ @rsi >> 0n17 | +@r10 >> 0y1001 | -@rsi & @r10)@rsp << (@rsp) & ~~@rdi | @rdi | ~(15) & $buffer | @r8 | -@rbp) { test_statement(0x207C); } elsif (@r13((@r13) { test_statement(0x5AE);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 | @rbx > @r13 | @rbx) ;  This is a not opened comment */ } else { test_statement(0x1BA3);  /* This is a not closed comment  /* This is a comment */ }
$error$
$end$
2213
 if (0y111 << 0x7 << +@rsp >> @rax << @rdx >> @rbp >> $ip | @rax >> @rbx >> $teb & 0n14 >> @r12 >< +@r11 + 10 << @r12 << @r9 >> $thread << @rbp >> $buffer >> $proc ^ @r8)  { test_statement(0x2019); }
$error$
$end$
2214
 if (@r8 + @r13 << $teb >> $thread ^ ~@r9 >> $buffer & 0xD >> 0y1011 & @r13 & @r8 ^ @rsi >> @r10 ^ $buffer & @rbp | 0xC << $proc <= $buffer << @rdi << @r13 & 0n14 << @rdx >> @rax >> @rbx ^ -$buffer << @rsi >> +@r13 >> @rax)  { test_statement(0x37D); }
$error$
$end$
2215
 if (@r9 << $thread & 5 <> $ip + (0n15) >> +@rbx << $buffer)  { test_statement(0xCA7); } elsif (14 << @r12 >> ~$ip >> @rsp & @rax >> @r10 ^ @rsi | @rax >> @r13 & @rsi & @rdi ^ @rdx & ~@rbx ^ @rsi | @rbp & $ip ^ @r10 > 14 << @r12 >> ~$ip >> @rsp & @rax >> @r10 ^ @rsi | @rax >> @r13 & @rsi & @rdi ^ @rdx & ~@rbx ^ @rsi | @rbp & $ip ^ @r10) { test_statement(0x26A7); }
$error$
$end$
2216
 if (@r12 + 0n11 | 0n1 >> @rax >> @rax | ~$teb | @r10 & @rbx | ~+@r8 ^ @rsi ! @r11 + $ip >> $proc >> @r9 & -$teb << @rax ^ $ip >> +@r13 >> $buffer & @rdi >> $ip ^ 4 >> @rbx & +0n15)  { test_statement(0x1E0B);  while  (@rax >< ~@r11 ^ @r13 ^ $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -$ip ^ $proc | 0y10 | @r8 -$ip ^ $proc | 0y10 | @r8) ; } elsif (~0n2 >> $teb ^ @rdi | ~+-@rbp | ~-(+@rbx) | @r10 | @rbx < ~0n2 >> $teb ^ @rdi | ~+-@rbp | ~-(+@rbx) | @r10 | @rbx) { test_statement(0x12B7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ^ $buffer | ((@rax)) <> +@r10 ^ 7 | ~$ip) ; } else { test_statement(0x20C6); }
$error$
$end$
2217
 if (16 + -$thread << @rdi << 0x9))@r11 + 12 << $ip << @r8 & @r8 << @r12 >> $buffer >> @r9 & @r9 >> 0n17 & @r13 & +@r12 ^ @rsp >> -0n12 | @rbx << @rsp & @rdx >> @r9)  { test_statement(0x10E2); } elsif ($proc >> @r10 ^ $proc >> @r11 ^ @rbx ^ @r11 > 0y0 >> 0y1001 | $thread >> +-0xA & 0xB ^ @rsi) { test_statement(0xB10);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 <= @r9) ; } else { test_statement(0x44B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc ^ $ip)@rbp ^ @rbx | @r13) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip | @r11))$ip | @r11) ;  for (; @rsi != (@r8);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2218
 if (@r12 << @r9 << (@rax) >> @rsp << @r9 >> $proc >> @r10(@r12 << @r9 << (@rax) >> @rsp << @r9 >> $proc >> @r10)  { test_statement(0x10DC);  /* This is a comment */ } else { test_statement(0x798); }
$error$
$end$
2219
 if ($proc + @r13 << @r10 & @rsi << @r12 & @r10 >> $thread | @rsp >> @rbx >> 0xD ^ @r12 >> 0n5 | @rax >> $buffer & @rsp | @rax & ~~@rsi ^ @rbx | (+@r10) ^ $proc(@rsi + @rdi >> @rdi << @r12 & @r12 << $proc >> -$teb >> @rbp & @r11 >> @rsp)  { test_statement(0x175D); } elsif ($buffer << @r12 >> 2 >> @rbx ^ 0y0 & $buffer ^ @r9 & @rbx ^ @rbx ^ $proc <= $teb << $teb & 1 >> +$teb & -@rdi ^ $buffer & @rax & $proc ^ @rdi ^ @rbx ^ @r8) { test_statement(0x1395); } else { test_statement(0x2467);  /* This is a not closed comment }
$error$
$end$
2220
 if (@rdx << 0x7 | 0y1011 << 0y1010 >> $thread >> -$teb ^ $teb >> 0x4 ^ $buffer & 0y111 > +2 << $teb << $proc)  { test_statement(0x1614);  /* This is a comment */ } elsif (@rsi ^ @r9 >> +~@r9 & -~$teb & ~+$ip ^ @r10 & 0y1100 | @rdx & @rdi ^ @rbp < @rsi ^ @r9 >> +~@r9 & -~$teb & ~+$ip ^ @r10 & 0y1100 | @rdx & @rdi ^ @rbp) { test_statement(0xAF5);  /* This is a comment */ } elsif ((-$teb) & $thread ^ $teb & $proc ; @rsp >> @r12 & -$ip ^ ~$ip & (2) | @rax ^ @rsi ^ 0xC) { test_statement(0x1D84);  if (0y10000((0y10000)  { test_statement(0x20C8); }  if (@rbx))$buffer)  { test_statement(0x114C); } elsif (0xC != @r13) { test_statement(0x26E7); } else { test_statement(0x2254); } } elsif (@r9 | 21 | @rbx | @rbx <= @r11 & $teb ^ @rdi ^ @r12 | $buffer | -@rsi) { test_statement(0x1BFD);  while  (@rax ; 0n2)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (~17 = ~17) { test_statement(0x166F); } else { test_statement(0x257E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (+~4) != +@r9 ^ @rdi) ; }
$error$
$end$
2221
 if (@r9 + @r10 >> @r13 << @r9 >> @rax >> @rbx & @r8 << 0x9 >> @r10 & (@rbp) ^ @rsp & -0n12 ^ @r9 >> @r10 & 0x4 ^ @rax & 3 | $ip((12 << ~-@rax << @r13 & +@rsp & @r8 & @rbp)  { test_statement(0x21E0); }
$error$
$end$
2222
 if (@r12 << @r12 >> 0n6 << 0x7 >> $ip ^ @r12 & @rax >> @r13 & (@r9) ^ 0y1000 >> @rbx & @r10 & @rsp >< +0n3 >> +-@r8 >> 14 >> @r11 & @rdi << 0y1100 >> @rdi)  { test_statement(0x251C); } elsif (@r12 >> @r8 >> ~(16) ^ -@rsp >> @rsp & @rdx & -@r13 ^ @rdx | @rbx | $proc & 0y10001 > +$thread << @rbx ^ @rsi >> @rdx & 16 ^ ~@r13 & @r8 ^ @r8 ^ @r10) { test_statement(0x86B); } elsif (0 >> @r9 & @r8 ^ @rbp ; 0 >> @r9 & @r8 ^ @rbp) { test_statement(0x1A1D);  while  (@rsp <> @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rsi)@rsi)  { test_statement(0x39C); } else { test_statement(0xDC1); }  /* This is a comment */  break; } elsif (@r8 ^ $buffer ^ $buffer < @r8 ^ $buffer ^ $buffer) { test_statement(0x229D); } else { test_statement(0x2B3);  /* This is a comment */ }
$error$
$end$
2223
 if (@r8 >> $buffer << +@r12 & ~@rdx ^ 0y1000 << $buffer >> 0n4 ^ 0xA = @r8 >> $buffer << +@r12 & ~@rdx ^ 0y1000 << $buffer >> 0n4 ^ 0xA)  { test_statement(0x2303); val = @r12 & $proc & @r12 ^ 0n19 ^ @rsp ^ @r10 | $thread ; }
$error$
$end$
2224
 if (@rdx + @r9 >> 15 << @rbp & +$ip << 0x12 >> $thread | @rsi >> 0x4 >> @r8(@rdx + @r9 >> 15 << @rbp & +$ip << 0x12 >> $thread | @rsi >> 0x4 >> @r8)  { test_statement(0x42B);  /* This is a comment */ } elsif (0x12 >> 0n19 >> -~@rbp & 0xB >> @rdx & @r8 & 0n7 ^ 0n15 & $ip ^ @r9 & @r9 ^ $ip ^ +~6 | $proc & @rsp ^ @r8 & @rax | 0n15 & @rbp > @rbx ^ -@r10 ^ @rdi ^ +@r11) { test_statement(0x9DF);  // /* This is a comment  } elsif (@r13 & $thread & @rbx ^ $teb & @rax < @r11 & @rdx) { test_statement(0x1746);  if (@rdi | @rax >< @r11)  { test_statement(0x133D); } elsif (@r12 == $teb) { test_statement(0x1CFB); } else { test_statement(0x18D5); } } elsif (@r8 & +$proc ^ $ip ^ +0y1011 | $ip <= ~21) { test_statement(0x16B9); } elsif (@r13 ^ @r11 | @r9 <= -@rbp) { test_statement(0x3A8);  for (val = 10; @r13 != @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2225
 if (@r10 >> $proc << @r13 | @r10 & $thread >> $ip ^ @r12 >> @rdi & 0x10 & @rax ^ $buffer ^ 0n9 | $proc ^ $teb ^ @rsp ^ $teb | 0n14 ^ @r9 ^ 12 ! @rax + @r9 >> @rbx ^ ~$ip << -0x6 & (@r12) ^ @rdx | ($proc) >> $thread & @r10 & $ip & $ip)  { test_statement(0x2B3);  This is a not opened comment */ } else { test_statement(0x2093); }
$error$
$end$
2226
 if ((+@r13) + -~@r10 << $buffer << 1 ^ -0x0 <> ~@rsp + @rsi << @rax | @rbx ^ @r12 >> @rbx & (@rsi) | $proc >> @rbx & @rsp & @r11 ^ @r13 & @rax ^ @rbp)  { test_statement(0xB12); ; ;  for (val = 10; @rdi != @r8 | (@r13);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc >> 22 | -0n0 & $thread | +@r9 ^ @r13 | @rax | (@rsi) | @r11((@r10) >> (@r12) >> @r12 & @r8 >> $proc ^ @rdx) { test_statement(0x265B); } elsif (0x3 & @r9 ^ @rdi ^ @r10 ^ @r9 != +@r9 >> $teb | ($thread) & 0y1110 ^ $thread ^ @rsi | $buffer ^ @r10 | @rbx) { test_statement(0x22CA);  if (0n2 | @r13 >< 0xC)  { test_statement(0xB04); } else { test_statement(0x1C7A); }  while  (@rdx >< $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip & @rbp | @rdx ^ @rsi(($ip & @rbp | @rdx ^ @rsi) { test_statement(0x2404);  // /* This is a comment   for (val = 10; ~@rsi(21;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@r11) ! 0n8) ;  /* This is a not closed comment  /* This is a comment */ }
$error$
$end$
2227
 if ($thread + (15) << @r8 ^ @rsi >> @r8 ^ (~@rbp) >> $teb | @rbx << @rbp((17 + @rbx << @rax >> @r8 << 4 >> 0n4 >> @r13 & $ip << @rdi & @rdx & $ip & @r13 ^ +23 << 0n1 >> $teb >> $proc)  { test_statement(0xF93);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb | @rbp | 0x0 >< $teb | @rbp | 0x0) ;  // /* This is a comment  }
$error$
$end$
2228
 if (4 << @r13 >> @rax >> @rbp | @r10 >> 0n15 >> 21 ^ @r12 ^ @rax & 0y10 | $buffer & @r13 ^ 0n3)+$buffer + @r12 << $ip ^ @rbp << 0y1001 >> $ip >> $buffer ^ @rsp >> @rbp & $buffer | $thread << 1 >> @rdx >> @rdx & (@rdi) >> @rsp & @r10)  { test_statement(0x524); }
$error$
$end$
2229
 if (@r13 & 0y1101 >> @rdx >> 0xB & $proc >> 0x5 & @r10 ^ @r11 << @r9 >> 0y1101 >> @rsi | (@r12) >> @rax & @r10 >> @rbp | $thread & ~(@rbx) ^ @rdx))@rbx >> 0n10 & 0n11 << @rsp ^ ~@rsp << @rsp >> $teb & @r12 | $buffer << @r11 >> 0y100 >> +@r12)  { test_statement(0x13EE); } else { test_statement(0x5F); }
$error$
$end$
2230
 if ($buffer + 0n2 >> $teb >> @r13 & @r11 << $ip >> @rsp ^ 0x7 | 0y10 & 3 & @rbx | @rax ^ @rsp ! 0x10 + $buffer >> @r12 << 0y10011 >> $thread >> @rsi)  { test_statement(0xCC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 & @rdi ^ @r13 ^ 0x2 | -~@r13 > +~0y1001 & @rsp | $ip | +@r8 | 23) ;  for (val = @r9 ^ @r12 | @rsp | @rax; 0y1000 | $teb(@r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif (@rdx >> (@rdx) >> @rsi ^ 0n6 & @rsp ^ 0y1001 <= @rdx >> (@rdx) >> @rsi ^ 0n6 & @rsp ^ 0y1001) { test_statement(0x23AE);  // /* This is a comment  } elsif (@r9 & @rsp & @rbp ^ @rbp & @rsi ^ @r10 < @r9 & @rsp & @rbp ^ @rbp & @rsi ^ @r10) { test_statement(0x429); } else { test_statement(0xDA5); }
$error$
$end$
2231
 if (0n18 << @rbp >> @rdx << @r9 >> @r11 & @r11 >> @r8 >> $buffer & $teb >> @r12 ^ ~+$teb << $thread & +$proc & @rax ^ -~$thread ^ @r9 & 0y10000 ! $ip >> +$buffer << @rdi >> @r8 >> 10)  { test_statement(0x179E);  /* This is a not closed comment  break; } else { test_statement(0x15CD); }
$error$
$end$
2232
 if (@rdx >> @rsi >> @rax & 0xF << +@r11 & @r8 ^ 16 << @r10 >> @rdi >> 0x6 | 4 << 0y0 & @r8 & @r13 >= $proc & 0n8 << @r10 & @rsi & $thread | @r13)  { test_statement(0xFC1); }
$error$
$end$
2233
 if (0n4 = @rdx & -@r8 << $ip & 0x9 >> @r8 ^ @rsp << ~$buffer >> 0x6 >> 13 ^ @r13 & @r10 & @rbp ^ $teb | (@rax) >> $buffer & @r10 & ($thread) & @r8)  { test_statement(0xF15); val = @rdx & (0x8) ; } elsif ($buffer << -0y1001 & ~@r13 >> @r10 & @rsp & @r8 <> @rsi << $buffer >> -@rdi >> ~(@r10) ^ @rdi >> $proc & @r8 & $buffer ^ $thread & @r10 ^ $thread ^ ($ip) | @rax >> (@r10)) { test_statement(0x1B08); } elsif (@rdx ^ 0n12 & --@rdi ^ @r9 | (0n15) | @rsp ^ @rsp | @r10 | 16 = (@r12) >> @rsi & @rdx ^ @rsp & $thread) { test_statement(0x235B);  /* This is a not closed comment  while  ($teb((+0x11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  /* This is a comment */ } else { test_statement(0x1307); }
$error$
$end$
2234
 if ($thread << @rdx >= 0y10 + ($proc) >> @rsi << $teb | @rax & @r9 >> 0x8 & @rdi & @r9 ^ $ip >> 0y100 ^ @rax & ~$teb)  { test_statement(0xB80); } elsif ($ip & ~0n4 >> @rbp & @r8 & $ip ^ @r13 & @r11 | ~@r12 >> 0xC ^ $buffer ^ @r12 | $thread & @rdi ^ $buffer ^ -$thread != $ip & ~0n4 >> @rbp & @r8 & $ip ^ @r13 & @r11 | ~@r12 >> 0xC ^ $buffer ^ @r12 | $thread & @rdi ^ $buffer ^ -$thread) { test_statement(0x20E); ;  while  (@rbx | @r12 @r8 | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp >> @r10 & @r12 & @rsi ^ (~@rsi) & $ip ^ -@rsi | 13 ^ $buffer | ($thread) ^ +@rdx | -@rsi | $ip))@r11 >> @r13 | $ip ^ $proc | 0y10011) { test_statement(0x1BA1);  break; }
$error$
$end$
2235
 if (@r8 + 0 << (@r11) >> $proc << 0n1 >> 0n2 & 0xB << ~@rdi & @r13 >> @r13 ^ 0n4 & @rax == @r8 + 0 << (@r11) >> $proc << 0n1 >> 0n2 & 0xB << ~@rdi & @r13 >> @r13 ^ 0n4 & @rax)  { test_statement(0xE73);  break; ; }
$error$
$end$
2236
 if (@r11 >> @r8 << 12 >> @r10 & @rbp << @r11 >> @r10 >> @rsp ^ $thread ^ $thread >> @r11 ^ @rbx == ~(@r11) + $thread << @rsp & 0n6 >> 0n9 >> @r8 ^ +17 << ~$proc & @r13 >> @r8 & @rbx | @r9 << @rax | @r9 & 0x0 & (+-@rbx))  { test_statement(0x2579); } elsif (@r13 << @rbp >> 0y11 0y0 >> $teb >> $proc & @rdi >> @rsp & +@rsi & @r8) { test_statement(0x2525); } elsif (~$teb >> 5 & @rax & +$teb | $proc & $thread ^ -@r8 ^ $teb ! $ip & 0n0 ^ @r11) { test_statement(0x21CE); } elsif (@r11 ^ -@rdi ^ 0n3 | @rsi | ~@rbp != -0y1111 & @r10 ^ @rbx) { test_statement(0x1E3B); }
$error$
$end$
2237
 if (@r9 << $proc << @r11 >> 0x6 >> @r13 & @rdx << @rax >> $thread & -@rbp >> @rbx & (0y10000) < $thread + $buffer & @rdx << @rsp)  { test_statement(0x101);  This is a not opened comment */ @rax = @rdi ; } else { test_statement(0x1569); ;  break;  break; }
$error$
$end$
2238
 if (@r12 >> $buffer >> @rsi @rdi + 0y1111 << $proc << @r10 >> 0xC >> @rdi >> @rsi & @r13 << $thread >> @r10 >> 0n13 & $thread & @rbx & @rbp ^ 0x5)  { test_statement(0xFF7); } else { test_statement(0x86F); }
$error$
$end$
2239
 if (+@r10 >> $thread << $thread >> $teb >> @r12 & 23 << @rsp & -@rsi ^ 0n9 >> 0x2 & -($ip) >> $ip & @rsp & $teb))$teb + $teb << @r11 << @rbx >> @rsi >> @r8)  { test_statement(0x22CB); } elsif (@r11 >< @r11) { test_statement(0x1D8B); } elsif (@rsp >> $proc ^ @r9 | @rbp & @r10 <= $teb ^ ~0xC | 0n11 | $teb ^ $thread) { test_statement(0x312);  // /* This is a comment  } elsif (@r10 @r10) { test_statement(0x2408);  break; } elsif (@rdi | @rbx | @rdx = @rdi | 0x3 | @rsp) { test_statement(0x211C);  /* This is a not closed comment  break; } elsif (14 >< 21) { test_statement(0x25A1);  while  (@rbp > @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (~@rdi == $ip)  { test_statement(0x14DB); } }
$error$
$end$
2240
 if (@r12 + @rsi & @r9 << @rbp >> $thread >> @r12 & @r11 & +@r11 ! @r12 + @rsi & @r9 << @rbp >> $thread >> @r12 & @r11 & +@r11)  { test_statement(0x1083);  This is a not opened comment */ } elsif (@rdx >> $ip <> 0y100 >> @rbx >> @r13 & $ip | $teb & @r10 ^ @rdi | $buffer & +@r13 | @r11 ^ @rbp) { test_statement(0x2426);  while  ($buffer ^ @r12 | @r11 | @rdi <> @r9 ^ $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1221);  if (@r11 ^ 0y1 | $thread(($teb ^ $teb | @r8)  { test_statement(0x1F8F); } elsif (@rbp | 15((0y110 | @r12) { test_statement(0xDA9); } elsif (@r10 ! @r10) { test_statement(0x209D); } elsif ((@r9)))(@r9)) { test_statement(0x183); } elsif (+@r12 = 0n9) { test_statement(0x177F); } }
$error$
$end$
2241
 if (+-@rbx + @r13 & (@r13) & +@rbx >> @rbp ^ @rax << 1 >> $buffer >> @r8 | 0x6 << 0n10 >> @rax >> @r12 | @r12 & -@rsi & $buffer ^ +0n7 ^ @rdi ^ @r12 <> +@r8)  { test_statement(0xA90); } elsif (~$buffer << 0n19 >> @rdx & @rbp & $proc ^ @rbp >> @r10 ^ @rsi >= @rax << (0x5) & @r9 >> 0x8 & 0n5 ^ @r10 ^ 0xE & @rdi | @rdi >> @r9 & $ip & +@rax ^ $buffer & +-12) { test_statement(0x1156);  break; }
$error$
$end$
2242
 if (@rdi << @rbp << $buffer >> @r8 | 7 << @rsp | @rsp & @rdx ! ~$thread + @rax << @r11 >> @rax >> $thread >> $ip & @r11 << @r9 >> +$teb)  { test_statement(0x5A8);  for (val = 10; 0y10010 & @rbp ^ @rax == $thread & $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif (0x6 >> @r10 | @rsp >> +@rbx != @r9 << (0n17) & @r13 >> @rbp & -$ip & $ip | 0xC ^ @r11 & @rsp) { test_statement(0x1C5C); } elsif (@rdx >> @r8 & $thread)$buffer >> $ip ^ @r12) { test_statement(0xE0F);  break;  This is a not opened comment */ }
$error$
$end$
2243
 if (0n16 + @r10 >> 22 ^ @r10 >> @r11 ^ @r12 >> $buffer ^ 0n13 ^ 0x2 | $ip << @rax >> 3 ^ @r10 >> 0n4 & @r10 & @rbx ^ $thread ; $proc + @rbx << +@rdx << $buffer >> @r8 << @rsi | ~@rax & @rax >> @r13 & 0n7)  { test_statement(0x186A); } elsif (@r13 & @rbx & @rbp & @r10 <> @rbx << 2 ^ 0y10011 | @r10 >> @r13 & @r10 & $buffer ^ @rbp | $proc) { test_statement(0x1C5D); ;  This is a not opened comment */ @rax = @r13 ; }
$error$
$end$
2244
 if (@r11 << 0y1110 << 0n5 >> @rsi >> 13 >> @rsp & +0y10010 >> 21 >> $ip & 3 & @rbx ^ @r8 << @r11 | ~@rsi << @r13 >> @r8 & @r9 >> @rsi & @rdx & @r11 | @r12 >> @rsi | @rsi | @r12 ^ ~@rax | @r12 | @rbx < 0n12 + $teb ^ @r8 << ~@rbx | 0n10 >> $thread >> @rsi & @r13 & @rdx | @r12 ^ @rsi & ~@rbp ^ +@rsi | 0y10010 ^ ~@rax | @rbp)  { test_statement(0x132E);  break; ; } elsif (0x6 >> @rdx & @rbp & $proc & -@rbp 0x6 >> @rdx & @rbp & $proc & -@rbp) { test_statement(0x4DD);  This is a not opened comment */ ; } elsif (~@r9 >> @r12 ^ @rdx | 0y1000 ~@r9 >> @r12 ^ @rdx | 0y1000) { test_statement(0x2337);  if ($buffer 0x0)  { test_statement(0x1EB); } elsif (@rsi(@rsi) { test_statement(0xD0A); } elsif ($teb @rdx) { test_statement(0x422); } else { test_statement(0xBE6); }  This is a not opened comment */ } else { test_statement(0x1277);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 >= @r13) ; }
$error$
$end$
2245
 if (@r13 + @rbp << $buffer << $thread >> @rax << @rsi | 0x12 << @rdi & @r11 >> @r11 | @rbp >> -@rax & @r11 & ~@rax ^ @rbp ^ @rdi ^ @rdi | @rdi ^ @rax ^ ~@r13 | +$ip <= ~$proc + 0n5 >> $buffer << ~@rsp ^ +$teb >> 0y11 ^ $buffer ^ @rsp & 0y10 ^ (10) | $teb & 0x11 >> @r12 & ~@r9)  { test_statement(0xA34);  if (~~@r13 & @rsi ^ @r9 ^ $thread ! @r8 & 0y1001 ^ @r12)  { test_statement(0x14E7); } else { test_statement(0xDF5); } } elsif (@r11 << @rbx >> @r9 >> @r12 ^ $teb >> @r12 & $teb ^ ($buffer) & @rdx | 0n11(@r11 << @rbx >> @r9 >> @r12 ^ $teb >> @r12 & $teb ^ ($buffer) & @rdx | 0n11) { test_statement(0xE5C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ^ @r13 = @r8 | 11) ; } elsif ($ip >> @rsp & +@r12 & $ip | 0n12 & $thread ^ 0xA ^ @r11 | $thread ^ 0x1 | @rbp @r9 >> @r9 & @r10 & 15 | @rsp & @r10 ^ @rdx) { test_statement(0x266D); } elsif ($proc | @rbx | @r10 | @rax((@rbp | 0x9 ^ +0y10) { test_statement(0x11F8); }
$error$
$end$
2246
 if (@rax >> ~@rdi & 0y1010 << @r9 ^ $buffer << $teb >> @r13 >> $thread & 6 ^ @r13 >> @rbp & $buffer & @rdi | @r10 << 11 & @r11 & @r9 | 0xF ^ @r12 ^ ~@rsi ^ @r10 >< 0n7 + $proc ^ @r12 & $proc & -0y111 & $proc ^ 7 & @r9 ^ @r12 ^ $thread ^ 15)  { test_statement(0x1DB9); } else { test_statement(0x1EA3); }
$error$
$end$
2247
 if (@r13 + @r8 >> @rsp ^ +0n9 << @r12 >> @r13 & 0y11 & @r8 ^ @rdx >> @rdx & 23 ^ @rsp ^ (@rbp) | 21 >> ~0n18 >> $thread ^ @rsp ^ @rbp & @r11 ^ $teb < @r13 + @r8 >> @rsp ^ +0n9 << @r12 >> @r13 & 0y11 & @r8 ^ @rdx >> @rdx & 23 ^ @rsp ^ (@rbp) | 21 >> ~0n18 >> $thread ^ @rsp ^ @rbp & @r11 ^ $teb)  { test_statement(0x23FC); }
$error$
$end$
2248
 if (@r11 << @rbp >> @rsp ^ @rsi << @rax >> $proc <> -0x8 + @r11 >> 0y11 >> @r12 >> @rsi & $ip & @rbp >> $thread)  { test_statement(0x190); } else { test_statement(0x12C0);  while  (-$teb ^ 0x6 >= @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2249
 if (@r8 >> $ip << $buffer & @r9 >> @rbx ^ @rdi << ~@rbp >> +0x9 & 0x0 >> $buffer & @rdx & @r8 | @rdi << @rdx >> $teb & +@rdx >> ~0y11 | @r13 & @r8 & ~@r12 ^ @rsp ^ 0xB ^ $thread | @r12 & @r11 ^ 0y110 | @r9 ^ @r10 @r9 ^ $teb << +$ip >> @r10 >> @rbx & 0x6 >> @rbx ^ @rdi >> $thread & @r11 & @r13 ^ @rdi ^ @r12)  { test_statement(0xCE6); } else { test_statement(0x662); @rax = 16 ;  break;  /* This is a comment */  This is a not opened comment */ }
$error$
$end$
2250
 if ($teb + 0n11 >> @rsi >> 0y1110 | @r8 & @r13 ^ @r13 & $proc ^ +@rsp & ~-$proc ^ @rax <= $teb + 0n11 >> @rsi >> 0y1110 | @r8 & @r13 ^ @r13 & $proc ^ +@rsp & ~-$proc ^ @rax)  { test_statement(0x8B);  /* This is a comment */ }
$error$
$end$
2251
 if (+$buffer << ++0n6 << +$teb >> +@rdi << @rbp | @r11 >> $ip & +@rbp & 0n8 ^ @rax))@r10 >> (+@r9) << $ip >> +10 ^ -0n7 >> $thread ^ @r8 ^ @rdx ^ 0n14 | -@rbx << ~(@rbx))  { test_statement(0x259E); } elsif ($teb << @rbp ^ @rbp >> @rsp | @rdi >> @rbx | @r8 | @r13 ^ 0x7 | @rbp < @rdi & ~0n1 >> @rbp & $ip | @r10 >> @rbp ^ @rdi) { test_statement(0x1429);  for (val = 10; @r8 ^ 0n16 | 0x11 = @r8 ^ 0n16 | 0x11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp >> $proc ^ @r11 & 0x6 ^ @rsi | @rdi & @r12 | @rbp ; @r9 | @rdx & @rsp ^ $thread) { test_statement(0x24E2);  /* This is a not closed comment } elsif (@rbp ^ $ip))@r11 & @rdx | $ip | @rdi) { test_statement(0x19D); } elsif (3 ^ @rsp | 0y10001 | @rdi(@r8 ^ 22) { test_statement(0x255F); } else { test_statement(0x205F);  /* This is a not closed comment }
$error$
$end$
2252
 if ((@r8) + @rdx >> @r13 ^ ~@r9 & @rax & @r13 | 0y1 | (@rax) & $teb | @rbp & -$thread <= @r12 + -$thread >> @r13 << @rdx & @rbp)  { test_statement(0x17DC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@r8) & @r8 ; 0n7 ^ @rdi ^ -@rbx | 21 | @rbx | @rdi) ;  /* This is a not closed comment  This is a not opened comment */ } else { test_statement(0x145E);  if ($ip))0n11 ^ @rdi)  { test_statement(0xA6F); } }
$error$
$end$
2253
 if (~@rbp + @r9 >> $proc >> 0n18 | 0x4 & 0y111 ^ $proc & @rbx & $thread ^ @rax & -0x6 ! ~@rbp + @r9 >> $proc >> 0n18 | 0x4 & 0y111 ^ $proc & @rbx & $thread ^ @rax & -0x6)  { test_statement(0x239C);  This is a not opened comment */  /* This is a not closed comment @rax = @rsi ; } elsif (@r13 << @r9 & $proc >> $ip ^ @r10 & @rsp & $ip ^ @rbx ^ (@r11)((@rdx << 0y110 | $buffer >> $buffer & @r8 & @rdx | $teb & @r12 | @r9 ^ @rax) { test_statement(0x9D6);  for (val = 10; 15 | @rsi | $thread)15 | @rsi | $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2254
 if (@r10 << $proc << @rbx & @rdi << @r12 != @r10 << $proc << @rbx & @rdi << @r12)  { test_statement(0xE69);  /* This is a comment */  break; } elsif (0y100 << $proc >> (@r12) | +@rsp & $buffer & $ip ^ $buffer & @r9 | @rsi | @rax ^ $ip | 0n3 0y100 << $proc >> (@r12) | +@rsp & $buffer & $ip ^ $buffer & @r9 | @rsi | @rax ^ $ip | 0n3) { test_statement(0x1F2); } elsif ($proc & $ip <= 0y1110 >> @r12 & @r8 & @r9) { test_statement(0x1488); } else { test_statement(0x2369);  if (@r12 ^ @r8 | $teb <> @rdi ^ 4 | 12)  { test_statement(0x44A); } elsif (@rbp <> -@rdi) { test_statement(0x769); } elsif (@r13 <= @rbp) { test_statement(0xE45); } else { test_statement(0x603); }  while  (@rax)@rbx | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rax(($proc)  { test_statement(0x2701); } elsif (@rsi ! @rsi) { test_statement(0x6EC); }  // /* This is a comment  }
$error$
$end$
2255
 if (0x1 << @rax >> @r9 << @r13 | 10 << 0n9 >> 0n5 & @rsp >> @rdi & -$ip & @rbp | 0y0 & @r11((@rdx + @rax << $proc | @rdx << @rbp >> @r9 >> 0x13)  { test_statement(0x22F9); } elsif ($ip >> 0xC >> @rbx ^ ($ip) <= $ip >> 0xC >> @rbx ^ ($ip)) { test_statement(0x1F17);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 @r10 ^ @r8 | +@r13 | 0n0) ; ; } else { test_statement(0x927); }
$error$
$end$
2256
 if (+$teb + 0x12 >= @r11 + ~@r11 >> 21 << -~@rbp >> 0n17 | $proc << @rbp >> -@rdi & $teb >> $ip)  { test_statement(0x183A);  // /* This is a comment  ;  while  (@rdi <= @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 5 <> $thread) ; } else { test_statement(0x2633); }
$error$
$end$
2257
 if (@r9 + @r13 << 0y10010 & @rbp >> @rdx | @r12 << @rbx & -@r12 >> +~0y10011 & +@rdx & @r10 >< 0n19 << $buffer << $teb | @r9 & @r11 & $buffer & @rdx ^ @r8 >> @r8 & @rbx | 0x4 ^ -@r9)  { test_statement(0x1677);  /* This is a comment */  for (@rax = @r8 ^ @rax; @rdx | 4 | $buffer = @rdx | 4 | $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  /* This is a comment */ ;  for (; @r10 ; @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x88D); @rax = 0x5 ; ;  while  (@r9 == @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2258
 if (@r11 & @rbx << -~@r8 & 0x10 >> $ip)@r11 & @rbx << -~@r8 & 0x10 >> $ip)  { test_statement(0x49B); } else { test_statement(0x34D); ;  // /* This is a comment  }
$error$
$end$
2259
 if ($ip + $ip << $thread >> 0x6))@rsp & @r13 >> $buffer >> 0y1 ^ @r9 << 0y101 ^ @rbp)  { test_statement(0x1639); ; }
$error$
$end$
2260
 if (-@rbx + $buffer << 0x1 >> @rdi << 22 >> $buffer & 0xF & $teb | @r13 << @rdx >> $thread ^ @r12 & @rsi & 0xD ^ @rbp | 1 >> @r11 | $buffer ^ +@r12 ^ @r12 ! $buffer + @rdx ^ @rsi ^ @rax >> 0n3 & $thread & -4 | @rbx >> ~0y11 >> (($ip)) & @rsi)  { test_statement(0xBA1); } elsif (@rbx << @rdx >> +@rdi >> @rdx ^ 0x3 >> @rsi ^ @rsp & $ip <= 0x12 << 1 ^ +~$thread >> ($proc)) { test_statement(0xFF6); } elsif (@rdi <= @r13 ^ @r10 ^ ~@r10 ^ ~~~@r10) { test_statement(0x2155); } elsif (@r8 & @rdi ^ @rbp < @r10 & $teb) { test_statement(0x3CF); val = $proc | @r12 ; } else { test_statement(0x14D9); }
$error$
$end$
2261
 if (@r10 << 5 >> -@rdx << 0n14 ^ (-0xF) << (~@rdx) & 0y110 >> +@rdi | (@rsp) << $thread | @r12 >> @r8 <= 0y10000 + @rax << 20 << @rdi)  { test_statement(0x1FA6); } elsif (@r10 ; @rbx | 3) { test_statement(0x1970);  This is a not opened comment */ } elsif (+@rax >> @rsp ^ @rdx ^ @rsi | @r11 & @rbp ^ @r12 ^ 0xF | @rdx | @rsp | 0xD 16 ^ $ip ^ @r8 ^ $teb) { test_statement(0xFA4); } elsif (~@r10 ^ @r9 <= @r8 & -0y11) { test_statement(0x1CA4); } elsif (+@r11 ^ @r10 ; +@r11 ^ @r10) { test_statement(0x1394);  /* This is a not closed comment  // /* This is a comment   // /* This is a comment  } elsif (17))@rbp | @r13) { test_statement(0x1C4B); } else { test_statement(0x1928);  /* This is a not closed comment  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ($buffer) == -0xB) ;  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc)@rsp) ;  while  (+0xD))+0xD)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (+@rdi != +@rdi)  { test_statement(0x8C0); } }
$error$
$end$
2262
 if (++@rbx >> @r11 << @rsi | @rdi | $thread >> @rsp & $buffer & @r8 | 0y100 @rbp & +-0n13 << -17 & +@r10 & @rax & -@r8)  { test_statement(0x2639); }
$error$
$end$
2263
 if (@rsi << @r13 << @rbx & @rsp << ~(+@rbp) >> @rdx >> +$buffer & @rsp & @r12 & @rsi | 0y1011 >> +@rsp & @rdx >> @rax <> (@rbp) + @rdx >> @rsi >> $ip ^ @rdi << $thread | @rbx >> @rsi >> $ip & 5 & @rax & 0x10 ^ @rsi >> @rdi & @rax & @rsi | $proc >> @r12 & @r11 & 0n18)  { test_statement(0x11AB); }
$error$
$end$
2264
 if (@rsp + $teb << @rbx << $buffer & $teb << +@rdx ^ ~@rbx << @rbx >> @r11 >> @r13 ^ (@rdi) >> 0n7 > @rbx + @r10 >> @rsp)  { test_statement(0x13D0);  for (; (($buffer)) & @rbp ^ +$teb ^ 0x5 | 0xE ^ @rbp | -@rdx)@r10 & @rsi | ~~12 ^ ~@rsi | @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb >> @r12 & @rbx >> @r9 & 0x0 & @rsi | @r13 ^ 0n13 <= 0n11 >> $teb & @r9 & 22 ^ +$teb ^ @r8 ^ 0xD | 7) { test_statement(0x327); }
$error$
$end$
2265
 if (0n17 + $buffer >> 0y1000 & @r13 | @r8 < @rsp >> @rdx << @r9 >> (@rbx) >> +@r9 & @r9 << $proc >> 0y110 & 0n17 ^ @r13 << 0x4 | 13 >> 0n4)  { test_statement(0xD40); } elsif (0xD >> @r10 | $teb ^ $proc & $proc ^ 17 ^ 0y1010))@rbx << $ip) { test_statement(0xA83); }
$error$
$end$
2266
 if (-+@r13 >> @rsp & @rsi << 13 <> -+@r13 >> @rsp & @rsi << 13)  { test_statement(0x1FA5); } elsif (@r12 < @r12) { test_statement(0x3FE); } else { test_statement(0x1F5F); }
$error$
$end$
2267
 if ($ip <= @rdi + ~@rbx >> 0y0 << @rsp & @rdx << @rbp)  { test_statement(0x189B); } else { test_statement(0x224E);  /* This is a comment */ }
$error$
$end$
2268
 if ($buffer << $ip << @r12 >> @rbx << @r11 >> ~@r8 & @rdx << @r9 >> -@r11 | @rbp & @rax & 0x6 & @rsi | @r10 ^ $buffer & @r13 ^ @r13(($buffer << $ip << @r12 >> @rbx << @r11 >> ~@r8 & @rdx << @r9 >> -@r11 | @rbp & @rax & 0x6 & @rsi | @r10 ^ $buffer & @r13 ^ @r13)  { test_statement(0x25AB); val = 0n9 & @rbx & 0x4 | @r9 & @r10 ^ 2 ;  break; }
$error$
$end$
2269
 if (@r12 + @r9 >> $buffer << @r13 >> @rbx >> @r8 | @r11 >> @rbp >> @rbp & $thread >> @r11 & @rsi | 0x11 ^ 0n1 & @r10 < @r10 + @rdx << @rdx >> 11 << @r9 & 0n1 >> @r11 ^ @r12 << 13)  { test_statement(0x1548); } elsif (0xD << @rbx >> $thread >> 16 != (@r12) >> +0n12 >> @rax & +@rdx | @r10 & $buffer & @rsp ^ @rdx & @rsi ^ -@r9 ^ 0 | $thread & +@r8) { test_statement(0x14C7);  // /* This is a comment  } else { test_statement(0x1A3D); }
$error$
$end$
2270
 if (@r9 & 17 << $proc @r9 & 17 << $proc)  { test_statement(0x1A12);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp | 0x7 ; @rdx) ; }
$error$
$end$
2271
 if (@rsi + @r9 << +@r11 >> ~~@rax << 14 >> @r10 ^ @rdx & ($ip) ^ @rdx >> 0n13 ^ 0y100 & $ip | $proc << @rdi >> @rbx & $teb(@rsi + @r9 << +@r11 >> ~~@rax << 14 >> @r10 ^ @rdx & ($ip) ^ @rdx >> 0n13 ^ 0y100 & $ip | $proc << @rdi >> @rbx & $teb)  { test_statement(0x1880); }
$error$
$end$
2272
 if (@rbp | 0xB & ~@rbx >> @rdx | -@r10 & $buffer & 0y10010 >= 0xA + @rbp << $proc << @r11 >> @rbp << $buffer & 2 << +@rsp >> @rax >> 0y110)  { test_statement(0x2106); }
$error$
$end$
2273
 if (@rbx + ~$ip >> (@rbp) << @rdi ^ 23 >> @r13 >> $proc | @r11 << $teb >> @r9 & @rdi >> 0n15 @rbx + ~$ip >> (@rbp) << @rdi ^ 23 >> @r13 >> $proc | @r11 << $teb >> @r9 & @rdi >> 0n15)  { test_statement(0x242A); } elsif (@r9 >> @rbp >> @rsi @rsi >> @r9 >> $thread & ~$teb >> 0n16 & @r9 | $thread >> $teb ^ 0n6 ^ @r12 ^ 0y111 | 0y111 & 5 ^ @rsp ^ @rbp) { test_statement(0xA75);  for (val = 10; @r11 ^ 0x3 = 0x12 ^ @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 12 != 0y10000) ;  This is a not opened comment */  while  ($proc == $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
2274
 if (@rdi << $ip << 0y11 ^ 14 & @rdi ^ @r10 & @r11 & 3((@rbx + $teb >> @r9 << @rsp >> $proc ^ $teb >> $proc >> ($ip))  { test_statement(0x7AD);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 ^ @rsi | 12 | +$proc < @rbx | $thread | ~$teb) ; @rax = @rsp | $teb ; } elsif (@rdi | @rdi >> @r9 & (@rsi) & @r11 = @rdi | @rdi >> @r9 & (@rsi) & @r11) { test_statement(0x25E8); } elsif (@rax >> @r8 ^ +0n5 & @rsp ^ @r10 ^ @rax > @rax >> @r8 ^ +0n5 & @rsp ^ @r10 ^ @rax) { test_statement(0x1740); } elsif (0n11 & -@rdx ^ @r9 ^ @rsp > 0n11 & -@rdx ^ @r9 ^ @rsp) { test_statement(0x1E05); } else { test_statement(0x1D9D); }
$error$
$end$
2275
 if (@r13 & @rdx << @rbx >> 10 >> 10 ^ @r10 << ~(+-@rbp) & 0y110 & @rsp & @rax > 0y10 << 22 << $buffer ^ (-3) ^ @rbx)  { test_statement(0x2319);  // /* This is a comment   /* This is a not closed comment } else { test_statement(0xB85);  /* This is a comment */ }
$error$
$end$
2276
 if (0y10 + (@rax) << (+@rbp) >> @rdx & @r11 >> @r13 >> 14 ^ @rdx << @rdx & 20 >> @r8 ^ @r8 ^ @rax & @r9 ^ @r9 ^ -@r10))@rsi >> 0n0 >> @rbp & @rsi << @rax >> @r9 & $thread ^ @rbx << (0n5) >> @rdi >> $proc ^ @r13 >> 0y111 & @rbp)  { test_statement(0x1246); }
$error$
$end$
2277
 if (@r11 + @rax << @rax << 0n1 >> (@r10) & @r11 << @r10 & @rdx >> @r11 & +@r10 ^ 0xF << @rsi >> @rsp & @rdi >> @r9 < @r11 + @rax << @rax << 0n1 >> (@r10) & @r11 << @r10 & @rdx >> @r11 & +@r10 ^ 0xF << @rsi >> @rsp & @rdi >> @r9)  { test_statement(0x1010);  if (@rdx & 0n7 ^ $proc ^ 0x7(@rdx & 0n7 ^ $proc ^ 0x7)  { test_statement(0x21A8); } else { test_statement(0x327); } } elsif (~0y0 ^ 0n16 != @rbp << @rax & 0y110) { test_statement(0x80B); ;  if (+$proc | @r9 == +$proc | @r9)  { test_statement(0x1602); } elsif ($ip(-@r11) { test_statement(0xD31); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +2 == @r10) ; ; } elsif ($teb >> @r10 ^ $thread ^ 0y10 | $proc & @r9 ^ (@r11) ^ @rbp | @rdi ^ @r13 | $proc($teb >> @r10 ^ $thread ^ 0y10 | $proc & @r9 ^ (@r11) ^ @rbp | @rdi ^ @r13 | $proc) { test_statement(0x51A); ; } elsif (@rdi @rdi) { test_statement(0x10BE);  This is a not opened comment */  break;  for (; @rbp @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif (0x0 ^ $proc | @rbp <= @rbx) { test_statement(0xC4); } elsif (~@rbx ! 0n0) { test_statement(0x1D97);  break;  // /* This is a comment   for (; @rdx ~@rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r10 >= @rax) { test_statement(0x267E);  /* This is a comment */ } elsif ($thread((@r12) { test_statement(0x1099); } else { test_statement(0xF8E); }
$error$
$end$
2278
 if (@r11 << @rbp << -@r12 >> @rsi >> @r11 & -+@rsi(@r11 << @rbp << -@r12 >> @rsi >> @r11 & -+@rsi)  { test_statement(0x268D); }
$error$
$end$
2279
 if (0x1 << @rbx >> (0n13) << +@rdx >> @rbx >> @r8 & 0y111 >> 0n19 & @rbp ^ (@r10) << @r9 >> @rdi))(@rdx) + 1 >> @rax << @rsp & +0y1100 >> @rbx & @r10 | @rbp ^ ~@r11 & $proc ^ @rsi & @rax)  { test_statement(0xC40); } elsif (@rdx << ~@rsi >> @r11 | (@r13) >> @rdi | @rsi & @rdi ^ @r13 ^ @rdx == @rdx & 0x2 >> (@rdi) ^ @rbx >> (@rdi) & @r11 & @rax ^ @rsp & @r9) { test_statement(0x1CDA); } elsif (0n10 >> 15 | @rdi >< $teb >> @r11) { test_statement(0x26F1);  while  (@rsi < @rbx | $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi & @r10 ^ $teb == @rbp & +@rax ^ 11 ^ $ip) { test_statement(0x1127); }
$error$
$end$
2280
 if (@r11 + @r8 << @rsp << @rdi & @rbp << @r8 & 0y10000 & 0y10010 & 17 ^ @rax >> $proc >> @rdx & @rsi >> $proc)@rsi + @r13 << @r11 >> @r13 << @rbp >> $proc >> @rdx & $teb << @rbx >> @r11 >> 0y110 & $teb | @rbx >> $thread)  { test_statement(0x11AF);  while  (12 | @r8 ^ @rbp | @rdi((@rdx & @rdx ^ $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2281
 if (@r11 << @r9 & 1 << @rbp ^ $ip ^ @r12 & ~@r13 ^ $proc ^ @r13 ^ @rdx | 0y1010 << @r9 & @rsi >> @r12 & ~$ip ^ $thread & @rax ^ ~$buffer & @r8 ^ ($ip) | @rdx >> +0y1011 | -@r10 & @r8 ^ ~@r10 ^ @rdi <> 20 + @r11)  { test_statement(0x1C42); } elsif (@r8 << 0xC >> @r8 ^ $thread >> $buffer & @r10 & @r9 | ($ip) >> --23 & @rdi & $ip | $thread ^ -@r12 ^ -$thread >< @r11 << $ip ^ @rdi >> $thread) { test_statement(0x1A5D);  break; } elsif ($thread ^ -$thread & @r9 ^ (@rsp)))$thread ^ -$thread & @r9 ^ (@rsp)) { test_statement(0x855);  break;  break;  for (val = ~@r9; @rax > $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  for (; 0n15 ! @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12 ^ -@r10 ^ @rdi == ~@rbx ^ @r9 | 0y10001 ^ @r9 | ~@rbx) { test_statement(0x20AF); } else { test_statement(0xF08); }
$error$
$end$
2282
 if (@r9 & @rbx >> -@rax >> @rbx & ~0n17 >> $ip ^ +@rbp >> (@r10) >> 4 & +0y1101 >> @rbp & (@rsi) ^ @r13 >> @rsi @rbx << +@r10 << @rbx ^ $teb ^ $proc & @r13 ^ @r9 & @r9 ^ 0n0 ^ -@rdx)  { test_statement(0x7AB);  for (val = 10; @r13 & @r11 ^ @rsp ^ @r8 > (0n13) & 0;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } else { test_statement(0x352); }
$error$
$end$
2283
 if (@r11 + @rsp << @rbp >> @r9 >> $proc >> $teb & @r11 << @r12 >> @r11 >> ~0n4 ^ @rax << ($teb) >> $thread >> @r10 | $buffer << $proc))$proc + @rbp >> @rbx << @r9 >> @rdx & @r8 << $buffer | ~@r10 << @r12)  { test_statement(0x1F11);  for (@rax = $proc & @rbx ^ 0y1111 ^ @rax; @r9 +$thread ^ @r11 ^ @r8 | @r12 ^ (@r12);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (@rsp & +15 ^ @rdi)(@rdi) ^ @r11 >> @r8) { test_statement(0x1EAD);  /* This is a not closed comment  if (@r9 == @r9)  { test_statement(0x14BC); } elsif (0x12)0x12) { test_statement(0x2C6); } else { test_statement(0x130B); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 ; @rsi) ; }
$error$
$end$
2284
 if (@rdx + @rdi >> $thread << @rsp & @rbx << $thread((@rsi + -@r10 >> @rbp & 0x9 >> (@rsi) | @rax)  { test_statement(0xB96);  /* This is a not closed comment  break;  This is a not opened comment */ } elsif (@r12 << @rax >> @r13 ^ $ip >> 0x11 | 20 >> @r8 & @rdi & $teb ^ @r11 | ~$thread & @rdx | @r10))0y110 << @r10 & $buffer ^ +@rbx & 13 & ~-@r11 ^ @rax) { test_statement(0x21C5);  // /* This is a comment  } else { test_statement(0x1DF);  // /* This is a comment  }
$error$
$end$
2285
 if (@rax + $thread << @r11 >> @rsi << @rsi >> @rax >> @r10 >= @r12 + @rsi & $buffer << 0y10001 & @r13 & @r11 | @r9 << $thread ^ $teb & @rax & $teb | (@rdi) >> +@r8 & $ip | -@r10 & @r8 ^ $ip)  { test_statement(0x6F7); } else { test_statement(0xE05);  // /* This is a comment  }
$error$
$end$
2286
 if (@r11 + @rsp << $ip << @rdx >> @rdx << @rsi ^ @rbx >> @r8 & @r13 | 0n6 << @r8 & @rsp >> @r8 & (@r8) & 2(($buffer >> @r10 >> @rax >> @r13 ^ @rax >> 0x5 & $thread & $thread | $thread >> @r8 >> @r9)  { test_statement(0x11B4); } elsif (22 << ($thread) >> @rbp >> @r8 != 22 << ($thread) >> @rbp >> @r8) { test_statement(0xA5);  for (@rax = $teb; $ip = @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2287
 if (@rax + @r9 ^ @rax >> @rsp >> @rdx & 0n13 >> 0n14 & --+0x4 ^ $teb >> -$proc & @rsp & @rsi(((0x2) >> $teb << @rsp >> 0xE >> @rdx & @r10 & @r9 >> -$thread & @r13 & @rdi)  { test_statement(0x93E); }
$error$
$end$
2288
 if ($thread & @r11 << @r8 ^ @r9 << @rbx ^ 0y110 >> @rbp & @r8 | (@r12) << 0x0 >> @r13 ^ @r10 & (@rdi) & @rbx ^ $thread & @rdi ^ @rbp | +@rdx < $thread & @r11 << @r8 ^ @r9 << @rbx ^ 0y110 >> @rbp & @r8 | (@r12) << 0x0 >> @r13 ^ @r10 & (@rdi) & @rbx ^ $thread & @rdi ^ @rbp | +@rdx)  { test_statement(0x1486); } else { test_statement(0x20B3);  /* This is a comment */ }
$error$
$end$
2289
 if (@rsp + @r12 >> @r10 ^ $teb >> 0x12 & @r9 >> $ip ^ +$ip >> @r12 ^ @rsi | 0y0 << -@rdx ^ @r8 >> @r11 <> @rsp + @r12 >> @r10 ^ $teb >> 0x12 & @r9 >> $ip ^ +$ip >> @r12 ^ @rsi | 0y0 << -@rdx ^ @r8 >> @r11)  { test_statement(0xDE4); } else { test_statement(0x835);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 ^ $buffer | ~-@r11 ! @rbp ^ @r11) ;  break; }
$error$
$end$
2290
 if (@r12 & @r9 >> $ip >> $ip ^ @r8 << @r13 >> @r12 & @r8 >> $proc & @r11 & @rax | @rbp << @rdx ^ @r11 >> +(@rdi) ^ @r8 & $buffer ^ $proc <= @r12 & @r9 >> $ip >> $ip ^ @r8 << @r13 >> @r12 & @r8 >> $proc & @r11 & @rax | @rbp << @rdx ^ @r11 >> +(@rdi) ^ @r8 & $buffer ^ $proc)  { test_statement(0x244F);  This is a not opened comment */ }
$error$
$end$
2291
 if ($teb >> @r10 & @r13 ^ @rdi & -0xF >> @rdx <> 0n19 << 0x0 << @rbx)  { test_statement(0x12E3); } elsif ($buffer << @rsp >> @rbp & @rbx <> $teb >> 0n13 >> @r11 & @r9) { test_statement(0xD9C); } elsif (@r12 >> (@r9) & @rsi ^ @rsi & @r13 > @r12 >> ~@r13 & +17 & 0xA) { test_statement(0xC33);  // /* This is a comment  } elsif (@rbp ^ @rsp ^ 0x9 < $buffer & @rbp | 0y10011 | @rbx | $proc) { test_statement(0x12EB);  while  (@rbx((@rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2292
 if (~@rbx << @r8 << @r10 | ~@rbp ^ @rax >> @rbx | @rdx & @rax == ~@rbx << @r8 << @r10 | ~@rbp ^ @rax >> @rbx | @rdx & @rax)  { test_statement(0x1F0D); } elsif (@r13(($ip ^ $ip ^ -0y101 & @rsi) { test_statement(0xC48); }
$error$
$end$
2293
 if (@rsp | @r12 << 0xC & @rsi & 0x13 ^ $ip & $teb ^ $proc & -(0) | 0y11 & 21)@rdi + @rsp << @r12 << @rdi >> @rax >> $teb >> $ip & (+0n11) << $proc >> @rsi >> $buffer & @r8 >> +$teb & -@rsi & (@rdi) | @rbp << @rdi | $proc ^ @rbp & @rbx)  { test_statement(0x1282);  while  (@rdx ^ @r10 ^ ~$thread | @rsi ^ @r10((+@r13 ^ @rbx ^ 12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (+@r10 << @r13 >> $teb >> $ip ^ 10 >> @rsp & @rsi & $ip | @rsi & @r11 ^ 0n14 & @rsp | @rbx ^ @r8 <= @rbp >> 0y1100 & @rdi & @rdi & @r10 ^ @rdx ^ @r11 | @rdx & @r12 & @r13 ^ $ip ^ @rsi) { test_statement(0x1562); } else { test_statement(0x24C); }
$error$
$end$
2294
 if ((@r13) << $proc << @rbp | ~@rax << @rsp >> @rdi & @rdi | 0y110 >> $ip ^ @rsp ^ $teb | @r8 ^ @rax ^ ~~@rbp | 0xE ^ @rax @r13 << @r11 >> @rdi << $teb ^ @r10 | @rdx >> 0x13 >> 10)  { test_statement(0x2663);  // /* This is a comment   break; }
$error$
$end$
2295
 if ($buffer << @rdx << 0n10 >> @rbx >> @r11 >> @rsp & 23 >> @rdx | @rdi >> @r10 & 0xC >> @rdi ^ @rax & @r10 & $teb ; 0y111 & ~@rax << @rsi)  { test_statement(0x1E34); } elsif (~@rax >> $ip >> $thread >< @r9 ^ @rax >> +@r8 & @rax & @r9 ^ @rsp | @rsp & @r12 & 23 | 0n4 & ~@rdi ^ 0n12 | @rbx) { test_statement(0x138A); }
$error$
$end$
2296
 if ($teb | @rsp << @r8 >> $proc == $teb | @rsp << @r8 >> $proc)  { test_statement(0x892); val = +@r9 & ($buffer) & @r12 ;  break;  /* This is a comment */ } else { test_statement(0x19B8); }
$error$
$end$
2297
 if (@r12 >> (@r11) >> 0x10 ! @r12 >> (@r11) >> 0x10)  { test_statement(0x1E95);  // /* This is a comment   if (@rbp ^ @r8 <= @rbp ^ @r8)  { test_statement(0xD62); } elsif (@r12))0n0) { test_statement(0x2669); } } else { test_statement(0x98F);  This is a not opened comment */  // /* This is a comment  }
$error$
$end$
2298
 if (@rdx >> $ip & @rsp << @r13 >> @rsi | @r9 >> @r10 >> @rbx(@rdx >> $ip & @rsp << @r13 >> @rsi | @r9 >> @r10 >> @rbx)  { test_statement(0x1F0F); }
$error$
$end$
2299
 if (@rdx + $proc << @rdx >> $buffer >> $proc & @rsi & @r10 >= @rdx + $proc << @rdx >> $buffer >> $proc & @rsi & @r10)  { test_statement(0x829); ; } else { test_statement(0x39A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n0 ^ @rbp | 0n9 | 0xF(@r10 | @r11 | (~~$thread)) ; ; }
$error$
$end$
2300
 if (@r8 << $thread << @rsp | @r11 >> @rbp & @r12 & @r8 | @rax >> 0n3 & (@r12) & +$thread ^ ~$buffer & $thread))$thread << +@rax << -@r10 | @rbp << 0n11 >> 0n0 >> $proc ^ 0n19 | @r8 & 0y1011 & $buffer | 0xA)  { test_statement(0x1FC7); } else { test_statement(0xF4C);  while  (~~@rsi ^ @rdi | ~0xB != ~~@rsi ^ @rdi | ~0xB)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2301
 if (@r9 + +@r11 << +@rsi >> (@rbx) ^ ~+@r13 << $thread | @r12 << ++@r13 & @r13 & (@rsi) | $teb | @r8 & @r10 ^ @r10 ^ @r9((@r9 + +@r11 << +@rsi >> (@rbx) ^ ~+@r13 << $thread | @r12 << ++@r13 & @r13 & (@rsi) | $teb | @r8 & @r10 ^ @r10 ^ @r9)  { test_statement(0x8F5); } elsif ($teb >> @r10 >> @rbx | $ip == $teb >> @r10 >> @rbx | $ip) { test_statement(0x18CF);  This is a not opened comment */  // /* This is a comment  }
$error$
$end$
2302
 if (@rax + $ip >> @rsp << 0n19 >> @rdi >> @rbx ^ @rbx << @rax >> -$proc >> $buffer(($thread + $ip >> 0y10000 << 0x3 >> $proc >> @r13 ^ +(-@rbp) & (0y1000) | 2 << @r10 >> 5)  { test_statement(0x1BFA); } else { test_statement(0xDC);  /* This is a comment */  if (@r10 <= @rax)  { test_statement(0x1711); } elsif (@rdx))@r12) { test_statement(0x2275); } elsif ((@rdx) > @rax) { test_statement(0x11DC); } elsif (0y1110(@rdx) { test_statement(0x1540); } else { test_statement(0x1CAB); } }
$error$
$end$
2303
 if (@rsp << @r9 << @r11 & +~~$teb >> @rdi >> $teb | 0y111 >> @rsi >> @r8 & $proc | @r9 >> @r11 ^ @r13 & $ip | -@rsp ^ @rbx ^ @rsi | @rsi ^ @r8 | @r10 | @rsi != $ip + @rax << 2 >> @rax >> @r13 >> 0n11 & (@r12) ^ @r10 >> ~@r13 ^ @r8 ^ $proc ^ $buffer | 2 >> @rdi >> $buffer)  { test_statement(0xDF2); }
$error$
$end$
2304
 if (+0y10 + @rax << @rax << $ip ^ $ip & @r10 >> @rdx))0xB + @rax << -@rbx << 0n17 >> @r13 & ~@rdi)  { test_statement(0x13FD); ; } else { test_statement(0xB08); ;  /* This is a not closed comment }
$error$
$end$
2305
 if (@r10 + @r9 << -0y1001 << @r9 >> ~$teb <> 0n6 + @rsp << $proc >> @r9 >> @rbp >> @rsp | @rbx << @r9 >> @rax ^ 0y110 | @rbx & @rdi | @r10)  { test_statement(0x1E4B);  /* This is a not closed comment }
$error$
$end$
2306
 if (@rdx << 0x3 | @r11 >> $ip >> 0x1 | @rbx = @r13 + @rdx >> -0x13 << (@r12) >> 0n4 >> (@rdi))  { test_statement(0x1F4A);  while  (~@r8 | +@r9 ^ $thread | @r10((~@r8 | +@r9 ^ $thread | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 ^ 23 ! @r12 ^ 23) ; } else { test_statement(0x14E6); ; }
$error$
$end$
2307
 if (@r8 >> $proc >> 0n4 & @rax >> (0n10) & @rsp & @r10 & @rax ! @r8 >> $proc >> 0n4 & @rax >> (0n10) & @rsp & @r10 & @rax)  { test_statement(0x195A); }
$error$
$end$
2308
 if (-+23 + @rsp ^ @r10 & ~-@r12 >> @r8 & @rax <= 0xA + +~$teb & (@rax) << ~@r11)  { test_statement(0x1A34); }
$error$
$end$
2309
 if (@rsp + $proc << @rdi << @rsp >> $ip << @r11 >> --~$thread & @rsp << @r13 & @rbp ^ @r10 << ($teb) & $ip >> -@rsi | @rdi << 0n5 ^ @rax >> @r13 | $ip >> @rax & $ip & @rax ^ @r8 ^ @rdi | @r12 & @r9 ^ +$thread ^ 0n12 | $buffer ^ -($buffer) @rsp + $proc << @rdi << @rsp >> $ip << @r11 >> --~$thread & @rsp << @r13 & @rbp ^ @r10 << ($teb) & $ip >> -@rsi | @rdi << 0n5 ^ @rax >> @r13 | $ip >> @rax & $ip & @rax ^ @r8 ^ @rdi | @r12 & @r9 ^ +$thread ^ 0n12 | $buffer ^ -($buffer))  { test_statement(0x1626); } elsif (@r11 << 0n8 & $buffer ^ @r11 >> @rsp & @rdi <= @r11 << 0n8 & $buffer ^ @r11 >> @rsp & @rdi) { test_statement(0x9B8);  if (@rdx | $teb < @rdi | @r13)  { test_statement(0x2416); } elsif (+@rsi < +@rsi) { test_statement(0x1916); } elsif ($buffer $buffer) { test_statement(0xA51); } else { test_statement(0x905); } }
$error$
$end$
2310
 if (@rsp + @r12 << @rax & @r10 | @rbp << -@rsi ^ @rdi >> +@r13 | $thread >> (~@rbp) & $thread & $thread ^ @rsi >= 17 << @rsp | @rax >> ~$buffer | @r12 | @rdx)  { test_statement(0x5B); } elsif (0n18 >> @rax >> @r12 & 0x11 & @r9 & @rsp ^ $ip >> $ip & $thread ^ @r8 & -$teb ^ 0xA != @r10 & @rax & $buffer) { test_statement(0x6F9); } else { test_statement(0x965); }
$error$
$end$
2311
 if (0xF << @r11 >> @r12 >> @r8 >> 0y11 ^ @rax >> $buffer >> @rsp))0xF << @r11 >> @r12 >> @r8 >> 0y11 ^ @rax >> $buffer >> @rsp)  { test_statement(0x161); } elsif (@r11 << @rsp >> @r11 & $ip & 0n3 & @r8 ^ @r8 ^ @rax ^ $ip ^ 12 | 0x0 >> @rdx & @rdx ^ @rdi ^ $ip ^ 0xD | @r13 & ~~-@rbp ^ @r11 ! ~~$teb) { test_statement(0x260F); ; }
$error$
$end$
2312
 if (@rsi << @r8 << @rsp ^ @r10 | @rsi << -@r8 >> 0n18 & @rdx & $proc ^ @r10 >> $teb >< @rsi << @r8 << @rsp ^ @r10 | @rsi << -@r8 >> 0n18 & @rdx & $proc ^ @r10 >> $teb)  { test_statement(0xAC5); } else { test_statement(0x257); }
$error$
$end$
2313
 if (@rbp >> @rbp << @r9 | @r10 ^ @r9 >> 0y10 & $ip)@rbp | 0x7 & @r9 & @rsi & @rdi ^ @rbx)  { test_statement(0x12FB); }
$error$
$end$
2314
 if (12 + ~@r12 & @r8 | $proc ^ ~@rdi ^ @r11 | @r8 >> (@r9) <= 12 + ~@r12 & @r8 | $proc ^ ~@rdi ^ @r11 | @r8 >> (@r9))  { test_statement(0x1991);  if (@rax | @rbx | $thread | @rbx <= @rdx & @r9 | @r12 ^ @r13)  { test_statement(0xD36); }  /* This is a comment */ } elsif (@rdi >> +0xB & (@rdx) & 11 @r12 >> @rsi >> @rbp | $thread >> @r10 ^ $ip & $proc ^ @rdx ^ @rbx | $thread & 0x3 ^ $proc ^ +$ip | @rbp ^ 0x5 | $proc) { test_statement(0x35C); } elsif (@rdi & $buffer ^ @rdx & @rsi | @r8 ^ @rdx(@rdi & $buffer ^ @rdx & @rsi | @r8 ^ @rdx) { test_statement(0x19BF); }
$error$
$end$
2315
 if (@rdx + @rbx << +@rdx << $teb ^ @rdx << $teb & 15 ; $teb + 0y1101 >> $ip << @r9 >> @rbp >> $teb | @r13 | ~$buffer >> @r13 | +@r11 & $ip ^ ~@r9 ^ @r8 | 0y101 ^ @rbx | ~@r11 | @rdi)  { test_statement(0x19A0); val = 0n10 ^ $proc ^ $proc | @r9 ; } elsif (7 >> @rdi & @r8 ; 7 >> @rdi & @r8) { test_statement(0x21B4); } else { test_statement(0xE7); }
$error$
$end$
2316
 if (@r13 + 0y0 & +~@r9 >> $buffer & @rdx >> $proc | @rbp << @rdx | @r10 | 0x10 ^ @r13 ; 0n13 << @rbx & 0y1011 >> @rsi >> ~@r13 ^ $buffer & @rbp & (+$proc) & 23 ^ 4 >> @rax)  { test_statement(0x1C41); } elsif (@r11 >> @rbx & @r13 & @rdi >< @r12 & -@r10 >> @r11 & 0y0 ^ 12 >> @rbp) { test_statement(0x57D); } else { test_statement(0x1A44);  /* This is a comment */  // /* This is a comment   break;  while  (@rdi ! @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2317
 if ($ip + $teb >> @r13 << $proc >> @r9 >> -~0n8 | @rsp >> @r9 | @rbx ^ @rdx & -$buffer | @rdx ^ 0x0 ^ $ip <= @r9 >> (@r9) >> -@r10 & $ip | @r10 & $teb)  { test_statement(0xB18); } else { test_statement(0x13B5);  /* This is a not closed comment }
$error$
$end$
2318
 if (~$teb + @r13 & @rsi | 0x13 << 0y1000 & $buffer <= @rbx)  { test_statement(0x6F3); }
$error$
$end$
2319
 if (($buffer) + 16 ^ $buffer & @rsi >> -@r10 ^ @rbx & 0x7 ^ @r11 ^ $buffer ^ @r9 <> 0y1011 << @r9 >> ~~@rsi ^ @r13 << @rax >> 20 ^ $ip >> (@r13) & $proc & $ip)  { test_statement(0x18FC);  // /* This is a comment  } else { test_statement(0x1B5B); }
$error$
$end$
2320
 if (@rsp + @r8 & $thread << @rsp >> ~23 >> (@rsp) ^ (@rbp) >> ~$ip | @r13 << @r9 >> 2 >> @rsp <= @rsp + @r8 & $thread << @rsp >> ~23 >> (@rsp) ^ (@rbp) >> ~$ip | @r13 << @r9 >> 2 >> @rsp)  { test_statement(0x1B23); ; ; val = @rsi ^ 0xE ; } else { test_statement(0x107F); }
$error$
$end$
2321
 if (@rsi + @r9 << @rbx)$thread + @rax & $thread & @rdi >> $thread & @r12)  { test_statement(0x17C8);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 & 0n5 > @r9 & 0n5) ; } elsif (@rbp & $ip >> $teb((@r13 << @r8 >> 0y1111 >> $buffer & -@rsi & 0y10001) { test_statement(0x20AE); } elsif (@r11 & @rsp & @rdx ^ @r13 & $buffer | ~-@r8 & @r10 | $thread ^ @r10 = @r13 & +@rax ^ @rsp) { test_statement(0x130B);  while  ($teb | $buffer >= 0y100 | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($buffer <= @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
2322
 if (@r8 + @r11 << (@rbp) << @r12 & $teb << @r9 & ~$thread >> @rdi & @r10 ^ @rsp >> ~@rsp & ~@r12 >> $thread ^ 0x13 >> @rax <= $thread << @rdx << 0x0 & @r9 << @r12 & @r9 >> @rdi & @r13 | ~@rdx << @rbp >> @rbx >> @rsp & ~$teb & -(@r13) ^ @r11)  { test_statement(0x689);  if (0xA & 0xC != @r12 ^ $teb | @r11 ^ @r9 | @r13)  { test_statement(0x24AF); } val = @r13 | $teb ^ 0n15 ; } elsif (@rbx & $thread >> $ip ^ @rdx >> 0xF ^ 0 ^ +(+@r12) ^ $buffer | +(0y10000) & 0n12 & $ip ^ $buffer ^ ~-@r11 | $proc & @rax | @r10 ^ @r13 == @rbx & $thread >> $ip ^ @rdx >> 0xF ^ 0 ^ +(+@r12) ^ $buffer | +(0y10000) & 0n12 & $ip ^ $buffer ^ ~-@r11 | $proc & @rax | @r10 ^ @r13) { test_statement(0x262E);  This is a not opened comment */ } elsif (@r10 >> @rsp ^ @r9 | @r10 & @rdx ^ -0n19 | @rbp | 0n15 >< @r13 >> @rsi | $thread & ~@r9 ^ @r9 | 0y10001) { test_statement(0x1EEF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 | @r9 +@rax | $teb) ; }
$error$
$end$
2323
 if (0n3 + 13 << @r12 >> $proc & @rdx << @rax >> 0n6 >> (+@rax) & +@r8 & $ip & @rbp ^ @r11 >> 0y1000 & @rdi >> $ip ^ @r11 >> 0n16 & $ip & @rsi ^ $buffer ^ 12 ^ @r9 | $ip >> +@rsp >> @r8 == 0n3 + 13 << @r12 >> $proc & @rdx << @rax >> 0n6 >> (+@rax) & +@r8 & $ip & @rbp ^ @r11 >> 0y1000 & @rdi >> $ip ^ @r11 >> 0n16 & $ip & @rsi ^ $buffer ^ 12 ^ @r9 | $ip >> +@rsp >> @r8)  { test_statement(0xCD5);  for (val = 10; ~@r8 & 0n11 | @rsi ^ 0n14 >= ~@r8 & 0n11 | @rsi ^ 0n14;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc << ($ip) ^ @r12 & $proc ^ @rbp ^ $teb ^ @rsp | @r8 >> ~@rax ^ -+(@rax) <= ~@rsi & ~$buffer >> 0y11 & @rdi & 0x5) { test_statement(0x19E4); } elsif (~$buffer & @rax ^ (@rsi) ; $buffer & @r11 | @rbx ^ @rdi ^ $thread) { test_statement(0x311); }
$error$
$end$
2324
 if (@rdi + 0n5 & 0x12 << @rbp & @r13 & $buffer & @r9((@rdi + 0n5 & 0x12 << @rbp & @r13 & $buffer & @r9)  { test_statement(0x381);  for (val = @r11 & (@rsp) | -@rbx; +@r8 & +$thread ^ @r9 ^ 2 ! +@r8 & +$thread ^ @r9 ^ 2;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif ($teb << @rdx >> +$proc >> @rsi <= +0xE << $teb & (@r9) >> @r10 ^ 0n13 & 0y10010) { test_statement(0xE24); } elsif (@rsp & @r10 & @r10 | @r13 ^ (@rbp) ^ @r10 | -0xA ^ 21 >= @rsp & @r10 & @r10 | @r13 ^ (@rbp) ^ @r10 | -0xA ^ 21) { test_statement(0x1A72); }
$error$
$end$
2325
 if (~$teb + +0n12 << @rdi << @r10 | @rdx & @rbp ^ 0n1 & @r13 & $teb | $teb & @rbp ^ @r9 | $ip | (+(0x6)) ^ @r12 < @rdi >> +@r8 & @rsp << @rbp ^ @r9 << @rdx ^ 13 & $ip | 0n7 << @r10 & @r8 >> 3 ^ @r9 >> @rsi & 23 | @rdi)  { test_statement(0x26FD); }
$error$
$end$
2326
 if (@r13 ^ $ip ^ 0xC >> @r13 | @rsi << @rbx >> @rdi >> $thread & @r10 >> @rsi ^ @r10 & @rbx & $buffer <> @r13 ^ $ip ^ 0xC >> @r13 | @rsi << @rbx >> @rdi >> $thread & @r10 >> @rsi ^ @r10 & @rbx & $buffer)  { test_statement(0x109A); ; } elsif ($thread << -@rdi >> $proc ^ @r9 >> @rsi & @rbx ^ 0n6 ^ @r9((12 & ~0y10000 & @rsi & @rbx | @r11) { test_statement(0x1E70);  for (val = 10; ++@rbx != -@rdi | $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2327
 if ($thread << @r13 << @rbp >> @rdi | @rbx & @r13 | ~$thread & ~@rbx ^ 0x11 & $teb ^ $teb < $proc & 0y10 << @rbx >> @r12 >> @rsp)  { test_statement(0xCA8); } elsif (@rsp >> $proc >> @rsi & ~@r12 >> $buffer & @rax & $teb | @r11 >> +$teb)@r9 ^ @r11 >> ~$ip | @rbp >> @rsp | @r12 & 0y1101 ^ $buffer) { test_statement(0x2512); }
$error$
$end$
2328
 if (@r12 << @r8 << @r12 >> @r11 << @rbp >> @r12 ^ @r11 << @rax >< @r12 << @r8 << @r12 >> @r11 << @rbp >> @r12 ^ @r11 << @rax)  { test_statement(0x443); @rax = $buffer >> (@rsi) & (@rbx) ;  while  ($thread ^ @rdx | @r10 >< $thread ^ @rdx | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif ($buffer & @r10 >> 16 ^ @r10 ^ @r8 | @r12 & @r10 & $proc ^ @r8 & -@rdi ^ @r11 | @rbx ^ $teb ^ 0x13 | $teb ^ @r11 | @rdx | @r10 = @rdx << $thread >> @r11 >> +7 & @rdx & 0n13 ^ $thread ^ @rbx | 0y1001 & $ip) { test_statement(0x1B9E);  for (val = 10; 0xC ^ $thread | @r11 @r12 | (2) | @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx >> @rax ^ @rbp & $thread | @rsp > @rbx >> @rax ^ @rbp & $thread | @rsp) { test_statement(0x1ACC);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +0x10 >= -$buffer) ; } else { test_statement(0x10EA); }
$error$
$end$
2329
 if (0n11 >> ($buffer) << 0x9 & $ip | ~$teb << @r12 >> $proc ^ +0y101 & 0x11 | 0y10000 ^ -@r8 & @rsi ^ @rdx ^ $proc | 0n11 | $buffer ! 20 >> @rsi << -$proc >> @r10 >> @rbp ^ 0y10011 << @rdx)  { test_statement(0x19C9);  This is a not opened comment */ } elsif ($ip >> @r13 >> ~@r12 & $proc & $teb ^ ($buffer) & @rax = $buffer >> ~@r9) { test_statement(0x1488); }
$error$
$end$
2330
 if (21 + 0n4 << 0y10 >> $teb >> $thread & 0n7 >> ~$ip >> @rdi ^ @rsi ^ 23 >> @rsi & @rdi <= @r10 << $buffer << 0y10001 >> @r11 << @r10)  { test_statement(0x2162);  for (val = 10; @rbx)@rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2331
 if (@r13 << @r9 & @r8 << @r11 >> @rdx >> ($ip) & 0y1110 >> $ip & $proc ^ @rax >> @r13 >> @r13 & @rdi >> $thread ^ $proc >> @r13 | -$buffer << $teb ^ $proc >> @r9((0 + 6 >> @rbp << 0y111 >> @r10 >> @rdi | -$ip ^ @rsi & $proc & $buffer | @r8 >> @r13)  { test_statement(0xE94); } elsif (@r13 ^ $buffer | @rdx ^ (@rbp))@r13 ^ $buffer | @rdx ^ (@rbp)) { test_statement(0x11F3);  for (; @rdi ^ @r13 | @r8 < 0n3;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif ($teb & @rsp & $proc ^ @rdx & @r8 <> $teb & @rsp & $proc ^ @rdx & @r8) { test_statement(0x1F44);  /* This is a comment */  while  (+@r13 +@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 ^ @r12 ^ @r11 | @r11 | @r8 | $buffer ! @rsi | 0n10) { test_statement(0x1EB2); } elsif (@r8 | ~$teb | @r12))@r8 | ~$teb | @r12) { test_statement(0xF2F);  break; val = @r11 ;  if (+~@rsp <> @rsp)  { test_statement(0x268B); } } elsif ($teb >< @rax | 0y100) { test_statement(0x1835); } elsif (@r11)@rdx) { test_statement(0x10A6); } elsif (+$proc = @rsp) { test_statement(0x10BC); }
$error$
$end$
2332
 if (@rdi << @rbx << @r10 ^ @rax << @r10 ^ -0y0 ! @rdi << @rbx << @r10 ^ @rax << @r10 ^ -0y0)  { test_statement(0x800);  while  (@r9 & 0n10 ^ +$thread ^ @rsp ! @r9 & 0n10 ^ +$thread ^ @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   break; ;  /* This is a comment */  if (@r12 >= @r12)  { test_statement(0x6C6); } } elsif (@r8 >> @r10 >> 0n1 & 0y1101 >> 0n16 | +@r10 & 17 & @rbx(+@rax >> @r11) { test_statement(0x1D44); } else { test_statement(0x19E8); }
$error$
$end$
2333
 if (-@r9 << $teb << @r8 & $ip << @rbx | $buffer & @r10 >> @rax ^ ~-0x4 > (0y100) + @r11 >> $buffer >> @r10 >> @rsi)  { test_statement(0xD74); } elsif (+~@r11 << @r12 | +$thread >> @r12 & 0n19 & @r9 | @r10 & @rsi | @rsi ^ @r8 23 << 0xF & 17 >> @r8 & $ip) { test_statement(0x15F7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp)@rsp) ; } else { test_statement(0x14D9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x10 ! @r11 ^ 4 | @r9) ;  /* This is a not closed comment  while  (@r13 > @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rdi <= +@r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2334
 if (($ip) << @r11 << @r8 & @rsi << (0n8) >> $buffer))+$thread << @rbx ^ $buffer ^ 4 >> @rsi)  { test_statement(0xF47); } else { test_statement(0x2486); }
$error$
$end$
2335
 if (~(@r12) + @rsi & $proc << @r8 >> @rdx & $proc >> @r13 | +@r9 << @r9 & @rbx ^ 0xA <> 0y11 << $teb >> $thread << @r10 | @rbp << 4 >> @rbp >> $teb ^ @rsi | @rbx >> 0y110 & $buffer & @rsp ^ 0n6)  { test_statement(0x1459); } elsif (($ip) >> @r12 & @rsp & (@rbp) & @r9 ^ @rsp & 22 & 0xE ^ 0x10 & ~~@r12 ^ $teb | 13 >> @r9 ^ @r8 & @rdi ^ @rbx ^ (@rbx) | +@r8 ^ @r8 | @rdi | ($teb) | 0n15 >= $ip | @r8 | @rbp ^ @rsp | @rdx ^ 0n0 | +@r13) { test_statement(0x164C); }
$error$
$end$
2336
 if (0x8 + $buffer >> $ip << 0x1 & (@rbp) & $ip >> 0n4(0x8 + $buffer >> $ip << 0x1 & (@rbp) & $ip >> 0n4)  { test_statement(0xA42); } elsif ($ip >> @r8 | @rbp & $ip & @r10))(@r12) << @r13 >> $proc ^ @r11 ^ (@rsp) & $teb ^ @rbp ^ $buffer) { test_statement(0x17BB); ;  /* This is a comment */ }
$error$
$end$
2337
 if (0y1001 << 0x3 & (@r8) << @r8 ! $ip & ($ip) << ~@r8 >> @rdx >> 6 & @rdx >> 0x5)  { test_statement(0x81A); val = $buffer ^ @r12 ^ ~@rdi ^ @rdi ;  /* This is a comment */  for (val = 10; @r13 | 17 = (12);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp << $proc >> @r9 | @r10 >> $buffer & $buffer & @r9 ^ @rbp ^ @r8(@rsp << $proc >> @r9 | @r10 >> $buffer & $buffer & @r9 ^ @rbp ^ @r8) { test_statement(0x1C9);  if (@r11 ^ $buffer | (13) >= $buffer ^ @r12 | 0 | +0y101)  { test_statement(0x1954); }  while  (@r11 ; $thread | 0x0)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 >> @r13 & @r9 & @rax ! @rdi >> 0y1110 & @rdi) { test_statement(0xE2A); }
$error$
$end$
2338
 if ($buffer << 0x9 >> @r11 & @rdi << (($ip)) ^ $teb ^ 0n17 >> @rax ! +@rsp + @rbx << @rsi | @rbx << $thread >> 17 >> $buffer)  { test_statement(0x2C1);  break; } elsif ($thread << $teb ^ $teb >> @rdi & @rbx & @rsi ^ $proc | $buffer >> 10 | @rsp ^ @rax | $teb ^ $proc > +@rbx << 20 >> @rdi & $ip & 0y111) { test_statement(0x2051);  /* This is a comment */ } else { test_statement(0x1C05);  This is a not opened comment */ }
$error$
$end$
2339
 if (@r8 | @r11 << $proc >> @r9 >> @r12 & 0y111 >> @r10 < @rdi + @rax | @r13 << 0x8 >> @rsp ^ @r8 & @rdx & @rax ^ 0xD ^ $buffer ^ $proc)  { test_statement(0xCEA);  /* This is a not closed comment @rax = 0xF ^ @r9 ^ $teb ; } else { test_statement(0xFC1); @rax = @rsp & @r12 | @rdx ^ $teb ; }
$error$
$end$
2340
 if (@rdi >> @r8 >> @rax((0y1100 + @rsp << $thread | $proc << @r13 | 0y10011)  { test_statement(0x119C); } elsif (0y10011 << @r10 & $proc & @r9 & @rdi ^ +@rsi & $proc & 0y1010 > 0y10011 << @r10 & $proc & @r9 & @rdi ^ +@rsi & $proc & 0y1010) { test_statement(0x1598);  break; } elsif ($teb >> @r9 & @r13 ^ +@rax & @r11 ^ @rbp ^ @rbp | -0y110 > @rax >> $thread & $buffer) { test_statement(0xCC3);  for (val = 10; @rdi > @rsi | @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1A6D);  This is a not opened comment */ }
$error$
$end$
2341
 if (@r13 + @rdx << 0n5 << $proc >> @rsi & $ip & @r12 >> @rsi & 0x1 ^ @r11 & 0x8 != @r13 + @rdx << 0n5 << $proc >> @rsi & $ip & @r12 >> @rsi & 0x1 ^ @r11 & 0x8)  { test_statement(0x13A8); }
$error$
$end$
2342
 if (@r9 + $thread & $proc & @rdx >> 0n8 & 0n10 & @rax | @rbx << -@r11 >> @rdx | @r11 >> $teb ^ @r10 & $ip ^ @r12 | +@rsp & $buffer ^ $ip ^ @rdi | @rbp ^ @rsi | 12 | 0x6 != @rbp + @r10 << 0y111 >> @rbp << 0x5 >> (@r10) >> @rax)  { test_statement(0x18B9);  break; @rax = @rdx & 0xB ; } else { test_statement(0x21F3); }
$error$
$end$
2343
 if (-@rbx << ~@r8 << @rbp >> $proc >> $proc & @r11 << @rax >> @r8 & -@rbp & @rdi ^ @rbx >> $ip >> -@rdi & @rbx & @rax ! @r11 + ~@r12 << $buffer >> @r11 & @rdx >> @rdx ^ @rsp & @rdi & @r11 | @r11 >> @r11)  { test_statement(0x2112); } else { test_statement(0x2685); }
$error$
$end$
2344
 if ($teb + 0y1 ^ @r8 << 0x10 >> @r11 | 0x0 & (@rbx) >> 0x0 <> $teb + 0y1 ^ @r8 << 0x10 >> @r11 | 0x0 & (@rbx) >> 0x0)  { test_statement(0x1AED); } else { test_statement(0xB20); }
$error$
$end$
2345
 if (+$teb << 0y11 << 0x6 >> @rdx ^ @r11 << @rdi >> 10 & @rax >> $ip & ~@rsp & @r11 | @r12 & @r10 >> 0 ^ @rax ^ @r10 & $thread ^ ~$teb((+$buffer + @r13 ^ @rax >> @rax >> @rax & @rsi | @r11 << ~(0x6) ^ 0y1111 >> @rsi)  { test_statement(0x129D); } else { test_statement(0x140D); }
$error$
$end$
2346
 if (@rsp << $ip << 10 >> @r13 << 21 >> 0y10011 & 0n0 << -@rdx & (@r10) >> +$teb & @rbp & @rsi | @rsp & $teb ^ $ip & @r9 >= (@rsp) << $buffer >> @rdx << $ip >> @rax >> @rbx & @r9 << @rbp >> +0n6 >> @r8 | $ip << $ip >> @rsi & -$ip & @r12)  { test_statement(0xAA9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n7 | $buffer >= -~@r10 ^ $ip ^ @rbp | @rsi ^ @r12) ; } elsif (0n5 << 21 & ~~@rdx & $proc & -$thread ! 0 << 0y1000 >> $proc & 6 >> ((@r11)) & ~$thread & 0y110 ^ @rsi >> 0n7 & +(@r10) & -@rax | @r11 | $ip | @r12 ^ $proc | @r10) { test_statement(0x2695); val = $ip ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8((@r8) ;  while  (0n17 == +$buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; (@r13) @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x1EE8);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ($ip) >< ($ip)) ; }
$error$
$end$
2347
 if (@rdx << $teb >> $proc << @rbx ; $teb << @r12 >> @r10 >> @r13 >> $thread | 0y10010 << @r13 >> +@r11 | -0n5 >> $ip)  { test_statement(0xC07); } else { test_statement(0x1075);  This is a not opened comment */ }
$error$
$end$
2348
 if ($thread << +0y1011 << $buffer >> 0n4 & @rsp >> 0n5 <> $ip + @rdi << -@rsi << $teb | @rbp << -~0n17 >> @rbp & ~@r9 >> @r11 ^ @r9 ^ ($ip))  { test_statement(0xF62); }
$error$
$end$
2349
 if (@r10 >> 0y100 << $buffer >> +@r10 & @rdi > (@rdx) << $teb << @r9 >> @rsi >> 0n5 >> @r13)  { test_statement(0x24CA);  // /* This is a comment  } else { test_statement(0x1901); }
$error$
$end$
2350
 if ($ip << $teb >> @r8 << 0xB | $proc << $ip >> 0n1 >> 0xA & @r11 ^ @r12 >> -@rdx ^ 12 & @r9 ^ $buffer @r10 + ~@r10 << @r11 & +$proc << $thread & 20)  { test_statement(0x14B3); }
$error$
$end$
2351
 if (@rdx > @rax >> @r13 << $teb ^ +@rax >> +@r13 | @rax << @r8 | 0y1 & (@r12) ^ @rbp)  { test_statement(0xF45);  // /* This is a comment  } elsif (@rdx))@rdx) { test_statement(0x1120);  // /* This is a comment  } elsif (~@r12))@rbx >> @r10 & @r9) { test_statement(0x1F0B);  /* This is a not closed comment  for (; @rsp > @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx & +@rsi | (@rsi) ^ @rsp ; $thread & $teb) { test_statement(0xAA8);  for (val = 10; (@rsi) = @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x14EF);  // /* This is a comment  }
$error$
$end$
2352
 if (@r8 + @r11 << $teb >> $proc >> @r12 & $proc << -4 & @r12 >> ~@rdx ^ @r12 & @r12 >> @rax ^ @rbp >> $proc ^ 3 & @r8 | 14 >> ~0y1001 >> +$ip | @rdx & @r13 ^ @rsp | 0n14 @rax << $proc & -@r8 << 0x2 & @r10 >> $thread | @r10 >> $proc >> $teb ^ $proc | @r13 & +0n0 & 0xC)  { test_statement(0x1E5F); } elsif (~0y1011 << @rbp & @r12 & +@rdx ^ 0n0 >> 15 ! ~0y1011 << @rbp & @r12 & +@rdx ^ 0n0 >> 15) { test_statement(0x2E); } elsif (@rsi & $proc <= @rsp >> @rdx & 23 & @r13 ^ @r9 & -@r9) { test_statement(0x16EB); } else { test_statement(0x4D8); }
$error$
$end$
2353
 if (@r11 + 16 << @r8 << +@r11 & @rbx << $thread & 0n3 ^ @r12 ^ @rsp >> ~@r10 > @r11 + 16 << @r8 << +@r11 & @rbx << $thread & 0n3 ^ @r12 ^ @rsp >> ~@r10)  { test_statement(0x1D7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 ! @rbx ^ (($ip)) ^ 0y1101 | -$teb ^ @r9) ; } else { test_statement(0x8E8); }
$error$
$end$
2354
 if (@rsp + $ip >> 0y10000 << @rsp >> $buffer & @r11 << @rax & @rsi & @rsi ^ @r11 << 0x12 & @r9 >> $thread & +$buffer & @r11 | $buffer ^ @rdi >> @rbx & -@r8 & (~@r8) != $ip & $teb >> ~~$teb >> @rdi | ~@rax << @r8 & @rdi >> @rbx & @r11 & @r9 | +@r10 & @rbx & $teb)  { test_statement(0x1524);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi > @rsi ^ 0n9 ^ @rdx | -0x7 ^ 0y1011 | @r9 | @r8) ; }
$error$
$end$
2355
 if (-0xF << ~(@rax) >> +2 << $teb | $proc & ($buffer) >> @r11 & $thread & 21 ^ $thread <= @r10 + @rdx << ($buffer) << @rdi >> $teb << @rbp >> $proc)  { test_statement(0xAB8);  /* This is a not closed comment  break; } elsif (@rbx >> 0x6 >> @rsi ^ @r9 >> @rsi))+$proc << -$teb | (0x5) >> @rsp & @rbx & $ip ^ ~+@r9 ^ @rax ^ @rsi) { test_statement(0x23B4);  break; } elsif (@rdx & @rbx & $proc ^ 0 & 0n13 ^ $thread ^ $buffer | @rdx & @r10 <> @rax >> -@rdi & @r12) { test_statement(0x2459); } elsif (@rbx ^ $thread >= @rbx ^ $thread) { test_statement(0x87F); val = $buffer ; } else { test_statement(0x5); }
$error$
$end$
2356
 if (@rbp >> @r9 >> @r8 >> $ip ^ @rax << @r11 >> 17 & @rsp & (@rdx) & $buffer)-+0y1101 + (0x2) ^ @rdx << 0n2 >> 0x12 & @rbx >> @r13 | @rbx << $proc ^ 0x6 & 0y1000 ^ @rdi & $buffer | 0y1000 ^ 0x5)  { test_statement(0x1222);  /* This is a comment */  This is a not opened comment */  if (@r9 <= @rbp | $teb)  { test_statement(0x1F75); } elsif (-@rbp != 22) { test_statement(0xE3A); } else { test_statement(0x1731); }  This is a not opened comment */ } else { test_statement(0x200B);  while  ($buffer | @rbx | @r11 >< $proc ^ @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  /* This is a not closed comment  if (+@r11 < @r13)  { test_statement(0x2672); } }
$error$
$end$
2357
 if (@rbp >> $proc >> ~@rax & $proc >> @rdi & $proc >> @rsi >< @r8 | $teb << $proc >> @r8 | ~@rsi & $ip | -@rdx ^ (@r9) | 2 ^ $buffer | @rdx | @rax)  { test_statement(0x12F3); } elsif (@r9 << @rdi >> $thread >> ~~$proc & $buffer & @rbp & $teb 23 & +$ip >> 0x5) { test_statement(0x10B7); } elsif (@r13 ^ 0y1 & @rax ^ @rdx ^ $buffer == @r13 ^ 0y1 & @rax ^ @rdx ^ $buffer) { test_statement(0xD78); } else { test_statement(0x1715); }
$error$
$end$
2359
 if (+@r11 + $teb << @rsi << $ip & $proc << @rdx >> @rbp >> @rsi & @rdi >> $proc & @r12 & (@r12) ^ 0n7 ^ -$ip >> -+0x3 <= +@r11 + $teb << @rsi << $ip & $proc << @rdx >> @rbp >> @rsi & @rdi >> $proc & @r12 & (@r12) ^ 0n7 ^ -$ip >> -+0x3)  { test_statement(0xB38); }
$error$
$end$
2360
 if ($thread << 0y110 << @r13 | @rsi << 0y111 >> -@rbp & @r13 & (~0y1001) | @r10 ^ ~0n10 ^ @r13 ^ @r8 <> $proc << @rbp << $proc >> +@rbx << @rdi & @rsp << @r9 | @rbx << $buffer >> @r9 >> ~@r13 ^ 0xA >> $proc)  { test_statement(0x452); } else { test_statement(0xDFD); }
$error$
$end$
2361
 if (~$ip + @rdi >> $thread | @r8 >> @rbp >> +@rbx & ~@rsi >> @rsp & @r13 & @r11 >< -(@rbp) + -0y10010 & @r11 & $teb & 7 & $teb ^ 10 << -0xA & ~$teb >> $buffer & @rax & +@rsi)  { test_statement(0xC78); } elsif (@rbx << @rax | 0n1 >> +$buffer ^ @rax | ~@rdi ^ @r11 | @rbx ^ @r9 | +@rsp | @rdx ; @rbp << $thread & +0y100 & @rdx ^ @r12 & 0y10000 & @rbx) { test_statement(0x1060); ; } else { test_statement(0x1938); }
$error$
$end$
2362
 if ($thread + @rdx >> 0y1011 << $ip >> (--11) >> @rbp | @rbp & @r12 & 20 & @rsi))$thread + @rdx >> 0y1011 << $ip >> (--11) >> @rbp | @rbp & @r12 & 20 & @rsi)  { test_statement(0xA92);  // /* This is a comment   for (val = 10; @r13 ! @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx = ~@r10) ;  /* This is a comment */  This is a not opened comment */ }
$error$
$end$
2363
 if (-@r12 + @rdi << 0x5 >> $thread << @r13 >> $proc | (@r8) & +(0) >> @rsi & @rdx & 6 ^ (-+$proc) >> 0x0 & @rbp & $thread | @rax >> (+0y1101) ^ @rdx & $ip ^ @rsp | ++$teb ^ @rsp | (@r9) | @r10((@rbp << @rdx << @r9 >> $teb >> @r11 & +@rdi << @r9 | $teb)  { test_statement(0x115A); } elsif (@r12 >> @rsp >> @r9 != @r12 >> @rsp >> @r9) { test_statement(0x246); val = +0x7 ^ @r8 ^ 0x8 ; } elsif (@rbp & $thread & $ip ; @rdx & $thread & 0y0 | 0x5 & @r9) { test_statement(0xE22); } elsif (@r11 & $teb ^ $buffer | @rax ^ $thread | @r13($teb) { test_statement(0x20A9); } elsif (17 | -@rdx >< ($buffer) | @r9) { test_statement(0x1BF8); } elsif ($ip > $buffer | 5) { test_statement(0x362);  /* This is a comment */ } elsif (0y1011(@r13) { test_statement(0x124A); } elsif (@rsp @rsp) { test_statement(0x1310); } elsif ($thread < $thread) { test_statement(0x23A5); }
$error$
$end$
2364
 if (0y1010 + $thread >> @rbp >> -1 & $buffer & @r13 >> 0n12 ^ @r9 >> -@rsp & ~@r10 >> @r10 ^ @rbp >> @rbx | $teb & @rsp ^ @r10 ^ $teb((+$ip & @rdi & @rsi >> @rsp & @r13)  { test_statement(0x24BC); } elsif (@rdi >> @r8 >> @rsi ^ +$proc & @rax ^ @r9 & $proc ^ @r13 ^ $teb ! @rbp << @rdi | @rsp & @r11 & @rbp ^ $thread) { test_statement(0x1730); } else { test_statement(0x85);  // /* This is a comment  }
$error$
$end$
2365
 if ($thread & @rbx << (@r10) ^ $proc >> $ip ^ @rax & @r8 & $ip(15 << @r8 & @r11 << $teb >> @r9 >> $proc & $proc >> 0)  { test_statement(0x1EE6); } else { test_statement(0x1491);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx)0x0) ;  break; }
$error$
$end$
2366
 if (@r12 & @r9 << 0y1001 ^ $ip << @r13 ^ @rbp >> @r9 | @r11 << ~@rdx & $thread >> $proc & -($teb) & @rsi | @r9 >> $teb & @r10 & $ip ^ $teb ^ -5 | @r12 ^ @rdi | @rdx ^ $thread | @rbx != +@r8 + @rsp ^ $proc << $thread >> 12 >> @r11 ^ 0xB & 0x8 ^ ~@rbx & @rbp ^ @rbp ^ $proc)  { test_statement(0x14AF); }
$error$
$end$
2367
 if ($teb << @rax >> @r13 << @rsp >> ~0n16 >> 3 ^ @rbx ! @r9 ^ +0n9 << @rax ^ @r9 & 0x8 ^ @r10 ^ 11 ^ @r11 | $ip >> $ip >> 0n12)  { test_statement(0x25C2); } elsif ($teb >> @rsi >> @rbx >= 0n5 << @rbp >> ~-@r9 | 0n5 ^ @rsp ^ @rbp) { test_statement(0xFF5);  for (@rax = @r8 ^ $buffer | -0xA | $proc; $proc | (-$ip) | (@rdx) >< $proc | (-$ip) | (@rdx);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xC5C);  /* This is a not closed comment }
$error$
$end$
2368
 if (@r13 << @r11 = 0n14 >> +0n2 | (-@rbp) << $ip >> 0x5 & $buffer >> $thread & $teb)  { test_statement(0x16BB);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp | @r9 | ($thread) == @rsp | @r9 | ($thread)) ;  break;  This is a not opened comment */  This is a not opened comment */  while  (@rdi($buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2369
 if (~~$teb + $teb << @rsi << $thread >> 11 ^ 0y101 << 6 >> 0n4 & +$buffer >> @r9 ^ @r11 >> $ip & @r13 & @r8 ^ @r12 & $proc (@rsp) + 0n1 << $ip & @rsp >> 4 & 0n18 >> -@rsp ^ @rax << +0n8 & 0y1100 >> $buffer ^ $buffer & @rdi & @rbp)  { test_statement(0x15F7); } else { test_statement(0x295); val = @r9 ^ @rdi | (@r13) | @r8 | @rsi ; }
$error$
$end$
2370
 if (0x13 + 0x8 << @r11 >> $teb << @r13 & $thread << @r9 & 4 | @r8 & $buffer >> @r9 & @r8 ^ $buffer & 0n6 & 0n10 < @rbx + @rax << @rdi << 0n7 & $proc << @rbp & 11 >> ~12 ^ @r11 << @r13 >> @rsp & @r9 & 1 & +@r11 | @rbx << @rsp >> +@rdi >> (@r8))  { test_statement(0x91E); } elsif (@rdx & $buffer >> @r13 ^ @rdx >> $buffer ^ 0xA & (@rax) | @rbx >> $buffer & @rbx & @rdi | @rdi & +@r13 ; ~@r10 >> @r9 ^ 1 ^ 13 & @rbx ^ @rdi | ~@rsi & $buffer | -@rsp | $buffer ^ $proc) { test_statement(0x1391);  while  (@r9 = +21 ^ @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x245); }
$error$
$end$
2371
 if (0y10000 + @r9 << $buffer & $buffer & $teb >> @rbx & @rdx == $teb << $proc << @r9 ^ -@rsp >> $buffer >> @r12 & @rsi >> $ip ^ $proc >> @rbp & @rax)  { test_statement(0x129E);  for (val = 10; @rbx ^ ($ip) | $buffer | (@rbx) | @r8 > @rbx ^ ($ip) | $buffer | (@rbx) | @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@rsi << $buffer & @rdx >> @rsi >= @rsi << $buffer & @rdx >> @rsi) { test_statement(0x1888); } elsif (@r10 >> 0n15 ^ @rsp & $buffer)0x10) { test_statement(0x23B6);  for (@rax = @r11 | @r9; @r8 ; @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x392);  // /* This is a comment  }
$error$
$end$
2372
 if (@r8 << $buffer >> $ip << @r8 >> @rbp >> $thread ^ $buffer & (@rdx) >> @r13 & ~$proc > (0y1000) + $thread << ($ip) << @r8 & 0xB & @r11 >> @rdi ^ @rdx << @rsi & $proc >> @rdx ^ $ip >> @r11 & @r13 & @r11)  { test_statement(0x52);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x1 ^ $thread | ~@r11 | @rdx))0x1 ^ $thread | ~@r11 | @rdx) ; } else { test_statement(0x16FE);  /* This is a not closed comment }
$error$
$end$
2373
 if (@r13 >> $thread | $buffer ^ @r13 >> +-@rbx ^ @r10 ^ $teb >< 12 << @rsp << @r13 & @r12 & @rsp & -(($teb)) & @rbp ^ @rax & @rax ^ @rbp >> @r8 & @r9 & ~@rbp)  { test_statement(0x20D4); } elsif ($ip & $teb >> @rax ^ $ip >> @r13 & ($thread) & @rdx ^ $ip & @rbx ^ @rbp ^ @rax < $ip << 0y101 >> -$thread >> $ip & @r9) { test_statement(0x15CF); ; } elsif (@rsp >> @rdx & $teb & @rax ^ @rbp & $thread | @rax)@r12 >> @r13) { test_statement(0x2299);  while  (++$teb ! ($buffer))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r9 | @rax ; } elsif ($buffer ^ 0x2 ^ @rbx < 12 ^ -@rax | @rsp ^ $thread | @rdi | @rdx) { test_statement(0x15FF); @rax = @r11 | @rdi ; } else { test_statement(0xADB); @rax = @rbx & 0n3 | 0 | @rdx | +@r9 ;  for (val = 10; @r10)0y10010;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r10))@r10)  { test_statement(0x1970); } }
$error$
$end$
2374
 if (@r10 + @rbp << @r11 ^ @r8 << @r8 & (@r13) ^ @rsi >> @r11 & 11 >< @r10 + @rbp << @r11 ^ @r8 << @r8 & (@r13) ^ @rsi >> @r11 & 11)  { test_statement(0x1F7); } else { test_statement(0xDE3); }
$error$
$end$
2375
 if (14 + $buffer << @r11 >> 0y10001 << ~@rbx | @rsp >> @r13 & @rbx >> $thread ^ +@r11 & 0y1110 ^ @r9 ^ $buffer ^ @r13 >= @rdx | $proc << @r11 & 0n8 >> @r8 ^ @r8 >> @r9 ^ @r12)  { test_statement(0xBDD); } elsif (@r12 << $proc & 0y1010 >> 14 ^ @r9 ^ $proc & $proc | @r9 > @rbp << @rax) { test_statement(0x2439); } else { test_statement(0x1323);  /* This is a not closed comment }
$error$
$end$
2376
 if (@rdx + @r10 << @rax >> @rsi << -@r10 >> @r11 >> $ip @rdi << @rsp << @rsp & $buffer << @rbp & @rsi)  { test_statement(0x357); } else { test_statement(0xA0A);  for (val = 10; $thread | @r11 >< 0y1111;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
2377
 if (2 + 5((2 + 5)  { test_statement(0x6D9);  while  (0y10011 & @r10 < 0y10011 & @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xC4D);  /* This is a not closed comment }
$error$
$end$
2378
 if ((@r12) + @r12 << @rbx & $teb << @rbp >> $buffer ^ 0y1111 << -@rsp & $ip >> @r12 = @rdx + @rsp << ~@r10 ^ $teb << @r12 & $ip >> $teb & @r8 & $teb | $thread ^ 3 >> @r13 & 0x11 | $proc ^ @rbp & @r10)  { test_statement(0x20A6);  if (0y1010 & $ip ^ +$ip ^ 0y110 ! $buffer & $proc ^ @r10)  { test_statement(0xD0); } }
$error$
$end$
2379
 if (0y1 + 0y10 >> @r10 >> -@r11 >> $teb = 0y1 + 0y10 >> @r10 >> -@r11 >> $teb)  { test_statement(0x14C7); ;  for (val = @r9; ~@r12 ^ @rdi != $buffer ^ 20 | $buffer | @rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2380
 if (@r10 << (@rdx) << $thread & @rax << @rbx & @rbp & @rsp | @r13 << @r12 & @rdi >> 16 ^ @r8 >> @rsi & @r10 | @r8 >> @rdx & @rbp & @rbx))~0x12 << ($teb) << @rbx & 0 ^ @rsp & @rdi & @rbp ^ @r9 | @r8 | 0n6 ^ @rsi & -@r8)  { test_statement(0xBBB); } elsif (@rbx << (@rbp) >> @rbx | @r11 ^ -@r12 <= @rbp << @rbp >> @rdi & @r12 >> $ip | ((@r13)) & @rsp & +$buffer) { test_statement(0x15F9);  /* This is a comment */  // /* This is a comment  } else { test_statement(0x1BA5); ; }
$error$
$end$
2381
 if (@r10 + +3 ^ @rbp << @r10 >> @rsi & 0n18 ^ @rdi & $buffer | $buffer << 0n15 ^ @rdi >> 0x13 | +--$teb >> @rdx & ~0 <> 0y10011 ^ 0n3 & @rdx & $thread ^ @rdi & $ip & @rax ^ $ip | ~$teb >> @r9 >> $proc | @r11 >> @r10 & @rdi ^ $ip)  { test_statement(0x1FDF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 & @r11 ^ $proc ^ @r8 >= @r11 & @r11 ^ $proc ^ @r8) ; } elsif (@rsp << @rax ^ -@r8 & ~@r10 | @rdi >> $thread & $teb & 0xC ^ (@rax) & $thread ^ $ip ^ @rax @rsp << @rax ^ -@r8 & ~@r10 | @rdi >> $thread & $teb & 0xC ^ (@rax) & $thread ^ $ip ^ @rax) { test_statement(0x4EE);  // /* This is a comment   for (val = 10; +$buffer | $teb > @rsi | @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif (@r11 & $buffer ^ @r11 & $ip | 0 ^ @r9 ^ ~0n11 | ~$buffer | @r10)@rbx) { test_statement(0x14); ;  /* This is a not closed comment } elsif (-$thread & 0x4 | @r9 ^ @r12((-$thread & 0x4 | @r9 ^ @r12) { test_statement(0x1E84);  // /* This is a comment   /* This is a not closed comment }
$error$
$end$
2382
 if (@rbx + 0y10000 << $proc << @rax >> @rbp << @rax >> 0y11 >> 0x12 & @rbp >> +$buffer ^ $teb << @rdi & @rbp >> -@rsp & @r9 & @r12 ^ @r10 ^ @r8 & $buffer ^ 0n2 ^ @r10 > (@rbp) << 10 << @rbp >> @rsi << @rsi & @rdi >> @r8 & ~@rbx >> @rbx ^ 0y1 << +0n9 & @rsi & @r8 | -(((@r8))) >> $buffer >> 21)  { test_statement(0x1C2); } elsif ($thread << $proc >> @r8 >> @rbp & @rbp ^ 21 >> $buffer == $thread << $proc >> @r8 >> @rbp & @rbp ^ 21 >> $buffer) { test_statement(0x1922); }
$error$
$end$
2383
 if (@rdi << @rax ^ @rbp << @r9 >> (@rdx) & @r10 >> @rbx ^ @rdi)@rdi << @rax ^ @rbp << @r9 >> (@rdx) & @r10 >> @rbx ^ @rdi)  { test_statement(0x17FB); } else { test_statement(0xD8D);  This is a not opened comment */ }
$error$
$end$
2384
 if (@r9 + @rbp << @rdx >> $teb << @rax ^ @r10 << @rdx | -@rdx << @r8 & @r10 >> @rbp & $proc | @rsp >> @r13 | 0x6 & @rdi ^ 0y10011 <> @r8 + $proc << @r12 >> $ip >> @rdx ^ @rax << @r12 >> $teb & +@rdi | ~@r8 >> @rdi >> @r10 | @r11 ^ ~@rax & $proc | $proc ^ @rsi ^ +@r12 | 0y10)  { test_statement(0xF65); }
$error$
$end$
2385
 if (++@r9 << ~0y1100 & ~4 & @r12 | @r9 >> @r13 ^ $teb >> $buffer & @rbp = 0x4 + 0n10 << @rbp & $ip << $ip)  { test_statement(0x1565);  break; }
$error$
$end$
2386
 if ((@r9) << 0n17 >> @r9 << $teb >> ~@rbp >> $ip | (0x7) >> @r12 >> $proc ^ @rbx & @rdi & @rdi ^ @rbp ^ 20 ^ $teb (@r9) << 0n17 >> @r9 << $teb >> ~@rbp >> $ip | (0x7) >> @r12 >> $proc ^ @rbx & @rdi & @rdi ^ @rbp ^ 20 ^ $teb)  { test_statement(0x1FC5); val = @r10 ^ 0n3 ^ @r10 | $proc ^ +@rbp ; } else { test_statement(0x14BF); }
$error$
$end$
2387
 if (0n7 ^ $buffer << ~$thread & 0xD >> @r13 | (-@rdx) >> (0xB))@rax ^ @rbx << (17) & @rbx >> @r12 & @rsp & +~0n10)  { test_statement(0xC96);  break;  while  ($proc ^ $ip <= $proc ^ $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x6B1);  /* This is a not closed comment  if (0xE(($thread)  { test_statement(0x177D); } }
$error$
$end$
2388
 if (@rbp >> @r9 ^ @r11 >> 10 >> @rbx >< -@rsp + @rax << @rbp << @r9)  { test_statement(0x68F);  // /* This is a comment  ;  /* This is a comment */ } elsif (@rdi & @r13 > $ip & @rax >> 0n1 & 11 & $proc) { test_statement(0x20EF); }
$error$
$end$
2389
 if (~@rbx >> @r10 << $ip >> 14 >> 16 & ~@rdx << @r9 & $teb >> 21 & $ip ^ ~($thread) >> @rax >> @r12 & @rbp & $thread >= 0n16 + @r9 & 16 << $buffer & 0n10 & 0n19 & @rbx | ~@r8 << @rbx >> @rbx >> @r12)  { test_statement(0x23D8);  for (val = 10; @r11 & $proc ; $proc ^ @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2390
 if (@rsp + $buffer << @rsi & ~$ip & @r8 >< @rax >> ~@rsi << ~0y1000 ^ -@r12 & +@r9 >> @rdi & 16 & +~@rdx | @rsi | @r8 & @r9 & @rsi)  { test_statement(0x2C7); } elsif (0y1100 << @r13 ^ (~@r10) >> 0n11 & 0 & @r13(0y1100 << @r13 ^ (~@r10) >> 0n11 & 0 & @r13) { test_statement(0x21E1); }
$error$
$end$
2391
 if (@rsp + $teb << @rsp >> 0n10 << $buffer >> @rbx >> @r9 & $teb << @rbx >> @r12 >> $proc & @rdi & 0x0 & 0y110 ! @rsp + $teb << @rsp >> 0n10 << $buffer >> @rbx >> @r9 & $teb << @rbx >> @r12 >> $proc & @rdi & 0x0 & 0y110)  { test_statement(0x1C72);  // /* This is a comment  } else { test_statement(0x1A7C);  for (val = ($proc) ^ @rsi | @r13 | $teb; @rdx ^ 0xD @rdx ^ 0xD;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2392
 if (-@r12 >> @r11 << @r10 & @rdi >> 0xA >> $ip ^ 20 << +@r10 | $buffer << $thread >> @r12 >> 0n2 < (@rsp) << $proc >> -0n15 << $thread & 0y1000 << @rbx ^ @r8 << @rbp ^ 0y1111 >> @r9 & ~@r8 & @rdx ^ 0y10001 & @r8)  { test_statement(0x250A); } elsif (@rsp << $ip & @rbp & ~$thread & @rbp ^ @rsi ^ $buffer & 0y10011 ^ $buffer ^ @rsp | @rsi >> 0y1 & $thread & @r13 | 0xB | +$proc ^ $thread | 0n19 | @rdi >< $proc >> $buffer & @rsp >> +@rsi ^ @rdi >> -$thread & @rdi | @rbx | 0x9 & +0n13 ^ @rdi) { test_statement(0x1475); } else { test_statement(0x59E);  while  ($ip ^ $proc | @rax | @r11((@rdi ^ 0n11 | @r9 | 0x11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x10 | 16 >< 0x10 | 16) ; }
$error$
$end$
2393
 if (@rdx >> @r10 & ~0n2 << @rsi & $proc >> @rdi ^ @r9 >> @r8 >> ~@r11 & +0xE | 0y1110 << $teb > @rdx >> @r10 & ~0n2 << @rsi & $proc >> @rdi ^ @r9 >> @r8 >> ~@r11 & +0xE | 0y1110 << $teb)  { test_statement(0x2166); } elsif (@rbp << @rdx ^ @r10 >> @rbp & @rsi & @r11 < @rbp << @rdx ^ @r10 >> @rbp & @rsi & @r11) { test_statement(0x1099);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n19 ^ $thread | @rsi | @rbx <> $teb | @r12) ; }
$error$
$end$
2394
 if (@rdi + @r11 & 0n16 >> 0xE & 0n16(@rdi + @r11 & 0n16 >> 0xE & 0n16)  { test_statement(0xE96);  // /* This is a comment  } elsif (@rbp >> 22 | 0y10 ^ ~$ip & @r11 ^ (@rbx) ^ @rdi | @rbp & @r12(@rbp >> 22 | 0y10 ^ ~$ip & @r11 ^ (@rbx) ^ @rdi | @rbp & @r12) { test_statement(0x2091); } elsif (0n13 & @rax ^ $proc & @rdx ^ @rbp ^ $proc | $ip < 0n13 & @rax ^ $proc & @rdx ^ @rbp ^ $proc | $ip) { test_statement(0x14A4);  // /* This is a comment   break;  for (val = 10; $proc == -@r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n2 ^ ~0y1100 ^ @rbx | @rax <= $teb | $buffer | @r10 | $ip) { test_statement(0x1BDD);  break; }
$error$
$end$
2395
 if (@rax + (@rsi) ^ @r9 << (@rdi) >> @r11(0y10000 >> $proc << 0xD ^ @r8 & $thread >> -$teb & @rsi)  { test_statement(0x1189); }
$error$
$end$
2396
 if (~0xB >> 0n9 << @r11 >> @r8 >> @r11 & @r12 >> @rdi & $buffer >> @r13 ^ $ip >= @r12 + $ip << (@r12) & @r10 << $thread >> @rsi)  { test_statement(0xE3B);  break;  while  (+@r10 ^ @rbx != +@r10 ^ @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp >= @rsp | 20) ; } elsif ($thread >> $teb & (@r9) & @rbx & @rsp ^ @rdi >> @rdx ^ +@rsp != $thread >> $teb & (@r9) & @rbx & @rsp ^ @rdi >> @rdx ^ +@rsp) { test_statement(0x20BC);  // /* This is a comment   if (0y11 | @r13 = 0y11 | @r13)  { test_statement(0x2514); } elsif ($teb $teb) { test_statement(0x1456); } elsif (~0y1100 >= $teb) { test_statement(0x24A5); } elsif ($teb(($ip) { test_statement(0x124C); } } else { test_statement(0x22F0); }
$error$
$end$
2397
 if (7 + @rdi >> $proc << $teb >> (@r9) >> @rsi & $thread << ($ip) & $ip($ip >> +-@rbx << @rsi ^ @rsp)  { test_statement(0x1C17);  // /* This is a comment   for (val = 10; ~@r8 ^ -0n6 | ~--@r9 | 0x11 > @r12 | @rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (+-$proc != @r9 << @rsp >> $teb >> @rdx ^ 3 | (~$buffer) ^ 0y10010 & @r13 | +@r9 & 0x3 ^ $teb) { test_statement(0x1AD3); ; ; } elsif (@rsi >> @rsp == ~@rsi & $thread | $teb & @rbx) { test_statement(0x14C0);  /* This is a comment */  // /* This is a comment   // /* This is a comment  }
$error$
$end$
2398
 if (@r10 + @r11 >> @rdx ^ @r12 << 2 >> 0y1100 >> +@rsi | @rdx << 0x9 & $thread >> @r8 != $buffer + ~@rbx << 0x1 & -7 << @rdi >> @r13 >> 0n17 ^ @rdi >> 23 & $teb ^ @r13 >> $proc | 0x11 ^ @rbp & @rbp)  { test_statement(0x251E); }
$error$
$end$
2399
 if (0y101 << $teb >> @r8 << 0y1011 >> @r12 ^ -$teb << $thread & @r12 >> (+$thread) ^ 0y1 | @r9 << $proc >> +$buffer >> $teb & @rbx >> ~@r13 & -12 & @r8 ^ @rsi & $thread & $proc | $thread >> $teb & @r9 & @r9)0y101 << $teb >> @r8 << 0y1011 >> @r12 ^ -$teb << $thread & @r12 >> (+$thread) ^ 0y1 | @r9 << $proc >> +$buffer >> $teb & @rbx >> ~@r13 & -12 & @r8 ^ @rsi & $thread & $proc | $thread >> $teb & @r9 & @r9)  { test_statement(0x23D6); }
$error$
$end$
2400
 if ($proc + $buffer ^ @r13 << $teb >> @rsi >> @rdx | -@r10 & @r9 >> 0y11 | $ip >> (@rax) >< @r8 + $teb >> @r9 & +(@rbx))  { test_statement(0x18F2); } elsif (0n6 << @r12 ^ @rsp >> @r10 & 0y1 & @rsp = +0n9 << @r13 ^ 0y1101 >> @r12 & $buffer ^ @rdi) { test_statement(0x15A5); } else { test_statement(0x15B1);  for (; @rdx | 0x5 | $teb(($buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2401
 if ($thread + @r13 << $ip >> @r13 << @r10 >> -$proc & @rsp << @rax & @rsi >> @r10 & ~@r13 & @r10 | $proc >> -~@rsi >> $proc & @r11 | (@rbp) >> @rsp ^ ~@r11 & $ip ^ $teb ~0xD << @rsp & +~~($teb) << 23 >> @rbx | @r11 << @rsp >> $ip >> -$ip | $buffer >> @rax ^ @rdx | +0x2 & ($thread))  { test_statement(0x19BB); } else { test_statement(0x25FB);  /* This is a comment */  /* This is a not closed comment }
$error$
$end$
2402
 if (0y0 + @r11 >> @rsp >> @r8 >> ~@r10 ^ $buffer << $proc | @rdx << $teb & 1 & +$thread & $ip ^ @r8 ^ -@rax | 21 & @rdi & @r13 | @r11 & @r12 ^ @r8 | $thread)0y0 + @r11 >> @rsp >> @r8 >> ~@r10 ^ $buffer << $proc | @rdx << $teb & 1 & +$thread & $ip ^ @r8 ^ -@rax | 21 & @rdi & @r13 | @r11 & @r12 ^ @r8 | $thread)  { test_statement(0x1EC);  for (; @r10 ^ @rdi | @rax >< +@r12 & $proc ^ $ip | @r13 | (@rdi) | 0n6;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @r13 | @r12 | @rsp((22;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } else { test_statement(0x17E9); }
$error$
$end$
2403
 if ($proc + 0y1000 << $teb >> $thread >> 22 & 0x3 << @r13 & $ip >> $proc ^ $buffer & @rbp | 0y10001 << -@rbx >> $ip >> $ip & @rax >> ~12 & 0x13 & @rbx | ~0n1 & +0x0 & $buffer ^ @r13)0x12 >> $thread << @r11 ^ @rdi << @rax >> $proc >> @rsp ^ @rsi ^ 0n13 ^ $proc)  { test_statement(0x1683);  for (; @rbx & 0y1 ^ @r13 > @r8 & 0y1000 ^ 16 ^ @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x56B); }
$error$
$end$
2404
 if (-$proc << @r8 << @rsp | @r9 << @rsp | @r13 >> @r9 | @r10 & ~($ip) -$proc << @r8 << @rsp | @r9 << @rsp | @r13 >> @r9 | @r10 & ~($ip))  { test_statement(0x1836); @rax = @r13 >> +@r12 & ~$thread & (@rax) | @rax & @rsi ;  while  (@r12 = $ip ^ $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  // /* This is a comment  } elsif (@r11 << @r9 & 0n17 & 0y111 & $ip ^ @rdx >> @r10 ^ @r13 <= @rsp ^ $buffer >> @r12 ^ @r9 & @rsp | @rsp & @r9 & @rax | @rsi) { test_statement(0x1FD1); } else { test_statement(0xDD9);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 ! @r10) ; }
$error$
$end$
2405
 if (@rax << @r8 << 12 ^ 0n0 & @r8 >> 0y10010 & @rbp & @rbp ^ 0n5 >> -0y1001 ^ 0y1111 | @rdi & @r11 >> $proc & ~0n6 ^ @r13 >> @rdx & @rdx @rax << @r8 << 12 ^ 0n0 & @r8 >> 0y10010 & @rbp & @rbp ^ 0n5 >> -0y1001 ^ 0y1111 | @rdi & @r11 >> $proc & ~0n6 ^ @r13 >> @rdx & @rdx)  { test_statement(0x131D); } elsif (@r13 >> @rdx >> @rax ^ @rbp)@r13 >> @rdx >> @rax ^ @rbp) { test_statement(0x203D);  while  (@rbp <= @rbx ^ $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9(($teb ^ @r8 & 0n6 | @rbx | @rbp) { test_statement(0x1D02);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer | 4 < 0y0) ; } elsif (0y11 & @rsp <= @r10 & @rsi ^ ~@r10 ^ @rsp | @r8) { test_statement(0x1336);  /* This is a comment */ } elsif (~@rbx >< @rsi | @r8) { test_statement(0x3B); } elsif ((~-$teb) ; @r13 | 14) { test_statement(0x2639);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 >= @rbp) ;  break;  for (; @r11 <= @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x5C3); }
$error$
$end$
2406
 if (@rax << @r9 >> @r13 | 0y110 | $teb >> @r10 ^ $buffer & @r13 ^ $teb ^ 15 | 0y10000 ^ @rdx == @rax << @r9 >> @r13 | 0y110 | $teb >> @r10 ^ $buffer & @r13 ^ $teb ^ 15 | 0y10000 ^ @rdx)  { test_statement(0x7BC); }
$error$
$end$
2407
 if ($thread + 0n3 << $thread >> @r10 << @rdx >> @r8 ^ (@r10) << $thread & 3 >> @r8 & @r12 & @r11 ^ 0n18 >> @rsp & @rbp ^ -~@rax ^ @r9 | @r8 << -$ip | @rdx >> @rbp((-@r10 + @rdi ^ $buffer << @rdx >> @r12 | ($buffer) & 4)  { test_statement(0x7C); }
$error$
$end$
2408
 if (@rbp << 0y10011 << @rbx >> 0x12 = @r11 & $thread >> $ip ^ @rsp << 0y100 >> -@r9 >> @rbp | (0y1110) << @r9 & @r9 & @r11)  { test_statement(0x2388); @rax = $buffer >> @r11 ; } else { test_statement(0x12C1); }
$error$
$end$
2409
 if (@r12 + ~@r8 << +@r13 | 0y10001 >> $proc | 11 | @rsp @r12 + ~@r8 << +@r13 | 0y10001 >> $proc | 11 | @rsp)  { test_statement(0x1BA8); } else { test_statement(0x535);  /* This is a not closed comment }
$error$
$end$
2410
 if (0x7 ^ $teb >> 0n3 >> $proc ^ 0n15 >> (@r12) & $thread | @rax << @r9 & @rax & @rbx ^ @rbp >> 4 | 0 ^ $ip | @r8 & @rsp ^ @rbx))@r12 << @r9 << @rdi | $thread | @r13 >> 23 ^ @r10 & @r11 ^ @r13)  { test_statement(0x1CEE); } else { test_statement(0xCF6);  if (0y11 | @rbp <> $teb ^ @rdi | @rdx)  { test_statement(0x1C81); } else { test_statement(0x26C2); } }
$error$
$end$
2411
 if (@r13 + @r8 >> +23 ! @r13 + @r8 >> +23)  { test_statement(0x1A32); } else { test_statement(0x32E);  for (val = 10; 0n5 | @r12((0n5 | @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
2412
 if (@r9 ^ $buffer & @rsp >> 0n0 ^ @rdi >> 0n11 & ~@rdx & @r12 ^ @r12 & @rsi ^ (@r13) | 0x6 <> @r13 << 0n7 ^ @rbp << @r10 >> $teb ^ @rdi >> 0x13 & $buffer)  { test_statement(0x269F);  /* This is a comment */  break;  // /* This is a comment  } elsif (0n7 << @r11 == 0n7 << @r11) { test_statement(0x1400); } elsif (0y10010 ^ @r8 & -@r12 | @r9 | @r10 ^ $proc | @rdi 0y10010 ^ @r8 & -@r12 | @r9 | @r10 ^ $proc | @rdi) { test_statement(0xEC7); }
$error$
$end$
2413
 if ($thread << $ip << @r9 & @rsi << +0y100 >> @r12 & 0y100 >> @r8 ^ 0n10 >> +@rsi ^ $proc ^ @r10 ^ @rdx != @rdx + @rsp >> @r13 & 0n19 & 0y10 >> @rsi & @r8)  { test_statement(0x1D57);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 & @r8 ^ @rax ^ @r13 | @rdx | $ip <= +@rbx ^ $teb | @r11 ^ @rbp) ; @rax = @r13 ^ $proc ^ $ip ; } elsif (@r12 <= @r9 >> $proc >> @r8 & 0y1011 | @rbp ^ @rdx & @r13 | $buffer ^ @r10) { test_statement(0x1635); } elsif (+@rbx & 0n8 ^ @rbx <= +@rbx & 0n8 ^ @rbx) { test_statement(0x21D5); } elsif (@r11 | @rbp ^ 0y1001 <= -@rsp & ~@r9 ^ @r8 ^ 2) { test_statement(0x4B1); } else { test_statement(0x1210);  for (@rax = @rsp ^ $buffer; @rsi | -@r8 >= @r13 ^ @rdx | @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 | @rsp <> @r11) ; }
$error$
$end$
2414
 if (0n5 + @rsi << @rsi << $proc >> @rbp << $thread >> ~$ip & $buffer << $teb >> @rsi & @rdi ^ $proc >> @rbp >> $teb ^ 16 >> @r9 & $proc & ~-~@r13 ^ @r8 & 0y1010 ^ ~0y1110 | @r12 >> 0y101 >> @r11 ^ @rax >> ~$teb >= 0y1100 + @rdx & $thread << 0y1100 >> $teb ^ 0n16 >> 0y0 >> $ip | @rsp ^ 0x4 ^ $ip)  { test_statement(0x1396); } else { test_statement(0x1CAD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 ^ @rbp > @rdi) ;  while  (0n17 >< @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = ~@rdi ; }
$error$
$end$
2415
 if (@r8 + ~0n19 << @rax << @rsp >> 0y1011 << 0n14 & $teb >> $proc >> @rsi ^ 0y10001 >> -0n9 >> 0n12 & @rbx >> 0xF <> @r8 + ~0n19 << @rax << @rsp >> 0y1011 << 0n14 & $teb >> $proc >> @rsi ^ 0y10001 >> -0n9 >> 0n12 & @rbx >> 0xF)  { test_statement(0xE72); }
$error$
$end$
2416
 if (~$proc << 0n19 << @rsp >> 0x9 << ~@r8 ^ $proc >> @r8 ^ @rax ^ @r13 & @rdx ^ @r13 ^ 0n10(($buffer + 15 << +$proc >> @rbp)  { test_statement(0xE34); } else { test_statement(0x484); }
$error$
$end$
2417
 if (@r10 << $teb))$teb)  { test_statement(0x255F);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -$thread < -$thread) ; } elsif (@r13 & 0x13 & @rsp & $teb ^ 0y10011 & ~@rdi & @r11 ^ -@r12 ^ @rbp ^ @r8 | @rax & @rdx ; 17 ^ $teb >> @rdi) { test_statement(0xF69);  /* This is a not closed comment  /* This is a comment */ } elsif (0xC & $proc & @r11 ^ (@rsp) & @r10 | @r8 & 0x3 | -$ip))0xC & $proc & @r11 ^ (@rsp) & @r10 | @r8 & 0x3 | -$ip) { test_statement(0x20F1); } elsif (16 | @r10 ^ $proc != 16 | @r10 ^ $proc) { test_statement(0xA75); ; } else { test_statement(0x25B6);  /* This is a not closed comment  /* This is a not closed comment }
$error$
$end$
2418
 if (0y1100 + @r12 << @r8 = @rbx + @r10)  { test_statement(0x20AA); } elsif (~(@rsi) << @r10 ^ @r11 ^ $proc & @r9 ^ $thread | $teb ^ @rbx & @rsp ^ @rax = @rbx << @rdx >> @rbp >> @rbx ^ $thread >> +13 & @rsp & +0n3 ^ $thread | @rbx & @rax | @r9 & @r13 | $proc | @rax) { test_statement(0x592); }
$error$
$end$
2419
 if (@rax + $teb >> @rsp >> 1 >> $teb | ~$teb >> $ip | $ip >> $buffer == +-@r11 << @r11 ^ $buffer << @rbx ^ @rsp & $ip & $buffer | @r9 << $thread & @rsp)  { test_statement(0x109E); } elsif (@rsp << @r11 >> $thread & @rdx & 11 ^ 0y10001 ^ ~@rbp ^ -@r9 ^ -@rbp <> @rsp << @r11 >> $thread & @rdx & 11 ^ 0y10001 ^ ~@rbp ^ -@r9 ^ -@rbp) { test_statement(0x204);  /* This is a not closed comment  for (@rax = @r8; (@r8) | @rsi >= +@rax | -@rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
2420
 if (@rdx + $proc << @r13 << @r8 >> @rdx << 0n11 & $thread << @rdi >> (@r9) = @rdx + $proc << @r13 << @r8 >> @rdx << 0n11 & $thread << @rdi >> (@r9))  { test_statement(0x6D); }
$error$
$end$
2421
 if (@r10 << @rbp << 0n12 >> @rsp >> $proc >> @r13 & 0n7 >> @r12 & @r12 & -$thread & -@rdx ^ $proc << @r10 >> 0y1011 & @rsi >> 0xF & 0n19((@rbx >> +@r12 & @rsi)  { test_statement(0x1038); @rax = 0y101 >> $teb & 5 ^ -6 & $ip ^ @rbp ^ 0xE ;  if ((0n10) > (0n10))  { test_statement(0x24FF); } }
$error$
$end$
2422
 if (0y1111 ^ @rdi << 0n10 >> 0xE >> @r13 & @r10 != @rax & $buffer << @r11 & 0n8 & 0n4 & @rax)  { test_statement(0x1E32); } else { test_statement(0x1937); ;  if (0x13 | 0n9 >< @r8)  { test_statement(0x1797); } elsif (@r13 >= 0n7) { test_statement(0x267F); } elsif ($thread == @rax) { test_statement(0x1195); } elsif ($proc == $thread) { test_statement(0x3A8); }  break; }
$error$
$end$
2423
 if ((0n13) >> @rdi >> @r9 >> $ip ^ (17) << 5 | 0n2 << @rdi ^ @r8 >> @r12 ^ @rsi ^ $ip = $ip + @r10 << 0xF << 11 >> (@rbp) << @rdx >> @r11 >> @r11)  { test_statement(0x3B3);  while  (@r8 ^ @rbx ^ @rdx | @rbx | $proc | @r10 == 0x10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = ~@rsp | @rdi ^ $proc ;  break; } else { test_statement(0x63C);  // /* This is a comment  }
$error$
$end$
2424
 if (@rbx + @rbx & @r13 << @rsp & $ip >> 0n19 | @r10 << $buffer >> @rax ^ @rbp ^ $thread ^ 0y1100 | @r12 >> +@r12 | 0n7 & @r8 ^ @rsp = @r11 << 0x0 << @r13 >> $proc << @rdi & $teb << (@rsi) >> @r9 & @r12 ^ 0x2 & @r11 >> 0x0 ^ 4 >> $buffer ^ $thread & 0x7 ^ @r13 ^ (@r10))  { test_statement(0x2655);  while  ($proc ^ @rsp ^ @r13 > $proc ^ @rsp ^ @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb >> ~@r11 & 12 & @rbx == $teb >> ~@r11 & 12 & @rbx) { test_statement(0x45B);  /* This is a not closed comment }
$error$
$end$
2425
 if (@r8 + (@rdx) << @rsi << $buffer & @rdi << 0y10000 & @r13 >> 7 & 0))@r13 >> @rdi >> @rbx ^ @rdi ^ @r12 & -$proc & @r8 ^ @r9 & @rdi ^ @rdx)  { test_statement(0x459);  for (val = 10; -@rsp & @r13 ^ @r12 ^ @rdx(($proc ^ @r11 ^ $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rdi & ~@rsp ; } elsif ($proc << @r10 | @r13 >> @r8 & @r10 ^ @r8 & @rax ^ +@rsp = @rax << ~@r13 >> @r10 >> 11 & 0y1 | $proc) { test_statement(0x193C); }
$error$
$end$
2426
 if (@r13 != @r13)  { test_statement(0x4D0); ; } elsif (@rdx << $buffer & $proc >> $thread | @r13 & +@r12 ^ @r8 & 0 ^ @r10 | ~10 & @r12 | $buffer | $proc > @rdx << $buffer & $proc >> $thread | @r13 & +@r12 ^ @r8 & 0 ^ @r10 | ~10 & @r12 | $buffer | $proc) { test_statement(0x1CF); }
$error$
$end$
2427
 if (@rsp >> @rax >> @r13 >> $proc ^ +16 >> @r8 & -12 >> -$buffer & @r12 & @r10 ^ -$teb & $buffer & @rsi == @r12 + 0y11 << @rdx << 0xC & -0y1110 << ~@rbp >> 0y1100 | @r10 >> @rsp >> $thread & @rdx & @r12 ^ @rsp >> @rbx ^ 7 & @rax)  { test_statement(0xFD8); } elsif (0n17 << -23 & @r12 | $thread >> @r8 & $proc & $ip ^ @rsp <> @rsi << @r12) { test_statement(0x1C8E); }
$error$
$end$
2428
 if ((-@r11) & @rdi >> 20 & 0n15 >> $ip & @rdx | $teb >> 0x8 | -(@r8) >> $proc & $proc & @r11 | $ip ^ 0 | (0y1100) ^ $buffer ; @rdx + @r11 & @r13 << 0y10 & $teb ^ @rbx >> 6 & @r9 ^ @rax >> @rsi | 0x6 ^ @rax & $teb | 0n10 >> @r13)  { test_statement(0x1F); ;  while  ($proc ^ @rax | $thread <> @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2429
 if ($teb + ($thread) & @r9 << @rdx ^ 6 << @r12 >> @rsi ^ $ip & (@rbp) & -@rsp | $buffer << @r11 >> @rdi >> 0x13 ^ $teb <> 0n0 >> $thread << 0x5 >> @r9 >> @rsp & @rsi << @rbx >> $ip >> $buffer & @rbx >> (0y11) ^ 0x7 & @rax & @rdx & 0x10)  { test_statement(0x1F2);  // /* This is a comment   for (; @rbx ^ @rax | @rsi | @r12((@rdi ^ @rsi | +@r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; ;  while  (~0y10000 >< $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx << @r8 >> $ip < 0x6 << @r10 >> ($proc) >> $proc & @rsp & @r13 & (@rdx) ^ @rax >> $ip & @rbx & @r11 ^ 0y10000 | +$ip & $proc ^ @rdi ^ ~$proc ^ 6 | @r12 & $ip ^ @r10) { test_statement(0x1B34);  for (; $buffer ^ +$thread | 0y1 | $buffer >< $buffer ^ +$thread | 0y1 | $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~+@r12 & @rax ^ @rsi & @r12 | $thread & $teb ^ +@rdi | @rsi ^ 0n1 | $thread))~+@r12 & @rax ^ @rsi & @r12 | $thread & $teb ^ +@rdi | @rsi ^ 0n1 | $thread) { test_statement(0xEF5);  /* This is a comment */  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1011 ! 0xD) ; } elsif (@rsi >= $buffer & 15 | $proc) { test_statement(0x11E0); @rax = @r10 | $thread ; } elsif (($teb)))($thread)) { test_statement(0x1B8);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@r10) @rbx) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@rax ; @rdx) ; } elsif (($teb) < ($buffer)) { test_statement(0x3B2); } else { test_statement(0x1F22);  /* This is a comment */ @rax = 0n16 ^ +@r8 ; }
$error$
$end$
2430
 if ($teb + 0n18 ^ @rbp >> (+@r8) >> $buffer & @rdi ^ @rbp >> +@r13 & (@r11) & ~$thread ^ $buffer ^ $teb != 16 << $buffer >> $buffer >> $ip ^ @r10 << @rax & @r9 | @rax)  { test_statement(0x169A);  break;  for (val = 10; @rsp ^ $teb | 0n13 | $buffer ; @rsp ^ $teb | 0n13 | $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
2431
 if ($buffer + $teb << 0n9 & 16 = @rax << @rbx & @rsp << @r11 & $buffer >> @r10 ^ @r11 << @r13 & ~$thread >> @rbp)  { test_statement(0xDCF); ; } else { test_statement(0xC48);  if (@r9 ^ @rbp(13 | @r10 | $teb)  { test_statement(0x17FC); } elsif (@r10 ! @rsp) { test_statement(0x1889); } elsif ($thread(0n19) { test_statement(0x234E); } elsif ($buffer @rdx) { test_statement(0x2015); } ; }
$error$
$end$
2432
 if (@r12 + ~@rsi << @rsp << $thread >> 0y101 & 6 << ~(-@rdi) >> @rsi >> $ip & -@r12 & $buffer ^ @rax << @rsi >> ~0y1 & ~$teb >> 6 ^ $proc & @rax | @rbx << $ip >> @rdi ^ 0n15 >> $proc | --@r10 >> ~@rbp ^ @rbp ^ @r11 <= @r12 + ~@rsi << @rsp << $thread >> 0y101 & 6 << ~(-@rdi) >> @rsi >> $ip & -@r12 & $buffer ^ @rax << @rsi >> ~0y1 & ~$teb >> 6 ^ $proc & @rax | @rbx << $ip >> @rdi ^ 0n15 >> $proc | --@r10 >> ~@rbp ^ @rbp ^ @r11)  { test_statement(0xAFD);  for (val = 10; ($buffer) & @r13))4 & 11 ^ @rsi | @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r10 @r9 ^ @r8)  { test_statement(0x6BA); } else { test_statement(0x279); } }
$error$
$end$
2433
 if (0y10 0y10)  { test_statement(0x1121); val = @rdx & @rbp & @r8 | $ip ; } else { test_statement(0xC6C); }
$error$
$end$
2434
 if (@rbx + @r12 << @r13 & @rbp << @rdi ^ @r11 << @rdi ^ @rdi >> @r12 ^ $proc & @rax ^ @rsp ^ @rbp | -$thread << @rdi & @rsi & (0x10) | @rdx | @r10 ^ @r13 | @r8 ^ @rdi | @rdi | (@rbp)(@r9 << $teb << @r13 | @rdi << 0y10 >> @rdx >> @r8 ^ $teb >> 0x6 & @r10 ^ @rax & 0y10001 | $ip ^ @r9 | @rdx & @r10 ^ @r11)  { test_statement(0x11F6);  /* This is a comment */ }
$error$
$end$
2435
 if (@r8 + @rdi << @r12 & @r10 << @r11 >> 0x11 >> 0y1000 & $proc >> $ip ^ ~~@rsp << $teb & -@r13 ^ $thread >> $proc | @rax << 11 & $ip >> @rax & 0x1 & 0y11 ^ @rbp >> $teb & @rdx | 0n7 | @rsi > @r8 + -@rbx << @rbp & $buffer << (@rax) >> @rbp >> @r13 & @rdx >> 2 & $proc & @r13 ^ @r13 | @r10 >> ~(@r9) >> $proc)  { test_statement(0x293);  /* This is a comment */ } elsif ($teb << @rax >> $thread >> @rax & 0n0 & $thread ^ @r11 | 0xD & 5 & @r13 ^ @rsp((-@rdi << @r13) { test_statement(0x25FF); } elsif (-@rdi & @r13 & @rdi ^ $buffer & $thread | @r11 & $ip ^ 0x2 ^ @r11 | @r12 < $thread & +@r11 | 0x3 ^ 0n3 ^ $thread) { test_statement(0xFE7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi != @rsp) ;  for (val = @rdx; @r12)$proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($buffer))@r12)  { test_statement(0x15CA); } elsif (@rsi(((@r11)) { test_statement(0xD0F); } }
$error$
$end$
2436
 if (@r11 + $ip << $thread >> $teb >> 0x1 >> 0y1011 ^ @r10 << @r12 & @r9 & 0y1010 ^ $ip | 0n6 << @rsp >> @rdi >> ($teb) ; (@rbp) | @r12 >> @rdi >> $ip & @rbx >> 0y10011 & @rax)  { test_statement(0x206); val = @r11 >> +@rdx & @r11 | $buffer & @rbp | $proc ^ 13 ; @rax = $thread | @rbx ^ -$teb ; ; }
$error$
$end$
2437
 if (@rsi + $teb << -@r13 << @rdi <> $proc << @r10 << @rbx >> @r8 << 0y10000 >> @rbx | @r8 << 0x2 >> -@rsi >> +$teb & $thread & $ip & $teb | @rbx ^ @r9 & @r13 ^ $proc ^ @r8)  { test_statement(0x24CF);  for (val = 10; @rsp & @r8 ^ @r11 ^ @r8 = @r11 & @r12 | @rdi ^ @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb >> -@rsp & ~0y1110 >> 0n8 ^ @rsp >> +-@rsi & ++0n10 & $thread < $buffer >> @rbp >> ~@r10 ^ $buffer & @rbx & @rsi | @rbx & $thread & @rsi ^ $teb & @r9 | $teb | $buffer) { test_statement(0x9EE);  // /* This is a comment   /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rdi((0n4) ; val = $thread ; } else { test_statement(0x1F24);  This is a not opened comment */  for (val = 10; @r10 | ~@rbx >< @r10 | ~@rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  while  (@rbx))$proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
2438
 if (@r12 + 0x4 << +$proc << $thread ^ @rdx & 0n8 & @r8 | @r11 >> 0n11 >= @r12 + 0x4 << +$proc << $thread ^ @rdx & 0n8 & @r8 | @r11 >> 0n11)  { test_statement(0x1F70); val = $ip ; } elsif (($thread) << 0n17 >> @r13 >> @r12 ^ +$proc & @r13((($thread) << 0n17 >> @r13 >> @r12 ^ +$proc & @r13) { test_statement(0xCCC);  if ($teb ^ @rax | $thread > -~~$buffer | @rsi)  { test_statement(0x181A); } } elsif (@rbp >> @rdx | @r8 & @r10 >< @rbp >> @rdx | @r8 & @r10) { test_statement(0x7F4); } else { test_statement(0x108B);  if (@r8 != @r8)  { test_statement(0x875); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -++@rsi | (0n16) >= @rbp) ; }
$error$
$end$
2439
 if (@r13 + @rsp << +0n16 << $ip >> @rbx << @r8 >> $thread >> @rdi | ($buffer) >> (@rsi) >> ~$teb <> @rdx << @r12 << @rbx)  { test_statement(0x21AE);  /* This is a comment */ }
$error$
$end$
2440
 if (@rax + @rdx << @rdx | $buffer << $proc & ~@r11 ^ $thread & @rbx & 0x0 ^ @r8 & @r10 | @rbp >> @rsi & @rbp & 0x3 | 0y10 | $proc ! @r13 << 0n11 << $buffer)  { test_statement(0x1306); }
$error$
$end$
2441
 if ((@rsi) + +@rbx ^ @rsp >> @rdi >> @rdi & @rsp >> @rsi ^ ~$ip >> @rax & @r11 ^ @rbx | 0xB & @r9 >> 0x3 ^ @r9 >> 0xB & @r8 & +@rbx ^ -0n6 ^ @rdx | @rax >> 4 & $thread ^ @rbp & @rdi == (@rsi) + +@rbx ^ @rsp >> @rdi >> @rdi & @rsp >> @rsi ^ ~$ip >> @rax & @r11 ^ @rbx | 0xB & @r9 >> 0x3 ^ @r9 >> 0xB & @r8 & +@rbx ^ -0n6 ^ @rdx | @rax >> 4 & $thread ^ @rbp & @rdi)  { test_statement(0x23D1); ; } else { test_statement(0x43D);  for (val = 10; $buffer ^ $proc | 0y1001 $buffer ^ $proc | 0y1001;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rsp @rsp)  { test_statement(0x14D); } }
$error$
$end$
2442
 if ($teb + -$buffer ^ +@r10 << +-@rbp))20 + 22 << @r12 >> $buffer >> @r8 >> ~@rdx & $ip << $thread & -@rdx >> ~~@rsp)  { test_statement(0x264A);  if (@rdx & ~0xD = @rbx ^ 0y110)  { test_statement(0x2646); } else { test_statement(0x13CB); }  This is a not opened comment */  /* This is a not closed comment  /* This is a not closed comment ; ; }
$error$
$end$
2443
 if (0n10 + @rbx << $teb >> @rax >> @r9 >> $thread & $teb & @rdx & @r12 & $buffer ^ @rsi & @r8 >> @r8 ^ +$ip >> +@rax ^ $proc & @r8 ^ $proc = +-0y101 << 0y1111 << @r8 >> @r12 & $teb >> @r11 & @rbx >> +$proc & $thread & 0)  { test_statement(0x13E0); ; } elsif (@r11 >= @rax << @r10 >> +@rbp ^ @r10 >> $thread) { test_statement(0x15B7);  This is a not opened comment */ }
$error$
$end$
2444
 if (@r12 + $ip << 0y1100 & $ip & +$thread & @r11 ^ @r10 ^ @rbx >> @rbx & 6 ^ @r13 & @rdi | @r13 >> @r8 >> @r10 ^ 0y1000 >> @r11 == @r13 + @rbx ^ $thread)  { test_statement(0x8EC); }
$error$
$end$
2445
 if (($proc) + @rsp << @rsi << @rbp >> @rbx << $ip & @r13 << $teb >> @rsp >> $teb & 12 >> +@r12 & @rsp ^ @r8 << $proc((@r13)  { test_statement(0x1E71);  for (; ~$thread | @rsi $buffer & $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xC3F); }
$error$
$end$
2446
 if ($buffer << $thread ^ $thread << -@rsi ; @r12 + @rsp & @rdi << @r11 ^ -@rbp << @r13 >> @rsp | $thread << -0y1001 & 0 ^ @r8 ^ @rdx & @r11 | $teb & 17 | $teb ^ @rbp | 0xA | -$ip | @rdx)  { test_statement(0x892);  for (val = 10; @r10 & $buffer ^ $buffer ^ -0n5 | @rsi >= @r10 & $buffer ^ $buffer ^ -0n5 | @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc(@r8) ;  This is a not opened comment */ } elsif ($buffer << $ip & $buffer >> @rbx((@r11 << @rbp) { test_statement(0x1E0B); } else { test_statement(0x6B5); }
$error$
$end$
2447
 if (($proc) + @r10 << 0x0 << (@r10) >> @rbp ^ @r8 & 5 >> ++0y0 = ($proc) + @r10 << 0x0 << (@r10) >> @rbp ^ @r8 & 5 >> ++0y0)  { test_statement(0x5DA);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx ^ @rdi @r11) ; ;  break; } elsif (@r13 << (@rdx) & @rbx ^ $proc >> @r10 & $teb & 0n14 ^ 0n11 & $buffer ^ @rsp))@r11 << 0x10 >> +@r10 & @r11 >> @r10 & @rdx & @r9) { test_statement(0x1141); }
$error$
$end$
2448
 if (@rax + @rsp << +5 << +~$thread >> @r8 & @r8 << @rsi ^ @rbx << +@rdx ^ $teb ^ 0x3 & @rdx ^ 0n5 | @rax << 0n3 & $teb >> -$teb & (@r9) != 0xE + ~@rax >> $proc >> $ip >> $proc | @rsi >> @r13 >> $ip & @rdx | -@rbx ^ $ip ^ 0y10000 ^ @rsi)  { test_statement(0x1B57); } elsif (@r9 >> +$teb ^ 0xC >> 0xF & @rdx & -@r10 ^ $thread ^ $buffer | @rbp & @r9 ^ @rsp & $proc | @rdi ^ @r12 <= @r11 >> @r8 ^ 0y1110 & @r9 ^ @r11 & @rdx ^ 0y1000) { test_statement(0xC4B);  while  (@r10 ^ @rax | $proc | @rdi = @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x28F); ;  for (val = 10; @r13 >= @r12 | @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rbx <= $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
2449
 if ($proc + @r12 << @rdx & -@rbx << $proc >> @rax ^ @rsp << @r10 & ~@r10 & @rsp & @rsp ^ @r11 >> @r8 & 0y1100 ^ $proc | -@r11 << 0n10 & 0y10000 ^ @r9 >> @r9 & @r8 | $proc & @r8 ^ @rsi ^ ~@rax ! $proc + @r12 << @rdx & -@rbx << $proc >> @rax ^ @rsp << @r10 & ~@r10 & @rsp & @rsp ^ @r11 >> @r8 & 0y1100 ^ $proc | -@r11 << 0n10 & 0y10000 ^ @r9 >> @r9 & @r8 | $proc & @r8 ^ @rsi ^ ~@rax)  { test_statement(0x126E); }
$error$
$end$
2450
 if (@rax << (@r10) << @rax >> $ip >> -0n7 >> ~(@rsi) & @rsi << +@r10 ^ @rsi << $thread >> @rsp & $proc >> @rbp & ($proc) & @r11 | @r9 << ~0y1011 >> $teb ^ @rsp ^ @r9 ^ $buffer ^ $thread | 14 >> @rsp & $teb ; $buffer << +@r8 << $proc | @rbx >> $teb ^ @rbx >> @r13 & ~@r12 & $ip)  { test_statement(0x1707);  // /* This is a comment  } elsif (@rsp >> 0y0 | +(0x7) ^ ($ip) = @rsp >> 0y0 | +(0x7) ^ ($ip)) { test_statement(0xF9B); val = @r13 ^ @r9 ^ @rsp | @rsp | 0x7 | @rsp ; } elsif (@r11 >> @rbp ^ @rbx)$buffer >> @r13 & $thread & ~-@rsp ^ @r11 & 0y1111 ^ @rsp) { test_statement(0x169E);  This is a not opened comment */ } else { test_statement(0xFB3);  for (val = @r8; @rdi ^ @rax ! @rsi ^ $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; +-~$ip))$proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2451
 if (@r9 >> $ip << @r8 | @r13 >> @r13 & $proc >> @rax & 0n19 ^ $thread & @rax & +@rbp ^ -+@rsp <> @r9 >> $ip << @r8 | @r13 >> @r13 & $proc >> @rax & 0n19 ^ $thread & @rax & +@rbp ^ -+@rsp)  { test_statement(0x189C);  break;  for (val = 10; @rax | @rdx | ~0y10011 > @rax | @rdx | ~0y10011;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   while  (~12 ; @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } else { test_statement(0x299); }
$error$
$end$
2452
 if (@rax >> @r10 >> $teb >> @rbp & @r12 << $buffer ^ @r11 << 0x6 & ($buffer) & $buffer & @rsp ^ @rbx & @rdx ^ @rsp ^ $teb ^ @rsp(($ip << @r12 & @rsp << $proc ^ @rbp & (@rdi) >> @rax & $teb & @rbp | @r8 & (@rdx) >> $proc ^ @rbp >> @r13 ^ @r11 ^ @r13)  { test_statement(0xDC6);  if (@rax | ~~13 ^ 0y10011)0 & 0y1011 ^ 0n6 ^ @r12)  { test_statement(0x200D); } elsif (@rbp ^ @r13 <> $thread ^ @r9 | @rsp | 0y100) { test_statement(0xEFC); }  // /* This is a comment  ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi = @rdi) ;  // /* This is a comment   // /* This is a comment   This is a not opened comment */ }
$error$
$end$
2453
 if (0n4 + +13 | 15 << @rdi & @r10 >> @rbp ^ @rsi ^ $ip & @rdi ^ 0y1111 ^ @rbx))$buffer + $teb << @r8 | @rbp << @r8 >> $buffer >> $ip & 0y111 >> @rax & $thread)  { test_statement(0x17A4); } elsif ($teb >> $thread ^ 0y10000 & 15 & 0x6 ^ $teb & @rbp ^ @rdi == ($thread) & 0y10011 >> @rbx ^ @rsi | ($teb) & @r10 ^ 0n16 | @rsp ^ @rax) { test_statement(0x1FD9);  while  (@rbp ; $ip ^ 0n17 | $ip | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x932); }
$error$
$end$
2454
 if (7 + @rbx >> @rax)7 + @rbx >> @rax)  { test_statement(0x4F2); val = $proc ; } elsif (($proc) << ~~@rsi & @rdx)@rsp << $ip >> @rax >> @r10 & @r10 >> @r12 ^ $proc >> -0n10 ^ $proc ^ (0n13) ^ 0x12) { test_statement(0x13DA); }
$error$
$end$
2455
 if (0x9 >> ~@r11 >> 17 ! 0x9 >> ~@r11 >> 17)  { test_statement(0x15BF);  // /* This is a comment  ; }
$error$
$end$
2456
 if ($buffer ^ @rbp ^ $proc >> 0n13 & 22 ; $thread + $ip >> @rbp << @rbp >> -0n16 >> +@rbx)  { test_statement(0x7F3);  This is a not opened comment */  while  ((@rbp)(((@rbp))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rax << @rdx >> @rbx | @r12 >> 0n15 & @r8 & @rsp ^ @r8 & $teb ^ (@rsp) ^ @r10 | $thread | @r10 ; @rax << @rdx >> @rbx | @r12 >> 0n15 & @r8 & @rsp ^ @r8 & $teb ^ (@rsp) ^ @r10 | $thread | @r10) { test_statement(0x159A); val = $thread & ~0x9 ^ $buffer | @rsi ;  This is a not opened comment */  break; ; }
$error$
$end$
2457
 if (@rsp << ----$proc << @rdx & 10 << ~@rdi ^ +$ip >> @r12 | @r10 << 15 >> @rdi ^ $buffer ^ @rsi & @rbp)0x11 + @rbx << $teb << @rdi & @rbp >> 7 ^ ((0y1000)) >> $thread)  { test_statement(0x1207); } elsif (0y0 << -@rsi & @r9 & @rax ^ @rax >> @rbx & $teb & @r10 ^ +@rsp & 0n18 ^ @rdi != 0y1001 << $ip) { test_statement(0x8BB);  break; } else { test_statement(0x25AE);  /* This is a not closed comment  break; }
$error$
$end$
2458
 if (@rax + 6 << $proc >> @rsi >> 22 >> $proc & @rax >> $buffer ^ 0x8 << +@r9 & @rbx >> ~@r11 ^ +0y110 >> (~$ip) ^ ($buffer) ^ @rbp ^ +@r9 <> @rax + 6 << $proc >> @rsi >> 22 >> $proc & @rax >> $buffer ^ 0x8 << +@r9 & @rbx >> ~@r11 ^ +0y110 >> (~$ip) ^ ($buffer) ^ @rbp ^ +@r9)  { test_statement(0x19F6);  This is a not opened comment */ }
$error$
$end$
2459
 if ($thread & ~0y111 >> @r12 >> @r8 & @rdi | @rax << @rdi >> +@r11 >> 0y0 & @rax | @rdx >> @rdx & (@r12)($thread & ~0y111 >> @r12 >> @r8 & @rdi | @rax << @rdi >> +@r11 >> 0y0 & @rax | @rdx >> @rdx & (@r12))  { test_statement(0x5EB); }
$error$
$end$
2460
 if ($proc + @r10 >> @rax << @rsp >< $proc + @r10 >> @rax << @rsp)  { test_statement(0x263); ;  /* This is a comment */ } elsif (0y100 >> $buffer >> $proc & @rsp & @r8 & -@rsi ^ @r8 >> @r11 & $thread & $thread ^ 17 & 0n7 ^ @rdi | $proc >> @rax | (@r8) & 0x0 ^ @rax <> 0x12 << (0y10010)) { test_statement(0x5F8);  for (; @r12 | (@r13) | $ip != @r12 | (@r13) | $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } else { test_statement(0xB22); }
$error$
$end$
2461
 if (@r12 + $ip << -@r11 << $proc >> 0n9 >> @r10 ^ $teb << 0n14 != $buffer + @r10 << -$teb & @rax << @r13 & @rdi >> @r8 & ~@r13)  { test_statement(0x1FDD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n8 ^ 0y1101 = 0n8 ^ 0y1101) ; } else { test_statement(0x1CAE); }
$error$
$end$
2462
 if (@r13 + @rsp >> ~@r12 << +$buffer ^ @rbx << @rbp ^ 12 & @rdi & -~@r9 ^ @r10 & @rax | @r12 | 11 >> $ip & @r9(@r13 + @rsp >> ~@r12 << +$buffer ^ @rbx << @rbp ^ 12 & @rdi & -~@r9 ^ @r10 & @rax | @r12 | 11 >> $ip & @r9)  { test_statement(0xB7A);  /* This is a not closed comment  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@r13))@r10 | @rbp) ; } else { test_statement(0x3CC); }
$error$
$end$
2463
 if ($thread + @r11 >> $teb << -@rbx = $thread + @rsi << $ip >> $buffer & @rdx << $ip)  { test_statement(0xDE6); } elsif (@r8 << +@rsp ^ 0n8 >> @r12 ^ -@rsi | @rdi & @r12 & @rdx ^ $thread & @rsi | $thread))$teb << 17 & @r13) { test_statement(0x26A1);  // /* This is a comment  } elsif ($proc((@rdx & @rbp & @r13 ^ @rax & (0x6) | $buffer & $teb) { test_statement(0x197E);  while  (@r11 | @rsi = @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r8(0y10010)  { test_statement(0xB76); } else { test_statement(0x2430); } val = -0xB ; } elsif (0n11 ^ $teb ^ 0n15 | $thread(0n11 ^ $teb ^ 0n15 | $thread) { test_statement(0x106F); } elsif (@rdx < @rdx) { test_statement(0x1286); }
$error$
$end$
2464
 if (@r11 + 0n5 != ~-@r13)  { test_statement(0x21D9);  while  ($teb ^ @rbx ^ @r10 $teb ^ @rbx ^ @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } else { test_statement(0x2641); }
$error$
$end$
2465
 if (@r12 << 5 << @r9 >> @rdi << (0y10001) >> $ip | @r12 << @r13 >> @rsi & $thread >> 0x3 & @rsp ^ @r12 & @rax ! $ip | 0n10 << $buffer >> @rax | 0xA >> @rbp ^ (@rdx))  { test_statement(0x1A90); } elsif (@rsp >> @rsi & 0y10011 >> @r8 ^ 0n16 | @rsp >> @rbx ^ +@rdx & $teb ^ @rsp)0y100 & @r9 >> $thread & @rdi & (13) ^ -@rbp >> (0n4) & @rax | @r12 >> 11 ^ @rdx & @rax ^ $ip | (@r8) & 15 | @rsi ^ 0y100) { test_statement(0x1B15);  if (@r8 > @rsi ^ @rdx | $teb | 0n15)  { test_statement(0x1007); } @rax = $proc ;  for (val = 10; 6 ; 6;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif ($ip > @r12 ^ @rdx | +0y1000 | @r11) { test_statement(0xC35);  for (@rax = $thread | @rdi; $proc <= -$ip | 0x9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp | 0n10 | @rbp | $teb = 0y111 ^ @rsi ^ @rax | @r9 ^ (@rdi) | $thread) { test_statement(0x2210); @rax = 0x11 ; @rax = @rbx ; } elsif (@rdx(@rsi) { test_statement(0x1639); @rax = (@rbp) ;  if (@rbx <> @rbx)  { test_statement(0x161B); } } elsif (@r9 == @r9) { test_statement(0xE8E); } else { test_statement(0x1811); }
$error$
$end$
2466
 if (@r11 + @r12(@r11 + @r12)  { test_statement(0x188B); }
$error$
$end$
2467
 if (@rax << @r13 ^ $buffer >> +0y10000 | -++@r8 >> @r12 <= 0x12 << @rsi << @r10 >> @r12 << @r8 ^ @r8 << $ip >> $thread | +-(@rax) ^ @rdi >> @r10 ^ @r10)  { test_statement(0x11A5); }
$error$
$end$
2468
 if ($thread >> @r10 << ++$thread & 0x2 << (@rdx) & @r8 >> @r11 | $proc << 0x7 >> 23 >> -0y101 & @rsp >> @rax & @rsp & ~(($buffer)) | @rax & $teb & ($ip) <= (0y1) + $buffer | ((-$teb)) << @rbp >> -$teb >> $ip & @rsi >> 0y1010 & @r8 & @rdx)  { test_statement(0x1B31); }
$error$
$end$
2469
 if ($ip >> @rdi >> 0xE & @r13 >> @r13 ^ 0y1011 >> @r11 >> @rbp | @r12 & 22 & ~$buffer & +@r12 | 0n0 >> @rbx ^ $ip ^ @r12 $ip >> @rdi >> 0xE & @r13 >> @r13 ^ 0y1011 >> @r11 >> @rbp | @r12 & 22 & ~$buffer & +@r12 | 0n0 >> @rbx ^ $ip ^ @r12)  { test_statement(0xFE4); } elsif (@rsp << (@r9) >> @r11 >> @rsp & @rax >> @r10 ^ $thread >> $teb & 0y10001 & @r11 ^ 22 & @rbx | 0n0 >> @r8 >= 0n7 << $proc ^ @rdx >> @r12 & @r11 & @r13 ^ @rsi | @rax >> @rbx ^ $ip ^ +@r8 | 0y10) { test_statement(0x257A); ;  break; } elsif (@rdx | @rdx & $thread ^ @rsi | @rdi | @r9 > @rdx >> @rax) { test_statement(0x1DEE); } else { test_statement(0x2668);  if (@r8 | -@r8 | @rbx = @rbp ^ @rax | @r8 | @rbp)  { test_statement(0xE8F); } elsif (@r13 > @r13) { test_statement(0x1BAE); } elsif (@r12 <= $proc) { test_statement(0x737); } else { test_statement(0x17D); }  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
2470
 if ($ip << @r12 << @rbx & @r13 & @rdi & @rax ^ 0n19 << (0n2) ^ -@rdx >> @r11 & 0y10010 & +$teb | $teb & -(+$proc) >> @r9 & @r12 ^ @rbp >> @r13 ^ @r10 ^ $buffer <> $ip << @r12 << @rbx & @r13 & @rdi & @rax ^ 0n19 << (0n2) ^ -@rdx >> @r11 & 0y10010 & +$teb | $teb & -(+$proc) >> @r9 & @r12 ^ @rbp >> @r13 ^ @r10 ^ $buffer)  { test_statement(0x7AD); } elsif ($proc >> $proc & +@r11 ^ @rdi >> +0x0 | @r10 >> 0n6 & @rdx ^ @rbp & @rdi > $proc >> $proc & +@r11 ^ @rdi >> +0x0 | @r10 >> 0n6 & @rdx ^ @rbp & @rdi) { test_statement(0x1223);  while  (@rdi ^ (@r11) ; +(3) ^ 2 | $ip | 0n19)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rbx @rsi | 0x13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } else { test_statement(0xBD6); @rax = $thread & (@rdx) ;  for (@rax = @r13; @r13 ! @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12((@rsp) ; }
$error$
$end$
2471
 if (@r8 + $proc & @r8 | @r8 & @rbp & (@rdx) & @rdi ^ @rsp & @rsp < 5 + $proc & @rdi << @rax & @r13 >> $teb)  { test_statement(0x877); ; } elsif (+@rsi >> @rdi & 0n18 >> 0n18 & @r9 | 0y110 & @r13 & 0x6 ^ ($teb) & @r9 ^ -+$buffer ^ @rdx | $teb & @rdi ^ @rax | @rsp > +@r9 << $buffer >> 12 >> @rbx & $ip) { test_statement(0x1FA);  // /* This is a comment  } elsif (0y1110 ^ @rsi & @r10 ^ 0y100 | @rdx | 0y1 | @r13 < 0y1110 ^ @rsi & @r10 ^ 0y100 | @rdx | 0y1 | @r13) { test_statement(0x124B); } elsif (-@rbp | @r13 ^ +$ip | $proc | 0n3 == -@rbp | @r13 ^ +$ip | $proc | 0n3) { test_statement(0x15D9); val = $ip | $proc ; } else { test_statement(0x2703);  while  ($thread < @r8 ^ 0y1101)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2472
 if ($thread + @r13 << $buffer << -@r8 >> 0x13 >> @r13 >> @rsi ^ @rsp >> @rax >> ($proc) & @rsp >> 0n2 ^ 0x1 >> 0y1 & 0n17 & ~($teb) ^ $teb & $ip | @rdi << +$ip >> @rsi & $ip >> $proc & @rdx & @rdi ^ @r11 >> (@r10) & ~0x13 & $buffer | $proc >> -(@r8) | $buffer ^ @r13))@r9 + @rsi << 0y1001 >> @rbp << @rax & @r13 << @rdx >> -@r9)  { test_statement(0xB20); ;  This is a not opened comment */  /* This is a not closed comment }
$error$
$end$
2473
 if ($teb << @rsi << @rax >> @rax & @rax << @r11 & @r8 >> @rdx < 0y1001 + -@rsi >> @r12 << @rdx & @r9 << 0n9 & @rdx ^ @r10 << @rdx | @r9)  { test_statement(0x231B); } elsif (@r8 >> @rsp & @r13 >> ~0n4 ^ $thread & $teb & -@rbp ^ @rsi & $thread ^ $ip ^ @rsi | @r8 | @rdx | +@r9 ^ -@r8))$buffer) { test_statement(0x81); val = @r12 & @rbp | @r12 ; } elsif (@rbp ^ @rbx | @rax ^ $proc ! @rbp ^ @rbx | @rax ^ $proc) { test_statement(0x25A6); } elsif (0y1000 0y1000) { test_statement(0x2348);  /* This is a comment */  // /* This is a comment  } elsif (@rdx ^ +@rbx | $teb | @r10(@rbx ^ 0x9 | @r11) { test_statement(0x8CA);  break; ;  for (; (@rbx) >< (@rbx);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp | @rsp <> @rax) { test_statement(0x1825); } else { test_statement(0x152D); }
$error$
$end$
2474
 if (@r10 + @rdi << +@rdi >> ~@r8 << @rsp >> @r12 >> @r11 == +$teb >> @r13 & @r10 >> 0x7 >> @r13 & ~~$thread)  { test_statement(0xD6C); }
$error$
$end$
2475
 if ($buffer + @rbp >> @r11 & @rsp >> @r9 & @rsp & 0xC <= @r13 << $ip << 0y10001 >> @r9 << -$thread >> (@rbx))  { test_statement(0xDAB); val = @rbp & @r9 ^ @rdi ; } elsif (0n1 >> @r10 & @rbx >> $teb ^ 23 >> 17))@rdx << $buffer ^ +-@rsp & @rdi & @r11 | @r12 >> 0n16 ^ ~0n13) { test_statement(0xD99);  This is a not opened comment */  if (@rsi <= @rsi)  { test_statement(0xC63); } else { test_statement(0x83E); } }
$error$
$end$
2476
 if (0n12 << @rax << +@r13 >> 6 << @r13 >> ~+$thread >> @rbx >< 0n12 << @rax << +@r13 >> 6 << @r13 >> ~+$thread >> @rbx)  { test_statement(0x1B4);  while  (+@r11 ^ @rsi ^ 0n12 | @r10 ^ @r11 | @r12 >< @rbp & @r12 ^ 0x10 ^ $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  /* This is a comment */ } else { test_statement(0xD82);  while  (@r8 | @rax ; $ip | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2477
 if ($buffer + 0x7 << @r11 & @rdx << @r11 >> @r10 >> @rbx & $thread & $thread & ~@r10 ^ @rsp >> +0xA >> @rax & @r13 >> @rdi & @rdi & @rbx <> @rax << 0x4 << @r9 >> (@r13) >> 0x7)  { test_statement(0x1B85); } elsif ($buffer >> +$proc > $buffer >> +$proc) { test_statement(0x1D67); }
$error$
$end$
2478
 if (@rax << $proc << (@r8) >> @r10 & -0y10000 << @rax ^ @rsi << @rbx ^ $thread >> @rbp & @rdx))@rax << $proc << (@r8) >> @r10 & -0y10000 << @rax ^ @rsi << @rbx ^ $thread >> @rbp & @rdx)  { test_statement(0x682);  This is a not opened comment */ }
$error$
$end$
2479
 if (@rax + $proc << @rbx << -$buffer >> @r11 & 0x8 & @r10 >> @rsi | @r12 & @r13 >> $teb & @r9 ^ 20 | 0y10011 ^ +@r9 & @rdx | (+$proc) ^ 0n15 ^ @rsp | -+@rdx | @rsp | $ip < @rax + $proc << @rbx << -$buffer >> @r11 & 0x8 & @r10 >> @rsi | @r12 & @r13 >> $teb & @r9 ^ 20 | 0y10011 ^ +@r9 & @rdx | (+$proc) ^ 0n15 ^ @rsp | -+@rdx | @rsp | $ip)  { test_statement(0x2602);  for (@rax = @rsi; @rsi & @r11 ^ @r13 <> @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  This is a not opened comment */ } elsif (@r12 << $teb >> @rbx & 0y1000 & @rsi & -@r12 ^ @r12 & @rbp ^ @rbx ^ @r8 <> @r12 << $teb >> @rbx & 0y1000 & @rsi & -@r12 ^ @r12 & @rbp ^ @rbx ^ @r8) { test_statement(0x8EA); ;  for (val = @r8 | @r9; @rdi | @rsi)@rdi | @rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } else { test_statement(0x1548);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13(~@rax | $ip) ; }
$error$
$end$
2480
 if (@rax + @r10 << 16 << @r8 >> 0x11 << @r10 & $proc << @rdx >> -@rax >> @r10 & ~@r12)@rax + @r10 << 16 << @r8 >> 0x11 << @r10 & $proc << @rdx >> -@rax >> @r10 & ~@r12)  { test_statement(0x1F07); }
$error$
$end$
2481
 if (@r12 & @rsi & @r10 & @rax & $thread ^ @rax | $teb << @rdi >> @rbp ^ @rsi & @r10 & 0x0 | @r9 >> @rdi & @rbp ^ @rsi & 0 ^ @rsi ^ @rdx <> @r12 & @rsi & @r10 & @rax & $thread ^ @rax | $teb << @rdi >> @rbp ^ @rsi & @r10 & 0x0 | @r9 >> @rdi & @rbp ^ @rsi & 0 ^ @rsi ^ @rdx)  { test_statement(0xCA6);  break;  /* This is a not closed comment } elsif ($proc ^ $ip | @rdi >> @r9 & @rsi ^ 0 == (@r8) | @rsi >> ~@r12 | +@rax & $ip ^ ~~@rsi ^ $buffer | +@r8 ^ @rdi | +$ip) { test_statement(0xB8A); @rax = @rbx ; } elsif (@r11 & 20 <> @rax ^ @r9 & @r10 ^ @r10 ^ -$buffer | $ip) { test_statement(0x2551); }
$error$
$end$
2482
 if (0xB ^ @r12 << @rsp ^ 0y10000 & ~0x7 & @rbp ^ @r13 & @rbp ^ -$proc ^ @rbx 0xB ^ @r12 << @rsp ^ 0y10000 & ~0x7 & @rbp ^ @r13 & @rbp ^ -$proc ^ @rbx)  { test_statement(0x264E); } else { test_statement(0x2644); }
$error$
$end$
2483
 if ($ip << @rax << @r10 | @rbp >> @r12 >> @rbx == $buffer + @r13 & @r12 >> @r9 >> $proc ^ 0y1000 << @rsp & @r11 >> ~0y1001 & 7 ^ @r10 >> (@r10) & @rax & $proc)  { test_statement(0x8A7);  while  (@rax | @rdx | @rax | 0n15((@rbp & $thread ^ 0n11 | $teb ^ -0y11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi & @r10 & +-(@r12)(((@r12) ^ ~@rbp >> 0y10001 & $teb & @rdx ^ @rdi & 0y0 | @r12) { test_statement(0x1A61);  This is a not opened comment */  while  (@r8 | @rsi >< @r8 | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @r12))$thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rax & 0xA((@rdx >> @r11 & (@rsi)) { test_statement(0x6EA); } else { test_statement(0x1DB4);  break; }
$error$
$end$
2484
 if ($thread + @r10 << 5 << @rbx >> @r11 << @r10 >> $proc | @rsp << ~@r12 >> $ip >> $buffer ^ $teb >> 4 ^ @r12 & @r10 ^ $teb >= @r10 >> +10 >> $proc >> $teb & 0x5 >> 0x9 & 0n13 >> $buffer)  { test_statement(0x1A4); } else { test_statement(0x173C); }
$error$
$end$
2485
 if (0x4 ^ @rbp >> $proc >> -@rsp & 0xF & $teb(0x4 ^ @rbp >> $proc >> -@rsp & 0xF & $teb)  { test_statement(0xFAB); } else { test_statement(0x1170); ;  while  (@rbp | @rdi @r12 | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2486
 if ($ip + $teb << $buffer ^ @rbp << @rbx >> ~@r13 >> (0n14) & @rax >> @r8 ^ @rbp = @r13 & @rbx >> @r8 ^ @r12 >> @rsi >> @rdi & 0n9 >> @rsi & @rdi & @rdx ^ $ip ^ +@r10)  { test_statement(0xD63); } elsif (@rdx >> @r10 >> @rdi & @rbx >> $proc & $buffer ^ @r13 >> +0 & @r8 ^ @rax & -$teb ^ @rsp | $buffer >> @r13 ^ @rbp != $proc << @rdi >> 0x2 >> @rsp & ~@r10 & 0y111) { test_statement(0x5CC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ -16(@rbx | $proc) ; } else { test_statement(0x1079); @rax = 0n13 | @rsp | 0y101 ;  while  (@rdx | @rsp = @rsp | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2487
 if (@r11 << @rbx << @r13 == 3 + ~@rdx & $teb >> $ip & @rbp & $thread & $buffer | @r13 << @r8 >> +@r13 >> @r11 & (@rdx) >> -@rsi)  { test_statement(0x24D5);  /* This is a comment */ } elsif (@r13 >> @rdx >> $ip | @rsp ^ 1 & 11 | ~$ip @r13 >> @rdx >> $ip | @rsp ^ 1 & 11 | ~$ip) { test_statement(0x2124); }
$error$
$end$
2488
 if (@r10 + @r9 & $teb ^ 13 ^ $ip ^ @r13 & @r11 ^ $thread = @r10 + @r9 & $teb ^ 13 ^ $ip ^ @r13 & @r11 ^ $thread)  { test_statement(0x3F9);  // /* This is a comment   if (+$buffer | @rax))+$buffer | @rax)  { test_statement(0x1AA4); } elsif (@r11 >= $thread | $ip) { test_statement(0x78B); } elsif (@r11 <> @r11) { test_statement(0x12C4); } elsif (+-$teb = (@rsi)) { test_statement(0xF74); } elsif (@rsi)@rsi) { test_statement(0x26CA); } else { test_statement(0x593); }  /* This is a comment */ } elsif (+0xE >> @r11 >> 2 & @r13 >> @rax & +0xA | ---@rsi >> ~~$ip & 0y101 | @rbp & @rbx | @rax != 0y1110 << $teb | 0n13 >> $buffer | @r11 ^ @r12 ^ 0x11) { test_statement(0xE51); @rax = 0n19 & $teb ; } elsif (@rbx & $teb ^ (@r9))-@rdi >> ~@r12) { test_statement(0x2253);  // /* This is a comment   // /* This is a comment  val = ~0y10000 ;  This is a not opened comment */ } else { test_statement(0xCFE); }
$error$
$end$
2489
 if (-@rsi + @r8 << @rbx << 0n15 & @rdx << $ip & +@r13 ^ $buffer >> @r12 >> $buffer | @rdx << @rsi & @rax >> @rdi | +@r8 < -@rsi + @r8 << @rbx << 0n15 & @rdx << $ip & +@r13 ^ $buffer >> @r12 >> $buffer | @rdx << @rsi & @rax >> @rdi | +@r8)  { test_statement(0x4D7); } elsif ($thread | 0x12 >> 0x8 < +@r13 << @r13) { test_statement(0x815); } elsif (12 & $ip | @rbx & -@r10 | $proc ^ -+@rdx | @r8 == 12 & $ip | @rbx & -@r10 | $proc ^ -+@rdx | @r8) { test_statement(0x18F7);  This is a not opened comment */  /* This is a comment */  for (val = 10; 0y10011((0y10011;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ @rax = @rbp ; } elsif ($proc & -@rsi | @r8 ^ $teb($proc & -@rsi | @r8 ^ $teb) { test_statement(0x1441); } elsif (@rsi ^ @r10 | @rbx | @r12 < $ip ^ $proc | @r10 | @rsi) { test_statement(0xE67);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 > @r9) ; @rax = ~@rsp ;  /* This is a comment */ } elsif (@r10 | -@r8 ! @r11) { test_statement(0xB60);  This is a not opened comment */ ;  /* This is a not closed comment }
$error$
$end$
2490
 if (@r13 + @rdi << @rbp >< $proc + $teb >> $thread & $proc >> -(@r8) | $teb & @rbx & @r13 ^ @r8 >> @rax | @r8 & 0y110 ^ $proc & $teb ^ $ip)  { test_statement(0x38B); }
$error$
$end$
2491
 if ($teb + @r8)$teb + @r8)  { test_statement(0x17DE); } elsif (@r10 << 0x10 | @r8 & $ip ^ @r11 | @r10 & @rsp ^ @rax < @r12 ^ @r8 >> ~0n10 ^ 0y101 | @rax & @r11 | @rdx ^ $teb) { test_statement(0x2B7); @rax = @rsi ^ @r8 ^ 0y1110 | @r13 ; }
$error$
$end$
2492
 if (@r9 + @r11 << $ip < @rax ^ 14 & @r8 & @r9 & @rsi ^ @rbx ^ (@rbx) ^ @rsi | ~$proc >> @r13)  { test_statement(0x1752); } elsif (0n13 << ~@r11(0xF << $buffer & @r13 >> @r8 & $teb ^ @r8 >> 0y111 & 0xF & @r10 | $teb & ($ip) ^ $thread & @rax ^ $thread ^ $teb | @r12 ^ $buffer ^ @r12) { test_statement(0xFF7); } elsif ($proc > $proc) { test_statement(0x1D3D); } elsif (0n10 & +@rdi ^ $ip = @r13) { test_statement(0xF1B); } elsif (~$teb | 21 | @rsp))@rdi | 0y1011 | $proc) { test_statement(0xE73); } else { test_statement(0x1419); }
$error$
$end$
2494
 if ($thread + $proc ^ @rdx | @rdx >> ~$teb & $buffer | @r12 ^ @rbp ^ @r13 | @rsi | $teb ^ 0y10001 | @rdi | @rdx <> -$teb << @rsi >> $buffer >> 0x10 & $buffer & @rsp >> @rsi | $teb & @r13 >> 0n2 | ($teb) >> @r11 ^ (@r11) ^ @r10)  { test_statement(0x220C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi | @r10 ^ 0x9(@r11 ^ 15 ^ $ip) ;  This is a not opened comment */ }
$error$
$end$
2495
 if (@r12 + @rsp & 0y10 << $proc & $teb >> @r9 | $thread & +@r12 >> @r11 | @rsp ^ @rsp & @rdx > @r12 + @rsp & 0y10 << $proc & $teb >> @r9 | $thread & +@r12 >> @r11 | @rsp ^ @rsp & @rdx)  { test_statement(0x43); ; }
$error$
$end$
2496
 if (0xC << 1 << @r12 & -$ip << 0n15 & ~$teb | @r10 >> @rdx >> @rbx > @r8 + @r10 >> 0x0 >> @r8)  { test_statement(0x18CE); } elsif ($thread >> 0n2 & 14 >> @r8 & @rbp & @rax ^ 0y1101 | 12 >> @r8 ^ 0x1 & @rbp ! -@rsi & @r8 >> 0n13 ^ @rbp >> @rsi & $ip & @r9 ^ +@r10 & (@r13) ^ @r13 ^ @r8 | $teb & $buffer ^ $buffer ^ @r11) { test_statement(0x1BB3); ; } elsif (@rdx >> @rdi & +@r9 & @r8 | @rbp & $thread == $buffer ^ $buffer & +@r8 ^ $proc | @r9 & +@rbp ^ 0y1111) { test_statement(0x628);  if ($proc <= $thread)  { test_statement(0x10E); } elsif (~@r8 != @rbp) { test_statement(0x19CE); } elsif (0y1001))@rbp) { test_statement(0x17B1); } } else { test_statement(0x202C);  This is a not opened comment */ }
$error$
$end$
2497
 if (@rsi + $buffer << @rbp << $thread >> 0y1110 >> 21 >> 0y1011 | $buffer >> @r8 >> @rbx ^ 0x0 ^ @rdx & @rdi ^ @r10 | @r12 & @r10 ^ 0x2 & $thread ^ ~@rsp == @rsi + $buffer << @rbp << $thread >> 0y1110 >> 21 >> 0y1011 | $buffer >> @r8 >> @rbx ^ 0x0 ^ @rdx & @rdi ^ @r10 | @r12 & @r10 ^ 0x2 & $thread ^ ~@rsp)  { test_statement(0x1426); @rax = @r8 & $ip & @r13 ^ $proc | @r8 & $ip ;  while  (0n3 ^ $teb))0x1 ^ ~@rsi | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r12 ; @rax = @rbx ;  /* This is a comment */  break; }
$error$
$end$
2498
 if ($ip + ($proc) << $buffer >> +@rdx >> $proc >> (0y1100) & @r9 << (~@rbx) >> -@r12 | ~@r12 & 5 & $teb & $buffer <> $ip + ($proc) << $buffer >> +@rdx >> $proc >> (0y1100) & @r9 << (~@rbx) >> -@r12 | ~@r12 & 5 & $teb & $buffer)  { test_statement(0x2153);  // /* This is a comment  } else { test_statement(0x25E5); }
$error$
$end$
2499
 if (@rdx + 3 << $thread << 0y10011 ^ $buffer | @r11 | 11 & @rsi == @rdx + 3 << $thread << 0y10011 ^ $buffer | @r11 | 11 & @rsi)  { test_statement(0x22A1); } elsif (@r12 ^ 0x10 & 0y100 ; @r8 << $thread ^ 0n10 >> @rbx & $ip ^ @r9 ^ ~@r11 | +@r11 >> (@r10)) { test_statement(0xBBD);  /* This is a not closed comment } else { test_statement(0x5A5); }
$error$
$end$
2500
 if (@r11 + @rbx << 0n0 << @rbp & ($thread) << @rdi >> $buffer >> @rdx & @r10 ^ @rbp >> @rbp >> +17 ^ +@rsp >> @rdx ^ @r11 ^ @rsi(@r13 + @r13 << $buffer >> (0y1110) << 6 >> $proc >> @r12 | @r9 >> $buffer & @r10 >> $teb)  { test_statement(0x1A37);  if (@rax ^ +0x5 ^ 0y1101 <= (0y1))  { test_statement(0x94C); } } elsif (0x4 << -$buffer >> @rdx | @r10 >> -@rax & (@r11) | @r9 & @r8 | @rsp ^ @rbp | @r13((@rbx & $proc >> 0xD & @rdi | 14 | 0y101 & 0n15 ^ @r11 ^ @r12) { test_statement(0x1420);  break;  while  ($buffer != 0n12 | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2501
 if ($teb + @r8 >> (@r12) >> @rsi >> ~@rdi >< $teb + @r8 >> (@r12) >> @rsi >> ~@rdi)  { test_statement(0x1218); }
$error$
$end$
2502
 if ($buffer >> 0y111 << @rsp & $thread << (@r9) & @rax & $teb ^ @rdi | @rsi << @rsp >> @rsi >> @r10 ^ ($teb) >> -14 | -$teb >> @rax & $buffer | +$proc & @rax ^ @rbp ^ ~@r11 | @r9 | @r8 | +~~@r11)$buffer >> 0y111 << @rsp & $thread << (@r9) & @rax & $teb ^ @rdi | @rsi << @rsp >> @rsi >> @r10 ^ ($teb) >> -14 | -$teb >> @rax & $buffer | +$proc & @rax ^ @rbp ^ ~@r11 | @r9 | @r8 | +~~@r11)  { test_statement(0xAF7); }
$error$
$end$
2503
 if (@r11 + $thread >> @rbx << @r11 >> 0y10010 ^ @rsp ^ ~@r10 >> 14 & @rdi & @rbx ^ 21 ^ (@r11) ^ @r13(@r11 + $thread >> @rbx << @r11 >> 0y10010 ^ @rsp ^ ~@r10 >> 14 & @rdi & @rbx ^ 21 ^ (@r11) ^ @r13)  { test_statement(0x443);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp | 7 ^ (@rsi) < +@r8 | $buffer ^ @rdi | -@r10 | ($buffer)) ;  if (-0y0 ! $proc ^ -0y1011 | 0 | @r12)  { test_statement(0xAA2); } elsif ($thread | @r9)$thread | @r9) { test_statement(0x1F03); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi != $ip | @rsp) ; } else { test_statement(0x2652);  break; }
$error$
$end$
2504
 if ($teb << @r12 << 0n11 & 2 << ~@r8 & @r13 & @rbp & $buffer | 0n16 << @rbp >> 16 ! (3) & @rdx >> 4 & @r11 >> @r9 & @rbx)  { test_statement(0x24AA); ; } else { test_statement(0x1D8B); }
$error$
$end$
2505
 if (((~@rsp)) << @rax << $thread >> @rbx >> @rdx >> $proc & +0n18 << 0y1100 >> $ip & -$teb ((~@rsp)) << @rax << $thread >> @rbx >> @rdx >> $proc & +0n18 << 0y1100 >> $ip & -$teb)  { test_statement(0x2305); }
$error$
$end$
2506
 if (@r9 >> @rsi << @rdi >> @r8 ^ $proc << 0n0 & @r12 >> 0x6 & $proc | $proc >> @r8 ; @r9 >> @rsi << @rdi >> @r8 ^ $proc << 0n0 & @r12 >> 0x6 & $proc | $proc >> @r8)  { test_statement(0x3E5); ; ; } elsif ($thread << +@r10 >> @rdi >> @rsp | -$buffer >> $teb ^ @rdx | $proc(($thread & $thread >> @r12) { test_statement(0x8E0);  /* This is a comment */ } elsif (@rbp >> 0y10000 & @r13 & @rsi | ~$teb ^ 0y1001 ^ @rdx | +0y10010 > @rbp >> 0y10000 & @r13 & @rsi | ~$teb ^ 0y1001 ^ @rdx | +0y10010) { test_statement(0x10C0); }
$error$
$end$
2507
 if (+0xF + $thread << 0x13 >> @rax ^ @rbx << @rdx >> @rax & @rdx & $teb ^ $ip >> @r10 & @r8 ^ 0y1111 ^ ($proc) ^ 0x2)~@rsi + ~@rsp << 0y10 >> @rax << @r8 >> 0y111 >> 0n10 & @r11 >> @rbx >> $teb | (@rbx) >> +@rbp ^ 0x2 | 0xF ^ $proc & $proc | $buffer | ($thread) ^ @rbx)  { test_statement(0x20F4); } elsif (@rax << 0xF | +12 >> @r10 >< @rax << 0xF | +12 >> @r10) { test_statement(0x1F62); } elsif ($buffer | +$buffer ^ ~(@r8) ^ 0y10010 >= $proc & 16 & @r12 ^ @r10 & @r11 ^ -@r10 ^ ~@rbx | @r13 & $thread ^ @rdi | 0y100 | $ip | @rdx) { test_statement(0x21D2); } elsif (0n4 & ((0xA)) @rbp & 0y1010 ^ $thread ^ @rsp) { test_statement(0x2320); } elsif (@r8 >< @r8) { test_statement(0x119B);  for (; 0x0((0y10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rbx +@rbx) ; val = @r13 ;  /* This is a comment */ }
$error$
$end$
2508
 if ($buffer + @r10 << $proc >> @rbx << @r8 | +@r11 << ~@rsp >> $buffer >> 0n15 & ($thread) >> @rbx & $proc & @r13 | @rsp >> +@r11 & -$proc & @r9 ^ @rdi ^ ~21 | 22 | @rsi ^ 11 | (@rbp) | @r13(@r9 >> $proc << ~@r9 >> @r13 & @r10 ^ @r10 << @r9 >> @r9 ^ @r12 ^ @rdi ^ @rsp ^ @r13)  { test_statement(0x42D); } else { test_statement(0xB28); }
$error$
$end$
2509
 if (-0y1000 + ~@r12 << 11 << @rsp >> +@rsi << @r12 >> @rdx >> $buffer & @r10 << @rax >> ~@rsp >> @rsp ^ @r9 & $thread >> @rdi ^ @r11 & @r8 ^ @r10 ^ +@r13 | @r8 << @rbp >> @rsi & @rsp ^ @r10 >> 17 ^ $thread & @rdi <> -0y1000 + ~@r12 << 11 << @rsp >> +@rsi << @r12 >> @rdx >> $buffer & @r10 << @rax >> ~@rsp >> @rsp ^ @r9 & $thread >> @rdi ^ @r11 & @r8 ^ @r10 ^ +@r13 | @r8 << @rbp >> @rsi & @rsp ^ @r10 >> 17 ^ $thread & @rdi)  { test_statement(0x1C8D);  /* This is a comment */  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 <> @r9 | @rdx) ; } elsif (@r9 >> ~0x3 ^ $thread & @rdx & $thread ^ 0y100 & @r12 ^ @r13 ^ @rbp | @rsp & @rsp ^ $thread ^ ($teb) ^ @r8 | 0y10010 & 0n6 ^ @r12 ^ @rbx <= @r9 >> ~0x3 ^ $thread & @rdx & $thread ^ 0y100 & @r12 ^ @r13 ^ @rbp | @rsp & @rsp ^ $thread ^ ($teb) ^ @r8 | 0y10010 & 0n6 ^ @r12 ^ @rbx) { test_statement(0xD4F);  break; } else { test_statement(0x1746);  for (val = 10; @r12 ^ @r9 | @rdi | @r8 == 0x0;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2510
 if (-0y10001 + @r12 ^ @rsp << @rdi >> @rbx ^ $buffer >> @r12 ^ ~@rbp & @rdi ! @rbx + @r13 << (@rbx))  { test_statement(0x1CED);  if (12 & @rsp ^ @rsi ^ $teb | @r11 ^ --@r10 | @r9($proc ^ @r11 ^ $teb)  { test_statement(0x13E3); } } elsif (@r12 >> @rsp | $proc | ~$proc & @rdi | @r11 ! 23 << 0n7 >> @rdi & $teb & @r12) { test_statement(0x1DD4); @rax = +$buffer & @r12 ^ @rsp ^ @rsp ;  break;  /* This is a comment */ }
$error$
$end$
2511
 if (@rdx << @r12 << @rbx >> @rsp & 0n11 << (@r9) >> @r10)$proc >> @rbp & $buffer >> @rax >> -$thread & @rbx >> @rbp ^ @rbx >> @rbp | $teb << 6 >> ((0x4)) & $buffer >> @rbp ^ +14 | $proc >> 6 & $proc)  { test_statement(0x133D); }
$error$
$end$
2512
 if (@r12 << (@r11) >> @rsi << (@rsp) >> $thread >> $ip & @rbx << $buffer >> @r13 & -0xD ^ @r11 ^ 0y1 & @r11 | ($buffer) & 0x8 & ~$ip == @r12 + $thread >> @rdx & $thread & +~@r13 >> $teb)  { test_statement(0x1557); ; } elsif (@r12 >> @r9 >> 17 | @r8 & @rsi | $teb ^ @r10 > @rdi << @r10 ^ @rbx >> 0y1010 | @r9 >> @rdi & 0n4 & @r13 ^ @r9 | @r13 & -@rdx) { test_statement(0x1CFA);  // /* This is a comment   /* This is a not closed comment } elsif (@r13 >> 0y11 & 0n10 & (@rdx) | $ip | @rax ^ -$teb | @rsp 0n0 ^ @r12 ^ $ip ^ @r9 | @r11 & @r9 | @r8 ^ @rsi) { test_statement(0x735); } elsif (@r11 & @rdi | @r9((6 & 0y101) { test_statement(0x223F); } else { test_statement(0x1187); }
$error$
$end$
2513
 if (@rdx & @r8 << @rbp >> @rdi >> @rax | @r13 << @rax >> @rsi >> ~$thread <> (@rsi) + @rdx >> @rdi << $teb >> @rax >> @rdx & @r9 << $thread ^ @rsp << $buffer ^ @rbp & $buffer)  { test_statement(0x21D7); } elsif (@r11 << @r10 < $thread << @rdi >> @r10 >> @rsp ^ @rbp ^ +@r8 ^ +@r13 ^ $buffer) { test_statement(0x2492);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx ^ 0n13 | +0n1 | @rsp @rbx ^ 0n13 | +0n1 | @rsp) ; } elsif (@rdi >> ~@rsp)@rdi >> ~@rsp) { test_statement(0x11FD);  for (val = 10; @r11(0x12 | 0n0;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc & @r11 ^ @rax((@r10 & 0n12 ^ @rax) { test_statement(0x372);  if (@rbx((@r10)  { test_statement(0x2350); }  if ($proc(0y11)  { test_statement(0xFFB); } elsif (11 >< 11) { test_statement(0x23E1); } }
$error$
$end$
2514
 if (~0y1 + $teb << -@r11 << @rax >> $buffer >> @rsp & -$proc >> @r13((0xF << @rbp << @r10 >> -@rbx >> $ip >> @rdx | $ip << -@rax ^ @r13 >> $thread & @rsp & -@rax ^ $teb & @r8 | 0y10001 ^ -$thread ^ @r9)  { test_statement(0x161B);  break; } elsif (@r11 << @r12 >> ~+$ip >> 0n1 & $proc & $ip & ~@rsi > 0y1010 << +$ip >> @r10 & 0y110 & @rbx ^ @r12) { test_statement(0x14EA); }
$error$
$end$
2515
 if ((@r10)))(@r10))  { test_statement(0x98E); }
$error$
$end$
2516
 if (+0n10 >> 15 >> 0n13 & @rax << @rax >> +@r8 | +@r9 << ~$thread | @rsi >> @rdi | -@r9 <= 0y11 << 0x10 ^ 0n8 >> 0n4 >> $thread & @rbx | @r10 << @rbx & @r11 >> @rsi & @rdi & 11 | $proc & -@rdi & @rbp | +@rdx ^ @rsp ^ @rdx | $proc | @rax)  { test_statement(0x1F83); @rax = @r10 >> @rsp & ~@rax ^ 0y10001 & $thread ^ 3 ^ ~@rax ;  break;  while  (@r12 | $teb(@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rsp ; }
$error$
$end$
2517
 if (@r10 + @rdx << @rsi << $proc >> 0y1001 << @rsi >> @r8 ^ $thread ^ @rbp & @rax & @rsp | @rdi ^ $thread >> @rbp = @r10 + @rdx << @rsi << $proc >> 0y1001 << @rsi >> @r8 ^ $thread ^ @rbp & @rax & @rsp | @rdi ^ $thread >> @rbp)  { test_statement(0x258B); val = +(@rsi) & @r11 & @rbx ^ @rbx & ($proc) | +-@rax & @r8 ^ @rdi ; }
$error$
$end$
2518
 if (+~@rsi + -$proc >< @r9 ^ @rbp & 0x12 & @rax & -@r13 ^ 0xE >> @r13 ^ @r8 & $buffer ^ @rsp | @r9 << +$teb & $teb & @rsi & $thread ^ ($teb) ^ $proc & ~@rsi | $ip)  { test_statement(0x38F); } elsif ($buffer >> @rsi & @r9 ^ 0n6 >> @rbp ^ @r13 & @rax < @rbp << @r9) { test_statement(0x1487); } elsif (~@rax ^ @r12 >= +$thread) { test_statement(0x8FD); } elsif (@r11 & $teb ^ @r13 ^ 10 >= 0n1 & ($teb) ^ +$thread | @rdi ^ ~@rsp) { test_statement(0x192C);  /* This is a comment */ ;  This is a not opened comment */  if (--+@rdx <= ($teb))  { test_statement(0x1919); }  for (; @rax < 0x12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip ^ $thread | 0x2 | $thread != @rdi) { test_statement(0x2034); ;  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 22 == @rax) ; }
$error$
$end$
2519
 if (@r8 + +@rsp << @rbx & @rsp & @r10 & 0xD & -$teb | $teb | 0n10 >> 0x12 & @rbx & @r11 | -$thread ^ $ip ^ @r8 >= @rax << @rax >> @r13 ^ @rsi >> -@rsp ^ @r11 >> +0x6 ^ @rdx ^ @r12)  { test_statement(0x1F50); } elsif (@rdx ^ 0n0 >> @rdi | +$ip >> -7 ^ @r11 & $thread ^ @rsp ^ $buffer | 0y1010 & @rdi ^ @rsp < 0n6 ^ 0xE & @r10 & @rbx | $teb & @r13) { test_statement(0x1624); } elsif (@r8 & $teb & $teb | 0x1 & @rsi ^ $buffer ^ -$thread = @rsp >> @r12 ^ @rdx & @r13) { test_statement(0x76); } elsif (21 & @rsp ^ 0x10 < @r8 ^ @rbx | (~(~@r13))) { test_statement(0x223);  while  (@rdx >= @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  // /* This is a comment   for (; -@r9((-@r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx))@r8 | @r13 | 23) { test_statement(0x238E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n4 <= (@rbp)) ; }
$error$
$end$
2520
 if ((@r11) << $thread & @r11 << ~$teb >> $proc & @r11 & ++0n11 & @rdx ^ 0xD ^ -0n13 >> @r11 <= @rax << @rdx | @rdi << @rdx ^ @rsp >> @rbp)  { test_statement(0x1CA3); } elsif (~@rsi ^ @rax >> @rbx | 0y1111 >> @r11 & $thread & $thread ^ ~@rbp ^ @rsi ^ @rdx | 0xC((~@rsi ^ @rax >> @rbx | 0y1111 >> @r11 & $thread & $thread ^ ~@rbp ^ @rsi ^ @rdx | 0xC) { test_statement(0x1043); } elsif (@r13 & $proc & @rdx | 0 ^ $buffer >< @rbx & 0xB & (@rbx)) { test_statement(0x294); } elsif (@r13 & @r13 == @rsi | @r10 ^ @rsp) { test_statement(0x68D); } else { test_statement(0x1EB9);  This is a not opened comment */ @rax = @rdx ^ $teb | @r10 ;  if (@rdi > ($proc))  { test_statement(0x93B); } elsif (@rsp ! @r10) { test_statement(0xA6F); } elsif (@rsp((@rsp) { test_statement(0x2366); } else { test_statement(0x10F3); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi(@r10) ; ; }
$error$
$end$
2521
 if (4 + 0xB << $buffer >> $buffer & @r10 >> (20) ^ $ip << 0n1 & 5 & (0y1110) | @r9 >> @rax ^ 11 ^ 0n0 <= @rbx << @rbp << -@rax >> @r11 ^ $buffer << @rax >> @r9 | @rbx | @rdi & 0x2 ^ @r13 & 0n12 | @rdx)  { test_statement(0x453); } elsif (@rbx >> ~@rdi & $thread >> @rdi & 20 & @r12 ^ $proc >> $teb & 0y1001 ^ -@rdi & @rdx | @r13 ^ 0n9 & $thread <> @rbx >> ~@rdi & $thread >> @rdi & 20 & @r12 ^ $proc >> $teb & 0y1001 ^ -@rdi & @rdx | @r13 ^ 0n9 & $thread) { test_statement(0x86B); val = @r8 & $buffer ^ $ip ^ $buffer ;  if (@rdx | @r8))@rax)  { test_statement(0x8AC); } elsif (0n10)0xC) { test_statement(0x1228); } else { test_statement(0x14AB); }  // /* This is a comment   /* This is a not closed comment } else { test_statement(0x1C9); }
$error$
$end$
2522
 if (@r13 << 0n1 & $teb << $teb >> @r10 >> @rsp | @rdx & $buffer >> @rbx & 22 ^ @r12 >> 0y100 & @r8 & @rsp | @r12 >> @r9 & $thread(@r13 << 0n1 & $teb << $teb >> @r10 >> @rsp | @rdx & $buffer >> @rbx & 22 ^ @r12 >> 0y100 & @r8 & @rsp | @r12 >> @r9 & $thread)  { test_statement(0x21A7); ; } elsif ($ip << @rax >> ($ip) >> @rsi ^ @r11 >> 0y10011 & 0y10000 ^ ~@r8 & @rdi ^ @r12((@rsp << @rbx) { test_statement(0xF9B);  if (0n3((@rdx ^ @r9)  { test_statement(0x1685); } } elsif (@rax ^ 0n19 | @r11 ^ @rsp > +@r11 >> @r9 ^ @rdx & $teb | @r13) { test_statement(0xED4);  /* This is a not closed comment  This is a not opened comment */ }
$error$
$end$
2523
 if (@r12 << 0x1 & $buffer << $proc ^ @rdi << @r12((@rax & @rsi >> @rbp & 0n15 & $buffer & $thread | @r9 << @r8 >> 0x3 | ((-@rsp)))  { test_statement(0x102C); } elsif (0x9 << 0n9(@r9 >> 0x11 & $proc & @r11 | $buffer >> $ip & 0y1010 & $ip ^ @rbx ^ @r12 | @r12 & $teb ^ +@r8 ^ @rbx) { test_statement(0x133B);  // /* This is a comment   /* This is a comment */ } elsif (@r12 & 0y1 ^ @rax(($ip | 10 | $buffer ^ @rbx) { test_statement(0x2516); }
$error$
$end$
2524
 if (~@rdi >> @r10 & (0n18) > ~@rdi >> @r10 & (0n18))  { test_statement(0x20D7); }
$error$
$end$
2525
 if (@rdx + @rbx << 0n17 << +@rdi | 0x9 << 0y10011 >> -@r13 | 0x0 ^ @rdx & @r11 | ($ip) & 0n6 ^ @r13 ^ +0xE(@r9 + -(0x12) << +@r11 << @rbx & @rdx >> @rdx >> $teb & $teb | ~@rdx << @r11 >> @r12 & @rax >> +0n2)  { test_statement(0x24C6);  if (@rbp & @rsi ^ @rbp | $buffer ^ ~$ip | @r11 | 0n9 >= ~~@rax ^ @rdi | @r12)  { test_statement(0x8BB); } else { test_statement(0xA7C); } } elsif (-@rbp >> 0n2 >> @rax & @r11 >> 0n14 & 0n17 ^ @r9 >> @r8 ^ $thread ; -@rbp >> 0n2 >> @rax & @r11 >> 0n14 & 0n17 ^ @r9 >> @r8 ^ $thread) { test_statement(0x1952);  // /* This is a comment   for (val = @rax | @r12; @r8 | @r8 != @r8 | @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rsp <> @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip >> $teb & @rbp ^ @rax & @rdi ^ @rbx ^ @rbx > $ip >> $teb & @rbp ^ @rax & @rdi ^ @rbx ^ @rbx) { test_statement(0x145A); }
$error$
$end$
2526
 if (0xD << +0xA >> @r9 & @rax ^ $buffer << $thread >> @r11 >> @rdx | @r10 >> (+@rsi) & +$proc >> ~~$teb & $thread & +$buffer | @r11 & -$buffer & ($teb) ^ $proc | $ip & @rdi ^ @rdx | @r8 ^ 0x10 | @r13 <> 0xD << +0xA >> @r9 & @rax ^ $buffer << $thread >> @r11 >> @rdx | @r10 >> (+@rsi) & +$proc >> ~~$teb & $thread & +$buffer | @r11 & -$buffer & ($teb) ^ $proc | $ip & @rdi ^ @rdx | @r8 ^ 0x10 | @r13)  { test_statement(0x2293); @rax = 0y1000 >> ~@rdi & 0y10010 & 14 | $teb ^ 14 ^ 0y10001 | +@rbx ^ @rdx ; } elsif (@rbx ^ @rbx >> @rbp & @rdi ^ @rbp | $buffer >> @r8 ^ (+~(-$buffer)) & @r13 | @rdi | ($ip) ^ @r13)$ip << 10) { test_statement(0x828); } elsif (+$teb & @rbx & 21 | ~$buffer | @r10 | 0y10 | @rdi >= +$teb & @rbx & 21 | ~$buffer | @r10 | 0y10 | @rdi) { test_statement(0x1CF7); ; } elsif (+0y1011 ^ $thread | -@r11 ^ $buffer >= @rsp & 0y110 ^ ($teb) | @rax) { test_statement(0x145B); }
$error$
$end$
2527
 if (+@rsi + @r11 >> @rsi << @rax & $proc << @rsp >> @rax >> @rbx <> -@r8 + 0x10 << $teb >> 0x5 & +@rdx << $ip | @r12 << 3 & -$thread >> 0n1 & @r12 & @rsi)  { test_statement(0x5A6); } elsif ($ip & @rbp & $ip ^ @rsi >> $ip & @r8 & @r10 ^ $proc ^ (@rsp) | @r12 | $teb ^ (@r10) $ip & @rbp & $ip ^ @rsi >> $ip & @r8 & @r10 ^ $proc ^ (@rsp) | @r12 | $teb ^ (@r10)) { test_statement(0x1B6D); } elsif (-($teb) >> 0n3 & @rdi & @r13 ^ $teb ! @rbx >> @rbx ^ 0y1111 & $thread ^ 0x7) { test_statement(0x1CF7);  // /* This is a comment  } else { test_statement(0x18B3); }
$error$
$end$
2528
 if (@rax & $proc << @rsp(@r13 + -~$teb << @r9 << 0y100 >> $ip ^ @rsp << @rsi >> (@rax) & -~@r10 & @r13 & ((0y10011)) | ~@rdi >> $proc)  { test_statement(0x90D);  /* This is a comment */  This is a not opened comment */ } else { test_statement(0x113A); }
$error$
$end$
2529
 if ((@rbx) << 5 >> $ip << @rbp >> 3 & +@rsp & @r13 & @r11 & $thread ^ -16 << @r9 >> @rdx ^ @r13 >> $ip & @rbx ^ @rsp @r11 + @rdi >> $proc & +@r10 << 0y1100 >> @r12 >> @rdi | +@r11 << @rdx >> 16 & @rax >> @rsp & @rax & $thread ^ 0x13 >> @r12 ^ @rbx & $thread ^ $ip)  { test_statement(0x5D);  This is a not opened comment */ @rax = $ip ^ $ip ; }
$error$
$end$
2530
 if (+@r11 ^ +@r9 << 0y11 >> 0n2 >> $proc & 0x10 ^ 0y110 & @rsp & @r11 ^ -@rdi | ~@r12 << @rdi(+@r11 ^ +@r9 << 0y11 >> 0n2 >> $proc & 0x10 ^ 0y110 & @rsp & @r11 ^ -@rdi | ~@r12 << @rdi)  { test_statement(0x1683);  This is a not opened comment */  This is a not opened comment */  /* This is a not closed comment } elsif (@r12 >> $teb & @rdx >> @rbx & 0x5 0y10000 << 0y1110 >> $buffer >> -@rax & @r10 | @rdi >> 0y1100 & $thread & $thread ^ @r11 & $proc) { test_statement(0x1895); } elsif (23 >> @rax & @r9 & @r10 ^ @rbp)23 >> @rax & @r9 & @r10 ^ @rbp) { test_statement(0xAEE);  /* This is a not closed comment } elsif ($proc & @rax | @r8 | @r13 > @rbx & 0n9 ^ @rsp | +(@rbp) ^ $thread | @r9) { test_statement(0x19BD); } elsif (0n12 ^ @r8 | 10))0n12 ^ @r8 | 10) { test_statement(0x19A2);  if (+@rdx <= $proc)  { test_statement(0x1A4B); }  /* This is a comment */  for (; $buffer($buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xE4C);  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
2531
 if ((@rsp) + @r10))(@rsp) + @r10)  { test_statement(0xB1C);  while  (@r8 ^ @rsp | @r11 <> $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r12 ^ $proc < @rsp | ~@r8 | 10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 << @r8 ^ @rdx >> @rdx ^ $proc | 0x0 >> @r12 & @rdx & @r8 ^ (0x12) | @rbp < @r13 << @r8 ^ @rdx >> @rdx ^ $proc | 0x0 >> @r12 & @rdx & @r8 ^ (0x12) | @rbp) { test_statement(0x2AA);  while  (@rsi ^ @rsp((0y111 ^ @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (~~-0x6 >= @r9)  { test_statement(0x247B); } elsif ($teb < $teb) { test_statement(0x7CA); } elsif (($ip) = @rax) { test_statement(0x8C5); } elsif ($teb ; $teb) { test_statement(0x2256); } else { test_statement(0x1D9E); } } else { test_statement(0x70E); }
$error$
$end$
2532
 if (0x0 >> @rsi & -@rbp >> @rsi & @r9 & $teb & @r8 ^ @rdx & @r11 >> ~@r12 | ~@rax >> $ip & @r8 & $ip ^ @r12 >> @rdx ^ +@r8 | $buffer >> @r9 & 0y1001 ; 0x0 >> @rsi & -@rbp >> @rsi & @r9 & $teb & @r8 ^ @rdx & @r11 >> ~@r12 | ~@rax >> $ip & @r8 & $ip ^ @r12 >> @rdx ^ +@r8 | $buffer >> @r9 & 0y1001)  { test_statement(0x244E);  /* This is a comment */ val = @r13 ^ @rbx ^ @rax | +@r13 ^ @rax ;  /* This is a not closed comment } elsif (@rbp << @rbx >> 6 >> @rdx ! @rbp << $thread >> 6 & 0xA >> @rbx & 0y11) { test_statement(0xC8D);  if ($proc | @r8 | @r12)@rbx)  { test_statement(0xA0B); } } elsif ($buffer >> $ip ^ -@rbp ! 0y1111) { test_statement(0xA47);  /* This is a comment */ }
$error$
$end$
2533
 if (@r9 + $teb >> 0y10010 >> $thread >> ~@r9 & @r9 ^ @r9 >> $proc & ~@rsp >> -@rbp ^ 0x13 >> @r12 ^ @r8 ! 14 + 0 << $ip << @rdx ^ @r13 >> 0y1101 >> @rax | $proc & @rdi >> $buffer & $thread & @r9 ^ @rdx & (@r11) & $ip | 0xE >> @r12 & $buffer ^ 0y10001)  { test_statement(0x39C); } elsif (0y1000 << @r9 >> $proc & @rsp | @rsi & @rax ^ $thread & @rbp ^ +@r11 | @r9 ^ $buffer | $teb ^ (@r12) | $teb)$ip << @rdx >> 0xF >> @r12 | 0n9 ^ $buffer & @r13 | $buffer) { test_statement(0x10DC); ;  while  (@rdx | @rbp > @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rdi ; 0n9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x405); }
$error$
$end$
2534
 if (+@r12 & $proc << 22 >> $thread >> $proc & +@rbp >> @rbx & $teb | @r12 != +@r12 & $proc << 22 >> $thread >> $proc & +@rbp >> @rbx & $teb | @r12)  { test_statement(0x25A6); }
$error$
$end$
2535
 if (@rsp >> @rsi << $thread & @rsi << $teb >> $buffer))@rsp >> @rsi << $thread & @rsi << $teb >> $buffer)  { test_statement(0x467); ;  for (val = 10; 0y1000 < 0y1000;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rdx = @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  for (val = 10; -@r11 ; 0x2;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rbx >< +$buffer)  { test_statement(0xEA5); }  while  (@rsp((@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x7C7); }
$error$
$end$
2536
 if (@r10 + @r11 << -@r13 << 22 & 0n13 & 0n2 ^ 2 << +@r10 >> @rbx >> @rbp <= ($teb) + @r12 >> 0x4 >> @r10 & ~@r10 << ~$ip)  { test_statement(0x7AF); } else { test_statement(0x2470); }
$error$
$end$
2537
 if (@rax >> 0n5 >> 0n6 >> $ip != @rbp & @r13 << 15 | ~20 << @r10 & +@rdi & @rsi & @r13 ^ @rax >> @rax & @r12)  { test_statement(0xCCD); } elsif (@rsi << $buffer & @rax >> 0y110 & 0xC & @r13 ; @rsi << $buffer & @rax >> 0y110 & 0xC & @r13) { test_statement(0x16B4);  /* This is a comment */ }
$error$
$end$
2538
 if (0n1 + @r10 & $thread >> (-@rbp) | $buffer >> -$thread & 4 ^ 0n10 >> @r13 & @r8 & $thread ^ @rbx & ~@r8 | @r13 >> @rdi & @rax | $buffer & @rbp | +$buffer ^ $teb | @rdi | +0y100 ! @r9 & (@r13) << -@rdx ^ @r8 & $teb)  { test_statement(0x1842); }
$error$
$end$
2539
 if (@r13 | -@r10 & -(@rbx) & @r10 & 0n6 ^ 0x8 >> @r11 & $buffer ^ @rax | (0n10) != @r13 | -@r10 & -(@rbx) & @r10 & 0n6 ^ 0x8 >> @r11 & $buffer ^ @rax | (0n10))  { test_statement(0x1701);  break; } elsif ($thread > $thread >> @rdx ^ 0y10001 >> @r12 ^ @rdx) { test_statement(0x1BF7);  break; }
$error$
$end$
2540
 if ($buffer + 0y1110 >> @rbx >> @rdx >> @r8(($teb + $buffer << 0n7 << @rdi & @rdi >> 0y10001 ^ @r12 >> $buffer >> $buffer & @r13 >> @rax ^ @r10 & 0x7 & $buffer | 21 << 0n1 >> $buffer & 0y1111 >> @rdx & 0x6 ^ @rdi >> @r12 & 11 | @r8 >> -0x9 ^ +@r12 ^ 0n1 | ~@r9 & @r12 ^ @rsi | $ip | $buffer | 0n2)  { test_statement(0x3C5); }
$error$
$end$
2541
 if (@r10 + ~@rbx >> @r11 >> 0n5 >> @r12 & @rsp << @rbx >> @r9 >> @rbp & $ip | $buffer >> @r9 & 0n19 | @rsp & $ip & 0x12(@r8 << ~@rdx & 0y10000 ^ $teb << -12 & @r11 | @r13 >> $proc >> 21 | @r8 & @rbx & @r8)  { test_statement(0x26A5); } elsif (~0n0 >> $proc >> @r8 ^ @rsp >< ~0n0 >> $proc >> @r8 ^ @rsp) { test_statement(0x591);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1100 | +$thread)@rdx | @rax) ; } elsif (@r8 >> @r9 & @r8 | @r12 ^ @rdi ^ @r12 <> @r8 >> @r9 & @r8 | @r12 ^ @rdi ^ @r12) { test_statement(0x268F); ; } else { test_statement(0x1C0C); }
$error$
$end$
2542
 if (@r11 + @rbp ^ @rbp << 0n18 ^ @r8 & 0x8 & @rsi ^ $teb & @r11 ^ @rsp <= @rbp << $teb & ($buffer) ^ $thread)  { test_statement(0xEFF);  /* This is a comment */ } elsif ($buffer << @r11 >> @rsp)$buffer << @r11 >> @rsp) { test_statement(0xB00);  break; val = +@r10 ^ @r11 | @rsp | @rdi ; } else { test_statement(0x15E9); }
$error$
$end$
2543
 if ($thread << 0y11 ^ $teb << $proc >> +$proc >> @rdx & @rsp & $ip & @rdx | @rsp & 0n2 ^ @rsp & 0y1000 ^ @r10 & @rbp ^ ~$buffer ^ $buffer >< 16 ^ @rax << @r10 >> @rdi >> 0y11 ^ @rsi >> ~0y10000 ^ @rbp ^ @rsi)  { test_statement(0x26D3);  /* This is a not closed comment  for (val = 10; @rbp ^ 0xE | $teb | @rdi = @rbp ^ 0xE | $teb | @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($proc != $proc)  { test_statement(0x206D); } elsif ($buffer >< $proc) { test_statement(0x19D8); } elsif (@r9 = @r9) { test_statement(0xB54); } else { test_statement(0x69E); } } elsif (@rdi << $proc >> $proc >> $ip == @rdi << $proc >> $proc >> $ip) { test_statement(0x1258);  break;  /* This is a comment */ } elsif (0n7 ^ @r12 ^ @r10 ^ @rsi | 20 & @r13 ^ @rbp ^ @rbx $thread >> +0n8 & @rbp & @rdx) { test_statement(0x26E7);  if ($proc | @rbx($proc | $buffer)  { test_statement(0x1C19); }  if (0x2 ; @rax)  { test_statement(0xBC2); } elsif (-@r9 == $ip) { test_statement(0x200D); } elsif (@rdx((@rdx) { test_statement(0xF49); }  /* This is a comment */ } else { test_statement(0x1364); }
$error$
$end$
2544
 if (@r13 + 0y110 & @rax << -$buffer >> @r8 >> @rdx & @r9 & @r12 ^ $thread >> 0n15((@r13 + 0y110 & @rax << -$buffer >> @r8 >> @rdx & @r9 & @r12 ^ $thread >> 0n15)  { test_statement(0x156F); }
$error$
$end$
2545
 if (@rbx + @r13 << $ip >> $buffer >> @r9 | +@r9 ^ $thread & $teb & 0x12 | @rsp >> @rdi ^ @r9 ^ @r11 ^ @r13)$proc << -@r10 << 0y10 >> @r12 << $thread ^ @r12 << 0x6 >> @rax >> @rax)  { test_statement(0x866);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx = 5 & @r11 ^ +@rax ^ @r10 | (@rsp) | @rsi | $proc) ;  /* This is a comment */ }
$error$
$end$
2546
 if (@r9 << @r12 ^ 0n13 >> @r13 >> @r11 ^ @rbx >> @rsp | @rbp << $buffer >> $teb ^ @rsi & (0n4) ^ ~@r10 & ($proc) ^ $proc <= @r11 + ~$buffer | $proc << $teb >> $thread >> $buffer & @r10 >> 0y10011 & @rbp)  { test_statement(0x590); } elsif ((($thread)) ^ 0y110 & 0xA)@r10 << $proc ^ @rax >> $ip & @rbx ^ @rbp & @r13 ^ 0x3) { test_statement(0x153);  /* This is a comment */ }
$error$
$end$
2547
 if (@rsi << 0xD << @rdi >> @r8 | ~@rsi >> $teb >> @rsi & $proc & $thread ^ @rbx >> @rdi & @rbx & @rax ^ @rsi)0n0 + @r10 << @rdx << @rax ^ -$ip >> 3 >> @rdi & $teb >> (@r13) & $ip | @r9)  { test_statement(0x2061);  /* This is a not closed comment  /* This is a not closed comment }
$error$
$end$
2548
 if (~@r13 << @rsi << $thread >> @rdi >> @rbx >> @r13 ^ @r9 << @r8 ^ @rdi >> $proc & @r11 & 0n10 | $proc << $ip & @rdi & -@r13 & @rdi ^ @r11 >> @rbx ^ $buffer & $thread ^ @r12 | @r12 & $ip & @rdi | $proc ^ 0y1101 | 0n8 | $proc)@r11 + $teb << @rdi >> $proc >> @r12 >> @rax & @r12 | @rbp << @r8 | @rdx & 0n11)  { test_statement(0x1E8A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@rsp & $thread ^ $ip ^ 0n8 != @rsi ^ 0y100) ; } else { test_statement(0x156B); }
$error$
$end$
2549
 if (@r10 >> $proc << @rsp >= @r10 >> $proc << @rsp)  { test_statement(0x1801);  if (@r9 >= @rdi & 23 | $ip ^ -@rbp)  { test_statement(0x1102); } else { test_statement(0x1DB9); } } elsif (4 << @rdi >> @r10 & @rbp >> @rsi))-@r8 >> $thread | 0n0 >> $teb) { test_statement(0xB8D); } elsif (@r10 & $ip & @r11 ^ $ip & @rdx | @rbx((@r10 & $ip & @r11 ^ $ip & @rdx | @rbx) { test_statement(0x23); }
$error$
$end$
2550
 if (@r12 << @r13 << @rsp >> @rsi << $buffer ^ 0y100 << 10 >> @r8 ^ @rbp != @r8 << $teb << @r9 & @r10 & $thread & 0x6)  { test_statement(0xA36); } else { test_statement(0x4B9);  This is a not opened comment */ }
$error$
$end$
2551
 if (-~@r13 + +0n2 << -@rsp >> 0n8 ^ +$teb << @rbp >> ~0y1101 ^ @rbp ^ @rbx & @rsi | (@rax) << 0y10001 & $thread >> @rdi & @r8 & $proc ^ $buffer >> +@rbx ^ $proc & (~23) | @rbp >> @rdi & @r10))$proc + @rbp & 0x13 >> @rax & @rbx >> 0n0)  { test_statement(0x1113);  /* This is a not closed comment  for (@rax = $teb; ~@rsi | ~@rbp ; $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (+($proc) << @r12 >> +@r11 & $ip | +@rax >> -@rax))$thread >> $proc >> @r10) { test_statement(0x12BA); @rax = +@rax & @rbp ^ @r12 | @rbp ;  // /* This is a comment  } else { test_statement(0xD8E); }
$error$
$end$
2552
 if (0y10 & @rax << 0n17 >> @rsp >> $ip ^ @rbx << 0n5 >> @rsi >> -$buffer | @r13 ^ @r12 & $thread & @rdi | $ip >> @rdx & @r8 ^ @r8 @r8 + @r9 ^ 10 & $teb >> @r9 & @r8 & @r8 ^ @rax >> @r8 ^ 0n15 & @r10 | $proc >> @rbx >> @rsp ^ @r12 >> 0n11 & @r13 & -@r12)  { test_statement(0x22CF);  // /* This is a comment   break;  if ($proc != 6)  { test_statement(0x2313); } } elsif ($proc << @r12 >> @r13 < +(16) << @r9 ^ @rsi >> @rbx) { test_statement(0xEB2); }
$error$
$end$
2553
 if (@r10 << @r12 << @r13 & @r10 << @r8 & $ip ^ +$teb & @rax >> 0y10000 & @r11 & @r8 ^ @rbp >> -$teb ^ @r9 & @r13))-$ip + @r13 << -@r12 ^ $proc << @r12 & @rsp >> +@r8 & 0x8)  { test_statement(0x179D);  if (@rdx ; 23 ^ @rdi ^ ~$teb | @r10 ^ @rbp)  { test_statement(0x2156); } @rax = @rbp ; } elsif (@rdi << -22 >> 0xE >> @r12 & @rdi >> --0n10 = @rdx << @rsp >> +@r11 & -0y1 >> $thread | $ip >> 14 | ~~$teb ^ @rsp ^ @rdi) { test_statement(0x11C0); val = $proc & $thread ^ @rdi ^ @r9 | $proc | $teb ; } elsif (@r11 >> 0y10 & $ip & @r12 ^ @rdx & $ip ^ $thread == @r11 >> 0y10 & $ip & @r12 ^ @rdx & $ip ^ $thread) { test_statement(0x2622); }
$error$
$end$
2554
 if (@r13 >> $buffer >> $buffer >> ~0xF | @r8 << @rdx >> ~@r10 | 0y0 >> @r11 & @r9 & @rdi ^ @rdi ! @rdi + $buffer & ($ip) << -0n3 & @r9 ^ ~@rdi << $ip >> @rbp >> @r10 & 0y0 & @rbx ^ +$teb & @r10 & $ip ^ $teb & 0x7 ^ $ip)  { test_statement(0x249E); } else { test_statement(0x18D0); }
$error$
$end$
2555
 if (@rsi >> ~@rdi >> @rbp & +~$buffer << @rdx >> @r13 & $thread >> @rsi | @rax ^ @rdx & 0x13 & $teb | 0y10011 & 0x12 | $ip & @r12 | $buffer | @r13 | +@rsp(@r8 + $proc << @rax << @rdx & (0y111) >> @rdx ^ $thread >> @rbp >> @r13)  { test_statement(0x22AE); val = (0xE) >> @rsp & 0x11 ^ @rbp & @rsp ;  if (@r9 ^ @rdx | @rbx | @rsp = $buffer)  { test_statement(0x102); } elsif (@rbx | @rsi = @rbx | @rsi) { test_statement(0x1B90); } elsif ($thread(($thread) { test_statement(0x1D72); } elsif ($buffer <> @r8) { test_statement(0x375); } elsif ($ip >< $ip) { test_statement(0x986); } ; } elsif (0x3 << @rsp & $buffer & @rdx & 11 ^ 0y1110 >> @rdx & @r11 & @r9 ^ $teb & @rbp ^ $teb ^ $proc ; (+@rdi) >> ~$buffer ^ $proc & @r12) { test_statement(0x1D0A); }
$error$
$end$
2556
 if (+12 + $thread << 0y110 >> @rbx << 14 >> $ip & ~@rsp | @rbx << $proc & ~@r10 >> @rdx & ~@r8 +12 + $thread << 0y110 >> @rbx << 14 >> $ip & ~@rsp | @rbx << $proc & ~@r10 >> @rdx & ~@r8)  { test_statement(0x118D); } else { test_statement(0x13BF); ;  while  (@r12 >< +$teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rsp | -+$proc ; val = +$buffer ; }
$error$
$end$
2557
 if (0y1110 >> $proc << $thread ^ @rbp ^ +0y10 | @r9 >> $buffer >> +@rbp ^ @rbp & @r12 & @r12 ^ @rbp | -(@r12) ^ $teb ^ 23 ^ @rbp = 0y1110 >> $proc << $thread ^ @rbp ^ +0y10 | @r9 >> $buffer >> +@rbp ^ @rbp & @r12 & @r12 ^ @rbp | -(@r12) ^ $teb ^ 23 ^ @rbp)  { test_statement(0x905); } elsif ($buffer & 0n6 >> @r13 & +$thread ^ $ip >> $proc & @rbp ^ @r9 | @rsi & 3 | @rbp | 0x5 ^ @r13))@rdi >> @r12 >> $teb & @rdi >> @rbp | -0y1 ^ @rdi & $teb ^ @rdi ^ @rsi | @rbp) { test_statement(0x1AC); } else { test_statement(0x554);  // /* This is a comment  }
$error$
$end$
2558
 if (@r13 >> @rbx << @r9 >> 0n0 & @r12 ^ @rax & @r11 >> @rbp | 0 << @rsi & @r10 & ~$buffer <= @rdx + @r13 << @rbp << @r12 & @rdx ^ @rsp >> -@r9 >> @rbp & 20 & @r12 & @rdi ^ $thread ^ 0x7 ^ $proc | $thread | @r13 >> @rdi & ~@rdi & @r12)  { test_statement(0x1BCB); @rax = 0y110 ^ $proc & @r8 ^ @r11 ; } elsif (-$buffer >> (1) ^ @r9 >> @rdx ^ ($teb) & +@rbp ^ +~($teb) -$buffer >> (1) ^ @r9 >> @rdx ^ ($teb) & +@rbp ^ +~($teb)) { test_statement(0x2097);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 ^ (@r13) != @rbx | @rdx) ; }
$error$
$end$
2559
 if ($teb + @rax << 0y110 << 0x13 >> @rsp << @r8 >> @rsi >> @r13 == @rdi + @r10 << $buffer >> +0y1101 << @rbp)  { test_statement(0x9F2); } elsif (@r8 << @r13 & 11 >> @rdx & @rsi & @r12 ^ @r10 & 0n7 | @rsi >> @rdx ^ 17 & 0y1011 ^ @rsi ^ 0x9(@r10 << +$ip) { test_statement(0x1D9E);  This is a not opened comment */ } elsif (~$buffer >> @r13 ^ 0x11 ^ @rbx | 0y10001 & @rbp ^ @rsp | @r13 ^ @r13 | @r9((@r11 >> $proc & 3 & $teb ^ @rdx & @rdx ^ @rdi ^ @rsp) { test_statement(0xD01); } else { test_statement(0x22E1);  /* This is a comment */  /* This is a comment */ }
$error$
$end$
2560
 if (@r8 + -@rsp >> ($thread) << $ip >> @rsi & ~-@r13 << @r8 >> -@rbx >> @rax & -((+@r11)) >> 0y10 | $proc << 0n2 >> @rdi & @r10 ^ @rax >> @rsp | ($ip) ^ @r12 & @rdx | @rax & $proc ^ @r12 | $ip ^ $proc | @rbp | @rsp != @rax + $thread & $buffer | 0n12 ^ @r10 & @rdi & ~@r12 ^ @r9 & $thread ^ @rsp ^ $proc)  { test_statement(0x1B86); }
$error$
$end$
2561
 if ($buffer + $ip >> @r9 >> ~0y11 >> @r10 ^ @rdi >> 0n7 ^ @r13 >> 3 ^ 0xC & @r10 | @rsi << -@rbx >> ~+$thread ^ 0xC >> @r9 ^ @rdi & @r10 | (@rbp) ! $proc + @rsp << @rdx << @r8 >> 0x1 >> +@r11 >> @rax ^ 14 << @rbx & @r11)  { test_statement(0x26F9); } elsif (-@rdx >> 0y1 ^ (0x2) & $ip & +$proc((-@rdx >> 0y1 ^ (0x2) & $ip & +$proc) { test_statement(0x12AC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@r12 ^ @rsp >< -@r12 ^ @rsp) ; val = 0x5 ; } else { test_statement(0x1B6); }
$error$
$end$
2562
 if (@r10 << @rsi << @rbx >> @r8 << @r10 & 0x3 << @r10 >> @rbp >> $ip & +~$thread & 0x13 & $thread(@rax + @rax << @rsp << @r10 >> @rbx >> @rsp >> @rsp & @rax)  { test_statement(0x1E76);  if (@rdx & @rax ^ 0y11 | @r13 @rsi)  { test_statement(0x2688); }  This is a not opened comment */  for (; @rdx | $thread((-@rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x21C2);  /* This is a comment */ }
$error$
$end$
2563
 if (@r9 + (0n15) << 0y1001 & @r12 & $thread & @r8 ^ @rdi << $ip >> $ip >> ~@r13 & 0n11 & @r9 ^ 0y1 & (@rbx) & @r10 ^ 0n17 ^ @r12 ^ @r11 | 0y1001 << ~@rbx >> 0x11 >> -@r10 & ~$ip >> @rsi <> $proc + -+@rax >> @r9 << 0y10001 & (22) & @rbp | @r12 >> $thread >> 0y1010 ^ @rbp ^ $ip ^ @r12)  { test_statement(0x32A);  This is a not opened comment */ } elsif (@rdx << @rdx >> ~0n16 >> $buffer & $ip >> @rdi & @rdx & @rbx | @rdx >> @r8 & @rsi & 0x10 ^ (($ip)) | @rsi | @rbp | 14 > @r12 >> $thread >> @rdi | @r11 ^ @r8 & $teb ^ @r13 | (@rax) & $buffer) { test_statement(0x1659); @rax = @rdi ^ $proc ;  /* This is a comment */  break; } elsif (@r9 >> $buffer & +@rax & @r9 ^ $proc & @rdx ^ @rsi ^ ~@rbx | @rbp & @r8 ^ $buffer == @r9 >> $buffer & +@rax & @r9 ^ $proc & @rdx ^ @rsi ^ ~@rbx | @rbp & @r8 ^ $buffer) { test_statement(0x1DD9);  /* This is a not closed comment } elsif (0x10)0x10) { test_statement(0xB77);  if (@rdx = @rdx)  { test_statement(0x12DF); } elsif (@r10 ; @r9) { test_statement(0x15E3); }  /* This is a not closed comment } else { test_statement(0xA24); }
$error$
$end$
2564
 if (@rsi << $thread >> @r11 >> +@r13 >> @r8 ^ +$buffer << $teb ^ @r10 ! 0 << @rsp << @rdx)  { test_statement(0xDC7); @rax = @rax >> @r9 | ++@r11 ; } elsif (@rsp >> @rsi & $buffer ^ 22 >> @r12 ^ $teb | (@r12) >> @r11 | (@rdi) ^ 0y1000 ^ @rsi = @rsp >> @rsi & $buffer ^ 22 >> @r12 ^ $teb | (@r12) >> @r11 | (@rdi) ^ 0y1000 ^ @rsi) { test_statement(0x26A8);  /* This is a not closed comment  /* This is a comment */ }
$error$
$end$
2565
 if (@rsi << @r9 << @rbp >> -@r13 << @r8 & (@r12) = $thread << @rdx << -@rdx & $thread << $proc)  { test_statement(0x1647);  // /* This is a comment  } elsif (@rbp << +@rax ^ 15 >> @rdi & 3 & -0n15 > 5 << $ip >> 0n0 & @rsp & @rax & @r13 ^ 20 >> @rdx & @r11 & 0xE ^ $buffer ^ 0xE ^ $ip | 0n12) { test_statement(0x1B95); } elsif (@r12 >> -$teb & +$thread & @rax | @r9 >= $thread >> 0y1011 ^ ~@r8 ^ @r10 ^ 0y10010 | @rdi ^ $proc ^ +(@rbx) | @r13 ^ 0n1 | @r10) { test_statement(0x612); } elsif (@r10 ^ $buffer ^ @rdi | @rsi | $proc ; @r13 | @rbp) { test_statement(0x203E);  break;  /* This is a comment */ }
$error$
$end$
2566
 if ($proc + $proc << @r12 & @r9 << @rdi >> $ip >> @rdi & $ip >> @rdx | ~@r10 << @r11 >> @rdx >> $ip ^ $thread | @rsi >> @rbx | @r13 & @r12 | 0y1101 | @r11 == $proc + @rax << @rdi << $ip & @rax << @rsp >> @r13 & $teb >> @rdi & +@rax & @rsp | (@rax) | 0y1000 >> $proc & @rbx & +@rsi)  { test_statement(0x1B16);  break; } elsif (6 >> @rsp & @r11 & +$proc | -@r13 >> ~@rsi & @rbx & $proc ^ 0n10 & @r9 | @r13 | @r11 | @rdx > @r12 << @rsi) { test_statement(0x2151); } else { test_statement(0xC69); ; }
$error$
$end$
2567
 if (@rsi + -@rsp | $buffer << 13 >> 0n17 >> @rbp ^ @rbp >> $proc <> @rsi + -@rsp | $buffer << 13 >> 0n17 >> @rbp ^ @rbp >> $proc)  { test_statement(0x2403); } elsif (@rbx >> @r9 ^ @r12 & @rdi ^ 0n16 ^ -+23 ^ 14 != @r8 << @rbx >> @rax >> @r8 & @rax >> ~@r12 ^ $proc >> @rdi & @rsi & @rbp ^ +$teb & $buffer) { test_statement(0xF41); } elsif (@rbx >> @r10 & @rsi & $buffer ^ @r9(0x13 ^ $proc ^ $teb | @rax ^ @rbx) { test_statement(0x12A9); }
$error$
$end$
2568
 if (@rsi + @rdx & $buffer ^ $ip << @r10 >> @rdx >> @rdx & @r13 >> @r10 < @rsi + @rdx & $buffer ^ $ip << @r10 >> @rdx >> @rdx & @r13 >> @r10)  { test_statement(0x26F1); } else { test_statement(0xE28); }
$error$
$end$
2569
 if ($buffer + $teb << @r11 >> @r13 | (12) << ~@r9 >> ~@rbp | @rdx >> @rsp & @rbp($buffer + $teb << @r11 >> @r13 | (12) << ~@r9 >> ~@rbp | @rdx >> @rsp & @rbp)  { test_statement(0x1BF9); }
$error$
$end$
2570
 if (@r12 << @rsp << @rsp >> @rbx << $thread >> $teb >> @rbx & @r11 ^ $proc >> $proc >> (0y10000) | $teb << $ip >> +@r9 >> @rsi | $ip >> 11 ^ @rbp & +0y1101 ^ $proc ^ @r12 ; $thread + 0y10011 << @rbp << @r11 & @r10 & @rbx >> @rax & @r9 ^ $ip >> 0y0 >> $ip & @r8 & @rbp)  { test_statement(0xF2B); } elsif (@r11 & @r10 == 0n2 << 0x2 >> ~$thread >> @rbx & @rbp >> 0xC & 2 ^ (0n15) >> @rax ^ ($teb) ^ $ip | $thread & $thread & @r11 ^ @rbp ^ @r10) { test_statement(0x1F75); }
$error$
$end$
2571
 if ($ip << @rbx >> @rdi >> @r12 ^ @r10 << @r13 & 20 & @rdx & @rdx ^ +@rbp ^ @r9 ^ ~0x7 ! @r13 >> $ip << $ip & @r8 >> ~@rbp >> (0x9) ^ (@rsi) >> -~0y0 >> 0y1100 & ~@r13 >> @r13 ^ @rbx >> 0n15 & @rdx & (@rsp) ^ 0x1 & @rax)  { test_statement(0x673); } elsif (+@r11 << 0 >> @r11 >> @rsi | $proc >> 0x4 & @r13))@rsp >> -(@r10) & @r11) { test_statement(0x1B56); }
$error$
$end$
2572
 if (@r11 + ~@r9 << 0y10011 << ~0x13 & ~@rdx << @rsi >> @r11 & @r12 >> @r12 @rbx << $proc << @r8 & $ip << @r9 >> @rbx >> @rdi ^ 0xE | @rax >> @r11 >> $proc)  { test_statement(0x5B6); } elsif (@rdx << @rbx & 0x10 & @rsi & @rbx ^ @rsi >> @r8 | $teb >> (12) ^ @r10 | @rbp @rsi >> $proc >> (@r8) | @r12 >> -22 ^ -$thread & ~@rax ^ @r11 | $teb) { test_statement(0x62A); } else { test_statement(0x26FA); }
$error$
$end$
2573
 if (+$ip << +-@r13 >> (@r12) << 13 >> @rsi >> @r12 & $teb >> @r8 <= @r9 + @rsp ^ $ip & $ip >> $teb | $buffer | +@rbp & -@r13 ^ $teb)  { test_statement(0xE54); } elsif (@rdi << +@rsp >> @r9 >> $proc & +0y101 >> $thread = @rsp & 0x1 >> (@rsp) ^ @rsi) { test_statement(0x1AF8); } elsif (@rbx >> @r10 | 0x1 & ~@r8 ^ $proc((@rax >> 4 & @rsp ^ $teb & 0y11 ^ @rsp | 0n2 & $proc ^ 0n10 | @r13 ^ @rsp | @r13 | @r9) { test_statement(0x1ACA); } elsif ((@rbp) & @rbx ^ @r13 ^ (@rsi) != (@rbp) & @rbx ^ @r13 ^ (@rsi)) { test_statement(0x5A6); } elsif (@r9 ^ $proc | @rbp | $thread <> @rdi) { test_statement(0x1BD5); } elsif (0xE | (@r10) = $proc) { test_statement(0x1320);  break; }
$error$
$end$
2574
 if (@rsp + @rdi << @rsp << -10 >> @r10 & @rsi << ~$proc >> 7 & @rbp >> -0n6 & 0n18 ^ $buffer << 0x6 ^ ++@r9 >> @r11 ^ @rbp & @rbx ^ 23 | $ip >> $teb | @rbp >> $teb | @rsp & $buffer ^ +0n19 | 0x0 ^ 0xC | 0n10 < $buffer ^ 0y10010 << @r8)  { test_statement(0x1FD); }
$error$
$end$
2575
 if ($ip + +~$ip << @r13 << 0x12 >> @r12 << @r12 >> @rsi & $buffer >> @rax & $thread | 0xA & 0y1 & @rax ^ @rdi | @r12 ^ @rax ; @r11 | $teb)  { test_statement(0x18EE); } else { test_statement(0xCAB); }
$error$
$end$
2576
 if ($thread << $proc >> 0x4 >> 0n12 & 13 >> @r11((@r11 << @r8 << @r8 >> @rdx << @rsp & -@rbp << @rbp)  { test_statement(0x7B2);  /* This is a comment */ } elsif (-$buffer & @rax & @r13(-$buffer & @rax & @r13) { test_statement(0x30A);  while  (@rdi ^ $ip | @rax | $buffer != -@r13 ^ $thread | ~@rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer >> 4 @r12 >> @r11 ^ 0x4 & @r11 | 0xE) { test_statement(0x1FA4);  /* This is a comment */ } else { test_statement(0x1BB0);  /* This is a comment */  /* This is a not closed comment }
$error$
$end$
2577
 if (+@r13 << +$thread ^ -0n4 != +@r13 << +$thread ^ -0n4)  { test_statement(0xC1); }
$error$
$end$
2578
 if ($ip + $proc << (@r9) << @rbx & $buffer << 0y1000 >> @rbp & @r8 >> 0y10000 & $thread & @r10 ^ +@r13 << @r13 >> @r12 >> $proc <= $proc + @r10 << 14 >> @r8 << 7 & $thread & @rax)  { test_statement(0x84A); }
$error$
$end$
2579
 if (@r8 + @r12 << @r11 << @r10 >> @r10 << @rsi & $teb << +~7 ^ $buffer ^ -@rbp >> $thread >< @r13 + @r10 & +$teb << ~0x12 | -0xE << 0x11 | 0y0 >> ~@r11 | @rdx & $buffer)  { test_statement(0x226); } elsif (0y10000 << $ip | @r9 >> (@r13) & @rbx >= @r11 << 4 | $buffer) { test_statement(0x139C);  while  (@r11 ^ @rsp | @r8)3)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp >> $teb >< $buffer ^ $teb ^ 0y1100 ^ @rbx) { test_statement(0x12B8);  if (@r9 | ~$proc $ip | $buffer)  { test_statement(0x1202); } elsif ($thread >= @rax) { test_statement(0x1466); } elsif (@r10(@r10) { test_statement(0x25F6); } elsif ((($ip)) = ($proc)) { test_statement(0x2126); }  /* This is a comment */  This is a not opened comment */  for (; 0n7 == $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2580
 if (@rax & $ip >> $thread >> $thread & @r9 & $thread & @r10 ^ @rbx >> $ip & 5 >> @r12 & @rdi & @rax ^ @r13 >> ~5 & 0n8 ^ $teb ^ @rsp ^ -(@rdi) = 13 + $buffer >> @r11 << $teb >> @rsp)  { test_statement(0x1D2B);  /* This is a not closed comment }
$error$
$end$
2581
 if (@r9 + 14 << 0x7 >> 0n9 | ~$teb >> @rax != +$thread << @rdi & +@rax << ~21 >> -$thread >> $ip & @rdi >> 0x9 & 13 & $buffer)  { test_statement(0x156);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 & +(4) | $ip((~@rbp ^ @rax ^ @rsp) ;  /* This is a not closed comment  while  (@r11 | +@r9 > @r12 | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 << (0) ^ $buffer)(1) >> $ip & @rsi >> $proc & @rsi ^ @r8 >> $teb ^ @r8 ^ -$buffer ^ $ip) { test_statement(0x875); } else { test_statement(0x1B3A); }
$error$
$end$
2582
 if ($teb + $ip << (@rsp) << @r9 >> (@rsi) >> $proc >> 10 != $teb + $ip << (@rsp) << @r9 >> (@rsi) >> $proc >> 10)  { test_statement(0xE55);  This is a not opened comment */ } elsif (~@r8 >> ~$teb >> @r13 >= ~@r8 >> ~$teb >> @r13) { test_statement(0x38E); } elsif (~$teb ^ (@rbx) & $buffer)@rdi) { test_statement(0x1DA2); } elsif (@rdi & @rsi ^ @r13 ^ +@rdx | @rdi ^ @rdx | 0n9 | @r12 @rdi & @rsi ^ @r13 ^ +@rdx | @rdi ^ @rdx | 0n9 | @r12) { test_statement(0x3BF); } elsif ($teb ^ @rbx ; -@rsi | ~@rsi) { test_statement(0x128F);  /* This is a comment */ }
$error$
$end$
2583
 if (@rdx | @rdi << @r11 & @rbp >= @rdx | @rdi << @r11 & @rbp)  { test_statement(0x1E31); }
$error$
$end$
2584
 if (@r11 + @rax >> @r12 | @rsi << 11 | @rdi >< @r11 + @rax >> @r12 | @rsi << 11 | @rdi)  { test_statement(0x1618);  /* This is a comment */ }
$error$
$end$
2585
 if (+@rbp + @r10 << 0x9 >< @r10 << @r9 << $thread >> @r9 << @r10 >> @rbp >> @r12 & @rax << 0y1 >> @r12 >> -$teb & @rbx | @rdx | @rdi)  { test_statement(0x261F); } elsif (@r12 << @r13 ^ $thread >> ((0y1101)) | @rsi >> $teb | @r12)@r12 << @r13 ^ $thread >> ((0y1101)) | @rsi >> $teb | @r12) { test_statement(0x347);  break; } elsif (0n5 & @rbp & $teb @r9 & @r13 & @r12) { test_statement(0x1CA0); } else { test_statement(0x88F); ;  for (@rax = @rbx | (@r12); @rsp $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2586
 if (@rbx + @rax << +(@r11) << @rsi >> $thread >> @r8 >< 0n17 + @rsp >> 0n12 << @rdi >> @rdi & $ip << 0n5 | ~@r11 << $ip >> $thread | 0n14 & $thread & @r9)  { test_statement(0x1300);  /* This is a not closed comment @rax = $thread & $buffer ^ $ip ^ @rax ; } elsif ($teb & 0n17 & @r10 & @rsi ! $teb & 0n17 & @r10 & @rsi) { test_statement(0x2437); } else { test_statement(0x230E); }
$error$
$end$
2587
 if (@rdi & ~$ip << 0n9 >> 23 ^ $teb << @rbp >> @rsp >> @r13 & @rdi >> @r8 ^ @rdx >> @rdi | @rdi << $ip & @r8 >> 0x1 & $buffer ^ $proc & 0y1001 <= @r8 + $ip >> @r11 << @r9 & (+@r8) << 17 ^ $buffer >> @r12 & @rbx >> @r13 & @r12 | $teb >> 0xE & 0y1 ^ 0xA >> @r13 ^ 0y111 ^ @rdx ^ @rsp | @r13)  { test_statement(0x1A4A);  for (val = 10; $teb & (0xC) ^ @rbp | $thread | 0y10011 | $teb ; $buffer & $teb ^ $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
2588
 if (@rbp << 0x3 << @r9 >> @rbp << @r13 & @r9 >> $thread >> @rsp & ($ip) & @rsp | ~@r9 & @r10 | $proc >> $ip & $thread & @rsp ^ -+-@r11 & @r9 ^ @r9 ^ @r11 | @rdx >= 13 + @rdi >> @r8 >> @r13 | $buffer << -@r13 >> @r10 >> @rbx & $buffer >> @r12 & @r12 ^ @rsi >> @r11 & @r13 | @rdx >> @r8 ^ @r13 & $buffer)  { test_statement(0x18F9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi)@r10 & @r12 | @r11 ^ @r12 | @r11) ; } elsif (@rdi << @r11 >> 0n18 >> @rbp & (@rdx) >> @r12 & $buffer ^ 17 & $proc & 0x4 ^ @rbx & ~$teb | (@rbx) >> $thread & @r12 ^ $teb | @r8(@rdi << @r11 >> 0n18 >> @rbp & (@rdx) >> @r12 & $buffer ^ 17 & $proc & 0x4 ^ @rbx & ~$teb | (@rbx) >> $thread & @r12 ^ $teb | @r8) { test_statement(0xE2E); }
$error$
$end$
2589
 if ($ip << @r13 & @rdx & @r12 ^ @r12 >> $proc & 0y110 & 0x8 ; ~@r10 | @r8 >> 0n1 & @r12 >> @r8)  { test_statement(0xE9F); }
$error$
$end$
2590
 if (@rdx << $teb << @rax >> @r9 >> @r9 >> @r13 & @r13 << 21 & 0y101 >> @rsp & @r12 | @rsi & @r9 ^ -17 & $teb ^ (@r10) | @r8 >> $proc & ~0n18 & @r13 ^ -@rdi & @rbp | @rdx & $teb ^ @rsi ^ @rdx | @r10 ^ 0xF | $ip ; @r12 << $buffer << @r10 >> $teb & 0y1000 >> ~@r13 >> @rsp & (@rsp) >> @rbp)  { test_statement(0x1C1); } elsif (@rsi >> @r9 >> @rsi ; $ip >> @r12 ^ 0y11 & @rsi ^ @rsp ^ @rdi ^ @rdi | ~@rdi ^ @rax & @rax | -$thread | @rbx ^ ~+@rdx) { test_statement(0xC6E);  // /* This is a comment  ; val = @rdx ; } else { test_statement(0x1C83);  /* This is a comment */  if (0y1100 @r12 | @r9)  { test_statement(0x4F8); }  if (@r11))@r11)  { test_statement(0x1CDD); } elsif (-$ip ! $thread) { test_statement(0xB59); }  while  ($buffer <= $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2591
 if ((@rbp) >> @rbx << 0n8 & @r13 ^ (@rbp) << (~@r10) >> 0xD >> $thread | $thread << 0n12 >> @r10 ^ @r13 >> @r10 & @rsp & @r9 ^ @r13((@rbp) >> @rbx << 0n8 & @r13 ^ (@rbp) << (~@r10) >> 0xD >> $thread | $thread << 0n12 >> @r10 ^ @r13 >> @r10 & @rsp & @r9 ^ @r13)  { test_statement(0xCCF);  for (val = @r13 & (0x11) | @rbx ^ @r9; @rdi & -~@rax | @rdx ^ @r13 | @rax)$ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2592
 if ((@r11) << 0y1111 & @rbp >> @rsi >> ~@r10 & 0y110 >> @rsi & @rax ^ @r9 << $proc ^ 0n15 ^ @rbx | @r12 << @r9 ^ $teb >> 0n11 & @r13 & @rbp ^ 0y1001 | @r8 & +$teb | -@rbx | (@r13) ^ @r9 != @rbp << $proc << 0y111 >> @rbp | @rsp ^ $thread >> ~@r10 & @rax)  { test_statement(0x26C4); } elsif (@r8 | -$ip ^ 0y10001 | $proc & ($thread) ^ @r13 ^ 0x11)@r10 << 0n14 >> @r10 & @rbx) { test_statement(0x1437);  // /* This is a comment   for (; @rbp | 0y101 == @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2593
 if (0n4 + ~@rbx << @r10 >> $ip >> @rbx >> @rdi @rdi >> $ip << @r12 >> $thread >> @rsp & @rbp << @r9)  { test_statement(0x17F5); } elsif (-$thread ^ @rbp ^ $teb ^ @rdi | @r10 & @r8 & @r11 ^ @r12 & +$ip >= @rsi << +@rbx ^ @r8 & $thread ^ $buffer ^ @r9 ^ 21) { test_statement(0xE4A);  break;  /* This is a not closed comment ; ; } elsif (-@rbp & @r8 ^ $teb & 4 ^ @rsp | @r9 & @rsi ^ ++@r12 ^ @r8 >= ~~~@r8 & -~@r8) { test_statement(0xF63); } elsif (@rdx & (@rbx) ^ @r8 ^ @rdx | 0n8 ^ $proc | 0x11 | @rax ; $ip & $buffer) { test_statement(0x1E06); }
$error$
$end$
2594
 if (@rdi ^ @r8 << @rax & @r12 >> $ip ^ @rsi & $ip >= 0x13 + @rbp >> @rsp & @rbp >> @r13 >> 0n8 & +@rax & @rsi & @r8 ^ @rbx << @rsp ^ 13 | @r10 >> @rsi >> $ip & @r8 & @rsp)  { test_statement(0xB8B);  // /* This is a comment  } elsif (@rax >> @r8 >> @rsp & (0n2) & 0n4 | @r10 ^ 0n14 & $ip = $ip & 0y1 >> $proc ^ @rdx) { test_statement(0x1FB8);  // /* This is a comment  } else { test_statement(0x2DD); }
$error$
$end$
2595
 if (@r12 + -@rax & @rsp ^ @rdi > @rax << 5 << $thread ^ @r10 << $ip >> @r13 >> -@rbp & -@rbp & @rax & ~@r13)  { test_statement(0x288); } elsif (@r8 << $teb & @rdx >> @r9 | @r10 >> @r10 & @r11 == 4 >> $teb & @rbx >> @rbx & @r13 ^ @r8 >> 0x1) { test_statement(0x165B); } elsif (@rsi | @r12 & @rsp | @rdi ^ @r9 | $proc | ~0y1010 != -@r9 ^ @r13 | 0xD) { test_statement(0x1006);  for (; @rdi | @r10 <= @rdi | @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc))$proc) { test_statement(0x259A); } elsif (-@rax ^ @r11 | ~+@r11 ; -@rax ^ @r11 | ~+@r11) { test_statement(0x1256);  if ($buffer))($teb))  { test_statement(0x7C0); } elsif (@rax == $proc) { test_statement(0xD2B); } } else { test_statement(0x199D); }
$error$
$end$
2596
 if (@r8 << 0n9 >> 0x10 ~@r8 >> +(-(11)) | 0n13 << 0y110 & @rax)  { test_statement(0x963); }
$error$
$end$
2597
 if ($ip << -@r10 << @r10 ^ 0x10 << @rdi & @rbp | @r10 >> @rax & $teb & @r8 & $teb ^ @rbx >> ~+0n6 & @rsp & @r10 | 0n4 >> $buffer ^ 0x12 ^ $thread | @r10 ^ @rsp ^ @rdx != $ip << -@r10 << @r10 ^ 0x10 << @rdi & @rbp | @r10 >> @rax & $teb & @r8 & $teb ^ @rbx >> ~+0n6 & @rsp & @r10 | 0n4 >> $buffer ^ 0x12 ^ $thread | @r10 ^ @rsp ^ @rdx)  { test_statement(0x405);  /* This is a not closed comment } else { test_statement(0x234E); ;  break; }
$error$
$end$
2598
 if (@r8 + $teb << @rbx << @r9 ^ @rdx >> @r12 & @rax & @r13 & -@r9)@r8 + $teb << @rbx << @r9 ^ @rdx >> @r12 & @rax & @r13 & -@r9)  { test_statement(0x1A9F); @rax = 0x8 | $buffer & @rbx | $ip | 15 | @rdx ;  /* This is a not closed comment } elsif ($teb ; $teb) { test_statement(0x2FD);  if (+$teb ^ (-6) <= @rdi | @r11 | $ip)  { test_statement(0x191E); } } else { test_statement(0xF26); }
$error$
$end$
2599
 if (@rsi + @r11 << @r12 ^ @rbx >> $thread >> @r8 & @rsi != @rsi + @r11 << @r12 ^ @rbx >> $thread >> @r8 & @rsi)  { test_statement(0x18CE); }
$error$
$end$
2600
 if (@rbx + ~@r8 << 0x1 & @r9 << 0y111 & $buffer > @rdi + 3 << $buffer)  { test_statement(0x11FD);  for (; $teb ^ -$thread | 0n0 | $thread | @rbp <> @r13 & @r8 | $thread ^ @rbp | @rdi | @rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif (-@r11 & ~+0n3 >> @rdi ^ @rbx & 0y10010 & 3 | @rbx >> 0y10000 & @r10 >< 14 << $buffer) { test_statement(0xACF); @rax = (10) ^ 0x0 ^ @r9 ;  if (0n18 | @r12((0n14 | @rdx)  { test_statement(0x1A5E); } elsif (0n5(0) { test_statement(0x17E9); } }
$error$
$end$
2601
 if ($proc << ~(@rsi) << (@r8) & +@rbx << (@rbx) >> ++@rbp >> @r10 | @rdx ^ $proc & ~@r12 & @rdx | 0x3 | @r11 & 0y1101 | @rax ^ @r13 ! @r9 << @r11 >> 0n2 >> $ip)  { test_statement(0x2376); } elsif (@r11 << @rbp >> $proc >> 0y0 & @rdx & 0y1011 ^ (@r11) >> @r8 | -@r11 & @r11 ^ 13 | 0xF & (@rbp))5 >> @r13 ^ 0n2 & $thread & $teb ^ ($proc)) { test_statement(0x792);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc ^ @rax))+@r12 ^ 0x6) ;  if (@rdi ! @rdx)  { test_statement(0xDC8); } elsif ($teb $teb) { test_statement(0xD61); }  if ($thread)0x13)  { test_statement(0xE04); } } elsif (@r8 & @rbx ^ +@r13 ^ @r12 ^ $teb | @r11 | @r11 ^ @rsp < -@rdi ^ @rsi & 0x1 ^ @rbx) { test_statement(0x505); ;  /* This is a comment */ } elsif ($thread ^ 0x10 ^ @rsi)-@rdx & @rsi ^ @rdi ^ 10) { test_statement(0x1F74); ; } else { test_statement(0xDE5); val = @r9 & 2 ; }
$error$
$end$
2602
 if ($ip << @r11 << 12 >> @rbx << 0y1001 & @rax >> @r10 >> 0xC ^ @r11 & $thread >> $ip & ~$teb & @rsp >< $ip << @r11 << 12 >> @rbx << 0y1001 & @rax >> @r10 >> 0xC ^ @r11 & $thread >> $ip & ~$teb & @rsp)  { test_statement(0x176);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 7 | $thread ^ (@r8)(@r11 & @rsp | $teb ^ (@rdi) | $teb | @rbx) ; } elsif (@r10 & @rdx >> @r10 & +$ip ^ $proc ^ $ip | $buffer >> @r10 | @rsp)~$buffer & $thread) { test_statement(0x1D3B); } elsif (@rsi & @rbx ^ @rsp ^ $thread | 0x12 | 7 ^ @r9 | $teb >< @rsi & @rbx ^ @rsp ^ $thread | 0x12 | 7 ^ @r9 | $teb) { test_statement(0x173E); } elsif (0y10010 | @r10 | -0y1101 ! $buffer & @r9) { test_statement(0x102C); } elsif (@r9 ^ @r10 | @r8 | (11) <= @r9 | @r9 | $teb) { test_statement(0x1635); } elsif (0n4 <> 0n4) { test_statement(0x1CD7); } elsif (@r8 = @rax) { test_statement(0x247E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 > $proc) ; } else { test_statement(0xB60);  /* This is a comment */  while  ((@r8) | @rbx <= @rsi | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2603
 if (~@rsp << @r12 << @rdi & ~@r8 & @rbx & ~$ip ! @rsi + $buffer << $buffer >> $teb)  { test_statement(0x1272); } elsif (@rsp << 0x4 >> @r12 == ~-@r8 << @r8 >> @rbp >> $buffer & 0y110 >> @rdx ^ @rdx & $thread & @r8 ^ @rbp & @rbx | $proc >> @rdi | (0n5) ^ $proc) { test_statement(0xFFE); }
$error$
$end$
2604
 if (0y1110 + $buffer & @r13 << ($teb) >> @rax ^ -@r13 ^ ~@r8 ^ $proc & $proc > 0y1110 + $buffer & @r13 << ($teb) >> @rax ^ -@r13 ^ ~@r8 ^ $proc & $proc)  { test_statement(0x196B); } elsif (@rsi << @r11 | @r11 >> 0n3 & $teb & $thread ^ $buffer & @r12)@rsi << @r11 | @r11 >> 0n3 & $teb & $thread ^ $buffer & @r12) { test_statement(0x233A);  for (@rax = @r8 ^ -@r13; @rbx ^ $ip | $proc = @rbx ^ $ip | $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2605
 if (@r13 << 0x12 << @rdi >> @r9 << @r13 & @rax << @rdi & @r12 & $proc & @rax | $proc << $buffer >> 4 >> @rax ^ $buffer >> +0y1010 & $buffer & @r13 | $ip >> $teb | @r10 & 16)@r13 << 0x12 << @rdi >> @r9 << @r13 & @rax << @rdi & @r12 & $proc & @rax | $proc << $buffer >> 4 >> @rax ^ $buffer >> +0y1010 & $buffer & @r13 | $ip >> $teb | @r10 & 16)  { test_statement(0x211A); } elsif (@rax << @rdx | $proc @rax << @rdx | $proc) { test_statement(0x251D);  // /* This is a comment  } else { test_statement(0x1844); }
$error$
$end$
2606
 if (~@rbp + @rdx << 0xA = @rsp + +@r12 & $thread << @r11 >> 0n18 >> @r10 ^ $buffer << @rbx | $buffer << -~@rsp & $proc >> @rbp)  { test_statement(0x1791); } elsif (@rdx << $buffer >> @rax >> $buffer & ~@r12 ^ @r10 & 0xD & $ip | $buffer | $buffer & @r12 ^ @rsp | @rsi ^ 16 | @rbp >< @r10 << -1 & @rsp >> @r11 & 0y1001 & @r8 | @r13 & @rax ^ @r9 & @r9) { test_statement(0x174B); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ! ~0xD) ; @rax = @r12 ; } elsif (@rdx >> @r10 & @r11 & @rsp ^ @rax & 0xB | @r10 ^ +0n11 ^ $ip))@rdx >> +@rax | @r12) { test_statement(0x84B); }
$error$
$end$
2607
 if (@r12 | @r13 << $proc & @rdx ^ @r11 & @rsp & $thread ^ @r11 & @rsp ^ $thread | @r10 | @rdx & ($thread))@r12 | @r13 << $proc & @rdx ^ @r11 & @rsp & $thread ^ @r11 & @rsp ^ $thread | @r10 | @rdx & ($thread))  { test_statement(0x21C7); @rax = @r12 & @rdi ; }
$error$
$end$
2608
 if (@rsp >> @r10 & @r12 << +@r12 >> -@rdx >> @rax & @r12 & 0y1 & 0x13 | $teb << 0n17 <= ~7 + 0n11 << 0x10 << $teb >> (0y1111) << $ip | +@rdi & @r12 & -@r9 | +@rdi >> @r8 & -0x8 & $thread)  { test_statement(0x884); } elsif (@rdx << @r9 | ($ip) >> @rbx ^ $ip & @rdx >= @r8 >> 0y10 ^ $ip & @r12 ^ $thread & $thread ^ $thread ^ @r13 | $thread & @rsi | 0x11 ^ @rdi ^ @r11) { test_statement(0x1D8C);  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
2609
 if (15 + ~$buffer >> @rdx >> @rax >> $thread & @rdi >> @rdi >> @r13 & @rdx >> @rbp & 0n10 ^ @rax << @rsi >> @r13 >> @r9 & @rsp >> ~+2 & @r10 & 0n13 ^ @r11 >> @rdi ^ @rbp ^ @r9 ^ @rbx | 12 >> @rsi >> @rdi & @rbp >> $thread 15 + ~$buffer >> @rdx >> @rax >> $thread & @rdi >> @rdi >> @r13 & @rdx >> @rbp & 0n10 ^ @rax << @rsi >> @r13 >> @r9 & @rsp >> ~+2 & @r10 & 0n13 ^ @r11 >> @rdi ^ @rbp ^ @r9 ^ @rbx | 12 >> @rsi >> @rdi & @rbp >> $thread)  { test_statement(0x1936);  This is a not opened comment */  if (0y0 ^ 2 <= $thread ^ @rsp)  { test_statement(0x1392); } else { test_statement(0x6C7); } } else { test_statement(0x1085); }
$error$
$end$
2610
 if (@r10 & @r8 << 0n19 | @r10 << ~@rsp >> @rbx >> @rdx ^ +@r13 & @r12 <= @r10 & @r8 << 0n19 | @r10 << ~@rsp >> @rbx >> @rdx ^ +@r13 & @r12)  { test_statement(0xB02); } else { test_statement(0x890);  // /* This is a comment  }
$error$
$end$
2611
 if (@rbp + @rdi ^ +$ip << @r11 >> @rdx >> @r12 ^ @rsi >> ~0n0 ^ ($thread) ^ (@r12) | @r12 >> $thread ^ $proc >> @r9 & (@rbp) ^ @r13 ^ $proc ^ @rbx ; 13 >> @rbp >> @r11 & $teb >> @r8 >> @rsi | ~$teb << @r10 & +$proc >> -@r8 | $ip & 0n6 & @rsi)  { test_statement(0x1BEA); } else { test_statement(0x2062); }
$error$
$end$
2612
 if ($teb + 0n12 >> 0y1100 << @rsi >> @r12 & @r10 << -+(@rbp) ^ @r8 << 0y10011 ; @r9 + @rdi | @rdx << @rsp >> $ip ^ +@r11 >> @r10 | $teb >> @r10 | 2 ^ $teb ^ $buffer | $proc ^ $ip | $thread)  { test_statement(0x26AF);  while  (@rax & @r9 | $teb == @r8 & @rdx | @rbx | 1)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp ^ $thread >> $buffer ^ @rsi & @r10 < $teb << $ip ^ $teb >> (@r11) | @rax >> (@rbp) ^ @rdx | @r11 & $thread ^ $thread ^ @r8) { test_statement(0xB90); } else { test_statement(0x1F1C);  /* This is a not closed comment }
$error$
$end$
2613
 if (@rbx + @r8 & ~0y0 | @r13 << @rdi & 0y100 >> @rbx & --@rax & 0y100 | @rdx >> @rsi ^ @r8 | +-0n0(+@r9)  { test_statement(0x7A2);  while  (+0n2 | @r9 | (14) | 0x4 = $ip | @r12 | -$ip | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (4 ^ $thread != @r9 | 14)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; 0x7 | @rbx == @r10 | (@r10);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2614
 if ($ip + $ip ^ @r11 & @r10 >> $buffer & (+-0x6) & $ip == $ip + $ip ^ @r11 & @r10 >> $buffer & (+-0x6) & $ip)  { test_statement(0x79C); ; } elsif (@r10 & @rdi >> @rdi))@r9 | @rax ^ ~0x9 ^ $proc ^ $thread) { test_statement(0x1589);  /* This is a not closed comment  if (@r11 | ~$teb))@r11 | ~$teb)  { test_statement(0x1776); } elsif (@r12 = @r12) { test_statement(0x325); } elsif (@rax >< $teb) { test_statement(0x746); } else { test_statement(0x96F); } } else { test_statement(0xE2); }
$error$
$end$
2615
 if ($buffer << 0x0 & @rax >> @r10 >> @rbp ^ @rax >> @rdi >> $buffer | @r12 << @rsp & @r8 >> 0y10011 ^ @rdi >> @r9 ^ 0x0 & ($ip) ^ 0x8 ^ 0xA | @r11 | @rsi & @rdx | @rax < @r8 + @rdx >> @r9 >> $buffer)  { test_statement(0x192F); } else { test_statement(0x432); }
$error$
$end$
2616
 if ($ip + -@rdi | 1 >> @r8))$ip >> 10 << 0y1001 & 0x12 << 0y110 >> @rdx >> +$thread & 7 >> $teb ^ (-@r11) << @r9 >> @r8)  { test_statement(0x24C4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 4 >< 0y1001 | -@rbx ^ 0x2 | 0y1000 | @r12) ;  if (~$thread | @rdx < ~$thread | @rdx)  { test_statement(0x265C); }  if (@rsp >= @rsi)  { test_statement(0x93A); } elsif (@r13 != @r13) { test_statement(0x1925); } elsif (@r13 == @r10) { test_statement(0x121D); } else { test_statement(0xFCD); } }
$error$
$end$
2617
 if (@rdx + 0y100 >> @r9 >> @rsp >> @r9 & 0xA << 0y110 >> @rdx >> $teb ^ @r12 << @r11 & 3 >> @rbp & @rbx | $proc ^ $teb >> @r11 & 20 ^ @r9 & -0n10 ^ $proc >= @rdx + 0y100 >> @r9 >> @rsp >> @r9 & 0xA << 0y110 >> @rdx >> $teb ^ @r12 << @r11 & 3 >> @rbp & @rbx | $proc ^ $teb >> @r11 & 20 ^ @r9 & -0n10 ^ $proc)  { test_statement(0x1D71); ;  for (val = 10; -$buffer @rbx | $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif (@rsp & @r11 >> (6) & @rdi & (0x4) ^ @rax ^ @r8 >= @rsp & @r11 >> (6) & @rdi & (0x4) ^ @rax ^ @r8) { test_statement(0x1BD9); } else { test_statement(0x1FE9);  for (val = 10; @r11(@r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
2618
 if ($thread << -0y101 << $thread ^ @r8 << ($ip) & @r8 | $thread << @r12 & @rbx ^ 0n12)$buffer >> ~@r8 << $teb ^ @r13 >> $thread & @rbp ^ 0y110 >> (@rbx) ^ ~~$thread ^ @rdx)  { test_statement(0x1CC2); } elsif (@r11 >> @rdi >> @r10 & 0xE >> +@rbp | 7 & +@r9 & @r13 <> @r11 << 0y1110 & (-+$thread) >> @r8 ^ @r10 >> +13) { test_statement(0x1A05);  // /* This is a comment  } elsif (@r13 >> @rsi & $buffer & @r9 | 0n15 ^ @r10 ^ $teb | @rsi ^ $proc | $ip | ~@r10 <> @r13 >> @rsi & $buffer & @r9 | 0n15 ^ @r10 ^ $teb | @rsi ^ $proc | $ip | ~@r10) { test_statement(0x23CC); }
$error$
$end$
2619
 if ((@rbx) + 0n0 << $proc << -@rsp >> 0n15 << @r10 | @r10 ^ @r13 >> 6 | @rdi & +0n3 | +$proc & @rsi ^ $proc ^ +@r13 | @r12 ^ (@rdi) != @rax + 0x2 & @rbp << $thread ^ @r10 << $teb & @rdx >> $teb & $thread)  { test_statement(0x109B);  while  (0y1011 | $thread | @rbp(@rbx ^ @rsi | -@r12 | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r13 ^ $proc >= @r13 ^ $proc)  { test_statement(0x24A4); } else { test_statement(0x26F7); } } else { test_statement(0x1F57); ; }
$error$
$end$
2620
 if (@r10 + @r13 << @rax << +~@r10 & +0n17 << 0y0 >> @rbx & @rax >> @rdx ^ @rdx << @rax & +~@r9 & $ip & ~$ip (+@r11) << @rbx << @r9 & $teb & ($teb) >> ~$teb & @rbx & $thread)  { test_statement(0x1679);  /* This is a comment */ } else { test_statement(0x3DC);  for (val = 10; @r8 ^ $proc ; @r8 | @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2621
 if (@r8 + 0y1 << (0x12) << $ip >> $ip << $teb ^ 0x6 << ~@rsi >> @rsi >> @rbp | @rbx ! @rax >> @rsp >> @r8 & 0n3 | ((0n10)) | $proc >> @rsp ^ 0y1100 & @rdx | 0y101 & 0x1)  { test_statement(0x1C38); @rax = @r8 >> @rdx & @rsi ^ $teb | @r13 & (@r13) ^ +16 ^ $thread | ~$teb ; } else { test_statement(0x7D);  // /* This is a comment  }
$error$
$end$
2622
 if (@rbp + $teb ^ $thread & @rsi >> 0n13 & $proc | $ip << @rsp >> 3 | $teb >> @rsi | 0n3(@rbp + $teb ^ $thread & @rsi >> 0n13 & $proc | $ip << @rsp >> 3 | $teb >> @rsi | 0n3)  { test_statement(0x1F19); } elsif ($teb >> $teb ^ @r8 & +(@rbp) | 3 & $teb & -@rbp ^ @r8 & +@r13 ^ @r9 ^ 12 | $thread & @r9 >= $teb >> $teb ^ @r8 & +(@rbp) | 3 & $teb & -@rbp ^ @r8 & +@r13 ^ @r9 ^ 12 | $thread & @r9) { test_statement(0x1526);  This is a not opened comment */  for (@rax = @rdx | @r13; @rbp | @r11 <> $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } else { test_statement(0xC03);  break; }
$error$
$end$
2623
 if (+(2) + @r13 << @r10 >> $thread << ~+@rax & 0x4 >> @rsp >> 0xA ^ @rdx & @rsi & @rdx & @rbx <> -0x3 >> @r11 >> @r10 & $ip << 0xF >> @r8 >> $teb & @rdx >> 1 & @rsp ^ (0x12) >> 0n8 >> 5 & @rax >> @rax ^ @r8 >> (0n15) | @r13 << +@rbp)  { test_statement(0x159C); } elsif ($thread << @r12 > $ip >> @rax) { test_statement(0x9BF);  /* This is a comment */  /* This is a comment */ } else { test_statement(0x2226); }
$error$
$end$
2624
 if (@rdx ^ @r8 >> @rbx >> @rdi & -@rdi >> @rsi & 0n19 & +@rdx | -~0y10011 & -@rax & -@r9 ^ (0n10) & +@r11 & ~0x0 > $teb ^ @rsi << @r11 >> @r13 & @r9)  { test_statement(0x14C5); } else { test_statement(0x297);  break; }
$error$
$end$
2625
 if (@rbp << @rsp << -14 | @rsi << @rsi | @rbx | $buffer & $thread | @r12 ^ 0y111 | $teb | @rax > @rbp << @rsp << -14 | @rsi << @rsi | @rbx | $buffer & $thread | @r12 ^ 0y111 | $teb | @rax)  { test_statement(0x1C2); } elsif ($proc << @rbp >> +@rdx >> $proc | @r10 & $buffer | @rdi & @rax ^ @rsi | $thread ^ @rbp | 0x13 | @rsi)~@r10 & 0y1001 ^ $proc >> 0xD & @rdi ^ @r10 | @r8 >> @r8) { test_statement(0x25D9); } elsif (@rax & @rax ; @r11 & 0x7 & @r10 ^ $ip ^ @rsp ^ $thread | +$teb ^ $proc ^ +@rdx | @r12) { test_statement(0x1BA7);  /* This is a not closed comment  /* This is a comment */ } elsif (@rbp & @rax | @r10 ^ ~@r8 ; @rbp & @rax | @r10 ^ ~@r8) { test_statement(0xFA9);  // /* This is a comment  @rax = @rbx ; }
$error$
$end$
2626
 if ($buffer + @r9 << @r12 & -($buffer) & @r13 & @rax $buffer + @r9 << @r12 & -($buffer) & @r13 & @rax)  { test_statement(0x293);  This is a not opened comment */ }
$error$
$end$
2627
 if (0x0 + $proc ^ $proc & 14 ^ 0y1101 ^ @rdi & $proc ; 0x9)  { test_statement(0x20D5);  /* This is a comment */  break;  for (val = 10; $ip = ~@r11 | 0n16;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x19B2); }
$error$
$end$
2628
 if (3 >> $ip & @r8 << 0x13 | @r12 & (@rbx) >> @rbp & $teb ^ 7 >> ~$buffer | @r11 & $buffer ^ @r11 | @r8 >< 3 >> $ip & @r8 << 0x13 | @r12 & (@rbx) >> @rbp & $teb ^ 7 >> ~$buffer | @r11 & $buffer ^ @r11 | @r8)  { test_statement(0x2496);  /* This is a not closed comment }
$error$
$end$
2629
 if (@rax + @r11 >> @rbx << @rsp((-$teb + @rsp >> +@rbp >> @rsp >> +$buffer)  { test_statement(0x1F8A); @rax = @rbx >> @r11 & ++@rdi & 7 ;  // /* This is a comment   if (@rax > @r11 | @rax)  { test_statement(0x365); } elsif ($teb <= $teb) { test_statement(0x1BA4); } else { test_statement(0x1683); } }
$error$
$end$
2630
 if (-@rdx + 0x8 << -13 & $buffer << 0x1 >> (@r12) & $teb >> @rsi <= -@rdx + 0x8 << -13 & $buffer << 0x1 >> (@r12) & $teb >> @rsi)  { test_statement(0x31); } elsif (@r10 << 14 >> 0n9 >> @r13 | @rbp >> 7 & 0n11((@rdx ^ @rdi & @r9 & +@rdi | +~-@r13 >> @r9 & @rax | $teb & @r11 | @rsp ^ @rdx | $ip) { test_statement(0xBEC); } else { test_statement(0x4B9);  /* This is a not closed comment }
$error$
$end$
2631
 if (@rsp & $buffer << -@rdi >> $proc & @rbp <= @rsp & $buffer << -@rdi >> $proc & @rbp)  { test_statement(0x15E8);  /* This is a comment */ } else { test_statement(0x9B8); }
$error$
$end$
2632
 if (+$ip + @r12 << $buffer << -@r10 & @rdi << 21 >> ($proc) >> (@rax) | @r9 >> 0n11 >> 0y1100 & 0y11 & @r10 & @r11 <> $buffer << @rdi << 1 | @rsi << $ip >> 1 >> (@rdi) & @r9 ^ @rbp & ~(@rbx) | (+@rbx) >> @rax & ~@rbp & @rbp ^ @r8 & 12 ^ 0y10001)  { test_statement(0x6BF); } else { test_statement(0x4C6); }
$error$
$end$
2633
 if (@rax >> ~~@rax << @rax >> @r13 >> @rax ^ @rbp << @rdi & @r11 @rax >> ~~@rax << @rax >> @r13 >> @rax ^ @rbp << @rdi & @r11)  { test_statement(0x2516);  if (0n1 & 0n4 ^ @rdx)@rbp ^ @rsp ^ $buffer)  { test_statement(0xC77); } }
$error$
$end$
2634
 if ($buffer & @rdx << @r10 >> $thread >> @rbx & @rax >> @r9 & @rax & $thread | @rax >> ~0n9 >> @r9 & @r10 & @rdi ^ @rsi >> 0x0 | @rax & @rsi ^ $buffer & $proc | @r10 ^ @rax | $proc ^ 0n5 | @rsi($buffer & @rdx << @r10 >> $thread >> @rbx & @rax >> @r9 & @rax & $thread | @rax >> ~0n9 >> @r9 & @r10 & @rdi ^ @rsi >> 0x0 | @rax & @rsi ^ $buffer & $proc | @r10 ^ @rax | $proc ^ 0n5 | @rsi)  { test_statement(0x25FC);  break; } else { test_statement(0x1239); }
$error$
$end$
2635
 if ($buffer + @rsi << @r8 >> 0x10 & @rbp << $proc & @r8 & (13) & @rdi ^ 0x8 ^ @r11 | $thread & @rsp ^ 0n15 >> @r8 | @rbp >> $teb & ~@r11 & 0y11 ^ 14 & @rsi <> @r11 + $proc << @rax << @rdi >> ~@rbp << @rsi | +-@rdi << @r11 >> @r11 & $buffer & $proc & @r11 ^ @rbp)  { test_statement(0x11A3); } else { test_statement(0x26B7);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 | $thread != $ip | @rax) ; }
$error$
$end$
2636
 if (0n18 & @r9 >> @rdi >> $proc & 0x7 >> @r13 & @r9 != 0n18 & @r9 >> @rdi >> $proc & 0x7 >> @r13 & @r9)  { test_statement(0x2133); } elsif (@rbp & @r13 ^ @r11 & $buffer & 0y1111 | ($ip) >> @rbp & @r10 ^ ~(-@r9) ^ +@r8 ^ @rax > 23 << 0 >> 0y10010 ^ @rsi >> 0n18 ^ @rsp & 0n0 ^ @rbp) { test_statement(0x20C2);  while  (@rax ^ +@r10(@rax ^ +@r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif ($ip >> @rax & @rax & @rdi | @r13 & @rax | @rax >= @r10 >> 0y10001 & 11) { test_statement(0x1741);  /* This is a comment */  /* This is a not closed comment  break;  /* This is a comment */ }
$error$
$end$
2637
 if ((@rbx) & 0n10 >> @r9 & @rsp & $buffer ^ @r11 << +~+@rsp >> @r9 & @rbx & @rsp < (@rbx) & 0n10 >> @r9 & @rsp & $buffer ^ @r11 << +~+@rsp >> @r9 & @rbx & @rsp)  { test_statement(0x1AF9);  break;  /* This is a not closed comment } elsif (@rdi >> $proc & 0xF >> $proc ^ 0x0 & -@rdx ^ $ip & @r9 ^ $proc | @rdi & 0x13 & @rbp | ~(-@rbp) | 0y1110 ; @rbx << @r8 >> $proc & @rbp >> $teb) { test_statement(0x1AF8); } elsif (-@rdx & $teb ^ 0n17 & 0y100 = @rax & 3 ^ @r10 & ~@rdi ^ 0x1 | @r9) { test_statement(0x2383); } elsif (@rax & ~@rsi | 0x8)@rax & ~@rsi | 0x8) { test_statement(0x1B9F);  /* This is a not closed comment  if (@rbp < @rbp)  { test_statement(0x1713); } } elsif (+@r11 ^ @r12 | 0n10 > ~@r11 | @rdx) { test_statement(0x183C);  while  ($thread > $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (@rdi)-~-@r13) { test_statement(0xBC5);  This is a not opened comment */ } elsif (@rdi < @rsi) { test_statement(0x1587); ; }
$error$
$end$
2638
 if (-$ip >> $ip << $ip ^ @rbp << 0n2 | -@r11 >> @rbx & $teb >> $ip & $thread == $proc & @rbx & 0y10000 & @r8)  { test_statement(0x18D5); } elsif (@r12 ^ @rdi & @r12 & 0x0 ! @r12 ^ @rdi & @r12 & 0x0) { test_statement(0xF8E); @rax = $thread ^ $thread ^ @rdx ; } elsif (@rbx >> 4 & @r13 ^ ~17 ^ @rdx | +@r9 ^ $teb ^ $buffer | @r12 ! $proc & @r13 ^ @rax & @rsi ^ @rsi) { test_statement(0xA20);  // /* This is a comment   break; } elsif (+@r9 & @rsi ^ ~@r10 ^ @r9 | @rbx >= @rbp & @rbp ^ +0n0 | @rsp ^ @r13 | @r9) { test_statement(0x512);  for (val = 10; @rdi > @r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (+(20) ^ @r8 | @r12 | +$ip > $proc | @r11 | $thread) { test_statement(0x86B); } else { test_statement(0xE0A); }
$error$
$end$
2639
 if (0y1101 << $ip << ~@r10 >> +$ip << (@rsi) & @r8 << @rax & @rbp <= @r8 + @r13 >> @rbx << @r11 >> -@r13 & ~@rbp << @r13)  { test_statement(0x7D5); }
$error$
$end$
2640
 if (-@r13 + @rsi ^ @r12 & @r10 >> $ip & @r9 == @rdx + @r10 << @r13 >> @rax << @r13 & @rsp >> @rbx >> $teb | 0x12 << 0x8 >> @rbp >> @r13 & @rbx >> -@rsp ^ $proc >> $ip & @rbx)  { test_statement(0x19F5); }
$error$
$end$
2641
 if (0xD + @r9 << $teb << 0y101 >> @r13 << 0x6 >> @rax >> 0y10001 & @r11 << $buffer | $proc & $buffer >> 0n19 ^ @rax & @r12 | $thread >> 13 >< @r13 + @rax >> @rdx << 20 & @rdx << @rax & @r9 >> @r8 | @rsp >> @r13 ^ 23 >> @rsp & @r12 | @rbx >> +@r10 | 0x8 & @rbx ^ @rsp)  { test_statement(0x11AF);  if ($proc & $buffer | @rdi | $thread((10 ^ @r10 ^ @rdi)  { test_statement(0x1E17); } else { test_statement(0x776); } }
$error$
$end$
2642
 if (@r11 + @rdi << 17 ^ @rbx << +@rsi & @r13 ^ @r13 >> $proc & @r8 ^ @rax & @rbp ^ @rbp | ($proc) > $proc << $buffer)  { test_statement(0xDD7);  break; }
$error$
$end$
2643
 if (@rsp >> 0n14 << +22 >> @rbx >> @r13 & @rbp ^ @r10 << 0x8 != $proc >> 0n17 << $thread & 2 << 0x12 >> @rdi & @r8 ^ $buffer & @r8 >> $buffer ^ $proc >> -$buffer & $proc & @r13)  { test_statement(0x20A2); } elsif (@r11 & @r9 | @r13 & @rdi))@r12 >> (@rbp) & @rax >> @rax & @r9 & $ip | @rsp >> @rbp & @rsi & (@r12) | @rax & @rbp ^ @r12 | (0n7) ^ -@rax | @rax | $proc) { test_statement(0x26EB);  while  (@rsi ^ @rsi != @rsi ^ @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1612);  for (val = 10; @r13((@r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2644
 if (0xB + $buffer << $ip << 0xA | ~0y1101 >> @rdi 0xB + $buffer << $ip << 0xA | ~0y1101 >> @rdi)  { test_statement(0x14F5); } else { test_statement(0x1A10); }
$error$
$end$
2645
 if (@r10 + @rbp >> @r11 >> @r12 >> @r9 ^ @rbx << @rdx & 0x0 >> @rdx ^ (~@rdi) >> ~@r12 & @rsi & @r13 = $proc + $ip << @r12 & @rdx >> @r13 >> 14 & 0xB & @rsp & @r13)  { test_statement(0x1ACB);  break; } else { test_statement(0xC0E); }
$error$
$end$
2646
 if (~+$ip << @r11 ^ $proc << 0n10 >> @r11 & @r11 >> (@r9) & @r9 ^ @r13 >> @r13 ^ $teb & 0n3 >< @rdx + 0x0 & @rdx << @rax >> $ip >> @rbx & @rbx >> $teb & (@rbx))  { test_statement(0x26F); } elsif (@r8 & -@rdx((@r10 >> 22 >> -0y1011 & $thread >> @rsi & ($proc) & ($thread) | +@rsi >> $buffer & $thread & ~@rax) { test_statement(0x81C);  /* This is a not closed comment } else { test_statement(0x11E); }
$error$
$end$
2647
 if (@r13 << @r10 << 21 & @rdx << $ip & @rsp >> 0n15 & $buffer <> @rbx >> @rdi >> @rbx >> $ip ^ 0x7 << (@r8) >> (@rbp) >> 0x7 ^ @rsi >> $buffer ^ @rax ^ @r11 ^ 0n16)  { test_statement(0x1F9D); }
$error$
$end$
2648
 if (@rsi >> +0xE & @r13 << @rsi >> $buffer >> @rsp ^ $ip << @rax >> @rax >> @r11 ^ ~(0n1) >> @rsp ^ @rdi & ($proc) ^ @rax ^ $proc ; @rdi + @rbp << 0n3 << @rsp >> @rdx << @r10 >> @r13 | @r8)  { test_statement(0x11C8); } elsif (@rax << @rbx >> @rdx >> $teb ^ @rdi >> 0y10 ^ 0xF <> @r11 << 12 & $ip & @rdi & @rsi ^ @rdi ^ ~12) { test_statement(0x962);  // /* This is a comment  }
$error$
$end$
2649
 if ($teb >> $buffer >> 0x6 >> +@r11 ^ $ip >> -@r8 & 0x10 >> @rax & @r12 | @r8 >> @r10 ^ -@rbx >> @rax | $thread >> @rdx ^ -@rbx | @r11 & $ip | 15 | @r12 <> @r8 + $proc ^ @r12)  { test_statement(0x1DB2); }
$error$
$end$
2650
 if (+$ip << +($ip) != @rbp + @rbx >> @r12 ^ 0y10010 << $proc >> +@rsp >> $thread | @r8 ^ @r12 >> $buffer)  { test_statement(0x324); } elsif (@rbx >> @rsp ^ $proc >> @r13 & $proc ^ 0y1 ^ @r12(0y1011 << $thread ^ 6 >> @r9 & @rax) { test_statement(0x39F); }
$error$
$end$
2651
 if ($buffer << @rax >> 0x7 << @r13 & $proc | $teb << 0y1101 & @r10 >> +-@rdi & (0y100) & +@rdx ; @rdi + $ip << 0n4 >> @r12 << @rbp >> @rdi >> $proc & $teb << @rdx >> @rdx & -$proc >> $ip & @r8 & 15)  { test_statement(0x1C6F); ;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax <> 1) ; } else { test_statement(0x755); }
$error$
$end$
2652
 if (+-@rsi << (@r11) << $thread ^ 13 & (@r10) & +@r13 & ~@r11 > @rbp >> 0xE >> $proc & $buffer | 0y110 >> ~@r8 >> -(@rbp) ^ @rbx ^ @r9 & 0x9)  { test_statement(0x2667); } elsif (@rbx ^ -@r8 >> @r10 | -@r12 >> @r9 & $teb ^ @rsi & @rbx ^ @r11 ^ @rdx | 16 & (@r13) ^ -~@r12 ^ @r9))+$proc >> @rdi | @rax & @rax ^ @rax ^ @rax | @rbx | (@r10)) { test_statement(0x1D0F);  for (val = 10; @rdx < @r13 ^ @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1001);  while  ($ip)$ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
2653
 if (@r12 & @rsi << $teb & @r13 >> -@rsi & @rdx = $teb ^ @rbx << 0n14 >> +12 ^ @rdi >> 0n16 & 0y10001 ^ @r10 & +0n17)  { test_statement(0x1669);  /* This is a not closed comment } elsif (@r10 << 0xC ^ @r11 & $proc | ~@r12 >> 0n17 & @rsp & @r12 ^ 17 & -@r11 ^ (@r8) ^ @rbx(@rbx << @rdx | -@rax >> $proc | 0y1000 & @rbx) { test_statement(0x1AA0); }
$error$
$end$
2654
 if ($thread)0n17 + @rbp >> @r11 << @rsi & 0y1110 << 16 & ~@rbx >> $proc & 0n10)  { test_statement(0x170D); } elsif ($thread << @rax & @rsp & @rsp <= $thread << @rax & @rsp & @rsp) { test_statement(0x909);  while  (0x8 | @rdx >= 0x8 | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y10011 & @rsi((0y1110 >> @rdx & ~$ip) { test_statement(0x22FF); } else { test_statement(0x227C);  /* This is a comment */  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
2655
 if (@r12 << ++@rax >> 0y1010 & 0n4 << 20 ^ @r11 >> -$proc >> @rdx >= 0y1000 + @r12 << ~@r13 << -+@r9 & @r8 >> @r9 >> @r13)  { test_statement(0x25A3); @rax = @r9 & $ip & 0n17 | $proc | @rdi | $ip | @rbp ; } elsif (@r10 & 0x3 >> $teb ^ @rbx >> (-@rsp) ^ $teb & ~~+$teb ^ @r11 | 0y1 | @rbx & @rbx <> 0xA << @rbx >> @r8 ^ $ip >> +@rbp ^ @r12 & @r13 ^ @rbx) { test_statement(0x33C); } elsif (0y1110 >> @rsi & @r12 ^ +~(@rax) ^ $buffer ^ (@r11) <> (0n7) >> $ip ^ @r10 & @rsi ^ ~-@rbx) { test_statement(0x2BE); } elsif (~@r9 & @r10 | $teb ^ 0n13 = -+@rdi ^ @rbx ^ @rbp | ~@rbp | @rbp) { test_statement(0x1F02);  /* This is a not closed comment  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp >= @rbp) ;  for (; @rax)@r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2656
 if (@r13 << @rsp << ($thread) ^ @rdx << $proc ^ -12 >> @rbp & @rbx & @r13 ^ $thread & +(-@rax) ^ 0y110 ^ @rbp | @rbp << @r9 ^ @r12 & ~0x13 ! @rsp << @r10 << (+((@rbx))) >> ~@r9 >> $ip)  { test_statement(0x1B93); }
$error$
$end$
2657
 if (0n13 << $thread << @rdi & @r13 & 0y1000 >> @r8 ^ $ip & (@rax) & 0x13 ! 0n13 << $thread << @rdi & @r13 & 0y1000 >> @r8 ^ $ip & (@rax) & 0x13)  { test_statement(0xAB1); } else { test_statement(0x1345);  for (val = 10; -~@rbp == -~@rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r12 @r12)  { test_statement(0x68F); } elsif (@rax((@rax) { test_statement(0x14D9); }  // /* This is a comment  }
$error$
$end$
2658
 if (@rbx + @r12 >> @r10 << @rbx & 0y10000 & $buffer >> +$thread | +@rbp >> @r11 ^ $thread | ~@rsi >> (-@rbp) & @rbp | @rbx | @rdi ^ @rbx | @rbp ! @r12 + 0y100 << @rdi << $teb >> 0n2 >> $buffer & @rbp & @r9)  { test_statement(0x217A);  break; ;  This is a not opened comment */  This is a not opened comment */  /* This is a not closed comment }
$error$
$end$
2659
 if (@r8 << @r12 << $buffer >> @rbx << $proc >> $teb ^ 0y1011 << @r10 & @rbx >> @r13 & @r9 & @r12 != 0xF + @r12 & @r10 << 0x6 >> @rdi & @rbp & @rsi & (0x12) ^ @r9 ^ @rsi & 13)  { test_statement(0x151D); ;  for (@rax = +$proc; $ip ^ $proc < $ip ^ $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  if (@rdx(@rbp)  { test_statement(0x64); } else { test_statement(0x3F4); } } elsif (0y10 << -@r13 <= @rdi >> -0x8 >> @rbx) { test_statement(0xC93);  while  (2 ^ 0n0 ; 0y1110)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx >> $teb ^ @r13 | $teb & @rbx ^ 0n1 >= $thread >> @rsp ^ @r13 & -+@r12 | $thread & 3 ^ @rdi) { test_statement(0x660); } elsif (23 >< $ip ^ -(@r12)) { test_statement(0x22EC); } else { test_statement(0x26DE); }
$error$
$end$
2660
 if ($teb + (-$ip) >> $teb << @rbx ^ +++0x2 >> @rdx <> (@r8) + @rbp << $proc << 0x9 & @r8 >> @rdx & @rsp ^ @r12 >> @rax >> @r12 & @rsi >> 0n0 ^ $ip ^ @rbp)  { test_statement(0x218);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip & @rsp | 0y111 @r11 ^ @rsi ^ @r8) ; } elsif (@r8 << $thread >> $teb & @rsp & 0n1 == 20 << 0y0 | @r12 | @r13 & ~0xC | $teb ^ @r13) { test_statement(0x20FE); } else { test_statement(0xC8E); }
$error$
$end$
2661
 if (0n11 + @rbp << @rsi >> 0n18 ^ @r9 << $ip ^ @r8 | $ip >> (@rdx) >> @rsp ^ $proc >> ~(0y1) | -@r13 & @rax & @rdx ^ -0x11 | $thread >< ~0n1 + $proc >> 0xF | @rbp | @r9 & $buffer & 0y10001 ^ 0y101 & 0y110 ^ @rbp ^ ($proc) | @rax & @rsi ^ +$ip)  { test_statement(0x81D); } elsif (@r10 << $proc >> @r13 & $proc & 0n11 ^ @r10 ^ @rbx & @r13 | (@rsp) >> $teb & @rbp & @r8 ^ @rbx & 23 ^ --$ip ^ @rbx | @rsi & @r10 ^ $teb ! @r10 << @rbp >> 0n13 & $ip >> @rbx | $ip) { test_statement(0x2E6); } elsif ((-0y1101) >> @rsp ^ @r9 | -@r8 & @rax ^ @rax <= @r10 >> @rbp & @r8 ^ @r8 ^ @rbx) { test_statement(0x85);  // /* This is a comment  ; }
$error$
$end$
2662
 if (@r8 + @rsp & @rbp << $proc & 0n19 & 0n0 & (@rdx) ^ @rsi << @r12 ^ @r8 >> @r12 & -$ip ^ @r12 & @rbx = @r8 + @rsp & @rbp << $proc & 0n19 & 0n0 & (@rdx) ^ @rsi << @r12 ^ @r8 >> @r12 & -$ip ^ @r12 & @rbx)  { test_statement(0x1883); }
$error$
$end$
2663
 if (@rbx << @r13 << $thread >> $proc << @rbx >> 0n10 >> 0n13 & @r9 | -$proc << @r8 & ~@rdi >> $thread ^ $teb & $buffer & $ip ^ @rdi <= @rbx << @r13 << $thread >> $proc << @rbx >> 0n10 >> 0n13 & @r9 | -$proc << @r8 & ~@rdi >> $thread ^ $teb & $buffer & $ip ^ @rdi)  { test_statement(0x2367); } else { test_statement(0x2A1); }
$error$
$end$
2664
 if (~0y1000 = -@r11 + @r13 & @rdi | $ip >> $ip)  { test_statement(0x922); } elsif (-@r10 << $ip >> @rsp & @r8 >> $proc | @rbx >> $teb ^ $thread ^ $teb | $teb <= -@r10 << $ip >> @rsp & @r8 >> $proc | @rbx >> $teb ^ $thread ^ $teb | $teb) { test_statement(0x1913);  /* This is a not closed comment  break;  if (-@r10 > $thread)  { test_statement(0xD1D); } } elsif (-@r12 >> 23 & @r12 | @rdx ^ @r10 == @r11 >> $thread | @r13) { test_statement(0x1237);  if (@rsi | $buffer >< @rsi | $buffer)  { test_statement(0x1E3D); } elsif (@rdi @rdi) { test_statement(0xF33); } else { test_statement(0x1680); } } else { test_statement(0x21E4);  while  (0y111 | @r9 | $ip 0y111 | @r9 | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2665
 if (@rax + @rbx >> -@rsp << @rsp >> @rbx >> @rsi <= @rax + $teb & $ip << $teb >> @rdx >> @r8)  { test_statement(0xDD1);  /* This is a comment */  for (val = @r10; @r11 | @rax 0n3;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 << 0x3 >> 0y1 & @rax & @r10 & @r13 | @r12 ^ @r13 & @r12 ! @r8 << 0x3 >> 0y1 & @rax & @r10 & @r13 | @r12 ^ @r13 & @r12) { test_statement(0xA60); } elsif (2 >> 0y10010 & -@r12 & $buffer | $proc ^ @rax | @rsi((@r8 >> @rsi & $teb & @rax | @rsi ^ @rsi | @r9 ^ -0n12 | @rbp) { test_statement(0x1716); }
$error$
$end$
2666
 if (~@rdx >> (@r12) >> $buffer & @rdi << @rbx & +$thread | (-@rbx) << @r12 & @rsi >> $thread & @r12 ^ +@r10 ^ ~@r13 & @r13 ^ +0n16 @r9 << 0n10 << @rdx & @rsp << @rsp >> $buffer >> 0x13 ^ $proc >> @rbp | 0y1000 << @r13 >> $ip)  { test_statement(0x860); ; }
$error$
$end$
2667
 if ($teb + @rbx & @rsi << @r12 >> @r10 >< 0x12 + $teb ^ @r12 << -$thread & @rsp & 23 | @r13 << @rbp >> +@rdi & -$thread & +0xC & @rbp | 14 >> @rbp ^ $proc & $proc)  { test_statement(0x643); } elsif ($ip >> $teb >> @r12($ip >> $teb >> @r12) { test_statement(0x1D64); } elsif (@r11 > @r12 >> 0xC & @r13 & 1 ^ $teb & @r10 ^ @r12 ^ @rdi) { test_statement(0x1E85); } else { test_statement(0x1F4D);  if (~@rbp | -@r12 | @r9)@rax ^ @r9)  { test_statement(0x350); } elsif ((@rdx) | ~0n4 = (@rdx) | ~0n4) { test_statement(0x1AD6); } elsif (@r13 < 17) { test_statement(0xB7D); } elsif ($proc)@rbp) { test_statement(0x172); }  while  (@rbx | @r8 <= -$buffer | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 <> $thread) ;  break; }
$error$
$end$
2668
 if (@rbx + @r9 ^ @rdi & @rax & --~$thread | $buffer >> @r9 >> $teb & +@rsp >> +@r12 ^ @rbp >> 0n0 & @r11 ^ $proc ^ $buffer | @r13 ^ @rsi | $ip | ~$thread < $proc + ~@rdi >> @r10)  { test_statement(0x1B4C); } elsif (@r13 << @r8 >> @rbp | @r8 ^ 0x10 & @rax @r13 << @r8 >> @rbp | @r8 ^ 0x10 & @rax) { test_statement(0x1C8A);  This is a not opened comment */ }
$error$
$end$
2669
 if (0n9 << @r8 << 0y1100 & 0n7 & $thread & @r8 | $teb ^ @r12 & 21 & 0y11 ^ @r8 | @rdi ^ +@rdx & @r8($ip + @rsp | @rbp ^ @r13 ^ $buffer ^ $teb)  { test_statement(0x1427);  if (@rsi & $buffer | 16 ^ @rsp | 0n5 | @rbp >= @rdi & $buffer)  { test_statement(0x9F); } else { test_statement(0x252E); } ; ; } elsif (+@rbp << (@rbx) >> ~@rdi & @r10 >> $proc | @rdx >> +@rsp & 23 & 0xC | @r9 | ~$thread | @rbx | @r11 != $proc << @rdi ^ @rax | @r8 & @r8 & 0x4 | (20) & 0y11 ^ 0n3 | @rax ^ $buffer | @r12 | ($buffer)) { test_statement(0x8B7);  // /* This is a comment   if (@rsp ; @rsp)  { test_statement(0x1D25); } elsif (22 == 22) { test_statement(0x1424); } } else { test_statement(0x4BA);  for (val = 10; 0y1111 | $thread | $teb == 0y1111 | $thread | $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r13 >= @r13)  { test_statement(0x571); } elsif (@rsi != @r10) { test_statement(0x26C6); } else { test_statement(0xFDD); } }
$error$
$end$
2670
 if (@r12 + @rsi << $ip << @rax & @rax >> 0n15 >> @rsi <= @r12 + @rsi << $ip << @rax & @rax >> 0n15 >> @rsi)  { test_statement(0xB82);  while  (@rbp & $ip ^ @r11 >< $thread & @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x2621); }
$error$
$end$
2671
 if (@r11 + +@r9 << 4 | $thread & @r12 >> @rsi & @rdx & @r11 | -@rbx | $proc & $proc ^ @r9 == @rdi + -@r8 & @r10 << $buffer)  { test_statement(0xDC7); } elsif ($buffer ^ @rsi & $ip ^ @rsi & @r13 | $proc >> 5 ^ @rsp & @r8 | 15 >= @rsp >> @r9 & @rsp | $teb >> 4 & @rdx & $buffer ^ @r10 ^ @rsi ^ @r11) { test_statement(0x303); } else { test_statement(0x169B);  for (val = 10; @rdx | @rbx))@r12 | ~0n0 | @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  /* This is a comment */ }
$error$
$end$
2672
 if ($buffer << @rsi << $teb >> @rax << @rsp >> @r10 >> $buffer & @rdi ^ $thread << $buffer >> @r13 ; $buffer << @rsi << $teb >> @rax << @rsp >> @r10 >> $buffer & @rdi ^ $thread << $buffer >> @r13)  { test_statement(0x6B0);  if (@rbx & @r9 ^ 0n6 ^ $ip | @r10 ^ ~@rdi | 0n2 | $teb ; 0n13 & -3 ^ $thread)  { test_statement(0x38E); } else { test_statement(0x1670); } }
$error$
$end$
2673
 if (@r12 & @r10 >> 0x10 >> $teb ! $proc + 22 << @r12 << @rax ^ @rdx << @r9 ^ @rdi >> $proc)  { test_statement(0x1C62);  /* This is a not closed comment } elsif ($proc << @r10 ^ -0y10 >> -$thread & @rax & 0y10001 ^ $proc | 0x6 & -(@r11) & $proc ^ @r10 ^ @rbx ^ @r9 | 0n14 ^ -0x11(@rsi << $proc >> @r11 >> @rbx & @rax & +@rdi & @r13 ^ @rbp | -$proc & @rdi & @rdi ^ @rdi) { test_statement(0x766); }
$error$
$end$
2674
 if (@r8 + @rdx ^ $ip((@r8 + @rdx ^ $ip)  { test_statement(0x8DA); } else { test_statement(0x2625);  break; }
$error$
$end$
2675
 if (@rdi + 0y0 & @rdx >> @rax >> @rsp ^ @r12 & @rsi & (@r12) ^ @rdx >> $ip & 0y1000 >= @rdi + 0y0 & @rdx >> @rax >> @rsp ^ @r12 & @rsi & (@r12) ^ @rdx >> $ip & 0y1000)  { test_statement(0x1A5A); } else { test_statement(0x1526); }
$error$
$end$
2676
 if ($teb >> +~@rax << @r12 >> $thread & $thread << $thread >> @rsi >> @r12 | @r10 << ((@rbx)) >> @r13 & @r12 ^ @rax >> 0y1100 ^ @rax & $buffer != @rbp + $ip >> $teb & 0n5 ^ @rsi)  { test_statement(0x1D2A); }
$error$
$end$
2677
 if (@r10 << @rsp >> @r9 & $proc << +@r9 >> (@rax) & @r11 >> $thread ^ @rsi & $teb | @rsi >> @rbx >> $buffer | 0y1100 >> @r9 & @r13 & +@r11 ^ ((0xA)) & -@r12 ^ @rsi | +@r12 & 0y10010 | @r13 | +@rsp = @r10 << @rsp >> @r9 & $proc << +@r9 >> (@rax) & @r11 >> $thread ^ @rsi & $teb | @rsi >> @rbx >> $buffer | 0y1100 >> @r9 & @r13 & +@r11 ^ ((0xA)) & -@r12 ^ @rsi | +@r12 & 0y10010 | @r13 | +@rsp)  { test_statement(0x1791); ; } elsif (@r10 << $teb >> @rax ^ @r9 & -@r13 & ~0n18 ^ @r8 ^ @r10 ^ @rdi | 0x11 | $proc | $buffer ^ @rdi))0n18 << $buffer >> -$buffer >> $ip & @rsi >> @r13) { test_statement(0x10A2); } elsif ((@rbp) >> $thread & @rax & (@rdx) ^ @rdx & @rdx ^ 0x10 ^ $ip | 16 & $teb ^ (@rsi) ^ $buffer != 10 >> @rax & @rsp ^ $proc | 0n1 ^ @r13) { test_statement(0xBD1); }
$error$
$end$
2678
 if (@r12 << @rdx & +@rsp << @r12 >> 0x8 >> @r9 ^ 0n0 >> -13 & $ip >> ($teb) & @rbp & 0n15 ^ +$thread & $buffer | @r12 >> $thread >> 0n9 & ~@r12 & 0y10001 & @rbx ^ $teb >> $buffer | $teb >> @r9 & $teb >= $ip ^ @r9 << 0n19 >> $ip ^ @rsp >> $ip ^ ~@r9 & $ip)  { test_statement(0x1360); } elsif (@rbx << @r13 >> 0y10010 & @r11 & @r12 & -$ip | -$teb ^ @r8 <= $ip << 0x7 | ~@rax >> @rsp & @rbp) { test_statement(0x746); val = @r10 & $ip ^ @r13 ;  for (val = 10; 0n7 | @r8 = 0n7 | @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  for (val = 10; @r13 ; @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y1 ^ @r11 ^ 13 ^ @r11 > @r10 & $ip & @rsi | $ip & -@r13 ^ 0n9) { test_statement(0x1294); } elsif (@rdi & (@rdx) ^ @r13 ^ @r10 | $buffer != $thread & $ip | @rdx) { test_statement(0x1773);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb >= $ip) ;  /* This is a comment */ } else { test_statement(0x1426);  break; }
$error$
$end$
2679
 if (@r12 + $thread << @r12 >> $ip ^ @r8 << $proc >> 0xB >> @r13 & $ip & ~$thread & $buffer ^ $ip >> $ip & @r13 ^ @rsp & @r9(@r11 + $thread << $thread << -@r13 >> ~@r10 << -@rbp >> ~$ip >> @rsp & 0y1000 >> @rsi & @r12 & @rsp & @rsp | @r8 ^ 21 >> (0n9))  { test_statement(0x205E); } elsif (@rdx << @r10 >> @r10 >> @r9 & @r13 ^ $ip)$thread << ~@r11 >> $ip & @r11 >> @r9) { test_statement(0x1F71); } elsif (-$proc ^ -$teb ^ -@r10 ^ @rax | @r13 & 0x12 ; 1 >> $proc) { test_statement(0x9DD); @rax = 0y10 ; } else { test_statement(0x2EF);  // /* This is a comment   // /* This is a comment  }
$error$
$end$
2680
 if (0y11 + $thread << @r9 ^ @r9 >> @rax >> $teb ^ 3 ^ @r13 ^ @rax | @r9 << -$proc >> (-$ip) & 0n10 >> @rax ^ $buffer & 0x1 & 0xC ^ $teb & @rbp(@r8 ^ @rbx << -$teb)  { test_statement(0x112D); } elsif (@r9 | @r10 & @rbp(@rdx << $proc) { test_statement(0x1544); } elsif ($proc ^ @r13 & $thread ^ @r12 | (~0n17) & @rdx ^ @r13 ^ $thread >= @rax ^ $buffer & @r10) { test_statement(0x2040); }
$error$
$end$
2681
 if ($proc + @r13 ^ @r8 << @r13 ^ @r13 | +--$teb >> @r13 & $proc >> @r12 ^ 0y0 ^ @rax & +@rbp ^ @rsp ^ $thread >< 21 + -$thread << $teb >> @r9 << ~$proc >> (-0x7) & 2 & 0y101 >> @rbx ^ @r9 << $proc >> @r8 >> $buffer)  { test_statement(0xF5A); ; }
$error$
$end$
2682
 if (@r10 + @r11 << (@rbx) >> 0y100 >> @rdx >> @rbp ^ ~@r11 >> @rdx & 0n7 >> @rdi ^ @r8 >> @r11 ^ ~@r8 & @r10 ^ +@rsi >< $teb << 0 & @rbp << @r10 ^ (0n19) << @rsi ^ @rsp | $ip << 0x2 >> +15 & ~@rdx & @rsi & @rdi ^ @rbx >> @r12 ^ 0x8)  { test_statement(0x1AF6); } else { test_statement(0x14AF); @rax = @rbp | @r10 ; }
$error$
$end$
2683
 if (@rdx + (@r9) >> 14 >> @r10 & @r11 << @r10 >> +0n19 >> @r12 | $buffer & @rdx >> @rdi & $teb ^ @rax == -@rbp + ~@rsi & @rdx >> @r8 & 0x0 >> 0n7 ^ @r12 << +(@r12) & @r11 >> 0xA & @rsp ^ @rbp & $thread & @rax ^ 11 ^ $proc ^ @r10)  { test_statement(0xE7B); ;  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9)@r9) ; }
$error$
$end$
2684
 if ((@rax) + 0x2 << @rbx >> $teb >> @rbx & ($proc) << @rsi >> @rdx & @rdx >< ~$teb + @rsp << $proc >> @rax >> $proc >> +@r9)  { test_statement(0x1B53); } else { test_statement(0x110C); }
$error$
$end$
2685
 if (0y10011(0y10011)  { test_statement(0x6D6); @rax = $buffer >> 0x0 & @rbp ; } else { test_statement(0x1CE2);  /* This is a comment */ }
$error$
$end$
2686
 if (0y1010 << @r12 < ~@r12 ^ @rdx << @r8 & @r13 >> @rdx & @r9)  { test_statement(0xB53);  break; } else { test_statement(0x1D06);  while  (@rax(@r12 ^ @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax @rax) ; }
$error$
$end$
2687
 if (@rsp + -$buffer << 21 << 0n14 ^ @rdi >> -1 | @rsi << @rax & @rsp >> +@rdx | 0x1 >> @rbp & @rax != @rsp + -$buffer << 21 << 0n14 ^ @rdi >> -1 | @rsi << @rax & @rsp >> +@rdx | 0x1 >> @rbp & @rax)  { test_statement(0x196); val = ~$teb | 0n17 & @rbp ^ @r9 ^ (@rdi) ; @rax = $teb | 0y0 ^ 0n15 | 0y10000 ; } elsif (@r10 >> @rsi ^ @rbp >> $thread | (-~@rsi) ^ @rbp | @r13 & @rsi | +0x7 < 7 << $thread & @r9 >> $buffer & @rsi ^ @rbx >> @r12 & -0y1001 ^ 0y1 & @r8) { test_statement(0x12BC);  for (val = 10; @r13 <= @rbx ^ (@rax);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer(($buffer) ;  // /* This is a comment  } elsif (@rsi ^ $teb ^ @r13 ^ -@r9 ; @rsi ^ $teb ^ @r13 ^ -@r9) { test_statement(0x22BC); } elsif ($ip & @rdi | (@r10) ^ @r13 <= $teb ^ 0n14 | @rbx ^ 0x2 | @rax | $proc) { test_statement(0x59F);  while  (+@rdi((+@rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2688
 if ($teb + @r8 << @r11 & 0n10 << @r10 & $proc > @rsp << $buffer << @rsi & @r12 << 16 >> $buffer)  { test_statement(0xF84);  break; ;  if (+$buffer >< 0xF)  { test_statement(0x1C91); } elsif (@rdx >< @rdx) { test_statement(0x1915); }  if ($teb($teb)  { test_statement(0x116F); } } else { test_statement(0x967); val = @r11 | @rdi ^ $ip | @rbp | @rdi ; }
$error$
$end$
2689
 if (@r12 + $buffer << @rsp & @rsi >> @r13 & @rbx & @r12 | @r11 >> @r13 >> @r12 != $teb >> @rdx >> @r11 >> @rax)  { test_statement(0x8CC); } elsif ($ip << (0x8) ^ @r9 >> @rsi ^ @rax)@r11 & @r11 & @r10 & @r9 | @r10 | $ip ^ ($thread) ^ @rax | @r13) { test_statement(0x45B); } else { test_statement(0xE64); ;  for (val = 10; $thread | @rbp >< @r9 | @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2690
 if (@r12 + @r9 << @rsi >> $teb << @rdx >> 0x7 | $proc << @rsi >> $thread | @rbp | @rsi >= @rbp << @r9 << @rdi >> 0n0 << 0n7 >> @r8 ^ @r10 << ~@r9 >> $proc)  { test_statement(0x38F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | 0n5 ^ @r13 | @r11)@r11 & @r10 ^ $buffer) ;  // /* This is a comment  }
$error$
$end$
2691
 if (@r8 << @r13 | @rbp >> @r12 & @rsp >> @rax | $buffer ^ @rbp ^ @rbp ^ @r10 <> @rax + $buffer & @rsp ^ @r8 << @rsp & @rdi)  { test_statement(0xEF8);  while  ($teb & $thread | @rsi ^ ~@rbx | @r8 >< $ip | -0x3 | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif ($proc << $teb >> -@rsi >> $buffer | (11) & @rsi | 23 < $proc << $teb >> -@rsi >> $buffer | (11) & @rsi | 23) { test_statement(0x58D); } else { test_statement(0x16C0); }
$error$
$end$
2692
 if ($proc + 0x2 >> ~@rbp ; $proc + 0x2 >> ~@rbp)  { test_statement(0x500); } else { test_statement(0x19A2); @rax = $ip ^ 5 ^ 0xF ; }
$error$
$end$
2693
 if ((0n3) << $buffer << @rbp >> @r11 ^ @r9 >> @r11 ^ 0y10000 ^ @rsi))$thread + -@rax >> @rsp | @r10 >> 0y10011 & +@r10 >> @r9 ^ @rdx >> @rax)  { test_statement(0xAED); } elsif ($thread << @rdi < @rsp << @rax >> ~$ip ^ @r13 >> -@rbx & ~@rsi | @rbx >> +0x13) { test_statement(0x1317);  This is a not opened comment */ } elsif ($buffer >< @rdx >> @rdi) { test_statement(0x7B); } elsif (@rbx | 0xE ^ 0y1101 | ($buffer) | @r12 ! -@rsp & +$teb | @r10 | @r9) { test_statement(0x967); } elsif (+0y10001 <> $thread | @rdx | @r9) { test_statement(0x267F);  break; } elsif (@rsp(($teb) { test_statement(0x2644);  This is a not opened comment */ } else { test_statement(0x133); }
$error$
$end$
2694
 if ($thread >> @rbx & @r12 << $proc >> ~$proc <= @r11 + 0x6 & @rsp >> $teb >> @rbx ^ $proc << $teb & @r12 & $teb & 0xF ^ @rsi & @rax & @r9 ^ ~$proc & +@rdi ^ @r8 | @r11 >> @rsp & 0x7 >> 6)  { test_statement(0x1272);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | @r12 >< -@r11 | @rsi) ; }
$error$
$end$
2695
 if ((0x12) + 0y1011 >> $proc >> $ip ^ 0x12 >> $teb >> 0x1 & 0x10 & @rsp & @rdx ^ @r13 >> $ip ^ @rdx & @r9 ^ 4 ^ 23 != @r8 + @rsp)  { test_statement(0x253E); } else { test_statement(0x2236); }
$error$
$end$
2696
 if (0y10010 << @rdi << @r8 >> @rsi << @rax & ~-@rdi << @rdx ^ ~-@r13 >> @rdx & @rsp >> @r10 ^ $ip >> 0n16 & @rax))$teb + @r8 << 13 >> @r11 << @rbx >> $proc >> @r12 & (@r11) << ~~$ip >> $thread >> +0y111 | 4 & @r9 >> @rsi ^ @rdx >> @r13)  { test_statement(0x18CA); } elsif (21 ^ @r8 >> @rsp & @rdx & 0xE ^ @rdi & @rbp ^ @r8 ^ 22 | 0n10 & $buffer & @r13(21 ^ @r8 >> @rsp & @rdx & 0xE ^ @rdi & @rbp ^ @r8 ^ 22 | 0n10 & $buffer & @r13) { test_statement(0x5A5); } elsif (@r13 ^ $buffer & ($ip) >< @rdi | @r10 ^ @rsp ^ 0x0) { test_statement(0xEF5); } else { test_statement(0x1ECD);  /* This is a comment */ }
$error$
$end$
2697
 if (~~@rsi & @r9 >> @rsi & @r11 >> $ip | @rsp ^ ~+$proc ^ +@r12 & @rdi ^ $ip ^ @rsi | @rax >> @rax ^ @rbx ^ @r10 | @rsi & 0n16 ^ ~0x2((0y1011 + @r8)  { test_statement(0x24A3); ;  /* This is a not closed comment } elsif ((~@rbp) >> @rax >> @r13 & @r8 ^ (@r13) >> $proc & @rax > 0x10 & @r8 >> (@r8) & @rdx) { test_statement(0x20FA); } elsif (@rsi >> $buffer & $ip ^ @rbp & @r12 ^ @rsp | (@r13) > 0x13 >> @r10 ^ @rbx & ~+-@r12 ^ $proc ^ $thread) { test_statement(0x814);  break; }
$error$
$end$
2698
 if (0y1001 >> 0xD << $thread & @rbx << $thread >> @rbp >> @r12 ^ @rax & @r13 >> +@r13 | $buffer << @r12 >> ($thread) >> $buffer ^ @rbx ^ @rbx <> @rdx + @rax << $teb << 0n13 ^ @rbx << $ip >> $ip >> 0y101 & 0n13 >> 3 & 0x5 | +~$thread & $ip ^ @rsp)  { test_statement(0x90E); } elsif (@r10 >> $proc ^ @rdi & $buffer & @rax ^ (@r9) & @rsp | ~@rsi)@rsi ^ 0x13 & @rsi ^ @rdi) { test_statement(0x2267); } elsif (@rsi >> $thread ^ 0y1010 | 0xC & @rbp | 0y10011 ^ @rdx | @r11 | @r9 = @rbx >> @rdi & (+-@r13) & @r12 | @rsi) { test_statement(0x1BB4); } elsif (0n17 ^ @r11 ^ @rdi > 13 ^ +-@r10 ^ -$ip) { test_statement(0x50C);  /* This is a not closed comment } elsif ((@rsi)))(@rsi)) { test_statement(0x132B);  if (-@r10 ; -@r10)  { test_statement(0xFF5); } elsif ($thread <> $ip) { test_statement(0x82A); } } else { test_statement(0x2072);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rbx ^ @r12 > @rdx ^ @r13) ;  // /* This is a comment  }
$error$
$end$
2699
 if ($teb >> 0n8 << @r13 | @rsi << @r10 >> 15 & (@r9) >> @rax >= @rdi << @rsp << @r9 & @r10 << 0y111 & (@r12) >> (@rdx) & 0n19 ^ @r13 >> +@r12 >> $thread)  { test_statement(0x32F); } elsif (14 << @rsi >> ~~$teb & $proc < @rdi) { test_statement(0x2B9); } else { test_statement(0x1446);  break; ; }
$error$
$end$
2700
 if ((@rbx) & $ip << @rdi ^ $buffer >> $buffer ^ +@r9 >> @r10 & @rsp & 7 | 0n13 << @rdx | $thread & @rdx ^ @rsp | $thread | $proc <= +@r10 + 0x10 >> @rbx << 0x6 & @rbx << @r11 >> @rdx >> @rbx ^ @r8 ^ 0x7 >> @r10 & @rsi & 0x7 | +@rdi << @r11 & $ip >> @r13 & @rdi)  { test_statement(0xCB7); } elsif (@rsi & 0y1100 ^ $proc >> $buffer ^ @r9 & @r11 ^ @rbx | @rsi & $ip & $buffer | @r10 & @r8 | 0xB | $ip))$buffer >> @r8 >> @rsi & @r8 >> +2 ^ @r9) { test_statement(0x215C);  // /* This is a comment   while  (0y1011 0y1011)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2087); }
$error$
$end$
2701
 if (@r12 + @rbx << @r11 << ~@rdi >> @rax >> 22 & @rdi >> ~@r9 >> $teb & 10 & +@r13 & $proc ^ $proc & -@rdx ^ @r9 >> @rsi ^ @rax ^ -@r9 ^ @rsp == @rax + 0x8 >> @r11 << 11 >> @rsp | @r11 << @rdx >> $thread | (@r9) >> @r13 & +@rsi)  { test_statement(0x12DC); } elsif (6 << @r13 >> 12 >> @rbx & @rbx >> 1 | $teb & @rdi & @rbp ^ $proc | @rsi & @r9 ^ @rbp >= 6 << @r13 >> 12 >> @rbx & @rbx >> 1 | $teb & @rdi & @rbp ^ $proc | @rsi & @r9 ^ @rbp) { test_statement(0x2539);  while  ($ip == $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2351);  /* This is a not closed comment  break;  if (11 > 11)  { test_statement(0x1865); } else { test_statement(0x605); }  /* This is a not closed comment  while  ($teb($teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($proc ! $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r9 ; }
$error$
$end$
2702
 if (@rsp ^ $proc & @rsi ^ @r10 >> @rdi ^ $thread != +0x0 << @rbp & @rsi << $ip ^ @rsp & @r9 >> @rsp & $teb ^ @rbx & @r10 & +0xE | @rdi)  { test_statement(0xC1A); } elsif ($proc << @rbx >> @r8 >> 0n16))$thread >> $teb) { test_statement(0xD41);  break; } elsif (@rsi & @rsi & $thread ^ $teb ^ 0x13(@rsi & @rsi & $thread ^ $teb ^ 0x13) { test_statement(0x1000); } elsif (--4 & @r8 ^ 14(@r12 | 0y100) { test_statement(0x2F3); } else { test_statement(0x112);  /* This is a not closed comment  // /* This is a comment  }
$error$
$end$
2703
 if (@rsp << @r8 << @r8 ^ $thread << @rbp & @rbx & $proc & $teb ^ $thread ^ @rsp | $teb << -@rdx >> ~4 | ~@rsi ^ 3 | @r9 & @rbp ^ @rbp | ($teb) | -@rax | 0n0 <= -(-$buffer) ^ ~~@r8 >> @rdx >> @r12 ^ @rbx >> @r8 ^ (10) & (+@rbp) | @r9 ^ @r10 >> @rax | $proc >> +@r13 & $teb & 0xC ^ $proc)  { test_statement(0x10E3); } else { test_statement(0x14F2); }
$error$
$end$
2704
 if (($teb) << 0n16 >> @r12 & $thread << 0x3 >> $thread | @rbp >> ~$proc >> $proc >< ($teb) << 0n16 >> @r12 & $thread << 0x3 >> $thread | @rbp >> ~$proc >> $proc)  { test_statement(0x1370); } else { test_statement(0x2503); }
$error$
$end$
2705
 if (@rdi << 0y1001 ^ @rbp >= @rdi + @rsi & @rbp << $buffer & @rdi & 0 & $thread)  { test_statement(0x1269);  break;  for (val = 10; @rbp != @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r13))@r11 | 0xF)  { test_statement(0x203F); } } else { test_statement(0xADA); }
$error$
$end$
2706
 if ($ip + @r9 << 7 >> +@r8 & $buffer << @r8 >> $proc >> (@r9) & $ip & @r11 & $ip != +0y11 >> $teb << @rdx)  { test_statement(0xBCC); } elsif (@rbx & @rax >= @rbx & @rax) { test_statement(0xB9E);  /* This is a not closed comment } elsif (@r12 & 0n11((0y1011 >> @r13 & @rsp | 0y1 & $proc | @r8) { test_statement(0x13AE); } elsif (@r9 == ~@r12 & $ip) { test_statement(0x139D); } elsif (@rbp >< @rax ^ $ip) { test_statement(0x1DD1); } elsif ($proc | $thread >< $buffer | $buffer) { test_statement(0x8C0);  break; } else { test_statement(0x118A);  if (@rbp ^ @rsp | @rbx | @r11 <> @rbp ^ @rax)  { test_statement(0x78C); }  This is a not opened comment */ }
$error$
$end$
2707
 if (@r12 + @r12 ! @rbx + @r9 << $proc >> $buffer << 0n1 >> @r12 & +@r10 | @rbx << @r10 >> @rbp >> 5 & @rax ^ @rsp & @r13 | -0n2 | 0x12 ^ @rsi)  { test_statement(0x13D2);  This is a not opened comment */ } elsif (@rbx >> @rax < 10 & -@r13 >> @r9) { test_statement(0x56D); } elsif (@r11 < 0y10011 | ~~@r9 ^ $proc) { test_statement(0x15C1);  This is a not opened comment */ } else { test_statement(0x1F83); }
$error$
$end$
2708
 if (@r13 << @r8 << $ip >> $thread << $ip & @rbx << @r9 & @r13 >> @rsp & @rsp & $ip == +@r12 >> $buffer ^ 0y10011 << @r8 >> @r8 >> @r9 | @r12 & (0xB) ^ @r13 & @rdx & $ip ^ @r9 & @rax ^ 0x7 ^ +@r13)  { test_statement(0x2398); } elsif ($proc ^ 0x1 >> 0x4 | $thread ! +@rsi ^ $teb ^ +$proc) { test_statement(0x13C9); }
$error$
$end$
2709
 if ($ip >> $ip << $proc & $proc << ~@r12 >> @r13 >> ($teb) & $proc >> $ip ^ $thread < $ip >> $ip << $proc & $proc << ~@r12 >> @r13 >> ($teb) & $proc >> $ip ^ $thread)  { test_statement(0x1E35); } elsif ($proc << @rdx >> $thread | @r13 & -$proc | @rdi ^ @r8))$proc << @rdx >> $thread | @r13 & -$proc | @rdi ^ @r8) { test_statement(0x1A9A); ;  // /* This is a comment   break;  /* This is a comment */ }
$error$
$end$
2710
 if (@rbp + @r8 << ~@r11 ^ @rdi))@rbp + @r8 << ~@r11 ^ @rdi)  { test_statement(0xF3D); }
$error$
$end$
2711
 if (@rsi + @r9 ^ $teb(@r12 + $proc | @rsp >> @rdi >> @r11 & @rsi)  { test_statement(0x647); } elsif (+21 << -$buffer & @r12 >> @rbp ! @rsi << @r8 >> @rbx >> @rsi & $buffer & @rsp) { test_statement(0x1B8E);  if (@rdi ^ @rdx | @r10 | $ip <> @rdi ^ @rdx | @r10 | $ip)  { test_statement(0xF13); } elsif ((@r9) | $buffer <> @rbp) { test_statement(0x18E1); } elsif (@rbx ; @rbx) { test_statement(0x1E46); } elsif ($proc >= $proc) { test_statement(0x1C18); } elsif ($teb <> @rsp) { test_statement(0x1855); } else { test_statement(0x2275); }  break;  // /* This is a comment  } elsif (0y10010 >> $buffer & @r9 & @rbp | @r8 & @rbp ^ $thread | $proc ^ $buffer | @rsp))@rax >> @r8 | @rbp | 0n15 ^ @r11) { test_statement(0x1E83); } else { test_statement(0x447);  if ($proc(0x7)  { test_statement(0x1FAE); }  for (val = 10; 0n14 > @rbp | 0x11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2712
 if (~@r10 + @rdx ^ @r12 << @r8 >> @rsi >> +@rsi & $ip & 0n0 ^ @rsp >> $teb ^ --~5 & ~-@rsp ^ @r13 | +0x7 >> +@r12 ^ 0n6 >> $thread ^ @rdi | --@rax & 0xB ^ $teb ^ @rbp ^ 0xB = 0y11 >> @r13 << 0n19 >> @rbx >> 0x1 | 0y1000 & $buffer & +-$thread ^ 0y1101 >> @r13 | $buffer >> @rbx & $ip ^ @r11 & (0y0))  { test_statement(0x6B1);  break; } else { test_statement(0x56D);  /* This is a comment */  This is a not opened comment */ }
$error$
$end$
2713
 if (@r11 + @r12 >> @rbx >> $buffer >> ~@r12 & 23 << -@rbp >> 0xC & (@r9) < ~$thread << @r11)  { test_statement(0x1335);  /* This is a not closed comment  This is a not opened comment */  while  (-@rax | 2)@rdi | 0n5)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xA05); }
$error$
$end$
2714
 if (@rax + @r10 << -@rsp >> @rbx >> @rsi & @rbx << $proc >= @rax + @r10 << -@rsp >> @rbx >> @rsi & @rbx << $proc)  { test_statement(0x203D);  break;  break;  while  ($buffer(@rbx | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; @rax = @rsp ; }
$error$
$end$
2715
 if (@r10 + -($teb) << $proc << @r10 & @r12 << -16 >> 0x7 >> ~@r8 ^ 0y1001 & @r10 | 0y101 >> @rdx >> 22 ^ @r11 & 0xB & 7 ^ @r9 & $proc | ~@rsi & 0n4 <= @r9 + @r13 >> @r11 >> $ip >> @r12 & $ip << @r10 & $thread)  { test_statement(0x1C73); } elsif (@rax << @rbx >> @r10 ^ $thread & @rdi & $buffer ^ 0x12 ^ @rsp ; @rax << @rbx >> @r10 ^ $thread & @rdi & $buffer ^ 0x12 ^ @rsp) { test_statement(0x2370); }
$error$
$end$
2716
 if ($proc + @rsi << 4 << @r10 | @rbx << (@r10) >> ~$teb & @r9 >> @r11 | @r10 >> @rbp & @rbp != $proc + @rsi << 4 << @r10 | @rbx << (@r10) >> ~$teb & @r9 >> @r11 | @r10 >> @rbp & @rbp)  { test_statement(0xA23);  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
2717
 if (0x2 + @rax & 0x11 & @r11 ^ 0 >> @rbx >> @r9 & $buffer & @rsp & 0y110 ^ $teb >> @rdx & @rsp ^ @r12(0x2 + @rax & 0x11 & @r11 ^ 0 >> @rbx >> @r9 & $buffer & @rsp & 0y110 ^ $teb >> @rdx & @rsp ^ @r12)  { test_statement(0xBA); } elsif ($ip << -0n8 >> @rsi >> 0xC & 0xE >> @rbx & @rdi & 0xA ^ -@r11 & @rdx & ~@rdx +@r13 << $proc & @rbx >> @r9 ^ @r11 & @r12) { test_statement(0x1510); } else { test_statement(0x222C);  /* This is a not closed comment }
$error$
$end$
2718
 if (@r9 << +@r9 >> @r8 >> @r8 | @rdx ^ @r8 >> $thread & @r13 | -4 = @rdx & $proc << @r10 & $teb >> @r11 & @r9 & $proc)  { test_statement(0x1BA3);  for (val = 10; 0x1 ^ @rsi ^ @rdx | 0x13 >= 0n19 ^ $thread ^ @r11 | 0y1101;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx < -@r10) ; } else { test_statement(0x1693); }
$error$
$end$
2719
 if (@rdx << @r13 | $buffer << $teb >> @rsi >> @rbp == ~@r10 + @rdx << @rdi << ~@rsi & @rsi << $proc ^ @r9 >> @r12 >> $ip ^ 5 >> @r13 ^ @rbx ^ @r13)  { test_statement(0xA60); val = @rbp >> @r12 & $buffer ^ $buffer ^ ($ip) ; } else { test_statement(0x8E0); }
$error$
$end$
2720
 if ($buffer + $thread >> @rbp & @rsp >> @r11 ; @r10 ^ @r13 >> @rsi & @rbx)  { test_statement(0x1620);  /* This is a not closed comment ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n5 < @rdx) ;  /* This is a comment */ } elsif (@rsi << -$buffer >> $teb >> @rax <= 0n19 << @rsi >> @r9 & @rsi) { test_statement(0x1730); } elsif ($proc >> @r9 ^ 0n18 ^ ($ip) ^ $ip < $proc >> @r9 ^ 0n18 ^ ($ip) ^ $ip) { test_statement(0x1144); } elsif (@r9 & @r10 ^ 21 | 0y1000 ^ 0x12(@r9 & @r10 ^ 21 | 0y1000 ^ 0x12) { test_statement(0x17EB); } else { test_statement(0x2116); }
$error$
$end$
2721
 if ($ip << -@rsi << $buffer & @r13 >> @r11 >> @rsi & @rdi >> $ip & 0n10 & @rbp | -@r8 << @r11 & @rax >> @r12 ^ $proc | @rax ^ @r10 | $buffer >= $ip << -@rsi << $buffer & @r13 >> @r11 >> @rsi & @rdi >> $ip & 0n10 & @rbp | -@r8 << @r11 & @rax >> @r12 ^ $proc | @rax ^ @r10 | $buffer)  { test_statement(0x7D8);  if (0n4 & @r12 ^ @rbx ^ +$ip | @r12 ^ 0x13 | @rdx @r12 ^ $ip ^ +0n6 | @rbp | $buffer)  { test_statement(0x1DBE); } elsif (@rdx ^ @r11 ; @rdx ^ @r11) { test_statement(0xC5B); } elsif (@r13 | (@rax) <> @r13 | (@rax)) { test_statement(0x88); } elsif (2((2) { test_statement(0x1C6E); } else { test_statement(0x1AAD); } @rax = @r11 & 0 ^ 0y110 ^ @r13 | -@r11 ^ +$buffer ; } elsif (@r8 | @rsi ^ $buffer | -+$buffer | $buffer ^ @rax | @r10 | $teb <= $ip >> @rsp & @rbx >> @rdi ^ 4 & $teb | @rdx & @rsi & +~-$thread ^ @rdx & @rbx) { test_statement(0x207D); }
$error$
$end$
2722
 if ($proc & @rbx >> @rbp & +@r12 >> $ip ^ $thread | @rbp << @rsp >> @r9 >> $thread & +$buffer ^ +@r10 >> @rbx ^ ~~@r13 & ~@rax <> @rsi << 0n16)  { test_statement(0x24EC); ; } elsif ($buffer >> @rsi <> 13 << $buffer & @r8 ^ @rdx >> @r13 | @r12 >> 0y10001 | $teb | $thread ^ @rax | @r12 | @r9) { test_statement(0x21D8); } else { test_statement(0x3FA); ;  // /* This is a comment  }
$error$
$end$
2723
 if ($thread >> @r9 << $proc ^ $thread & 14 = ($thread) & 0x6 >> @rbx | @rbp | $buffer >> $ip & @r13 & $thread ^ @rdi & @r13 | @r10 ^ $ip ^ @rdx | @r10 ^ @rsp)  { test_statement(0x210E); } elsif (@rdx ^ @rsi == @rsp << $thread & 0y1100 >> 0n11 ^ $buffer >> @rdi) { test_statement(0x8A4); } elsif (@rbx >> -@r9 & +$teb & @rdi | $buffer & @rsi ; @rbx >> @r8 & $proc | (@r13) & @rax | @r8) { test_statement(0x1349); } elsif (@rdi | +@r13))@rdi | +@r13) { test_statement(0x232F); } elsif (@r11 | $thread | $thread != @r11 | $thread | $thread) { test_statement(0x111F); } elsif (@r9 | $buffer < $ip | ~@r13) { test_statement(0xD04); }
$error$
$end$
2724
 if ($ip + @rbx << @r8 << $thread >> ~@r12 >> @rbp >> $ip | $ip >> $proc | ~+-$buffer | @rbp | ++@r9 ^ $ip | 0y1111 $ip + @rbx << @r8 << $thread >> ~@r12 >> @rbp >> $ip | $ip >> $proc | ~+-$buffer | @rbp | ++@r9 ^ $ip | 0y1111)  { test_statement(0x1F6C); ; }
$error$
$end$
2725
 if (@r12 + @rdx >> @rdx << $proc & 0y1010 & @rbp >> $teb | 0n9 >> @r13 >> @rdi ^ +@rax >> @r10 ^ $teb & @r9 <= 0n3 + @rbx >> +5 << $ip ^ @r10 >> @rdi >> @rdx & @r10 >> @r12)  { test_statement(0x10D8); @rax = @rax & @rsp ^ @r12 & -@rdi ^ +@rsi ^ @rdi | @rdx ^ @rsp ^ @r8 | @rbx | @r12 ;  /* This is a not closed comment  /* This is a not closed comment ; } elsif (-5 << @r8 >> @rdi >> 0x10 | @rbp >> @r10 ^ $proc < -5 << @r8 >> @rdi >> 0x10 | @rbp >> @r10 ^ $proc) { test_statement(0x234C);  /* This is a comment */  for (val = 10; @rbp | 5 ; $buffer | @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  This is a not opened comment */  /* This is a not closed comment } else { test_statement(0xC62); }
$error$
$end$
2726
 if (@rax + @r9 >> @r10 >> @rsi & (@r9) >> @rdi & 0x12 & ($ip) & 0xC != @rdi << 0x9 ^ +($buffer) & @rax ^ @rsi)  { test_statement(0x1D86);  // /* This is a comment  } else { test_statement(0xF75); }
$error$
$end$
2727
 if (@rbp << 0n18 >> -+~+@rbp >> 0y0 >> @r9 & +(0y1000) >> @rdi <= @rbp << 0n18 >> -+~+@rbp >> 0y0 >> @r9 & +(0y1000) >> @rdi)  { test_statement(0x19C1);  for (val = 10; @r10 | $ip | ~$proc | 0x11 = @r10 | $ip | ~$proc | 0x11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2728
 if ($teb + @r8 >> $proc & ~@rdi << 0y1010 & @r10 >> @rsp ^ $buffer == @rsp | -@r12 << @r10)  { test_statement(0x1448);  /* This is a comment */ val = $buffer & @rsi ^ @r11 ^ @rax ; } elsif (2 << @r8 >> @r9 | @r13 & $teb & ~@rdx | 0y1011 & -0xA | @r10 | @rsi | $teb >< @rbp << @r13) { test_statement(0x19C4);  break; } elsif ($buffer >> $ip ^ @rdi | @rdi & $buffer | @rbx ^ $buffer ! $thread >> @r11 & +$ip | @rbx | @rdi ^ @r8 | (@r12)) { test_statement(0x2065); } elsif (0y10001 & @rdx | @r10 ^ 2 | 14 ! 0xB & -@rdi ^ @r11 ^ 7 | (0y111) | $proc | @rsp) { test_statement(0x1D8A);  // /* This is a comment  } else { test_statement(0x551);  while  (@r11 ^ @r11 | @rdi | +@r11))-@rbp ^ ~+@rsp | $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2729
 if ($teb + ~@r12 << @rbx << @rax & @r11 << @r11 >> @r10 & @r12 >> @rbx ^ $teb >> @rax >> $ip & $thread ^ $ip >> -0x12 >< 0y110 + 0)  { test_statement(0x27F); } elsif (@rdi >> @rbp | 0xF & @rax & $thread | @rdx & $teb ^ +0x5 ^ @rdi | 12 ^ (-@rdi) <> 0y1 >> $buffer ^ @r12 | 0x1 | -@r13 & $buffer | @r8 ^ 0y10001) { test_statement(0x2520);  This is a not opened comment */ } elsif ($thread ^ $ip <= $thread >> -@rdx) { test_statement(0x24E5);  This is a not opened comment */  /* This is a not closed comment }
$error$
$end$
2730
 if (0n18 << @rsi >> -@r11 | $buffer << @r9 & @rsp & @r12 & @rdi | @r10 >> @r12 | @r11 & @r10 = $proc & -$ip << @r13 >> 23 & @r9 >> -@rsi | 0y111 << $proc & @r9 >> ~@rbx ^ (+$ip) >> @rbx & 0 ^ $teb)  { test_statement(0x2513);  while  (@rbp >< @rdi & @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r10 << (@r11) <= @rbx << @r12 & @r12 >> 0y1110 | 0y10 >> +@r12 ^ $proc ^ @rdx ^ $thread) { test_statement(0x1712); val = $buffer & @rdi ; val = @rdi ;  // /* This is a comment  } elsif ($proc >> @r9 | 0n7 & @r13))@rsp >> @rax | ~@rdx & @rbx | $ip | @r10 | $buffer) { test_statement(0x9BF);  /* This is a not closed comment  /* This is a not closed comment  while  (@rbx $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } else { test_statement(0x373); }
$error$
$end$
2731
 if ($ip >> @r11 << @r9 & @rsp & @r8 >> $ip ^ ~~-0y110 << -$proc & @rsi >> @rbx ^ $teb >> +$teb < ~@rdx + @rdi << 0x7 << (0x11) >> (@rsp) << $teb & @rbx & @r10 ^ @r12 >> 0y1101 ^ @rax ^ ($thread) & -@r9 ^ @r12 ^ @rdi)  { test_statement(0x11B1);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip ^ @rax | (@r13) | $thread((23 ^ @rbx ^ @rbx) ;  /* This is a not closed comment }
$error$
$end$
2732
 if (0xD << $ip << ~@rax & 0y11 << @r13 >> @rdx & @rdi >> 0x11 ^ @r8 ^ @r9 >> 0xA & $proc & 0n19 = 0n10 + @rax >> -@rdi ^ @r11 << ((+0n18)) >> @r10 & @r11 & $thread | 0n11 << @rax >> @rbx >> $ip)  { test_statement(0x991);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ^ @rbx <= @rsi ^ $ip ^ (@r8)) ; } elsif ($buffer << @r11 & @r10 ^ @r9 >> $teb & @r11 & @r10 ^ @r10(($thread >> @r8 & $teb >> @r11 ^ (0x11) | @r10 >> @r9 & @r11 & @r13) { test_statement(0x16DF);  /* This is a comment */ @rax = 0n19 ;  // /* This is a comment   This is a not opened comment */ } elsif (0n1 >> @r9 & @r10 = @r12 ^ @r11 | $ip & 0n16 | $teb ^ $buffer | 0x1 | $proc) { test_statement(0x851); }
$error$
$end$
2733
 if (@rbp << ~$buffer >> @r13 << @rbp & @r8 >> $proc >> @rdx & 22 & 0x1 & $ip ^ +~0n11 << (@rbx) <= $thread + 0y10001 & @rbp >> @r11 >> $buffer ^ (@r8) ^ $ip >> $teb ^ @rbp & @rax ^ 0y10001 ^ 0xA)  { test_statement(0x96E); } elsif ($teb << @rdi ^ @rbx ^ @rbp > $teb >> @rbp | $thread >> @rdi & @rbp & @r9 ^ +$thread | 0x2 | $buffer ^ @rdi) { test_statement(0x62E); }
$error$
$end$
2734
 if (@r9 + @rdi | @r12 >> ($proc) >> +@rdi & $proc >> $thread > @r9 + @rdi | @r12 >> ($proc) >> +@rdi & $proc >> $thread)  { test_statement(0x11D9);  // /* This is a comment  } elsif (0n1 & ~@r8 >> 0y10001 & 0n3 & +$buffer < +@rsp << @r12 & @rbx ^ $buffer ^ @rbp & $thread) { test_statement(0x1BF4); } else { test_statement(0x1E26); }
$error$
$end$
2735
 if (@r8 != @rsp << @r13 << $buffer >> -@rdx & 11 << @rsp >> @r12 & $thread >> @r8 & @r10)  { test_statement(0x60F); } else { test_statement(0xAE8); }
$error$
$end$
2736
 if (@r8 << @r12 >> @rsi >> ~+@rsi ^ @rdi << @r12 >> (@rbp) >> @r8 & $thread >> @r12 & @rsp & $ip((-~0n16 << @rbx << @rdi ^ @rsp << @rbp ^ @r11 & 0x12 & 0y10010 | $thread << $thread >> $buffer ^ @rdx >> @rax)  { test_statement(0x14BF); @rax = 0x0 ^ (@rax) & @r13 | @rdi & @r9 ^ ~$proc | @rbp ^ @r13 ; } else { test_statement(0x22A9); }
$error$
$end$
2737
 if (@r13 + @r9 << +0n6 << (0y1010) >> @r9 & $teb & @r13 >> -$teb ^ 0y101 >> @r11 >> @rdi ^ +10 >> @r9 & @rdx | (-@r12) | $proc & @r10 & @rbp ^ @r9 | @r8 & $teb ^ $buffer ^ @rdx | 0x12 ^ +@rbx == @rsp + @r8 >> $buffer ^ 0xD << @rdi & $teb ^ @r9)  { test_statement(0x1153);  if (@rsi & @rax <= 0y0 & $teb)  { test_statement(0x17F2); } else { test_statement(0x108F); } } elsif (0y1111 << $teb >> @r11 >> @r10 ^ -@rsp & 0y1101 & $teb ! $teb & @rdi >> @rsp ^ 2 >> @rsi ^ @r9 & @r9 | $ip) { test_statement(0x1127); } else { test_statement(0x2564); }
$error$
$end$
2738
 if ($teb + @rax >> $teb ^ @r10 >> @r12 & @rsp >> @rdx ^ +@r9 >> 0y1110 >< $teb << 0y10011 << @rdx & @rsp)  { test_statement(0x1AD4); } else { test_statement(0x254A); ; }
$error$
$end$
2739
 if (@rbx + $teb >> 0n5 >> --16 & @rsi << 0n4 >> ($teb) & @rbx >> 0y1011 ^ @rax << @r13 | @r11 << @r11 ^ @rbx & $buffer & $buffer ^ $proc | $ip >> $teb & (~@r12) | ~@rdi ^ -~$thread | @r12 ^ $ip)@r12 << 0y1100 << +@r11 >> +~(@r9) & @r9 >> -+@r10 & ~@r9 & $buffer | @rdx & @rbx >> @rsi & $buffer & 0n18)  { test_statement(0x96C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 & $thread(@rdx & @r13 ^ $teb | $buffer ^ @rbx) ;  break; } elsif ($thread << $buffer = @r9 << 0n0 | ~$thread | ((0y100)) & @rax) { test_statement(0x141);  /* This is a not closed comment  if (@r11 | ~@r10))@r11 | ~@r10)  { test_statement(0x1A87); } elsif (0n18 > $buffer) { test_statement(0x238); } elsif (21 > @rbx) { test_statement(0xC50); } elsif (@rdx >= +0n17) { test_statement(0x1247); }  /* This is a comment */ }
$error$
$end$
2740
 if (@rdi + @rsp >> @r11 >> @rbp & @r13 >> 0y1011 | $ip >> @rax >> $ip & @rbp >> $proc & @rdi & $proc ^ @r10 & @rax | @rbp | $thread >< @rdi + @rsp >> @r11 >> @rbp & @r13 >> 0y1011 | $ip >> @rax >> $ip & @rbp >> $proc & @rdi & $proc ^ @r10 & @rax | @rbp | $thread)  { test_statement(0xFB8); } else { test_statement(0x2332); }
$error$
$end$
2741
 if (--0n5 >> @r8 ^ +@r12 & 0x10 ^ @rdx >> $thread & @rbx & @r8 ^ @r10 & @rsp ^ 0 ^ @rdi | 0y100 ^ @r10 & -@rbx ^ @rdi ^ @rdi ^ $thread ! $ip << @r10 >> 0n7 << -~$thread ^ 0n12 << @rsp)  { test_statement(0xB9B);  // /* This is a comment  } elsif ((@r13) >> @rbx ^ @rsi >> $teb((@r9 << -@rdx >> $thread >> 0n7) { test_statement(0x67C); @rax = 17 & @rdi | @r12 ^ @r10 | -0x13 ;  /* This is a not closed comment }
$error$
$end$
2742
 if (@rsi + @rdx(@rsi + @rdx)  { test_statement(0x1495); }
$error$
$end$
2743
 if (@rax << $buffer >> $proc << @r10 & ~@r8 << $teb & @r9 & @rdx | @r9 << ~0x0 & 0xD | 6 >> 0xA & ~@r10 & @r11 | @rax & @rsp | $buffer ^ $teb | $thread != 0y1001 >> $teb << @r11 & @rbp << +@r13 | 1 << (@r13) & @r12 >> $thread & @rbx & 23)  { test_statement(0xADB); } else { test_statement(0x18EB); ; }
$error$
$end$
2744
 if (~$thread + @rdx << 23 << @r12 >> @r13 >> 0n16 >> @r10 & (+@rbp) >> $proc ; ~$thread + @rdx << 23 << @r12 >> @r13 >> 0n16 >> @r10 & (+@rbp) >> $proc)  { test_statement(0x250A); } else { test_statement(0x1740);  /* This is a not closed comment }
$error$
$end$
2745
 if ($proc + @r11 > $proc + @r11)  { test_statement(0xA3A); } elsif (~@rbp & 0n11 & ~0n9 & 14 = ~@rbp & 0n11 & ~0n9 & 14) { test_statement(0x990); } elsif (~@r13 >> @r13 & @r10 & @rbp | @rax ^ $proc != 0x11 >> -@rdx) { test_statement(0x1286);  break;  for (val = 11; 0n2 <= 0n2;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } else { test_statement(0xC9F);  // /* This is a comment  }
$error$
$end$
2746
 if (@r12 & (@rsi) & @r11 >> @r12 & $proc | $thread & 14 <= 0xC & @rdi << (+@r9) >> @r12)  { test_statement(0xBED); } else { test_statement(0x16D8);  break; @rax = @r12 | @r11 ; }
$error$
$end$
2747
 if (@rbx + 0y111 & 0n2 >> $thread >> @rbp & $thread | @r13 ^ -@r12 & (@rsi) & @rdi | @r13 ^ @rbp & @rsi > 11 << 0x12 << 0n17 ^ 0y1110 << @rbp & 16 >> @rdx & @r8 & +@r13)  { test_statement(0x1D2E); } elsif (@r12 & $proc >> @r11 ^ @rbx >> @r13 & $ip > @r8 << @r11 | 0n12 & @rdi & $teb ^ @rbp | @rbx & @r8 | @rdx) { test_statement(0xC54); } elsif (@r13 >> $buffer & $ip ^ $buffer & @rdx | (0x2) & $buffer ; @r13 >> $buffer & $ip ^ $buffer & @rdx | (0x2) & $buffer) { test_statement(0x194F); }
$error$
$end$
2748
 if (@rax + $thread & 0n6 >> @rsi & 0n1 ^ @rdx ^ (@rdi) >> 0n3 & @rsp)@rsp | ~@r13 << @r8)  { test_statement(0x7FC);  /* This is a not closed comment  break; val = @r8 | @r10 | 0n16 ; } else { test_statement(0x14FF); }
$error$
$end$
2749
 if ($proc + 0n15 >> 0n7 << $buffer & @rsi >> @r12 >> (~-@r11) & @r9 ^ ~$thread << @rsp >> -@rbx >> $proc & $thread & @rbx & +@r10 | $proc >> $thread 0xF + $teb << 0y10000 << @rdi >> @r12 << $proc | @r8 << $ip & (@rsp) >> -@rsi ^ @r12 >> @rax & @r13 & @r12)  { test_statement(0x1175); }
$error$
$end$
2750
 if ((@rsp) << 0y1010 << -+@rsp & 0y0 >> @r13 & @rsi >> 20)(@rsp) << 0y1010 << -+@rsp & 0y0 >> @r13 & @rsi >> 20)  { test_statement(0x6C);  This is a not opened comment */  break; } elsif (0n1 << $ip >> @r11 ^ $proc | 0n2 >> 0x5 & @rsp & @r10 | 0y0 & @r9 | @r10 ^ -0xA | @r12 | @rdx ; 0n1 << $ip >> @r11 ^ $proc | 0n2 >> 0x5 & @rsp & @r10 | 0y0 & @r9 | @r10 ^ -0xA | @r12 | @rdx) { test_statement(0x6AC); } elsif ($thread >> +@r9 & @r11 < 0y1001 ^ $ip ^ $teb | @r9 & +$ip) { test_statement(0x5CF); } else { test_statement(0x1C5D); }
$error$
$end$
2751
 if (@rbp + @r10 >> 0n19 << $ip & @rsi >> @rsi & $buffer & @r8 & $proc ^ @r9 | @r11 << @rsp & $buffer & @rbp | +@r8 & @rdx & @r8 @rbp + @r10 >> 0n19 << $ip & @rsi >> @rsi & $buffer & @r8 & $proc ^ @r9 | @r11 << @rsp & $buffer & @rbp | +@r8 & @rdx & @r8)  { test_statement(0x171F); } elsif (@rsp >> $ip & 0n10 | @rdx >> +0n16 ^ 17)+@rdx << $teb & $thread ^ (@rdx) >> @rsi & @rax & @r12 ^ $ip & @rsi) { test_statement(0x786);  if (-@rsp ^ $teb((@r12 ^ -+@rbx | 0n19)  { test_statement(0x2459); } else { test_statement(0x24B5); }  if (@rsp | @rsp)@r9)  { test_statement(0x17D2); } }
$error$
$end$
2752
 if (4 << @rax & @rbx << 4 & @rsp & ~@rsp & $ip | @rax(+0x6 << @rdx << $buffer ^ @r13 << @rbp | @rax >> ~@rdx)  { test_statement(0x948); } elsif (@r8 & 0x7 >> 0xA > @rbp >> $ip >> (0y1101) & ~+@rbx >> @r8 & (17) & @rsi) { test_statement(0x1A27);  while  (+@r13 | $ip(+@r13 | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif (@rbp >> @r8 ^ ~~@rax & @r10 | @r8 & 11 | +0x8 ^ ~$ip | $teb ; $ip & (@r9) ^ ~@rsi ^ @rsp | @r11 ^ $thread ^ +(@r12) | @r8 ^ @rdx | @rdi) { test_statement(0x5C7); ;  /* This is a not closed comment  break; } else { test_statement(0x23B6); }
$error$
$end$
2753
 if (@r10 + 0n12 >> (@r10) << $teb >> @rdi >> @r11 & 15 >> 0n19 >> -@r8 ^ ~$ip >> $proc ^ $ip ^ $buffer ^ 0y10000 | @r11 >> @r13 >> @rdx & $thread >> 0n10 ^ @r11 & 0x7 & 0y10010 ^ @r11 | @rax >> (@rsi) & @rsp < @r12 >> @rbp ^ (@r13) << $teb >> 11 & @r9 >> $teb & @r11 & ~$teb)  { test_statement(0x16E7); } elsif ($teb >> $proc >> @rdx & $teb >> @r12 & $teb <> $teb >> $proc >> @rdx & $teb >> @r12 & $teb) { test_statement(0xB50); } elsif (0n2 >> @r9 & @rax ^ @r9 & @r11 | @r10 & @rax)@r8 >> @r12 & $proc & @r8 ^ ($buffer)) { test_statement(0x1906);  break; } elsif (@r11 ^ $ip ^ @r12 | @r9 ^ $buffer ! @r11 ^ $ip ^ @r12 | @r9 ^ $buffer) { test_statement(0x249B); @rax = 0n2 ;  This is a not opened comment */ }
$error$
$end$
2754
 if (4 & @rbp << $teb >> -$proc & 0n16 ^ @r8 << @rax >> @rsp >> @rbx & 16 ^ @r8 >> @r13 & @r8 != 4 & @rbp << $teb >> -$proc & 0n16 ^ @r8 << @rax >> @rsp >> @rbx & 16 ^ @r8 >> @r13 & @r8)  { test_statement(0x8CB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ^ 0y1101 | ~@r12 ^ $thread == @rbp ^ @r12 ^ 22) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 ^ @r12 | @r10 | @rax != @r13 ^ @rsi | $proc) ; } elsif (0x12 << --@r12 & @r10 >> @rdx | @r8 & @rsi(@rdx << ($teb) >> @rdx >> 3 & @rbp | ~7 >> +@r12) { test_statement(0x710);  /* This is a comment */ } elsif (0xF <= @rbx >> 0n15 & @rsp & 1 ^ (0n16)) { test_statement(0x2192);  This is a not opened comment */ }
$error$
$end$
2755
 if (@r8 + @rbx | @r12 & 0y111 >> @rdx & 0y10011 ^ $ip & 5 | @r13 & 0n2 & 7 ^ (@rsp) != @rbx ^ 0xF << @rax | @rdi << 0xE >> (@rsi) >> @r10 | 0n13 >> 0y1 | @r11 & @r13)  { test_statement(0x1211); @rax = -+0y1111 >> 0n1 & @r8 & (@r13) ^ @r10 & $buffer ^ 0n17 ; } elsif (@rdx >> @r10 & @rax >> @rbp | @r9 >> $proc & @rdx ^ 0n8 & @rdi >= 0x10 | @rsi >> ~~@rsi & @rdi & @r12 | @r11 ^ @rsp ^ @rdx) { test_statement(0x17C7); }
$error$
$end$
2756
 if ($buffer << @r10 >> +$buffer >> @rsi & @r12 & @r8 ^ $proc << @r13 & $proc >> $ip | $teb << $ip >> -@rdx & $buffer >> 1 ^ @rsi >> @r9 ^ @r8 @rdi | @rsi << 0xF)  { test_statement(0x511);  /* This is a not closed comment  if (@rbx ^ @r10 < @rbx | -@rbp)  { test_statement(0x1B20); } else { test_statement(0x1EF8); } }
$error$
$end$
2757
 if (+$proc | @r8 << +@rbx & +($teb) & @rax & @r12 | $proc ^ (14) ^ @r8 | @rdx ^ @rsi +$proc | @r8 << +@rbx & +($teb) & @rax & @r12 | $proc ^ (14) ^ @r8 | @rdx ^ @rsi)  { test_statement(0x665); } elsif (~$buffer ^ ++(@rdx) >> +$thread & @r10 ^ @rsi & 0y10010 != ~$buffer ^ ++(@rdx) >> +$thread & @r10 ^ @rsi & 0y10010) { test_statement(0x189E); ; } elsif (@rax >> @rbp < @rax >> @rbp) { test_statement(0x8CA); } else { test_statement(0x1866);  /* This is a comment */ }
$error$
$end$
2758
 if (@rax + @rdx << $ip >> +$thread << @r11 >> @rdi >> @rbp))14 + @r9 << $proc >> -@r9 & @rax | (@rsp))  { test_statement(0x18EB); } else { test_statement(0x8F); }
$error$
$end$
2759
 if (0y1100 & $ip >> $buffer ^ $proc >> @r11 >> $thread ^ +$teb & $ip & 0n6 +1 + @r12 << @r8 << @r13 >> @r12 << $buffer >> @rdi ^ @rbx << @r12 | (@rbx) << 17 >> @rbp >> @rsp & @rbx >> @r12 ^ 17 ^ $proc)  { test_statement(0x2059);  // /* This is a comment  @rax = $buffer ^ +@r13 ^ @rsp ; } else { test_statement(0xDB9);  if (-@rsp | $buffer | @r12 >< @r11 ^ @rdx | @rsp | -@r10)  { test_statement(0xAC5); } else { test_statement(0xC84); }  while  (@r11 == @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
2760
 if (@rsi + +@rsi ^ @rbp >> $proc >> @r8(@rsi + +@rsi ^ @rbp >> $proc >> @r8)  { test_statement(0x235F); } else { test_statement(0x1AD);  break; ;  break; }
$error$
$end$
2761
 if (@r8 + $ip << 0xF << @r12 == @rdx + @r9 << @r9 >> $teb & $buffer << @rdi >> $ip | @rbp >> $ip & @r13)  { test_statement(0x9FD); } elsif ($buffer << @r8 >> @r10 | $proc >> @r9 | 0n18 & @r9 ^ @rax ^ @rsi = $buffer << @r8 >> @r10 | $proc >> @r9 | 0n18 & @r9 ^ @rax ^ @rsi) { test_statement(0x2491); } else { test_statement(0x18D7); }
$error$
$end$
2762
 if (@r11 + @r13 >> $teb & 0x1 << @rdi & $teb >> $ip ^ $buffer | @r10 >> 0n0 >> @rsi ^ $ip & 0n19 & $buffer ^ @rdx(@r11 + @r13 >> $teb & 0x1 << @rdi & $teb >> $ip ^ $buffer | @r10 >> 0n0 >> @rsi ^ $ip & 0n19 & $buffer ^ @rdx)  { test_statement(0xC75); } elsif (+@rdi << (0n15) >> 10 >> @r12 & $thread ^ ($ip) >> $teb ! +@rdi << (0n15) >> 10 >> @r12 & $thread ^ ($ip) >> $teb) { test_statement(0x13F4); ; } else { test_statement(0xCEA);  if ($teb ^ @rbx ! @r11 ^ @r9)  { test_statement(0xDB0); } }
$error$
$end$
2763
 if ($ip + $thread << @r10 << $proc >> @r12 >> @r10 ; -@rsp << $buffer)  { test_statement(0x3EA);  /* This is a comment */ ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@rdx = @r11) ;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer ! $proc) ;  /* This is a not closed comment  // /* This is a comment  } else { test_statement(0xBFA); }
$error$
$end$
2764
 if (0y10010 & @rdx >> 0x0 > 0y10010 & @rdx >> 0x0)  { test_statement(0x1F0B);  break;  for (; 0n16 ^ $proc > $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xEBC);  This is a not opened comment */ }
$error$
$end$
2765
 if (-13 + +0x13 << @rsi << @r8 >> -@rsi & 0n1 >> @rbp >> ~$buffer & $teb >> $ip & @rbx((@rsi)  { test_statement(0x20B7);  // /* This is a comment  }
$error$
$end$
2766
 if ($buffer >> $teb << $buffer >> +@rsp & 0y1110 << @r13 & (-$buffer) & (@r12))@r12 | 0y101 >> @rbp >> $teb | @rdx | $proc ^ $ip ^ 0n3 | 0x2 | $ip | @rsi)  { test_statement(0xD0C);  for (val = 10; $buffer & ($thread) | $teb > 0x1 | @r8 ^ $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r10 & @rbp ^ @r12 ^ $buffer | 4 ^ $teb ;  /* This is a not closed comment  This is a not opened comment */ } elsif (@r11 << @r8 >> +$proc | @rdx ^ (@rdi) & @r9 ^ @r11 ^ @r8)@r11 << @r8 >> +$proc | @rdx ^ (@rdi) & @r9 ^ @r11 ^ @r8) { test_statement(0xE3E);  This is a not opened comment */  break; @rax = @rsi ; } elsif (@rbx >> @rdx & -+0y10000 & 4 ^ 0n16 & 0y1110 | $ip & $proc))@rbx >> @rdx & -+0y10000 & 4 ^ 0n16 & 0y1110 | $ip & $proc) { test_statement(0x25FC); } elsif ($ip ^ +@r11 | $thread | @r11 > $ip ^ +@r11 | $thread | @r11) { test_statement(0x3D1);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@rbp) <> (@rbp)) ;  for (val = 10; @r10((@r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   if (~@rax(~@rax)  { test_statement(0x1AF5); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi <= @r9) ; }
$error$
$end$
2767
 if (@r12 << $teb >> $thread >> $teb >> ~-@rbp & @r12 & @rbp >> @rdi ^ @r13 >> 0y1101 & @r12 & $thread & @rbx ^ @rsi ^ 0n11 & +-~@r9 | $thread & @rsi ^ @r9 & ~(@r9) | @rsi >> @rsi ^ @rsp & ~@rsp | @r12 <> @rdi + $thread ^ $teb >> @r11 >> @rdx | @r9 << @r13 >> @rdx >> 0y10001 & @rax >> @r9 & @rdi & +$thread | @rbx >> @r12 & @r11 & @r13)  { test_statement(0x1F4C);  This is a not opened comment */  break;  break; } elsif (+0n13 & 0y11 >> @r13))+0n13 & 0y11 >> @r13) { test_statement(0x24A8); } elsif (@rdx ^ 0x8 | $ip ^ (@rax) ^ 0x9 | $buffer(($teb >> $teb & @rsi ^ $teb ^ @rsp | @rbp & @rdi ^ @r10 ^ @r11) { test_statement(0xD76); }
$error$
$end$
2768
 if (~0y100 >> $thread << @rax | @rsi << $teb > ~0y100 >> $thread << @rax | @rsi << $teb)  { test_statement(0x2113);  while  (@rdi | ~$buffer | $buffer > @r8 & $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x1822);  /* This is a comment */  while  (@rsi | $ip ! @rsi | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = (-@rbp) | @rsp ; }
$error$
$end$
2769
 if ($teb << @rdi & @r10 << @r13 ^ @rsi >> $teb & @rbx ^ $ip ^ +@r11 ^ @rdx | @r8 >= $teb << @rdi & @r10 << @r13 ^ @rsi >> $teb & @rbx ^ $ip ^ +@r11 ^ @rdx | @r8)  { test_statement(0x1044);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@r12 | @rsi | -$ip < 0x2 ^ $thread) ; } else { test_statement(0x2E1); }
$error$
$end$
2770
 if (0y10010 + @r9 | @r8 << $buffer >> @rsi <> 0y101 + @r12 ^ @r10 >> +-0x6 >> $ip ^ @rsi >> @rbp | @r12 << 0y1101 >> @r11 >> 0n18 ^ ~@r11 >> $teb & @rdi | 0x9 >> @rbp ^ +$thread & +$proc)  { test_statement(0x450);  /* This is a not closed comment val = 0x8 ^ 0n18 | +$teb ^ @rdi | @r13 ; }
$error$
$end$
2771
 if (@rax << $buffer >> 0n5 << @r10 >> @r9 @r13 + $thread | $teb & 10 & ~0n17 ^ (@r8) >> @r8 | $ip >> @r13)  { test_statement(0xBD0);  break; }
$error$
$end$
2772
 if ((@rdx) << @rsi << $thread ^ 4 >> ~$ip & 0x2 >< 0x5 + @rax << $buffer << (20) >> @rsp >> @r13 ^ $thread >> @r10 | @rsi << @r13 >> @rsi & $buffer)  { test_statement(0x41); } elsif ($thread << @r10 & $buffer >> @r8 & @r9 | @rax & @r11 & ~~~@rdi > $thread << @r10 & $buffer >> @r8 & @r9 | @rax & @r11 & ~~~@rdi) { test_statement(0x92F); } elsif (@rbx(+$proc >> 0n16) { test_statement(0x10C2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc | ~@rdx))$proc | ~@rdx) ; } elsif (@r12 ^ @rbx | @r9 | ~0y1101))@r13 & @r9 ^ 0n8 | @rdi | $proc | 4) { test_statement(0x13C6);  /* This is a not closed comment val = @rdi ; } elsif (@rbp ^ @rdi | @r12 | $teb))@rbp ^ @rdi | @r12 | $teb) { test_statement(0xC64);  // /* This is a comment   if (-@rsp ; @r10)  { test_statement(0x1549); }  /* This is a not closed comment @rax = 0x5 ; } elsif ($proc < 0y101) { test_statement(0x1BCB); @rax = 0y10011 ;  for (; 0y100 > @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rbx ; } else { test_statement(0x2291); }
$error$
$end$
2773
 if (@r10 << @r11 >> @rdx & @rsi >> @r8 >> $thread ^ 13 ^ @rax | $thread << 0x12 >< $proc + @rbx << @rsp << @rsi >> $buffer >> @rdx & 0x13 >> @rax >> $teb & @r13 ^ @rbp >> @r13 & $ip & @rdx & 0n2 | 4 << ($proc) & $ip)  { test_statement(0x486);  for (; @r12 ^ @r11 ^ ++@rax | 0y1011 ^ @rsi < (+0n18);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (@rax = @r13; (@r13) | ~17 >< $teb ^ -@rbp | +$proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 << +@rdx & @r10 >> $thread & 0n11 & @r10 ^ @rbx & @rax & 10 ^ @rdx & @r11 != @r9 << +@rdx & @r10 >> $thread & 0n11 & @r10 ^ @rbx & @rax & 10 ^ @rdx & @r11) { test_statement(0x12A7); @rax = @rsi ;  This is a not opened comment */ } elsif ($teb >> (~0n12) ^ 0y0 > @r11 >> 0y1010 ^ @r8 & @r12 ^ $ip) { test_statement(0x2E1);  if (+@rbx | 0y0)@rbp)  { test_statement(0x19A9); } } else { test_statement(0x106C);  // /* This is a comment  }
$error$
$end$
2774
 if (@r12 >> @r13 > $thread << @rdx << $teb >> @r11 >> (@r8) >> @rdi ^ 0y1110 << @r10 & 0n0 | @r13 << @rdx ^ $buffer & $buffer ^ @r9 ^ ~0y1011 | 23 ^ @r12)  { test_statement(0x1496);  break; }
$error$
$end$
2775
 if (0xF & @r9 << @r10 >> @rbp & $proc >> @rdi & $buffer ^ $proc << $teb >> (@r8) >> 0y1101 & @rsi >> $ip | 0y111 | @rdi >> @rax | 0x6 | ~(20) | $teb ; 0xF & @r9 << @r10 >> @rbp & $proc >> @rdi & $buffer ^ $proc << $teb >> (@r8) >> 0y1101 & @rsi >> $ip | 0y111 | @rdi >> @rax | 0x6 | ~(20) | $teb)  { test_statement(0x12D4);  break; }
$error$
$end$
2776
 if (@r11 + @rbx << +@r10 >> @rbp << @rdx ^ $buffer << $buffer & @rdx >> @r8 = @r9 + @rdi & @r13 >> @r11 ^ @rbx << @rax >> @r12 >> @rsi & $proc >> @rbx | -0xC & +0n5 & @rsi & @rsi ^ @rdx >> 0y10000 ^ @r13 & @rbp)  { test_statement(0x2120); } else { test_statement(0x221D); }
$error$
$end$
2777
 if (@r9 + 0n12 == 0xC >> @r13 << 15 >> $proc >> 0y1110)  { test_statement(0x2391);  // /* This is a comment  } elsif ($teb << $thread @rbp >> $proc | @r11 >> $teb & ~(@r12) & @rax) { test_statement(0x141D);  This is a not opened comment */ } elsif (+@r9 & 0y1110 ^ $buffer & @r13 ^ 0n5)+@r9 >> 0y1100) { test_statement(0x14EA); } elsif (@r12 ^ $proc | @rdx ! $buffer & @rdi ^ @rbp ^ @r8 | @rdi | @rax) { test_statement(0x1B83); } elsif (@rbx | 0n14 ! $thread ^ $thread | @r8) { test_statement(0xA69); ;  while  (@rbx <= @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif (@r11 | @rbx ! ~0y0 | (@r10)) { test_statement(0xED);  for (; $teb < $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ((0n2))(-@r12))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (@r12 ; @r10) { test_statement(0x1B0C);  /* This is a not closed comment } elsif (@rdi ! ~$thread) { test_statement(0x146E); } elsif (@r10 == @rbx) { test_statement(0x1C76); }
$error$
$end$
2778
 if ($proc << @rdi >> @rax << $ip >> 0n1 ^ @rsp ^ @r11 | @rbp ^ @r8)$proc << @rdi >> @rax << $ip >> 0n1 ^ @rsp ^ @r11 | @rbp ^ @r8)  { test_statement(0x16D8); } elsif (~$thread << -@r10 >> ~$buffer ^ @r13 >> @r12 ^ @r13 & $buffer ^ @rdx ^ 0xF | @r13 >> $proc & 0y111 ! ~$thread << -@r10 >> ~$buffer ^ @r13 >> @r12 ^ @r13 & $buffer ^ @rdx ^ 0xF | @r13 >> $proc & 0y111) { test_statement(0x1087);  if (0y0 ^ @r12(($thread ^ -1 | @rdi)  { test_statement(0x1198); } elsif ($buffer != $buffer) { test_statement(0x70B); } elsif (@r8 ; $ip) { test_statement(0x22A6); } ;  /* This is a comment */ }
$error$
$end$
2779
 if (@r11 + @r12 & 0n8 << $proc & $thread >> @r9 & $teb & @r12 ^ $ip >> @rdi & @rbp >> 0y10000 & @r9 | @rsi << @rbp ^ @rbp >> @r10 & 0xD & @r10 | @r13 >> $teb & @rdx ^ 0y1100 & $thread ^ $buffer)@r11 + @r12 & 0n8 << $proc & $thread >> @r9 & $teb & @r12 ^ $ip >> @rdi & @rbp >> 0y10000 & @r9 | @rsi << @rbp ^ @rbp >> @r10 & 0xD & @r10 | @r13 >> $teb & @rdx ^ 0y1100 & $thread ^ $buffer)  { test_statement(0x26AB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp & $proc ^ @rsi ^ @rbx(@rsp & $proc ^ @rsi ^ @rbx) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi ^ @rax | @r10 @rdi ^ @rax | @r10) ; } else { test_statement(0x235C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer))@rsi ^ @rsp | $buffer | @rax) ;  /* This is a comment */  if (@rsi >= ~0x0)  { test_statement(0x261D); } elsif (@r9((@rdi) { test_statement(0x95D); } elsif ($teb ! -~~@rax) { test_statement(0x1F6A); } else { test_statement(0x2606); }  // /* This is a comment  @rax = 0y10010 ; }
$error$
$end$
2780
 if ($proc + @r9 >> $ip << $thread >> $buffer >> @r10 & @rbx << 0y101 >> $thread >> +0y110 & (@rsi) & $proc ^ @rbp << @r12 ^ @r10 | @r13 << @r12 & @rsp & (13) ^ @rax & 0y101 & ~$ip | @r9 ^ $ip ^ (23) ^ @r11 | @r8 >< $buffer + @r8 | 0x1 << -@rdi >> 0y100 & @rsp & @rdi ^ $ip >> @rax & @rsp)  { test_statement(0x1ACD);  This is a not opened comment */ } elsif (@rbp << @rsi ^ +@r9 >> $proc ^ @r11 ^ 0n1 ^ 0y1010 | @rbx & @r12 | @rdi ^ (@rsp) > @rbp << @rsi ^ +@r9 >> $proc ^ @r11 ^ 0n1 ^ 0y1010 | @rbx & @r12 | @rdi ^ (@rsp)) { test_statement(0x1E1A);  /* This is a not closed comment  /* This is a comment */ } elsif (@r10 ^ @rsi((@rax >> @rdi & @r12 & @r10) { test_statement(0x1D6B);  if ($proc)@rdi | @rsi)  { test_statement(0x6D3); } else { test_statement(0x15FB); } }
$error$
$end$
2781
 if (@rbp + @r10 << @rax << 11)(@r10) >> $buffer << $proc >> @rax & $proc >> 0n3 & @rbp & 13 & (@rbp) ^ -$ip >> @r10 >> +17)  { test_statement(0x217); } elsif (@r11 << @rdx >> @r8 & $buffer >> @rdx & @r10 & @rsp | @r12 >> @r9 & 20 | @r11 ^ @rsi ^ @r9 | 0x13 < @r11 << @rdx >> @r8 & $buffer >> @rdx & @r10 & @rsp | @r12 >> @r9 & 20 | @r11 ^ @rsi ^ @r9 | 0x13) { test_statement(0x3F4); } elsif (@r11 & (@r10) ^ 0x9 & @rbp ^ 0n7 | (@rax) & $buffer ! @r11 & (@r10) ^ 0x9 & @rbp ^ 0n7 | (@rax) & $buffer) { test_statement(0x1FCB); val = @rsp ^ @r12 ; } elsif ($buffer | 0y1101 ^ $teb > $thread & @rbx ^ @r8 | @r8 | @rdi | @r13) { test_statement(0xB30); ; } else { test_statement(0x1DDB);  break; }
$error$
$end$
2782
 if (0xD << @r12 << @r11))@r11 + @r10 ^ -$teb & @rbp >> @rsp & @r11 | $ip << (0n16) >> $proc ^ 6)  { test_statement(0x112E);  for (val = 10; $buffer ^ @rdx ^ $ip > @rax & $proc ^ @r8 | @rsp ^ +6;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (0y10000(0y10000)  { test_statement(0x203B); } else { test_statement(0x2583); } } else { test_statement(0x20B8); }
$error$
$end$
2783
 if (~@r10 << 0xC << 0x0 >> @rdx << $buffer >> @rsp ^ 0n5 << @r12 >> @rdi >> @r10 & $buffer & @rbx | @rbx >> 0n8 ^ $ip ^ @r12 <> @r13 + $proc >> $buffer << @r12 & @r9 << @rax)  { test_statement(0x1598); } else { test_statement(0x107D);  /* This is a not closed comment }
$error$
$end$
2784
 if ($teb + @rbp | @r12 >> +$teb & -@rsi >> $teb ^ $buffer)$teb + @rbp | @r12 >> +$teb & -@rsi >> $teb ^ $buffer)  { test_statement(0x1E2F); } elsif (@rax << @r13 >> @r8 >> @r9 ^ @rsi ^ @rbx & @rbx ^ @r13 ^ 0xD <> @rax << @r13 >> @r8 >> @r9 ^ @rsi ^ @rbx & @rbx ^ @r13 ^ 0xD) { test_statement(0x5C7);  break;  This is a not opened comment */ }
$error$
$end$
2785
 if (0x3 + ($buffer) << @rax << @r12 | 0n0 >> @rbx >> @rbx & @r13 >> 0y10010 ^ -@r12 & 0y10001 <= @r10 << @rsi)  { test_statement(0xC2B);  // /* This is a comment  }
$error$
$end$
2786
 if (@r9 + @rbx & @r12 ^ @rdx >> $teb | @r8 & @rsp != @r9 + @rbx & @r12 ^ @rdx >> $teb | @r8 & @rsp)  { test_statement(0x1EE8); } elsif (@rbp & @rsi >> $thread & $buffer ^ $teb & @rdx | @rax((-$ip << @rdx >> @rbp >> 0n13 & @r9 >> $teb) { test_statement(0x2E9); } elsif (0y10011 | @rsp & 0x1 != @rbx & @rsp) { test_statement(0x257C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ; @rax) ; } elsif (@rdx | 0y100 <> @r9 & $buffer) { test_statement(0x537); } else { test_statement(0x5FD); }
$error$
$end$
2787
 if (@r9 + $proc & 0 >> @r11 != $buffer + $thread & $teb & @rbp >> +$teb & @rdi | @rbx << 0n13 >> 0n3 >> 0n16 | @r9 ^ @rax & @r12 | 0x9 ^ @rsp | @rsp ^ @r11)  { test_statement(0xC50); val = 3 & @r9 & @rdx ^ -(-@rbx) | @r11 & @rbp ; } elsif ($buffer >> @rdx)$buffer >> @rdx) { test_statement(0x188E); } elsif ($teb & $ip & @rbp ^ @rsp & @rbp ^ @r11 ^ @rdi | @rax ^ 0xC | $buffer | @rbp | $ip < $teb & $ip & @rbp ^ @rsp & @rbp ^ @r11 ^ @rdi | @rax ^ 0xC | $buffer | @rbp | $ip) { test_statement(0x246B); } elsif (@rax & (~0n6) | 0n5 > @rdi & @r8 ^ @rsp ^ (@rsi)) { test_statement(0x159B);  for (val = 10; @r13(@r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif (0n14 | @rdx | @r9(+$ip | $ip) { test_statement(0x1FA5);  if (+$ip > $ip)  { test_statement(0x58C); } else { test_statement(0x187B); } } elsif (~14 $thread) { test_statement(0x4A5); } elsif ((@rdx) <> @rdx) { test_statement(0x596); } elsif (~@r13 == $teb) { test_statement(0x10E8); ; } elsif (0x5 ! 0x5) { test_statement(0x378); }
$error$
$end$
2788
 if (@r11 ^ +@r9 >> $thread >> @r8 ^ @r9 >> @r9 ^ ~@r12 & @rax ^ @r13 ^ $buffer(@r11 ^ +@r9 >> $thread >> @r8 ^ @r9 >> @r9 ^ ~@r12 & @rax ^ @r13 ^ $buffer)  { test_statement(0x2702); } elsif (@r13 >> 0y10011 ^ (@r10) & @rdx ^ @rsi | $teb >> $ip & @rsi = @r13 >> 0y10011 ^ (@r10) & @rdx ^ @rsi | $teb >> $ip & @rsi) { test_statement(0x1FE5);  if (@rdx >< 0y1011 ^ @rbx)  { test_statement(0x32B); } elsif (@r8((@rsi | $teb) { test_statement(0x14BA); } } elsif (+0n7 >> +@rsp & (0y1000)(((@r13) & $teb & @rsp ^ 0n12 | @rsi & 0y0 | @rbp | 0n1 | $proc) { test_statement(0x1652);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x0(@r8) ; }
$error$
$end$
2789
 if ($buffer >> @r10 << $buffer ! 4 << $teb >> 0x9 >> @rax >> @rax & 0xC << @rdx)  { test_statement(0x24E1); } else { test_statement(0x268); }
$error$
$end$
2790
 if (@r13 + $thread << 15 >> 0x11 << @r10 >> $thread & @r9 >> @rdx >> @r11 & 0y10010 <= $ip & @r12 << @r13 ^ @rbx >> @rbp >> (@rdi) | @r12 << @rsp & @rbp & (@rsi) ^ @rdx & $ip & @r11 ^ @r12 ^ @rsp ^ $proc | @rbp ^ ~@rbp)  { test_statement(0xF9); } elsif (@rsp << @r8 | (+@r9) >> $thread & @r12 & ~@r12 | (@r8) >< 0y11 & +0y110 | ~$thread >> 0x4 & $buffer) { test_statement(0xD40); }
$error$
$end$
2791
 if (@r11 + @r13 << @r9 << 0y1010 >> @rbx << @rax >> @r8 >> 0y10001 ^ $buffer << @rdi & @rax & $teb & @r9 <= 0y101 << $thread << @r11 >> @rbx | @r13 << @rbp | @r9 >> 0y1101 & 0x0)  { test_statement(0x6CD);  for (val = 10; @rax ! @rsi ^ $buffer ^ @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
2792
 if ($teb << @r10 << @rbp >> 15 << @rdi @rax << @rdx & +($proc) << $proc & @r12 >> @rbp & @rbp & 6 ^ 0y10010 | @r11 << @rsp ^ @rbx & @rsp & $ip)  { test_statement(0xB); } elsif ($teb << (0y1) >> @rsp >> +0x9 & -($thread) | @rsp >> +@r8 <> ~0n17 << +$buffer >> @rbx ^ 0x13 & @rsp ^ @rdx) { test_statement(0x1E1A); ;  if (3 = @rdx)  { test_statement(0x904); } elsif (@r8 >= @r8) { test_statement(0x1117); } elsif (@rbx >< @r10) { test_statement(0xE85); } elsif ($proc(($proc) { test_statement(0x1CD2); } else { test_statement(0x1EC4); }  This is a not opened comment */ }
$error$
$end$
2793
 if (@rsi << 0n1 > ~@r12 + $proc << @rdi << 0y10010)  { test_statement(0x1AD8); @rax = 0x8 & 0x4 & @rdi ^ $buffer & @rsp ^ ~~(@r9) ^ 0y11 ;  while  (@rsp ^ @r12 | +@rsp != 0y111 ^ 0n13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
2794
 if ($proc << @r12 << $teb ^ @rbp >> ~@r10 >> @r10 | @r9 << @rsi & @rdx & @r10 & $proc = @r10 >> @r10 ^ 16 << 20 >> -@rdi >> ~@r12 ^ 11 >> @rdx & $teb & @rax ^ 10 & @rsp ^ @r8)  { test_statement(0x1744); val = @rax ^ ~@rsi ^ $buffer ^ $thread ; } elsif ((@r10) >> @rbx >> @rax & @rax >> @r11 & $thread & 0x0 | (0n12) >> 16 & 0xF ^ @rdi & $buffer)@r9 >> @r13) { test_statement(0x16E4); }
$error$
$end$
2795
 if ($ip + @rax >> @rsi >> -@rax ^ @rdi << @rbp ^ @r13 >> @r8 & @rsp & @r11 | 0y1101 >> @r13 >> $buffer ^ @r13 & $thread ^ @rbx ^ @r12 ^ @r12 == @r11 + 22 << @r10 << @r9 & @r8 >> ~~$ip ^ @rsi)  { test_statement(0x1D49);  /* This is a not closed comment ; } elsif ($buffer << 0n10 & @rbx >> 16 & $ip & $thread == $buffer << 0n10 & @rbx >> 16 & $ip & $thread) { test_statement(0x310); }
$error$
$end$
2796
 if (~(@rdi) & @r10 ^ 0y1001 << $buffer >> 0n8 | $teb << @rsi & @rsi & @rbp ^ @r8 >> @rsp & $teb ^ -$teb & ($thread) ^ @r9 ^ -@r10 = ~(@rdi) & @r10 ^ 0y1001 << $buffer >> 0n8 | $teb << @rsi & @rsi & @rbp ^ @r8 >> @rsp & $teb ^ -$teb & ($thread) ^ @r9 ^ -@r10)  { test_statement(0x131F); ; }
$error$
$end$
2797
 if ($thread >> @rbp << +$thread & +$teb >> 10 & @r13 & ~$buffer ^ 1 << +@rdi | -(@r9) << @rsp ^ ~@rdi ^ -$proc ^ @r10 ^ 0y1111 | -@r13)$thread >> @rbp << +$thread & +$teb >> 10 & @r13 & ~$buffer ^ 1 << +@rdi | -(@r9) << @rsp ^ ~@rdi ^ -$proc ^ @r10 ^ 0y1111 | -@r13)  { test_statement(0x113A); } elsif (@rsp << (0x4)(@r13 << 0xC >> @rsi & @rbx >> @r8 ^ @rbp ^ @r12 ^ @rsp ^ @rax | @rax ^ ~0n12 ^ -+0y0 ^ 0y1111) { test_statement(0x13E8);  /* This is a comment */  if ((@rbp) | $ip == (@rbp) | $ip)  { test_statement(0x2FD); }  /* This is a not closed comment ;  /* This is a comment */  while  (@r8 <> @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x227); }
$error$
$end$
2798
 if (@rbx & @rbx & 0y1 >> @r9 & (@r13) ^ @rbx >> @rdx ^ $buffer >> @rsp & 0n7 & $teb | ++$thread ! @rdi + $proc & @rdi >> @rbp >> -16 | ~@r10 >> 0n19 >> $teb & ~@rdx >> $teb | 0n5 >> @rdx & @r13 & +@rsi | 0y10011 & @r10 ^ @r13)  { test_statement(0x19A5);  This is a not opened comment */  This is a not opened comment */ } else { test_statement(0x336);  break;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ; @rbp) ; }
$error$
$end$
2799
 if ($proc >> @rax << @rsi & @r10 >> 0n1 & +$buffer >> -@rbx($proc >> @rax << @rsi & @r10 >> 0n1 & +$buffer >> -@rbx)  { test_statement(0x108A); @rax = $buffer >> @r9 | ~@rax ; } elsif (@r12 << @rax >> @r11 >> $proc & $ip & @rax & @r8 < 11 >> $thread ^ @rdi >> @rdi) { test_statement(0x45A); }
$error$
$end$
2800
 if (0y1001 + $proc >> @rsi << ~$buffer & @rdi << @rbp >> $thread ^ 0y10010 >> $ip & @rax >> @rbp(($ip + @r9 << @r8 >> @rdi << @r8)  { test_statement(0x108D); }
$error$
$end$
2801
 if (@r11 >> +@rsi << $ip & @rsp >> 0n19 ^ (($thread)) << @r11 & @rsp >> ~$teb | @rdx << +@rbp & +@r10 & @rbx & $teb ^ @r8 & @rsi ! @r11 >> +@rsi << $ip & @rsp >> 0n19 ^ (($thread)) << @r11 & @rsp >> ~$teb | @rdx << +@rbp & +@r10 & @rbx & $teb ^ @r8 & @rsi)  { test_statement(0x7D4);  if (+@rbx ^ $teb | 0n12 | @rbp ; +@rbx ^ $teb | 0n12 | @rbp)  { test_statement(0x2113); } else { test_statement(0x510); } val = @rax ;  while  (@r11 ; ~0)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x23F8); }
$error$
$end$
2802
 if (@rbx >> @rsp | ~@r8 <= @rbx << (0n5) & @rbx << 10 & (~@rbx) | @r12 >> $proc >> +@rsi & @rdi & $teb ^ @rdi >> $buffer ^ @r10 & @r12 | @r11 >> @r9 | $thread & ~@r8)  { test_statement(0x622);  if (0x4 ^ $ip ^ 22 | $ip | @rsp == (@rsi) & 0y1001 ^ @r11 ^ $buffer)  { test_statement(0x2175); } elsif ($ip | $proc | ~$thread == $ip | $proc | ~$thread) { test_statement(0x1F36); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi ^ @rbx | @rbx ; (@r13) ^ 0y10010 | 0y111) ; } elsif ($buffer & @rbp >> @rbp(@r12 >> $buffer & @r8 >> +@rbp & $ip ^ @r9 >> @rdi & @rsi & @rdx ^ -(0n10) ^ @r10 | ~(-~@r12) & $ip & $proc ^ 0y11 | -$ip ^ @r11) { test_statement(0x662); } else { test_statement(0x628); }
$error$
$end$
2803
 if (0xA + $thread << 0y1 << @rax >> @rbx << ~@rbp & @rdx >> +@rdx >> @rdx == $thread + $proc & -~(@rsp) & 6 >> $thread | 0y1011 >> @r9 & @rdi >> ~6 & @rax | @r9 ^ ~0y101 & 0n14 ^ 0x13)  { test_statement(0xB1D); }
$error$
$end$
2804
 if (17 + 0n4 << @rdx >> (5) << @rdi >> @rsp >> -$thread ^ $thread << @r12 & (@rsi) >> @r8 & 0n12 & (@rdi) ^ 5 & 0y101(0n15 << 0x1 & 12 << @r13 >> @r12 >> @rsi & @r9 >> @r13 | @rsi << @rsi >> @rbp & 0y1100 >> @rsi | 0n14 >> @rbp & 0n5)  { test_statement(0xCEB); } else { test_statement(0x220A);  /* This is a comment */ }
$error$
$end$
2805
 if (@r12 >> $thread & $teb >> @rax | @rax ^ @rbp >> @r12 & $ip & 0n19 ^ @r13 ^ @rbx ^ 0 | @rbp & @rax ^ @r10 & +20 | $ip & -~@r9 > @r12 >> $thread & $teb >> @rax | @rax ^ @rbp >> @r12 & $ip & 0n19 ^ @r13 ^ @rbx ^ 0 | @rbp & @rax ^ @r10 & +20 | $ip & -~@r9)  { test_statement(0x1477);  // /* This is a comment  } elsif (-@r9 ^ @r11 | @rax ^ @rsp ^ @rdx | @rdi & @rax ^ @rdx ^ @rax ; @rdx) { test_statement(0x97E); } else { test_statement(0x113E);  if (+@rbp | @r10 <= +@rbp | @r10)  { test_statement(0x1B5B); } elsif (~@rsi | @r10))~@rsi | @r10) { test_statement(0x26A9); } else { test_statement(0x24B8); } ;  // /* This is a comment   if ($buffer))$buffer)  { test_statement(0x10A2); } elsif ((~@rsi) <= @r10) { test_statement(0x16A5); } else { test_statement(0x1904); } }
$error$
$end$
2806
 if (+16 + $proc >> @rbx >> @rbx)@rsi + 0x6 | $buffer << @r9)  { test_statement(0x9F2); }
$error$
$end$
2807
 if (@rax + $ip << $thread << $buffer ^ 23 << @rdx ^ @rdi >> @r11 & ~@rbp ^ @r10 & @rsp ^ @r12 ! @rax + $ip << $thread << $buffer ^ 23 << @rdx ^ @rdi >> @r11 & ~@rbp ^ @r10 & @rsp ^ @r12)  { test_statement(0xC30);  if (3 & @rdx ^ 20 ! @rbx)  { test_statement(0x1E68); } else { test_statement(0x26A); } val = 0n9 & @r10 | 0n19 ^ 0n8 | @r10 | @r12 ; } elsif (+@r8 << $thread >> @r9 >> @r12 | 0n13 ^ $ip ^ 1 <= $thread >> @r11 ^ @r12 ^ ($buffer)) { test_statement(0x16AF); } elsif (@rax ^ 0y10 & (0x10)((@r13 & $thread & +@r8 | +@r8 ^ $teb ^ +@rsp | $proc ^ ($ip) | @r8) { test_statement(0x4B6);  // /* This is a comment   for (val = 10; @rsi @rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip ^ +0n16 = @rsp ^ 13 | @rsp) { test_statement(0x124C); @rax = @rax | 13 ; } elsif (0x13 ^ @rbp | $teb | ~0y1101 >< 0x13 ^ @rbp | $teb | ~0y1101) { test_statement(0x12C7); } elsif (16 | @rdi > 16 | @rdi) { test_statement(0xBB4); } elsif ($ip)@r12) { test_statement(0x17AC); } elsif (@rax >< -~@r8) { test_statement(0x57A);  break; }
$error$
$end$
2808
 if (0n8 >> @rsi & @r13 >> @r9 >> $teb & @r13 & $teb & @rsp | 5 << 0x0 | @rbx ^ $thread & @rsi | @rax & $buffer($thread + @rbx >> 0x1 << $proc >> @rdi >> @rax & $buffer << ~@rdi & @rax & @r9 & $proc)  { test_statement(0x1A89); } else { test_statement(0x1973); }
$error$
$end$
2809
 if (+0y1111 + @rsi >> @rsi << $thread >> @r10 | @rsi >> @r8 & (@r8) & 13 > $proc & $thread)  { test_statement(0x2173);  /* This is a comment */  This is a not opened comment */  // /* This is a comment  } else { test_statement(0x2138);  if (@r11 | $thread | @rsp))0x8 | 1)  { test_statement(0x1EE4); }  while  ($teb))0y111 | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2810
 if (@rbx >> 0n0 << @rax >> 5 & @rbp << @rsi | @r10 ^ +$buffer & $thread | @rbx & 17 >= @rdi & @r12 << @rsp | +0y1100 << @rdi & @r9 | $buffer >> @rax ^ 7 & @rsi ^ $thread)  { test_statement(0xEAC);  This is a not opened comment */  if ($teb <> $ip ^ (@rbp) | @rax)  { test_statement(0x101E); } elsif (+@rax | @r8 >< @r11 | @rbp) { test_statement(0x11E1); } elsif ($proc < +$buffer) { test_statement(0x6C8); } elsif (@r12 <> @r12) { test_statement(0x11F2); } } elsif (0y1000 & @rbx & @r9 ^ $thread >< @r10 << @rsp ^ @rdx & -$teb & @rbx ^ @rbx & @rdx ^ 0 ^ 0x10 | 0n2 >> @rbp & @r12 | 20 & @r12 ^ $buffer | @rbx) { test_statement(0x1966);  if (@rsi ^ @rdx != @r11 | @rax)  { test_statement(0x225E); } elsif (+$thread | (@rbx) ; @rsp | @rdi) { test_statement(0x1E69); } elsif ($teb >< $proc) { test_statement(0x378); } else { test_statement(0x5CA); } } elsif (@rsp >> (0n3) & @rdi | @rbx ^ 0xB | @rbp | +@r10 | $proc != $proc) { test_statement(0x1ED3); } else { test_statement(0xCDF); }
$error$
$end$
2811
 if (@r11 << 0y1001 << @r11 >> $teb >> $teb & (~+0y1) << $proc & $proc & $proc ^ $thread << 21 ^ @rsp >> 0x9 ^ @r11 & 0y1000 | 10 << $proc & @r10 >> ($teb) & @rbx | @r9 ; @rsp >> @rdi >> @r8 & +0xB >> 2 ^ @rbx << ~$proc >> $buffer >> ~@rsi)  { test_statement(0x2E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -$thread ! @rax ^ @rsi) ; }
$error$
$end$
2812
 if (@rsp + $ip << @r9 >> @r9 >> ($teb) & @r12)-(@rsi) + $buffer << @rsi << 0x6 & @r13 << @r12 | -@rbx >> +@rbp >> 0y1110 & $thread >> @r10 & 0xC & 0n4)  { test_statement(0x76A); } elsif (@rdx << $proc >> 0n5 >> ~++@rax & @r8 >> $proc & @r8 ^ $ip >> (@r11) > @rdx << $proc >> 0n5 >> ~++@rax & @r8 >> $proc & @r8 ^ $ip >> (@r11)) { test_statement(0x1CAA);  /* This is a not closed comment } elsif (@rbp >> $ip))@rbp >> $ip) { test_statement(0x2606); }
$error$
$end$
2813
 if (@r10 + @r12 ^ 0y0 >> $proc >> $proc & @r8 >> 0n7 <> @rbx + $ip >> $proc >> @rdx & @r10 ^ @r13 & 0y10010 >> $teb ^ @rbp & @rbx)  { test_statement(0x17B2); ;  if (@rdi ^ @rsi | @rsi ; @rdi ^ @rsi | @rsi)  { test_statement(0x1AA0); } elsif (@rsp != @rsp) { test_statement(0x1E2B); } elsif (@rax))0xF) { test_statement(0xD62); } else { test_statement(0x3DB); } } else { test_statement(0x62D);  for (; -@r8 ^ @r12 | -@rsi > $thread ^ @rax | 0x11 | @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2814
 if (@rdi + ~5 >> @rax << $teb >> @rdx >> @r8 = @rbp + $teb << @rdx >> @r9 << 0y1001 & +~$buffer & $proc >> @r9 & ~$ip | 0n16 >> $ip | @r11 >> 0y111 & @r13 & (0y11) ^ @r8 | @rax & $teb)  { test_statement(0x16B4); } elsif ((0n5) >> @rdx & $teb >> $thread | 0x9 >> 0n7 | @rsp <> @rdi ^ @rdx >> 0y10011 & @rbp & @rsp | -@r8 >> 12 | $buffer) { test_statement(0x2D8);  while  (0n6((@rdx | (0n12) | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rsi | @r8 ; } elsif (@rax & @r10 & 0n11 | @rbx | +0x2 >< @rax & @r10 & 0n11 | @rbx | +0x2) { test_statement(0x2199); } elsif (@r11 ^ @rdx | @rsi ^ -0n4 | @rax | $buffer = @r11 ^ 0x12 | 0y1010) { test_statement(0x19B4); } elsif (@rsp ^ ~@rbp != @rsp ^ ~@rbp) { test_statement(0xED8); } else { test_statement(0xD7A);  break; }
$error$
$end$
2815
 if (@rsi << 0y10 << $thread >> @rdi << @r11 ^ -0n8)@rsi << 0y10 << $thread >> @rdi << @r11 ^ -0n8)  { test_statement(0x2691);  This is a not opened comment */  break; }
$error$
$end$
2816
 if (@rdi + @rsi >> @r10 << @rbp >> 13 | 23 << @r8 >> @rsp | 13 >> @rdx & (@rdi) <= $proc + 0y11 << @r9 << @rsp | @rsp << $proc ^ @rdx)  { test_statement(0xAC2); } elsif (~@rax << $teb >> ~@rax ^ @rdx < @r13 << @r11 >> -$thread ^ @r12 ^ 17 & @r11 ^ 0n17) { test_statement(0x10E0); } else { test_statement(0x16F8); }
$error$
$end$
2817
 if (@rsp >> @r8 << @r11 >> ~$ip >< @rsp >> @r8 << @r11 >> ~$ip)  { test_statement(0x1077); } elsif ($proc << +@r9 >> @rdx >> @r9 & $teb ^ $ip >> @rbp & @rax & @r11 ^ $thread ^ @r13 | @r8 & $teb ^ $buffer != $proc << +@r9 >> @rdx >> @r9 & $teb ^ $ip >> @rbp & @rax & @r11 ^ $thread ^ @r13 | @r8 & $teb ^ $buffer) { test_statement(0x12C9); }
$error$
$end$
2818
 if (@rax + 0y100 >> 0x9 << -@rbx >> $teb ^ @r13 << ~@rbx >> @r13 >> $teb & 0x7 ^ $ip & @rbx & 0y1010 ^ @r8 ^ 3 ^ @rsp = $proc << @r8 >> @rax << @r12 >> @r9 >> 0n10 ^ @rbx << 0x5 ^ @rdx >> @rsp & (@rdx))  { test_statement(0x193B);  /* This is a not closed comment  for (val = 10; $proc <> @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rax ! ~$thread)  { test_statement(0x216E); } elsif (@r8 >= @r13) { test_statement(0x2316); } elsif (@rdx >< 10) { test_statement(0x24C8); } elsif (@rsi <= @rsi) { test_statement(0x10BE); } else { test_statement(0x2518); }  break; } elsif (@r12 << @r8 >> @rdi >> @rsi & ($buffer) >> @r8 | @rsp | $thread((@r12 << @r8 >> @rdi >> @rsi & ($buffer) >> @r8 | @rsp | $thread) { test_statement(0x1747); } else { test_statement(0x1BA3); }
$error$
$end$
2819
 if (-@rbp + 0y1010 >> @rdx << $thread ^ $ip << $ip | @rdx << $proc >> $teb >> @rdx & +2 >> @rax | ~@r11 >> $thread & $proc & @r8 <> @rsp >> -@r12 << $teb >> @r10 | 0n16 >> @rbx >> ~$thread & @rsi >> @rsi & @rdx & 0xB)  { test_statement(0x20E9); } else { test_statement(0x17D3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@r10 >= @rax ^ @rbp | @rsi) ; }
$error$
$end$
2820
 if ($teb + @rax << +@rbx << @r9 ^ @rbx & @r13 >> @r10 | @r11 << (-$teb) | @rbp ^ @rdx & -+@rsp ^ ~$buffer(@r9 + @rdi >> @rdx)  { test_statement(0x4EF);  if (-@r12 & @r12 ^ @rdi ; -@r12 & @r12 ^ @rdi)  { test_statement(0x874); } else { test_statement(0xF45); } } elsif (0y111 >> -@r13 >> 13 ^ 2 & @rsp ^ @r13(@rdx >> +0y1100 & @rbp >> ~@r8 ^ ~@r10 >> (@r10) | 0xD & @r12 | @rax & 14 ^ 1 ^ @r11 | $teb ^ $ip | @rsi | @r12) { test_statement(0x2096); }
$error$
$end$
2821
 if (@rbx + @rsp << @rbx << @rbx & 0n7 << @rdx >> @r11 & @r11 >> $proc & @rdi & $thread < $proc + $buffer >> $thread >> @rax >> @r11 & 0x6)  { test_statement(0x6CD); } elsif (-@rax >> 0y1 >> @rsi ^ 0y111 ^ @r9 | $proc & @rsp ^ 0y1100 & @rbp <> -@rax >> 0y1 >> @rsi ^ 0y111 ^ @r9 | $proc & @rsp ^ 0y1100 & @rbp) { test_statement(0x1941); } else { test_statement(0x8FB);  /* This is a comment */  for (val = @r13; 0x13 | +-(@rsi))22 | $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  for (; @rbx @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2822
 if ($teb << $ip >> $teb << $proc & @rdi & $proc ^ $buffer >> $proc >> $ip | @rdx << @rbx >> @rbp & @rbp | 0n19 | @r13 & @rbx ^ @rbx ^ $proc == $teb << $ip >> $teb << $proc & @rdi & $proc ^ $buffer >> $proc >> $ip | @rdx << @rbx >> @rbp & @rbp | 0n19 | @r13 & @rbx ^ @rbx ^ $proc)  { test_statement(0x15C); } elsif (@r8)17 << $ip >> $thread & (@rbp) & ~0y110 ^ +@r11 >> @rsi & $teb ^ @rbx | 0y1110 >> @r10 & +$teb) { test_statement(0x279); }
$error$
$end$
2823
 if ($teb & 0xB << $thread ^ @rsi << 21 & @rsp >> $proc ^ -~@rsi >> $ip & 0xE & $teb | @rdi << $proc >> @rdi & @rdi | @rsp ^ $ip | @rbp | (@rsp) | @rdx)$thread + $thread | ~0y1011 >> @r9 >> @r13 & @r11 >> $ip & 2 & +0x7 ^ @rax | @rsi ^ @r11)  { test_statement(0x10A1); ;  This is a not opened comment */  // /* This is a comment  } elsif (@rdx ! @rdi >> @r12 & @rdi ^ 0n16 >> 16 & $ip ^ @rax & @r11) { test_statement(0x135D); } elsif ($proc & @r10 | @rsp & $thread ^ @rdi | @rsp >< $proc & @r10 | @rsp & $thread ^ @rdi | @rsp) { test_statement(0x1DCB); } elsif ($buffer ! 0xA & @r9 | $thread | 14 | -@r12) { test_statement(0x803); }
$error$
$end$
2825
 if (@rbp & @r10 << $buffer >> @rdi & 0y1101 >> $ip & 0y10011 ^ $ip(@rbp & @r10 << $buffer >> @rdi & 0y1101 >> $ip & 0y10011 ^ $ip)  { test_statement(0x1F41); } elsif (@r12 << @r8 ^ 0n4 & @r13 ^ @r11 & $buffer ^ $ip ^ @r12 >< @r13 >> 1 | @rbp >> @rdx | ~@r11 & @rdi) { test_statement(0x26F8); }
$error$
$end$
2826
 if ($ip & 0n12 >> @rbp ^ @rdi << @rax >> @rbx ^ $teb >> $teb ^ @r8 <> $ip & 0n12 >> @rbp ^ @rdi << @rax >> @rbx ^ $teb >> $teb ^ @r8)  { test_statement(0x6D1);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n17 | @rdx == @r12 | @r12 | @r9) ;  /* This is a comment */ val = @r13 | 0n2 ;  while  (~@r13))~@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1A0C); }
$error$
$end$
2827
 if ($thread + 0n3 & @rbp & $ip >> 0xF & @r8 & 17 >= 0n8 >> @rdx << 0n12 & @rdi << +$proc)  { test_statement(0x1112); ; ;  if (@r13 = @r13)  { test_statement(0xF8E); } elsif (0n2 != @rdx) { test_statement(0x70A); } else { test_statement(0x21A9); }  This is a not opened comment */  // /* This is a comment  } else { test_statement(0x23F3); }
$error$
$end$
2828
 if (($proc) << @rax >> 0n12 << 0n18 & $thread << ($proc) | @rbp << 0y1110 & @rsp >> @rdx(($proc) << @rax >> 0n12 << 0n18 & $thread << ($proc) | @rbp << 0y1110 & @rsp >> @rdx)  { test_statement(0xA99);  for (val = 10; 0x2 & 0x5(-@r11 & @r12 ^ 7 ^ $ip | -@r12 ^ -@r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ((@rsp) ^ ~@r12 | ~(@rax)))$buffer ^ @r10 | @r9 | @r11)  { test_statement(0xECF); } }
$error$
$end$
2829
 if (@r12 + @rdx << @r11 >> 0n17 != $ip >> +16 >> @r13 >> 14 ^ $proc << @r13 | $thread ^ (@r10) & ~@rdi & @r8 ^ 0y10000 | @r9 & @rbp & $ip ^ 2)  { test_statement(0x25FB); } elsif (0n7 >> $thread & 20 >> @rdi ^ $teb & @rsi ^ +10 & @rbp @rdx << @rsi & 0x13 ^ @r12 >> $proc & @r13 & ($teb) ^ 0y11 ^ @rdi ^ @rdx) { test_statement(0x1056); } elsif (@r9 & @rax & -+@r8 ^ @rsp ^ 0x5 | $buffer | @rbx ^ ~@rdi | ++(@rbp))@r9 & @rax & -+@r8 ^ @rsp ^ 0x5 | $buffer | @rbx ^ ~@rdi | ++(@rbp)) { test_statement(0x26EF);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread >< $thread) ;  /* This is a not closed comment } else { test_statement(0x13CF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 | @rbx | +@r8(@r13 ^ @r13) ; }
$error$
$end$
2830
 if (@rbx & $proc << $teb ^ $proc << $ip >> @rsp >> @rsi & $buffer | $thread >> -+@rdx >> @r12 ^ @rdi & @rbx | $thread & @rdx & $proc ^ @r8 & $proc | @rsi & @rsp ^ (-@r10) ^ (@r13) >< (@rbx) + @rbx << -@r10 << 7 >> -0n1 << $teb)  { test_statement(0x877);  if (0y1001 ^ @r9 | -$teb ^ 0y1011 ! @rdx & $teb)  { test_statement(0xE6A); } elsif (0n0 ^ @rsp | @r8 0y111) { test_statement(0x2078); } else { test_statement(0x1833); } } else { test_statement(0x1612); }
$error$
$end$
2831
 if (@r10 << ~0x8 << @rdx >> @rsp << @rdi ^ @rdx >> @rdx & @r12 >> @rdi | $buffer >> @r12 >> @rax & $teb >> @r13 & @rbp(@r10 << ~0x8 << @rdx >> @rsp << @rdi ^ @rdx >> @rdx & @r12 >> @rdi | $buffer >> @r12 >> @rax & $teb >> @r13 & @rbp)  { test_statement(0x10F1); val = @rsp >> @rsi ;  // /* This is a comment   while  ($thread | @rbx = $thread | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2832
 if (@rbx ^ @rsp & 0y10011 ^ $buffer >> @rax & $thread | (@rax) >> @r8 | $ip >> @r12 < $ip << @r10 << @r9 >> $teb >> 0x13 >> $teb & +@rdx ^ (~@rax) << $proc ^ @r11 >> $proc | @r9 << 7 >> @rbp >> $teb & +@r11 & @r12 & @r11)  { test_statement(0xBDC);  /* This is a comment */ } elsif ($buffer & $thread & +@r13 | $buffer >> @r13 | $ip ^ @r12 ^ @rax > $buffer & $thread & +@r13 | $buffer >> @r13 | $ip ^ @r12 ^ @rax) { test_statement(0x2DA);  /* This is a not closed comment } else { test_statement(0x20E5);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n7 = 0n7) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc((@rax | 0y10010) ;  if (@r12 < @r9)  { test_statement(0x1605); } }
$error$
$end$
2833
 if (@r13 >> @r13 <= @r8 << @rax | -@rdi | @r8 & $ip ^ @rdx & ~@rbx | (@rsp) & (0y1) ^ @rsi)  { test_statement(0x261D); } elsif (($buffer) & @r10 >> @rbp ^ $buffer & 0y110 & @r10 | -@r8 >> @rax ^ 2 ^ +@rbx == 0x5 << -0y1) { test_statement(0x1CBE); }
$error$
$end$
2834
 if (@rdx & $ip << $teb >> @rsi & @r13 & @r10 & $thread ^ 0x5 << 10 & @r11 & @r11 & $proc ^ @r10 >> @rdx & @rdx ^ 0xE & @r13 | @rsp << @r12 & @rbx >> @r13 & @rdx & (@rbx) ! @rax + @r8 << @rdx >> $thread << (@rsi) >> ~@r9)  { test_statement(0x1DFF);  // /* This is a comment   if (@r13 ! @r13)  { test_statement(0x1730); } ;  // /* This is a comment  }
$error$
$end$
2835
 if (+$proc >> @r11 << $thread >> 0x5 & @rbx >> @rsi >> @r11 & ~@rdi >> @r12 ^ @rsp & @rdx & @r12 > +$proc >> @r11 << $thread >> 0x5 & @rbx >> @rsi >> @r11 & ~@rdi >> @r12 ^ @rsp & @rdx & @r12)  { test_statement(0xA98);  break;  break; } elsif (0x6 >> $buffer | 0 & $teb)0x6 >> $buffer | 0 & $teb) { test_statement(0x25A8); }
$error$
$end$
2836
 if ($thread << @r12 << @rax >> 0x9 << ~$proc >> @r9 < @rsp + 0y1 & 0y10011)  { test_statement(0x978);  /* This is a comment */ ;  break; } elsif (+@rsp((0n0) << @rdi & $thread >> @rax) { test_statement(0x13CC); } else { test_statement(0xA62); }
$error$
$end$
2837
 if ($thread >> $buffer >> @r9 >> ~@rdi ^ 11 << $thread ^ $teb >> -0n0 & $thread & --@rsp ^ +$proc ^ @rax | @rsi << @r12 >> ~($ip) >> @rbx & +@r11 ^ ~@r9 >> (@r10) | $teb >> $thread >< @rax + 0y100 << @rdi | 0n5)  { test_statement(0x1C1E);  for (val = 10; @rsi ^ $teb | -0y110 ^ ~$buffer | @rbp | $teb ! @rsi ^ $teb | -0y110 ^ ~$buffer | @rbp | $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 ^ @r9 & 0x7 ~@rsi & +($proc) >> @rax & @r9 & +0n7 ^ $thread & $buffer) { test_statement(0x613); } else { test_statement(0xB15); }
$error$
$end$
2838
 if ($proc + @rbx >> ($thread) | @rsi >> @rbp & @rax ^ 17 ^ 10 | 3 >> 0n2 | $ip | $buffer ^ ~@r12 | @r11 | $proc))$proc + @rbx >> ($thread) | @rsi >> @rbp & @rax ^ 17 ^ 10 | 3 >> 0n2 | $ip | $buffer ^ ~@r12 | @r11 | $proc)  { test_statement(0xE3F); } elsif (@r11 << @rsp & +$ip <> @r11 << @rsp & +$ip) { test_statement(0x91A); } elsif (+@rdi & $thread & @r8 ^ @r8 ^ (0y11) ^ $buffer <= @r10 | $ip ^ -@r10 | $proc | $proc | @r9) { test_statement(0x2516);  This is a not opened comment */ } else { test_statement(0x26BE);  /* This is a comment */  if (@rdx >= @rdi)  { test_statement(0x1CBE); }  This is a not opened comment */ val = @r9 ; }
$error$
$end$
2839
 if ($teb + $thread & 0x12 >> $buffer ^ 0y1001 << 0n14 >> @rax ^ 0y10 >> @rsp | @r8 >> @rsi & @rax >> $ip & @r12 ^ @rbx >> -@rdx ^ $ip & @r12 | 0n16 & 0x3 & @rax ^ 0y1000 & @rsi ^ ~@rbp ^ 0n17 | @rdx | ~$teb 3 + 0x13 << @r10 >> @rdi >> @rdi >> ~@rdi | 12 | $thread ^ (0n0) | @rdi & ~@rsi ^ $buffer ^ @r8)  { test_statement(0xAD2);  if (@r12 & 17((@r12 & 17)  { test_statement(0x1AEE); } elsif ($teb >= @rsp | $teb) { test_statement(0x7ED); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp = @rbx | @r9) ;  /* This is a not closed comment } elsif (@r13 | 11 & $thread & @rdi ^ @r8 ^ +@rsp | @r11 | @r13 | 0y0 | @rdi != 0n6) { test_statement(0x2201); } elsif (@r9 ^ $buffer & 15 ^ +($thread) ^ $thread))@rdx ^ @r12 & @rbp | +$buffer | ~@r11 ^ @rdx) { test_statement(0x127D);  while  ($ip | 0x1 > ~$ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2840
 if (@rdx + @r10 >> 0xE == @rdx + @r10 >> 0xE)  { test_statement(0x14BB);  This is a not opened comment */ } else { test_statement(0x1CB1); val = @r11 | @rbx | @rbp ; }
$error$
$end$
2841
 if (@r10 + $thread != $buffer >> $ip << @r11 >> @r13 >> @rbx | 11 << @rdi >> @rsi >> @r8 & -$proc >> @r8 ^ $thread & ~$ip ^ @rax & $proc ^ @rbx ^ @rsi)  { test_statement(0x43C);  This is a not opened comment */  while  (~+$ip | $ip | 0y1000 >< 0y111 | $buffer | +@rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2842
 if (@rsi << @rsp << -(@rdi) >> @r11 << ~$proc >> @r13 & @r13 << (@rbp) >> @r13 >> $buffer & +0n11 & @r11 ; @r11 << 6 << 0y1)  { test_statement(0x38);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ^ @rbx <= @r9 & $proc ^ @r8 ^ @rsi) ; } elsif ($thread >> $proc >> 0x5 & $thread & $ip ^ 0n1 >> @rbx & $ip & 20 ^ 0n12 ! +0x4 << -+-$ip >> @r9 >> @rbp & @r11 >> @rsp | @rsi | ~10 & 16 | ~@rsp ^ @rdi) { test_statement(0x7CD); }
$error$
$end$
2843
 if ($buffer + @r12 << @r10 << $proc & $thread | $proc & $thread >> $buffer | +@rsi >> $proc & +0y10010 & @r12 | @rax | 0xE ^ 0 == ~-@rbx + 0n14 << $ip ^ @rsp & @rax ^ @r10 & $ip ^ @r11 & @rsi)  { test_statement(0xA5B); } elsif ($thread & @r9 | @r9 | -@rdi & @rdi | @r11 | 0y1 ! $thread & @r9 | @r9 | -@rdi & @rdi | @r11 | 0y1) { test_statement(0x10F3);  // /* This is a comment  } else { test_statement(0x2356); }
$error$
$end$
2844
 if ($proc + @rdx << @r11 << @r12 & 4 << 0y111 >> @r12 & 0y110 >> @rbx ^ @r9 << @r9 >> 0x3 >> @r12 ^ +@rsp ^ +@r12 < $proc + @rdx << @r11 << @r12 & 4 << 0y111 >> @r12 & 0y110 >> @rbx ^ @r9 << @r9 >> 0x3 >> @r12 ^ +@rsp ^ +@r12)  { test_statement(0x45B); @rax = $ip & @rax & ($proc) | $buffer & ($teb) | @rbx | +@r11 ; }
$error$
$end$
2845
 if (0 + 0y10011 << @rbx & @r10 << @rdx >> $buffer ^ @r10 & @rax >> @rax < 0 + 0y10011 << @rbx & @r10 << @rdx >> $buffer ^ @r10 & @rax >> @rax)  { test_statement(0x1F8B); } elsif (@rbx ^ 0n12 >> @r8 ^ @r9 & @rsi | @r10 >> -$proc & 0xC | +~0y10001 ^ @rax | +~$thread ^ $thread | @rax ! 0y111 << 0x11 >> @r11) { test_statement(0x261C); } elsif (@r8 >> @r8 | $ip & -@rsi ^ @rsi ^ -@r10 | -0y1100 ^ $buffer $buffer >> @rbx & @rdi | 4 ^ 0) { test_statement(0xF3E); }
$error$
$end$
2846
 if (~-0x9 + @rdx >> 0x11 >> @r9 >> 0xC & $teb << $buffer >< $thread + -$buffer << @rdi & $teb ^ $ip >> @r10 >> $proc & $teb >> @rdx & 0y0 & 0n14 | 0n14 << @rbx ^ (@rsp) ^ -$ip & 16 ^ ~$proc)  { test_statement(0x1560);  This is a not opened comment */  for (val = @r9 | @r13; @rdi = 0xA ^ (0x10) | @r13 | (0n15);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; $ip | ~@r12(@r13 | @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsi << @r12 & ~@r13 & @r9 & 0n5 ^ @rbx & @rdx ^ @rsi & +@rbx <> @rsi << @r12 & ~@r13 & @r9 & 0n5 ^ @rbx & @rdx ^ @rsi & +@rbx) { test_statement(0x892);  if (@r10 ^ $ip >= @rsp)  { test_statement(0x1997); } else { test_statement(0x1AA1); }  if ($proc = $proc)  { test_statement(0x4DA); } } elsif (0n18 >> @rax & @r11 & ~@r10 <> 0n18 >> @rax & @r11 & ~@r10) { test_statement(0x1C9); ; ; ;  /* This is a comment */  /* This is a comment */ }
$error$
$end$
2847
 if (0n10 << @rbx & +0 >> @rbp >> ($buffer) != 0n10 << @rbx & +0 >> @rbp >> ($buffer))  { test_statement(0x1265); } else { test_statement(0x28B);  /* This is a not closed comment  // /* This is a comment  }
$error$
$end$
2848
 if (-+$buffer >> $buffer & 0xA << @rsp >> @rsp >> $teb <> @r12 << +$thread << (@r9) & 0y110 << 12 | 0n19 << @r10 ^ (@rsi) & $proc | $buffer >> $proc & @rdi ^ $teb & @r9)  { test_statement(0x1964); } else { test_statement(0x2334); }
$error$
$end$
2849
 if (@r8 >> $ip & @r10 << $proc >> ~$proc >> $buffer & @r10 >> @rbx & @r13 & @r12 | @rdi << @rsi >> @r9))@r8 >> $ip & @r10 << $proc >> ~$proc >> $buffer & @r10 >> @rbx & @r13 & @r12 | @rdi << @rsi >> @r9)  { test_statement(0x21AF); } elsif (-@r11 >> @r11 >> @rsp & $proc & 0x2 ^ 0x2 ^ @r13 ^ $buffer <> @r11 & @r10 & $teb) { test_statement(0x18F0); }
$error$
$end$
2850
 if (@r13 + @rdx & $thread << (@rax) ^ 0x0 << 0y1110 ^ @rbx & +$buffer & @rsi ^ @r13 | @rdx >> @r12 1)  { test_statement(0x6C2); } elsif ($buffer >> @rdx | $buffer & 0x0 & @rbx ^ ~22 & @r12 | $thread ^ $teb ^ @r11(($buffer >> @rdx | $buffer & 0x0 & @rbx ^ ~22 & @r12 | $thread ^ $teb ^ @r11) { test_statement(0x3A0);  for (val = 10; ~@rbx ^ @r10((~@rbx ^ @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx | @rdi >< @r9) ; @rax = @r13 | $proc ; } elsif ($thread & @rax ^ @rdx & @r9 ^ 0y11 | 0y110 & @r11 ^ $thread ^ @rdi(($thread & @rax ^ @rdx & @r9 ^ 0y11 | 0y110 & @r11 ^ $thread ^ @rdi) { test_statement(0x887); }
$error$
$end$
2851
 if (@r9 & +@r13 >> @rbp & @rsp >> 0n4 == @rdx + 0y100 << ($teb) << @rdx >> @r9 << $buffer & @r9 | @rbp << @rbp >> @r13 >> @rsp ^ @rdx & @rbx & @r13 | @rdi ^ @rdi | -@r9 & ~@rsi ^ @r11 ^ 0x9)  { test_statement(0xEE0);  break; }
$error$
$end$
2852
 if ($buffer << 0x0 >> @rbx << @rsi >> @rdx >> $proc >= @r11 >> @r13 & +0x11 & -@r9 >> @r8 | ~@r9 << $ip & $ip >> 0n17 & @r8)  { test_statement(0x2C4); val = --$thread ^ 2 & @rbx ^ $teb ^ @rbx | @r13 ^ ++@r8 ; } elsif (@rsi << 10 & $buffer & $buffer ^ 0n5 & $buffer | @rsp >> $proc ^ $buffer ^ ~$teb | -$thread | 0y10001 | $proc | @r11 >= @r9 & @r12 >> @r13 | $ip >> @r8 & 22 & $ip) { test_statement(0x23E4); } elsif (@rsi >> @r11 & -0n6 & $ip | $ip & @rax ^ $ip | $proc <> @rsi >> @r11 & -0n6 & $ip | $ip & @rax ^ $ip | $proc) { test_statement(0x2583); }
$error$
$end$
2853
 if (@rax + $thread << @rbp << -$ip >> 0xE >> @rdi & @r9 << @r8 | 0x10 ^ -@rbx & @rsp & @rbp <= @rax + $thread << @rbp << -$ip >> 0xE >> @rdi & @r9 << @r8 | 0x10 ^ -@rbx & @rsp & @rbp)  { test_statement(0xDA2); } else { test_statement(0x1AE4);  // /* This is a comment  @rax = @r11 ^ @r13 ; }
$error$
$end$
2854
 if (@rdx + $proc << ~$teb & @rdx ^ @r8 >> @rdx & @rdx ^ @rbp >> -@rax & 0xA & @r9(@rdx + $proc << ~$teb & @rdx ^ @r8 >> @rdx & @rdx ^ @rbp >> -@rax & 0xA & @r9)  { test_statement(0x1F51);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 @r11) ;  while  (0y1011 ^ @rdi | 0y10011 <> @rax ^ @r9 | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rbx | @rbp = @rbx | @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = 0y1100 ;  if ($ip != @rsp)  { test_statement(0x23E1); } }
$error$
$end$
2855
 if (@rsp + $thread << $ip << 7 >> 0x2 >> @rsp ^ ~$thread << +-@rbx != @r8 + $proc | 0x11 << $ip >> @r11 & @rax & $buffer)  { test_statement(0x63); } else { test_statement(0x5A9);  // /* This is a comment   // /* This is a comment  }
$error$
$end$
2856
 if (@rbx + @rax << @r8 << ~@r12 >> +@r9 << $ip & (@rdi) >> @rsp | -@rbp << $ip >> @r12 & 5 >> @rbx & $proc & $buffer | 0y111 >> @r9 & @rdi ^ -@rsi ; @r10 ^ 0x3 >> @rdi >> ~@r12)  { test_statement(0x8D8);  /* This is a not closed comment @rax = -@r8 ^ 0n9 ^ $thread | $teb ;  for (val = 10; @rsi | (@rbp) < @rsi | (@rbp);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = @r10; @rdx $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  /* This is a comment */  This is a not opened comment */ } elsif (@rbp << -0x5 & $teb >> $teb <> 4 << $proc & @r10 | $ip >> 0y10 & -$proc & 0y110 | @r13 ^ @r13) { test_statement(0x1F08); ; }
$error$
$end$
2857
 if (0xB + @r13 << @rbp >> @r13 << ~@rdx | @r8 << $proc >> @rdi >> ~@rsi != $thread + 0n17 | 0xD >> 0x5 & $thread | @r9 & 0y1101)  { test_statement(0x2435);  /* This is a comment */ ; val = @r10 | $proc ;  if (0x10 != 0x10)  { test_statement(0xC8A); } elsif (@r10 <> $teb) { test_statement(0x213); } elsif (@r10((@r10) { test_statement(0x1A36); } else { test_statement(0x159D); } } else { test_statement(0x217);  for (; 0x6)15 ^ $ip | @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
2858
 if (~@rbp << 0y1011 & @r12 >> 12 ^ @rsi >> @rsp ^ 0n6 >> $teb & @rdx ; 0n15 >> ~-@rsi >> @rdx ^ @rsp << @rax ^ @rdx >> ~0n3 ^ @rdx)  { test_statement(0x1039); }
$error$
$end$
2859
 if ($proc | ($teb) << @rbx & ~0y1 >> $teb & @r10 | @rsi & 0n7 & +@r12 ^ $proc ; @r9 + @rbx)  { test_statement(0x1FF9); }
$error$
$end$
2860
 if (@rsp + @rdx << @r11 << $ip & $thread << @r11 >> 0xB >> 20 | @r12 << -$proc >> @rsi >> 0x11 & @rdi >> @rsi ^ @rdi & @r10 & $ip ^ @r10 < @r13 << 0n7 & @r9 << 0y1 ^ @rax >> 0y1000 & 0y10000 >> 0y101)  { test_statement(0x1542);  This is a not opened comment */  // /* This is a comment  } elsif ($ip >> @rsp >> @rdx & $ip & $ip | 15 >> $teb(($thread << $thread & 21 | @r13 >> $ip ^ $buffer ^ @rdx ^ 0n6) { test_statement(0x1C4); } else { test_statement(0xC21); }
$error$
$end$
2861
 if (@rdi + @rdx >> @r9 << @rbp & $proc << (@rdi) ^ @rbp << @rbp & $teb ; @rdi | 0n13 << +@r8 >> $thread)  { test_statement(0x16BD); } else { test_statement(0x1F29); }
$error$
$end$
2862
 if (@rbx << (+17) >> $thread << 0n0 >> $teb >> $proc & @rbx << 0x13 >> +@rbp >> @r11 & $teb & @rdx | $thread >> 14 >> @r13 ^ 0x1 >> (16) & @r12 & 0y101 ^ @rbp | @rsp | +@r10 & $proc | (0n3) | 0x9 | $proc <= @rbx << (+17) >> $thread << 0n0 >> $teb >> $proc & @rbx << 0x13 >> +@rbp >> @r11 & $teb & @rdx | $thread >> 14 >> @r13 ^ 0x1 >> (16) & @r12 & 0y101 ^ @rbp | @rsp | +@r10 & $proc | (0n3) | 0x9 | $proc)  { test_statement(0x24E8);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ($proc) & 10 ^ $teb ^ @rdi = ($proc) & 10 ^ $teb ^ @rdi) ; } elsif (0y10011 >> @rsp | @rax & $buffer ^ @rsi & 0n7 ^ ~@r8 ^ +@r13 ! @rbx) { test_statement(0x20A1);  // /* This is a comment   /* This is a comment */ } else { test_statement(0xCDF);  for (; @rsi ^ $ip(@rsi ^ $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2863
 if (~$thread + 3 >> $buffer << @rbp & 0x13 << 0y1110 <= ~$thread + 3 >> $buffer << @rbp & 0x13 << 0y1110)  { test_statement(0x2CE); } else { test_statement(0x22B2); @rax = 0 ^ ~@rsp ^ $ip ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp > @r12) ; }
$error$
$end$
2864
 if (@r9 | @r11 & 23 | @r12 >> 0n3 & @rdx <> @r12 >> $teb << @r13 >> 0y1101 >> $ip & (@r11) & 0n16)  { test_statement(0x253A); }
$error$
$end$
2865
 if (++@r8 + $buffer >> 0n8 << 0xA & @r13 >> $ip >> @r11 & $ip ^ $proc >> 0n7 ^ $thread >> $proc & (+-@rbx) & ~+@r8 | ~@r12 << $buffer & 22 | @rax >> ~((@r8)) = @rbp + +@r13 >> @rbx >> @rdx >> $ip ^ @r13 << @rbp >> ~@rbp & @r9 >> @r8 & @rbx)  { test_statement(0x3F);  for (val = 10; $thread & @r8 ^ @rax ^ (-((-$buffer))) <= @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif ($thread >> @r10 & @rax >> @rax & @r9 & $buffer ^ @r9 >> 21 >= $ip << @r13 >> @rdi >> @r8 ^ @rbp & @r12 | $ip >> +$buffer & @r11 ^ @rsp | @rbx & @r10) { test_statement(0x21CD); }
$error$
$end$
2866
 if (-@rbp >> @r9 << $proc ^ 23 << @r13 ^ @r10 >> $ip & @r10 & @rbp | ~0xD >> @rdi & @r9 & @r13 ^ 4 >> @r10)@r9 + @r13 << $thread >> @r11 << 0x5 >> $thread >> $ip & -0x0 << @rbx >> $buffer & @r11 & $thread)  { test_statement(0xE24); ; } else { test_statement(0xB62);  break; }
$error$
$end$
2867
 if (@r10 + 0y100 ^ ~0y1011 >> @rbp >> @rdi == @r12 + @rsp)  { test_statement(0x1992);  break; } else { test_statement(0x12F5);  if (@r12 | $thread | @rbx == @r12 | $thread | @rbx)  { test_statement(0x391); } else { test_statement(0xFC3); } }
$error$
$end$
2868
 if (@rax + @rdx & @rsi >> @rax & @rdi >> -@rsp & $buffer & @rdx((@rax + @rdx & @rsi >> @rax & @rdi >> -@rsp & $buffer & @rdx)  { test_statement(0x171F); }
$error$
$end$
2869
 if (5 + @rbp >> @r8 & @rsp << @r12 >> $ip & +$buffer >> @r12 & -~@r13 ^ 0n8 >> @rax | 0n18 << 23 >> $teb & @r12 >> @r13 | 23 >> @rsi | $teb & (0n1) ^ @rdx ; ~@r11 + 0y1100)  { test_statement(0x1303); }
$error$
$end$
2870
 if (@rsp << 0x4 << 0n19 ; @r10 << ~$proc << @rdi >> @rdx)  { test_statement(0x2196); } elsif (@rbp >> $proc & @rsp >> -@r9 & @rbx < @rbp >> $proc & @rsp >> -@r9 & @rbx) { test_statement(0x1C8); } elsif (@rdx >> 0n15 & $teb & $thread ^ $buffer ^ @r12 ^ @r13 | 0x12 & $ip)@rdx >> 0n15 & $teb & $thread ^ $buffer ^ @r12 ^ @r13 | 0x12 & $ip) { test_statement(0xE8D); } elsif (@rdi | @r9 ^ @r10 | ($ip) <> @rdi | @r9 ^ @r10 | ($ip)) { test_statement(0x266B); val = $teb ;  /* This is a comment */ } else { test_statement(0x125F); ;  while  (-@rbx <> 0y101 | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2871
 if (~0x9 << @rsp << @rsi >> @r8 & @rdx & @rsi >> $ip & $proc & @rdx ^ @rsp << @r11 & @rsp & $proc | $buffer << (+@r10) | @rdx & @r8 & @rdx | @rsi & $thread | @r9 | $buffer | 0y110 <= (@r9) >> 0n17 & ~(-~@r13) >> +@rsp >> @rdi & @rsi >> 0y100 ^ @rdi << @rsp | @rbp & @rdi & @rbx & 13 | @rdi)  { test_statement(0x169C); } elsif (~@rsp ^ $teb & $thread <> $ip << 0n3 >> $buffer & @rsp >> 0y1000 & 0xC & $buffer | @rbx >> 10 & -@r11 & @rsp | 10 ^ @rax | ~@r13 ^ @r13 | @r12) { test_statement(0xDE1); ; ; }
$error$
$end$
2872
 if (@rsi << @r9 & -@rsp >> @rdx ^ $ip >> 17 ^ @rdx >> @rsi | @r10 << @r11 & @rbp >> 4 & 0x4 & @rdx ^ @rbx >> 0xB | @r9 >> ~(@r8) & $thread & $thread ^ @rsi ^ +11 ^ $teb | @rsi & @r12 <= @r10 + @r13 << $ip << 5 >> 17 << (@r10) & 0n18 << @r9 >> $proc >> @rsp & 0y1000 | 0n0 << @rax >> $ip >> 0x9 & @rdi >> +@rsp & 0n9 | @rbp >> @r11 & @r13)  { test_statement(0x64B);  for (val = 10; $thread >< @rdx & $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r11 | $buffer >> $teb & $proc & @r8 = @r11 | $buffer >> $teb & $proc & @r8) { test_statement(0x446); }
$error$
$end$
2873
 if (@rsp + ~$buffer & $ip << $proc >> @r13 > $buffer << 11 >> @r9 >> @r11)  { test_statement(0x224B);  for (; $teb ^ ~$thread ^ @rdi))$teb ^ ~$thread ^ @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (0y1100 >> @rbx >> @rbp & 0n6 ^ $ip >> +0n16 & @rdx & @rsi ^ @rdx & @rdi))@rdx >> ~@rbx & @r13) { test_statement(0xFF4);  if (@rsi ^ @rax != @r9 ^ @rax)  { test_statement(0x2422); } elsif (@rbx | 0n7 <= @r12) { test_statement(0x24CA); } elsif (~@r9(@rdx) { test_statement(0x1891); } elsif ($ip <> 0x3) { test_statement(0x53E); } else { test_statement(0x1A6F); } } elsif (@r9 >> @rsp | @r10 = @r9 >> @rsp | @r10) { test_statement(0x12F4); }
$error$
$end$
2874
 if (@rdx << @rbx == +$thread >> ~$thread << $ip >> @r10 >> 0xF | @r13 << @rdi | -+-0y1001 & 0xA | $teb & -@r12 ^ 0y1010 ^ @r12 | @r9 ^ @rax)  { test_statement(0x1DF4);  /* This is a comment */  // /* This is a comment  } elsif (4 << -@rbp ^ @r11 >> @rdx != @rbp >> @rbx & @rdx) { test_statement(0x186);  while  (12 | 0x7 | @r9 <> @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2875
 if ($proc + @rdx >> @r8 << 0y11 >> 0n3 >> ~+$ip & @r9 << @r11 ^ $teb << @rbp < $proc + @rdx >> @r8 << 0y11 >> 0n3 >> ~+$ip & @r9 << @r11 ^ $teb << @rbp)  { test_statement(0x1CEC); ;  /* This is a comment */ ; ; } elsif (@r8 & 0x2 & (@r11) ^ (@r8) >> @r13 ^ @rdi & @rdx != @r8 & 0x2 & (@r11) ^ (@r8) >> @r13 ^ @rdi & @rdx) { test_statement(0xEBF);  for (val = 10; @r13 ^ @rbx | 0n3 | @rax <> @rsp ^ 0x13 | 0n18;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2876
 if (@rsp + @rbx << 4 >> ~@rdx << $teb >> ~$thread >> @rax | @rdi << +$ip >> @r11 & @rbp ^ @r13 ^ $proc & @r10 | 11 | $ip ^ 0y10 <= 4 + @rdi << @r9 & @rbx >> @rax & @rbp >> @r8 | 2 << $proc | +@r11)  { test_statement(0x1B7); } elsif (@r9 << @r9 >> @r10 & @r11 >> 0n12(@r8 << @r12 >> $ip >> @rbx & @r13 ^ $ip >> (+@r9) ^ $proc & @rsp ^ $ip | 0y0 & @rdx) { test_statement(0x2295); }
$error$
$end$
2877
 if (@rsi << 0y1010 << @rdi >> @rbx << @rdx >> @rdi >> @r13 & ~5 << @r8 ^ $teb << 0y101 >> +0n13 & (@rsi) ^ 13 ^ $buffer & @rbx | @r11 ^ $ip >> @rdx & 0y11 | @r8 & @r10 | $buffer >< @rdi << $buffer >> @rsp << @rsp & $teb & 0x2 & $thread)  { test_statement(0x1B27);  /* This is a comment */ } elsif ($proc << 20 & @r13 >> @r8 & 0xF & @rbx ^ @rbp >> @rbp & -$proc ^ @rsi <= @rdi << $buffer >> $ip >> 2 & 7 >> @rsi | $ip ^ @r11 & @rbx ^ $buffer | 0x7 | @rax ^ $proc) { test_statement(0x1101); } elsif ((@r8) >> @r9 | 3 ^ $teb ^ @r10 | +(@r10) | $buffer)-+@rbx & @rdx & @rdi ^ @rax & @rbx ^ $proc) { test_statement(0x1CDA); } elsif (@r10 ^ @r8 ^ @r8((((~@r8)) & @rbx ^ @r12) { test_statement(0x2405); } else { test_statement(0x192A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp | $buffer | @r8 > @rsp | $buffer | @r8) ; }
$error$
$end$
2878
 if (@rax << @r12 << 0y101 | (@r12) >> $proc >> @rax & @r10 >> $buffer ; @rax << @r12 << 0y101 | (@r12) >> $proc >> @rax & @r10 >> $buffer)  { test_statement(0x1BA9);  /* This is a not closed comment } elsif (@rdi >> @rsi >> $ip ^ 0y11 >> @r9 & @r8 ^ @r11 & 0y10010 ^ @rbx ^ @rsi | @r9 >> @rax & ~@r13 & @rbx ^ @rdi ^ @r9 | $ip & (@rsi) >< @rdi >> @rsi >> $ip ^ 0y11 >> @r9 & @r8 ^ @r11 & 0y10010 ^ @rbx ^ @rsi | @r9 >> @rax & ~@r13 & @rbx ^ @rdi ^ @r9 | $ip & (@rsi)) { test_statement(0xCB8);  for (val = @rax; @r11 ^ @r9))+@rdx ^ @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x1555);  /* This is a comment */  while  (@rsp | @r10 >< $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2879
 if (@r13 + 16 << @r13 >> @rdx & @r9 >> @r9 & (@rdx) ^ $ip << @rdi ^ +@rsi & @rsp != @rbp + @rax << 0y1111 | @rbp << @r9)  { test_statement(0x16DD);  /* This is a not closed comment }
$error$
$end$
2880
 if (@r11 << $proc ^ @rdx >> @r10 & (20) ^ @rdi >> $teb | @rdx >> ~0n16 >> 0n14 & @r10 >> @rdx & @r10 >< @r11 << $proc ^ @rdx >> @r10 & (20) ^ @rdi >> $teb | @rdx >> ~0n16 >> 0n14 & @r10 >> @rdx & @r10)  { test_statement(0x42D); } elsif (@rsp << 20 & @rbx ^ @r9 & $thread & @r8 ^ @rax ^ @rbp | @r10 & @rbx & @r9 = 0xC << 0n11 & @rsi >> @r11 & @r9 ^ @rax & @rbx | @rsp >> @r10 ^ -0xD & @r12 ^ 0n17 | 6 & @r12 ^ $buffer | +0y110 ^ @r10 | @r8 | @rbp) { test_statement(0xBD2); } elsif (@rsp & 0y10 & @rbp | @r11 & 0n15 | @rsi | ~@r11 < @rsp & 0y10 & @rbp | @r11 & 0n15 | @rsi | ~@r11) { test_statement(0x24D);  /* This is a not closed comment  This is a not opened comment */ }
$error$
$end$
2881
 if ($thread >> 0y11 << 0y110 >> ~$thread | @rbx << @r13 & @rsp | 0n12 ^ @rdi & ~@r11 ^ @r11 ^ $proc >< $thread >> 0y11 << 0y110 >> ~$thread | @rbx << @r13 & @rsp | 0n12 ^ @rdi & ~@r11 ^ @r11 ^ $proc)  { test_statement(0x2249); ; ; }
$error$
$end$
2882
 if (@r12 << +@r9 & -@r12 << @rbp ^ @rdx << @rsp & $buffer >> $ip ^ @r8 & $teb ^ 21)@rbp + +@rax & @r8 >> @rdi & @rdx & @r10 ^ @r13 >> 0y10011 >> @r12 ^ $buffer >> $teb & @rbx & @rsi ^ @r13 ^ 5 ^ 21 | @r8 ^ 0y11 >> 0n12 & $ip)  { test_statement(0x12AF);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~-($ip) ^ @r9 | @rbp ~-($ip) ^ @r9 | @rbp) ;  for (; $thread <= $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  /* This is a comment */  This is a not opened comment */ } elsif (0x11((@rsp >> $proc >> @rbx) { test_statement(0x23A0); } else { test_statement(0x20D1); }
$error$
$end$
2883
 if (@rsp + ~@r10 & 0y1100 >> -~@r8 >> @rsi & (0y11) ^ (@r8) << ~(@rsp) >> 0xA >> 0n5 | @r12 >> (@r9) >> @rdx & @rbp >> $ip ^ -@rdx >> @r8 & @rax & @rsi ^ $teb ^ @r13 | @rsi >> @rdx & $ip | $proc & @rax | 0y1 ^ @r9 | @r11 @rbx >> @rbp & ~0x0 << @rax >> -$teb & @r13 >> ($proc) & @r10 ^ $ip << @rsp & $thread | 3 >> @r9 >> $buffer & $thread)  { test_statement(0x5D6); } else { test_statement(0xE06); }
$error$
$end$
2884
 if (@r13 ^ @r11 >> $thread & $proc & @rsp ~$thread + 0x9 << @rsi ^ 0n12 << @r9)  { test_statement(0xBBB); } else { test_statement(0xF0E); }
$error$
$end$
2885
 if (0y100 + @r8 << $teb >> 0n0 & +-@r13 << @rbx >> @rsp & (~$ip) ^ $thread & $ip & $ip & @r8($teb << ($teb) >> (@rsi) << @rbp & @rdx << @rbx)  { test_statement(0x16C0); } elsif (@r13 | $proc >> $thread & $thread ^ -@rax & 0y110 > @r8 >> @r12 & @rsp ^ $teb & @r9 ^ @rsp ^ (0y0)) { test_statement(0x21DF); } elsif ($buffer | @rbp <> @r13 >> @rbx & @rbp ^ @r13 & $buffer) { test_statement(0x15E9); }
$error$
$end$
2886
 if ((@r13) + @r8 ^ @rsi & @r8 == -(@rsp) >> 0y1010 >> @rsi >> $thread & @r12 << @rsi)  { test_statement(0x1E8D); } elsif (-4 << @r10 >> +0x13 & $ip >> 0x11 & 11 & @r13 ^ @rbp & 0y1011 | @r12 >> @r12 != -4 << @r10 >> +0x13 & $ip >> 0x11 & 11 & @r13 ^ @rbp & 0y1011 | @r12 >> @r12) { test_statement(0x259C); } elsif (@rbp & (@r9) ^ @rsp ^ (-0xB) +@r11 >> $buffer & $ip & 0xB) { test_statement(0xA24); val = @rdx ^ $ip | ~@r11 | $thread ; } else { test_statement(0x1822); }
$error$
$end$
2887
 if (@rax >> @rbp << $buffer & @r8 << (-$teb) | @rdx >> $proc | @r11 & (+@r8) & +$thread <= @rax << -$proc << $teb ^ @r11 << @rsp >> @rdx | @r8 >> ~@r10)  { test_statement(0x8DF);  // /* This is a comment  } else { test_statement(0x1815); }
$error$
$end$
2888
 if ($thread << @rsp >> @rax << @rdx >> 0y1111 & @r11 << @r13 >> $teb & 0x2 ^ @rsp | @rsi << @r9 >> @r13 > @rbp << $proc >> @rdi & 0n1 >> +-15 ^ 0x4 << 0n14 & 21 | @rbp & $proc ^ @r10 & ~@r13 ^ 0n7 & @rdx ^ @rsp)  { test_statement(0x10B3);  break;  break; ; }
$error$
$end$
2889
 if (@r11 + @rdi << @rax << @rax & $ip << @r8 >> @r9 | @rax >> @rdx)@r11 + @rdi << @rax << @rax & $ip << @r8 >> @r9 | @rax >> @rdx)  { test_statement(0x26EA);  if (@r13 & 6 ^ @rsi < @r13 & 6 ^ @rsi)  { test_statement(0x1801); } elsif (@rsp == $ip) { test_statement(0x140); } elsif (+$thread = -@r12) { test_statement(0xF4C); } elsif ($proc ! $proc) { test_statement(0xBAF); }  break; } else { test_statement(0x114E); }
$error$
$end$
2890
 if (-0x10 + @rbp >> @r13 >> 0n11 | @r9 << @r13 >> (23) >> @r10 & @rax >> +$buffer | $buffer ^ 0x10 & @r10 | @rsi ^ @rsi <> @rbp + $teb ^ @rdi << @r13 | @r9 << $thread >> ~0y1010 | @rax & ~0y1011 & $proc)  { test_statement(0xDB2); } elsif (0y1101 << @r11 >> @rbp & @rbp ^ $teb >> @rsi(@r8 & @r11 >> ~@r9 & @r13) { test_statement(0x16B2);  for (@rax = $thread | -@rdx; @r11 ^ (@rbx) == @r11 ^ (@rbx);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2891
 if (@rsi >> @rbx >> @rbp >> @rbp ^ $proc >> @r10 >> @rsp & 0y111 & $proc & @r10))$teb << $buffer << @r8 >> +0n8 << @r10 ^ 16 ^ $ip & @rbx & +@rbp ^ @r13 & ~+0y1011 | @rdx ^ 0y100 >> 0y10011)  { test_statement(0x23E2); } else { test_statement(0x1DC6);  This is a not opened comment */ }
$error$
$end$
2892
 if (~@rsi & $teb | @rbp >> @r8 >> @rdx & 1 & $ip ^ @r10 >> @r12 ^ (@rsp) & 0n15 ; @rsp + @r12 << @r11 ^ $teb >> @rsp & $ip & @rbp)  { test_statement(0x231B);  break; } elsif (0n3 & @r12 ^ +$ip | $ip >> $buffer & @rsi & @rdi | (0y10) ^ 6 | ~@rsp | ~@rbp | 0n8 >= $ip << @rsi & @rdi | $teb & -@rbp ^ @rax ^ $thread ^ 0y1110 | $proc ^ $ip ^ @rsi) { test_statement(0x8A4);  /* This is a comment */ }
$error$
$end$
2893
 if (@r12 + $teb & 3 << 0n2 ^ @r13 << 0y10001 ^ @rbx | @rsi << (@rbx) >> ++$proc & ~@r8 | @rsp >> 0xF & @rax & 0y101 | @rbx ^ @r13 ^ $proc)0x4 << $buffer << 14 >> 0y1100 >> @rdi ^ @rbp << @rdx & @rbx & @r10 | @r13 << +$ip & @r13 >> $ip & -@rdi & $ip ^ $teb)  { test_statement(0xC1D); } elsif (@rdi << $thread ^ 0x11 & $thread & @r10 | @rax >> 0y0 & @r9 | 2 <= @r9 >> @rsp & $thread & @rax | 0x1 >> $thread & @r13 & (@r11) | @r13 | @rbp ^ $ip) { test_statement(0x2700); } elsif (0xD & @r10 & +@r13 | @r9 ^ @rax <> $proc >> 6 & 0xF & +0n19 | $teb ^ $ip | @rbx ^ @rbp) { test_statement(0x2270); } elsif ($proc & 2 ^ $buffer ^ @rsp | @r11 ^ $thread >= @r12 | $thread | @rdx | @rbx) { test_statement(0x24B0); } elsif (@rbp ^ $buffer | $proc >= @rsi ^ 3) { test_statement(0x268A);  /* This is a comment */ } elsif ($buffer | $buffer))@rdi | (@rbx)) { test_statement(0x20FE);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 22))22) ;  if (($proc) >< @r13)  { test_statement(0x2396); } ; } elsif ($buffer))$buffer) { test_statement(0x9E);  /* This is a comment */  This is a not opened comment */ } elsif (@rdx == @rbp) { test_statement(0x1A32); } elsif (@r10(@rax) { test_statement(0x15EF); }
$error$
$end$
2894
 if (@r8 << @rdi @rdi + @rbp ^ @rsp ^ $thread >> 14 ^ @rdx | @rsi >> @rsi >> @rdi & 0xC >> $buffer & @r12)  { test_statement(0xA8C); } else { test_statement(0x1221); }
$error$
$end$
2895
 if (-@r10 >> $ip << @r11(@rbp + 0n13 << @rsp << ~@r12 >> @rsi | @r11 >> ~@rdx | @r13 >> @r8 & $buffer ^ -11 ^ @r8 ^ @rsp | @r8 & @rbx)  { test_statement(0x20E8); } elsif (@rbx << @rdx >> @r9 >> @rdi != @rbx << @rdx >> @r9 >> @rdi) { test_statement(0x203E); } else { test_statement(0xA76); }
$error$
$end$
2896
 if ($teb & @r8 ^ 0n6 << @r9 >> $ip $teb & @r8 ^ 0n6 << @r9 >> $ip)  { test_statement(0x11CA);  This is a not opened comment */  while  (@r13 ^ @r13 | @r11 | $proc)@rsp ^ 0y10010 | 16)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n2 << +@rbx & @r9 & @r12 & @r13 <> 0n2 << +@rbx & @r9 & @r12 & @r13) { test_statement(0xA8F); }
$error$
$end$
2897
 if (@r11 << @rbp << @r13 ^ @r8 << @r8 & $thread & -$proc ^ 7 & @rax 0x6)  { test_statement(0x1A73); }
$error$
$end$
2898
 if (@rbx + @rdx << @rsi >> $teb ^ @r8 << @r9 | @rbx << 0y1111 >> @rsi <> ~($buffer) + 0y1000 << @r13 | 0n17 & $ip ^ 0x1 >> @rdx ^ 0y1110 & @rbx)  { test_statement(0x12D7);  // /* This is a comment  } elsif ($proc & @rbx & @rbx & +$ip < $proc & @rbx & @rbx & +$ip) { test_statement(0x9B3);  /* This is a comment */  // /* This is a comment  }
$error$
$end$
2899
 if (@r11 >> @r10 << 0y1111 & ~@r11 & ~@rbp >> @rdx & $teb == 0n0 << $ip >> @rsp ^ @rdx << @rbp >> $teb >> $ip ^ $thread >> $ip)  { test_statement(0xFA7); } elsif (6 == ~0y100 << ~$teb >> @r10 >> @r9 | $thread ^ @r13 ^ $ip ^ @rax | 21 ^ @r8 | 17 | -@r12) { test_statement(0x71C);  // /* This is a comment  }
$error$
$end$
2900
 if (@r13 + @rdi << -@r10 << @r9 >> @r8 >> @rsi & $ip << $teb >> -@rsp >> @rsp ! @rdi << @rdi << @r9 >> @rsp & @r8 << @r10 >> @r13 | $thread >> $teb & @r10 ^ @r10 | @rax >> 0y10000 & 0y10011)  { test_statement(0x881);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc | @r13 | @rbx | $thread != @r11 ^ +@r13) ; } elsif (@r8 ! @rbp << @r11 & @r10 >> $thread ^ @rsp >> @r10 & @rdx & @rdx ^ 16 & @r9 | $proc ^ (@rdi) ^ 0x7 | -$ip & $proc | @rsp) { test_statement(0x433); } elsif (2 & $buffer & @rsp ^ @rdi & @r8 ^ $thread))-~@rbx & @rdi & 13) { test_statement(0xEAA); } elsif (@rbp ^ 1 > @rbp ^ 1) { test_statement(0x22E);  // /* This is a comment  } elsif ($buffer | $proc | @rbx == 0 ^ $buffer | $proc) { test_statement(0x2272);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer(@rsi) ; } elsif (0xC +(@rsi) | @r9) { test_statement(0xEFC);  if ($buffer((@rsp)  { test_statement(0x10A1); }  /* This is a not closed comment  /* This is a comment */ } elsif (0y110 < 0y110) { test_statement(0x2529);  for (; @rsi))($buffer);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx)@r13) { test_statement(0x189C); } else { test_statement(0x16B4); }
$error$
$end$
2901
 if (@r13 + 0n11 << @rbx & $teb >> $thread ^ $ip << $thread & $proc ^ @r10 >> $proc | @rax ^ 1 ^ @rax & 0x5 ^ @r9 | @rsi | @r9 ^ @rsi ^ @rsp <> $ip + 0n5 >> $teb | @r10 << 0y10001 >> @rdi >> @rsi)  { test_statement(0x170F); }
$error$
$end$
2902
 if (0n16 + @r10 ^ @r10 << 0n5 <= $thread + $buffer ^ $proc)  { test_statement(0x3D4); } else { test_statement(0x1E17);  for (val = 10; @r10 ^ @rdi >= @r10 ^ @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rbp | @rax)@rdx)  { test_statement(0x690); } elsif (@rdx <= 0n5) { test_statement(0x10EF); }  while  (+~@rdx ! @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2903
 if ($teb << -$ip & @r13 << @r12 & @r10 >> $thread & (@r9) & @r12 ^ @r12 >> @rbx & 0x1 >> @rsi & @rbp ! -@r11 << @rax >> @rbx << 0xC >> +@rax >> -@rbx | @rsp >> $buffer)  { test_statement(0x166B);  /* This is a not closed comment ;  /* This is a not closed comment } elsif (+(@rdi) << (@r8) & 0x3 >> $buffer | 3 | $buffer & 0y10 | $buffer ^ 0x5 | (@rdi) | @rsi >= +23 << @r9 >> @rsp & 0n11 ^ ~+@rax >> 0n5 & @rsi | @r10 | $ip ^ @r11 | $thread ^ $proc | @rdx) { test_statement(0x1A26);  /* This is a not closed comment  This is a not opened comment */ } elsif ($ip & $proc & @rsi | @r9 & +@r12 | 0n7 >= @r10 >> 0n17 ^ 0x6 & +$proc | ($proc) | @r9 ^ 5 | $thread | @rax) { test_statement(0x2021); } elsif ($ip ^ @rsi | @r11 = $ip ^ @rsi | @r11) { test_statement(0x96E); } else { test_statement(0x17F);  break;  /* This is a not closed comment }
$error$
$end$
2904
 if (0x5 + @rax & @r9 << @r11 ^ $teb << @r13 >> $teb >> @r13 & @rbx ^ @rdx & @rbp & 0xD ^ 0y100 | 17 >> $thread >> @r10 & 0y101 >> +@rdx ^ 0y0 & 0xF & @r8 | @rax & @rbx))0x5 + @rax & @r9 << @r11 ^ $teb << @r13 >> $teb >> @r13 & @rbx ^ @rdx & @rbp & 0xD ^ 0y100 | 17 >> $thread >> @r10 & 0y101 >> +@rdx ^ 0y0 & 0xF & @r8 | @rax & @rbx)  { test_statement(0x10DC); } elsif (@r13 << $thread & @rsp >> $thread | $ip & +@r12 & 0n15 ^ $ip ^ @r11 ^ (@rbx) $ip << $thread >> $proc & 0xE & @rdx ^ @rsp >> @rbp & @rdx & $proc ^ 0y10010 ^ @r9 ^ @rbx | @rbx >> @r11 ^ @rbx) { test_statement(0x53E);  for (@rax = 0n3 ^ @rax; -@r10 | @rbp >= -@r10 | @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip & $buffer & @r12 ^ @r12 & @r8 ! @rsp >> @r10 ^ 0x3) { test_statement(0xCAC); } else { test_statement(0xCC6); }
$error$
$end$
2905
 if ($proc << @r11 >> @rax ^ @rbp << (-@rax) >> @rax >> $ip & @r13 >> @rsp ^ @rdx >> @rbx & @rdi ^ @rdx ^ @r11 ^ ~$ip <> $proc << @r11 >> @rax ^ @rbp << (-@rax) >> @rax >> $ip & @r13 >> @rsp ^ @rdx >> @rbx & @rdi ^ @rdx ^ @r11 ^ ~$ip)  { test_statement(0x2EF); } elsif (@r11 << $buffer & @rdx >> $proc & @r10 <> ~~@rbp ^ @rsi >> $ip ^ @r8 ^ @r11 ^ @rdi | @rdx | 0n0) { test_statement(0x7D8); }
$error$
$end$
2906
 if (15 << @r10 >> -$proc >> 20 >> 0y1110 & ~@rsi << (0n17) & @rsp ; @r8 + $ip & $proc & $proc >> @rbx & +@r11 & 0n6)  { test_statement(0x8A4);  while  (~@rdx & 0x2 == $proc ^ @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (+(@rsp) << @rsi >> -@rsp & 0y0 & $teb & ++0xF ^ 4 >> @rbx & 0y1010 | (@r11) | @rdx & @rbx < +(@rsp) << @rsi >> -@rsp & 0y0 & $teb & ++0xF ^ 4 >> @rbx & 0y1010 | (@r11) | @rdx & @rbx) { test_statement(0x20B5); } elsif (@rax ^ @rbp & @rdx == @r13) { test_statement(0x2496); } elsif (0x12 & @rdx ^ -0xF | 0y1000 > ~@rax ^ $proc ^ 0xA) { test_statement(0x148B); } elsif (@r10 ^ $teb >< @r10 ^ $teb) { test_statement(0x736);  break;  /* This is a not closed comment } elsif ($teb($teb) { test_statement(0xCDC); } elsif (@rsi > @rsi) { test_statement(0x262D);  if ($buffer > $buffer)  { test_statement(0x2169); } } else { test_statement(0x21FD);  break; }
$error$
$end$
2907
 if (@r8 >> 0y10011 << @rbp & +-@r11 << (@rsp) | @r11 >> $proc & 0n17 & $teb & $thread ^ @rdx | @rbx & @rsi ^ @rbp ^ 0xC | @r9 | @rsp ^ @r9 | 15 != @r8 >> 0y10011 << @rbp & +-@r11 << (@rsp) | @r11 >> $proc & 0n17 & $teb & $thread ^ @rdx | @rbx & @rsi ^ @rbp ^ 0xC | @r9 | @rsp ^ @r9 | 15)  { test_statement(0x100F);  /* This is a not closed comment  /* This is a comment */ } else { test_statement(0x2336); ; @rax = +@r9 | 12 ;  break; }
$error$
$end$
2908
 if (15 + $proc >> @r9 << $proc >> $buffer & $ip >> 0x9 >> @r9 ^ $ip << @r13 & @r12 ^ 22 >> @rdx & (@rbx) & $proc ^ @r8 != @r11 & (-$proc) << 13 ^ @rsp)  { test_statement(0x150D); } else { test_statement(0x24B5); }
$error$
$end$
2909
 if ($proc << @rdx << @r10 >> @r8 << $proc | (@r10) << ~@r11 ^ @rdx & -~@r11 | @r9 & @r13 ^ ~@r13 ; (@r12) << @rax & @rdi << 6 >> @rdx | $buffer >> 12 & ~@rbx & 0n3 ^ @rbx ^ @r12 & @rax | $thread >> @r9)  { test_statement(0xA); } elsif ($teb << @r10 >> @r11 & @r13 >> @rdx ^ ~@rdi & $ip | @rsp >> @r8 | +$thread ^ -@r10 ^ @r9 | ~@rdi ! $teb << @r10 >> @r11 & @r13 >> @rdx ^ ~@rdi & $ip | @rsp >> @r8 | +$thread ^ -@r10 ^ @r9 | ~@rdi) { test_statement(0x1E7C); } elsif (+5 >> @r10 | -0xD ! 0y10 ^ @r10 | $thread | @r8 ^ 20 | $buffer | (~(+@r12))) { test_statement(0x1F92); } elsif (1 ^ $proc | $teb ^ @rax <= @rbx & @rsi) { test_statement(0x147A); } elsif ($proc ^ @rbp @r10) { test_statement(0x17D2); }
$error$
$end$
2910
 if (@rax + $ip << $teb << 0xC >> @r13 >> +$thread ^ @rax << @r11 >> 7 & @rdi & 13 > 0y10 + @rsi << @r13 << $teb & @rsp ^ ~$ip >> @r10 >> @r8)  { test_statement(0x1247); } elsif (3 << ~@rbx >> $buffer >> @r12 & $proc ^ @r10 >> ~$teb ^ @r13 ^ @rax ^ 5 | $teb & @r8 & ~@r10 ^ 0n0 ^ @rsi >= 3 << ~@rbx >> $buffer >> @r12 & $proc ^ @r10 >> ~$teb ^ @r13 ^ @rax ^ 5 | $teb & @r8 & ~@r10 ^ 0n0 ^ @rsi) { test_statement(0xC5B);  /* This is a comment */  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y10011 0y10011) ;  // /* This is a comment  } else { test_statement(0x25D0); }
$error$
$end$
2911
 if (@r8 >> @r8 >> @r9 & +@rdx << @r11 >> @rsp | +-$thread ^ @r12 >> @rsi ; @r8 >> @r8 >> @r9 & +@rdx << @r11 >> @rsp | +-$thread ^ @r12 >> @rsi)  { test_statement(0x4D8);  // /* This is a comment  } elsif ($buffer << 0y10 >> @r13 >> 0x9 & +0n9 ^ $thread >> @rbx > $buffer << 0y10 >> @r13 >> 0x9 & +0n9 ^ $thread >> @rbx) { test_statement(0x67B);  if (+$teb ^ $proc | @rdi | @rdx ! @rdx)  { test_statement(0x137C); } elsif (@rax | @rbx 0xC | ~0x11) { test_statement(0x1904); } elsif (@r11 >< @r11) { test_statement(0x10C3); } elsif (0x10 != @r11) { test_statement(0x1528); } elsif ($proc)0n2) { test_statement(0x1CA); } else { test_statement(0xE78); } } elsif (~(@rax) | @r13 & @rdx ^ $ip ^ 4 | @rbx < ~(@rax) | @r13 & @rdx ^ $ip ^ 4 | @rbx) { test_statement(0x1E1B);  This is a not opened comment */  // /* This is a comment  }
$error$
$end$
2912
 if (@r10 >> @rax ^ 0 >> 0x10 & @rdi >> $ip & $teb | $buffer << @r12 ^ ~@rbx >> @rsp((@r13) + ~0n0 & ~$thread & @rsp >> ~$teb)  { test_statement(0xB0E); } elsif (15 ^ @r10 >> (@r13) & @rdx & 0n2 | @rdx & $buffer >< @rsi << 0y1111 & @rdx & @r13 ^ $proc & @rdx & @rbp ^ $proc & @rsp) { test_statement(0xC73);  /* This is a comment */ } else { test_statement(0xA26);  for (@rax = @rdx ^ @rax | $teb | @rbp; @r8 | ~$ip | $thread >< @r8 | ~$ip | $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 != @r11) ; }
$error$
$end$
2913
 if (@r10 + $thread | @r13 << @r10 >> @r8 >> @r11 ^ @r12 >> @rsp <= @r10 + $thread | @r13 << @r10 >> @r8 >> @r11 ^ @r12 >> @rsp)  { test_statement(0x2339); } elsif ((0y111) << --0x9 & $buffer != @rax >> @rsi) { test_statement(0x1D8);  break; ;  /* This is a comment */  /* This is a comment */ } else { test_statement(0x393); }
$error$
$end$
2914
 if ($teb + @r13 & $proc >> @rdx >> 0x13 & @rdx & 0xC | -$proc & @rdi >> -@rbp & @r8 & -@r9 <> $teb + @r13 & $proc >> @rdx >> 0x13 & @rdx & 0xC | -$proc & @rdi >> -@rbp & @r8 & -@r9)  { test_statement(0x9FF); } else { test_statement(0x1C23); }
$error$
$end$
2915
 if (+@rdi << @rdi << @r12 ^ $teb >> @r9 >> @rbp ^ $teb | @r13 & $proc ^ @r9 >> @r9 ^ ~@rsp & @rax ^ @rax((+@rdi << @rdi << @r12 ^ $teb >> @r9 >> @rbp ^ $teb | @r13 & $proc ^ @r9 >> @r9 ^ ~@rsp & @rax ^ @rax)  { test_statement(0x1D68);  for (val = 10; @r13 & $proc | @rdx | @rdi >< @rbx & @r13 | @r12 | ~0n10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = 0y10001 & $ip | @r13 ^ @rdi ; } elsif (@r9 << ($buffer) ^ @rbx >> 0n10 & @rsp ^ @rsi & @rsp >= ($buffer) << 0n7 >> -@r13 >> @r8 & @rbp) { test_statement(0x1E92);  for (val = 10; @rsi ^ 0n2 ; $ip ^ 0y10000;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rdx | @r11 <= 6 | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
2916
 if (22 + @r11 << @r13 << ~$thread | @rsi << ~@r10 & 0xE >> @rsi & $thread ^ $ip | $proc & @r11 & $buffer ! 0n8 << @rsi | @r8 >> $buffer | @r12 >> @r13 ^ 1 ^ ((@rsp)))  { test_statement(0x18A3);  /* This is a not closed comment }
$error$
$end$
2917
 if ($thread << @r10 << @r11 >> +$ip << +$proc & $ip > $thread + @rdx << 20 << ~$proc)  { test_statement(0x1F); } elsif (+@rsi << @rbp >> @r8 | (~@rdx) & @r8 & @rdx | (0y1101)(~@rsp << @r8 >> $ip & $proc & @r13 & @rdx ^ @rax & +20 & @r10) { test_statement(0x31B);  /* This is a comment */  if (0y1000((@r9 | ~@rdi)  { test_statement(0x12BF); } } else { test_statement(0xBA9); }
$error$
$end$
2918
 if (@r8 + @r13 << 0n1 >> (@rsi) | @rdi << $proc & 0x8 >> @r9 | 0y1000 >> @r10 ^ @r12 & @r8 ^ @rbp ^ @rbx))@r8 + @r13 << 0n1 >> (@rsi) | @rdi << $proc & 0x8 >> @r9 | 0y1000 >> @r10 ^ @r12 & @r8 ^ @rbp ^ @rbx)  { test_statement(0x1B82);  // /* This is a comment   /* This is a not closed comment ; } else { test_statement(0xD46); }
$error$
$end$
2919
 if ($ip + @r8 << @rbp << @r10 & @r13 << +@r13 & $proc & 14 & @r11 | @r8 << $thread & ~$proc & $ip >< @r8 << @r8 >> ($thread) << @rsi & @r8 & @rdx & ~@rax & $buffer ^ 0n18 ^ $buffer >> $thread ^ ~@rbp & @rbp | 0x5)  { test_statement(0x1B6F); } else { test_statement(0x851); }
$error$
$end$
2920
 if ($thread << @r13 << @r13 | @rdx << @r8 >> $buffer | @r9 >> -@rbp & $thread & 0xE ^ -@rbp | @rsp & 0y1101 ^ @rdx ^ 0x3 | 0n18 >= $thread << @r13 << @r13 | @rdx << @r8 >> $buffer | @r9 >> -@rbp & $thread & 0xE ^ -@rbp | @rsp & 0y1101 ^ @rdx ^ 0x3 | 0n18)  { test_statement(0x2B8);  for (; @r12 & $ip | @r13 ^ @r12 < @rbp ^ $proc ^ $thread | $ip | -$ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (0n7 ^ ~@rsi ! @rdx ^ 0xB)  { test_statement(0xCE2); } elsif ($buffer <= $buffer) { test_statement(0xD44); } }
$error$
$end$
2921
 if (0y1000 << @rbx >> @rdi | @rbx >> $ip >> @r12 & $proc >> @r13 < @rbx + $ip << @rbp << @rsi >> $thread & @rbx >> @r10 >> @r11 | @rsi << $teb >> 0n18 ^ @rbx & @r9 ^ @r8 | @r12 & 0y1011 ^ 0y1110 & @rax ^ $teb ^ $teb)  { test_statement(0x1E63); } elsif ($thread <= @r9 << $thread >> @rdi >> @r11 & @rbx | 0n7 >> @r11 & (0xD)) { test_statement(0x87F); ; } else { test_statement(0x2096); }
$error$
$end$
2922
 if (@r13 + ~13 << @r13 << @rdx & @r12 >> @rsp >> ~@rsi | @r9 << @rbx >> @r12 ^ @rbp >> @rbp & @r12 & @r11 = @rdi + @r12 << 0y101 >> -@rsp << (@rax) >> @r13 >> 0y1 ^ @r9 << @r8 & @r12 >> @r9 | +0x5 << $proc)  { test_statement(0x1A49);  // /* This is a comment  ;  if (~@r10 = $proc)  { test_statement(0x1680); } } elsif ($teb << $teb >> @r12 >> @rax ^ @rdx >> 0y1110 & $buffer & 10 ^ 0xC ! $teb << $teb >> @r12 >> @rax ^ @rdx >> 0y1110 & $buffer & 10 ^ 0xC) { test_statement(0x26EF); } elsif (@r11 | $teb & @r10 ^ @r12 <> @r12 >> 0n3 & 0y10001 & +$teb) { test_statement(0x47B); ; } elsif (0y1010 & @r13 ^ @r8 ^ @rdi < 0x1 | 5 | @rbx | @r11) { test_statement(0x1A07);  for (; $buffer(@r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x3C4); }
$error$
$end$
2923
 if (@r13 + +0x8 | ~@r12 << $teb & $proc & @rdx & @r9 ^ @rdi >> @r11 > (@rdx) + 5 & 0x2 >> @r8 & @r11 ^ @rsp << @rbp | $buffer >> @rdi >> 0y111 & 21)  { test_statement(0x1370);  /* This is a not closed comment }
$error$
$end$
2924
 if (@r8 << @r13 ^ @rdx >> +@rax >> @r13 & @rdi | @r11 != @r8 << @r13 ^ @rdx >> +@rax >> @r13 & @rdi | @r11)  { test_statement(0x257D); }
$error$
$end$
2925
 if (@rsp + $teb & @rbp << (@rsi) >> $thread >> @rbp | 0y10011 ^ $teb >> $buffer ; @r13 << 12 >> $thread >> @r9 & -$buffer >> $proc ^ -@r13 >> $ip >> @r9 | $proc >> ($proc) & 0y1100 & $buffer)  { test_statement(0xA75); } elsif (@r8 >> @rbx((@r11 >> 20 ^ @r12 >> 0n19 ^ (-@r9) & @rbp | ~$teb & @rdi & $proc ^ @r13 & @r11) { test_statement(0x2240);  /* This is a comment */ ; @rax = -0y111 | ~@rbx ; } elsif ($teb >> @rdi))$teb >> @rdi) { test_statement(0x180D); } elsif ($ip ^ +@r8 < $ip ^ +@r8) { test_statement(0x1166);  for (; +@r9 != +@r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb | @r10 <> 16 ^ @rbx | @rdi) { test_statement(0xB27); } elsif (@r11 | $buffer ; @r11 | $buffer) { test_statement(0x1E54); }
$error$
$end$
2926
 if (@r12 << $proc >> @rsp & @rsp << @r12 >> @rsp & ~@r12 | @r9 << @r12 & @rdi >> @rbx & -$ip ^ @rsp >> @rdx & @rax | @r11 >> @rbx & 0n14 & 0xD ^ @r11 & $buffer((@r12 << $proc >> @rsp & @rsp << @r12 >> @rsp & ~@r12 | @r9 << @r12 & @rdi >> @rbx & -$ip ^ @rsp >> @rdx & @rax | @r11 >> @rbx & 0n14 & 0xD ^ @r11 & $buffer)  { test_statement(0x21D3);  /* This is a comment */ ; } elsif (~@rbx ^ @rdx ^ @rbp ^ @rax | @rax >> $proc & @rsi ^ @r11 & 0y1110 ^ 10 ^ 0n16 | -@rsi | @r11 ^ @rbx(@r13 >> (0x6) & $proc >> @r10 & ~0y1010 | @r11 & @rbx & @r11 | @rsp & @r13) { test_statement(0x1E7B);  for (val = 10; 0y1000 ^ $ip | @r12 == (@rdx) ^ @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ((+@rbx) & @rsi & $proc ^ @rdx & ~$thread ^ $ip ^ @rdi = @rsp >> @rsp ^ +$ip ^ @rsp ^ @rbx | @rbp | (@rbx)) { test_statement(0x1F5D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x0))0x0) ;  while  ($ip))$ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12 & 2 ^ $teb ^ @r9))$ip ^ $proc) { test_statement(0x267C); ; } elsif (@r12 ^ @rax | 21 | @rsp <= @r12 ^ @rax | 21 | @rsp) { test_statement(0x10B8); ; } elsif (@r12 >= $ip) { test_statement(0x74E); } elsif (@r9))@r13) { test_statement(0x1575); } else { test_statement(0x112A);  for (@rax = $teb ^ @rax; $thread((@rdx | @r12 | (6);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2927
 if ($ip + 0x1 >> 0y100 << @r11 >> $buffer >> @rsi ^ ~$proc << 0n5 & @r9 >> ~$buffer & +$thread & 0n6((@r13 << @rbx)  { test_statement(0x1711);  /* This is a comment */ } elsif (@rbx >> @rsp >> @r9 & @rax & @r8 & ~$proc < @rbx >> @rsp >> @r9 & @rax & @r8 & ~$proc) { test_statement(0x3B9);  if (@rdi ^ @rbp >< $proc | 0y11 | $buffer)  { test_statement(0x1513); } else { test_statement(0x23B); } }
$error$
$end$
2928
 if (@r8 << @rsp << @r8 & (0x10) >> $teb >> ~@rsp & @rbp >> @r8 ^ @rdi & -$thread >> (@r10) & @rdi & @rbp ^ $proc & @rsi ^ $proc <= $proc + @rax ^ @r11 | @rdi & -@rbp >> 0xB & ~@rbx ^ @r10 & $teb & ~$thread ^ ($buffer))  { test_statement(0xF9); } else { test_statement(0x12D1); }
$error$
$end$
2929
 if ((@r10))@rdx + 0n13 >> @rdi << 0x10 & @rbp << @r12 >> @r8 >> @r12 & @rdx)  { test_statement(0x268A); } elsif (@r8 << @rsi >> $buffer | @r11 >> @rbp & 0n5 ^ @rax & 11 | @r8 & 0y1 | $thread ^ @rsi | @rsp | (@r8) > $proc >> $buffer >> $buffer & @r8 | $buffer >> +@r11 ^ 3 & 0x5 | @rdx & $ip ^ +~~@rdi) { test_statement(0x92F); } elsif ($thread & @rsi = 10 >> -@rsi) { test_statement(0x10C4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax < 0y10 | $proc) ; } elsif ($thread & 0n10 ; @rsp ^ 0n12) { test_statement(0x9BB); } else { test_statement(0x230D); }
$error$
$end$
2930
 if (~@rbx >> @rsi >> @rdi @r13 >> @r8 << @r12 & $teb ^ @r12 & (@r9))  { test_statement(0x1CF2);  if (-0n19 ^ @r12(-0n19 ^ @r12)  { test_statement(0x94F); } elsif (($teb) <> ($teb)) { test_statement(0x1D43); }  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 > @r10 | 0x2) ;  for (val = 10; @rbp < @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsi >> @rbp & 0n2 & @r11 & 0x11 | $teb | @rdx ^ +@rsp <= @r8 << @rsp >> $ip >> @rdx & @rax >> @rsp & $buffer & @rbp ^ $ip & @rbp & @r10 ^ @rbp & $buffer ^ $thread ^ $ip | @r11 | @rsi & @rdi ^ $buffer) { test_statement(0x947); } else { test_statement(0xB);  This is a not opened comment */ }
$error$
$end$
2931
 if (@rax << 0xE >> @r12 ^ @rsi << $thread >> $thread ^ 3 & 0y100 & @rax = @rax << 0xE >> @r12 ^ @rsi << $thread >> $thread ^ 3 & 0y100 & @rax)  { test_statement(0x139B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ^ @r10 ^ @r8 | 22 ^ @r13((@rdi & @rdi | $thread | ~@rsi) ;  This is a not opened comment */  // /* This is a comment   // /* This is a comment   This is a not opened comment */ ; val = (@r10) ;  for (; +0x4((@rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1EA6);  while  ($thread ^ $ip | (@rax) == @rdi | (@rdx))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2932
 if (@r8 + @rdx $ip + +0x0 >> $teb << @rsp & @r11 << @r11 >> $teb ^ 0n8 << @rbx >> @r10 & $thread ^ +$proc & @r11 ^ @r10 ^ @rdi | @rsi ^ @rsp >> @r13 & @r8 ^ @r9)  { test_statement(0x1456);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 | @rbx ^ @r10 > @r9 | @rbx ^ @r10) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@r9 ^ -0x9 = -@r9 ^ -0x9) ; }
$error$
$end$
2933
 if ($ip << $buffer << @rbp >> @r12 << $proc >> $buffer & @r13 << @r13 >> @r11 >> ~$proc ^ +@r9 >> @r9 >> @rbx == $ip << $buffer << @rbp >> @r12 << $proc >> $buffer & @r13 << @r13 >> @r11 >> ~$proc ^ +@r9 >> @r9 >> @rbx)  { test_statement(0xC6F);  while  (+@rdi ^ @rdi != +@rdi ^ @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (@r10 & @r10 >> $proc & $ip <> @r10 & @r10 >> $proc & $ip) { test_statement(0x162); }
$error$
$end$
2934
 if (@rdi >> @r10 << $thread <= ~$thread + 0y111 << @r8 << @r12 | @rdx << @rsp)  { test_statement(0x19D); } else { test_statement(0x14A6); }
$error$
$end$
2935
 if (@r13 >> @r9 << $teb & @r9 << @rdi >> 22 ^ +$thread & @rdi >> @r8 & @rbx & @r8 | ($buffer) << @rbx >> @rsp >> @r13 & @rsi >> $teb ^ @rdx | +@r9 >> @rbp ^ @r13 & $thread ^ 0n5 ^ @r9 ~0n5 << @r10 << @r12 >> $proc << 6 & @r10 << (@rdi) & +@r13 | -(@rbp) << -@rax)  { test_statement(0x75E);  /* This is a not closed comment } elsif (@rdx >> $ip >> $ip & $thread >> 4 ^ ($ip) & (~$thread) & -@r9 @rdx >> @r11) { test_statement(0x2EA); } elsif (@rsp >> @rsp <> @r9 >> 0y1011) { test_statement(0xADA); } elsif ($ip != $ip) { test_statement(0x1360); }
$error$
$end$
2936
 if ($teb + 0n0 >> @rax & ~0xF ^ @r11 ^ 0n18 | 6 << 22 & 0xB ^ 14 >> @r10 & @r10 | @rsp & @r13 ^ $buffer & @r9 | $buffer & @rax ^ @rdx | 0n4 ^ @rbp | @r13 | (@rbx) @r8 | @rbp >> 15)  { test_statement(0x10E9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread & $ip ^ $proc $teb & $ip | @rax | ~1 | @r11) ; } elsif (-@rdi << 0n7 >> @rdx ^ $proc >> $buffer <> @r11 >> @r8 & $teb >> $buffer & 0n8 & 6 ^ @r12 >> @rsp & @rdi ^ 0n1 & $teb) { test_statement(0x201E); }
$error$
$end$
2937
 if (0x12 + 3 << 0xB << @r10 >> @r10 ! 0x12 + 3 << 0xB << @r10 >> @r10)  { test_statement(0xE14);  /* This is a not closed comment @rax = (@rbp) ^ @r13 ^ $thread | $ip ; } elsif ($proc >> @r8 >> 14 & 17 >> @r12 & $buffer | @rbp & $thread & @r12 >< 0y0 << $proc | @r9 >> $proc ^ (@r12) | +$teb & +0n17 | ~$buffer | @rsi | @r13) { test_statement(0x747); } elsif ($thread >> ~@rbp ^ @rbx | @rdi | @r12 ^ $ip | $teb ; $thread >> ~@rbp ^ @rbx | @rdi | @r12 ^ $ip | $teb) { test_statement(0x1EBF);  for (val = 10; -@r13 | $teb >= @r11 | @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (5($proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y10001 > @rbp & @r9 ^ $proc ^ 0x5) { test_statement(0x171);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip(($buffer) ; } elsif ($ip ^ @rbx | @rbp < $ip ^ @rbx | @rbp) { test_statement(0x26D9); } elsif (@rsp | 0x4 != @rsp | 0x4) { test_statement(0x2E7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 == @r8) ;  while  (+0n19 <> +0n19)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0y1100((@rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x156C);  for (val = 10; @rdx ^ @r13 | @r13 ! @r8 ^ @r10 | +@rbx | @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2938
 if (@r12 << $ip << @r12 & +@rbx >> $ip ^ $buffer | @r11 >> @rbp >> @rsi ^ @rax ^ -$teb | @rbp @rbp + @r10 << 0x7 << 0y1011 & ~@rdx << @r9)  { test_statement(0xF95); } else { test_statement(0x1D77);  while  (15 ^ @rsi ! 15 ^ @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
2939
 if ($proc + $ip & +0n13 & @r8 & 0n7 <> $proc + $ip & +0n13 & @r8 & 0n7)  { test_statement(0x2550);  // /* This is a comment  } elsif (++$ip << @r8(@rax << +@rsi >> 0y11 & 0x8 & $buffer & @rbp ^ @r13 & 0y10010 & 0x9 ^ +@rdx & @rbx | @rsi) { test_statement(0x1834); }
$error$
$end$
2940
 if ($buffer + @rax >> @r11 >> (@r9) & 0x12 ^ @rsi & @rbx >> $buffer & @r11 & 20 ^ @r13 >< @rax + 0n7 << 0x9 << @r9 ^ @r11 >> @rdx >> @rsi & (@rax) ^ @rbp ^ 0y10000 ^ 0n9)  { test_statement(0x1896); } else { test_statement(0x363);  if ($buffer ^ @rdi = $teb | $teb | @rsi)  { test_statement(0xDBB); }  /* This is a not closed comment @rax = @rax | @r12 ; }
$error$
$end$
2941
 if (@r9 & @rax << 0xE >> 0n3 >> ($teb) >= $teb & 0y111 >> $ip >> @rdx ^ @rax >> @rbx >> @rdi & 0y100 ^ @rsi >> 0n16)  { test_statement(0xA15); }
$error$
$end$
2942
 if (@r9 + (0n8) & @r11 << @rbx & $proc | @rdx >> $ip & @rdx >> ++@rdi ^ @rdi & @r12 ^ $thread | 7 | @rbp & 0xA ^ 23 ^ @r12 ; @r8 + @r12 >> 0x6 >> @r9 >> @r10 & @r12 << @r12 & ($proc) ^ @r10 >> @rbp)  { test_statement(0xA58);  for (val = @rsp & $buffer; @r10 & @r13((@rsi & $buffer ^ @r10 ^ $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0xC & $thread >> @rsi >= 0xC & $thread >> @rsi) { test_statement(0x1034); }
$error$
$end$
2943
 if (~+$ip << @rax & $teb ^ @rbx << @r9 | $proc & -0y10010 >> @r9 ^ @r8 >> @r10 > ~+$ip << @rax & $teb ^ @rbx << @r9 | $proc & -0y10010 >> @r9 ^ @r8 >> @r10)  { test_statement(0x2074);  break; @rax = -(@rax) | @r11 ^ @r13 ; } elsif (@r8 << @rax | $teb >> @rsi | @rbx ^ $proc ^ (@r10) | @rsp ^ 0y1011))0n4 << $buffer >> @rsi & @rsi >> @r8 ^ @rbx >> @rdi & ~@rbp & $proc) { test_statement(0x82A); } elsif (@rbx >> @rsi ^ $ip & @rbx | @rax & @r11 | @rbx ^ @r8 | @rsi | -@rsi < @rbx & @rsi & ($ip) ^ @r12 & $thread | @rsp & $buffer ^ $teb | 0n4 ^ -@r12 | $buffer | 0x11) { test_statement(0x814); } else { test_statement(0xAB8); }
$error$
$end$
2944
 if ($thread + @r13 & @r9 >> 23 >> ++($ip) ^ ~@rbp << @r11 >> @r8 >> -2 & @r11 >> @r10 ^ @rax >> @r11 ^ @rsp & @rax | 0y10001 << @r8 >> @rsp >> 22 ^ @rsp ^ @rsi & @r11 ^ $teb | (@r8) & $thread((@r11 + $proc ^ 0n11 << 0n18 | @rax >> ~$thread & +@rbp >> @rdx | $thread ^ $thread & @r12 | +@r8 ^ 23 ^ -$ip | @r12 | ~@r13)  { test_statement(0x191B); }
$error$
$end$
2945
 if (@r9 + $teb ^ @r11 << @rdx ^ $proc & @rbx ^ @r13)@r8 << 7 << @r10 ^ 0y1110 << ~@r12 & ~@rax)  { test_statement(0x18C6); }
$error$
$end$
2946
 if (@rsp | 0x5 << $buffer >> -($teb) >> 0y1001 ^ @r11 >> @r9 ; @rdx + @rbp ^ 21 & @rbp >> +$ip ^ $teb >> $teb | @r11 ^ @rbx >> $teb)  { test_statement(0x6C6); } else { test_statement(0x18C7);  for (val = 10; $ip(@r11 ^ $thread | @r9 | @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2947
 if (@r9 + @r11 >> 23 >> 0y10011 ^ -$thread << @rsi >> $proc ^ @rbp >> +0n2 & $ip & 0y1111 | @rbx ^ @r12 >> @rax ^ @r9 | @r10 >> @r13 ^ @r13 ^ @r13 <> 0xF >> @r11 ^ @rdx >> $thread >> $proc ^ 7 & @rax & @rdx ^ $thread)  { test_statement(0x871);  /* This is a comment */ } else { test_statement(0x9DB); }
$error$
$end$
2948
 if ($proc + +($ip) << @rsp << $ip >> @rbp << @r12 >> @rax | +$ip >> $proc >> @rsi ^ $ip >> +@r8 & $thread ^ @rsi >= $proc + +($ip) << @rsp << $ip >> @rbp << @r12 >> @rax | +$ip >> $proc >> @rsi ^ $ip >> +@r8 & $thread ^ @rsi)  { test_statement(0x25EE);  /* This is a not closed comment  break;  for (; $teb($teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (13 & 0xB >> ~~(@rbx) & @rbx & -0n18 ^ $teb >> @rax ^ 0y110 & +0n15 ^ $proc ^ -($thread) | ~@rsp | @r9 & @rbp ^ $ip | 3 ^ $thread ! 13 & 0xB >> ~~(@rbx) & @rbx & -0n18 ^ $teb >> @rax ^ 0y110 & +0n15 ^ $proc ^ -($thread) | ~@rsp | @r9 & @rbp ^ $ip | 3 ^ $thread) { test_statement(0x1670);  for (; $teb ^ (+$teb) | @r8 | @rbx(($teb ^ (+$teb) | @r8 | @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (@rdi >> -0y110 ! (@r10) >> @rax ^ @rdx | 0y10000 ^ 0) { test_statement(0x1797); }
$error$
$end$
2949
 if (@r9 >> -$proc << ~@rbx >> 17 & (0y101) ^ @r12 << @rax ; @r9 + @r10 << $teb << @rax >> @rsp << 0n18 & @rdi >> @r11 >> 11 | ~0n18 << 0n10 & @rbp & $proc & +$thread | @rbp >> @r10 ^ $teb ^ @rax)  { test_statement(0x17B);  // /* This is a comment  } elsif (~0n11 << 0y1011 | 0n7 >> @rdx ^ @r9 & 0n12 ^ 0y10011 = -@r11 >> @r12 >> 0y1 & @r12 >> 0 & $ip & $buffer) { test_statement(0x1668); } elsif ((@r12) >> $proc & @rdi | (0xE) & $ip ^ @rdx ^ @rax <> 0n2 & -0y10010 & @rdi | 0y1101 ^ @rdi) { test_statement(0x1F26);  break; } elsif ($teb & @rbx < (@rdi) ^ (@r11) ^ 0y100) { test_statement(0xEE7); } else { test_statement(0x421); }
$error$
$end$
2950
 if (0n18 >> $teb << @r8 > @rbp + @rdx ^ @r9 << @rsi)  { test_statement(0x456); } elsif ($proc << @rbx >> 0x12 & @r11 & @r10 & 0x13 ^ @r11 ^ @rdx ^ @rdx $proc << @rbx >> 0x12 & @r11 & @r10 & 0x13 ^ @r11 ^ @rdx ^ @rdx) { test_statement(0x1E24); } else { test_statement(0x2403); }
$error$
$end$
2951
 if (0y1101 + @r10 << @r13 >> @r9 << ($buffer) >> ~@rsp | $proc >> -@rbx >> ~$thread & $proc | 0y100 >> @r13 | (~@rdi) | 0y100 ^ @rdx <= 0y1101 + @r10 << @r13 >> @r9 << ($buffer) >> ~@rsp | $proc >> -@rbx >> ~$thread & $proc | 0y100 >> @r13 | (~@rdi) | 0y100 ^ @rdx)  { test_statement(0x10C4); }
$error$
$end$
2952
 if (0n18 + $ip << @r9 & @rax << @rsi & +@r12 >> @r8 & ~@r13 ^ @r12 >> $buffer @rbx + @r8 << @rsp & @rsi | ~@r11 << 0n19 ^ @r10 >> @r13 ^ 0n14)  { test_statement(0x3E4);  /* This is a not closed comment } elsif (@rdx << @r10 ^ @rbp >> @rbx ^ @r10 ^ --@r11 ! @r9 << -0x5 & 0n18 ^ @r13 >> @r12 & @r11 & $proc | +~@r9 >> $thread ^ @rax & @r12 ^ ~@rsi ^ -@r9 | +21 ^ @r8) { test_statement(0xDF9);  break;  break;  while  (++@r12 ! ++@r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx >> @r13 & @rdx | @r13 & -~-0xA ^ @rbp ^ $buffer)@rbx >> @r13 & @rdx | @r13 & -~-0xA ^ @rbp ^ $buffer) { test_statement(0x385); }
$error$
$end$
2953
 if ($proc + @rdi << 0xB << @rdi & @r13 >> @r8 & +@rdi >> $ip ^ $teb >> @rax | +@r13 & ($ip) & 0n3 & $proc | @r13 | $thread & @rsp <> @rdi >> 23 << @rbx >> @r13 >> @rdi & @rdi ^ @r10 << 0n19 & @r8 | +@r9 >> $proc & 0y111 >> @rsp & @rdi & $teb ^ $buffer >> @rsp | @r10 & $buffer & @r9)  { test_statement(0x67A);  if ($ip & @r13 ; -@r11 ^ @r11)  { test_statement(0x1B89); }  // /* This is a comment  } elsif (0n14 << $buffer ^ @r10 >> @rax((@rax >> @rdx >> (@rax) & 0n9 >> -$ip & @rbp & @rax ^ @rdi >> $thread & @r12 & $proc | @rsp >> @r11 & -@r10 & @rdx) { test_statement(0x12F);  while  (($proc) | (0y1111) >< @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif ($proc >> @rbx ^ $thread ^ $ip == 0x2 >> 1 | @rsi ^ @rdx) { test_statement(0x217F); } else { test_statement(0x314);  if (@rbp ^ @r12 | @r10 <= @rbp ^ @r12 | @r10)  { test_statement(0x1FD6); } else { test_statement(0x14AC); }  /* This is a not closed comment }
$error$
$end$
2954
 if (@rbx + -~@rax << ~($buffer) << @rbx ^ 0y101 << $buffer >> @r13 >> @rsp & @rdx >> @rbx ^ (@r8) & -@rbp & $ip ^ $ip & $buffer < @rbx + -~@rax << ~($buffer) << @rbx ^ 0y101 << $buffer >> @r13 >> @rsp & @rdx >> @rbx ^ (@r8) & -@rbp & $ip ^ $ip & $buffer)  { test_statement(0x1B92); }
$error$
$end$
2955
 if (0n6 << @r11 >> @r12 >> 4 & ~@r12 | $teb << +22 >> @rdx | @r13 ^ 0 ^ 16 | 0y100 = 0n6 << @r11 >> @r12 >> 4 & ~@r12 | $teb << +22 >> @rdx | @r13 ^ 0 ^ 16 | 0y100)  { test_statement(0x1AA3);  break; } elsif (@r13 >> @r11 ^ $proc >> @r8 & @rbx | @rsp ^ @rsi | $proc & @r13)@r13 >> @r11 ^ $proc >> @r8 & @rbx | @rsp ^ @rsi | $proc & @r13) { test_statement(0xF79); } elsif (@r11 & -$teb = @rbx & @rsi ^ @rbx | @r8 & +@rdi | @rbp ^ @rdx) { test_statement(0xE50); } elsif (@r9 & +-@rdi <> @r13 ^ ~0y100 ^ @r8 | ~$proc) { test_statement(0x8C0);  /* This is a not closed comment } elsif (($buffer) ; ($buffer)) { test_statement(0x1600);  This is a not opened comment */  for (; @r10 $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  /* This is a comment */ } else { test_statement(0x916);  // /* This is a comment  }
$error$
$end$
2956
 if ($teb << @r8 << $ip & @rax & @r9 & $thread ^ $buffer << +@r12 ^ @r10 >> @rsp & @r12 ^ @r11 & $buffer ^ @r10 ^ 20 <= @r13 + @r11 & $thread << 0x9 & 0n8)  { test_statement(0x1CCE); } elsif (~@rdi >> $buffer & $ip >> @rdx & @rdi ^ 0x7 >> @r9 & ~0x6 ! @rbp >> $ip >> @r13) { test_statement(0x109E); } else { test_statement(0x1E37); }
$error$
$end$
2957
 if (@r10 + @rax >> @rsp & 0n3 << @rsi & @rbp & $teb | @rax << @rbp >> $teb | 0xE >> +0y1100 & $buffer ^ @rsi & $ip ^ @rbp ^ $ip | @rdx & @r9 ^ @rbx | (@rdx) >< @r10 + @rax >> @rsp & 0n3 << @rsi & @rbp & $teb | @rax << @rbp >> $teb | 0xE >> +0y1100 & $buffer ^ @rsi & $ip ^ @rbp ^ $ip | @rdx & @r9 ^ @rbx | (@rdx))  { test_statement(0x2420); }
$error$
$end$
2958
 if ($thread << $thread << ~@r9 & 0x2 ^ @rsp << 16 ^ 0y100 & @r13 | $thread << @r11 & @rdi >> -@r12 & $thread & 2 ^ @rsi & @r9 & +$buffer | (-@rdi) >> @rdx ; 0x6 + $proc << @r9 << 0n2 >> $ip << $thread >> @r8 >> 0x4 & @rdx << 4 >> -@rbx >> $thread & @r10 & @rbx & @rbx)  { test_statement(0x25E3);  break; } elsif (@rax << ~4 >> @rdx & ~~0x11 & 0y10 & 0x4 | (@rdx) >> 0x1 & +@rsi & @r8 >= @r8 << @rax >> @rax >> @rsi & 0) { test_statement(0x259E);  This is a not opened comment */  while  ($proc == @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx(@rdi >> $ip & @rdi & $proc) { test_statement(0x1F1B);  /* This is a comment */  break; }
$error$
$end$
2959
 if (@rdi + @r10 ^ @rsi ^ @rbx ^ 0n12 > @rdi + @r10 ^ @rsi ^ @rbx ^ 0n12)  { test_statement(0x1C6A);  // /* This is a comment   // /* This is a comment   // /* This is a comment  } elsif ($proc >> $thread >> @rsi & @rax >> @rbp & $buffer & @r8 ^ +$teb | @rbp = $ip << @r8 >> @r8 >> @rbp) { test_statement(0xF97);  break; }
$error$
$end$
2960
 if (@r12 + @r9 << $ip & @rax << $proc & $ip))~@rax + @r12 ^ 0x7 << @r13 & $teb | -@rdi & 0xA & $ip ^ $thread >> @rsp & $thread & @rbx ^ 0xA | @rsp >> $buffer & @rax)  { test_statement(0x175F); }
$error$
$end$
2961
 if (11 + $teb & 0y1001 << @r8 >> @rdi >> +@r8 & 15 >> @rax <= @r9 + @r9 << @r10 >> @rsp << @r10 | @rbp << $proc)  { test_statement(0x10F0); } elsif (@r8 >> @rsp >> @rsi & -(@rdx) ^ @rsp & 0n11 ; @r13 << @r11 & @rax & @r8) { test_statement(0x1326); ; } elsif (0y1000 >> 0y1100 & @rbx ; 0y1000 >> 0y1100 & @rbx) { test_statement(0x110A); }
$error$
$end$
2962
 if (@rax + (0n6) << @rsp << @rbp >> 0y10001 @r12 + @rbp << @rdi & @r10 | $ip << $thread >> @rax >> 15 ^ $thread >> 1 ^ ~$thread ^ @rsi | (@rbp) >> @r13)  { test_statement(0x172B); } elsif (@rbx << 22 ^ $teb >> @r11 & 1 & $thread = @rbx << 22 ^ $teb >> @r11 & 1 & $thread) { test_statement(0x174E); }
$error$
$end$
2963
 if (@rdx + +$thread | @r13 >> @rbp ^ @r9 | @rsi >> $thread & $thread & @r12 ^ -@rbx = @rsi + @r11 << @rbp << 0x13)  { test_statement(0x217A);  // /* This is a comment   /* This is a not closed comment }
$error$
$end$
2964
 if (@r8 << $teb << ++@rdx == 0n2 + 0y1010 << @r9 << 0x4 >> @r13 & @r8 >> $ip >> @r10 & -$buffer ^ ~@r9 << @r8 >> @r13)  { test_statement(0x1A4A); }
$error$
$end$
2965
 if (-@rdi << 0xB & @rsi >> @r10 & $buffer >> @r8 | @rbx >> ($teb) >> 6 | @rbp >> -$ip & @r8 & @rdx >= -@rdi << 0xB & @rsi >> @r10 & $buffer >> @r8 | @rbx >> ($teb) >> 6 | @rbp >> -$ip & @r8 & @rdx)  { test_statement(0x2107); } else { test_statement(0x570); }
$error$
$end$
2966
 if (0y1011 + 0x8 << $ip ^ @rbx >> ~0n10 & $buffer >> @r13 & $buffer & +0n14 = $buffer & @r13 << 0y11 >> @r9 & $proc >> @rdx)  { test_statement(0x1161); ; } elsif (0x9 << -@rbx & 16 >> @r8 & @rax & @rbp((0x9 << -@rbx & 16 >> @r8 & @rax & @rbp) { test_statement(0x6B7); }
$error$
$end$
2967
 if (@r9 + @rdx >> @r9 << 0xC)@r9 + @rdx >> @r9 << 0xC)  { test_statement(0x22B7); } elsif (@r10 << @rsi >> @r8 != $thread >> @rdi & $buffer & @rsi | 20 >> $teb) { test_statement(0x127D); }
$error$
$end$
2968
 if (@rdi >> $proc >> @rsp & $ip))$teb >> 0y11 ^ @r13 << @rdx & $ip & 0y1111)  { test_statement(0x19C8);  This is a not opened comment */  /* This is a comment */ ; ;  /* This is a comment */ }
$error$
$end$
2969
 if (@r12 + @r8 << -$ip << @r10 & @rdx & @r10 | @rax << +0n19 >> @rbp >> @rsi | 0y10 >> @rdx & $teb & 0x10 ^ @rsi & ($ip) < @r11 >> @rsi >> (@rdx) | @rdi << 3)  { test_statement(0x184); } else { test_statement(0x20BB); }
$error$
$end$
2970
 if ($proc + @rsp >> 20 ^ @r12 >> (+~@r12) >> (@r8) | $proc | @rdx > @r9 + @r8 << @rdx ^ (+~@r12) << @r13 ^ @rdx & (@rsi) & @rax)  { test_statement(0xA0A); } elsif (@r9 >> 11 >> @r9 & 14 >> +2 ^ @rbp & @r12 | $ip ^ @rdi & 0y101 ^ $proc ^ @rsi != @r9 >> 11 >> @r9 & 14 >> +2 ^ @rbp & @r12 | $ip ^ @rdi & 0y101 ^ $proc ^ @rsi) { test_statement(0x16D4); } elsif (+@rdi >> 4 & @rbp ^ @r12 & @r8 +@rdi >> 4 & @rbp ^ @r12 & @r8) { test_statement(0x1FAC);  This is a not opened comment */ } elsif ($proc ^ $proc ^ @r12 | @rsi ^ $buffer | @r13 | @r13 = 0x4) { test_statement(0xA14);  for (val = 10; 22 = 22;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 0x5 | $buffer) { test_statement(0xC21);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 >= @rdx) ;  while  (($ip) <> ($ip))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x84C); @rax = $ip ^ 0y1010 ^ +@r13 | $thread ^ @rax ;  This is a not opened comment */ ;  for (val = 10; @rsp)@rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
2971
 if (@rbx + $ip << $thread >> +@r10 >> +(@rdx) & $thread & $buffer >> @r13 & 0y1011 & @r8 ^ @r12 >> $proc >> $thread != @rbx + $ip << $thread >> +@r10 >> +(@rdx) & $thread & $buffer >> @r13 & 0y1011 & @r8 ^ @r12 >> $proc >> $thread)  { test_statement(0x68E);  This is a not opened comment */ } elsif (@rbx << (+16) >> @rax ^ +$buffer & @r12 & @r12)@rbx << (+16) >> @rax ^ +$buffer & @r12 & @r12) { test_statement(0xDB1); } elsif (@r12 ^ $ip & @rax | 0x10 & @r8 <> @r12 ^ $ip & @rax | 0x10 & @r8) { test_statement(0x89C); } elsif (0x9 ^ @rbx ^ @r13 @rax & @r10) { test_statement(0x175A); } elsif (@r11 | $proc | @r8 ; @r12 ^ 0x1) { test_statement(0x154A);  break; } elsif (@rsp < $teb) { test_statement(0x345); } elsif (0x13 <= 0x13) { test_statement(0xC8A); } elsif (~@rbp ! @rdx) { test_statement(0x1FB4);  This is a not opened comment */ } elsif (0y1001 ! @rax) { test_statement(0x10EA); }
$error$
$end$
2972
 if (20 >> $proc >> $ip & @rax & @r12 >> $teb ^ (-@r11) << @rbx >> 0y10000 >> @rbx ^ 0y1110 & @rdi & @r8((0x0 + 5 >> $teb & $proc << ~@r8 ^ +~@rsp >> 0y1011 & (@r12))  { test_statement(0x11A4);  for (val = 10; @r12 ^ $teb ^ 0y110 ; @r12 ^ $teb ^ 0y110;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (+@r9 | $ip | @rdx(@r12 ^ @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ @rax = 0y1011 | +$buffer ;  while  (+-@rsp < @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  ; } else { test_statement(0x187A); @rax = 23 | -0x8 ; @rax = @rax ^ @r13 | @rdi | $teb ;  // /* This is a comment  }
$error$
$end$
2973
 if (+@rax + $buffer << --@rbx << @r9 >> @rsi >> ~@r8 & 0y1111 >> @rbx ^ ~~$teb << @rdi >> $ip >> @r11 & @r8 >> @rbx & @r13 ^ $buffer ^ @r12 | -@r10 << +$buffer | @r9)+@rax + $buffer << --@rbx << @r9 >> @rsi >> ~@r8 & 0y1111 >> @rbx ^ ~~$teb << @rdi >> $ip >> @r11 & @r8 >> @rbx & @r13 ^ $buffer ^ @r12 | -@r10 << +$buffer | @r9)  { test_statement(0x1B42);  for (val = 10; -14 & 0x13 ^ $buffer))-14 & 0x13 ^ $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip ^ ~13 < @r8 >> +$thread & 0x5 & @r9 & 0n10 ^ @r11 >> -$ip & +0y1110 & @r11 ^ 0x0 & ~$thread ^ @rax ^ 2 | @r8 >> @r13 ^ 0xB) { test_statement(0xB01); } else { test_statement(0x44D);  for (@rax = $ip ^ $buffer; 0xF | ~$teb))@rbp | @rbp | @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | -0y100 != @rax) ;  if (@r10 <= @r10)  { test_statement(0xEA6); } else { test_statement(0x2328); }  /* This is a comment */  // /* This is a comment  @rax = 0x6 ; }
$error$
$end$
2974
 if (@rbp & @r11 & -@rsp >> @r12 & +@r12 & $buffer ^ @rbx & $teb ^ @rbp & 0x12 & @rbp == @rax >> @r13 << @rdx | $proc << @rbx >> @rbx | @rbp >> @rdi & @rdx ^ @r11 | +$thread ^ 0x9 ^ @r8)  { test_statement(0x155D); } else { test_statement(0x211D); ; ; }
$error$
$end$
2975
 if (@r11 >> ~(0n0) ^ @rsi >> (++$proc) 0n6 + @rsp << -@r10 << ~0x1)  { test_statement(0xF7E);  while  (@rsp & @r12 | $teb ^ @r13)@rdx & $proc ^ $teb | @rdi ^ $thread | -@rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@rsi << @rax & @rdi >> @rax = ~@rsi << @rax & @rdi >> @rax) { test_statement(0x6D2); }
$error$
$end$
2976
 if (@r9 + $teb >> (0n8) << @r11 ! @r9 + $teb >> (0n8) << @r11)  { test_statement(0xC70);  while  ($thread | -~@rbp | 0y1001 | @rdx((0n8 ^ @r12 ^ @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2977
 if (@rsp + 0n1 << $buffer <> @rsp + 0n1 << $buffer)  { test_statement(0xFB1);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y11 & @rax ^ ~@rax < @rsp & @r13) ;  while  ($buffer ^ (@rsi) | @rbp >= @rsp ^ -@rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x437);  /* This is a not closed comment }
$error$
$end$
2978
 if (@r8 + @rax >> $proc << @r13 & 0x11 >> 21 >> @r8 & $ip & @r10 | 2 & $thread & $proc & @rdx | $buffer & 0x2 & @r11 ^ $buffer ^ @rsi ^ @rax | 3 & (+$thread) != @rbx >> ~(@rdx) >> @r10 ^ @rdx ^ @r11 >> $ip & 0x9 ^ @rdi ^ 4 | @r12 << $buffer & @r11 & @r11 & $proc)  { test_statement(0x602);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi ^ @rbp ^ 6 | @r11 | (@r11) | $thread <> @rdi ^ @rbp ^ 6 | @r11 | (@r11) | $thread) ;  /* This is a not closed comment  /* This is a comment */  if (@rdi ! @rdi)  { test_statement(0x1D37); } elsif ($buffer <= $thread) { test_statement(0x169E); } } elsif (0xD << $ip >> -@r12 ^ 22 & 7 | @r9 >> @r8 & @r13 & @rax ^ $buffer ^ ($teb) != 0xD << $ip >> -@r12 ^ 22 & 7 | @r9 >> @r8 & @r13 & @rax ^ $buffer ^ ($teb)) { test_statement(0x11F3); } elsif (0y100 & @r8 | @r13 ^ ~$teb)0y100 & @r8 | @r13 ^ ~$teb) { test_statement(0xBC2); ;  for (val = 0n13; 11 > 11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (0xC > @rsi ^ @r11 | @rsi ^ $teb) { test_statement(0x173C); ; } else { test_statement(0x24D5); }
$error$
$end$
2979
 if (0y1100 + ~$buffer << 0n0 == @r13 >> @rdi >> ~@rax >> $ip & @rdx & @r8 >> +$proc ^ $thread & @r13 >> @rbp & $teb & @r12 ^ $proc >> 0n1 & $buffer)  { test_statement(0x661);  This is a not opened comment */  while  (@rdx | +---5 < $ip ^ @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi ! @rdi) ;  /* This is a not closed comment  // /* This is a comment  } else { test_statement(0x1F81);  for (val = 10; @rsi > @rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($teb < $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
2980
 if (0y110 + @rdx & ~$buffer << (23) ^ @rsp << 21 >> -@r12 >> @r11 & @r12 | @rax ^ $thread ^ @r10 & 0y10011 ^ ~$ip | @rsi ^ $teb ^ @rsi ^ @rsp ! -0 + @r11 & @r11 >> +@r12 & +@r8 & @r10 ^ @r8 << 0x13 ^ @r8 & @rsi & @rsp ^ 0x3 & @r10 ^ ~@r10)  { test_statement(0x175B);  /* This is a comment */ } elsif (@rdi ^ @rax & @rsi & ++@r9 ^ @r11 & @rax ^ 0x4 | $buffer >> 4 ^ $buffer ^ @rax | $buffer != @rdi ^ @rax & @rsi & ++@r9 ^ @r11 & @rax ^ 0x4 | $buffer >> 4 ^ $buffer ^ @rax | $buffer) { test_statement(0x72); } elsif (@r13 & @rax & $ip | -@r8 & $thread | 0xB ^ $teb | 0y1101 | $teb @r13 & @rax & $ip | -@r8 & $thread | 0xB ^ $teb | 0y1101 | $teb) { test_statement(0x24A8); } elsif (0x0 & $thread ^ @rsp ^ 0y111 | $teb ^ $thread > 0x0 & $thread ^ @rsp ^ 0y111 | $teb ^ $thread) { test_statement(0x1187);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc ! $proc) ; }
$error$
$end$
2981
 if (-@r10 + @rbp >> @r12 ^ @r8 >> @rdi >> (@r11) -@r10 + @rbp >> @r12 ^ @r8 >> @rdi >> (@r11))  { test_statement(0x881); val = 0y110 >> @rax & 3 & @rdi ; @rax = $ip & @rbp ^ @rbx | @r9 ^ ~$buffer ;  break;  break;  for (val = 10; $buffer)$teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (15 >> @r12 & $buffer & @r10 ^ @r9 >> @rbx ^ @r13 15 >> @r12 & $buffer & @r10 ^ @r9 >> @rbx ^ @r13) { test_statement(0x256B); ; ; } else { test_statement(0x1811);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb | 0n18(@rdi | 0y1001) ;  break;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax == 0n8) ; }
$error$
$end$
2982
 if ($teb + (0y11) >> $ip << @rbp & @rsp >> 0y10000 >> 0n4 & $thread & @r13 & 0n11 | 0y1110 >> @rax >> $thread & @r11 & @r10 | @rdx & -@r12 ^ $buffer & @r13 ^ @rsi ^ $ip | (@rsp) & @rdi ^ @rdx ^ @rbp | @r10 ^ @r10)$teb + (0y11) >> $ip << @rbp & @rsp >> 0y10000 >> 0n4 & $thread & @r13 & 0n11 | 0y1110 >> @rax >> $thread & @r11 & @r10 | @rdx & -@r12 ^ $buffer & @r13 ^ @rsi ^ $ip | (@rsp) & @rdi ^ @rdx ^ @rbp | @r10 ^ @r10)  { test_statement(0xF25); }
$error$
$end$
2983
 if (@rbp + @rdi << @r12 << @rdi >> @r10 << @r8 >> $ip >> @rsp)@rbp + @rdi << @r12 << @rdi >> @r10 << @r8 >> $ip >> @rsp)  { test_statement(0x1856); } elsif ($teb & 0x11 >> +@rsp ^ $buffer >> @r10 | +-@rdx ^ $teb ^ @rdx ^ @rbx ; $teb & 0x11 >> +@rsp ^ $buffer >> @r10 | +-@rdx ^ $teb ^ @rdx ^ @rbx) { test_statement(0x2057); } elsif (+@r10 >> @rsi ^ 3 & @r8 | @rdx ^ @rbx | @r11 | @rdi 16 ^ @r10 & @r11) { test_statement(0x5B4); } elsif (0y10000 & +0x6 ^ @r11 > $proc & @r12 ^ 0n19 ^ -@rdi | @rbx ^ $ip | $ip) { test_statement(0x1DB6);  // /* This is a comment  } else { test_statement(0xD9A);  // /* This is a comment   // /* This is a comment   /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n2((0n2) ;  // /* This is a comment  }
$error$
$end$
2984
 if (@r11 + (@r11) << $thread << @r13 | @rbx >> $thread >> ~@r12 & @rbx ; @rdi << $ip & @rbp << @r11 ^ +0y10 & 15 >> @rbx ^ $buffer >> $thread & $proc & $buffer | 0y1011 >> @r11 & +@rsi >> @rax & ~$teb | @r13 & @r12 ^ 0xD & @rbp ^ @rsp ^ (@r13) | @r9 & 0y100 | @rdx | ~@rbx | @rsi)  { test_statement(0x22C4); } elsif ($buffer << 12 >> @r9 >> $ip <= @r9 >> 0y1 & @rbx >> 0y0) { test_statement(0x18A5); } elsif (@rbx >> @r10 & $thread | @rdi | @r13 ^ 0x8 > 0n5 & @r10 & @rsp) { test_statement(0x1FFC); } elsif (0n12 ^ @r12 ^ @r12((+$teb & @rdx ^ @rdi ^ @rsi | @rbp) { test_statement(0x12F2); } elsif ($buffer | $proc | @r12(@r8 ^ @r8 | @r13) { test_statement(0x120A);  /* This is a comment */ }
$error$
$end$
2985
 if (@r9 & @r12 << $proc >> @rsp >> @r10 ^ ~0n15 << @rbx >> @r12 >> $ip & $teb >> 0n4 & @r10 ^ @rdx ^ @r13 & $proc <= 0n4 + @rbp << $thread >> @rsi >> @r12 >> -@rsi | +$proc << 0xF >> 0n6 & $proc >> $buffer & @r11 | 0n16 >> 0xC ^ @rax | @r10 & -$buffer ^ @rdx ^ @rdi)  { test_statement(0x1E7A); } else { test_statement(0x22D8); }
$error$
$end$
2986
 if (@rdx + @rsi << @rsp & ~@r12 << @r8 ^ $thread << -0y100((@rdx + @rsi << @rsp & ~@r12 << @r8 ^ $thread << -0y100)  { test_statement(0x642); } else { test_statement(0x1104);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 14 != 14) ;  /* This is a not closed comment  /* This is a not closed comment }
$error$
$end$
2987
 if (0xE + $buffer << 0xB << -+($proc) | $teb >> @rax >> @r11 ^ -$proc >> 0n11 | @r10 >> @rsi | 22 | 0x3 ^ ~0y1111 ! $proc << ~(0y1000) << @r9 >> 0n16 | @r13 << @r9 >> ~-+-@r11 >> $ip | @r11 >> ~@r9 & @r12 & @r8 | @r10 | $thread | @rdi | ($ip))  { test_statement(0x109C); } elsif (@rbx << @rdx >> @rbx & @r8 & (---@rbx) & $proc ^ $ip >> 21 & 0y10010 ^ @rax & @r10 ^ @rdi = @rbx << @rdx >> @rbx & @r8 & (---@rbx) & $proc ^ $ip >> 21 & 0y10010 ^ @rax & @r10 ^ @rdi) { test_statement(0x10BE);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 20 != 20) ; } elsif (@rdi >> $proc & ~@rdi & @rdi ^ -$thread ^ @rdx ^ @r8))$thread ^ @rbp ^ @rbp | $buffer ^ @r8 ^ @rax) { test_statement(0x11C1);  This is a not opened comment */  if (@rsp(($thread)  { test_statement(0x22B6); } elsif (~$proc = ~$proc) { test_statement(0x1058); } elsif (@rsi 0x5) { test_statement(0x2372); } } elsif (@r13 ^ @r13 | @rax ; @rbx & @r12 | @r11 ^ $buffer) { test_statement(0xEE5);  for (; (@r12) <> @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x19F7);  /* This is a not closed comment }
$error$
$end$
2988
 if (@rdx + @rdi >> ~@rbx << -$proc >> +@r12 >> @r13 ^ @rbp >> @rsp >> @rbp & @r8 & @rax | @rsp << @r10 & @r8 >> @rbx & @rsi & @rdi >= @r9 | 0n1 >> @rax >> @r9 ^ @rbp & $proc ^ $ip & $teb ^ @r10)  { test_statement(0x588); } elsif (@r8 >> @rdi & @r13 >> @rbp & @rbx ^ 0x0 >> @r13 & 0y10 & 3 ^ $proc & ~@rdi ^ $ip ^ @r12 @r8 >> @rdi & @r13 >> @rbp & @rbx ^ 0x0 >> @r13 & 0y10 & 3 ^ $proc & ~@rdi ^ $ip ^ @r12) { test_statement(0x79D);  /* This is a comment */ } elsif (@rsi >> $ip ^ @rbx <> @r10 & -@rax & @r11) { test_statement(0x40D); }
$error$
$end$
2989
 if (@r13 + @rsi | +@r10 << @rbp & @r9 & @r10((@rax + 0n3 >> $proc << +@r12 >> @r11 & @r8 << @r11 >> $thread >> (-@rsi) & @rbp >> $thread | $buffer << 0y10000 ^ +@r9 >> @r9 & @rax ^ @rax & $thread)  { test_statement(0xC20);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp & @rbp(@rbp & @rbp) ;  if (@r9 ^ @r12 | @r9 ! @r11 ^ $proc | +0x5 | ~0x12)  { test_statement(0x78F); } elsif (~@r13 | 1($teb) { test_statement(0x2704); } else { test_statement(0x5CC); } ; } else { test_statement(0x708);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | @rdx | -@r8(((@r9) ^ 2) ; }
$error$
$end$
2990
 if (@r9 + @r9 << ($buffer) >> @r10 & @r9 >> +$thread & $buffer ^ ~@r9 << $teb & @rsp & 0xD ^ @r12 >> 0y10000 ^ @r10 | @rbp << @rbx >> @rbx | @r12 >> @r13 ^ $ip & @rdi ^ 0y10001 | $ip & 3)0n13 + -23 & @rsi & $teb >> ~@rdx & @r13 | @rbx >> -@rdi)  { test_statement(0xF95); } elsif (@rsi >> ~@rsi >> @r13 | 0y1110 & @rdi == @rsi >> ~@rsi >> @r13 | 0y1110 & @rdi) { test_statement(0x1EE1);  /* This is a comment */ } elsif (@rbp >> -@r11 & @rbp & (-$buffer) | @r10 & -23 != @rbp >> -@r11 & @rbp & (-$buffer) | @r10 & -23) { test_statement(0x1A9A);  /* This is a not closed comment  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rsi)@rsp) ;  /* This is a not closed comment } elsif (@rbx >< @rbx) { test_statement(0x2275); ;  if (+0n19 < 13)  { test_statement(0x1EF4); } else { test_statement(0x1B19); }  if (@rbx(@rbx)  { test_statement(0x1BD9); } ;  /* This is a not closed comment }
$error$
$end$
2991
 if ($teb + @r12 << @rsp >> @rbx << $buffer = $teb + @r12 << @rsp >> @rbx << $buffer)  { test_statement(0x994); }
$error$
$end$
2992
 if (@r11 << @r11 << @rdi >> @rbp << @r13 ^ @rdi & @rdi >> @rdi & ~@rdx ^ @r10 ^ $ip ^ @rsi | $thread << $proc >> @r9 ^ $proc | @r13 >> 0x10(@rsi << @r10 >> -0x6 << @rax & @rsp >> $thread & @rdi >> $teb ^ @rbp << +@rsi >> 0xC)  { test_statement(0xB22);  if (0y10010 & @rax = @r8 & @r9 | $thread)  { test_statement(0xB64); } } elsif (@r10 >> @rbx ^ @rax >> 0n14 & +@rbp ^ (@r13) ^ @r11 ^ @r13 | @rdx >> @r13 ^ @r10 <= @rsp << @rbx | $proc >> +4) { test_statement(0x1666); } elsif (0y1100 | $teb | @rax | @r12 != 0y1100 | $teb | @rax | @r12) { test_statement(0x20C2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax | @rax = @r10) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11((@r11) ; } else { test_statement(0x455);  while  (+@rdi ^ 0y1100 | @r13 >< +@rdi ^ 0y1100 | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
2993
 if ($teb << 0n16 << +@rbx >> $thread << (@r8) >> 20 ^ $proc << @rdx & ~-@r12 >> @rbp | $ip >> @r13 ^ @r11 ^ $proc & @r9 = $teb << 0n16 << +@rbx >> $thread << (@r8) >> 20 ^ $proc << @rdx & ~-@r12 >> @rbp | $ip >> @r13 ^ @r11 ^ $proc & @r9)  { test_statement(0x11BF); } elsif (@r12 << $ip & 15 | 0y1000 & +$proc | $ip & $proc | $proc | @rbp | ~0y10011 <> @r12 << $ip & 15 | 0y1000 & +$proc | $ip & $proc | $proc | @rbp | ~0y10011) { test_statement(0x233E); } elsif ($thread & @r12 ^ @rax & @r9 ^ 0y11 ^ @r9 < 0x3 ^ $teb) { test_statement(0x1C3B);  /* This is a not closed comment } elsif (~@rbp & @rbp ^ @rbp | $buffer ^ @rsi != @rdx ^ @rbx | 0y1000 ^ @r8 | @r8 | $proc) { test_statement(0x1BD4);  for (val = -~@rax; @rbp != @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (22 | 13 >= 22 | 13) { test_statement(0xDB6);  /* This is a not closed comment  /* This is a comment */ } elsif (@rdi | $teb <> 0y10010 | 2) { test_statement(0x42D); } elsif (@rbx)@rbx) { test_statement(0x684); } elsif (@r10 ; @r12) { test_statement(0x189E); } elsif ($ip <> @r8) { test_statement(0x2305); } else { test_statement(0x12E4);  break; }
$error$
$end$
2994
 if (@r11 << $teb & @rsi << @rsp ^ @rbp & @rsi >= @rbp << @r8)  { test_statement(0x1446);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 5 & @rax)@rbp & @rbp ^ @r9 | @rbp) ; } elsif (@rsi >> $buffer >> $ip & @rdi & @rax ; @r9 << (+@rdx) ^ @r8 >> @r11 ^ @r9 & @rsi ^ @rsi ^ @r10) { test_statement(0x9C5);  /* This is a not closed comment } else { test_statement(0x90D);  This is a not opened comment */  if (+@r13 | @rsi((+@r13 | @rsi)  { test_statement(0x124F); } else { test_statement(0x375); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@r11 ; -$ip) ;  if ($proc(($proc)  { test_statement(0x10B4); } }
$error$
$end$
2995
 if (@r9 + @rdi >> 0xB >> @r13 & +0y1111 << @rbp & 0y1100 & @rsi & $thread ^ 0n15 | @r8 << +0x9 >> @rdx >> @rdi ^ 0xF >> 0x7 ^ $proc & 0x4 ^ @rsi <> @r9 + @rdi >> 0xB >> @r13 & +0y1111 << @rbp & 0y1100 & @rsi & $thread ^ 0n15 | @r8 << +0x9 >> @rdx >> @rdi ^ 0xF >> 0x7 ^ $proc & 0x4 ^ @rsi)  { test_statement(0x212F); } elsif (@rbp << @rbp ^ @r10 & 4 | $ip >> @rbp ^ $proc & $buffer | -0y10011)0y111 & +~$thread >> @r8 ^ $thread ^ $proc & @r9 ^ @rbx) { test_statement(0x21C);  for (; 0n4 ^ @r8((0n4 ^ @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rdi > $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
2996
 if (@r10 | @r8 >> @rsi >> $thread & @rax | $thread ^ $thread & @r12 | $ip & @r10 ^ @r8 >< +@rax + @rsp & @r13 >> $thread >> @r10 & @r12 & @r11 | +$buffer & +$thread & @rbp)  { test_statement(0xF2B);  // /* This is a comment   /* This is a not closed comment } elsif (@rsi >> @r10 >> 1 & +-$teb ^ $thread >> $thread & +@r9 & @rbx | @r8 & @rdi ^ 0x3 ^ @r13 ^ 0y111 = @rsp >> @r9 ^ @r10 & @r13 & $proc ^ $ip ^ 4 | 0x1 | @r8 & $thread) { test_statement(0xAE7); }
$error$
$end$
2997
 if (@rdx | $thread << ~11 >> (@rbp) >> $buffer & 0y1111 >> @r11 & $thread & 0x10 >< @rdx | $thread << ~11 >> (@rbp) >> $buffer & 0y1111 >> @r11 & $thread & 0x10)  { test_statement(0x166); }
$error$
$end$
2998
 if ($buffer << @r9 << @r9 >> @r12 << ~@rbp >> @rbx >> @r11 & @r8 >> @rsp ; 0n7 + (+@rbp) >> @r11 << ($thread) >> $thread >> $thread & $ip ^ $ip << -0n16 >> @rbp ^ @r10 | @rax << 0y1000 ^ ~@rdx | $ip ^ -@rdx)  { test_statement(0x1305); } elsif (+0n8 << (21) >> $ip | @r10 & 0n11 & @r12 | (~@r8) & @rsp ^ @r11 | @rsi <> @r9 & @rdx >> @r9 ^ @rdx ^ ($teb) & 0n8 ^ @rdi ^ @r9 | @rsp) { test_statement(0x2366); } else { test_statement(0x207A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb >< @r9 ^ $proc | @rax) ;  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp <= @rdx) ; }
$error$
$end$
2999
 if (0x12 & $thread >> 0x0 >> @rax ^ @r13 << @rsp ^ (@rax) ^ @r13 & +$ip ^ @rdi ^ @rbx >< @rsi << @rbx >> @rbp << 0 | $proc >> -@r13 >> 20 | -@r11 ^ @r13 ^ $ip ^ 1)  { test_statement(0x39F); }
$error$
$end$
3000
 if (@r10 << 0xA >= @r10 << 0xA)  { test_statement(0x17FE); } elsif (@rsp << +@r12 >> $teb & @r8 >> @rsp = 4 >> $thread & @rax >> @rdi ^ @r12 & @rdx ^ 0xA ^ $proc ^ $buffer | @rdx >> @r10) { test_statement(0x107); }
$error$
$end$
3001
 if (@rax << $teb >> $thread << @rdi >> @r10 >> 5 = @rax >> @rbp << 15 | 1 << -@rax >> 0n3 & @r9 | @r8 >> $proc & 0y110 | @r8)  { test_statement(0x235A); } elsif (@rdx << @r8 & $teb >> @r10 & +@r13 | @r12 >> -@rdi & @rbp & @r9 ^ +@rbx & @rsi ^ 0y1110 | 0y110 ^ 0x9 ; @rdx << @r8 & $teb >> @r10 & +@r13 | @r12 >> -@rdi & @rbp & @r9 ^ +@rbx & @rsi ^ 0y1110 | 0y110 ^ 0x9) { test_statement(0xF5F); } elsif ($buffer >> 0y1101 & @rax ^ @rdx & 0y110 ^ $ip ^ -17)@rdi >> 0y1100 & @rdx & ~@r10) { test_statement(0x244); } elsif (~$thread & 0x12 ^ $proc ^ @r9 ! $proc & ~@rdx | (@r10) ^ @r10) { test_statement(0x1240); } else { test_statement(0x2036); }
$error$
$end$
3002
 if (@r13 + $proc << @r9 & @rsi >> @r12 | @r12 << @rsi >> $teb >> ~@r8 ^ $ip >> @rdx & (@rbp) | 0n17 & 0y1001 & @r8 ^ @rsi | $ip & $ip @rsp + $ip >> @rdx << @rsi & $thread >> 0n5)  { test_statement(0x2138);  /* This is a comment */ } elsif (0xA << ~+@rbp == 0n8 << ($thread) >> @r11 >> @r11 & $ip >> $buffer | @rbx) { test_statement(0x1944); ; ; val = @r8 ; } elsif (14 >> ($teb) & @r11 & 0 ^ @r8 & ~$buffer ^ $proc == 0y10 >> $teb | 22 ^ @rbp ^ $ip) { test_statement(0x236); ; } elsif (@rdx & $ip | @r9 ^ @rsp | 0y10010 | @r8($proc & (0n5) ^ @r9) { test_statement(0xF7F); } elsif (@r8 ; 0y1 ^ @r9) { test_statement(0x23B6); } else { test_statement(0x24CF);  while  ($proc ^ @rax | @rdi | @r9 != $proc ^ @rax | @rdi | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3003
 if (-@rdi << @r12 << @r12 >> @r13 << @rax >> 0y11 >> 0n4 ^ @rsi << @r11 ^ $teb & @rbx & $buffer | +$thread & @rbp >> @r10 & @rsi > +-$buffer << 0y111 << $proc ^ $ip << +@r11 >> 0y11 & $ip | $proc | $proc & @rdi ^ @r12 & @rsp ^ @rbp ^ 7 | @rbx)  { test_statement(0xE26); ; ;  for (; 0x1 | @rbp))@r10 | @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3004
 if (@r10 @rbx & 0xA << @r9 >> @r13 >> 0n15 & @r11 & $ip & 0n4 ^ @rsp >> $ip & $ip | 0y1 >> 0y1010 >> ~@r11 & @rdx >> @r9 | -~@rsp & @r9)  { test_statement(0x8B9);  /* This is a not closed comment } else { test_statement(0x150B); }
$error$
$end$
3005
 if ($thread + 0n16 << @rdi << $buffer & $teb >> 23 & @r9 >> (~~@rax)))$buffer + @rax << $thread << $proc ^ ~@r13 << @r12 >> +@rbx >> 0x0 | 0y1011 << @r10 | 0y10000 & @rax ^ -@r10 ^ @rbx)  { test_statement(0x171); ;  /* This is a comment */ }
$error$
$end$
3006
 if (@rsi << $teb ^ @r13 & @rbx >> @rbp ^ 0n6 >> 0n2 ($proc) + @r9 >> @r12 >> @rax & @r13 << $thread >> -@rsp >> $ip & 0n10 >> @r11 | $ip >> $buffer >> +$buffer | 0y10 & 0n11 & @r13)  { test_statement(0x2169);  // /* This is a comment   for (val = 10; @rdi | -$proc | -@rbp @rdi | -$proc | -@rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r8 << @rsi >> @rax @r9 ^ $ip ^ @rbx & @r8) { test_statement(0x19E3); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi | ~$teb(($thread) ; } else { test_statement(0x2128); }
$error$
$end$
3007
 if (@rbx | (@r9) << -$teb ^ @rax ^ $teb ^ @r8)~$ip >> @rsp << @rdi | (($ip)) & $proc >> -@rsi ^ @rbx >> @rdi)  { test_statement(0x1463); } else { test_statement(0x16BA);  if ($thread ^ @rbp | @r10 | @rsp ! @rsp)  { test_statement(0x1D8E); } elsif ($thread | @rbx == @r9 | @rdi) { test_statement(0x83B); } else { test_statement(0x1DAD); } val = $buffer ^ @rsi | $proc | @rax ; }
$error$
$end$
3008
 if (@rdx << 0x11 & @r12 << 0n6 >> @r9 <> @rdi << @rsi << $buffer ^ 0x2 & @rsi | @rbx >> +$ip >> @r9)  { test_statement(0x1EFF);  This is a not opened comment */ } elsif (@rsp << @rdx & @rsi >> 0y1001 ^ @rsi >> -22 & $teb ^ $ip & (@rax) ^ @rdx ^ 0n8((@r11 & @rax ^ @rbp & +@r11) { test_statement(0x1F22);  while  (5 > @rdx ^ @rbx | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc & @rax & @r13 ^ @rbp == @r12 ^ @rbp & $ip ^ $ip ^ (-+@r10) | @r8 | $thread) { test_statement(0x12E8); } else { test_statement(0x2643); }
$error$
$end$
3009
 if (0xD < @rsp + 0x1 << @r13 << 0y1 | +0y10010 & +@rsp & +@r10 | $thread >> @r13 & @rbx & $teb ^ @r13 & 0n4 ^ @rax ^ $buffer)  { test_statement(0x188D); } elsif ($proc >> @r13($proc >> @r13) { test_statement(0x186B); }
$error$
$end$
3010
 if (@rbx + @rsp & $thread & @rdx & -$buffer $thread + ~@r11 | @rsp << @r10 >> -+@rdx >> +$thread | 12 >> @rdi & 0y1111 & @rbx ^ -@rdx & @r13 ^ $thread ^ $ip | $thread ^ @rbp ^ @r13)  { test_statement(0x1F81);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp | @r9 ^ @r11((@rsp | @r9 ^ @r11) ; } elsif (@r8 << @r9 >> $teb >> @r11 & @r12 >> +@rax & 0n2 @rbp >> -0y1000 >> @rdi) { test_statement(0x14DC); } else { test_statement(0x26DA); ;  break; }
$error$
$end$
3011
 if ($ip << @rsi << 0x6 >> @rdi << @rdx >> 0n5 >> ~@r9 & +@r12 >> @r9 >> @rbx & -@r12 >> @r12 | $buffer & +@r9 & 12 & +3 >< $ip << @rsi << 0x6 >> @rdi << @rdx >> 0n5 >> ~@r9 & +@r12 >> @r9 >> @rbx & -@r12 >> @r12 | $buffer & +@r9 & 12 & +3)  { test_statement(0xF66); } elsif (-($proc) >> @r10 > -($proc) >> @r10) { test_statement(0x5E4);  /* This is a not closed comment ;  break; } elsif (@rbp ^ @r10 & @rsi < 0y111 >> $teb) { test_statement(0x4F0);  This is a not opened comment */ } elsif ($ip | $proc | @rbx | @rsp)$ip | $proc | @rbx | @rsp) { test_statement(0xB16); ; } else { test_statement(0x83F); }
$error$
$end$
3012
 if (+~@rsi >> @r11 >> @rax & @r12 | @rbp +~@rsi >> @r11 >> @rax & @r12 | @rbp)  { test_statement(0xEFC);  while  (@r12 & 0y1110((@rdx ^ -@rsi ^ -$thread | @r11 ^ @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif (@r11 ^ @rbx >> $buffer & $ip & (@r12) ^ @r10 & @r12(~@r12 << @r8 & -0n18 >> @r13 ^ @rdx >> @r9 & @r9 | $buffer >> @rsp & @r13) { test_statement(0x411);  if ($proc ^ ~+@r13 | $teb != 0y100 | $proc | -@rbx)  { test_statement(0x1B72); } else { test_statement(0x2640); }  while  ($proc @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y110 & @rsi)@r10 >> +~@r8 ^ @rax & @r9 ^ -($proc) ^ $ip | $buffer & $proc ^ ($teb) ^ @rsi) { test_statement(0x2691); @rax = $buffer ^ @rdi ; } elsif ($proc & @r11 @rsi | 0n5 ^ +$thread) { test_statement(0x18E2);  This is a not opened comment */ } elsif (@rax ^ 0y11 | @r10 | -0x3 > @rdi ^ @rsi) { test_statement(0x21EA);  for (val = 10; +(0y11) = +~($buffer);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rdx ;  /* This is a not closed comment  while  (@r11 >= 0x11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@rbp > ~$thread | @r9) { test_statement(0x1A7C); ;  if (@r9 ; $thread)  { test_statement(0x1EF8); }  // /* This is a comment  }
$error$
$end$
3013
 if (@r12 << @rsp & @rbp & ~15 >> @rax ^ 0y10011 << @r13 ^ @r9 ^ @r10 & @r13 ^ @rdx ^ $teb > @r12 << @rsp & @rbp & ~15 >> @rax ^ 0y10011 << @r13 ^ @r9 ^ @r10 & @r13 ^ @rdx ^ $teb)  { test_statement(0x8A); } elsif (0x6 << @r13 >> @r8 & @rsp >> @r9 ^ $thread >> 0n16 | 0n3((@r11 << +@rsi | (@r12) >> +5 ^ -@r9 & -(~@rax) | $buffer & $thread) { test_statement(0x12F0);  /* This is a not closed comment } elsif (0y100 >> @r9 ^ $thread ^ -@r12 ^ @r12 | @rbp & ~0y1111 | +(@r8) > @r11) { test_statement(0x1E34); } else { test_statement(0x8D5);  /* This is a comment */ }
$error$
$end$
3014
 if (@rbp + 0n3 >> $proc >> @rsp ^ 0n5 >> $ip & ~@rdi >> $teb ^ (@rsp) >> @r10 ^ 20 ^ @r12 | 10 << @r9 & @r8 >> @r8 & $thread & +($ip) ^ 0n14 & -(@r10) ^ $thread & @r9 ^ 0n2 ^ +$buffer | @rax >> (@r12) <> @r8 << @r13 << $proc >> @r10 << (22) >> @rax >> @rbp & -0x1 << ~-$thread >> @r13 >> @rsi)  { test_statement(0x964);  break; } else { test_statement(0x1F61); }
$error$
$end$
3015
 if (0x8 ^ ($buffer) << $teb >> @r10 & @rdx >> @rbp)0x8 ^ ($buffer) << $teb >> @r10 & @rdx >> @rbp)  { test_statement(0xCA1); @rax = @r9 >> 0x12 & @r10 ^ $teb ^ @r10 | @rdx ;  // /* This is a comment  }
$error$
$end$
3016
 if (@rdi ^ @rax << -@r10 >> 0x0 >> $proc ^ @rsi >> @r10 | @rbp >> 0n1 = @rdi ^ @rax << -@r10 >> 0x0 >> $proc ^ @rsi >> @r10 | @rbp >> 0n1)  { test_statement(0x1640); } else { test_statement(0x1BA2);  if ($buffer ^ ++@r9 | @rdi | $ip != @r9)  { test_statement(0x2630); } }
$error$
$end$
3017
 if (-@r8 << -@rdi << @r11 & @r11 >> $thread ^ @r12 << 0x2 >> @rdi >> $buffer & +@rsi >> -@rsi & $ip & 0n19 ^ @r9 & @r11 | @rbx >> ((0n0)) >> @r11 & @rbx >> $thread | @r11 ^ @rdx ^ @rbp | @r11 ^ @r8 != @r8 + $proc << @rbp >> 2 ^ +@rax)  { test_statement(0x226F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@r9 & @rsp | @rax ^ -$teb | $proc >< $ip ^ 0n7 ^ $proc) ;  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0xE >= 0xE) ; }
$error$
$end$
3018
 if (0y1 & $teb << @rdx >> (@r8) ^ (0n13) << $proc >> @r9 >> @rsp ^ ++@rax & $proc & @r13 ^ @rdx & $thread | ($teb) >> $buffer | @r9 & @r8 ^ 0y111))$ip << $proc << @rax >> @rbx << @rdi ^ @rax & ~@r11)  { test_statement(0x2633); } else { test_statement(0x1D6C);  for (; @rsp | $buffer | @rbp == $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3019
 if (~@r8 + $ip << @r13 << @r10 | ~(@rbx) & @rsp >> @rbx & 0n10 & 0x3 ^ @r8 & @r8 & $buffer >< ~@r8 + $ip << @r13 << @r10 | ~(@rbx) & @rsp >> @rbx & 0n10 & 0x3 ^ @r8 & @r8 & $buffer)  { test_statement(0xEC3);  break; ;  This is a not opened comment */  while  ((+@r13) ; (+@r13))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip & @rbx >> @rdx & @rbx | $proc >> $proc & $thread ^ @rax & (@rbx) ^ $buffer ^ @r12 ; @r9 << @rsp | @rsp >> 0x0 & (0n9)) { test_statement(0x21E6); } elsif (@rdx >> @rbx ^ @rax | (@rsi) & $ip | @r9 < $buffer >> @r8 ^ @rsi & @r11 ^ 0n13 ^ @r10 | $thread | @rbx ^ @r9 | ~@rdi) { test_statement(0x21BC); } elsif ($proc(0y11 & 22) { test_statement(0x2118); }
$error$
$end$
3020
 if (@r11 & @r11 ^ @r9 << @rax >> $proc >> @rbp & 0y1 >> @rax | @rbx << @r12 & (@rsp) >= $thread + @r8 >> @rbx & @r8 >> 3 >> @rbx ^ $teb << @r8 >> @r9)  { test_statement(0x1009); }
$error$
$end$
3021
 if (+0n13 + @rdi ^ $buffer << @r8 | $buffer << ~@r11 >> 0y101 >> $ip & ~@r10 >> 0x8 & $teb ^ @r12 >> @rsi((@r8 ^ $buffer >> $proc ^ $proc & @rdi & ~@r13 | ~$thread >> @r12 ^ @rsi & @rdi & $proc ^ 0n0 & @r12)  { test_statement(0x90E); } elsif (0n9 << @r10 & 0n17 >> @rbp & @r12 & (@rdx) ^ @r12 >> @rbp & $ip & @r12 | $thread & @rsp & $proc ^ (@rdi) & @r10 ^ @rsp ^ ~@rsi((0n9 << @r10 & 0n17 >> @rbp & @r12 & (@rdx) ^ @r12 >> @rbp & $ip & @r12 | $thread & @rsp & $proc ^ (@rdi) & @r10 ^ @rsp ^ ~@rsi) { test_statement(0x322);  if (16 ^ (@r12) <= +23 ^ $ip)  { test_statement(0x22B2); } elsif (0n7 ! 0n7) { test_statement(0x1C5D); } elsif (@r12))@r8) { test_statement(0x14A0); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y10011 < @r11) ; } else { test_statement(0xA6E);  break; }
$error$
$end$
3022
 if (@rax + -@rsp << $teb >> 0n10 << @rbx ^ @r12 & @r11 = @rax + -@rsp << $teb >> 0n10 << @rbx ^ @r12 & @r11)  { test_statement(0x25F4); } elsif ($teb >> @rsi >> @rsi & @r13 >> @rax & 0n6 & @rdi ^ 0y1100 ^ @rsi ^ @r9 ^ 0x12 | @rdi | 0xF ^ @rsi ^ @rdx == @r8 << @rsp >> @r12 >> $thread ^ @rbp >> $proc ^ 0x7 ^ @rbp | @rdx >> @r11 & @r13 & 0n4 ^ @r10) { test_statement(0x144D); ; } else { test_statement(0x1DB5); }
$error$
$end$
3023
 if ((@rbx) + 0n3 & @r13 << (@rsp) >> $ip & $thread & @r9 ^ -@rbx << $ip ^ @rdx >> $buffer & $buffer ^ -$proc ^ ~@r11 | @r12 & $teb >> 14 & 0y10 | @r12 >> -@r8 & $thread ^ 0y101 & +($thread) (@rbx) + 0n3 & @r13 << (@rsp) >> $ip & $thread & @r9 ^ -@rbx << $ip ^ @rdx >> $buffer & $buffer ^ -$proc ^ ~@r11 | @r12 & $teb >> 14 & 0y10 | @r12 >> -@r8 & $thread ^ 0y101 & +($thread))  { test_statement(0x53D);  This is a not opened comment */ } elsif (0n9 >> @r8 >> @r11 | ~11 ^ 0x12 & +@r9 >= ~@rbp << 0x11 & 0n1 ^ @rbp & @r11 & @rsp | (@rbp) ^ @r12 ^ @r11 ^ $ip) { test_statement(0x2202); } elsif (@rdi ! @rdi) { test_statement(0x12A4); } elsif (0n8 & $ip ^ @rbx))-$teb & 0n19 ^ @rsi | -0y1111 | $buffer | $buffer) { test_statement(0x189); } elsif (@rsi | @r8 | @r9))$buffer ^ @rbx) { test_statement(0x1CDC);  if ($ip ! $ip)  { test_statement(0x24E4); } } elsif ($buffer | $thread ! 0x0 | @rax) { test_statement(0x1DB4); } elsif (@r12 <= @rsp) { test_statement(0x25D5); ;  // /* This is a comment  } elsif (0x1 <= (0y111)) { test_statement(0x4C1);  This is a not opened comment */ } elsif ($proc != $teb) { test_statement(0x15AB); } else { test_statement(0x1735); }
$error$
$end$
3024
 if ($thread << 0y11 >> $buffer << @rbx | -(@r12) << @rdi >> @r12 & $buffer >> $buffer ^ 0x9($thread << 0y11 >> $buffer << @rbx | -(@r12) << @rdi >> @r12 & $buffer >> $buffer ^ 0x9)  { test_statement(0x221F);  for (val = -$teb | +@rbp | -10 | -@r11; 13 & +@rax ^ 0n5 ^ 0y0 | @rdx | -@rbp(13 & +@rax ^ 0n5 ^ 0y0 | @rdx | -@rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi | @rsi > @rbp) ; } elsif ($teb & @rsi | @rbp >> @rsi & @rbx & 0n12 ^ @rbp != @rbp >> @rdx >> @rdx & $ip >> @r13 & @r9 & @r13 ^ $buffer >> (@r9) & @r9 | (@r12) | -$ip ^ @rbx ^ 11 | @rdi ^ @rbx) { test_statement(0x7FE);  /* This is a comment */ } else { test_statement(0x14C9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ @r10 >< @r8 ^ @r9) ; ;  if (@r10 <> @rdi)  { test_statement(0x1BA4); } elsif (@rsi != @r13) { test_statement(0x2475); } elsif (@r8)@r13) { test_statement(0x1533); } }
$error$
$end$
3025
 if (-$proc << +@rax << @rbx >> $proc << @r8 >> @r9 >> $proc ^ 14 << @rsi & ~@rdx >> @rsi & @r8 ^ ~@rax & $proc & @rdi ^ @rsi & @r12 | @r11 >> $proc >> @r10 & @r11 | @rsp & @rdi | @r13 ^ @rax(@rsp + @rbx << 5 << 11 >> @rax << @rbp)  { test_statement(0x1C95);  /* This is a comment */  if ((@r13) >< @r9)  { test_statement(0x1537); } elsif ($thread((@rbx) { test_statement(0x23FB); } else { test_statement(0x2338); } } elsif ((@rax) & @r9 >> $ip & @r11 & @r12 | @r12 >> 0x5 & @rdx ^ ~0y1000 ^ @rdi ^ (@r8) | @r13 & @r8 ^ 0xC | @rax | @r8 | @rax((@r11 << @rsp & @r13 ^ $ip ^ @rdx ^ ($buffer) ^ @rdx | @r10 >> -@rsi ^ @rbp) { test_statement(0x69);  if (@rax ^ @r13 | @r10(@rax ^ @r13 | @r10)  { test_statement(0x2043); } else { test_statement(0x117); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y101 | $teb ; 0y101 | $teb) ;  /* This is a comment */ } elsif (+@rbp ^ ~@r12 & @rdx ^ @rdi ^ 7 | $proc & 2 | @rbx | $thread(+@rbp ^ ~@r12 & @rdx ^ @rdi ^ 7 | $proc & 2 | @rbx | $thread) { test_statement(0x56C); }
$error$
$end$
3026
 if (@r9 >> $thread & @rbp ^ 0y10 & @r12 >> 3 & @rdi & (-$proc) > +@r10 >> $ip >> @rsp >> ~$thread ^ 0x8 >> $buffer >> @rbx & $teb >> @rsi)  { test_statement(0x34);  for (val = 10; @rbx & @r11 != @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = $buffer | $buffer ^ @rbx ;  break; } else { test_statement(0x2265);  break; }
$error$
$end$
3027
 if (13 << (@r12) << @rsp | @rsp >> ($buffer) & @r12 & @rsp ^ 0y1010 >> @rdx ^ @r11 & @rbp | @r12 & 0n9 ^ @rbp ^ +$buffer | @r11 | @rsi 13 << (@r12) << @rsp | @rsp >> ($buffer) & @r12 & @rsp ^ 0y1010 >> @rdx ^ @r11 & @rbp | @r12 & 0n9 ^ @rbp ^ +$buffer | @r11 | @rsi)  { test_statement(0x8F5);  break; }
$error$
$end$
3028
 if (@r11 + ~-@rsi << 0x2 >> @rbp << 0n4 >> $ip < @r9 >> $buffer << 0y0 >> (@rax) >> @r9 | @rax << @r8 >> 2 >> $proc ^ $thread >> ~@rdx & @r13)  { test_statement(0x1A3C);  This is a not opened comment */ @rax = @r8 & @r10 ;  while  (@rbx ! @rsp | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; ~~@rbx >= ~~@rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  // /* This is a comment   for (; -@r8 = @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x260C); }
$error$
$end$
3029
 if (~$teb + @r12 << @rsp ^ @rbp >> @r10))0x4 ^ @rbp << @rsi & (0n5) >> @r11)  { test_statement(0x237F);  /* This is a not closed comment } else { test_statement(0xF5C);  if (@rdx ^ @r8 <= 0n4)  { test_statement(0x483); } }
$error$
$end$
3030
 if (@r8 + @r13 << @r10 << --@r13 >> $teb << @rbp >> -~$teb >> @r11 | $proc << @rbx & ~-@r13 >> @rdi & @rsi = @r8 & -0y10 << @rdi >> $thread >> @rsi ^ $thread >> @r13 >> 1 & @rdi & ~@r9 & @r12)  { test_statement(0x134A); }
$error$
$end$
3031
 if (0n9 + $buffer & @rsi << @r11 >> +~@rbp ^ -$teb((0n9 + $buffer & @rsi << @r11 >> +~@rbp ^ -$teb)  { test_statement(0x1323); }
$error$
$end$
3032
 if (@r10 | @r9 << @r12 == @r10 | @r9 << @r12)  { test_statement(0x16ED); }
$error$
$end$
3033
 if ($thread + +@r10 >> 17 & @r13 << $thread | 0y0 & @r10 >> @r12 & 0xE ^ @rsi ^ $thread & @rbp ^ 0xE | $ip)$thread + +@r10 >> 17 & @r13 << $thread | 0y0 & @r10 >> @r12 & 0xE ^ @rsi ^ $thread & @rbp ^ 0xE | $ip)  { test_statement(0x200);  if (@r9 @r9)  { test_statement(0x14E9); } }
$error$
$end$
3034
 if (@rsi >> @rsp << @rbx & @rdx >> @r8 >> @rax > @rsi >> @rsp << @rbx & @rdx >> @r8 >> @rax)  { test_statement(0x284); } else { test_statement(0x2522); }
$error$
$end$
3035
 if ($thread << $ip & @r8 | ~@rbx ^ @r10 >> @rsi & @r8 ! $thread << $ip & @r8 | ~@rbx ^ @r10 >> @rsi & @r8)  { test_statement(0x182F); }
$error$
$end$
3036
 if (0y1000 << 0y1011 >> $ip << @r10 ^ 0y10001 << @rdi ^ @rax & @rdi ! 0y1000 << 0y1011 >> $ip << @r10 ^ 0y10001 << @rdi ^ @rax & @rdi)  { test_statement(0xA22); }
$error$
$end$
3037
 if ($thread << @r8 & $ip >> $proc >> $ip & @r13 | @rbp << 0y0 >> 0n17 >> @rax & $thread >> 23 & @rdi ^ @r10 | +@rdi >> @rbx & (0n3) & 0y1000 | @rsp < ~(@rdx) & @rax >> $proc ^ $buffer >> @rsp & (16) >> @rsp & 0x5 | $ip << $buffer & 0x5)  { test_statement(0x1FA9); } elsif (0y0 >> $buffer & $buffer >> @rsp ! +@r10 << 0n3 >> (0n18) ^ -@rbx & @r11 ^ @rbp ^ $teb ^ @r11) { test_statement(0x22AF); }
$error$
$end$
3038
 if (@rax & @rsi << $buffer ^ ~@rbx >> $teb ^ @rdi = @rax & @rsi << $buffer ^ ~@rbx >> $teb ^ @rdi)  { test_statement(0xBC8); } elsif (@rbp << @r11 >> ~@rdx >> $ip & -@rsp >> $thread & 0y1111 & @rdx | ~@rsp >> @rbp & 0x7 & @r11 != @r10 << @r10 ^ @rdx >> -@r8 ^ 0y0 | ~(@r11) ^ ($teb) ^ -@rsp | 0n18 | @r9 ^ @r10) { test_statement(0x536); }
$error$
$end$
3039
 if ($proc & ~@rbx << -~@rbp >> @rsi >> +@rax & @r13 >> @r13 & @r8 & @r13 ^ @rdi << $thread >> @r8 & $thread >> $ip | 0x8 >> $proc & 3 | @rdx ; @rbx + -0y1010 & @rsp >> @r10 >> @rbx & -@rsp >> @rbp & $thread & -@rsp)  { test_statement(0x1DB7); } elsif (@rdi << @rdi >> (0xD) & $ip >> -@rdi & $thread ^ 0n10 ^ @r9 & @r12 ^ @rbx == $buffer << $thread >> 0n16 & 0y1000 & @r12) { test_statement(0x521); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 > (@r10) | @r8) ; }
$error$
$end$
3040
 if (@rbp + @rbx << @r13 >> @rsi & @rbx << @rdi >> @rdx >> 0xA & ++@rax >> $buffer & @rdi == @rbp + @rbx << @r13 >> @rsi & @rbx << @rdi >> @rdx >> 0xA & ++@rax >> $buffer & @rdi)  { test_statement(0x1935); }
$error$
$end$
3041
 if (@rbp >> ~@r9 & @rsp >> @rbx >> $thread $teb >> ~@rdx << @rbx & @rbx << @rax & $buffer >> ~@r12 ^ $teb ^ @rbp >> @rbx ^ (($proc)) & (@rsp) | @rsi & @r11 >> @rax)  { test_statement(0x15D9);  if (@r12 ^ @r10 ^ @r12 | $buffer | @rsp ; 0n16 & @r10 | 20 ^ -@rdi | @rsi | $proc)  { test_statement(0x19A7); } } else { test_statement(0x712); }
$error$
$end$
3042
 if (@rdi + $buffer << -+@r8 >> @rdi | @r8 << @r8 ; $teb << 0y1101 >> @r10 << $ip ^ @rbx << 0n9 & @rdx >> @r10 & @rsp | @r12 << @rsi & (+@rsp) >> ~0x11 & @r12 & (@rbp) ^ $proc | +~@rsp >> ~@rbp)  { test_statement(0x496);  while  (@rsi & @rbx > $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
3043
 if (~0n14 >> $ip >> @r8 >> @rdx & $teb & 0y101 & @r12 ^ @r10 << @r9 >> 0y1011 >> @r10 ^ +-21 & @rsp | $teb >> $ip >> 0n11 & 0y0 >> 0y1010 ^ @rbp >> 0n7 | $teb >> @rsp & @r9 & $thread ^ @rdx & $proc ^ @r13((~0n14 >> $ip >> @r8 >> @rdx & $teb & 0y101 & @r12 ^ @r10 << @r9 >> 0y1011 >> @r10 ^ +-21 & @rsp | $teb >> $ip >> 0n11 & 0y0 >> 0y1010 ^ @rbp >> 0n7 | $teb >> @rsp & @r9 & $thread ^ @rdx & $proc ^ @r13)  { test_statement(0x4C2); } elsif (@rbp << 0x10 & @r11 >> @rsp ^ $teb ; @rbp << 0x10 & @r11 >> @rsp ^ $teb) { test_statement(0x82A);  if (-$thread ^ ~@rdi | 0x8(-$thread ^ ~@rdi | 0x8)  { test_statement(0x359); } else { test_statement(0x22E3); }  This is a not opened comment */ } elsif (~15 & @r10 & -@r8 ^ @rbx ^ @rbx ^ 0n16 | $buffer & $buffer | 0x7 ^ @rdi > ~+@r8 ^ @rdi ^ @rdx ^ @r13 | @r12 & @r13 | $ip ^ @rsi | +@rsp | @rsp) { test_statement(0x1421);  This is a not opened comment */ } else { test_statement(0x138E); }
$error$
$end$
3044
 if (@r13 >> @rdx << @r13 | 0n19 << $ip >> ~@rbx >> 0y111 ^ @r9 >> @r12 ^ @rsi & @rax ^ 12 ^ (@rbx) | $proc >> @rdi ^ @rbx & @r9 ^ $ip ^ $proc < -@rsp + @rsi << $thread << 0n11 & 0x7 >> @r8 >> @rdx & $teb)  { test_statement(0xF6A);  /* This is a comment */ }
$error$
$end$
3045
 if ($buffer + (@rsi) << @r8 << $thread & $thread << @r11 & @rsi | @r13 >> 0y1001 | @r13 | @r12 == $buffer + (@rsi) << @r8 << $thread & $thread << @r11 & @rsi | @r13 >> 0y1001 | @r13 | @r12)  { test_statement(0x179F);  This is a not opened comment */ @rax = $proc & @rsi ;  This is a not opened comment */  /* This is a comment */ ;  // /* This is a comment  } elsif ($ip << @r9 >> @r9 ^ $ip >> @r8 & 0y1010 & 0y10011 | (@r13) >> ~@rsi & +@rdx <> @r12 << @rsi >> 0x2 >> $proc & @rbp >> 0n18 & 5 ^ @r12 >> @rdx & @rsp) { test_statement(0x1F99);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp < @rbp) ; }
$error$
$end$
3046
 if ($ip + @rdi << 0n1 ^ 0y1111 << @rdi >> @r8 & @r12 >> @r9 & 0xF ; 0x4 + 0y11 << @r11 >> @rbx << $teb | @rbp >> @rdi >> $proc & @rsi >> $proc & $proc)  { test_statement(0x1FD6); } elsif ($proc >> $buffer >> @r10 ^ @rsp ^ @rdx & @r11 ^ @rdi ^ @rsi | (@rax) ! -1 << 0y10 >> ~$ip >> @r12 & ~@rdi & $thread ^ @rsp >> @rbp ^ @r13 ^ @r9 ^ 0x7 | @rbp) { test_statement(0x22A0);  // /* This is a comment   /* This is a not closed comment } else { test_statement(0x1FBA); }
$error$
$end$
3047
 if (7 + $proc << 0n11 >> ~@rsp ^ $proc >> ~-$proc | @r13 >> (@r11) >> $buffer ^ @rsi >> 0x4 ^ 0n13 ^ @rsp ^ @rax | -@r9 ^ @r11 > $buffer ^ ~-~@r13 << $thread >> ~0n12 & $teb >> @rax ^ 0xE >> @rbp & $teb & $buffer)  { test_statement(0xAB0); } elsif (@r10 >> $ip >> @rsp ^ @rbx >> 0y111 ^ @rax | $ip >> @rdx & @r11 ^ @r8 ^ $ip ^ @rsi | @r13 ^ @r9 ^ (0y11) | 0y1011 ^ @r12 ! @r9 << @rdi | ~12 & $proc & $buffer | 0y110 | -+(@r10)) { test_statement(0xBE5);  if ($buffer ^ -@rbx))$buffer ^ -@rbx)  { test_statement(0x97B); }  This is a not opened comment */  This is a not opened comment */  for (; $buffer <> ((@r10));@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb >> $buffer | @rdx ^ @r12 >= $teb >> $buffer | @rdx ^ @r12) { test_statement(0xD6A); }
$error$
$end$
3048
 if (@r13 >> @r8 << 0x12 >> @rbp ^ @r9 << $buffer & @r11 >> +@rdi & ~0x13 & @r11 = @r13 >> @r8 << 0x12 >> @rbp ^ @r9 << $buffer & @r11 >> +@rdi & ~0x13 & @r11)  { test_statement(0x230B); } elsif ($thread & $buffer & @r12 & @r10 @rbx >> 0y111 ^ -@r10 & @rdi & $buffer ^ (@r8) & @rax) { test_statement(0xB8B); }
$error$
$end$
3049
 if (@r8 ^ @r13 ^ @r13 != @r8 ^ @r13 ^ @r13)  { test_statement(0x14CE); }
$error$
$end$
3050
 if ($ip + $thread >> $ip | @rax >> $buffer ^ ($buffer) | $ip >> (@rbx) & 2 & $buffer ^ @rsi ^ 0y10010 ^ -@r11(@rbx << @r8 >> @rsi & (+(@rax)) >> @rsp)  { test_statement(0x2273);  // /* This is a comment  } elsif (0y101 << 0y1001 >> $thread >> @rdi & 0y1111(0y101 << 0y1001 >> $thread >> @rdi & 0y1111) { test_statement(0x26D2); } elsif (@r12 >> @rdx ^ @rsp & (@rbx)(($teb & @r9 | @r8 & $teb ^ $teb | ~$teb ^ $thread) { test_statement(0x56D); } elsif (-@r8(@rdi & @rdx | 0n9) { test_statement(0x1DAF);  break; } elsif ($ip ^ @rbx | 7 | @rax ! @rax | @rbx | $thread) { test_statement(0xB08); } elsif (+@r13 | $ip <= @r13) { test_statement(0x60B); }
$error$
$end$
3051
 if ($ip + @r9 >> @rsp & @rdx >> 0n18 >> 0n19 & $thread >> @rsp | (@rdx) << @rsp & @r8 >> @rsi & -0n9 & @r13 ^ @r12 >> @rdi ^ @r9 & (--0n2) ^ 12 ^ 16)@r11 >> $proc << $thread >> @r12 >> 0n7 ^ $thread ^ @rbx & @rsi & @rdx ^ ~-@r11 & $proc ^ ~@r12 ^ 0n7 | 0xA << ~@r11 | @r8 >> 0n16 & @r11)  { test_statement(0x1F8E);  /* This is a comment */ } elsif (@r10 & $proc >> 20))@r10 & $proc >> 20) { test_statement(0xDC7);  break; } else { test_statement(0x26CB);  /* This is a comment */  This is a not opened comment */ }
$error$
$end$
3052
 if (+@rsi + @rsp << @rsp != @rdx >> @r13 ^ @r12 >> $proc & @rbx >> 0x2 & -$ip | @rdi << 0n13 >> @rax >> ~-$buffer ^ @r9 >> -0xC ^ @rdx ^ @rbx)  { test_statement(0x1D72);  This is a not opened comment */ } else { test_statement(0xB9A); }
$error$
$end$
3053
 if (@rsi + @rbx << (@r13) << $teb >> @r13 << @rax >> @r8 >> $thread & @rsp << +0x0 & @r13 >> 0y0 & @r11 ^ @rdi << @rsi ^ @rdx >> 4 & --0y1100 & $proc <= -0y1110 >> $thread)  { test_statement(0x20DB); } elsif (@r9 << @rdx & 0n10 ^ $ip ^ @rdx & @r8 ^ $buffer ^ @r12 ; @r9 >> 2 ^ $teb >> @r9 & @rsp & @rbp ^ 1) { test_statement(0x1117);  while  ($ip ^ @rbp | @rdi | -@rsp = $ip ^ @rbp | @rdi | -@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xBD8);  // /* This is a comment   /* This is a comment */ }
$error$
$end$
3054
 if (@r10 << $buffer & $buffer >> ~@rdx & ~@r12 ^ @r9 & 0n11 >> @r11 & @rax & @rdx | @rbp << 0n11 >> 13 >> 0x13 & @rdx >> 0n7 & (@rsi) & ~@rsi ^ @r13 & @r10 & ++@rsi ^ $ip ^ $proc ^ $buffer | 0xB >> @r13 & @rdi & $teb > 0n14)  { test_statement(0x15A9); } elsif (@rsp << @r10 >> +0y111 & $proc >> @rbx & @rdx ^ @rsi <> @rsp << @r10 >> +0y111 & $proc >> @rbx & @rdx ^ @rsi) { test_statement(0x8EF); } elsif (@r11 >> @r10 | @r11 ^ @r10 | @r12 ^ 23 >= 12 & $thread & @r9) { test_statement(0x1DC1); } else { test_statement(0x1267);  /* This is a not closed comment  /* This is a comment */ ; }
$error$
$end$
3055
 if ($proc << @r13 & +@rax & -@r8 > 0y10 >> 0xE << @r9 >> @rdi & 3 ^ @rsi & 5 >> @rsp & $thread & (~@r13) | @r11 >> @rsi >> ($ip) & 0n2 ^ ~0n8 >> @r8 & @rbp & @r8)  { test_statement(0x1E51); } elsif (@rbp << 0x0 >> @r9 >> @r10 & @r12 & $teb < @r8) { test_statement(0x78D); } elsif (@r10 ^ $proc | 21 & 10 | @rsp ^ @rdi = @rbx | ($thread) & @r11) { test_statement(0x1E);  /* This is a comment */ }
$error$
$end$
3056
 if (-@r10 + @rdx << @r13 & @r13 << @rbx & 0y10001 ^ ~$thread << ~@rbx & +15)-@r10 + @rdx << @r13 & @r13 << @rbx & 0y10001 ^ ~$thread << ~@rbx & +15)  { test_statement(0x1C23); } else { test_statement(0x104F);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc | @rbp ! @r13 | +@r13) ; }
$error$
$end$
3057
 if (0 | @rbx << @rsi >> @rbx ^ 23 >> @rax & @rsi & @rdi | $buffer)-@r11 + @rbx >> $buffer & -15 & @r13 ^ @r12 >> @r8 | 0x12 ^ @rdx >> @r9 & @rsi & @rsp)  { test_statement(0x99B);  while  (@r9 ^ @rdi != $teb & @rdx | $thread ^ @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rax ^ 0n1 | @r8((@r12)  { test_statement(0x34); } }
$error$
$end$
3058
 if ($ip << 0y1001 << @r9 | 10 << @r8 | @r13 >> $thread ^ @r13 & +0x4((0xB + +$teb >> (@rdi) & @rdi << @rbx | $teb & @rbp >> $teb & $teb ^ +0y110 & @r11 & @r8 | @rdi & @rbx | $proc | 0n17 ^ +~@rsp)  { test_statement(0x126F); } elsif (0xA << @r9 & $ip ^ $thread ^ @r13 & @r13 ^ $ip ^ @r13 | 0n2 >> $ip & 1))@rbx << @rax >> 7 & @r10 >> 0n5 & @rdx & @r9 ^ @r10 >> -~@rsi ^ +~$buffer & @r11 ^ $ip ^ ~$buffer) { test_statement(0xF8C); } elsif (@r11 >> 23 ^ 0n9 >= @rsp >> $buffer & @rax ^ 0x7 & $teb ^ 0y1111 | $thread | 0y10010) { test_statement(0x174E);  // /* This is a comment  } elsif (@r13 != @rdx ^ 0n16 ^ @r10 | @r10 ^ @rdi) { test_statement(0x8B4);  /* This is a comment */ @rax = -@r12 ; ;  if (@r10 ! @r10)  { test_statement(0x238F); } } elsif ($buffer ^ (@rdi) > $buffer ^ (@rdi)) { test_statement(0x1289); val = @rsp ;  /* This is a not closed comment } elsif ($teb | @r13 < -@r9) { test_statement(0x2495);  while  (-@rdx <= ~@rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 <= (@rsp)) { test_statement(0xFA4); } else { test_statement(0x602); }
$error$
$end$
3059
 if (@r13 + @r11 ^ 0n3 & @rbx & @rdi & $ip | $buffer & @rdi ^ @rsi >> @rbx <> 15 >> 4 >> @r10 & @r13)  { test_statement(0x4A8); } elsif (@rax << @rsi & @rdi >> ~(@r10) & 0x8 & @rdi ; @r9 << @rax ^ @rdi >> -@r8 ^ @rdi & ~$buffer ^ 0x3) { test_statement(0x1A3C);  /* This is a comment */ } elsif (+~0n1 >> 0y101 & $proc ^ $teb & (@rsp) | @rsp ^ @rdi ! @r12 & 0n7 & ~$buffer ^ @rdi ^ +~$teb ^ @rbp) { test_statement(0x1DF8);  This is a not opened comment */ }
$error$
$end$
3060
 if ($proc << (@rsi) <= +$thread + @r9 >> @rbp & @rbx << @rax >> @rsi >> -@r12 & @rbp >> @rax)  { test_statement(0x134C); } elsif (0x0 & -$proc >> @r12 & +$thread & @rdx ^ @r11 ^ ~@rsi | @rbx | @r9 > @r12 << @rsi >> @r11 >> $ip ^ @r12 ^ @r11) { test_statement(0x357); }
$error$
$end$
3061
 if ($buffer + $teb << 0x0 >> @rsi ^ $ip & @r10 >> @r12 & 0y1101 >< $buffer + $teb << 0x0 >> @rsi ^ $ip & @r10 >> @r12 & 0y1101)  { test_statement(0x1478); }
$error$
$end$
3062
 if (@rbx + $teb >> @r12 << @rdx & @rax >> $thread >> @rax & +@rbx >> ($buffer) & $thread ^ @r13 < @rbx + $teb >> @r12 << @rdx & @rax >> $thread >> @rax & +@rbx >> ($buffer) & $thread ^ @r13)  { test_statement(0xAB3);  // /* This is a comment  }
$error$
$end$
3063
 if (@rax + @rax >> -@r9 >> +0y10011 & @r13 ^ @r8 << @r11)@rbx + @r8 | @r9 >> @rsi & 0n12 >> $buffer & 12 & 22 ^ -@r12 & @rbx ^ +~0x3 | 1 & @r10 & 0y110 ^ ~@r12 ^ @r9)  { test_statement(0x1F72); }
$error$
$end$
3064
 if (($teb) & 0x13 << $teb & ~0x6 >> @r12 & @rbp & @rbp ^ $buffer << $ip & @r10((@rsp + 0xB << @rdx >> @r10 << @r12 >> @r9 >> 0y1111 & @r10 & 0xD >> @r10)  { test_statement(0xEE4);  if (@r8 ^ $proc 21 | @rsi | @rbx | 11)  { test_statement(0xE8A); } else { test_statement(0x9C4); } } elsif ((@r8) | (0n11) >> $ip & @rsp | @rsi | @rdx ^ ~@r8))@rsi >> @rsi) { test_statement(0x941); @rax = $thread & @rbx ^ @r10 ^ 22 ; } elsif (@rdx >> @rax >= @r9 & $proc & @r13 ^ @rdi ^ @rsp ^ $ip | 0n8 & @rsp ^ ~@rsp) { test_statement(0xDFE); } else { test_statement(0x2283); }
$error$
$end$
3065
 if (@rsp + @r12 >> @rdi >= @rsi ^ 0x6 << @rbp >> -@r9 >> 0x13 & (-@rsi) >> @rsi)  { test_statement(0x2701);  if (+@r11 ^ @rsp | @r8 ^ @r11)+@r11 ^ @rsp | @r8 ^ @r11)  { test_statement(0x12DC); } elsif (@rbx ^ 0y11 > @r10 ^ @rax | 1) { test_statement(0x1E6E); } elsif (1 < @rbp) { test_statement(0x11CC); } elsif (0n2 < $ip) { test_statement(0x26D6); } } else { test_statement(0x1C55); }
$error$
$end$
3066
 if (@r9 + $thread << $thread << (@rax) >> ~@rbx << @r11 >> +@r12 & @r11 << $thread >> @rax >> @rdi & @r13 | (@r8) << @r11))($thread) << @rbx & @rbp << @rax ^ @rdx << 0y100 | @rsp)  { test_statement(0x27C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1010 ^ 0n11 ^ @r10 >< @rbx ^ @rsi) ; }
$error$
$end$
3067
 if ($proc >> $teb << (@rsp) & @rsi << @r10 & $thread & ((@rdi)) & +@r8 | 0n10 << @r8 >> +0n10 >> @r13 & @rbx @rbp << @r8 << @rdi & @rbp << @rsi & @r13 >> @rbx | @rbx << $proc >> $proc >> $teb | @r12 >> @r9)  { test_statement(0x1EAF);  break; } elsif (@r10 << $proc >> 21 >> $buffer)@r13 << @r9 >> @rdi & $buffer >> @rdx ^ @r11 & @rbp & $buffer ^ @rax & @rdx | @rbp >> @rdx & @r12 & @rbp ^ ~@rax) { test_statement(0x2023); } else { test_statement(0x2502); val = ($ip) ; ; }
$error$
$end$
3068
 if ($thread + @rdx ^ @r8 >> -@r8($thread + @rdx ^ @r8 >> -@r8)  { test_statement(0x525);  This is a not opened comment */  for (; @rdi ^ 15 > @rdi ^ 15;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread & 16 >> @rsp & @rbp = @r13 >> 14 >> @r10 & 7 ^ +@rax & @r13 & $teb | 0n12) { test_statement(0x19A9); } elsif (@r10 | 0y1 ^ @r11 | @r12 | @rdi <= @rbx >> $thread & @r12 ^ 0y1010) { test_statement(0x8B8); ; @rax = @r9 ; } elsif (@rbp ^ @rdx ^ @r12 >< @rbp & @rbx | @rdx) { test_statement(0x1ED0); } elsif (+0n19 ^ @r8 | @r9(($buffer | 0y10000 | @rsi) { test_statement(0x1EAC); } elsif (($buffer) = ($buffer)) { test_statement(0x895);  break; } else { test_statement(0xF93); }
$error$
$end$
3069
 if (@r10 >> @r10 | $ip & @r8 >> @rdx & @r9 & @rbx | @r12 >> ~@r8 & @rdx ^ @rsi ^ +0x9 ; $proc >> $thread ^ @r11 << 0y1011 & @rbp >> @r9 & @r10 & @r8)  { test_statement(0x26DB); }
$error$
$end$
3070
 if (~0xA << ~@rdi >> @r11 << 0xA >> @rbx >> 2 | @rbx << $buffer | @r9 >> $thread & @rbx & @r12 | $buffer & ~@rax ^ @rdx | @rdx ^ (($proc)) ! @r13 & @rdi << @r12 ^ 0x8 << @r13 >> $teb & (@rbx) >> 0n8 ^ $thread | @rbp << @r8 & @rdx >> $ip & @rax | @r12 >> ~@r13)  { test_statement(0x177B);  while  (+@r10 ^ (@r9) | @r13 | ~@r10 <= +@r10 ^ (@r9) | @r13 | ~@r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip << $ip(0n1 ^ (0y1000) >> @rsi | $teb ^ @rbp & @r12) { test_statement(0x13E0); } elsif (~@rsp >> -@r10 ^ 0x9))~@rsp >> -@r10 ^ 0x9) { test_statement(0x26D7); } elsif (@r10 & @r12 ! @r10 & @r12) { test_statement(0x146B);  /* This is a comment */ @rax = @r11 ; ; val = 2 ;  break; } elsif (@r10 | +@rbx >< @rsi) { test_statement(0x2446); } else { test_statement(0xF37); }
$error$
$end$
3071
 if (@rdx << 0n8 | (@r9) >> ~$thread >> @r9 & @r11 | --@r11 | $buffer ^ $proc ^ $buffer | @rdi ^ @rsi | @r11 | @r8 ; @r8 >> @rdi << $thread ^ 0x1 << 0x12 & $teb | @r10 ^ @r12 >> (@rax) & 0n3 & @r10)  { test_statement(0xDFD); } else { test_statement(0x48A);  This is a not opened comment */ }
$error$
$end$
3072
 if ($buffer + @rsp >> @r13 << @rsi >> @rsp >> @r13 & @r10 >> @rbp & @rax ^ +@r9 << 16 >> $thread >> @rdx ^ $thread >> @rdx ^ 0y1000 | $teb << @rsi >> @rax & -@r9 ^ 0y111 | $thread >> 0n15 & 10 & $ip | $ip & @rsi | +0y101))$proc << @r9)  { test_statement(0xFEA); } else { test_statement(0xB0D);  /* This is a not closed comment }
$error$
$end$
3073
 if (@r10 + 6 << @rsp >> $ip >> @r9 >> 0y111 ^ @r8 << (~@rsi) & $teb < @r10 + 6 << @rsp >> $ip >> @r9 >> 0y111 ^ @r8 << (~@rsi) & $teb)  { test_statement(0x3A5); ; ; @rax = @rbx ^ 0xF | @r10 | @r9 ;  /* This is a comment */ } elsif (@rsp >> $teb >> +$proc & @r9 | 0y1))-@r10) { test_statement(0xCC6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x7 | @r9 | @r10 != -@rbx ^ @rax | @rdi) ; } else { test_statement(0x1C9E); }
$error$
$end$
3074
 if (0y1000 | @rsp << @r9 & +-@r12 & 21 & 0y1010 | @r12 & @rsp & +-(~$teb) ^ @rdi & @r11 ^ @r11 | 16(@r10 >> @rsp ^ @rdi ^ $ip >> 1 & 0n18 & ($teb) | $proc ^ @r13 ^ (@r11) & +@r12 ^ $proc ^ @r9)  { test_statement(0xF5); } else { test_statement(0x1F44); }
$error$
$end$
3075
 if (0y100 << $ip >> @rbp << $buffer >> 0n11 ^ @rbx | -@r13 & @rsi & @r12 ^ @r9 >> ~+@r13 & $proc ^ @rax & @rax ^ -0y111 | @r13 >> @rbx ^ @r12 & 0n1)@rax << @r8 << $ip & @r10 << @r11 >> 0n7 & $buffer >> 0y10001 ^ $teb << @r10 >> $buffer & +$buffer & 0n4 ^ 0y111 >> @rdx)  { test_statement(0x24D6); ; } elsif (0y100 & @rbp & @rsi ^ $teb ^ $teb & @rsp ^ +1 | @rbx >> @r9 | 0n14 & 7 != @r11 << $ip >> @r12 >> @rdi & @rbx >> @rax ^ ~@rbx & @rsi ^ 0n2 ^ $teb ^ @rdi | ~$proc >> @r10) { test_statement(0x9A5); } elsif (@rdi >> @r8 | $teb & 0x6 ^ @r9 >< 0 >> ~@rsi & @rsi & @rsp | 0xC & @rsp) { test_statement(0x255C);  // /* This is a comment  } elsif (@r12 ^ @rdx))~$thread) { test_statement(0x1A0E);  /* This is a comment */ } else { test_statement(0x8E3); }
$error$
$end$
3076
 if (@rbx > ~@rax << $proc & 14)  { test_statement(0x5E9); } elsif (@r10 << @r8 >> @rax >> -@r12 & @r8 >> +@r8 & @rsp <= @r10 << @r8 >> @rax >> -@r12 & @r8 >> +@r8 & @rsp) { test_statement(0x954);  // /* This is a comment   if ($buffer | $proc($buffer | $proc)  { test_statement(0x9F4); } else { test_statement(0x774); }  This is a not opened comment */  This is a not opened comment */ } else { test_statement(0x7F6); }
$error$
$end$
3077
 if (0n9 & @r8 << @rbp >> $buffer | @r10 << ~~@r9 & +0x4 >> @r10 ^ -@rsp >> -0xD | @rdx | @rax & @rbx ^ @rdi ^ $teb < 0n9 & @r8 << @rbp >> $buffer | @r10 << ~~@r9 & +0x4 >> @r10 ^ -@rsp >> -0xD | @rdx | @rax & @rbx ^ @rdi ^ $teb)  { test_statement(0x172F); val = @rbp & $buffer & @rax | $thread & @rdi ^ @r8 | +~$proc | @rsi ;  for (val = 10; 0y1110 | $ip | +@rdi == $teb ^ ($thread) | @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  while  (+0y10000((+0y10000)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0n0 <= 0n0)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2108);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ; 4 ^ $thread | 0xA) ; ; }
$error$
$end$
3078
 if (@rdi + +0n15 << @rbp << 0n8 ^ $buffer << @rbp >> ~(@r8) & @r13 | $buffer << $buffer & @r8 >> @rsp & ~++$proc & @r10 == $ip << 0n7 << $ip >> 0y111 << $teb & @r8 | 0y1 << @r11 & @rsp >> $buffer & @rdx ^ @rbx & @r9 ^ $thread ^ $proc | (@rsp) | $buffer)  { test_statement(0x1745); }
$error$
$end$
3079
 if (@r12 + $ip << @rdi & -@rsi & @r9 | $buffer << @r11 & @rbp ^ ++@r11 ^ $ip | @rsi ^ $teb ^ @rsp | @r9 @r12 + $ip << @rdi & -@rsi & @r9 | $buffer << @r11 & @rbp ^ ++@r11 ^ $ip | @rsi ^ $teb ^ @rsp | @r9)  { test_statement(0x408);  /* This is a not closed comment } else { test_statement(0x1ED);  // /* This is a comment  @rax = @rax ; }
$error$
$end$
3080
 if (0y1101 >> @rsp >> @rbp & @rbx << $ip >> $thread >> @r11 & @rax ^ @rdi << +@rbx >> @rsi & @rdi >> @rbp & @r10 & @r9 ^ +0x11 >> @r12 & @rsi & @r11 | @rax >> @rax & @r10 >> -@rsp & 0xC & ++@r9 ^ @rbx >> ~@rax & (@r13) & $buffer >< $teb << @rbp >> 0y1101 >> @r11 ^ -~@rdx << @rbp >> @r12 & 20 >> @r10 & @r13 & 0n6)  { test_statement(0x430);  /* This is a comment */ } elsif (@r11 >> $ip >> -0y1110 & @r12 & @rsi & @rdi ^ $ip >> $proc & ~@r9 & @rbp | $thread >> $proc & @r9 ^ @rdx & $ip ^ @rsi ^ +6 = @r12 & (@rsi) >> @rbp | @rbx & @rbp) { test_statement(0x645); } elsif (+-@r9 & @r11 & @rbx ^ 0x9 | 0y110 == ~+@rsp & $ip ^ @r9 ^ 13 | @rdi ^ @r13 ^ @rbx | @rdx ^ ~@rsi) { test_statement(0x1ECB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip ! $ip | @r12) ;  break;  /* This is a comment */ }
$error$
$end$
3081
 if ($buffer + @r9 >> @r8 ^ 15 << $teb >> 15 ^ 0y110 >> @rax & $buffer & 17 ^ $buffer & $proc | -0xB << 11 >> @r9 & -@rbp >> @r9 & @rdx | @rbx >> @r9($buffer + @r9 >> @r8 ^ 15 << $teb >> 15 ^ 0y110 >> @rax & $buffer & 17 ^ $buffer & $proc | -0xB << 11 >> @r9 & -@rbp >> @r9 & @rdx | @rbx >> @r9)  { test_statement(0xD29); } elsif (@rbx << @r13 | @r13 >> @r8 ^ @rsi ^ @r10 ^ @rdx | @rbx ^ $teb ^ @r11 | @r12 > @rbx << @r13 | @r13 >> @r8 ^ @rsi ^ @r10 ^ @rdx | @rbx ^ $teb ^ @r11 | @r12) { test_statement(0x22E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0xB | @rbx)@r12) ; } elsif (@r8 >> @r10 & $ip(@r8 >> @r10 & $ip) { test_statement(0xE3F);  if ($thread | @rbx < @rsi | @rsi)  { test_statement(0x1C33); } else { test_statement(0x9D4); } } elsif (+(@r10) & @rdi ^ +($ip) ^ @rax ; $thread & 0xA) { test_statement(0x110); } else { test_statement(0x1995);  /* This is a comment */ }
$error$
$end$
3082
 if (0x8 << @r9 << $buffer ^ (~--@r12) << -@r13 & $proc > +@rdx ^ @r10 & +$proc >> +0n8 & $thread & ~$thread ^ $thread & $buffer)  { test_statement(0x25F2);  break;  // /* This is a comment   // /* This is a comment  val = 0y1111 | $teb ; } elsif ($teb ^ @rdx & -$buffer ^ -$ip ^ @rsp ^ +$teb ; @r11 << @r10 >> 0y1010 | -@rsi >> @rdx & 0xA | -@r9 ^ $ip) { test_statement(0x9A9); @rax = 12 & @rbp ^ (~$thread) | $thread ^ -1 ; } elsif ($buffer & @rax >= @rsp) { test_statement(0x1A5E); ;  /* This is a comment */ } else { test_statement(0xBD5);  while  (~@rbx ^ @r8 <> @rdx | @r12 | $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3083
 if (@rdi + (@rdx) | -@rdx << @rsp & ~@rdi & (@rdx) & @r11)0y1010 >> (@rax) << ((@rax)) >> @r12 ^ @rsp << $teb)  { test_statement(0xE23); val = $proc >> $buffer & ~12 | @rdi | @rsp ; } elsif ($thread ^ @rbp >> @rax & $ip ^ -$buffer & 22 ^ @rdx ^ (@rsi) | $teb & $teb & 23 | 0n13 ^ $thread <= @rsp >> 0n17 >> 0x7 | @rax | @rsi & 0x3 | $ip) { test_statement(0x1AB3); } else { test_statement(0x2125); }
$error$
$end$
3084
 if (@r9 + @rdi >> 0y100 >> @r11 ^ $proc << 0y10000 ^ 0x0 >> -@rdi & @rax & @r10 @r9 + @rdi >> 0y100 >> @r11 ^ $proc << 0y10000 ^ 0x0 >> -@rdi & @rax & @r10)  { test_statement(0xDFE); } else { test_statement(0x223F); }
$error$
$end$
3085
 if (@rsi << @r13 >> 0n16 >> @rdi & $ip << (-~@r8) & @rsp >> @rsi ; $teb + $thread << -0n14 | @r11 << @rbp >> @rsi >> +@r11 ^ $proc)  { test_statement(0x92E); } else { test_statement(0x9D9); }
$error$
$end$
3086
 if (@r10 << @r13 & 0y1001 & 3 & 0y1110 & $buffer ^ @rbx << @r9 ^ @rsi & @rsp & @rax >= @r10 << @r13 & 0y1001 & 3 & 0y1110 & $buffer ^ @rbx << @r9 ^ @rsi & @rsp & @rax)  { test_statement(0x1047);  /* This is a not closed comment  break; }
$error$
$end$
3087
 if (@rax + $ip << 0n13 >> $proc >> +@rbp >> $proc ! @rax + $ip << 0n13 >> $proc >> +@rbp >> $proc)  { test_statement(0x1CA9);  break; } elsif (@rdx & +(0y101) ^ @rbx >> $teb ^ 0n5 | $buffer & 0n4 ^ +(~@r13) & 0y111 | @rdi | 0n2 ^ --@rax))@rbx >> +$buffer & @r13 >> $thread) { test_statement(0x165E); } elsif (@r12 ^ $teb ^ @r13 | $ip & ($buffer) ^ $proc != @r12 ^ $teb ^ @r13 | $ip & ($buffer) ^ $proc) { test_statement(0x1A5F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread | $teb < $thread | $teb) ;  for (val = 10; ~@rdx = -~@r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (+~@r11 & @r13 ^ @rax ^ $ip <> @rbx & @rbx ^ -~@rsp ^ @r12) { test_statement(0x1FFC); } elsif (@r13 | @r9 < @rbx | $teb) { test_statement(0x24D8); ;  // /* This is a comment  } elsif ($thread ! $thread) { test_statement(0x1FCF); } else { test_statement(0x1E81); }
$error$
$end$
3088
 if ($proc + 7 >> $buffer & 22 << +@rbx & @rdi >> @r9 ^ $thread << -$thread >> $buffer >> @rsi & @r8 >> @rsp))21 + -@rbp >> @rdx & $buffer | @rdx << 0y10000 & @r12 >> -@rdx)  { test_statement(0x10A); }
$error$
$end$
3089
 if (0n12 | @r13 >> @rdx & $buffer >> @r8 <> @r8 << 0n2 & 14 << @r13 >> $proc & @rax & +@rdi & @rdx ^ 0x5 << @rbx >> 23 | @rbx << $teb >> @rbx >> 0n10 & $proc ^ @r8 >> @r12)  { test_statement(0x196C);  while  (@rsp & @rsp ^ -@r9 ^ @rsi | ~($proc) ! @r12 & $buffer ^ @r10 | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1319);  /* This is a comment */  /* This is a not closed comment ; }
$error$
$end$
3090
 if (0n5 + +@rsi << (++$buffer) >> ++0n12 << @r8 & $proc ^ 0y10001 << 0n15 | @r11 << $buffer & @rsi & ~$proc ^ @rbp >> @r10 & @rdx == 0n5 + +@rsi << (++$buffer) >> ++0n12 << @r8 & $proc ^ 0y10001 << 0n15 | @r11 << $buffer & @rsi & ~$proc ^ @rbp >> @r10 & @rdx)  { test_statement(0x269); }
$error$
$end$
3091
 if ($proc << $teb << 0n18 >> @rbp << @rdi >> @rax | @r13 ^ @rbp >> +$buffer | $thread >> @rbx & ~@rbx(@rsp + 0n17 >> @rax ^ @r11 << 0y10001 & $buffer >> 0x13 & @rax ^ @rbx >> -$ip ^ @rax ^ 1 ^ 11 | @rdx & $proc & @r10 & @r12 | $teb)  { test_statement(0x1A3C);  while  ($proc & $proc <> @r8 ^ $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  This is a not opened comment */ } else { test_statement(0x514);  if ($teb | 6 < $teb ^ $buffer)  { test_statement(0xBC9); } else { test_statement(0xE12); }  while  (@rdx | $buffer >< (0x9) | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  /* This is a not closed comment  This is a not opened comment */ }
$error$
$end$
3092
 if (@rsp + @r11 ^ @r12 << @r10 & 0x13 >> 0x1 & +@rdx ^ @r8 >> $ip >< @rsp + @r11 ^ @r12 << @r10 & 0x13 >> 0x1 & +@rdx ^ @r8 >> $ip)  { test_statement(0x1EF0); }
$error$
$end$
3093
 if (@rsi + 0n5 << 0n7 ; @rsi + 0n5 << 0n7)  { test_statement(0x12A2);  This is a not opened comment */ } else { test_statement(0x2217); val = 0x6 ^ @r13 ^ $thread ;  while  (@rbp | @rdx != @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3094
 if (@rax << $thread << @rbx >> @r8 = @r10 + $proc << @r11 & 0n2 | 0x2)  { test_statement(0x150B);  This is a not opened comment */  // /* This is a comment   // /* This is a comment  }
$error$
$end$
3095
 if (0y0 << @rdi << 0xF ; 0y0 << @rdi << 0xF)  { test_statement(0x26DD); }
$error$
$end$
3096
 if (@r8 << @rsp | $teb << @rdx & @rdx & @r8 > @r11 << $thread << @r10 >> @rsi << ~$ip & @rsp & (@rbp) >> @rdi)  { test_statement(0xFC5);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi & -@rdx ^ $proc | @rbp | @rdx <> @rax & @r10 ^ @rsp ^ @rsp | @rsp | $proc | @rdi) ;  /* This is a not closed comment } else { test_statement(0x1ACA); }
$error$
$end$
3097
 if (@rsp + $thread << ~@rdi(@rdi + @rsp >> @r13 >> $thread >> @r13 ^ @r13 << @r8 | 0y11 >> @rsp >> $ip & @r9 >> +0x9 ^ 4 & $thread & $buffer ^ +@rbx & @rdx)  { test_statement(0x1A61);  while  (~~@rdx & ~$thread ^ @r11 ^ @rdx(($proc & @r12 | @rbx ^ $teb | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rax | 0n19 | @r12 ! +@rax | 0n19 | @r12) ;  while  (@rsp <> 0y1000 | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; 0x8 == @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r13 = @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y100 << @rsp >> @rbx & $teb & $thread & @rbx 0y100 << @rsp >> @rbx & $teb & $thread & @rbx) { test_statement(0x502);  if (0y10001 | $ip | @r13 = 0x9 ^ @r11 | @rdx)  { test_statement(0x216F); } elsif (1 ; @r12 | $teb) { test_statement(0x1CF5); } elsif (@rsp ; @r11) { test_statement(0x2543); }  for (; @rbp >< @r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = +@rbx | @rbx ;  for (val = 10; @rbp <> @rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } else { test_statement(0xF12);  for (val = 10; @r11 ^ 0y10001 | $ip | @r8 >< @rdx ^ @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
3098
 if (@rsi + 21 >> $thread >> 0x12 >> -@rax & @r13 << @rbp ^ @r10 << @r10 >> @r9 >> @r12 ^ @r11 & -@rsp | @r12 << -~(@r8) >> @rsi >> ~$proc @rax + @rdx << 0n14 >> $proc & @rbx << -@r10 >> @rdi & $proc >> 13 & 0n3 & $ip)  { test_statement(0x811); }
$error$
$end$
3099
 if (0x11 + ~@rdi << @rsp & @r8 << @r8 >> 0 & @rdx >> ~$proc & @rsp & @rbx ^ 0n5 >> @rsi & @rsp & 0y111 ; 0x11 + ~@rdi << @rsp & @r8 << @r8 >> 0 & @rdx >> ~$proc & @rsp & @rbx ^ 0n5 >> @rsi & @rsp & 0y111)  { test_statement(0x24E7); @rax = $proc >> $buffer & @rdx | 0n7 & 0y1010 ; } else { test_statement(0x1AD2);  /* This is a not closed comment }
$error$
$end$
3100
 if (+@r13 >> (0n7) << @rsp >> 20 >> @r9 ^ @r12 << @r9 >> $ip >> $buffer ^ (@r13) & 0x0 = +@r13 >> (0n7) << @rsp >> 20 >> @r9 ^ @r12 << @r9 >> $ip >> $buffer ^ (@r13) & 0x0)  { test_statement(0x1434);  /* This is a not closed comment  // /* This is a comment  } elsif (@rdx << @r10 ^ (@rbx) ^ -@rdi & @rdx | $teb | @rbx ^ @r10 ^ @rdx | ~$buffer ^ ~@r8 | ~@r10 | $thread == @rbx << @r9 >> @r12 >> @rbp & @r8) { test_statement(0x1EE4); } elsif (@rbx & $buffer & @r11 ^ (@rdx) & $thread | 0n13 ^ @r11(@rbx & $buffer & @r11 ^ (@rdx) & $thread | 0n13 ^ @r11) { test_statement(0x2173); } else { test_statement(0xE3D); @rax = @rsp & @r8 | 0y1111 ^ 0xF | @r10 | $teb ; }
$error$
$end$
3101
 if (@r13 & @r8 & @rbp ^ @rsp & @rbp ^ +21 ^ $buffer & @r11 >= @rax + @r8 | $proc << @r10 >> @rbp >> @r12 & 0y10000 ^ 0x8)  { test_statement(0x5D0); ; } elsif (@r11 << @rbp >> @r8 & $buffer & @r13 | @rsi >> $thread & ~@r12 ^ @r12 & -@rdx ^ @r8 | @r8 & $proc((@r11 << @rbp >> @r8 & $buffer & @r13 | @rsi >> $thread & ~@r12 ^ @r12 & -@rdx ^ @r8 | @r8 & $proc) { test_statement(0xC76); } elsif (@rsi & @rax & +@r9 ^ -$teb | @rdx & $teb ^ $ip @r11 & +@rbp & @rax ^ @rbx & @r10) { test_statement(0x8B8); }
$error$
$end$
3102
 if ($proc << @rax << @r10 ^ $ip >> $teb >> +21 ^ 0y1011 & (0n18) | @rsp << -@rax >> @rdi >> 0x10 & @rbp >> $teb & @r9 >= $proc + @rsp & 0n4 & @r9 ^ @r13 >> $teb & @rax ^ $proc ^ 0xD)  { test_statement(0x258A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 11 & 0n15 ^ @r10 ^ ~@rax <> 0x1 ^ @rax ^ $ip | (0n7)) ;  if ($buffer ^ 3 <= $buffer ^ 3)  { test_statement(0x1C4F); } elsif (@rdi))@r8 | $thread) { test_statement(0xCFA); } else { test_statement(0x13B3); } }
$error$
$end$
3103
 if (@r10 & @r9 << @r9 >> -@r11 >> @rdx & +$teb >> +0y1000 & @rax ^ @r13 >> @r10 & $teb >> $teb != $teb << @rsp & $teb << $thread >> @r12 >> $proc ^ $thread << $thread >> @rax | $proc << @rbx & @r10 >> 0xA)  { test_statement(0x1131);  if (@rdi & @r11 ^ +@r10 | @rsi ^ @r12 | $teb != @rdi & @r11 ^ +@r10 | @rsi ^ @r12 | $teb)  { test_statement(0x147F); } else { test_statement(0x5AC); } } else { test_statement(0x509); }
$error$
$end$
3104
 if (@rax + ~0y110 & ~(@rsp) << $proc >= @rax + ~0y110 & ~(@rsp) << $proc)  { test_statement(0xBEC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx & 0x11 >= @r13) ; ; } else { test_statement(0xB52);  while  (@rbx ^ @r12 | @r13 | $teb < @rbx ^ @r12 | @r13 | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3105
 if (@r11 >> 0x12 << $buffer >> @rax >> @rbx ! @r11 >> 0x12 << $buffer >> @rax >> @rbx)  { test_statement(0xE1D); } elsif (@rdi(@rdx >> @rdi ^ -@rdi >> $teb & @rax | @r10 >> @r10) { test_statement(0xD80); } elsif (+@rdx >> $teb | @r13 & $thread >< @r8 & ~@rbp & ~@r8) { test_statement(0x2475); @rax = @r9 | 4 ; ;  while  (@r12))0n18)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1E94);  This is a not opened comment */ @rax = @rbp ;  /* This is a not closed comment ; }
$error$
$end$
3106
 if (@rsi << @rsp << @rbp & @r10 << 0x9 >> 0xA >> @rdx & @r9 >> @rax & 4 | @rdx >> 0x10 >> @r12 & $teb >> 11 | @rdi >> @r13 | $ip & $buffer ! @rsi << @rsp << @rbp & @r10 << 0x9 >> 0xA >> @rdx & @r9 >> @rax & 4 | @rdx >> 0x10 >> @r12 & $teb >> 11 | @rdi >> @r13 | $ip & $buffer)  { test_statement(0x1DAF); } else { test_statement(0xEE7);  /* This is a not closed comment  This is a not opened comment */ }
$error$
$end$
3107
 if (@r8 & @rdi & $teb >> 2 & @r12 & @rsi <= @rdx + @r11 >> @r12 | @r9 << -@rbx >> @rdi >> @rbx)  { test_statement(0x1ED);  break; }
$error$
$end$
3108
 if (@rsi + @r10 | $ip & 0y100 >> @rsi ! @rsp >> (@r10) << $buffer & 0n8 << @rdi >> $proc >> @rbp & @r12 & @rsp & 0n14)  { test_statement(0x200C); }
$error$
$end$
3109
 if (0y101 << $proc << 0y10 & @r11 << $ip ^ $buffer ; @rbx + $proc >> @rdi << @rax >> (@rbx) & 0n6 >> @r11 & @rsp >> @rdx & @rax | @r8 ^ @r11 & $buffer & @r12 | ~$thread >> ($teb) | ~@rsi & @rdi)  { test_statement(0x5C7); }
$error$
$end$
3110
 if ($ip >> @r11 ! 14 << $ip >> $buffer >> $proc >> ~$thread & $teb << @r9 ^ $ip << 0n11 >> @rax >> @rsi & @r8 & $proc)  { test_statement(0x15D7);  /* This is a not closed comment  if ($buffer | @r10 | +@rdx)@rsp | @rdx | @rbp)  { test_statement(0x176E); } }
$error$
$end$
3111
 if (0n14 >> @r12 & ~0y1101 << @rsp | @r11 << $proc < @rdx << @r13 | @rax << 16 >> 0y1001)  { test_statement(0x960); } else { test_statement(0x865);  /* This is a not closed comment }
$error$
$end$
3112
 if (@rbp + @rdi & @rsi((@rsi + +22 >> $ip >> +0n16 & 0y0 << -@r8 >> @r13 >> @r8 & 0x3 | 0n5 >> @r12 ^ $ip >> @rdi ^ @r12 & -~@rsp ^ @rbp ^ $thread | @r9 & $ip ^ @r11 & 6 | @rsi ^ @rbx ^ @r11 | -@r10 ^ 0xF)  { test_statement(0x1B8); } elsif (@r8 | @rsi ^ $buffer ^ -@rdx ^ $teb | @rax & 0x0 ^ $buffer ^ $proc != $ip >> @rsi >> 0n8) { test_statement(0x1AE9); } else { test_statement(0xFCB); val = (@rbx) & @r10 ^ $thread ; }
$error$
$end$
3114
 if ($buffer << @r10 | @rax << $thread & @rsi >> ($thread) < @r9 + (@r12) >> 0n8 << 0x3 ^ ~@rbp >> $proc >> $proc ^ -@r9 >> @rdx ^ @rbx & +0y1111 | @r12 << ($ip) >> @r11 >> @rdi)  { test_statement(0x10A6); } else { test_statement(0x1C6F); }
$error$
$end$
3115
 if (@rdx + -$proc << @rdx >> @rax << +@r8 >> @r8 & @rbp & @r9 >> 0x10))+$proc + @rbx << @rax | @r9 >> @r13 >> $teb | 0y1 >> $buffer)  { test_statement(0xCAC); }
$error$
$end$
3116
 if (@rax + @r12 << @r12 & @rsi & @r13 <= @rdi << 0y10 >> 0x8 << @rdi >> @rsi >> @rdx & @rbp >> -+@rdi)  { test_statement(0x258); } else { test_statement(0x70F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer | @r13 @r12 ^ @r12 | 0y1111 | @rbp) ; }
$error$
$end$
3117
 if (@rax >> 0y1010 >> @r12 >> $teb & @rsi << ($buffer) & @rbp >> -0y1011 ^ @r13 << @rbx @rbx << 0n8)  { test_statement(0x1D8E); val = @rsp >> @r10 & @rdi & $proc | +@r9 | @r8 ;  for (val = 10; 0y1001 ^ @r11 != $teb | ($teb);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@rsi << 10 ^ $thread >> -@rdi & 0y0 & $buffer ^ @rsi & @rdi ^ @rdx ^ $ip <= ~@rsi << 10 ^ $thread >> -@rdi & 0y0 & $buffer ^ @rsi & @rdi ^ @rdx ^ $ip) { test_statement(0x24AE); } elsif ($buffer & @r8 & (@rbp) | $thread & 0n14 | @rsi ^ @r13 | ~0n16 | $teb != @r10 >> 0y1100 ^ @rsi & 0x9 | 0y101 & @r10 ^ 2 ^ $teb) { test_statement(0x1CE8);  This is a not opened comment */  /* This is a comment */ } elsif (0n5 & @r9 ^ @r8 ^ $thread @r8 & @r13 ^ $thread ^ @r11) { test_statement(0x2591);  /* This is a comment */ } elsif ($thread | $proc | @rax <= $thread | $proc | @rax) { test_statement(0xE16);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi >= @r9) ;  break; } elsif (~$thread < @r8 | (-@rdx)) { test_statement(0x10E4); } elsif (@rsi = @r9) { test_statement(0x1DFC);  if (@rdx == @rdx)  { test_statement(0x2524); }  for (; @rbp <> 0x3;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x0(+@r13) { test_statement(0x191C);  break; } elsif (@r10((@r9) { test_statement(0xBE3); } else { test_statement(0x1F55);  break;  /* This is a comment */ @rax = @r9 ;  while  (@r10 > ~~$teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  // /* This is a comment   /* This is a comment */ }
$error$
$end$
3118
 if (10 + $ip << @rbp >> @r8 >> @rbp == @rbx + $proc << @rdx << (@rdi) >> @rbx >> 21 & 5 >> @rdx & $buffer >> @r11 & @rsp)  { test_statement(0x10E2); } elsif (@r12 << $teb & 0n17 >> $ip | @rbp))@r12 << $teb & 0n17 >> $ip | @rbp) { test_statement(0xB63);  if (+@rsi ^ @r11 = +@rsi ^ @r11)  { test_statement(0x1B31); }  for (val = 10; ~@rbp = $ip | @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3119
 if (@r11 + -$buffer << +@r8 != @rdx << $thread << @rbp & @rsp << 0y10001 | @rdi << @r12 >> 0y10000 >> $ip & $buffer ^ @rbp >> 0y100 & @rax & -@r13)  { test_statement(0xC81);  while  (@r9 & ~@rdx ^ @rax | $ip ^ @r12(@r9 & ~@rdx ^ @rax | $ip ^ @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x201C); }
$error$
$end$
3120
 if (@rdx & 0y10001 << $buffer >> 0x7 >> $proc | $ip >> @rbx | @rbx >> @rbx & @r13 & @r11 ^ @rdi & 0n14 ^ --$teb | @r8 & $buffer ^ 4(0n0 >> @r12 ^ 0y10000 ^ 0n18 ^ $proc ^ @r13 | @rax << 0x4 ^ @rsp & @r9 & @rdi ^ @r10 ^ @rdx ^ @r11)  { test_statement(0x1B); } else { test_statement(0x109D);  if (~$buffer ^ ($ip) | 0xC)17 ^ 0y1)  { test_statement(0x14CF); } else { test_statement(0x1762); } }
$error$
$end$
3121
 if (@rdx + @rdi ^ @rsi ^ @r11 >> $ip((@rdx + @rdi ^ @rsi ^ @r11 >> $ip)  { test_statement(0xFEF);  /* This is a not closed comment  This is a not opened comment */ val = ((@r8)) ; val = $teb ; } elsif (@rsp << $ip >> @rbp & @rdi ^ (0y10) ^ @rdx & 0y10 ^ @r12 ^ -$proc(@r10 & @r8) { test_statement(0x1D2);  while  (@r10 <> @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3122
 if (-@r11 | @rdi << 0y1000 >> 0y0 != -@r11 | @rdi << 0y1000 >> 0y0)  { test_statement(0x1850);  /* This is a comment */ } elsif (0n6 << @r8 & @r11 >> @rdi ^ @r8 >> 0y10010 & ($teb) ^ @r13 | @r8 >> @r10 & @r10 & @rbx | @r10 == $thread >> @r10 >> @rax & $proc >> @r9 & @rdi & ~@r10 | $proc >> @r9 ^ @rsp ^ @r8 ^ $proc | @r11 ^ @rax ^ $teb) { test_statement(0x515); }
$error$
$end$
3123
 if ($thread + $ip << @rbp << @rbp >> 23 << $thread = 0n17 >> (0y111) << $teb & $proc & $thread >> @r9 & @r9 & $buffer ^ (@rbx) & 5 & @rsi ^ 0y0 >> $thread & @rbx)  { test_statement(0x4FA);  while  (-$ip | (@r11) | @r10))-$ip | (@r11) | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 << @r9 >> @r12 >> $ip & @rdx == @r9 << @r9 >> @r12 >> $ip & @rdx) { test_statement(0x154);  for (; (0n5) = +@rax ^ @rbx | -0y1000;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } else { test_statement(0x140A);  /* This is a not closed comment @rax = @rbp ^ (@r10) | @r13 ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@r8)@r8) ;  for (val = 10; +@rdx((@rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3124
 if (-@rdx & @rdi & 0y10 >> 0x13 <> -@rdx & @rdi & 0y10 >> 0x13)  { test_statement(0x140F); } elsif ($ip >> @rdi & $teb >> @r12 ^ 0xE | +@rax ^ @r9 & (@rsi) ^ 0n4 | @r8 & $ip ^ @r10 ^ $buffer ! @r11 | @r12 & @r10) { test_statement(0xC7B); } else { test_statement(0xA7B); }
$error$
$end$
3125
 if (@rdx << $thread << @rsp >> 6 << $proc & (-@r10) & $thread & ~@r13 & +@rdx ; @r13 + 0y10 >> $ip << @rbp & 10 << 0n17 >> @rdx >> $thread & @rdi >> @rsi | @rax >> ~0n0)  { test_statement(0x157B); } elsif (0n13 << $buffer >> -@rax & @r9 >> @rax & 0n4 & @rsp | $teb >> @rdx & $ip ^ (@r13) & @rdx ^ @rbx | @r10 | -@rdx | @rbp | @rsi == $buffer >> $teb ^ 12 >> @rsi & @r10 & @rdx | 0y100 >> $teb & $proc) { test_statement(0x1A43);  This is a not opened comment */  while  ($ip <> $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = +@rdx | -~@r12 ; }
$error$
$end$
3126
 if ($buffer << 0x6 << @rsp >> @r12 << @rbp >> $thread >> @rbp & @rdi << @rbp ^ @r11 & @rbx >> $buffer & @rbx | @r11 >> @r9 >> (-@rbx) & $buffer >> @rdx ^ @rax & $buffer ^ @rbx ^ 0y1110 ^ +@rbx @r8 + @rbx >> 1 << (@r9) & @rdi << @rdx & $thread >> $buffer & @rbx & +@r9 ^ $ip ^ 0x4 & +-@r9 ^ -0n17 ^ @r8 | $ip << $thread)  { test_statement(0x1652);  break;  if (@r11 ^ @r9 | @rsp == @r11 ^ @r9 | @rsp)  { test_statement(0x1E13); } elsif (@r13 ; @r13) { test_statement(0x20DC); } elsif (@r10 ; @rbp) { test_statement(0x222B); } else { test_statement(0x1F93); } @rax = @rdx ;  break;  /* This is a comment */  while  ($buffer >< +5)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~0y1100 ^ 7 ^ @r11 | @rbp >> @rsi & @r13 & $proc ^ -@rax & ($teb) ^ 0xD ^ @r13((~~13 << @rsi >> @rsp ^ $thread & @r13 & $ip) { test_statement(0x263C); } else { test_statement(0x1FB1);  while  (0n9 | ~~@r13 ! @rdi ^ 0x3)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r9 == @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  val = @r12 ;  for (; 0x9(0x9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx > @rdx) ; @rax = @r13 ; }
$error$
$end$
3127
 if (@rbx >> $buffer & 16 << 0n0 ^ $teb & @r8 >> @r9 & 0x7 & @rbp | 0n14 ^ @r9 >> @rax | -@rsi & @rdx ! ((@rax)) + @r11 << 0x4 | 0x13 ^ @r12 >> @r8 & @rdx ^ +-~0y100 ^ @rax)  { test_statement(0x18FC);  while  (@rbp & $ip | +@r13 | @r10 < @rbp & $ip | +@r13 | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3128
 if ($buffer + $proc << @rdi >> @rax > @r11 << 0y10000 >> @r9 >> $proc | @rsp & @rax & @rsi & $thread ^ @r13 >> @rsp & @rsp)  { test_statement(0x195A);  for (val = 10; $thread | @rax ^ @r13 | 0y10011 | @rdi = $thread | @rax ^ @r13 | 0y10011 | @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  while  ($ip | @rbp ; -@r10 | ~0n7)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
3129
 if (@r9 << $proc << 0n19 >> @rsp << $teb >> 0y1101 >= @r8 + $thread >> @rdx << @r11 | 0n0 << @rdx >> @rdx >> 0n10 ^ (@rax) & @r8 & -@rbp ^ @rax)  { test_statement(0x1323);  break; } elsif (@rdi ^ $ip >> @rsi & +$thread & ~@r11 ^ @r13 & ~$proc ^ $thread ^ -@r11 >= -@rsp & ~0n14 >> $proc & ~@rdi | $thread & @r12 & $teb ^ $buffer ^ @r10 ^ @r10 | @r12 & 5 | @rdx ^ $proc | $teb | -@r11) { test_statement(0x2301);  // /* This is a comment  } elsif (@r13 >> +-(~$teb) ^ @r10 & @r13 | @rsi & $teb ^ +@r9))@r13 >> +-(~$teb) ^ @r10 & @r13 | @rsi & $teb ^ +@r9) { test_statement(0x1527); } elsif (-~@r12 & @r9 ^ +$proc))-~@r12 & @r9 ^ +$proc) { test_statement(0x7EC); } else { test_statement(0x171B);  while  ($proc ^ +$buffer))$proc ^ +$buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3130
 if ($ip + @rax & @r13 >> 0y10000 >> -$buffer & @r12 >> @rdi & $buffer ^ 0y10000 << @rsi >> 5 | $thread << $proc & $thread >> 4 & @rsp ^ @r13 >> 0y1000 & $teb ^ @r11 & ~-$ip ^ -$thread($ip + @rax & @r13 >> 0y10000 >> -$buffer & @r12 >> @rdi & $buffer ^ 0y10000 << @rsi >> 5 | $thread << $proc & $thread >> 4 & @rsp ^ @r13 >> 0y1000 & $teb ^ @r11 & ~-$ip ^ -$thread)  { test_statement(0xF28);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi > @rsp ^ @r10 ^ @rdx | ($ip)) ; } elsif (-$ip << 0y10001 >> @r11 & $ip >> @rbp & $buffer & 0x0 ^ @r12 >> @r10 & @rbx & $thread < $thread << $teb >> 0y110 & -0n15 >> $thread & $buffer & $thread ^ @r12 >> @r9 & 0xE | @rdx >> @rdi ^ @rsp ^ @rdi ^ @rdi | @r10 & @r8) { test_statement(0x905); } elsif (@rdi >> $ip | $buffer & @rbx ^ 0x6 ^ @r11 | 0n11 | @rsi | ~@rbx <= @rbx ^ 0y1101 | $teb) { test_statement(0x173A);  if (@r9 <> @rbx)  { test_statement(0x325); } else { test_statement(0x2322); }  /* This is a comment */  /* This is a not closed comment  for (; 17 <> @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1CF2); }
$error$
$end$
3131
 if ($proc << @rbx))(@r12) + $thread << 0n6 & ~$teb << 0x12 ^ @rsi << @r13 >> $buffer | @rdx)  { test_statement(0x265C); } else { test_statement(0x1C); }
$error$
$end$
3132
 if ($ip + 0y1 << $thread >> @rdx >> @r12 < 0y11 + @rdx >> ($proc) << @rsp >> $proc & +@r13 << $ip >> @rdx >> $ip & @r13 & $buffer | $ip << ~@r12 >> @r9 & ~@rax | $teb >> (~@rbx) | $teb)  { test_statement(0x15F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx & (@rbp) >< 0y110 | $ip ^ ~-($thread) | @rbp) ;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y10011 | 0n0(@r12) ;  /* This is a comment */ } elsif (@rsp >> @r11 & @r12 ^ @rsi ^ @r12 & $teb ^ $thread ^ @r12 == @rsp >> @r11 & @r12 ^ @rsi ^ @r12 & $teb ^ $thread ^ @r12) { test_statement(0x230F);  while  (@r11 ^ @rbp != @r11 ^ @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($ip | $proc))@r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r13 = @r13)  { test_statement(0x12F2); } elsif (-@r9 = @r12) { test_statement(0x2662); } }
$error$
$end$
3133
 if (@r13 >> @rbx & @r10 >> 2 >> @r12 ^ @r8 >> @r13 >> @r8 & @r9 >> @rbp ^ @rsp | 0y10011 >> $proc ^ $thread & -@r8 ^ @r12 | @rdi & $ip | 0y10011 & 0x12 ^ $ip ^ @rdi | @r8 ^ @rdx | $buffer ; 14 >> @rsp << @r11 >> @rdx ^ ($buffer))  { test_statement(0x634); } elsif (@rbp | @rbx | @rax & $teb | $thread)~@rsi >> $buffer >> @r8 & @r11 & @rax & 0y111 | @rbx >> $thread) { test_statement(0x15D7); }
$error$
$end$
3134
 if (@r11 << @rsp << +@rdi | 2 << @rsi ^ @rsi >> $ip & $buffer & @rsp | 0n11 >> $ip ^ @rbx = @r9 >> $ip >> @r8 >> $proc ^ $buffer << @rdi >> @rbx)  { test_statement(0x245B); } else { test_statement(0x1137); }
$error$
$end$
3135
 if (($ip) + @rbp << @r13 << 0y1111 >> @r10 & 4 >> @r13 >> @r10 & @r13 ! @rax + @rbx << @rsi << $teb >> @r10 << @rsp >> @r10 & @r8 << @r12 >> @rbx >> 0y10001)  { test_statement(0x64);  This is a not opened comment */ }
$error$
$end$
3136
 if (@rsp >> (@rbx) >> @rax >> $teb & 0 << @r12 >> 0n7 & $thread >> @r12 & $thread ^ @rbx & @r12 ^ $teb & $proc(@rdi + 14 >> -$teb << $teb >> @rdx & @rsp << @r12 >> @r8 ^ @rbp ^ @r9 >> 0n15 & @rbp & ~~0n10)  { test_statement(0x23D7); }
$error$
$end$
3137
 if (+$thread + @r12 | @r10 | @r8 >> 0y1101 & $proc ^ @rsi ^ @rsp ^ $teb | @rdi & @r8 ^ ($ip)((+$thread + @r12 | @r10 | @r8 >> 0y1101 & $proc ^ @rsi ^ @rsp ^ $teb | @rdi & @r8 ^ ($ip))  { test_statement(0x81B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer & @rbp ^ 0x9 <> @r12 | 0x3 ^ @r13) ; } else { test_statement(0x1636); }
$error$
$end$
3138
 if (@rdx << @rdi & @rax << @rdi & @r10 >> @r12 | @rbp >> @rax & 0y1111 >> @rdi ^ $proc >> @r11 & 0y111 & 2 ^ @r10 & 4 | +@r11 >> 2 ^ $buffer & 0y100 | @rdx ^ @rdi ^ $ip 20 << @rdi << 0n5 >> @rdx | ~@rsi << @r10 & $teb | @rbp >> @rbp & $thread & 0n15 | $ip & ~$buffer ^ $proc)  { test_statement(0xB35); }
$error$
$end$
3139
 if (0x1 + @r8 >> @r9 << @rbx & @r8 ^ @rax & 0x11 >> @rdi & @rax & ~@r11 | $buffer >> -0y111 >> @rsp & 0x7 >> $proc))0n12 << @rsi >> @r13 | 0n17 ^ @rdx ^ $ip & @rdx ^ @rsi | @rsi & (0x0) & @r11)  { test_statement(0x1997);  /* This is a not closed comment } elsif (0y111 & @r11 >> 17 & $thread & (@rsp) ^ @rsi >> $thread & @rax ^ 0y1101 ^ -@rbx | $ip >> 0y1110 & 0y111 >< $teb >> 0x10 >> $thread ^ @rsp >> 0xF ^ 7 ^ @r10 ^ @rsi | @rax >> +$thread ^ @r8 ^ @rax) { test_statement(0x19F2); } else { test_statement(0x1273);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@rax) > +(21)) ; }
$error$
$end$
3140
 if ($buffer >> $thread ^ @rsp << @rbx & 0y10000 >> 16 = @rax >> ~(@rbp))  { test_statement(0x1A1F);  // /* This is a comment  } elsif ((1) & @rax >> 6 ^ 0y10 >> $ip & @rbp & $buffer ^ 0n18((1) & @rax >> 6 ^ 0y10 >> $ip & @rbp & $buffer ^ 0n18) { test_statement(0x153E);  This is a not opened comment */  /* This is a not closed comment } elsif (@r9 >> @r10 ^ @rdx ^ (@rsp) ($thread) ^ $teb & @r12) { test_statement(0xCFE); } elsif (@rbp & @rdx | @rbp | @rbp | 12 >= @rdi & +0n17 ^ -$teb | @r8 ^ $proc | @r12 | 0n8) { test_statement(0x108A); } else { test_statement(0xCAE);  // /* This is a comment  }
$error$
$end$
3141
 if ($teb << ~@r8 >> $thread << $ip ^ $buffer << @rsp >> @rbp >> 15 & (7) >> @rsp | @r11 & @r10 & @rbx | $thread >> @rsi & 0xD & @rbx ^ +@rdx & @r12 | @rbp & $thread | @r10 | @rdx | ~@r12 <= $teb << ~@r8 >> $thread << $ip ^ $buffer << @rsp >> @rbp >> 15 & (7) >> @rsp | @r11 & @r10 & @rbx | $thread >> @rsi & 0xD & @rbx ^ +@rdx & @r12 | @rbp & $thread | @r10 | @rdx | ~@r12)  { test_statement(0x23C6);  if (0y10010 & $teb ^ @r12 | (-$ip) ^ ~@rdi(@r11 ^ $buffer | @rdi ^ @r10)  { test_statement(0xE1D); } else { test_statement(0x5C4); } }
$error$
$end$
3142
 if (@rbp + @r10 & @r13 >> +0n2 >> (@r8) 0n5 + 0y10011 << $proc << @r11 >> 0x12 >> $ip & @r8 << 0xC)  { test_statement(0xF37); } else { test_statement(0x1A63); ; }
$error$
$end$
3143
 if (+@rax + @rax << @rax | @r8 >> +@r9 & @r11 & @rsp & 0x13 ^ $thread >> @rax & @rsi & 0n2 | 0xB & @rbp ^ @rax & @r13 ^ $proc ^ $teb | @r11 ^ +@rdx ^ @rbx | @rbp | 0y10010 < +@rax + @rax << @rax | @r8 >> +@r9 & @r11 & @rsp & 0x13 ^ $thread >> @rax & @rsi & 0n2 | 0xB & @rbp ^ @rax & @r13 ^ $proc ^ $teb | @r11 ^ +@rdx ^ @rbx | @rbp | 0y10010)  { test_statement(0x2397); }
$error$
$end$
3144
 if (@rsi & @rbx >> 0y1110 & 0xF >> (@rbx) & @rax < @r10 + $teb << @rbp << @rsp >> $ip ^ @rsp << @r12 >> -@rbp | @rdi & @rbp >> @r11 & @r8 & @rax | @r10 & $proc & @rdi)  { test_statement(0x13AA); } else { test_statement(0x8D4); }
$error$
$end$
3145
 if (@r8 + @rsi << @rdx >> $teb << @rbx | (@r9) << @r12 >> 0n15 >> 0n8 ! @rdx + 0n19 << @rdx << @rsp >> 0x1 << (0n8) & @rbx << +@rdx >> @rbx ^ @rdx << @r12 ^ $buffer & @rsp & -0x0)  { test_statement(0x1007); val = ~(@rsi) & -(@rbp) & @r8 | $thread & $proc ; }
$error$
$end$
3146
 if (0n17 + @r12 & $thread ^ (+$buffer) & 22 ^ @r12 & 0xD & 0x5 ^ $ip & @r8 | $buffer << @r10 & @r13 & $thread ^ @rsp)0n17 + @r12 & $thread ^ (+$buffer) & 22 ^ @r12 & 0xD & 0x5 ^ $ip & @r8 | $buffer << @r10 & @r13 & $thread ^ @rsp)  { test_statement(0x112E); } else { test_statement(0xA59); }
$error$
$end$
3147
 if ($thread + @r8 << $teb << +$ip & 20 << (-@rdx) & 0y10 >> @rdx & $buffer & @r12 ^ $thread >> @r12 ^ 4 & @rax ^ @rdx ^ 0y1100 | @r12 ^ @rbx >> @r11(((0x5) >> @r9 | (@r9) << @rax)  { test_statement(0x1A8D);  for (val = 10; 0y1011(0y1011;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x706); }
$error$
$end$
3148
 if (@r12 | @rbx ^ 0xD ^ $ip & $ip ^ @rbp | @r11 ^ 0xF <> @rdi + @rdi >> 0y10011 ^ (@rsp) << $buffer ^ $buffer | $buffer >> @rsp ^ @rax ^ $proc)  { test_statement(0xD4E); } elsif (-@rsi << @rdi ^ @r11 >> $ip ^ @r12 & @rbp ^ @r8 ^ (@rsi) = -@rsi << @rdi ^ @r11 >> $ip ^ @r12 & @rbp ^ @r8 ^ (@rsi)) { test_statement(0x20D5);  // /* This is a comment   while  ($buffer | @rbx = $thread | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   for (val = 10; (3) >< @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($teb >= @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  /* This is a comment */ } else { test_statement(0x126E); }
$error$
$end$
3149
 if (~-@rsp << @rdx >> @rdx << @rsi >> (@rsp) >> @r10 ^ 0n16 & ~@rdx >> 0y1110 ^ @rdx >> $thread & @rbx & 7 ^ $ip ^ $ip | 0y11 >> ++4 >> @r13 | @r13 >> -@rbp ^ $teb ^ +@rdi ^ @r13 | @r10 & $thread ^ @rbx)$proc ^ @rdx << @rdi ^ @r10 ^ @r11 & @rbp | @rax >> $proc & -@rax | $thread >> $teb & @rsi | $thread ^ 0y10000)  { test_statement(0x234A); } elsif (@r9 << @r8 & @rsp >> 0x11 ^ @r9 & $thread & 0n3 ^ @r10 ^ @rsi ^ @rbp((@r9 << @r8 & @rsp >> 0x11 ^ @r9 & $thread & 0n3 ^ @r10 ^ @rsi ^ @rbp) { test_statement(0x62);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~15)$thread ^ @rbx) ;  This is a not opened comment */ } elsif (@r9 >> 20 & ~$proc ^ @rdx & 0 ^ @r9 ^ ~$teb((@r9 >> 20 & ~$proc ^ @rdx & 0 ^ @r9 ^ ~$teb) { test_statement(0x1B51); val = @r11 ;  // /* This is a comment   if ($thread))@r11)  { test_statement(0x1FC6); } elsif (@rdx ! @rbx) { test_statement(0x993); } }
$error$
$end$
3150
 if (0y0 << +0x6 >> $proc & -@r12 & @r10 >> $teb ^ $ip & 0x4 >> @r13 0y0 << +0x6 >> $proc & -@r12 & @r10 >> $teb ^ $ip & 0x4 >> @r13)  { test_statement(0xBD5); val = @rdi | @r13 & $teb ^ (+$teb) ^ $buffer | @rsp ^ @rdx | @rbp ; }
$error$
$end$
3151
 if (0n2 + $proc >> 0n0 << $teb >> (@r12) >> ~@r11 & $buffer << @r12 ^ @rbx << $teb >> @rax ^ @r8 >> @rdx & +@rsp | @r10 << @rsp >> @rbp ^ $teb >> @r13 | @rdx >> @rax ^ $ip & ~$thread ^ $thread ^ +((@r8)) == 0n2 + $proc >> 0n0 << $teb >> (@r12) >> ~@r11 & $buffer << @r12 ^ @rbx << $teb >> @rax ^ @r8 >> @rdx & +@rsp | @r10 << @rsp >> @rbp ^ $teb >> @r13 | @rdx >> @rax ^ $ip & ~$thread ^ $thread ^ +((@r8)))  { test_statement(0x2015); } elsif ($proc ^ $thread >> @rsi | @rsp & +13 & 0x3 | @r9 & ~0xC | (@r8) >= @rsp >> @rbx & 0n10 >> $thread & @r12 ^ @r8 >> ~(+-@r10) & @rdi | @r13 & @rax | @rsi & @rax ^ $thread) { test_statement(0x70E);  This is a not opened comment */  // /* This is a comment  } elsif (@rbx < @rbp & @r11 | @r12 & @rbx | $buffer) { test_statement(0x1B11); } else { test_statement(0x21F3); }
$error$
$end$
3152
 if (@rdx + 0y10011 >= @rsp << @r9 & ~+0y1001 << $teb >> (@rdx) & (@rsi) ^ @rax ^ ((0xE)) >> @rax & @rbp & @r12 ^ $proc ^ 0n10 ^ @rbp | 0y1001 << @rdi >> 0x2)  { test_statement(0xE9E); }
$error$
$end$
3153
 if (@rax + @r9 >> @r8 >> 10 >> @r11 | @r12 >> @rdx & @r11 & @rdx & (@rsp) ^ @rsp >> @r8 & @r8 <> @rax << $teb << @rsi >> @rsp << 0y10000 >> (0xF) >> $thread & @r13 ^ ~@rdx << $buffer & @rdx >> @r9 & @rax ^ 0x1 >> @r9 & $teb)  { test_statement(0x1F35);  while  (+$proc ^ @r11 < @rsp & @r11 ^ @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif (@r12 << @r8 >> @rbp & $thread >> @r8 & $teb & 0n16 ^ $thread & @r8 & @rsi ^ $buffer & @r9 ^ $ip ^ 0xE | $thread >> $buffer | @r8 >= $buffer) { test_statement(0xF4E);  /* This is a comment */  while  (@r13 <= @rsp | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (+-@r13 & $proc ^ (@r12) | 17 & 0y111 ^ @r11 ^ @rsp ! +-@r13 & $proc ^ (@r12) | 17 & 0y111 ^ @r11 ^ @rsp) { test_statement(0x13CC);  while  (@r13 | ~~(@r13)))@r13 | ~~(@r13))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r13 & @rax ^ $ip ^ $thread | $proc ^ 17 | @r10 @rdx ^ @rsp) { test_statement(0x6D);  if (-$buffer ! -$buffer)  { test_statement(0x334); }  break; }
$error$
$end$
3154
 if (0y10011 + (@rbp) >> @r11 <= -@rdx + $teb | +@r10 & $proc >> @r12 & @r11)  { test_statement(0x114C);  // /* This is a comment  } else { test_statement(0xD2C); val = -0n6 & @rax ^ @rax ;  /* This is a not closed comment  This is a not opened comment */ }
$error$
$end$
3155
 if (@rdi + @r9 & @rbx & 0n18 | 0n13 << @r8 >> $thread >> @r11 & @rsp ^ $ip ^ @rbp | +$proc & @r13 | @rdx & @rsi ^ -@r11 <= @r8 + @r9 << @rbp >> 0xE << @rdi)  { test_statement(0x1A75);  // /* This is a comment  } elsif (22 << -$proc & @r10 >> $buffer ^ $ip & @r10 & @r9 ^ @r8 & @rsi ^ @r12 | @r13 >> 0x11 & $thread & @r13 != $proc >> 14 ^ +@r9 & $teb & $ip ^ @r10) { test_statement(0x23CC);  while  (@r11 ^ 6 | @rax | @r13 > @r11 ^ 6 | @rax | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x209A); }
$error$
$end$
3156
 if (@rbx << @rax & @r10 & @r12 >> $proc ^ 21 >> $teb >> @rdx ^ @rax >> @r9 & @rsi & @rdi | 0y10000 >> 0n1 >> @rbx ^ $thread >> @rdi & 0y1110 | @r12 & @rbx & 0y1 | @r10 ^ @rbx ^ 21 | $thread(@r8 << @rbp << @r13 & $proc << @rax & @r12 & @rdi ^ @rdi >> @r10)  { test_statement(0x1E31); } elsif ($proc << @rbp ^ 0n17 ^ @rdi & @rax ^ 0y10000 <= $proc << @rbp ^ 0n17 ^ @rdi & @rax ^ 0y10000) { test_statement(0x1707); }
$error$
$end$
3157
 if (@rsi << 14 >> $buffer << @r10 ^ 0x2 << 22 >< $teb << @rsp << 0xB >> $thread << @r13)  { test_statement(0x248A);  This is a not opened comment */ } elsif (0x3 | $thread >> @rdi <= 0x3 | $thread >> @rdi) { test_statement(0x6A3);  /* This is a not closed comment }
$error$
$end$
3158
 if (@rbx << (@r9) >> @r10 >> @r9 >> @r8 & @rsi & @rax >> @rbx & $ip & @r9 != @rbx << (@r9) >> @r10 >> @r9 >> @r8 & @rsi & @rax >> @rbx & $ip & @r9)  { test_statement(0x20BE);  while  ($ip | @rax ^ $thread | (@rbp))$thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3159
 if (@r10 + $buffer << -@rbp & @rdi >> 0y110 >> @r11 | @r11 <> @rbp ^ @rsp << ($thread) & @rax >> $teb ^ $proc ^ @rsi & @rax ^ @r10 | @rax << @r13 >> $proc >> @r12 & 22 >> @rdi & $buffer)  { test_statement(0x21E); }
$error$
$end$
3160
 if (@r8 + @rdi << @rdi << @r13 >> $proc >> $proc != @r12 >> $ip << @r13 >> @r10 >> +16 & @r11 >> @rdx ^ @r11 >> 0x13 & $ip >> +~@rbp ^ @r13 & 0y1011 & 6)  { test_statement(0x1B56);  break; } elsif (+@rdi << @rsi & $ip & @rax ^ (@r10) ! @r13 << $proc & @r9 ^ @rsp >> $buffer & @r10 ^ +@rax & (@r11) ^ 10 ^ 0n10 | 0xC ^ @rbx & +~23 ^ +@r8) { test_statement(0x18A2);  if (@rsp ^ $teb((@rsp ^ $teb)  { test_statement(0x53F); } } elsif (+((@rax)) >> @rax & $proc & @r10 ^ 0y11 ^ @rbp | @r8 & +@r11 ^ -@r12 | +@rdi | 0y1001 == $proc & $ip & ~0y101 ^ $thread & @rax | +@r9 & @rsi ^ @rbp ^ @r10) { test_statement(0x86E); }
$error$
$end$
3161
 if (@rsi + $teb >> $thread << -+0y101 < @rbx + @rdi)  { test_statement(0xA3C);  // /* This is a comment  } else { test_statement(0x91F); }
$error$
$end$
3162
 if (@rdx >> +@rbx >> @r10 >> $teb >< @rdx >> +@rbx >> @r10 >> $teb)  { test_statement(0xD09); ; } else { test_statement(0xFDF); }
$error$
$end$
3163
 if (@rdi & @rbp >> @rdx & @rsp ^ 0y11 << $teb >> 0xF & 0y10 ; (@r13) << (+$ip) << +@r10 | $ip << $buffer >> @rdx ^ -0y1101 & 0y10011 & ~@rsi)  { test_statement(0x2428);  for (val = 10; (@r11) ^ @r13 ^ +@r10 | @r8 <> @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r11 ^ @r11 ; @r10 | @rdx | -0n7)  { test_statement(0x154A); } elsif (@r12 >= @rbx) { test_statement(0x9A9); } elsif ($proc > $proc) { test_statement(0x1653); } elsif (21 $thread) { test_statement(0x83A); } } elsif ($thread << $thread | ($buffer) & 0n11 & @r12 > @r8 << @r13 & -0n12 >> 0x12 & @rdi ^ @r13 >> @r10 & (@rsi) | @rdi) { test_statement(0x7BE);  for (; @rsi ^ @r8(@rsi ^ @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x3D5);  This is a not opened comment */ }
$error$
$end$
3164
 if (($teb) + ~-@rbx ^ $teb << @r11 >> $proc & @rsp >> $teb & @r10 ^ $buffer >> @r11 ^ 0y1111))@rax << @rbp >> -@r11 << @r9 >> @r11 ^ $teb << $thread & 14 & ~@rsi & 0n8 | ~@rdx << -@rdx & $thread >> @r10 | $ip & $ip)  { test_statement(0x26D2); } elsif ($buffer & @rsp < @rax >> @rbp & 14 >> $buffer & $teb & ~~@r11) { test_statement(0x654);  /* This is a comment */  /* This is a not closed comment } elsif (@r9 | @rbp ^ $thread 22) { test_statement(0x26B0); } else { test_statement(0x184C); }
$error$
$end$
3165
 if (0y111 & 0n14 >> $teb >> @rdx & ~$ip & +21 < -@rsp + @rax >> $buffer << $teb >> @rsp >> 0n8 | $ip >> @rax >> $proc ^ 1 >> -$buffer & @r9 & -@r10 ^ $ip ^ @r12 | @r9 & $buffer & @r12 | $ip & @rsi)  { test_statement(0x1510);  break;  for (val = 10; @rdi ^ @r8 | @rdi)0n12 ^ 0n7 | 0n9 | @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rbx ^ @rax ;  for (val = 10; 0y10001(($teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = 0n12 ; ; }
$error$
$end$
3166
 if ((@rdx) << $proc >> @r8 << (@r8) & @rsp >> $thread >> $buffer & @rax >> (0n0) & @r9 | @r13 > @rbp + (-@rsi) >> 14)  { test_statement(0x744); } else { test_statement(0xFC8); }
$error$
$end$
3167
 if (@rbx + 0x9 & -@rsi << $thread ^ @r11 << -$ip & $proc & @r11 & $proc ^ ~@r9 & @r13 & $teb ^ $ip & @rbx >= @r12 << @r10 << -(0y10000) >> ~@r12 << @rdx)  { test_statement(0x1A26);  // /* This is a comment   /* This is a not closed comment  /* This is a comment */  /* This is a comment */ } elsif (@r8 ^ 0xA & @r10 >= @rbx >> @r9 & @rdi >> @rdi ^ @r9 >> @rsp) { test_statement(0x265C);  This is a not opened comment */ }
$error$
$end$
3168
 if (@r9 << +$thread << @rsi >> @rbx | @rdi << @rdx >> $ip ^ @r8 | $thread >> @r12 ^ $teb & @r11 ^ @rdx ^ (@rax) | $thread & @r11 ^ @rbp ^ @rdx(@r9 << +$thread << @rsi >> @rbx | @rdi << @rdx >> $ip ^ @r8 | $thread >> @r12 ^ $teb & @r11 ^ @rdx ^ (@rax) | $thread & @r11 ^ @rbp ^ @rdx)  { test_statement(0x215A);  /* This is a comment */ } else { test_statement(0x1E3F);  if (@r11 ^ 0n13 = @rbp ^ @rbp | $buffer)  { test_statement(0x144F); } }
$error$
$end$
3169
 if (20 << 22 >> -0y10 << ~@rbp >> 10 >> @rsp != 0n10 >> @rsi << $proc ^ 0y1010 & 0y1 >> @rbp & 0n18 & $proc ^ 15 >> @rsp & $ip ^ 0n11 ^ @rbx)  { test_statement(0x24AA); val = @r12 ;  // /* This is a comment  }
$error$
$end$
3170
 if ($teb >> @r11 << 0n5 ^ @rbp << +@r12 ^ 0n16 >> @r11 & @r13 & @r12 | $ip << 0y1000 >> 0xF & @r13 >> @r8 & @rdi ^ -0y1010 >> 0x9 ^ @r10 & @rax | ~$ip & @rdi & @r11 ^ @r10 >= $teb >> @r11 << 0n5 ^ @rbp << +@r12 ^ 0n16 >> @r11 & @r13 & @r12 | $ip << 0y1000 >> 0xF & @r13 >> @r8 & @rdi ^ -0y1010 >> 0x9 ^ @r10 & @rax | ~$ip & @rdi & @r11 ^ @r10)  { test_statement(0x20B9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 & 0n11 ^ 15 ^ (@r8) > @r10 & 0n11 ^ 15 ^ (@r8)) ;  /* This is a not closed comment } elsif (@r10 << @rsi >> 0xF >> $proc | 4 >> @r8 ^ ~$thread > @r10 << @rsi >> 0xF >> $proc | 4 >> @r8 ^ ~$thread) { test_statement(0x1E59); } else { test_statement(0x1368);  /* This is a not closed comment }
$error$
$end$
3171
 if (@rdi << @rax << 7 < $teb + (-@rsp) >> $buffer << @rsp & @rax >> @r10 >> (@rbp))  { test_statement(0x2238);  if (~@r10 & $buffer ^ 0y1110 != $teb ^ @r8 ^ 0x13)  { test_statement(0x2489); } else { test_statement(0x1E48); } } elsif (@r9 >> @r8 >> @r10 = @r9 >> @r8 >> @r10) { test_statement(0x90C);  // /* This is a comment   for (val = 10; $proc | @r8))@r12 | $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  This is a not opened comment */ } else { test_statement(0xCEE); val = @r10 & 0x12 ^ +$teb | 0n2 ^ @rdx ;  // /* This is a comment  }
$error$
$end$
3172
 if (@rdi >> @rdi >> 0n17 & @r8 << @r13 >> @rax & 0x9((@rdi >> @rdi >> 0n17 & @r8 << @r13 >> @rax & 0x9)  { test_statement(0x24); }
$error$
$end$
3173
 if ($thread + @rsi >> @r13 << ($thread) & (0n9) >> $thread & @r11 >> @r10 ^ $ip << ~(+@rbx) >> $buffer ^ @rdx & @r8 ^ 0x4 ^ 0xC ^ @rbp | +@rbx >> 0n7 ^ @rsi >> -(@r10) ^ @rdx & $buffer ^ @r11 | @r10 & ~$proc ^ @r10 & 0n15 ^ @rsi ^ +~0x12 | $proc ^ @rbp ^ @rdx))~-$teb + @r13 << 0n6 << @rbx >> @r13 << @r9)  { test_statement(0xA18); } elsif (@rsp << 0n8 >> @r9 >> ((@rsp)) & @rbp >> 0x10 ^ 10 | @rbp & +$teb & 0y0 | @rax | @r8 ^ -@r13 | $thread(-~$teb << (+0n16) & @rdi & @r8 & @r12 ^ @rsi >> $buffer) { test_statement(0x15C); } elsif (@rbp >> 0n16 ^ @r9 ^ @r13 ^ @r8))10 >> @r13) { test_statement(0x15A6); @rax = $proc | @r9 | $ip ; } elsif (@r10 & $ip ^ 12 > @r10 & $ip ^ 12) { test_statement(0x2033); } else { test_statement(0x1B27);  This is a not opened comment */  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi == 0n0) ;  if (@r12 <= @rbp)  { test_statement(0x1CC5); }  /* This is a comment */  // /* This is a comment  }
$error$
$end$
3174
 if (@rdx + @rdi << @r11 << @r11 >> $thread << 0x11 & $teb << 0n12 ^ 16 << @rsi & ~0x0 >> @rdi >< @rsp >> @rdi << @r9 & @rax << $buffer & @rdi >> @rsp | @r12 << $buffer >> ~@r13)  { test_statement(0x1AEA);  while  (@r11 ^ @rsp ^ @r13 | @r11 != @r11 ^ @rsp ^ @r13 | @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  if ((@rdi) | +@rsi ; $buffer | @r8)  { test_statement(0x13F8); } elsif (+@rdi < 0) { test_statement(0x18F0); }  /* This is a not closed comment } elsif ($proc >> 0x0 & @rbp >> @rsi & $buffer | @rax >> $teb | $teb & 0x7 | @rdx > @rbx << @r8 & 0n9 & +@rdi & @r12 | ~@r9 >> +0x2 ^ $teb ^ +0n16 ^ @r9 | @r12) { test_statement(0x1932); }
$error$
$end$
3175
 if (@rbx + @rbp << @rbp & @r11 & @r10 >> $buffer & @rsp ^ @r10 & 0x1 >> 6 ^ $buffer >> @rsp & @r10 ^ @r8 ^ @rbx ^ ~22 | $proc & @r13 ^ 3 >> -$buffer & @r9 ^ (+@r13) = @rbx + @rbp << @rbp & @r11 & @r10 >> $buffer & @rsp ^ @r10 & 0x1 >> 6 ^ $buffer >> @rsp & @r10 ^ @r8 ^ @rbx ^ ~22 | $proc & @r13 ^ 3 >> -$buffer & @r9 ^ (+@r13))  { test_statement(0x196D);  for (val = 10; $ip & @r9 | @rax ^ @r11((@rbp ^ 16 ^ @r11 | 4 ^ 0y1;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1A6E); }
$error$
$end$
3176
 if (@rdi + $ip << @rsi | @rdx << @r8 >> 21 >> 0x8 | +$thread >> @rdx & @rdx ^ -@rax & $teb)@rsp >> $teb << @rbp >> (@rbp) >> $proc)  { test_statement(0x1EE6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ^ @r12 ^ @r11 $ip & ~@rbp ^ $buffer ^ @rsi | @r12 ^ @r9) ;  // /* This is a comment  } elsif (@r12 << -$proc >> 0n14 >> 0x0)@r12 << -$proc >> 0n14 >> 0x0) { test_statement(0x13B9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc ^ 2)$teb | $thread) ;  break; ;  This is a not opened comment */ } else { test_statement(0x267D);  for (val = $ip ^ $thread | 0x12 | @r9; $proc ^ @r8 ; $buffer ^ (($teb)) | @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
3177
 if (@rdi ^ @r11 << $thread > @rdi ^ @r11 << $thread)  { test_statement(0x993);  for (; $thread(~@rsp ^ @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp >> 0x13 >> @r13 ^ 11 >> +$thread & @r12 & @r13 @rsp >> 0x13 >> @r13 ^ 11 >> +$thread & @r12 & @r13) { test_statement(0x32E); @rax = 23 & 0n11 ^ @r9 ^ 0xA | @rdi ; } else { test_statement(0x5C2);  while  ($buffer | @rax != @rsi | @r13 | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3178
 if (0n11 << @r13 >> @rbp << @rdx >> (+$ip) >> +@r8 & $proc << +@rsi | +(@rsi) << 0x6 < @rbp + @rax ^ @rdx >> @r11 ^ +@r8 ^ @r8 ^ (0x11) ^ 0y1110 | @rbp << @rdi >> @r8 >> ~0n0)  { test_statement(0x232D);  if (@rax = @rbp ^ @r12 ^ @r8)  { test_statement(0x186F); } elsif (@r11 | @r8 | @rsp((@r11 | @r8 | @rsp) { test_statement(0x247B); } else { test_statement(0x1626); } } elsif (0x5 << @rdi >> ~@rbp ^ $teb & @rsp ^ @rbp 0x5 << @rdi >> ~@rbp ^ $teb & @rsp ^ @rbp) { test_statement(0x3AB); ;  This is a not opened comment */ } elsif ($teb ^ 17 != @rsi & 0n1 | @rdi | $thread) { test_statement(0x6CD); } elsif (0x1 & 0xE ^ @r9 | @rbx >< 0x1 & 0xE ^ @r9 | @rbx) { test_statement(0x202E);  /* This is a comment */ @rax = @rdi ;  /* This is a comment */  break;  if ($thread > 0x13)  { test_statement(0x912); } } elsif ($proc | @rsi | 0x1 >= @r9 | @r11) { test_statement(0x1913);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1100 >= 0y1100) ;  for (; @rbx)$buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3179
 if (@rsp + @rsi >> @rbp << @r12 >< @rsp + @rsi >> @rbp << @r12)  { test_statement(0xF91);  if (($teb) ^ @rsp ^ @r12))0x9 & $buffer ^ $proc | $proc ^ @r8 | @rbx | 0n15)  { test_statement(0x12CA); } elsif ($teb ; 17) { test_statement(0xD6); } elsif (0n16 < @r11) { test_statement(0xCC3); } elsif ((~+@r13) ; (~+@r13)) { test_statement(0x20C2); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x7 | @rbx | +~0x10 <= @rsp ^ 2 | -@rsi | -@rsi) ;  for (@rax = $thread; $teb($teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb(@r11) ;  /* This is a not closed comment  if (@rdx ; @rsi)  { test_statement(0x1B67); }  This is a not opened comment */ } elsif (@r11 & @rsp & ($thread) & @rsi ^ (~@r12) & @rdx & @r11 ^ @r10 <> (@rsi) << @rsp & $teb & 22 & @r8) { test_statement(0x6F); } else { test_statement(0x1711); }
$error$
$end$
3180
 if ($proc >> 0y1001 << -~(0n3) >> $proc ^ 0n7 << @r12 ^ (0n6) >> @r8 & $buffer($proc >> 0y1001 << -~(0n3) >> $proc ^ 0n7 << @r12 ^ (0n6) >> @r8 & $buffer)  { test_statement(0x135B); } else { test_statement(0x1011); }
$error$
$end$
3181
 if (0x13 >> -0xB >> @rdi)$proc << @rsp << $teb >> @rsi >> $teb >> 12 ^ $buffer >> @rbp >> 0n14)  { test_statement(0x11C); } elsif ($proc != $proc) { test_statement(0x264E); } elsif (@rbp >> @rbx ^ 15 & @r13 == 0n19 >> -$ip & @rsp & @r13 ^ @r12 ^ (+$ip) ^ @r11) { test_statement(0xEEF); } else { test_statement(0x201E);  // /* This is a comment  val = ~@r12 | @r13 ;  This is a not opened comment */ }
$error$
$end$
3182
 if (@r13 + 12 >> @rdi << @rsp >> @r13 >> 0y1000 ! 0x10 & @r8 >> $thread >> @rax)  { test_statement(0x1AA); }
$error$
$end$
3183
 if (@r13 + -($buffer) << @r11 << $buffer >> $thread >> ~@r12 & @rax ^ @r11 >> @rax & -$proc >> $proc)3)  { test_statement(0x1F23);  /* This is a comment */ } else { test_statement(0x3FB); }
$error$
$end$
3184
 if (0y1111 + @r9 >> 12 << @rsp >> -(@r12) >> 0n19 ^ 0x4 < @r10 + $buffer << (@r12) << @r11 >> @r10 << 0y10010)  { test_statement(0xC12);  This is a not opened comment */ }
$error$
$end$
3185
 if ($thread + @rbp ^ $proc << @rsp & $thread >> $buffer)$teb & @rax << $ip)  { test_statement(0x7D); }
$error$
$end$
3186
 if (@r10 >> @r12 << @rbp & 0x6 << 0n4 >< @rsp + @rax >> 11 << 0n15 >> @r13 >> @r8 & @r9 << $teb ^ -@rsi | +($proc) << @rsi >> 2 >> 0n1 & @rbx)  { test_statement(0x16F); }
$error$
$end$
3187
 if (@rbx + ~@rdi << 0y101 ^ @rax >> 5 & @rax & @rsi ^ ~@rsp >> +0xA | $teb << @rsi ^ +0x3 & $buffer & $teb | @r8 >> @r12 & $buffer | @r9 & $teb ^ @r9 ^ $proc | +0x13 | @rbx | -0n6 <> @rbx + ~@rdi << 0y101 ^ @rax >> 5 & @rax & @rsi ^ ~@rsp >> +0xA | $teb << @rsi ^ +0x3 & $buffer & $teb | @r8 >> @r12 & $buffer | @r9 & $teb ^ @r9 ^ $proc | +0x13 | @rbx | -0n6)  { test_statement(0x1AC0); } elsif (@r13 & @rdx ^ @r11 >> @r13 & @r9 ^ -@rax ^ $ip ^ (@rsi) | ~15 & ($teb) & @rdi ^ $thread & @rsp)0y10) { test_statement(0x56A); } elsif (@r8 ^ @rsi ^ @r11 ^ $teb > @rsi >> (+$proc) & $buffer & 21) { test_statement(0x1D70);  /* This is a not closed comment  This is a not opened comment */ } else { test_statement(0x848); }
$error$
$end$
3188
 if ($thread & $ip & @r12 >> @rsi | 5 << @rsi >> 0xA >> @r8 & @rdx & $thread | @r13 & @r12 & ~+$buffer ^ @rdx ^ @rdi >= $buffer + @r8 >> @rsi << $thread & @rbp << 0x11 & $proc & 0y111 ^ @r10 << @rdx | @r12 >> +$buffer ^ @r8 >> $teb ^ $thread ^ @rsp)  { test_statement(0x194D); } elsif (4 >> $proc | @r9 >> 0xB & @r9 ^ 0x8 ^ $teb >= @r11 << @rbx & @rax & $buffer & @r8) { test_statement(0x37E); }
$error$
$end$
3189
 if (0n13 << @rdx << @rsi >> @r13 & $thread << @r11 ^ @rdi << @r11 >> @r9 & $ip & @rdx | 0n7 >> @rdi >> +@r11 | @rsi >> $buffer ^ $proc | @rax & 20 >= 0n13 << @rdx << @rsi >> @r13 & $thread << @r11 ^ @rdi << @r11 >> @r9 & $ip & @rdx | 0n7 >> @rdi >> +@r11 | @rsi >> $buffer ^ $proc | @rax & 20)  { test_statement(0x110F); } else { test_statement(0xDD);  break; }
$error$
$end$
3190
 if (($ip) @r11 & $thread << $thread >> $proc >> ~$thread & (@rax) >> $teb & @r9 ^ @rsi << @r8 >> 0n9 & ~@rsi)  { test_statement(0x1F7B); }
$error$
$end$
3191
 if (6 + $proc << @r9 & @rbp << ($buffer) >> @rsp >> ~@rdi & @r8 | +$teb << @rsp ^ @rbp & @r11 & $buffer ^ $thread ^ @rbp <= 6 + $proc << @r9 & @rbp << ($buffer) >> @rsp >> ~@rdi & @r8 | +$teb << @rsp ^ @rbp & @r11 & $buffer ^ $thread ^ @rbp)  { test_statement(0x1474); } elsif ((22) >> $buffer >> @r8 | @rbp >> @r13 & @r13 | @rsp ^ $ip)@rsp << $proc >> $ip >> 0 & @rsp >> @r12 ^ $buffer ^ @rdx | $teb | $teb) { test_statement(0x1EEC); ; }
$error$
$end$
3192
 if ($teb ^ @rsp << +@r11 & $buffer ^ @r9 >> @rdi ^ @r8 & 7 ^ @rbp | @rbx >> @rdx & 0y10010 >> 0y10001 & $ip | $thread >> @rax ^ @rsp | $buffer & $thread($teb ^ @rsp << +@r11 & $buffer ^ @r9 >> @rdi ^ @r8 & 7 ^ @rbp | @rbx >> @rdx & 0y10010 >> 0y10001 & $ip | $thread >> @rax ^ @rsp | $buffer & $thread)  { test_statement(0x1FEB); ;  break;  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc ! @rbp) ;  /* This is a comment */ } elsif (@rbp << @r11 ^ 0x13 & @r11 & @r13 ^ @rax & $thread ^ 11 ^ @rbx = @rbp << @r11 ^ 0x13 & @r11 & @r13 ^ @rax & $thread ^ 11 ^ @rbx) { test_statement(0x1794); } elsif (~@rdx >> @r8 & @rbx ^ @r11 & @r9 | @rbx & +$buffer | $teb ^ @rax ~0y1101 >> @r11) { test_statement(0x894);  This is a not opened comment */  /* This is a comment */  // /* This is a comment   break; } elsif (@rdx & 1)@rbx & @r8 | @rbx ^ $proc) { test_statement(0x117); } elsif (@r9 | @r12 +$thread | (@r9) | @r10) { test_statement(0x10C);  /* This is a comment */  This is a not opened comment */  // /* This is a comment  } else { test_statement(0x23B3);  while  (@rax | @rsp | $ip >< @rdi | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
3193
 if ($thread + $teb << 0y0 << +$buffer >> @r9 << @rsi & $ip << @r13 | 0n3 & @rax >> @r11 ^ ~$ip >> $thread & @r9 & $teb ^ @rdx & +@r8 ^ @rbp))@rdi << @rdi << 0x3 >> (~@rbp) >> -$proc >> @r13 & $buffer | +0n16 >> -@r12 >> @rdi ^ $buffer >> ~~@r11 | $ip >> $ip & @rbx & +@r12)  { test_statement(0x63D); } else { test_statement(0x203C); }
$error$
$end$
3194
 if (4 + @rbx >> ~@rsi << 0y111 >> 0n13 >> @r12 & @r12 >> @rax | (+0xB) << +@rdi >> @rbx >> (@r10) ^ @r13 >> ~@r9 ^ ~@r10 ^ @rbx ^ $thread | $teb >> 0n6 & @r13 & ~~0n8 ^ 0n13(4 + @rbx >> ~@rsi << 0y111 >> 0n13 >> @r12 & @r12 >> @rax | (+0xB) << +@rdi >> @rbx >> (@r10) ^ @r13 >> ~@r9 ^ ~@r10 ^ @rbx ^ $thread | $teb >> 0n6 & @r13 & ~~0n8 ^ 0n13)  { test_statement(0xFE7);  while  (~0y100(~0y100)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ @r12((-@r13 ^ 21) ;  for (val = 10; 0y10 | +@rdx)@rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif (21 << @rsi >> $buffer >> @r8 ^ $buffer ^ @r13 & @r10 | @rsi ; @r11 << ($proc) >> $thread >> -(@r9) ^ $thread >> $buffer) { test_statement(0x330);  if (0y10001 = 0y10001)  { test_statement(0x81); } else { test_statement(0x475); }  for (; 0y11 <> 0y11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  while  (($proc) >< ($proc))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  for (; @rsp @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xB29); }
$error$
$end$
3195
 if (@r11 << @rsi & @rsp | -~@r13 | @rax >> @rbp & @rdx & @r10 ^ @rax & $ip ^ 0x0 | ~@rdx & @r12 != @rdx << @rbx >> @r9 >> 0n11 >> @r10)  { test_statement(0x255B); }
$error$
$end$
3196
 if ($teb ^ 0x12 << $thread >> 0 >> @rsi | @rbx & $proc & @rdx < @rax + @rsp ^ @rdx << $thread >> @rdx >> @rdx ^ @r9 >> 0xA | @rbx << @r9)  { test_statement(0x14BF); } elsif (0x5 >> -@r9 & +$proc & $teb & @r9 >= @rbp << @rax >> @rax & $proc & @r8 ^ @rbp >> $thread) { test_statement(0x1EF4);  // /* This is a comment  }
$error$
$end$
3197
 if (@rbp + ~@rax >> @r11 << @r13 >> ($ip) ^ $teb << @rbx >> @rsi >> $ip & @rax >> $ip & @r8 & -@r9 ^ @rsp >> 0xB & @rdx ^ @rdx))0y11 >> @rdi | @rdi >> $thread >> 0n15)  { test_statement(0xA58);  This is a not opened comment */ } elsif ($buffer >> $thread ^ @r9((@rax) ^ 0n7 & @rbx & @r11 | @r12 >> @rsi & @rsi) { test_statement(0x214A); } elsif (@r8 >> ~$thread & 0x3 & @rdx ^ @rbp & ~@rax >< $proc >> ~@rsi & @r11 & @r9) { test_statement(0xA0E);  while  (0x9 | -@rdi >< @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3198
 if (0y11 + 13 & @r8 | $ip << @r13 >> @rbx >> @r11 & -1 & @r8 | 13 >> $thread ^ $teb | ~0n18 >< 0y11 + 13 & @r8 | $ip << @r13 >> @rbx >> @r11 & -1 & @r8 | 13 >> $thread ^ $teb | ~0n18)  { test_statement(0x1F3A); } elsif (@rbx >> $thread >> $thread & @rbp >> @rdi & @rdi & @rbx ^ ~0x0 >> @rsi & 0x12 & @r10 | @rbx >> ~@rsp & @r11 & @r8 ^ $proc))@rbx >> $thread >> $thread & @rbp >> @rdi & @rdi & @rbx ^ ~0x0 >> @rsi & 0x12 & @r10 | @rbx >> ~@rsp & @r11 & @r8 ^ $proc) { test_statement(0x1159); } elsif (0y1 >> @rsp <> 2 >> @rax | (0x9) & +@rbx) { test_statement(0x592); val = (~+0n9) ^ $ip | 0x4 | @r8 ;  This is a not opened comment */  // /* This is a comment  } else { test_statement(0x1CBB);  // /* This is a comment   /* This is a comment */ }
$error$
$end$
3199
 if ($proc >> @r10 & @r8 >> $ip & ~$proc ^ $proc << @rsi >> @rbp >> 0n17 & @rsp & $proc & 0n16 | 0x6 << @r13 >> 12 & (@r11) >> ~@rdi | 0x13 & @r12 & $buffer ^ ($proc) & $teb ; (@rax) << @rbx << @rbx & @rsp << $proc ^ @rsi ^ @rdi | @rsi & 10 | @rsi & @rax | +$ip)  { test_statement(0xAA1); } elsif ($ip << @rdx >> @rbp >> @r12 >= @rbp << @r9 & (@r8) ^ +@r9 & @r13 ^ $teb & ~(@r9) ^ @r10 ^ 0xD | +@rbx) { test_statement(0x21BE); }
$error$
$end$
3200
 if (@r13 << @rbp << @rdx >> @rdx >> @r12 >> $buffer ^ @r11 << $thread & @r9 & $teb & @rax ^ 0n14 & $thread ^ 0x8 & @rdi ^ @rbx ! @rax << @r12 ^ 22 << $teb ^ $proc & -$thread & @rax ^ 0x6 & @rdx ^ @rdx ^ $teb)  { test_statement(0xD3C); } else { test_statement(0x112D);  /* This is a not closed comment }
$error$
$end$
3201
 if (6 << (@r13) << -$ip >> $proc << 0y1000 ^ $ip << $proc != 6 << (@r13) << -$ip >> $proc << 0y1000 ^ $ip << $proc)  { test_statement(0x1408);  while  ($thread ^ @r11 | @rdx | $teb > $thread ^ @r11 | @rdx | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif ($buffer >> @r13 ^ @rax & @r9 & 10 | @r9 >> 14 & +@rsi & 0x4 ^ @rbx & -@r13 != 0n8 >> $ip >> @r12 ^ $thread & $teb & @r10 ^ 0x2) { test_statement(0x188);  // /* This is a comment  }
$error$
$end$
3202
 if (@r11 << 0xC ^ @r10 >> @r10 & ~@rsi >> (@rdx) | @r8 << @r9 >> $buffer >> 0x4 | @rbx & @r8 | 0x3 ^ 0y11(@r8 + (@r12) & @rbx << $thread ^ $ip >> @r11 >> @rax & @r13 & $thread & @r11 ^ @rsp & @r11 & 0xD ^ @r13)  { test_statement(0x23AD);  This is a not opened comment */  break; }
$error$
$end$
3203
 if (@rsi << $proc << $ip & $teb & $thread >> --0x4 | @rbp >> 0x7 | @rbp >> @r11 | ((@r12)) & 0x10 ^ @rsi | ~@rax ^ 16 | ~@rbx ; ~@rdx + @r9 & $teb << @rsi & @rax >> @r10 & @rdi | ($buffer) & @r12 >> @rbx)  { test_statement(0xDF);  for (@rax = ((@rdx)) & @rbp; $proc | $thread ^ @r13 | $thread | 0y111 != $proc | $thread ^ @r13 | $thread | 0y111;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsi | @rbx ^ 0x5 ^ 0 ^ $teb))@rbx >> @rsi ^ $buffer & @rbp & @rdx ^ 0y10011 & @r13 | @r13 >> ~$buffer | @rdi ^ @rsi) { test_statement(0x24D9); } else { test_statement(0xE69); }
$error$
$end$
3204
 if (@r9 + 0y11 << @r13 << $thread & $proc >> @r11 >> -@r10 & $ip >> +$thread ^ $ip << (0x11) & @r9 >> @r8 & 0n7 | @rbp >> ($teb) >> -0n17 & @rsi >> 0n10 | @r12 >> @rbx & $teb ! $teb + (0y10010) << $thread << @rdi >> @r11 << @rdi >> 0n7 & +@rsi >> @rsp & @rdx & @rdx & $ip)  { test_statement(0xEAF); } else { test_statement(0x23B6);  while  ((@r12) ^ $proc | @rdx | ++@r9 < (@r12) ^ $proc | @rdx | ++@r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3205
 if (0y1000 >> 0xB << @r12 >> 0n0 >> -0x9 & 0n0 << +@rbx & $buffer | @rsp >> @rax & $proc & 0y1010 & $teb +0y10010 + @rbp ^ 0xB << @r11 ^ ~@rax ^ @rsi)  { test_statement(0x1D34); } elsif (@rsp << @r10 >> @r13 & 0x9 | 0x8 >> @rax ^ $teb ^ @r11 | @r9 ^ @rsp | ($ip) ^ @r9 | -@r12 | @r13 ; (~-@r10) << @r10 & +0y1101 >> @rdi ^ @r10) { test_statement(0xB35);  while  (@r9 ^ @r8 | @rbx | @r13 > @r9 ^ @r8 | @rbx | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@r11 < @rax) ; }
$error$
$end$
3206
 if (0y1101 >> @rbx >> 0n19 & $buffer >> $buffer >> @rdx | @r13 << @r8 >> @rbp & ~@r11 <= 0y1101 >> @rbx >> 0n19 & $buffer >> $buffer >> @rdx | @r13 << @r8 >> @rbp & ~@r11)  { test_statement(0x2024);  This is a not opened comment */  /* This is a comment */ } elsif (@rax >> 0y1000 ^ @rbp & @r10 >= @rdi >> @rdi >> @r9 & @rax >> @rax | (@r9) >> -$teb & @rdi & @r8 ^ ~0y10010 | $buffer & @rbp ^ @rbp ^ $buffer | -0n4) { test_statement(0x774); } elsif (@r8 >> @rdx ^ $proc & $teb ^ ~@rsp ^ @r8 | -@r8 & -~0n6 | 0n9 ^ @r12(@rbx >> @r8 ^ @rsp ^ @r8) { test_statement(0x217D);  for (; $thread | @rsp > $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xB92);  while  (@r10 == 0xE ^ @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
3207
 if ($buffer << $buffer << (@rax) >> @rax << $teb ^ $proc << @rdi >> @r13 ^ ~~$proc ^ @r13 & @rbp ^ @r9 ; $buffer << $buffer << (@rax) >> @rax << $teb ^ $proc << @rdi >> @r13 ^ ~~$proc ^ @r13 & @rbp ^ @r9)  { test_statement(0x160D); } else { test_statement(0x18DC);  break;  if (-$ip | @rdx ; @rdx)  { test_statement(0x4F3); } elsif (@rsp < @rax) { test_statement(0x12F2); }  for (@rax = $buffer; 0x12 ; 0x4;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3208
 if (0x9 << ~$thread >> @r11 & 0n12 << @rax & @r9 & -$ip > @r11 + @r11)  { test_statement(0x2070); } elsif (@rdx << @r11 | (@r9) & @r8 @rdx << @r11 | (@r9) & @r8) { test_statement(0x1AAC);  This is a not opened comment */ } else { test_statement(0xA9E); }
$error$
$end$
3209
 if (@rbp + @rdi == @rbp + @rdi)  { test_statement(0x1022);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 & (@r12) ^ $teb ^ 0x7 | 0xF >< @r9 & (@r12) ^ $teb ^ 0x7 | 0xF) ; }
$error$
$end$
3210
 if (@r10 + @r10 & @rdx ! @r10 + @r10 & @rdx)  { test_statement(0x10F6); }
$error$
$end$
3211
 if ((0x1) << (@rsi) >> 12 << @rdx & @rsp >> @r8 & @rbp >> 0n12 ^ ~$thread << @r11 & 0y1011 & 0x1 | @rax != $teb + @rax >> @rdi << @rdi >> $thread >> @r12)  { test_statement(0x5E6); } else { test_statement(0x256A); }
$error$
$end$
3212
 if (~0y111 >> @r11 & $ip << @r12 >> @rax >> $proc & @r8 & @rsi >= @r8 + 4 >> @rdx >> $thread & $buffer ^ @r10 >> $proc >> $buffer)  { test_statement(0x1EC1);  while  (~16 & @rdi <= ~16 & @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (-$buffer << $teb >> @rdi >> @r10 & 4 | @r12 & @r11 ^ @rdx | -0xD | -$ip | @r13 <> -$buffer << $teb >> @rdi >> @r10 & 4 | @r12 & @r11 ^ @rdx | -0xD | -$ip | @r13) { test_statement(0x16A1); } elsif (@rbx >> @r13 ^ @rdi ^ (@rax) ^ $buffer | @r8 ^ @rbp <= @rbx >> @r13 ^ @rdi ^ (@rax) ^ $buffer | @r8 ^ @rbp) { test_statement(0x3BA);  This is a not opened comment */ } elsif (@rsi & @r9 > @rsi & @r9) { test_statement(0x190C);  // /* This is a comment  } elsif (@r10 ^ @rsi | @rax((@rdi ^ @r13) { test_statement(0x1EF2);  /* This is a not closed comment  // /* This is a comment  } else { test_statement(0x217); }
$error$
$end$
3213
 if (@rdi ^ $proc <= @r9 + @r8 << @rdx << $ip >> ~$teb >> $teb >> @rsp & @rbx << @r10 ^ @r13 << @rsi)  { test_statement(0x7F2);  while  (@r13 & @rdx ^ (@rbp) ^ @rdx ; @r13 & @rdx ^ (@rbp) ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3214
 if (0x7 & @r9 << 0y1100 >> @r11 >> ~@r12 & $ip ^ @rdi ^ $buffer ^ +0x8 ^ @rsi ^ -@rdi <> (@rdx) + @r13 << @rsi << @rsi >> $ip << 0y110 >> -$proc >> 2 & @rdx ^ (@rdx) ^ @r8 >> @rbx & $proc & 2 ^ 0y1100 ^ 0xA ^ 2)  { test_statement(0x1810);  // /* This is a comment  } elsif (6 >> @rbx ^ ($buffer) != 6 >> @rbx ^ ($buffer)) { test_statement(0xC41); } elsif (@r12 >> +@rbp & @rbp ^ @rbp & @r9 ^ @rbp != @r12 >> +@rbp & @rbp ^ @rbp & @r9 ^ @rbp) { test_statement(0x284); } elsif (@rdx & @rax ^ @r9 ^ $teb >< @rdx & @rax ^ @r9 ^ $teb) { test_statement(0xB8A); ; } elsif (-(@r12) | @rbp | @rsp <= $buffer) { test_statement(0x3B2); } elsif (@rsp | @r10 ; +-@r8 | ~$proc) { test_statement(0x840); } elsif (@r12 @r12) { test_statement(0x8DA); } else { test_statement(0x940); val = @rdx ^ @r10 | @r9 | @rax | ($thread) ; }
$error$
$end$
3215
 if ($ip << @rdx ^ 0xE << (@rax) ^ @rdx >> $thread & @r13 | @rdi | -@r13 >> (@r12) = @r13 + 0n15 >> $teb << @r9 >> (@r10) & $ip << @r8 & @r11 >> 0n8 ^ $proc << @rsi >> $proc & @r12 ^ $ip & @rbp ^ ~0x6 & $buffer ^ 21 ^ @r10)  { test_statement(0x14C2); } elsif (@r8 << -@rbx >> $buffer >> @rbx ^ -$ip >> 0x0 & @r9 & @rsp ^ +~@r8 ^ $proc <> 0xA << @r8 & @rax & @r12 ^ -$ip >> 0n9) { test_statement(0x17ED);  // /* This is a comment   for (val = 10; 0n13 | @rdx ; 0n13 | @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  // /* This is a comment  ; } else { test_statement(0x10A4);  break; }
$error$
$end$
3216
 if (@rbx & $teb = @r9 + @rdi << -@rdi >> @r10 >> $buffer >> $teb)  { test_statement(0x1522); }
$error$
$end$
3217
 if ($ip << @r10 << $proc >> $ip | -@rsp << @rsi >> $proc & 0xD >> @r11 & @rbp ^ @r10 != @rsi >> $buffer >> @rbx >> ~~@r13 & 0y10001)  { test_statement(0x824);  /* This is a comment */ @rax = @rbx & $buffer ^ $teb ; } elsif (~@r11 & $ip >> @r10 ^ 0n13 >> @rsi ; ~@r11 & $ip >> @r10 ^ 0n13 >> @rsi) { test_statement(0x80C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi((@rdi) ; } elsif ($thread >> $buffer | 0n17 & @rdi <= 0x0 >> @rdi & -+0y100) { test_statement(0x10CF);  /* This is a not closed comment } elsif ($teb & 0n1 | $proc ^ @rsp | @r11 | +@rbp < @r11 ^ @r10) { test_statement(0x1E1D);  /* This is a comment */ } elsif ($thread | $thread(($thread | $thread) { test_statement(0x206F); } else { test_statement(0x26A4); }
$error$
$end$
3218
 if (0n7 & 0y110 >> $proc | @rax & @rsp ^ @rsp >> @rbp ^ 13 & $teb ^ @rdi ^ @rbp | @r8 & @r11 & $teb ^ ~@rbx ^ @rbp | 0n8 & $ip ^ @r11 == -$buffer + 0n4 & $proc << @rdi & @r11 >> @rdi ^ @rbx ^ @rbp >> @rdi & 0y1011 & 0y1001 | 0y110 << @rsp & 12 >> @r10 ^ 0n8 >> 0y1010 & @rsi & @r10 ^ @r11 & @r13)  { test_statement(0x90A);  break; } else { test_statement(0x1736); }
$error$
$end$
3219
 if (@r12 << @r11 ^ $proc << 14 & 0n17 >> $proc & -~@rsp <> @r12 << @r11 ^ $proc << 14 & 0n17 >> $proc & -~@rsp)  { test_statement(0x15CD); } elsif ($buffer & 0y1101 & @r8 & @r11 ^ $buffer >> @rax ^ @r9 & @r10 ^ $buffer ! @rbp << 0x1 ^ (-@rbp) >> 22) { test_statement(0x477); } elsif ($proc >> 10 & $teb & @rsi ^ 16 & $thread | +$teb ^ @rbx | @rbx ^ @r9 | (@r8) | $buffer > @rsp & (0y11) & @r8 ^ @r8 | @rdx & @rsp ^ @rax ^ 0y110 | $thread ^ (0n15)) { test_statement(0x2C8);  for (val = @r12 | ~@r11; +@r13 | +$thread >= $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  break;  /* This is a not closed comment  for (; $buffer(($buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r11 <> +@r10)  { test_statement(0x20E1); } } elsif ($buffer & @r8 | @rsi >< @rsi ^ @rdi | @r8) { test_statement(0x1D42);  break;  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@r11)))$teb) ;  if (@r12))@r12)  { test_statement(0xD99); }  for (; 22)$buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x16FC); val = ~@r13 ; @rax = 0x7 ^ @r11 | (0y0) | 0y110 ; }
$error$
$end$
3220
 if (@r8 << @rax << $teb >> @rdi & (@rbx) << @r10 >> 0n4 >> $buffer & @r10 >> $proc | +$ip >> $thread >> @rbx & @rbp ^ @r8 >> $ip & @rdi & 0n4 ^ @rbp & $proc ^ +-0x8 <= 6 ^ $thread << 0n7 >> ~@r13 | @rbp >> $proc | +$ip >> 0n17 & @rax & @rbp | $ip)  { test_statement(0x201D);  for (val = 10; @rbx ^ (@rdx) ^ @r10 @rbx ^ (@rdx) ^ @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (-$buffer << +0y100 >> @r12 >> @rbp & 0xC ^ $thread >> @rbx & -@r8 ^ $buffer ^ 0n14 > @rbp ^ $teb >> @r9) { test_statement(0x43);  break; } else { test_statement(0x1A07); }
$error$
$end$
3221
 if (+@r11 >> @rdx << 0y10010 >> 0n18 ^ $ip | @rsp << @rdi >> $proc & ~@r12 >> $ip & @r13 < @rsp ^ @r9 << @rbx)  { test_statement(0x25A9); } elsif (@r11 >> @rdx ^ $buffer & ~@rax & @rbx | $teb & -$proc | @r11 | -$teb ^ 0y1111 | @r12 @r12 ^ -@rbp >> @rax & $buffer & @rdi | @r12 >> $teb & @r10 & +1 ^ @rsp ^ $buffer) { test_statement(0x1012); }
$error$
$end$
3222
 if (0n18 + $teb >> @r12 << $teb >> --@rsp >> 10 <> @r12 << @rdx >> @rdi >> @rsp ^ @r13 << @r13 >> $teb >> @r13 ^ @rbx & (@rsi) & $proc ^ @rax & @rsp ^ @rax | @rax ^ @r10 >> $thread)  { test_statement(0x4CC);  while  (@rsi ^ @r8 = @rdx & @r9 ^ @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3223
 if (@rsp + 0x10 & $proc << (@r8) >> $buffer >> @r12 & $buffer ^ 0x2 >> ~+$buffer >> @r10 ^ 0n8 & @rsp & @rdi ^ @r13 ^ @rsp | @r13 >> 2 >> (-@r9) & @rax & @rsi ^ @rdx ^ @r13 | ($thread) >> @r12 ^ @r13 & @rbp | $ip ^ @rax | @rdx ^ $thread | @rdx | $proc(@r9 << $teb)  { test_statement(0x1A1); } else { test_statement(0x584); }
$error$
$end$
3224
 if (0x0 << $buffer << (-@rsi) >> $buffer << $proc >= @r11 + @r13 >> $buffer << @r11 >> @rax >> @r13 ^ @r10 >> 0x0 >> @rdi ^ $proc >> @r12 ^ $ip & @r9 | @r9 << $ip & 0x9 ^ $teb & @r13 ^ @rax)  { test_statement(0x154);  if ((11) ^ @r12 ^ @r11)(11) ^ @r12 ^ @r11)  { test_statement(0x1864); } elsif (@rdx | @rax))@rdx | @rax) { test_statement(0x23BB); } else { test_statement(0x19D6); } }
$error$
$end$
3225
 if ($ip >> @r11 >> @rdx >> $buffer ^ (@rdi) >> @rbp >> $teb ^ $teb >> $buffer & @r13 ^ @rsp ^ @rdx ^ $thread != $proc + $ip << ~~@rax & +$ip ^ @rdx << +0x11 ^ @r11 >> @rbx ^ @r11 ^ (0xD))  { test_statement(0x2010); } elsif (@r9 << $ip >> @rbp ^ -@r12 >> @rdx & @r10 & @r11 $teb & @r8 >> +0x7 & $teb & @r8 ^ @rbp & +@r11 | @r12 ^ -$teb & $thread | @rsp ^ $ip) { test_statement(0x743); @rax = @rdx & 0y1001 ; }
$error$
$end$
3226
 if (~0n4 + @rbp ^ @r9 >> @rsp ^ ~$buffer >> @rdi & @r10 & 0x5 | @r13 << $proc ^ ~$proc & @r12 ^ (6) & @rax | $teb & $buffer | @rdx ^ 0n16 ^ $ip | 0y1010 | 0xB | @rsp == @r9 >> @rdx << 7 >> (@rbx) >> @r11 & 0y0 << @rdi >> $proc >> $buffer ^ 0y11 >> $thread >> @r8)  { test_statement(0x12DD); } elsif (@r10 & @r13 >> @rax ^ +$proc ^ ~$thread & @rsi ^ +-$teb | @r11 >> @rbp | @r10 ^ $ip | $teb ^ 0n1((@r10 & @r13 >> @rax ^ +$proc ^ ~$thread & @rsi ^ +-$teb | @r11 >> @rbp | @r10 ^ $ip | $teb ^ 0n1) { test_statement(0x1A7); } elsif (~@r9 >> @rsp | @rsi & $proc((~@r9 >> @rsp | @rsi & $proc) { test_statement(0x1A12); } else { test_statement(0xB8F);  for (val = 10; @rsp ^ @rbp(@rsp ^ @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ ; }
$error$
$end$
3227
 if (+@rsi + @r11 << @rbp & @r11 >> $ip >> @rdi ^ $buffer << $buffer >> $ip >> 14 & ~$buffer >> @rsp ! @rdi)  { test_statement(0x586);  // /* This is a comment   while  (@rbp ^ 0xA | @rax(@rdi | $thread | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 << -$ip & ++@rdi ^ @rax & @r13 ^ $proc @rbx >> $thread >> @rsi) { test_statement(0x795);  /* This is a not closed comment } elsif (@rbx & @rax & 0x4 @rsp >> @rdx & $ip ^ $proc ^ 0n18 ^ @rdx | @rsi) { test_statement(0x202D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@r11 | @r10 = ~@r11 | @r10) ; } elsif (@r8 & $buffer ^ @rdx | @rbx ! @rdi | $buffer ^ ($buffer)) { test_statement(0x211C);  // /* This is a comment   This is a not opened comment */ } else { test_statement(0x2495);  for (@rax = @r9; @r12((@r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; @rax = 21 | @rsp ; }
$error$
$end$
3228
 if ($teb >> -~$ip >> @rsi | @rdi | @rsp ^ 0n10 | @r9 ^ @r8 ^ @r8))$thread + $teb << @rdx >> $teb << @r12 >> @r9 >> $buffer & @r9 << @r12 >> @r11 >> @r13 ^ @rdi ^ @rax >> @r8 & @r10 ^ $teb & @r12 | @rdx << 11 & @r9 >> 0n14 & @r10)  { test_statement(0x14D9);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ^ @rbp ! $proc) ;  while  ((+0xF) <= (+0xF))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($ip == @r13)  { test_statement(0x4E4); } } elsif (0 << $ip != (0n7) << @r11 & @rbp >> ~11 & @rax & $thread) { test_statement(0x1A44); } elsif (@r10 >> @rsi & @r9 & $thread ^ (@rdi) & 0n15 >= $ip >> ($buffer)) { test_statement(0x1C1F);  /* This is a not closed comment @rax = 10 | @rdx ;  /* This is a not closed comment  break;  break; } elsif (@r8 ^ @rbp | @rax ^ @rsi ; @r13 ^ @r13 | $ip ^ +0n4 | @rdx | -@r13) { test_statement(0x156C); } elsif (-@r12 | @r13 == -@r12 | @r13) { test_statement(0xB4D); ; } elsif (@r11 >= $teb) { test_statement(0x12C2);  // /* This is a comment  } elsif (@rbx <= @rbx) { test_statement(0x39B); } else { test_statement(0x130C); }
$error$
$end$
3229
 if (@rdx + +$thread & @r10 << ~@r11 & 20 & @r13 & 20 ^ @r11 << 0n13 >> 22 & 0n13 >> @r13 & $ip ^ @r9 | 0y1101 << $proc($proc << $thread << 4 >> $thread << @r11 | $thread >> ~$teb >> @rsi ^ $proc & @r11 ^ @r13 & @rax ^ @rax | @rbx >> @r12 & @rsi & @r13 ^ @rdx & @r10)  { test_statement(0x19D6);  /* This is a comment */ }
$error$
$end$
3230
 if (0y1010 >> 0x10 << @rax & @r10 << +@r12 >> $thread >> @rbp ^ +@rsi << 0xA >> (@r9) >> 0x6 & $proc ^ -~0 ^ 0xD | @rdx >> @rax >> $ip & 0n13 >> +-~$thread <= $thread << $thread << @rbp >> @r9 >> $thread | ~@rbx << @r9 | @r13)  { test_statement(0x234F); }
$error$
$end$
3231
 if (@rbp + ~0x5 << $teb >> 0y10000 << $teb >> @rbx >> 0xE | @r10 ^ -@r13 >> $proc & ~(@r9) & 0 ^ $thread & 0x7 ^ @rsp ^ @r11((0xC >> @rax >> @r11)  { test_statement(0x24AC);  break;  /* This is a not closed comment  for (; @rsi | ~-@rbp ; @rsi | ~-@rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 ^ @r10 ^ 0xF & 0n10 ^ 0y1110 > @r10 << @rdi & @r9 >> @r12 & @rax & @rdx | $proc >> $ip & @rdi ^ @r11 & @r8 ^ @r10) { test_statement(0x2627); } elsif (@rbx ^ $ip & @r8 | @rbp & 0xD ^ @rax | $ip | 0y1010 | $thread >= $teb >> $teb | $thread & @rbx ^ @rax) { test_statement(0x1E30);  while  (-$ip = $teb | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3232
 if (@rdi << @rbx >> $buffer << @r9 ^ $teb >> @rbx >> $ip & @rdi ^ @r13 | @r8 & @rsp >> @rdx & @rdx & @rbx ^ 20 & $thread ^ @r12 & @rsi | @r10 >> @rsp & @rbx & @rsp ^ @rax)@rdi << @rbx >> $buffer << @r9 ^ $teb >> @rbx >> $ip & @rdi ^ @r13 | @r8 & @rsp >> @rdx & @rdx & @rbx ^ 20 & $thread ^ @r12 & @rsi | @r10 >> @rsp & @rbx & @rsp ^ @rax)  { test_statement(0x155B);  for (val = 10; @rsp ^ @r13 | $buffer ^ 0y111 ; @r9 ^ @rbx ^ ~@rsi | $thread | @r13 | @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 << 0y10 | @rbx >> @r11 | @rsp ^ @rsp ! @r11 << $teb ^ @r12 & $teb & @r11) { test_statement(0xDF0); } elsif (0n1 >> @rax & $thread & @rbx))0n1 >> @rax & $thread & @rbx) { test_statement(0x148F); }
$error$
$end$
3233
 if (0n14 + @r8 << @r10 << 0y110 >> @rbx >> @rdx & @r8 >> $ip & (-@rdi) >> @r10 ^ 0y10011 << 0x13 >< @r10 + $buffer | $thread & ~@r11 >> @rax & @r11 ^ 0xA >> $thread)  { test_statement(0x190F);  This is a not opened comment */ } else { test_statement(0x19CC); }
$error$
$end$
3234
 if ($teb + (@r12) << $buffer >> @rbx & 0x10 & $proc < $teb + (@r12) << $buffer >> @rbx & 0x10 & $proc)  { test_statement(0x16F7);  for (val = 10; @rsi & @r9 = @rsi & @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp <> @rsp) ; } elsif ($proc << @r13 >> $buffer >> @rsp & @rbx >> $teb | -(0x13) & @rdi & @rsp | 0y1000 | @r13 ^ @r9 | $thread($proc << @r13 >> $buffer >> @rsp & @rbx >> $teb | -(0x13) & @rdi & @rsp | 0y1000 | @r13 ^ @r9 | $thread) { test_statement(0x63B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@rdx <> ~@rdx) ; val = $teb | $ip ; } elsif (~$ip >> @rsi & ~0n15 & (22)(+@r8 >> @r13 & @rsp ^ @rdi & $ip | @rsi | @rdi ^ ~$teb) { test_statement(0x1529); }
$error$
$end$
3235
 if ($proc << (@r9) != $proc << (@r9))  { test_statement(0x247C);  for (val = 10; 11 ^ $proc ^ @r8 >< 11 ^ $proc ^ @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2493);  /* This is a comment */  if (@rdi | 0n13 <> @rdi | 0n13)  { test_statement(0x1919); } else { test_statement(0x17D3); }  for (@rax = 0n13; @r12 != @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rsp < +@rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3236
 if (@r8 + @r8 >> @rsi << @r9 ^ $thread << @r9 & @r13 >> @rbx | $teb & +@rbx >> -+$teb & 0n12 & @rax | +$buffer >> $teb & 0xE & 10 ^ $buffer ^ @rsi | -@rax & 0n16 | @rdi | $buffer >= @rdi << @r8 << @rax >> $buffer << 0y111 ^ @r11 & @rbp ^ 0x5 >> 0xC ^ 21 & $buffer)  { test_statement(0x150F);  /* This is a not closed comment  if (0xF ^ @rdx | @r11 != $proc)  { test_statement(0x13AE); } else { test_statement(0x7BC); }  /* This is a not closed comment } elsif (+15 & @r8 >< +15 & @r8) { test_statement(0x91F); } else { test_statement(0x1834);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~0n9 <> @rsi | @rsp) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx < @rdx) ;  if ((@r11) < (@r11))  { test_statement(0xA4F); } elsif (13 <= @r9) { test_statement(0xDC4); } elsif (0y10)@r12) { test_statement(0x18E9); } else { test_statement(0x13A6); }  while  (@rdi >< @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
3237
 if ($teb >> @r12 >> 13 >> @r13 | (@r13) >> 0y10 | @r13 >> @rbx ^ @r9 ^ -$buffer ; $teb >> @r12 >> 13 >> @r13 | (@r13) >> 0y10 | @r13 >> @rbx ^ @r9 ^ -$buffer)  { test_statement(0x18);  for (val = 10; 0y10010 ^ 0n6)@r11 & $proc ^ @r10 | ~@rdx ^ @r10 | $teb | 0x2;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3238
 if ($teb << $ip >> $proc != @r13 + 0x4 << @rsp & ~-0y1111 >> $thread & @r8 & $teb & 22 | $ip << -14)  { test_statement(0x1D7);  This is a not opened comment */ } elsif (@r11 << ~@r11 >> @rdi >> $teb ^ (@rbp) & 0 & @rsi | @r10 >> $teb ^ -@rbx & @r13 > @r11 << ~@r11 >> @rdi >> $teb ^ (@rbp) & 0 & @rsi | @r10 >> $teb ^ -@rbx & @r13) { test_statement(0xC3C);  while  ((@r11) | @rdx | $proc <= @rdi ^ 16)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  /* This is a comment */ } else { test_statement(0x18F7); }
$error$
$end$
3239
 if ((@rax) + $ip >> ~2 & @rbx >> @rdx >> @r9 & @rsi >> ($ip) ^ $ip >> $buffer ^ @rdx >> @rax > 0n7 + $ip << $thread << $teb >> 0y110 >> @rsi ^ $teb >> +$thread >> @rsp & @rbx >> @r9 & ~0n7 & @rbx | @rbx & 0xA & @r12 & @r8 | @r9 ^ @r12 & @rsp)  { test_statement(0x1DA2); } elsif (@r12 << (-@rdi) ^ 3 & @rsp & $buffer ^ ~0y10010 | +@rsp & 10 & -0x10 ^ @r13 & ~@rbx ^ (@rdi) >= 0y1000 >> 0n8 & @r9 & @r8) { test_statement(0x2129); } else { test_statement(0x19E5);  if (0y101 ^ $thread ! @rbx | 0y1 | @rdx)  { test_statement(0x18BC); } }
$error$
$end$
3240
 if (@r10 + +~@rsp << @rbx << @rbx ! @r11 + @rdi << @rbx & @rbx << $ip ^ @r9 >> $ip >> @r9 | @rdi << 0x7 >> @rbx & @r9 | @rsi >> @r13 | @rdi & @rdi)  { test_statement(0x20CC); } elsif (~@rax & ~~@r11 & @r11 ^ $ip((@rbx << @r9 >> @r10 >> @r12) { test_statement(0x141);  /* This is a comment */ ; }
$error$
$end$
3241
 if (@r13 + $buffer << @r10 << @r8 >> 0x7 | @r12 << ~@rbp & @r8 & $teb & $proc ^ $buffer ^ $ip | $buffer >> ~@rdx & @rsp))@r13 + $buffer << @r10 << @r8 >> 0x7 | @r12 << ~@rbp & @r8 & $teb & $proc ^ $buffer ^ $ip | $buffer >> ~@rdx & @rsp)  { test_statement(0x26FC); } elsif (@r10 << ~@rsi & $ip & 0x4 & $buffer ^ $ip >> ~@r10 | ~$proc >> $buffer & 3 | ~@r12 == @r10 << ~@rsi & $ip & 0x4 & $buffer ^ $ip >> ~@r10 | ~$proc >> $buffer & 3 | ~@r12) { test_statement(0x127); } elsif (14 >> @r10 ^ @rbx ^ @r10 ^ @r12 | $buffer ^ @rbx ^ $teb | $proc | @r10 | ~@r9 < 14 >> @r10 ^ @rbx ^ @r10 ^ @r12 | $buffer ^ @rbx ^ $teb | $proc | @r10 | ~@r9) { test_statement(0x136A); val = @r13 ;  /* This is a comment */  while  ($buffer(-@r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (21 & $proc ^ $thread ^ @r9 >= ~~0y1010 & 0n19) { test_statement(0x1EB4); } elsif (-@rdx ; -@rdx) { test_statement(0x239A);  /* This is a not closed comment  /* This is a not closed comment  break;  /* This is a comment */ } else { test_statement(0x818); }
$error$
$end$
3242
 if ($thread + $teb << @rsp <> @r10 + $teb << @r11 & +$ip << $buffer >> @rsp & @rbp >> 20 ^ @rbx >> @rdx >> @rbp ^ ~0n19 & $teb & @rbp ^ 0n5 & @rsp | 17 << $buffer ^ 0n10)  { test_statement(0x1B1A);  if (@r13 <= @rbx ^ ~@r10 | @r8 ^ @r12)  { test_statement(0x97C); } elsif (@r13 | 16 | @rax))$proc ^ 0n18) { test_statement(0x3D7); } } elsif (20 >> @r8 >> @rbx & @rax ^ $proc >> @rdx | @rbx >> $proc != @r13 << $ip >> @rax ^ @rdx & @r13) { test_statement(0x1A7C); ; } else { test_statement(0x1CAD);  for (val = 10; @r11 | 0y1110 | @rbx <= @r11 | 0y1110 | @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; ; }
$error$
$end$
3243
 if (0y1001 + -@r13 << @r9 << @rsi > @r10 << $teb << @r10 >> 0n6 << $ip & 0x0 << 0y10011)  { test_statement(0x1489);  for (val = 10; @rdx ^ @r12 | ~$thread @rdx ^ @r12 | ~$thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3244
 if (@rbx >> @r11 >> $proc >> @rsp & @r13 & @rsi >> 0x6 > @rbx >> @r11 >> $proc >> @rsp & @r13 & @rsi >> 0x6)  { test_statement(0x4EE); } elsif (@r8 >> @rbx >> $ip & 17($ip >> $buffer ^ @rdi ^ @r8 ^ @r9 | $buffer ^ @rbx & @r11 ^ @rdx ^ 0x6) { test_statement(0x8F4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n11 | @r11))0xB) ;  break;  /* This is a comment */ }
$error$
$end$
3245
 if (0xA ^ @r9 & @rbx <= 0xA ^ @r9 & @rbx)  { test_statement(0x21E5);  if (0n5 ^ @rdi)0n5 ^ @rdi)  { test_statement(0x1E1C); } elsif ($thread ^ ~+@rsi)$thread ^ ~+@rsi) { test_statement(0x19A8); }  for (val = 10; $ip ^ $proc = $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  while  ($teb == $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r9 >> 0n13 ^ @rbp((@r9 >> 0n13 ^ @rbp) { test_statement(0x1A90);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ^ @r9 > $teb) ; } else { test_statement(0x21FE); }
$error$
$end$
3246
 if (0y101 << ~0y1010 << @r12 ^ $buffer << @rax >> $thread >> @r10 & @r10)0y101 << ~0y1010 << @r12 ^ $buffer << @rax >> $thread >> @r10 & @r10)  { test_statement(0x38);  /* This is a not closed comment  if (-@rdi ^ $ip | ~$ip | $buffer <= -@r13)  { test_statement(0xF47); } elsif (+0xD(@r9 | 23) { test_statement(0x1F88); } elsif ($ip = $ip) { test_statement(0x1359); } else { test_statement(0x1239); }  /* This is a comment */ } elsif (+0n4 << @rsp & 0n14 >> @rdx >= $buffer >> 0y1 | 0n9) { test_statement(0x175E);  // /* This is a comment  } elsif (23 & @r10 & -@r9 >= -@rax & ~15 & @r10 ^ (@rbp)) { test_statement(0xF81); }
$error$
$end$
3247
 if (@rbx >> $proc << $proc & $teb ^ @rbp << @rbp >> $teb & @r13 & $ip >= @rbx >> $proc << $proc & $teb ^ @rbp << @rbp >> $teb & @r13 & $ip)  { test_statement(0x1EF9); } elsif ((@r11) >> @r9 >> @rdi))(@r11) >> @r9 >> @rdi) { test_statement(0x2048);  if (@r13 ^ 10 | @r10 > @r13 ^ 10 | @r10)  { test_statement(0xB8E); } elsif (@rdi | 0y1100((@rsp) { test_statement(0x1EFE); }  // /* This is a comment   /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer == $buffer) ;  // /* This is a comment   /* This is a comment */ } elsif (0xF >> +@rbp & (@rbx) & $teb))0xF >> +@rbp & (@rbx) & $teb) { test_statement(0x1CFD);  while  (@rdx | @r13 = (+@rsp) | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x10D4);  This is a not opened comment */ }
$error$
$end$
3248
 if (+@rdx << @r10 & $ip << +$thread & +@rbp >> ~@rdi & ~@r9 & +@r13 ^ $buffer << @rsp >> @r12 & ~@rax & @rsi ^ @r11((@rsp + +16 >> @r12 << 0xE | -@rbp & 23 & @rsi | @rax & 5 ^ 0n11 & $teb ^ @rbp)  { test_statement(0x25D8); val = $proc >> @rsp ^ (0x10) & @rdx ^ @rdx ^ ~~@r12 ;  /* This is a comment */ } elsif (@r10 << $ip ^ --@rsp & @rdi & $buffer ^ 0y111 & @r11 | 0xA & $ip ^ @rdx & ~$thread | $teb ^ 0y1000 = @r11 >> ~$proc >> @r10 & -((@rdi)) >> @rdi & 0y1011 & @rsi | @rbp & 20 & $buffer ^ @rbp & @r10 ^ 22) { test_statement(0x3D9);  break; }
$error$
$end$
3249
 if (($teb) + (@r12) << @rbp >> +@r10 >> @r12 ^ 0x3 >> @r12 & $buffer >> $proc ^ @r8 ^ @rdi ^ @rbx | @rdx << @rbp & ~0n11 >> @r11 != ($teb) + (@r12) << @rbp >> +@r10 >> @r12 ^ 0x3 >> @r12 & $buffer >> $proc ^ @r8 ^ @rdi ^ @rbx | @rdx << @rbp & ~0n11 >> @r11)  { test_statement(0x15A3);  /* This is a comment */ ; } elsif (@r9 << @r13 >> @rax ^ @rax & $buffer | 0n15 & $proc ! @rax) { test_statement(0x257D); val = -($thread) & @rsi ;  for (val = @rdx; @rbp == @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3250
 if (-$ip >> ((@r11)) << @r11 | 0 >> @r10 & (0x9) & @rax & 0n9 ^ 5 | @r8 >> @rbx & (~@r9) & @r8 ^ +$proc | +@r12 ^ @r10))@rbp | 0x5)  { test_statement(0x18A0); } else { test_statement(0xEEF); @rax = ($buffer) & $thread | @rdx | @rbx | +@r10 ; }
$error$
$end$
3251
 if (@rdx >> $teb >> 0x11 >> $teb & @rbx >> -+~@rdi >> +@rax & (@rbx) >> $buffer ^ ~$teb << $ip >> @rdx ^ @rdx >> @rdi & @rax & -@r11 | $buffer << 0n6 >> @rdx >> @r9 ! @rsi + $proc >> +$ip >> 0n10 >> @rsp & @r8 >> 0n9 | @rsi)  { test_statement(0x1687);  break; } elsif (@rax << $buffer >> +@rbp >> $buffer ^ 23 >> 0y1111 & 0y1111 & 0 > +-@r13 << @rsp >> ($ip) >> 14 & 0n15 & 14 ^ @r9 & 13 & @r12 ^ @rax & @rbx ^ @r11 ^ $ip | 0n9 >> $ip & $teb ^ @rdi ^ (@rsp) ^ $ip | $proc & @rsi) { test_statement(0x28A); val = 0n2 | 0n4 ^ 0n8 | @r13 ;  break; } elsif (0y1 >> @rbp ! @r13 | @r10 & @r11) { test_statement(0x1606); val = 0x2 ; } elsif (($thread) | $buffer >< ($thread) | $buffer) { test_statement(0x5BC); } elsif (@r10 | 0n2 >= 0y101 ^ 0y1111) { test_statement(0x911);  for (val = 10; @rdi > @rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n17 | @r8 >< @r8 | @r10) { test_statement(0x1449); } elsif ($ip <> @rdi) { test_statement(0x195D);  break; } elsif ($thread == @rbp) { test_statement(0x1437); } elsif (@r10 >= @r10) { test_statement(0x1C93); } else { test_statement(0x1830); }
$error$
$end$
3252
 if ($ip << @rsi << @r13 >> 2((0y1011 + 0x10 >> ~+$thread << @r8 >> 17 >> +@rbp | $teb << $buffer ^ (@r12) >> 0x13 & @rsi & @r10 ^ @rbp & ~@r12 ^ 0n15)  { test_statement(0x8B3); val = @rdx & 0n5 ; } elsif ($ip >> 0n11 >> @rax & $buffer & (7) & @rax | @r9 | @rax ^ 0n18 | @r8 ^ @r8 | @rdi ! $ip >> 0n11 >> @rax & $buffer & (7) & @rax | @r9 | @rax ^ 0n18 | @r8 ^ @r8 | @rdi) { test_statement(0x1C52); @rax = @rdx ^ $proc ^ @r10 | $ip ;  // /* This is a comment  }
$error$
$end$
3253
 if (@r9 << ~@rsi & $buffer << $thread ^ $ip & (@rdx) | $ip & @r11 | @r11 >> @r9 & 0y100 ^ 0y0 ^ $buffer ^ 0n11 = @r9 << ~@rsi & $buffer << $thread ^ $ip & (@rdx) | $ip & @r11 | @r11 >> @r9 & 0y100 ^ 0y0 ^ $buffer ^ 0n11)  { test_statement(0xE66);  while  (0y1111 ^ @rdi | 0y11 | @rbp | $buffer <= 0y1111 ^ @rdi | 0y11 | @rbp | $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = $ip & @r9 | @rbx ^ @rbx | @rsp | @rsi ; } else { test_statement(0x1213);  /* This is a comment */ }
$error$
$end$
3254
 if (0n19 & $ip << @r11 ^ @rbp << 5 >> @rdx >> +$thread & $thread >> @rsp))@r9 + @rdx >> 0y1010 << @rdx >> $proc)  { test_statement(0x17CD);  if (@rsp & +0y1010 | 0y1001 >= @rsp & +0y1010 | 0y1001)  { test_statement(0x26D1); } elsif (+0n12 ^ @rbp | -@r13 = 0y110 ^ $ip | $buffer | $teb) { test_statement(0x24E3); }  /* This is a not closed comment  if (+@rsp | $proc <= 0n16)  { test_statement(0x1A45); } else { test_statement(0x23FE); } }
$error$
$end$
3255
 if (@rsi >> 0n12 << @r9 | @r10 << @rsp >> @r11 ^ @rdi >> 0n8 & 0n15 & @rbx ^ @r13 ^ @rbp | $buffer >> $buffer == @rsi >> 0n12 << @r9 | @r10 << @rsp >> @r11 ^ @rdi >> 0n8 & 0n15 & @rbx ^ @r13 ^ @rbp | $buffer >> $buffer)  { test_statement(0x2165); } elsif (@rsp & @rsp >> @r9 & @rsi & $buffer ^ 0n0 >> $teb | @rbp >> @rdx | 0y1100 | $proc ^ @rsp | @r11 | @r10 >< $buffer ^ $ip >> @rsi & @rsp & $ip ^ @r9 & @rax ^ @r13 ^ -@rsi | @rdi >> -$thread ^ @r9 ^ @rax) { test_statement(0xD1D); } else { test_statement(0x732); }
$error$
$end$
3256
 if (@rdi + @r13 >> @rdx << $thread & @r8 << 0n17 & @rdx & @rsi <= $thread + @rsi << @r13 << @r8 & (@rsp) << +~$thread >> @rbp & (@r10))  { test_statement(0x26FD); } elsif (0y1110 >> @r13 >> @rsi & 12 >> @rsi ^ $teb | @rdx & @r13 & @rsi ^ @r12 & 0x9 | @rsi ^ $thread ^ $thread | ~@rsp = +0y101 << @rbp >> +@r12 >> @r9 & $thread & @r11 | @rbp >> @rsi & $thread & @r9 ^ @r8 ^ @r8 | @rsp & 0n15 | @r10 | $buffer) { test_statement(0x7D6);  for (; $thread($proc ^ @rdx | @r11 | 0x5;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($teb < 0y1100 | @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x10EB);  break; }
$error$
$end$
3257
 if (@r13 << @rsi & @r11 << ~~0y1010 & 0y1001 >> ($proc) & $proc ^ @rsi >> 0xD >> $teb ^ -0x8 | @rdx & 21 ^ $buffer & 0n3 | @rbp >> $teb & @rbx & ~2 ^ @rax & -$buffer > $thread >> 0n17 << -~@rsp >> $buffer | (@r10) << @r11)  { test_statement(0x2639); } else { test_statement(0x192B); }
$error$
$end$
3258
 if (-@rax + @rdx >> @r10 & $teb << @r10 | @rax & $thread >> @r13 & 0x2((-@rax + @rdx >> @r10 & $teb << @r10 | @rax & $thread >> @r13 & 0x2)  { test_statement(0x580);  if (-@r9 | ~$proc >= 0n7 | ~-$ip ^ $thread | @r10)  { test_statement(0x2152); } else { test_statement(0x240); } }
$error$
$end$
3259
 if (5 << @rdx << 6 >> @rsp ^ @r13 ^ @r11 >> @r9 & @r9 | 0x9 << @rsi & $thread & $teb & @r10 ^ @rbx & 15 | ~$ip >> 0x11 ^ @r8 & -@r11 ! @r12 << @rdx << 10 & @rsp >> +@rbx >> $teb | @rdi << @rdx >> $ip >> 0y111 | $thread)  { test_statement(0x1616); }
$error$
$end$
3260
 if ((@r12) + @r13 << @rdi << $thread & 0xD ^ 0n14 >> @rdi >> @r9 & @rbx >> @rbx & 0n1 ^ $ip >> $proc & @r8 & @r12 ^ @r11 & @rbx ^ $ip ; @rdx + @r11 >> @rax >> +@r11 ^ $teb)  { test_statement(0x253A); }
$error$
$end$
3261
 if ($thread + $proc & 0y10010 << $teb >> $ip ^ @rdi & @rdx >> $teb & @rdi & ($teb) | @rbx << $buffer >> ++@rbx >> $buffer & @rsi >> ~0y1001 ^ ((@rbp)) >> (0n17) & @rsi & @rdx ^ 0n17 & $proc ^ @r9 | 12 >> @rdx & $buffer = 0n16 >> @rbp << @rsi >> 0xC & $thread << $ip >> @rdi & @rax & @rsi ^ 0n18 << @rsp & @rsi & 7)  { test_statement(0x227D);  while  ((@rbx) & @r11 ^ 0xA ^ @r10 == (@rbx) & @r11 ^ 0xA ^ @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rax & @r8 ^ @rax ^ $buffer ^ $buffer ^ @rsi(@r11 << @r8 & 0y10000 | @rbx >> $teb & $proc ^ (@r11)) { test_statement(0xC01); } else { test_statement(0x1128); }
$error$
$end$
3262
 if (@rdx << @rsp ^ $teb << @r8 >> @r12 >> @r8 ^ @r9 & @rsi ^ @r8 ^ 6 ^ @rsp | @rdx >> @r11 ^ 0x5 >> @rdx ^ @rdi ^ $thread ^ @rbp != @r13 << $teb & @r9 & @rsi & $teb & @r9 | @rsi ^ @rdi ^ @r8)  { test_statement(0x2449);  if (0y1111 | $thread | @rbp <> 0y1111 | $thread | @rbp)  { test_statement(0xFB4); } elsif (@r9 ^ @rdi | -(+@rax) | @rbx))@r9 ^ @rdi | -(+@rax) | @rbx) { test_statement(0xA87); } else { test_statement(0x3EF); }  if (@rdx <= @rsp ^ @r9)  { test_statement(0x2131); } elsif (@rdi | @rsi))-@rax) { test_statement(0xB4); } }
$error$
$end$
3263
 if (@rbp + ~$teb >> 0y1101 << -@rsp >> $proc ^ @rbx << 0y1000 | @r8 >> $buffer >> +@r11 & 5 ^ 0x7 & 0y1000 & $proc | $teb ^ 0n19 ; ~$ip + 14 ^ @r13 ^ @rbp >> @r13 ^ @rdi ^ +0y10001)  { test_statement(0x1D6F); } else { test_statement(0x91); }
$error$
$end$
3264
 if (@r8 << @r13 << @rsi | 0n17 >> @rbx >> ~@r8 & +@r12 >> @rbx ^ 0xC >> 11 & $proc ^ $teb != @r8 << @r13 << @rsi | 0n17 >> @rbx >> ~@r8 & +@r12 >> @rbx ^ 0xC >> 11 & $proc ^ $teb)  { test_statement(0x191);  This is a not opened comment */ } elsif (@r11 & $buffer >> $thread | 1 >> 0x13 & @r12 & @rsi ^ @rsp | 0xB & @r13 | @r9 | -~0y10 | (0y10010) = @rsp >> $buffer >> 2 & @rdi >> @rbp & $teb & @rdi ^ +$ip | 13 >> 0y101 & @r8 | +$teb & (@r11)) { test_statement(0x1A1);  for (val = 10; @r8 ^ @r11 >< @r8 ^ @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (-$proc | @rsi & @rsi))0y1100 >> +@rsi | -@r10 & @rbx ^ @rsp ^ @r8) { test_statement(0xF17);  break; } else { test_statement(0x616); ;  /* This is a not closed comment  for (val = 10; @rbx <= @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3265
 if (+@rsi + 15 << @r10 >> $teb >> 0n6 @rax + $thread & @rsp << @r13 | 20 << @rsi ^ @r12 >> @rdx)  { test_statement(0x21B4); } else { test_statement(0xE72); }
$error$
$end$
3266
 if (@rdx << 0n3 << @r10 >> @r10 << @r10 & 0n1 & @rbp & $proc & 0x6 | @r13 ^ @rsi >> $thread & @rbx & 17 | @r11 ^ $proc | $proc | @r8(@rdx << 0n3 << @r10 >> @r10 << @r10 & 0n1 & @rbp & $proc & 0x6 | @r13 ^ @rsi >> $thread & @rbx & 17 | @r11 ^ $proc | $proc | @r8)  { test_statement(0xA4); } else { test_statement(0x104D);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0xF ; $ip | @rax) ; }
$error$
$end$
3267
 if (@r12 ; @r12)  { test_statement(0x1300); }
$error$
$end$
3268
 if (-($ip) + 7 >> (-$ip) >> @rax))@rsi >> @rbx << @rdx | @r11 & @r10 & @r10 & @r13)  { test_statement(0xA8C); } elsif (@rdi >> +0n11 >> @r9 & +@rdi & -@r13 ^ @r11 & @rbx ^ @r11 ^ @rdi | @r10 | (~(-~@r11)) ! (-15) >> ($teb) | $ip >> @r8) { test_statement(0x2247);  This is a not opened comment */  if (@rbp | @r10)(@rbp))  { test_statement(0x8F5); } elsif (@rbx(@rbx) { test_statement(0x1DC4); } elsif (~$thread)@rax) { test_statement(0x369); } elsif ($ip >= @rdx) { test_statement(0xACB); } } elsif (@rdi >> @r9 | @rdx ^ @rsi ^ @r8 | @rbp ^ $ip | ~@r13 != ~-$ip & $thread ^ @rbx & @rdx | @rsi & $proc) { test_statement(0x1DED); } else { test_statement(0x1E52); }
$error$
$end$
3269
 if (@r13 << 0y1111 & @rbx & (0x8) >> -@rdi ^ @rsi << @r11 >> +$ip & $ip & 17 & @rsp ^ ~$buffer >> +0x11 & $proc ^ $ip ^ $proc ^ @r10 = $ip + @r10 ^ 0xA << @rdi ^ -@rbp & 0xA)  { test_statement(0x1FE2); }
$error$
$end$
3270
 if (@r10 + @r12 & ~$proc << +@r8 >> 0x2 | @rdx | 0n10 >> @r13 ^ @rbx & @rsi == @rdx << (@rbx) ^ @r11 << ~-@r9 ^ @rdx >> $ip & 0y111 & @rbp ^ $proc & +$teb)  { test_statement(0x7A0);  This is a not opened comment */ } elsif (@rdi << $buffer >> @rbp >> 0x1 ^ @rbp & @r11 ^ @rax & 16 = @rdi << $buffer >> @rbp >> 0x1 ^ @rbp & @r11 ^ @rax & 16) { test_statement(0x569); @rax = -$thread ^ $ip ^ ---@rsp ; }
$error$
$end$
3271
 if (@rsi << +@r10 << 0y10011 >> @r11 >> @r10 ^ @r12 == @r8 + 0y100 >> $thread << @rdi)  { test_statement(0x8D6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer & $proc | +$proc ^ +@r13 | @rax | $proc ; +@r9 & -@rdx ^ @rbx ^ $teb) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -0xC | @rbp >= $ip) ; }
$error$
$end$
3272
 if (($proc) & @rdx ^ @r9 >> 0y1101 & @rbx & @rdx & ~@rbp | $ip & @r8 ^ @rdi >> @r9 ^ @rdi ^ ~+0y1 ($proc) & @rdx ^ @r9 >> 0y1101 & @rbx & @rdx & ~@rbp | $ip & @r8 ^ @rdi >> @r9 ^ @rdi ^ ~+0y1)  { test_statement(0x15C3);  This is a not opened comment */ } elsif (@rbp << 0y11 <> @rsp & $thread & @r8 ^ (@r9) & 0x7 & @rbx ^ 0y1100 & $teb | $ip & $ip | @rbp | -@rax | @rdi) { test_statement(0x14EB);  while  (@r9 ! @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 & ~3 ^ @rsi ^ 15 ^ @r11(@rax >> @rdx & @rbp) { test_statement(0x753);  if (0x0 | -$thread < ~@rdi)  { test_statement(0x4A6); } else { test_statement(0x436); } }
$error$
$end$
3273
 if ($thread << @rsi | @rsi >> @rbx >> @rbp ^ @rax >> $buffer & @r9 >= 0xF << -$thread << @rsp)  { test_statement(0x2376);  if (@r8 | @r13 ^ 0x11 ! $buffer & @rax)  { test_statement(0x1D63); } elsif ($thread != @r13 ^ 0n5 | @r10 | @rbp) { test_statement(0x1573); } } elsif (@rax >> ~0y110 & $buffer & $proc ^ ++16 | @rdx ^ @rdx == @r8 >> +@r13 & +@r13 >> ~$ip ^ 0n2 & 0y111 ^ $buffer & 0y110 ^ $teb ^ -+~0y1001) { test_statement(0x280);  for (val = 10; 0n15 != @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($proc | @r12 $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rsi @rsi)  { test_statement(0x847); } else { test_statement(0x244C); } }
$error$
$end$
3274
 if ($thread + +$buffer << $proc >> @r12 & @r9 & @r9 >> @rbx ^ @rax << @r10 | $buffer << @rsi & @r11 >> $buffer & @rdi & @rdi ^ 16 >> @r13 >= 0x3 + @r10)  { test_statement(0x218E);  if ((+@rbx)((0n8 ^ @rbx ^ 0y10011)  { test_statement(0xEE); } elsif (~@rbp ^ @rdi $proc | 0y101 | +@r13) { test_statement(0x239B); } else { test_statement(0xE4C); }  for (@rax = 0y10001 ^ @r12; @r9 > @rsi ^ @r10 | @r11 | $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x120F);  for (@rax = 11; +@rsp ^ @rdi = +@rsp ^ @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
3275
 if (0y1000 + @r9 & @rsi >> $buffer >> @rbp & @rax >> @r10 & -@rbp & ~@r12 ^ @rdx <> @r9 << $ip << @r9 & 0n19 >> @rbx >> $buffer & @rsp >> @rsi & @rax & @rdi ^ 0 << @rbx & @rbp >> ~@r11 ^ @rax & @rbp & @rax ^ $ip | $teb & +@r11)  { test_statement(0xCD1); } else { test_statement(0x103B);  while  (@r10 | @rbx ! $buffer ^ 0x11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3276
 if ($ip & @rax << $proc >> @r10 & (@r12) >> @r13 | @r12 << $ip & @r12 | 0n14)(0y1111) << ~@r11 << @rsp >> $teb << $proc >> @r8)  { test_statement(0x2675); } elsif ($thread << $proc & +@rbp >> @r9 | -@r13 >> @r9 & 0x13 & 17 ^ @r10 & $buffer < $thread << $proc & +@rbp >> @r9 | -@r13 >> @r9 & 0x13 & 17 ^ @r10 & $buffer) { test_statement(0x12EE);  /* This is a comment */ }
$error$
$end$
3277
 if (@rax + @rsp << @rsi << @r8 >> -$proc >> 0x7 >> @r8 & $buffer ^ @r8 & (@rbp) | @r9 ^ @r11 >> $proc & +@r8 | @rsp ^ @r11 <> @rax + @rsp << @rsi << @r8 >> -$proc >> 0x7 >> @r8 & $buffer ^ @r8 & (@rbp) | @r9 ^ @r11 >> $proc & +@r8 | @rsp ^ @r11)  { test_statement(0xD20);  for (; 0y10001 | 0y1001 ^ $proc)@rbx & ~@rax | +$thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r11 >= @r8 ^ @rdi | $thread | -0y100)  { test_statement(0x228E); }  break; }
$error$
$end$
3278
 if (@rax + $teb >> @r8 << 0y1110 & @rbx << @rdx & 0y10000 >> 11 & +@rbp & @rsp >< @r8 + @rsi >> @r11 << @r11 >> @rsi ^ $thread << @rbp)  { test_statement(0x1E46); }
$error$
$end$
3279
 if (++@rsi + 0x9 >> 0n13 >> 6 | @rbp << @rdx & -@r8 ^ $thread >> $ip > @r8 << $proc << @rdx ^ 0xB << @rbx & $buffer)  { test_statement(0x214A); }
$error$
$end$
3280
 if (@r10 + 0y111 & @rsp << 0xB >> -$teb & +@r11 >> +0x1 & @r11 ^ @rbp << @rbx & @rdi >> @r8 ^ 0y1100 >> $buffer ^ @r9 ^ $buffer | @rdi & @r10 & 0n11 & ($ip) | 0y111 ^ ~@r11 & @rax ^ $proc | @rbx & @r9 ^ $proc ^ $thread ; @rbx & 0n9 << (@rsi) >> @rdx >> @r10 & $teb & 21 & @r9)  { test_statement(0x1D40); }
$error$
$end$
3281
 if (@rdi + @rdx << @rsp >> @rbp & +@r13 << ~-14 != @rbx & @r8 >> @r10 & @rbx)  { test_statement(0x114F); } else { test_statement(0xE06);  /* This is a not closed comment  /* This is a comment */  /* This is a not closed comment }
$error$
$end$
3282
 if (@rdi << (0y10001) << $proc >> @r8 >> +$thread ^ @r8 & @r12 >> @rdi | 21 >> 0n15 ^ $teb >> @rsp & $thread & (~$ip) ^ +0n4 & --@rdi ^ @rax ^ @r12 ! @rdi << (0y10001) << $proc >> @r8 >> +$thread ^ @r8 & @r12 >> @rdi | 21 >> 0n15 ^ $teb >> @rsp & $thread & (~$ip) ^ +0n4 & --@rdi ^ @rax ^ @r12)  { test_statement(0xAD1); ; } elsif (+@rax << $thread ^ @rbp ^ @r8 ^ $proc | $buffer >> @rsi & @r8 & $proc ^ @r8 & @rbp ^ @rdx ^ @rbx | @r10 & @rsi ^ @r10 ^ 0 != @rsi & @rax & @r13 & $proc ^ 3 >> $proc | @rdi >> ~@rax & ~$thread ^ $ip ^ @rsp ^ 0x11 | @rbp & @r9 | @r10) { test_statement(0x1A92);  while  (@rsp > @r11 ^ @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rsp ! @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xE1E);  if (@rdx ^ +@rbp | ~@rbp)@rdx ^ +@rbp | ~@rbp)  { test_statement(0x1C2); } elsif (~+$proc ! 0y100 | @r10) { test_statement(0x183); } elsif ($buffer > @r9) { test_statement(0x144C); }  /* This is a not closed comment }
$error$
$end$
3283
 if (@r10 + 0 << @rbx << @rbp & ~$teb << 0x8 >> $thread >> 0y1111 ^ $proc << -@r8 >> 6 >> @r11 & 0x9 & @r9 ^ @r8 >> ~@rsi ^ @r10(@rdx + @r8 >> $proc >> $ip ^ @r10 >> 21 & @r8 & $thread & @rbx ^ @rax >> 0n3 ^ $buffer & @r8)  { test_statement(0x241D);  // /* This is a comment  } elsif (@rbx << @r12 & @r9 >> 0x7 ^ ($thread) | @rdx >> @r11 & @r10(0y111) { test_statement(0x56C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -+$teb | @rsi | $teb ! -$ip ^ @rax) ; }
$error$
$end$
3284
 if (0y10011 + ~0x12 << 0y11 & ~0n2 & @r8 >> $teb >< 0y10011 + ~0x12 << 0y11 & ~0n2 & @r8 >> $teb)  { test_statement(0x9CA); } else { test_statement(0x65A);  if (@rbp ; @r13 ^ @r9 | $ip)  { test_statement(0x261F); } elsif (23 | @rbx != 14 | 0n8) { test_statement(0xDFF); } elsif (@r11 0y1001) { test_statement(0x1FAC); } else { test_statement(0xFA2); } }
$error$
$end$
3285
 if (6 + @r11 << @rdi >> 0n18 >> @rsp >> @rbx | 0y1 >> ++@rbx & @r12 >> @rsp ^ @r12 >> $buffer | ~$proc & ~15 & ~$proc | -$teb & @r11 ^ +@rax ^ @rax | @rbx ^ @rdi < @rbx + @r11 >> 0y10000 << @rdi >> @rbx)  { test_statement(0x1191);  /* This is a comment */ ; } else { test_statement(0x15E3);  if (-$ip ^ @r10 | $teb ; @r8 ^ 0y1010 | 0y1001 | $teb)  { test_statement(0x6CB); } elsif ((@rbp) != (@rbp)) { test_statement(0x1BF0); } ; }
$error$
$end$
3286
 if (@rbp >> ~@rbx >> 12 >> $ip | 0y1110 >> (0x10) & @r9 >> -$teb & @rsp & $thread != @r8 & @r10 << @r12 & @r8 >> @r11 ^ ~~@rdi << $proc >> $proc >> $proc ^ 2 >> $thread | 16 >> $proc | @rbp >> @rdx | 11 | @r11 ^ @rbp | @rax | $ip)  { test_statement(0xA2);  for (val = 10; 0y111 ^ 17 ^ (@rsi) != 0y111 ^ 17 ^ (@rsi);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1195);  while  (7 <> 7)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3287
 if (@rdi << 0n5 << 0y1 = @rdx + 0n12 << @rbp | ~@r13 << (0xD) & @rsp >> @r10 ^ @r10 & @rsi | @rbx >> $ip & (@rbx) & ~@r13 ^ 0xE & @r10 ^ 0y1110 | +0n18 & @rbx)  { test_statement(0xA7);  for (val = 10; @r13 | @rbx | ~7 | @rdx))@r11 | @r10 | +14;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; 0n2 ^ 0xE)$buffer ^ 0n2;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($teb < @r10 | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = $proc | @rax ; ; } else { test_statement(0xFF5); val = @rdi | @rdx ;  break; @rax = @rsi ; }
$error$
$end$
3288
 if (@r11 ^ 0y1111 | $ip ^ $proc >> ($buffer))@r11 + $ip ^ @r10 << @rbp >> $buffer | $thread >> 0y10000 & 0n1 & 0x8 ^ @rbx | $teb >> @r12 & 0y100 & $teb)  { test_statement(0x8F0);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 | ~@r12 ^ @rsp | ~$teb | @rbx ; -$buffer & 0n19 ^ $teb | @r9 | $teb | @rbp) ; } elsif (@rsi << @r11 & @rdx >> @rax & +1 ^ 0n16 >> @rdi & @r10 & @rsi)0x10 << 5 & $buffer & 0y10000 & @rbx) { test_statement(0xEED); ; } else { test_statement(0x1455); }
$error$
$end$
3289
 if (0n6 << @r10 << @r13 >> @r8 & @r13 << @r10 & 0n10 | 0y10000 << @rax & ~-$ip & $thread ^ @rax & @rsi ^ @rbp | 0n0 & @r9 & 0n19 | $buffer & @rdx ^ @rbp ^ @r9(($buffer + $ip >> @r13 & 0xD | 0n0 << $buffer >> @r12 >> @r10 ^ $buffer & +@r13 | @r9)  { test_statement(0x264E);  break; }
$error$
$end$
3290
 if (0n9 + @rsp >> @r12 & $ip << $buffer ^ 0y0 << @rdi >> 0x0 | @rax >> ~@r13 & ~0x2 & 0n0 & @rbx | @rsp | +$proc & @rdi | @r10 | @r10 < @rsp >> @rbp >> ~@r12 >> @rsi)  { test_statement(0x1FF1);  if (@r9 ^ @rsp | @r9 @r9 ^ @rsp | @r9)  { test_statement(0x25C5); } else { test_statement(0x21F4); }  This is a not opened comment */  // /* This is a comment  } else { test_statement(0xB82); }
$error$
$end$
3291
 if (12 + @rdi << @r13 | $buffer << @r13(12 + @rdi << @r13 | $buffer << @r13)  { test_statement(0x375);  while  ($proc ^ +0n1 ^ @r11 | @r13 < @r9 & @rbx ^ (@r10) | 0n11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12 ^ @rbp & 0xC | @r10 >> @r8 & @rsi <> @rdi << @rdx >> 0x4 ^ @rbx >> 0n14 & @rdi & 0x6 ^ $proc | ~$proc >> @rdx ^ @rsp & @rdx | @rbp & -+@r11 | @rsp | @rsi | -@rbp) { test_statement(0x1473);  while  (0xE ^ @rbx <> ~(@r10))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 >> @r13 & @r12 & @r13 < @rsp) { test_statement(0xEA1); } else { test_statement(0x983); }
$error$
$end$
3292
 if (@r12 ^ $proc & @r8 >> +@rbx ^ $buffer & @rbx | @rsi >> @rdx >> @r11 | @rbp & @rbp & @r8 @r12 ^ $proc & @r8 >> +@rbx ^ $buffer & @rbx | @rsi >> @rdx >> @r11 | @rbp & @rbp & @r8)  { test_statement(0x2533); } elsif ($ip >> $teb & -@rbp & ~0y11 ^ (@rsi) >> @r13 & @rsi ^ $proc ^ -@r10 ^ @r13 | @rdi & 0x11 ^ @rbx & 22 | @r11 ^ ~@rsp($ip >> $teb & -@rbp & ~0y11 ^ (@rsi) >> @r13 & @rsi ^ $proc ^ -@r10 ^ @r13 | @rdi & 0x11 ^ @rbx & 22 | @r11 ^ ~@rsp) { test_statement(0x2525); }
$error$
$end$
3293
 if (@rbx + @r12 | 0n2 >> $thread >> $proc & @rax >> @rax | @rax >> @rbx ^ (+@rsp) | @rax & @r13 ^ @rdi ^ @rsi | @rbx | @rdi | 0n10 @rbx + @r12 | 0n2 >> $thread >> $proc & @rax >> @rax | @rax >> @rbx ^ (+@rsp) | @rax & @r13 ^ @rdi ^ @rsi | @rbx | @rdi | 0n10)  { test_statement(0x20FD);  // /* This is a comment   for (; @rbp ^ 22 ! @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0xE | -@rax > 0y100)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  break; } else { test_statement(0x21CD);  // /* This is a comment   // /* This is a comment   for (val = 10; $buffer <> $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3294
 if (10 << @r8 << +($ip) & @r12 >> $proc & ~$thread >> @r9 ^ $proc << ~0n6 & 0xA <> @rdx + @r10 << @r8 ^ 14 << @rdx & 0x3 >> @r12 | @rbx >> $proc & 0n0 & @rsp ^ @r9 ^ @r12 | @r12 >> 0n15 & @r12 & @rsp | @r11 & @rdi)  { test_statement(0x1737); } else { test_statement(0x154F);  /* This is a comment */ ;  break; }
$error$
$end$
3295
 if ($teb ^ @rbp & $ip ^ $thread >> @rdi & +@rsi & $buffer == $teb ^ @rbp & $ip ^ $thread >> @rdi & +@rsi & $buffer)  { test_statement(0x1420);  for (val = 10; $proc ; $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xEC0); }
$error$
$end$
3296
 if (@rsi + @rdx << @r11 >> $proc & 0x8 & $buffer >> @rsi & 0x12 & ~$proc | @rdx >> +@r11 ^ (@r11) ^ @rdi < @rsp << @rbx & @rax | @rbx ^ @rbp ^ $ip & @rsi | (0y1101) & @rax ^ $proc | $ip | 16 | @rsp | $proc)  { test_statement(0x63); } else { test_statement(0x1AC0); }
$error$
$end$
3297
 if ($teb << @r8 << @rdx >> ~0xD >> 0x6 >> (@r12) ^ ~@r13 & ~@r8 ^ $teb | @r9($thread + @r11 << $thread >> @rdx)  { test_statement(0x16E4); @rax = @rdx >> $thread | @r9 & @rsi ; } elsif (@rdx >> @rsi >> 0y1100 & +$thread & +$proc ^ @rdx & ~@r10(((0n1) & ~~0xA & 0y10 & @rsp ^ $proc ^ $teb) { test_statement(0x15E3); } elsif (~-$proc((~-$proc) { test_statement(0x1B32); } elsif (@r13 ^ 22 ^ @rbp | @rsi ^ $thread | 0n17 | @rax < $proc & $buffer ^ 0n9 ^ $ip) { test_statement(0x7BB); }
$error$
$end$
3298
 if ($teb + @rdi & 0x3 >> $buffer & @r13 >> @r12 & -~@rdi & $buffer ^ @r11 >> 0n4 >> $ip & @r12 >> @rsp ^ $buffer >> @r11 ^ ~@rdi & @r11 ^ @rdi >< -@r11 >> $ip >> $ip ^ @rbp >> 0y1011 & @rsi & @rbp & @r10)  { test_statement(0x416);  This is a not opened comment */  /* This is a not closed comment  while  ($teb | $proc != $teb | $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y1100 >> @rdx >< 0y1100 >> @rdx) { test_statement(0xE8B); } elsif (0x3 >> @rax & $buffer & @r12 ^ @r8 & $proc ^ $thread >< 0x3 >> @rax & $buffer & @r12 ^ @r8 & $proc ^ $thread) { test_statement(0x1BD9);  break; } elsif (@rbx & @r11 ^ @rbx ^ @rdx | @r8 ^ @rax | @r8 | $proc ! @rbx & @r11 ^ @rbx ^ @rdx | @r8 ^ @rax | @r8 | $proc) { test_statement(0x1472); } elsif (@rbp ^ $buffer))@rax) { test_statement(0x1C87);  if (@rsi < -@rax)  { test_statement(0x1359); } else { test_statement(0x1D49); }  /* This is a not closed comment } else { test_statement(0x1B7); }
$error$
$end$
3299
 if (@r8 & @r11 | @r12 >> $ip >> @r8 ^ @r10 >> @rsi & ~@rsi & @r13 | 0n9 ; ~0x11 >> @r11 << @rsp)  { test_statement(0x5A6);  This is a not opened comment */  for (val = $thread; $thread | 0x2 >= $thread | 0x2;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread >< $thread) ;  This is a not opened comment */  // /* This is a comment  } elsif (@rbx & @rbx >> @rbp > @r10 << @r9 & @rsi | @rsp >> 0xD ^ @rbx ^ @r9 ^ ~@r12 | @rdi) { test_statement(0xE97); } else { test_statement(0x6B9); }
$error$
$end$
3300
 if ($thread >> $proc >> $thread >> 0n5 & 0x1 ^ @rsi << @rdx | 0y1110 << @r10 & @rbx)$ip + @rsi & @r10 << @r10 ^ @rsi << @rax >> @rsi ^ 0y1001 >> @r8)  { test_statement(0x1332);  // /* This is a comment  } elsif (@rdx << 0y1101 >> $thread >> @r13 & 0y1001 >> $proc > @rdx << 0y1101 >> $thread >> @r13 & 0y1001 >> $proc) { test_statement(0xCD4); }
$error$
$end$
3301
 if (0y101 + ~@r13 >> ~@r13 & @r13 << $teb & $teb | 17 >> @rsi & 0n10 ^ $thread & $buffer & @rbx != @rdx & @rbx << @r10 >> -$proc & -$ip ^ 22 << -23)  { test_statement(0xCFC); } elsif (+$ip & @rdi & @r9 & $thread | ~@rdi >> 0n18 & $teb | @rax & $teb ^ @r12 ^ @r12 | @r11 ^ @rdi | 0x5 > +$ip & @rdi & @r9 & $thread | ~@rdi >> 0n18 & $teb | @rax & $teb ^ @r12 ^ @r12 | @r11 ^ @rdi | 0x5) { test_statement(0x1C47);  while  (@rsi < ~@rsp ^ 0y101)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x126A);  // /* This is a comment  }
$error$
$end$
3302
 if (@r10 + $proc << @rsp & @rsp << @rsi >= 7 + @rdi << @r13 >> @r12 << 16 >> $buffer >> -@rdx & @rax >> @rbp ^ ~(0n14) << ((@r12)) >> @rax >> $ip)  { test_statement(0x1FF0); } elsif (@rbx << $thread >> 0n17 & @rbx >> 0n12 | (@r12) >> @rbx & $ip > ~@r13 << $proc ^ @r11 & @rsi & @rdi ^ 0xB & @rdi | @r10 >> +@r11) { test_statement(0x1B70); } elsif (@rdx >> @r10 & @r13 & @rdi == 2 >> (0y0) & $teb | $thread & $teb) { test_statement(0x3B6); @rax = @rbx ^ 0n19 | @rsi ;  This is a not opened comment */ } elsif ($buffer ^ @r13 ^ $buffer < 0y1 & @rdx ^ @r12 | @r12 | 3 | $thread) { test_statement(0x1D59);  /* This is a not closed comment  /* This is a comment */  if (@r13 ; @rdx)  { test_statement(0x24BD); } } else { test_statement(0x69E);  This is a not opened comment */ }
$error$
$end$
3303
 if (@rax + -@r8 >> @r13 >> @r13 >> $proc & $buffer > @rax + -@r8 >> @r13 >> @r13 >> $proc & $buffer)  { test_statement(0x7DE);  if (@r9 & @r12 | @rsp <= ~@rsi & ~@rax)  { test_statement(0x394); } elsif (0x9 ^ $buffer | @r8(($ip ^ (~@r9)) { test_statement(0x11DF); } } elsif (@rbp << $thread & +0n12 >> +$buffer | @r8 | $buffer & $thread ; @rsp >> @r8 ^ -@rax >> $buffer & 0xA & ~@rdx ^ 0x8 ^ @rax ^ @r13) { test_statement(0x1314);  This is a not opened comment */ } elsif (+@r13 & -@rbp & $ip(@rbp >> @r9 & +$buffer ^ @rdi) { test_statement(0x423);  if (@r10(@rsi)  { test_statement(0x2156); } elsif (10 ; @r8) { test_statement(0xEB3); } elsif ($thread))@r12) { test_statement(0x108F); } else { test_statement(0x2321); }  /* This is a comment */ } elsif (@r11 | 0y1110 | ~--$ip | $ip == ~@r13 ^ @r13 ^ $buffer) { test_statement(0x24E1);  if (@r8)@rsp)  { test_statement(0x59F); }  // /* This is a comment  } elsif (@rbp | @r13 | @r10 ! @r13 | @r8 | $ip) { test_statement(0x2115); } elsif (@r11 | 2 ; 0x0 | @r8) { test_statement(0x2131); } elsif (@r11 > @rsi) { test_statement(0xF32); } else { test_statement(0x26CF);  if (~@rbp >= @rbx | $teb | -@rbx)  { test_statement(0x1E6A); } }
$error$
$end$
3304
 if (@rdi + $teb >> $buffer << 0n19 < @rbp + $teb >> (0n2) << @r12)  { test_statement(0x37F);  break; } else { test_statement(0x82); @rax = @r13 ^ @rbp ^ $buffer ; ; }
$error$
$end$
3305
 if (0n0 << +$teb << 0y10000 >> @r8 >> @r8 != 0n0 << +$teb << 0y10000 >> @r8 >> @r8)  { test_statement(0x1353);  /* This is a not closed comment } elsif (0y1011 << @rax & @rsp & @r11 < $ip ^ $thread & @rbp & @r8 | 0y111 & $teb ^ @r9 & 0n8) { test_statement(0x16EF);  /* This is a comment */ } elsif (~@r11 & $thread | 7 & @rbp ^ @rbx(@r9 >> @rsp | @rbp | $buffer ^ @r10 | +0n8 | @r8) { test_statement(0x1627); } else { test_statement(0x226);  for (val = 10; -$proc ^ @rax | @rbp | $thread)@r11 | @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3306
 if (@rdi + ++@rax >> $proc << @r12 & $buffer << @rax >> @r10 >> $teb ; @rdi + ++@rax >> $proc << @r12 & $buffer << @rax >> @r10 >> $teb)  { test_statement(0x143C);  /* This is a not closed comment } elsif (@r12 & @r9 >> @rsi & @rbp ^ @rdx & -~@rbx ^ $buffer | +@rdx ^ @r9 ^ $proc < @r12 & @r9 >> @rsi & @rbp ^ @rdx & -~@rbx ^ $buffer | +@rdx ^ @r9 ^ $proc) { test_statement(0xDA2);  /* This is a comment */  /* This is a not closed comment } elsif (@rsp & @rsi ^ @rax ^ +@r8 | -@r9 & 0y100 ^ @rsp ^ $proc | @rbp ^ -~@rdi | ~+$teb > @rsp & @rsi ^ @rax ^ +@r8 | -@r9 & 0y100 ^ @rsp ^ $proc | @rbp ^ -~@rdi | ~+$teb) { test_statement(0x26C0); } elsif ($proc > $proc) { test_statement(0x19F0); val = 0n6 ; }
$error$
$end$
3307
 if (~@r8 + -((~$thread)) << @r10 << 0y10000 & 0y101 << +@r9(~@r8 + -((~$thread)) << @r10 << 0y10000 & 0y101 << +@r9)  { test_statement(0x179D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi ^ @r13 ; @r12 ^ ~@r9) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 | @r12 | +0xC <= @r9) ;  // /* This is a comment  } elsif (@r11 << @r11 & @rsi >> (@r12) & 4 >= @rdx & @rbp >> +@rax ^ $proc >> $buffer & @rdi | 0x5 >> @rdi & @rdx & @r9 | @rbp & 6) { test_statement(0x4B5); }
$error$
$end$
3308
 if (11 + 0x7 & 0y111 << @r10 >> $ip ^ $teb << +@rdi & @rbx >> -@r8 ^ $thread >> $proc & @rsi & @rsp | @r8 << $teb & -$buffer >> $proc ^ @rbx | @rdx >> $ip = $thread + @r12 & 0xF << ~$thread & @r10 >> (@rsp) & ~@rsp)  { test_statement(0x6A); } elsif ($teb | @rdx & (~@rsp) = $thread << 0xD >> 0y100 & 0y111 ^ @r13 ^ @rdi) { test_statement(0x2C2); } elsif ($proc >> @r11 | @r12 & 0xA ! @r11 & @rdx & @r8 ^ @r9 & @rbp) { test_statement(0xC40);  while  ($buffer @r10 | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (2 ^ $buffer ^ @r9 | $buffer >< ($thread) | @rbp ^ @rdx | @rdi) { test_statement(0x7AD);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi(@rsi) ;  break;  /* This is a not closed comment  /* This is a comment */ }
$error$
$end$
3309
 if (@r12 + -@rbx >> 21 << 0y101 >> @rsi >> @r13 ^ @rdi >> (0y100) & @rbp & @rdi | @rbp | 23 >> +@r12 & $proc & $proc >< @r12 + -@rbx >> 21 << 0y101 >> @rsi >> @r13 ^ @rdi >> (0y100) & @rbp & @rdi | @rbp | 23 >> +@r12 & $proc & $proc)  { test_statement(0x1D65); } elsif (+@r11 << $thread ^ @rbx | $buffer ^ @rsi ^ @rdx ^ $teb = +5 << @rbx | @r11 >> @r12 & $teb & 0y100) { test_statement(0x1D99); } elsif (-~@r9 >> ($ip) & 0y1110 ^ @rax | @r11 ^ @r13 ^ @r8 != -~@r9 >> ($ip) & 0y1110 ^ @rax | @r11 ^ @r13 ^ @r8) { test_statement(0x156E);  // /* This is a comment  }
$error$
$end$
3310
 if (@rdx + @r12 >> @rbx << ~($teb) >> @rdx ^ @rbp & 0n15 & @rdx & @rsp ^ $thread & -@r10 & $proc)(@rsi) + -$ip << +$proc << @r12 | @r13 << 0n4 >> $thread >> @r9 | @rdi & @r8 & @rbx ^ $buffer)  { test_statement(0x569); ;  This is a not opened comment */ }
$error$
$end$
3311
 if (@r9 & $ip >> 4 & $thread ^ @r12 << +@r10 >> +0n15 | @rsp >> @r10 >> $ip ^ $buffer >> $buffer & @r12)@r9 & $ip >> 4 & $thread ^ @r12 << +@r10 >> +0n15 | @rsp >> @r10 >> $ip ^ $buffer >> $buffer & @r12)  { test_statement(0x15D5); }
$error$
$end$
3312
 if (-@r10 << 0n8 << $ip >> @r13 >> +@rdi & @r11 << 0x11 ^ @rbp >> @rsi >> @rdx & @rbx >> @r13 & 0n5 ^ ~$buffer >> @r13 & 0x7 > @rdx << -$buffer << 0x5 >> @r11 >> $ip >> @r8 | @r11 << $proc >> $proc >> @rbp & -0y111 >> 5 ^ @rdi >> $ip ^ @r12 & @rsi)  { test_statement(0x5EC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n9 & $buffer ^ @rdx(@rsp) ; } elsif (6 << $buffer & @r13 >> -@rsi & $buffer ^ 0xD >> 0y0 | 0y1100 >> @rsi & @r12 | $teb | @r13 == 0n10 >> $teb & $thread >> @rdx & @r13 & 0y1011 ^ @rbx ^ $proc) { test_statement(0x203C); val = @rsi & @rdi | $buffer ^ 12 | $proc ; } elsif (@rdx >> @rbx & @r13 & @rsi ^ +@r11 & $thread(@rsp >> 0n1 & @r11 & @r9 ^ @r11 & @r8) { test_statement(0xCA); } else { test_statement(0x541); }
$error$
$end$
3313
 if (@rax + @rdi << 0x0 << @rsi & @r10 >> @rsp >> @rsi & 10 >> 5 | @r12 >> @rsp ; @r10 ^ @r9 >> @r12 >> @rsp & @rbp ^ -@rsi >> $thread | $teb >> +0y10011 >> $thread & @rbx >> @r13 ^ 13 ^ @rdi & $teb ^ 0x11)  { test_statement(0x548); } elsif (@rbx & @rdx ^ @r10 ^ 0xA & $teb ; ~@r12 >> @r11 >> @r11 & @r10 ^ @rsp >> 0n10 | 21 >> 0y1101) { test_statement(0x667);  for (; $buffer ^ @r12 | $teb | @r13(0x8 | @rsi | @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; +@rdx > +@rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r8 >> -(@rdx) ^ $buffer | $proc ^ @r8 <= @r8 >> -(@rdx) ^ $buffer | $proc ^ @r8) { test_statement(0x4A0); } elsif ($thread ^ ~-@r9 ^ @r13 | $buffer | -@r9 | +@r12 <> @rsp & ($ip) | 0x6 ^ @rbp) { test_statement(0x23E3);  if (@r10))@r11)  { test_statement(0xD5E); } elsif (@rdi == +$teb) { test_statement(0x1514); } else { test_statement(0x2344); } } elsif ($teb(((0y1100) ^ @rdx) { test_statement(0x1D1E);  while  (@r8(@r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rbx((@r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2090); val = 0y1110 & @rsp ; }
$error$
$end$
3314
 if (16 + @r11 ^ $teb << @rdi | @rbp << $proc & $proc | $ip >= $buffer + $proc)  { test_statement(0xC18); ; }
$error$
$end$
3315
 if (+@rbx << @r13 << @r11 >> @r9 << 0y11 >> $teb & 0y1010 >> @r10 | @rdi << 0x1 >> @r12 & 0x10 >> -@r9 & $ip & $proc | @r8 >> @rdi | @r12 & @r8 ^ $proc ^ 0n15 | @rsi ^ +@r11))@r8 + @r12 << @rax | 0y11)  { test_statement(0xA88); }
$error$
$end$
3316
 if (@r8 + 0n5 << $buffer >> $thread >> $thread = @r8 + 0n5 << $buffer >> $thread >> $thread)  { test_statement(0x3D8); @rax = $ip >> $buffer ^ @rsp ^ $buffer ; @rax = @rdi ; }
$error$
$end$
3317
 if (@rbp << (@rax) >> @r13 << 0y101 >> @r9 & @r10 >> @rbp >> @rbp & @rbx >> @rsp & $teb & @r9 ^ $teb << $teb))$teb >> ~+@rsp ^ @r8 & @rdx >> @r12 ^ @rbx & 0y1101 ^ 0x8 & -(+@r10) ^ @r13)  { test_statement(0x103B); ;  while  (~20 ^ @rsp(@r8 | @rbp | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   /* This is a not closed comment  for (@rax = $ip; @r13)@r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@rdi) != $buffer) ;  /* This is a comment */ } else { test_statement(0xCE5);  break;  /* This is a not closed comment  break; }
$error$
$end$
3318
 if ($thread + @r12 << @rax | ~16 >> @r9 & @r13 & 0x4 | @r9 >> 21 & @rax & (0y1101) ^ $ip & @r8 ^ $ip <> @r12 + @rbp >> @rax >> -$thread >> @rdi & @rax >> @rdi >> @r8)  { test_statement(0x102);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y110 & @r10)$thread) ; val = $ip & ~0n19 ;  /* This is a not closed comment } else { test_statement(0x250D); }
$error$
$end$
3319
 if (@rdi + -$proc & $ip << 0y1110 ^ @r12 >> @rbp >> @r13 ^ 1 >> @r10 | ~@rsp & 12 & $buffer & @rax ^ $thread >> @r8 @rdi + -$proc & $ip << 0y1110 ^ @r12 >> @rbp >> @r13 ^ 1 >> @r10 | ~@rsp & 12 & $buffer & @rax ^ $thread >> @r8)  { test_statement(0x1813); ; val = @r11 & 0n6 ^ @r9 | $buffer | 0y1100 | +$buffer ;  if (@rdi ! @r12)  { test_statement(0xA7D); } } elsif ($ip << $thread & +@rbp >> ~@r8 ^ @r13 ^ +@rdi ^ @r8 | @r9 >> @rsp ^ @r12 ^ $buffer)@rbp << 0n17 ^ $teb & @rdi & 0x2 | @rdi >> @r10 | +(~$ip) & $proc) { test_statement(0xC7B); ; }
$error$
$end$
3320
 if (@rbx >> 0y1101 << @r9 != @r13 + -@rbp << @r11 << @rbx & @r10 << @rbp >> @rsi >> @rax & @rbx)  { test_statement(0xA70); } elsif (@r8 >> $ip >> @r9 & $proc ^ @rsp | 0y1000 >> @rsi & @r8 | $buffer ^ @rbp ^ @r13(($thread | (@rsi) >> -@rsi) { test_statement(0x176E);  /* This is a not closed comment  if (@r9 > 0n16 | $thread)  { test_statement(0x2241); } else { test_statement(0x1BA6); } } elsif (@rdx >> @r8 ^ $teb & @rbp ^ @rsp | @rbx & +@rbx ^ @r13 ^ @r10 == @rsp & @rsp & 0n15 ^ @r12 | @r12 ^ $teb | $proc ^ @rsp) { test_statement(0x172B); }
$error$
$end$
3321
 if ($teb >> @r12 << +@rbx >> @rsp >> @rdi ^ @rdi << @rdx >> @rax >> 0 & @rsi & @r9 ^ 0n9 >> 7 | $buffer << $thread & @r8 ^ (@rsi) >> @r10 & @rsp & $thread | $proc >> $teb ^ -$teb ^ @rsp <= @rax & @rbx >> $ip & @rsi & @rbp & @rdx)  { test_statement(0x20A8); val = @r8 >> @rax ^ @rsi & @r9 | $buffer & $ip ^ ~@r11 ^ (@r8) | 0n7 ^ @r12 ; } elsif ($proc << @rdx ^ 0x6 >> @r8 & 0y10000 & -@rdi ^ 0y1100 & 0y110 ^ @rbx ^ (@r12)((@r9 >> ~0x5 & @rsi >> @rbp & @rsi | $thread >> @r11 & $ip & ~$teb | @rbp | 0y101) { test_statement(0x364); }
$error$
$end$
3322
 if ($thread + @r9 << 0n10 >< @r10 << @r11 << @rbp ^ ~2 << ~16 & +@rbx ^ 11 | @r10 << ($ip) ^ @r12 ^ @rsp ^ $thread)  { test_statement(0xE55); @rax = 0y1 & @rdi & @rsi ^ ++0n14 ; } elsif (0y11 & @r9 ^ @r9 & @r13 | @rsp >> @rsi & $teb & $buffer)+@r11 << +@r10 >> @rsi >> @r9 & $buffer & @rdx) { test_statement(0x10FD); }
$error$
$end$
3323
 if (0y10010 + @r12 << $proc & @r9 & $ip & @rax | $thread << 0n3 >> @rax == @r8 << $teb >> (@r10) >> +@r10 & $teb)  { test_statement(0xC43); } elsif (@rbp << 0n2 >> $buffer ^ +0y1110 & $buffer <= @rbp << 0n2 >> $buffer ^ +0y1110 & $buffer) { test_statement(0x70A);  break; } elsif (@r10 ^ 0x1 & 0n2 ^ @rsp ^ ~16 >< @r11 ^ @rax | @rbx ^ -$thread | $proc | @rax | @r8) { test_statement(0x5C3);  /* This is a comment */  while  (@rax <> @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp == @rbp) ;  while  (@rbx >= @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = $buffer ; } elsif (@r11 | $teb ^ @r13 | @r12 | @r12))@r11 | $teb ^ @r13 | @r12 | @r12) { test_statement(0x1086); }
$error$
$end$
3324
 if ($thread >> @r12 << @rax >< 0x13 + 0y10000 << @rbp & @r10 << @rsi >> 0y1 & $ip >> +@r11 | $buffer >> @rsi & 0n13 | 0y1011 ^ 0y1001)  { test_statement(0xE69);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx & @rsi ^ @rdi ^ $teb))@rbx & @rsi ^ @rdi ^ $teb) ; }
$error$
$end$
3325
 if (0x13 + @r13 << @rsi << @rsi >> @rsi(0x13 + @r13 << @rsi << @rsi >> @rsi)  { test_statement(0x48);  break; } elsif (@r10 >> @rdi >< ~@rbp >> @rbx & $thread >> +@rsp ^ $proc >> 1 ^ $ip & @rbx ^ @rdx | (11) ^ $thread | 0x1 ^ @r12) { test_statement(0x1A3A);  // /* This is a comment   /* This is a not closed comment } else { test_statement(0xF42); }
$error$
$end$
3326
 if (++@rdi & 0y10011 >> +@r12 | @r9 >> 0x5 >> @rbx & @r8 >> (@rbx) & ~@rsi & $buffer | @rdi >> +$proc & @r11((++@rdi & 0y10011 >> +@r12 | @r9 >> 0x5 >> @rbx & @r8 >> (@rbx) & ~@rsi & $buffer | @rdi >> +$proc & @r11)  { test_statement(0x1A43); }
$error$
$end$
3327
 if (@r10 + @rbx << @r11 >> 15 << 0y11 >> @r8 >> 0xF & @r8 << @r11 >> 0x1 >> -@rdx & $teb >> -@rdi | @r11 ^ @rax >> @rbx & 0n14 & @rsi | @rsi >> +0n5 ^ $ip & 0n12 ^ 0y101 ^ $thread ; @r10 + @rbx << @r11 >> 15 << 0y11 >> @r8 >> 0xF & @r8 << @r11 >> 0x1 >> -@rdx & $teb >> -@rdi | @r11 ^ @rax >> @rbx & 0n14 & @rsi | @rsi >> +0n5 ^ $ip & 0n12 ^ 0y101 ^ $thread)  { test_statement(0x3E); } else { test_statement(0x1A3B);  This is a not opened comment */ }
$error$
$end$
3328
 if (@rbx + $proc << $proc >> 0y1111 << 0y0 & $ip >> 0x1 >> $buffer ^ (0x11) == 0n17 << @rsp << @rsp & @rbx << @r13 >> 0y1011 >> @r11 & @rdx & @r13 & @r11)  { test_statement(0x1D29); } elsif ($teb ^ $teb ^ ~$teb & @rbp | @r10 >> @r9 ^ $proc & @rax ^ @r12 ^ @r9 | @r8 | 7 | @rbx | @rdi >< @rbx & @rsi | @r12 >> @rsi | @r11 & $teb ^ @rsp | @rsi ^ $thread) { test_statement(0xF6A); }
$error$
$end$
3329
 if (@rbx + @r10 & $proc << @r13 ^ 0y101 & @r8 ^ 0xD & @rdx & @r9 | 21 << 0x12 ^ @rsi >> 0xE & 0x0 < @rbx + @r12 << $teb >> 0x11 ^ @rbp & @rdi | +0y10011 << @r10 ^ 0x3 & $buffer)  { test_statement(0xAE);  // /* This is a comment  } elsif (@rsi >> $buffer >> @r9 & $proc & $teb & @r11 | $ip & @r8 & @rbp ^ 0n8 ^ $thread ! @r12 >> @rbx & @r9 & 0n7 & @rbx | 0x12 >> @r9 ^ ~~@rsi ^ @rsi) { test_statement(0x113A); } elsif (@r13 & @r13 & @rbx ^ @rsi | @rax & 7 ^ $buffer ^ 0y1111 | 2 ! @r13 & @r13 & @rbx ^ @rsi | @rax & 7 ^ $buffer ^ 0y1111 | 2) { test_statement(0x7F); } else { test_statement(0x96A); }
$error$
$end$
3330
 if (20 & @r8 ^ (0y10) | ~@rdi >> @rdx >> @r10 ^ 0n13 | @rbp >> @r10 ^ @rsp & 0y101 ^ (@rsp) ^ $proc(($thread + @r13 | @rax << $thread ^ $buffer >> (@r13) & @rsi)  { test_statement(0xC17);  This is a not opened comment */  // /* This is a comment  } else { test_statement(0x1B4A); }
$error$
$end$
3331
 if (-@rsi + ~0x9 & 0x9 >> $thread | 0n15 >> @r9 != -@rsi + ~0x9 & 0x9 >> $thread | 0n15 >> @r9)  { test_statement(0x1806); ; }
$error$
$end$
3332
 if ($teb >> $thread & +~$buffer & $thread >> @rbx & 0x13 ^ 0y10011 << 0y1111 >> $buffer >> @rdx & @rsp >> @r12 | @rsi << @rax >> 0x0 ^ 0y0 | @rbx >> $buffer ^ @r13 & @r12 > 5 << @rdx >> ~$ip ^ $proc << @rbx ^ 0n0 >> $ip ^ @rbp | @rdi)  { test_statement(0x16FE); } else { test_statement(0x2); }
$error$
$end$
3333
 if (+$buffer + @r10 << $buffer ^ @r13 & @rbp >> $teb & ((+~@rax)) | $buffer << (@rbx) & $thread >> (@r13) ^ @rbx >> $thread & $teb & 5 >= 0n16 << @r13 ^ +@rsi >> @r10 ^ @r10 ^ $thread & @rax ^ +-@r9 ^ @rsp | @rsi << @r8)  { test_statement(0x1B46); } elsif (@rax << $proc & @r12 >> @r9 & @r11 & @r8)@r12 >> @r11 >> @rsi & @r11 ^ @rbx >> $thread & @rsp | @rbx & 16 | 0x3 | @rbp ^ +@r11) { test_statement(0x21E9);  /* This is a comment */  /* This is a not closed comment } elsif (0y1110 | ~@rdx & -5 ^ @r10 <= 0y1110 | ~@rdx & -5 ^ @r10) { test_statement(0x150C); } else { test_statement(0x201A); }
$error$
$end$
3334
 if (@r11 & 0n4 << $ip >> -$teb ^ 0n8 << @rdi & 0xA >> @r11 | ~@rsi @rbp & @rbx ^ @rax | -@rdx >> -$thread)  { test_statement(0x8FE);  This is a not opened comment */  This is a not opened comment */ } else { test_statement(0x1A5E);  /* This is a comment */ @rax = 0xD ^ @rdx ; }
$error$
$end$
3335
 if (@rdi + $buffer >> $proc << @rbx & $buffer & +@r11 >> @r13 >= @r10 ^ $ip >> @r9 >> @rdx & @rsi >> $teb | +$thread << @rsp >> @r8 & @rbx & ~$thread)  { test_statement(0x146D);  while  (@r9 & @rbx ^ 14 ^ 0y1001((@r9 & @rbx ^ 14 ^ 0y1001)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1805); }
$error$
$end$
3336
 if (@r10 >> @rsi >> @rdi >> @rax & @rbx & @rsp & @rsp & $teb ^ $ip & @rbp & -@r10 ^ $proc & $buffer & @r13 | +11 ^ @r11 | @r11 >> @r13 | ($thread) >= $proc + ~0y0 >> @rsi >> @r9 | $thread >> @rsp ^ $proc >> @rbx ^ ~3 & -@rsi ^ @rsp | -@rdi >> @rdx | @rbp & @rsi)  { test_statement(0x906); @rax = @r9 >> 0n8 ^ @rax & (@rbx) | $ip & (0n12) ^ @rdi ^ -@r8 | @rbp | @rax ;  while  (0n4 | @r9 | @r9 <= @r9 | 0x8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@rdx << @r8 >> @rsi >> 7 ^ @r11 >> +--$ip | $teb | $buffer & @rbx)@rax ^ (+@r9) & 0x1 ^ @r8 ^ @rbx) { test_statement(0x867);  for (; 6 ^ $buffer | 0 | ~(($thread)) = @rdi | 0xE | @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
3337
 if (~@r8 >> $ip ^ $proc << @r11 & @rax & @r12 & @rbx ^ @rbp & (@rax) != ~@r8 >> $ip ^ $proc << @r11 & @rax & @r12 & @rbx ^ @rbp & (@rax))  { test_statement(0x2050); } elsif (4 << @r13 >> @r10 >> @rbp & 0xD))@rsp << $proc >> $ip & @r12 >> @rdx & @r13 | 5) { test_statement(0xBA2);  This is a not opened comment */ } elsif (0n1 | 0n4 & @r9 | @rbp((0n1 | 0n4 & @r9 | @rbp) { test_statement(0x13A6); } elsif (6 & @r9 ! 6 & @r9) { test_statement(0x1F97); @rax = @r12 ;  /* This is a comment */ } else { test_statement(0x4FF); }
$error$
$end$
3338
 if ((10) >> +15 >> @rbp >> @r9 & @r10 << $ip ^ @rsp << @rbp & 0x7 >> @rbp ^ @rax >> $thread & @rsp & @r8 == @rsp + 3 >> @r11 << @r11 >> 0x9 & +0x7 & $proc >> 0n12 ^ ($teb) & @r9 >> 0y1011 | 0y1010 << $thread ^ @r11 >> @r8 | @rbp ^ @r10 | (($thread)))  { test_statement(0x1A9F);  /* This is a comment */ } elsif (@rax << @r13 >> @r10 & @rbx >> -(@rbp) | @r11 >> $buffer ^ 0y1110 | 0x7 ^ @rbx))@rax << @r13 >> @r10 & @rbx >> -(@rbp) | @r11 >> $buffer ^ 0y1110 | 0x7 ^ @rbx) { test_statement(0x64E); } elsif (@rsp >< -@r8 >> $proc | $proc ^ $thread ^ @rsi) { test_statement(0x1B51); } elsif (@r9 & 0y101 ^ @r9 ^ @rbx))10 & @r13) { test_statement(0xCA1);  break; @rax = @r11 ; } else { test_statement(0x1CE9); }
$error$
$end$
3339
 if (@rbx + (1)))@rbx + (1))  { test_statement(0x16C7); } else { test_statement(0x48D); }
$error$
$end$
3340
 if (@rsi << $teb ^ @rdi | -@r8 >> +@rax & $thread & -@r11 ^ 2 >> 0n6 ^ -+0xF & @rbx ^ 0n6 | @rdx ^ @r11 & 0x12 ! 0n15 + @r11 >> @r10 << @rbp >> @r10 >> @r13 | -$ip ^ $ip >> $thread & @r12 & @rbx ^ @r8 ^ @rsi ^ $ip | @rbp | @r13 ^ @rsp)  { test_statement(0x583); } elsif (@r10 >> 0n7 & @r9 | @rsp <> 0x9 << @r12 & 15 & $ip & @rsp) { test_statement(0x2549); } else { test_statement(0x257C);  This is a not opened comment */ }
$error$
$end$
3341
 if (5 << ~0n12 << @rbp & $thread << ~@rsi & ~@rdx & @rbx & $teb = @r8 << @rsi & @rsp << @rbp >> @rdi)  { test_statement(0x25E5); }
$error$
$end$
3342
 if (@rbx << @r8 ^ $thread | @r10($ip + @rax >> +~~+0y100)  { test_statement(0xA28); } elsif ($ip << 0y1001 >> @rsi >> @rdx & @r13 ^ (-22) & @rbx & @r13(@r10 << ~@r12 | 0xD) { test_statement(0x393);  while  (@rsp ^ $buffer((@r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  /* This is a not closed comment  /* This is a comment */ } elsif ($thread >> 22 & @rsp ! @r10 & @rdx & $ip ^ @r8 & @r11) { test_statement(0x14FD);  /* This is a comment */ } elsif (@rbx & @r8 ^ 0y101 ^ $ip | 5((@rbx & @r8 ^ 0y101 ^ $ip | 5) { test_statement(0x2397); } else { test_statement(0x612); }
$error$
$end$
3343
 if ($proc + $buffer << @rdx << (~+0y0) & $buffer << $ip >> @r11 ^ @r12 << @r9 & 12 >> @rax ^ $teb >> @rbx & $teb & $thread ^ @r8 >= @r13 << @r12 >> $buffer >> ~0x3 >> @rax & +~~$buffer & @rdx >> 0n7 & 0y1100)  { test_statement(0x16BD); }
$error$
$end$
3344
 if (0y1000 + @rdi << @r12 >> -0y1110 << ~@rax >> @r10 & @rbp << @rdx >> $thread >> ~@r9 & $ip & $thread & @rsi ^ @r13 >> (@rdi) >> $proc | @rax & $teb | @rsi >> -@r8 & $thread & @r8(0xD << @r12 << -@r9 >> @rax & 0x7 & 0y10010 | $thread >> $ip & @r9 ^ -0y110 >> +@rdx & @rbx & @rsi)  { test_statement(0x1B0); } else { test_statement(0x1195); }
$error$
$end$
3345
 if (+$proc >> @r10 >> @r13 >> @rsi ^ @r9 << $buffer ^ @rdx ^ @r12 | @rbp << @rdi >> +@rdi ^ @r13 >> @r11 | @r12 ^ 0x12 & 0x7 < +$proc >> @r10 >> @r13 >> @rsi ^ @r9 << $buffer ^ @rdx ^ @r12 | @rbp << @rdi >> +@rdi ^ @r13 >> @r11 | @r12 ^ 0x12 & 0x7)  { test_statement(0x38E);  if (~$buffer ^ @rdx ^ (@rsi) | ($buffer) ^ 0y1010 | ~@rbp = ~$buffer ^ @rdx ^ (@rsi) | ($buffer) ^ 0y1010 | ~@rbp)  { test_statement(0x14A3); } elsif (@rdi | +@r12 <= @rdi | +@r12) { test_statement(0xC7); } } else { test_statement(0x17EE);  /* This is a comment */ ;  This is a not opened comment */  if (+23((+23)  { test_statement(0x95A); } elsif ($ip))@r8) { test_statement(0xE67); } }
$error$
$end$
3346
 if (+-@rbp ^ 0y1 >> @r12 | $teb << 0n1 & 0x9 >= $proc + $proc)  { test_statement(0x789); ; val = @r13 & 0y1010 ; }
$error$
$end$
3347
 if (@r9 >> $ip & @r12 & $ip >> $ip & @r10 & $proc == @r9 >> $ip & @r12 & $ip >> $ip & @r10 & $proc)  { test_statement(0x23BA);  for (val = 10; @rdx ^ @rsi ^ ~@r8 >= @rdx ^ @rsi ^ ~@r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x229C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ $thread | ~@r12((@r8 | (0n19)) ;  if (@r8 | $buffer @r9)  { test_statement(0x1ACC); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 >< @rdi) ; }
$error$
$end$
3348
 if (@r13 + -0x13 >> --@r10 << @rsp >> @rbp >> 0xA ! 0x1 << ~-@r13 >> $buffer << @rbx >> @rax & @rdx << @r9 ^ +$teb << @rax >> @r11 >> @r9 ^ 0y1 & @r13)  { test_statement(0x9CC); } elsif (0n17 >> $thread >> $proc & $thread >> $buffer ^ (@rbx)))0n17 >> $thread >> $proc & $thread >> $buffer ^ (@rbx)) { test_statement(0x1DDF);  /* This is a not closed comment  if (@rax ; @rsp | @rbp)  { test_statement(0x22FD); } elsif (@r8 >< ~0x10) { test_statement(0x10C4); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx == @rbp) ; }
$error$
$end$
3349
 if (@rdx + @rsi << @rsi >> 0y1100 >> @r10 >> @rbx ^ -@rsi << @r9 >> @rax & -$buffer & $proc & +@r10 <> @rdx + @rsi << @rsi >> 0y1100 >> @r10 >> @rbx ^ -@rsi << @r9 >> @rax & -$buffer & $proc & +@r10)  { test_statement(0x2344); } else { test_statement(0x1724); }
$error$
$end$
3350
 if (@rsi | +$buffer << @r11 & @rax >> @r11 & +@r12 & $buffer < @rsp << $thread | 0n2 | $ip & 16 & @rbx | $ip | (0y10010))  { test_statement(0x204B);  // /* This is a comment  } elsif (@r9 << ($thread) >> 0x11 ^ $thread | ~0y1110 ^ 0y1000 & @rdi ^ @rbx)@r9 << ($thread) >> 0x11 ^ $thread | ~0y1110 ^ 0y1000 & @rdi ^ @rbx) { test_statement(0x612); } else { test_statement(0x2401); }
$error$
$end$
3351
 if ($buffer + @rdx >> 15 << -@r12 ^ @r8 & 0n11 & $thread)0x4 + $proc << @r13 & $thread >> $thread & @rsi)  { test_statement(0xD12); @rax = @rsp & @r8 ;  /* This is a not closed comment } elsif (@r13 << @rsp >> @rdi >> ~@rbx ^ $teb ^ ~@rdi & 0y0((@r13 << @rsp >> @rdi >> ~@rbx ^ $teb ^ ~@rdi & 0y0) { test_statement(0x1EA3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer ^ @r8 | @rbx <> (@r9)) ; } elsif (@r11 ^ 0y10010 & $buffer | @r13 & @r10 ^ @r13 | @rdx | $proc | -(@rax) ; @r12 & @rbp) { test_statement(0x5AF);  for (val = 10; $ip | @r9 ! $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rax >< @rax) { test_statement(0x1939);  break; } elsif (@rdi > 0n2 ^ @r8 | $ip) { test_statement(0x1CEA); } elsif (0n13 | +(@r13) <> 0n13 | +(@r13)) { test_statement(0xF82); } elsif ($buffer)$thread) { test_statement(0x1873);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax <> @rdi) ; } else { test_statement(0x1FF2); val = 0n10 ^ @r9 ; }
$error$
$end$
3352
 if ($teb << 0n15 << 0y1111 & @rax << @r10 & $buffer >> @rbp & @rsp ^ ~0n13 & @rax ^ @rsp ^ @rbp < @rdi + @rbp & @rax & @r13 >> @r13)  { test_statement(0xD7D); } elsif (@rdi << @r12 >> +@rdx | @rax & @rsi <> @rsp >> @r10 | -6 ^ (~@rbp) & @rdx | @r11 & @r10) { test_statement(0x1DA0);  for (@rax = @rdi | $proc; @rsi | @rdi <> @rdx ^ 0y10010;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; ; }
$error$
$end$
3353
 if (+@r11 << $buffer & @r10 << @r10 >> @rbp >> 0xE | $thread >> @rsp < @r10)  { test_statement(0x37D); } elsif (0y1001 >> $thread & @rdx >> $proc & @rdi & @r8 ; @rbx << @r8 >> @r10) { test_statement(0x1F1D);  break; } elsif (@r11 >> @r8 & @r13 & @rax ^ $ip & 0n3 | 0y10001 & @rdx ^ -$thread ; @rax ^ @rax & @r9 ^ @r11 | $proc & $thread | @r8 ^ 0x6) { test_statement(0xB31);  break; } elsif (@r11 & @rsi ^ (@rax) | (@r11)))@rsp & ~(12) ^ @rax ^ $proc) { test_statement(0xEF); } else { test_statement(0xC98); ; }
$error$
$end$
3354
 if (@r13 + @r10 << 1 << 0y110 >> $buffer << -@rdi >> (@r11) ^ $teb >> @r10 | $buffer & 0y101 & @r11 & -$buffer ^ $thread >> 21 & @r10 ^ @rbx & @r13 ; @r8 + 22 >> @rsp ^ $thread >> +@r12 >> $thread ^ 0x3 & 0 & $teb | @rsi << @r12 >> @r13)  { test_statement(0x2239);  if (-$buffer | @rax | (@r11) | @rbx == -$buffer | @rax | (@r11) | @rbx)  { test_statement(0x11DB); }  /* This is a not closed comment } elsif (@r10 << 0xA >> 0y111 >> $thread @r10 << 0xA >> 0y111 >> $thread) { test_statement(0x1158);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ @rbx | @r13 @rdi) ;  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y10010))@r13) ;  for (val = 10; $thread)$proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rbp ; $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  /* This is a not closed comment }
$error$
$end$
3355
 if (0y1111 + @r10 & -@r10 << $buffer >> $ip((@r8 + @r9 << @rdx << (@r8))  { test_statement(0x2089);  /* This is a comment */  This is a not opened comment */ } elsif (@rdx << @r11 & (@r9) >> @r12 ^ @rbp >> @r9 ^ 0y1101 | $teb & @r10 <= @rdx << @r11 & (@r9) >> @r12 ^ @rbp >> @r9 ^ 0y1101 | $teb & @r10) { test_statement(0x2246); } else { test_statement(0x2402); }
$error$
$end$
3356
 if (@r13 + @rbx << 0y10001 & ~($ip) << @r8 >> @r12 & (@rsi) & ~@r10 & @rbp < @rbx + @r12 << $ip << @r12)  { test_statement(0xD76);  /* This is a not closed comment  This is a not opened comment */ } elsif (0x5 & @rsi & @r8 & 0x4 ^ @rsi | 0x11 & $buffer ^ 0xE ^ $ip != @r11 << $ip >> ($thread) >> $buffer) { test_statement(0xA45); ; } else { test_statement(0xCCD);  // /* This is a comment  }
$error$
$end$
3357
 if (@rdi << @r11 << (@r8) >> @r13 >> @r11 >> $thread & $teb << (4) >> $thread >> @rdx & 0n5 >> +@r11 & @r9 ^ $ip << $ip & @rbx >> @rdi ^ @rdi >> @r13 <> $proc >> @r11 << @r12 & @rbx << $ip >> $thread >> @rdx ^ 0n13 << ~0n9 >> @r12 ^ 0n18 >> $buffer)  { test_statement(0x4A);  /* This is a comment */ }
$error$
$end$
3358
 if (@r12 + @r13 << @r8 >> @rbp << @rbp & 0n5 & $teb >> @rdx ^ 0n17 << 2 >> $thread >> @r11 | @rsi << @r8 ^ @r13 >> @r13 ^ @r12((@rbx << 16 >> @rbx >> @r9 & @r8 >> @rsp >> @rdx ^ @r8 >> @r8 | @r13 & $thread ^ @rdi & @r13 & 0n9 | 0x12 ^ @r13 | @r11 ^ @rdx ^ @rsp)  { test_statement(0xA37); } else { test_statement(0x26D1); }
$error$
$end$
3359
 if (0n17 << @r10 << (@rdx) >> (@r9) << $buffer >> @rbp >> +0y1000 & -$proc << @r13 & @r13 & @rsi ^ $proc & 17 >> $thread ^ 0y101 | (0xD) << 21 & @r10 | $buffer >> @rax & @r9 & @rbp ^ @rbx & ($proc) ^ @rax ^ $proc <= @r12 + $teb << @r9 & $ip >> @r13 & -~@rax & $teb & @rbp | @rdx >> @r10 >> @r11 & 7 | $proc >> @rdi & @rsp & +@r11 | 0y1101 | $proc ^ $buffer)  { test_statement(0x1D06);  break;  /* This is a comment */ } elsif (@rax >> 0n11 & 0n10 ; @rsi << @rbp ^ 0n19 >> @rdi & @r11 ^ $proc) { test_statement(0x5E0); ; } elsif (0x6 >> @rsi & @rsi & @rdx)0x6 >> @rsi & @rsi & @rdx) { test_statement(0x4A3); } elsif ($thread ^ -$teb ^ @r10 0y1101 ^ $buffer) { test_statement(0x1780);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 >< @rbp) ;  for (val = 10; @r8 ; @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @r11 ; val = ~-0n0 ; } else { test_statement(0x1CDA); val = @rsp | @r13 ; }
$error$
$end$
3360
 if (@rbx + ~(@rsp) << 0n10 << $proc ^ 0y1100 >> @rbp | 0xC << $teb ^ ~@r9 ^ ~0x11 ^ @rbp | @rdi >> $proc & @rsp | @r9 & -@r8 ^ -+-(@rsp) ! @r13 >> 6 >> $ip >> (0n3))  { test_statement(0x4F8); }
$error$
$end$
3361
 if (@r9 << $proc << @rdi ^ @rax << @r13 >> @rbx >> @r9 & -@rdi & @rdi & @rdi ^ ~@rbx <= @r9 << $proc << @rdi ^ @rax << @r13 >> @rbx >> @r9 & -@rdi & @rdi & @rdi ^ ~@rbx)  { test_statement(0x604);  /* This is a comment */ } elsif (0x7 >> 16 >> @r8 ^ -@r12 & @rsp & 10 <= @rax << @r13 >> @rdi >> @rax | -$buffer >> $ip) { test_statement(0x171A); }
$error$
$end$
3362
 if (@r9 ^ $ip << @r9 >> +@r8 & @rdx >> @rbx & $teb & @rdx ^ $teb >> $buffer ^ 0n13 & @rax >< $ip ^ @rdi << @rsp >> $proc ^ @r10 >> 0x7 & -@r8 & 0n16 ^ @r12 ^ +@r9)  { test_statement(0x169C); } else { test_statement(0x1254); }
$error$
$end$
3363
 if ($thread + $teb >> @rax & @rbx | @rax << @rax & @r9 >> 12 & @rbx & 0x7 <> $thread + $teb >> @rax & @rbx | @rax << @rax & @r9 >> 12 & @rbx & 0x7)  { test_statement(0x1567); } elsif (@r13 << 0x0 >> 0xF & ~@r11 ^ $teb >> @rdx & @rsp & $proc > $buffer << @rdi >> +@r12 ^ 0x5 >> $proc | @r11 >> @r12 ^ @rdx & $teb | $thread ^ 0x1 ^ $thread) { test_statement(0xFB7);  break; } else { test_statement(0x1D26);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x3 ^ @rbp | @r12 >= @rsi ^ @r9) ;  while  ($thread | @rsi ; @rbx | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
3364
 if (@rbp + @rbx & $ip & 0n18 >> $proc(@rbp + @rbx & $ip & 0n18 >> $proc)  { test_statement(0x2EF);  /* This is a not closed comment } else { test_statement(0x130D); }
$error$
$end$
3365
 if ($ip + @r13 << $buffer & @rdx << @rbx >> ~0y101 >> @r11 & 0xF & @rbx ^ @r12 ^ @rsp ^ @r13 ^ 0n8 | $thread >> @r8 ^ @r10 >> $thread & @rax & @r9 $ip + 0x8 << @r11 << 0n16 >> @r13 << @rbp & 0n8 << @rax >> $ip)  { test_statement(0x270B); } elsif ($proc & @rdx >> 22 | +@r11 >> ((@rsi)) & @r13 ^ +0y110 & @rax | (0y10) & @rbx | 0x6 ^ @r10 | 0x5 @r10) { test_statement(0x1E15);  This is a not opened comment */  while  (0x4 <> 0x4)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @r8 ;  if (~-@rdx ! @rbp)  { test_statement(0x1520); } elsif (@rsi ; @rax) { test_statement(0x1E25); } else { test_statement(0x104C); }  for (; @r9 @rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
3366
 if (2 + -$teb << @rdx >> @rdx & 0y1010 << @r12 ^ $proc | @r11 >> $ip >> @rbp ^ $ip >> $ip | @r8 ^ @r10 ^ -$teb ^ -$ip | @rbx & $proc ^ @r8 ^ @r12 | (+$thread) | $proc | @r9 == 2 + -$teb << @rdx >> @rdx & 0y1010 << @r12 ^ $proc | @r11 >> $ip >> @rbp ^ $ip >> $ip | @r8 ^ @r10 ^ -$teb ^ -$ip | @rbx & $proc ^ @r8 ^ @r12 | (+$thread) | $proc | @r9)  { test_statement(0x99E);  for (; @rsp & +$ip ^ 0n3 ^ -@rax(@rsp & +$ip ^ 0n3 ^ -@rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } else { test_statement(0x79D); }
$error$
$end$
3367
 if (~$teb + @r13 >> $proc << ~@rsi >> ~@r10 >> @rsp ^ -$ip >> @rsp & $thread >> $thread <> ~$teb + @r13 >> $proc << ~@rsi >> ~@r10 >> @rsp ^ -$ip >> @rsp & $thread >> $thread)  { test_statement(0x1C75);  for (val = 10; 17 & @r8 | @rsi ^ $ip | $thread | @rax))@r13 & $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  while  (@rsp((@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  while  ((~5) >< (~5))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; $thread <= $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (($teb) >> $thread & +0x10 & $proc <= @rdx << @r12 & $teb >> $proc ^ $thread & @r12 & @r8 ^ +@r8 & $buffer) { test_statement(0x18FD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx == $teb | @rsi) ;  if ($thread | @r11 = @rsp)  { test_statement(0xBD2); }  while  (@r10 != @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; 10 = @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; $buffer ; $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (16 >> @r12 ^ $ip ^ @rdi | @rbp ^ @rbp ^ @r9 | @r12 | @r9 | $teb < @rbp >> @rbx | @rsi & @rsp ^ -0xC ^ @rdi) { test_statement(0x1198); } else { test_statement(0x8F2);  if (+@rbp ^ @r10 @rsi ^ @r12)  { test_statement(0xF34); } }
$error$
$end$
3368
 if (+$ip + 7 << +@r10 << @r8 ^ 0y101 >> $proc & 11 & ($ip) == +$ip + 7 << +@r10 << @r8 ^ 0y101 >> $proc & 11 & ($ip))  { test_statement(0x1A5B); }
$error$
$end$
3369
 if (@rsp + @rdi >> @rax >> @rsi | @rsi << @rbp >> +-0x7 & 0y1011 >> @rsp & (@rdx) & 0n15(+@rsp + 0y1110)  { test_statement(0x4B9);  This is a not opened comment */  for (val = 10; (@rsp) < @r12 | @r10 | @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
3370
 if (@rdx & @rsp << 0y10011 >> $teb >> @r13 & $teb | @r12 << ($teb) & @r12 & @rdx & $ip ^ @r10 & @r13 ^ $thread & @rbx ^ @r13 ^ @rax <> @rdx & @rsp << 0y10011 >> $teb >> @r13 & $teb | @r12 << ($teb) & @r12 & @rdx & $ip ^ @r10 & @r13 ^ $thread & @rbx ^ @r13 ^ @rax)  { test_statement(0x12C3); } elsif ((@rbp) << $ip ^ @r10))(@rbp) << $ip ^ @r10) { test_statement(0x1BEC); ; }
$error$
$end$
3371
 if (1 + @r12 << @rdx << +@rsi ^ @rsi << @rbx <= 1 + @r12 << @rdx << +@rsi ^ @rsi << @rbx)  { test_statement(0x1ED5);  This is a not opened comment */  /* This is a not closed comment @rax = @rdi ^ $thread ; } elsif (@rsi >> @rsi >> -$thread & @rdi >> @r11 & @r13 & $ip ^ $proc & @r9 & @r12)@rsi >> @rsi >> -$thread & @rdi >> @r11 & @r13 & $ip ^ $proc & @r9 & @r12) { test_statement(0x109B); ; } else { test_statement(0x9B4); }
$error$
$end$
3372
 if (@rbx + $teb << @r13 << @rdx @r10 >> @r11 << $thread)  { test_statement(0xF4);  /* This is a not closed comment }
$error$
$end$
3373
 if (@rsp << @rbp << @r12 & ~$proc >> ~0n7 >> @r13 & @r10 >> @rdi & 0n11 & $proc ^ 0y1101 << @r12 >> 17 >> @rbx | 0x3 ^ 0x7 ^ $ip | 0n11 ^ $thread | @r10 & ~@r13 | $proc ^ $ip ! @rsp << @rbp << @r12 & ~$proc >> ~0n7 >> @r13 & @r10 >> @rdi & 0n11 & $proc ^ 0y1101 << @r12 >> 17 >> @rbx | 0x3 ^ 0x7 ^ $ip | 0n11 ^ $thread | @r10 & ~@r13 | $proc ^ $ip)  { test_statement(0x8DE);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp > @r9) ; } elsif (@rbx << @r9 >> @r12 >> @rbp | 22 >> @rbp & @rdi & $thread ^ @r12 <= @r8 & $proc & ~+0xF ^ @r12 & 0y101 ^ @rsi ^ $proc ^ $teb) { test_statement(0xC7A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ^ 0n7 | +2 <> 0y1011 ^ 0x1) ;  /* This is a not closed comment } elsif (@rax | @rsi & $thread ^ @r9 ^ -+@r12((0x12 & @rdx & @r8 ^ 0y110 | $proc & @rdi) { test_statement(0x1BAB); } elsif (0n15 & @rsi | +0y1111 | 0n9 | ~$proc = 14 & $proc ^ $buffer ^ +@r8 | $ip) { test_statement(0x1200);  break;  break; }
$error$
$end$
3374
 if (@r10 + +-@r11 << $buffer << 0n6 >> @rdi << (-0n17) ! @rax << +@rdi | 0xF ^ @rbp >> +@rbx ^ -$teb | (@r8) ^ @rax ^ @r8 ^ 14)  { test_statement(0x1402);  break; }
$error$
$end$
3375
 if (~@rsi + @rbx << @rdx << @r11 >> 16 << @r12 & @rsp >= $thread >> $proc << @rbx >> 0y10011 >> @r13 ^ @r13 << @r13 >> @r8 >> $proc & @r8 ^ +@rsp | (@rsi) << @rax & @r10 ^ ~@r10 >> @r13 & +@r8 & ~~@rax | @rdi & @rbp ^ @r8)  { test_statement(0x2B7); } else { test_statement(0x8C7); }
$error$
$end$
3376
 if (@r9 + @r10 << $thread << $teb | @rax << @r8 >> $proc >> 0y1101 | @rsi >> @rbx & @r9(@rdx ^ 0n0 << @rsi >> 0x8 ^ @rdx >> ~-@r9 ^ @r10 & ~@r12)  { test_statement(0x1B25);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx | $proc ^ @rdi @rbx | $proc ^ @rdi) ; val = ~0n2 & @rbp ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 23 | @rbx < 23 | @rbx) ;  while  (@rbp ! ($teb))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13((@r9) ;  for (; @r10 > @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  /* This is a comment */ }
$error$
$end$
3377
 if (@rdi + @rbp << 15 << @r13 >> 0y1110 << @r11 ^ @r11 << ($buffer) >> @r8 >> @r11 & $buffer >> ~@rsi & -15 & (+12) < @rsi & @rdx >> @rbp >> $buffer)  { test_statement(0x1572);  /* This is a comment */  This is a not opened comment */ }
$error$
$end$
3378
 if (@r13 + $teb >> @rax << $thread ^ 0x7 & @rdi <= @r11 << 0n16 << 0n14 >> 0n12 >> $thread)  { test_statement(0xC3F);  break; } elsif (@r10 << @r12 >> $buffer | @rbx & @rbp & -21 | @rsp ^ 0n0 ^ @rbp)@r10 << @r12 >> $buffer | @rbx & @rbp & -21 | @rsp ^ 0n0 ^ @rbp) { test_statement(0x1AFB); } elsif (@rsp >> @rdi & @rsi & $ip | -0y1 & @rbp ^ (@rbp) ^ @rsp > 0y1000 & $teb & @r11 ^ @rbp ^ @r13) { test_statement(0xE62); }
$error$
$end$
3379
 if (0y10000 & @rsp << @rdi & $buffer = $ip & @r11 ^ ~$proc >> 10 >> $ip | -@rbp & 0xC ^ 11 >> @r11 ^ @rdx & @rdi | $teb)  { test_statement(0x265E);  if (@rbp($proc | 0n5)  { test_statement(0xC81); } else { test_statement(0x59D); } ;  // /* This is a comment   This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi ; @rdi) ; } else { test_statement(0x23AD); }
$error$
$end$
3380
 if (@rdx + @rax >> @rdi << @r9 >> 0y1 >> $buffer ^ 0 << @r11 & @r9 < ~$ip + @rax << +@rbx << @r9 & @r11 >> @rdi | $teb ^ ~@r8 & $ip & 6 ^ @rsp & 0x9)  { test_statement(0x1E02);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb == $teb) ; @rax = $buffer | @rax ^ $teb | @rbx | @rdi ; }
$error$
$end$
3381
 if ($buffer >> @r11 >> $teb >> @r8 & @r12 << 0y1111 = @rsi >> 10)  { test_statement(0x1846); } elsif (@r8 << @rdi & @r13 | @rdi >> @rax(@r8 << @rdi & @r13 | @rdi >> @rax) { test_statement(0x20F9);  while  (+@rax ^ +@rbp | $ip ! @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1359);  while  ($teb > 0n18 ^ 0x13 | 0xE | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rax | @rdi < @rsi | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; $buffer > $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
3382
 if ($thread + $proc >> $thread << @rsi | -0n9 << @rbx >> @r9 >> $teb & 0n11 ^ @rdi | 0n3 >> 0n17 ^ @rbp ; $thread + $proc >> $thread << @rsi | -0n9 << @rbx >> @r9 >> $teb & 0n11 ^ @rdi | 0n3 >> 0n17 ^ @rbp)  { test_statement(0x1549); @rax = @rbp & @rbp ^ @r10 & @rdx ^ $ip ^ @rbp ;  while  (21 ^ +@rbp | @r12 < 21 ^ +@rbp | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1FB1);  while  (0y1111 ^ @r11 | -@r12 == 0y1111 ^ @r11 | -@r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = 0n2 ^ +0y1001 ; }
$error$
$end$
3383
 if (@r8 + @rdi << 0x7 & @rbp >> 0n18 >> $ip & 14 & ~0n7 & @rbp ^ +@r9 >> $proc >> ($ip) & @r13 >> @r10 & @r11 | @rbx ; @rax + @rax << $teb & @rsi << $buffer >> 0n11 ^ @r13 << $ip >> (@rsp) ^ @rbx >> @r9 & 0n2)  { test_statement(0x1397);  /* This is a comment */ } elsif ($ip >= @rbp >> ~@r8 & -(0n5) & -@rbx | @rsp & 0x2 ^ $proc) { test_statement(0x2172); } elsif (@r10 & @rsi ^ 0x0)@r10 & @rsi ^ 0x0) { test_statement(0x12CE);  break; } elsif (0n16 & $teb <> $ip & $ip ^ ~$proc | ~$ip | 0x8 | ~0n9) { test_statement(0x11CC);  // /* This is a comment  } elsif ($buffer ^ $teb))@rax ^ @rsi) { test_statement(0x1604); } elsif (@rax | @r10))@rax | @r10) { test_statement(0x2700); } elsif (-$buffer >< -$buffer) { test_statement(0xD0B);  while  (($buffer) > ~@rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r12 ; @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3384
 if (@r8 + ~@rbp << 2 & @rax >> @r13 & 0y1010 >< @rsp ^ -0n13 ^ @rsi >> $thread & @r10 ^ -4)  { test_statement(0x193A);  This is a not opened comment */ } elsif (@rdi))$ip << @r10 >> $buffer ^ @rdx >> @rdi) { test_statement(0x25C6); } elsif (@r10 & @rsi & @r12 ^ @rdx & $buffer | $teb))~+~0y100 | +@r13 ^ 0x6 ^ $buffer) { test_statement(0x3E2); } elsif (0y10000 & 0xA == @rax ^ $buffer) { test_statement(0x158D); }
$error$
$end$
3385
 if (0xC | @rax >> +~$buffer >> $buffer | @r8 & $thread & @rsi | $thread & @rsi | @r8 ^ +@r10 == 0xC | @rax >> +~$buffer >> $buffer | @r8 & $thread & @rsi | $thread & @rsi | @r8 ^ +@r10)  { test_statement(0x1CD1); } else { test_statement(0x268); }
$error$
$end$
3386
 if ($ip << @rsp << @r8 ^ @rax >= $thread & ~@r12 ^ 0n2 << 0y1111 & (@r12) & @rbp & @rdi ^ $ip >> $proc | @rsp >> @rbx >> $ip & @r12 & @r9 & ~@r9 | @rbx)  { test_statement(0x26E0);  /* This is a comment */ } else { test_statement(0x2287);  while  (6 ^ @r10 | -@r8 | @rax < @r13 ^ $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3387
 if ($buffer + 0x5 & $buffer >> -$teb | $proc | (@rdx) >> ~@r12 ^ 0n2 & $ip ^ $thread <> 1 + @r11 ^ @rsi & $buffer >> @r12)  { test_statement(0xA30);  if ($buffer((@r12 & @r12 | @rbp | ~@r12)  { test_statement(0x11BB); } elsif (@rax ^ $teb | @r13 == $teb ^ 0n12 | -$thread | @rsi) { test_statement(0x2233); } elsif ($proc >< $teb) { test_statement(0x776); }  while  (@rsi($ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($buffer != 20 | @rdi)  { test_statement(0x259E); } else { test_statement(0x6D4); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 != @r13) ; } elsif (21 << ($buffer) >> 0y1010 >> ~0x9 & -$teb >> @rsp)21 << ($buffer) >> 0y1010 >> ~0x9 & -$teb >> @rsp) { test_statement(0x1AC9); }
$error$
$end$
3388
 if (@rdx + @r12 << @r12 >> @r9 >> @r12 ^ @rax & (@rsp) & $buffer & +@rbp ^ @r12 >> @rsp <= 0y101 + @rdx << @rsp & @rdx << @rbp & (@r13) & ~@rbx & @r13)  { test_statement(0x2219);  This is a not opened comment */ } else { test_statement(0x7D4); }
$error$
$end$
3389
 if (@r13 >> @rsp >> @rsp >> 0y1011 & @rbp & @rdi >> ~0x5 ^ @r8 ^ @rsp ^ @rsi & 0x6 <> @r11 + (-@r8) << ~~@rdi << @rdi >> (+~(~@r10)) >> $thread >> 0y10 | @rdx << 21 >> @r10 >> $proc)  { test_statement(0x18D2); val = @rbp >> @rax | ~@r10 & @r12 ; } elsif ($thread & @rsi >> @rsi)$thread & @rsi >> @rsi) { test_statement(0xF66); } else { test_statement(0x4B6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc ^ +@rsp | @r10 <= @r9 ^ @r13) ; }
$error$
$end$
3390
 if ($ip + $buffer << -@rsp << @rbx ^ 0x8 >> ~0x3 >< $ip + $buffer << -@rsp << @rbx ^ 0x8 >> ~0x3)  { test_statement(0x2468); } else { test_statement(0xA6D); }
$error$
$end$
3391
 if (@r11 >> $teb << @rbx >> @r9 & @r9 >> @rdi >> @r13 & @rsi & @rbp & $thread ^ @r10 & $ip & $thread & 0x8 ^ 0n16 = @rax + ~$thread | @rax >> @rsp >> (@r8) | @rax)  { test_statement(0x1794); } else { test_statement(0x965); }
$error$
$end$
3392
 if (+@rbp + 0n16 >> 0y0 << ($teb) >> @r8 >> $teb ^ @rsi >> $thread >> +@r12 & -~@rdx >> @rsp ^ @r11 <= 6 >> ~$ip << @r13 & -+@r8 & $proc >> $teb)  { test_statement(0xADA); } elsif (@rax << 0xC >> ~@rbp | (@rax) >> -$teb & @r12 ^ @r11 & @r8 | @rbp ^ @rdx | +@rax ; $buffer << 0n6 & $buffer >> @rbp | +@rdx >> $proc | @rbx & @r13 ^ @r9) { test_statement(0x1D68);  This is a not opened comment */ } elsif (@rdx >> 0y1100 ^ $ip | @r12 ^ $thread @rdx >> 0y1100 ^ $ip | @r12 ^ $thread) { test_statement(0x1CCE);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread > ($ip)) ;  /* This is a not closed comment } elsif (0x7 & @rsi ^ $thread ^ @r11 | +(@r10) != @rbp & 0y1) { test_statement(0xEA5); @rax = @rbp | @r10 ; } else { test_statement(0x1BC9); }
$error$
$end$
3393
 if (-@rax + $buffer & @r11 << @rdi | @r8 << @r10 & 0y1110((-@rdx & $proc >> @r10 >> 5 & 0y11 >> -@rsi & @rsp ^ @rbp & 0y101 >> @rdi & $teb ^ @r10 ^ 17 ^ $proc ^ ~0n16)  { test_statement(0x1D80);  while  (--@r8 ^ @rdi | @r8 | $buffer | @rbp > $proc & $buffer ^ 0y1000 | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r9 ^ @r12 | 0y110 == @rdi ^ 0xF | @r13 | @r12)  { test_statement(0xF6E); } elsif (@rdx | $thread = $teb | $proc) { test_statement(0x6D4); } else { test_statement(0xFCE); }  /* This is a comment */ }
$error$
$end$
3394
 if (@rsi + $proc << $thread << $thread >> $teb << 0n0 ^ $proc << 0x13 & $buffer >> (5) ^ 21 >< @rbp + +$teb << @rsi << 0x7 & 0y11 << @rsi & @r11 >> $thread & @rax & $buffer | @r13 << @rbp >> @r11 & @rax >> @rsi & @rdi ^ @r11 & @rbx)  { test_statement(0x20A);  // /* This is a comment   while  (0xE ^ 23 | @rdx = $thread ^ @rax | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif (@r9 << $teb >> @rsp >> (@r9) & @r9 >> @r13 ^ @rax ^ @r10 ^ $ip(@rsi & $teb ^ @r10 >> @r10 ^ -@rdi ^ @r8 ^ @rsp | ~0y1011 >> @r10 & ($ip) & @r10) { test_statement(0x599); } else { test_statement(0x1598);  /* This is a not closed comment }
$error$
$end$
3395
 if (@r11 + $proc >> $proc >> @r10 | @r13 << $ip ^ @r13 >> @r8 & $ip ^ $ip | @r9 >> $thread ^ 0y10001 <> @r11 + $proc >> $proc >> @r10 | @r13 << $ip ^ @r13 >> @r8 & $ip ^ $ip | @r9 >> $thread ^ 0y10001)  { test_statement(0x13C2);  /* This is a not closed comment }
$error$
$end$
3396
 if (+-@rsp + @rsp << ($proc) & @r13 >> @rsp ^ $ip | 0x3 << @r11 >> $teb >> @rdx & ($proc) ^ 20 ; +-@rsp + @rsp << ($proc) & @r13 >> @rsp ^ $ip | 0x3 << @r11 >> $teb >> @rdx & ($proc) ^ 20)  { test_statement(0x1F0C); } else { test_statement(0x226A); }
$error$
$end$
3397
 if (@r9 + @rdx << @r9 >> $proc >> @r8 ^ 0n6 << @r9 >> @rbp & $thread >> @r11 ^ 0n18 >> 0n16 != @r9 + @rdx << @r9 >> $proc >> @r8 ^ 0n6 << @r9 >> @rbp & $thread >> @r11 ^ 0n18 >> 0n16)  { test_statement(0xF48); } elsif ($thread >> @r12 >> @rsp ^ @rbp | +@rdx >> $proc & @rdi & @r13 | @r10 | $teb ! @r9 << @r8 >> @r10 >> $ip & 0y10011 >> @r9) { test_statement(0x13D3); val = @r12 ^ @rdi | ~$buffer | @r10 | @rbp ; } else { test_statement(0x2107); }
$error$
$end$
3398
 if (~$teb + $thread << +$buffer >> 0y11 << @rdi & ~@rbp >> $buffer >> @r13 & $teb | -$teb << @rbx ^ 0y1011 >> @r10 ; @rbx ^ 0y101 << 0x1 >> $teb ^ @r11 | (@r11) << 0x8)  { test_statement(0xFEA);  /* This is a comment */ } elsif (@rsp ^ @rbp >> @rdi & @rdi & 0y1110 ^ $ip ^ @r10 ^ 0n19 | @r8 >< @rsp << @rax | @r8 ^ @rsp | @r11 & @rsp) { test_statement(0x13C9);  // /* This is a comment  }
$error$
$end$
3399
 if (@r10 >> $thread << $teb & @rsp << @r9 & @rdi >> @rbp ^ @rbx << @rdx & 0x2 ^ @rdx >> $buffer ^ @rbp ^ @rdx ^ @r12 > @rbx + 0x12 >> @rsp << 15 >> @rsp >> @rbp | @r10 << (@rsi) >> $teb >> -$thread)  { test_statement(0x1FEC);  if (0n16 & @rbp | ($thread) ^ $ip != @r13)  { test_statement(0x21A9); } else { test_statement(0x1C0F); } }
$error$
$end$
3400
 if (@r9 + $buffer | @rax << ~@r11 >> @rax >> @r13 & 0x10 >> 0xC & ++@rsp & @rsp | @r9 >> @r12 | @rbp > @rsi + @rax >> (@r8) << $ip & 0x6 >> @rax >> 0n1)  { test_statement(0x26E5);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip & (@rbx) ^ @rsp ^ @rsp | ~@rbx ^ @rdx | @r10))@r13 ^ @rdi | @r8 | @r8 | @rax) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rsi < -@rsi) ; } else { test_statement(0x12FD);  if (@r11 = ~$ip ^ $ip | 22 | @r9)  { test_statement(0x9E1); } }
$error$
$end$
3401
 if ($teb >> $proc ^ @rax ^ ~(@rdx) >> (@r12) & @r10 ^ 0x2 ^ $thread >= @rdi & @r8 >> @r8 >> @rbp)  { test_statement(0xD4E);  /* This is a comment */  while  (@r8(@rbx ^ @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3402
 if (7 + $ip << 7 & @r12 & $thread & (0x8) | $buffer << @rdi >> 0y1001 & @rbp & @r8 & 0y10 ^ 0y11 ^ @r12 & 0y10000 ^ @rbx | (@r9) >> ((@r10)) & -+@rax & @r11 | $ip ^ ~0n18 0x13 << @rdx >> @rsp << 14 & @r8 >> $teb ^ @rbx << @r13 & 0y1101 & ($ip) & $teb)  { test_statement(0xF61);  for (val = 10; @r9 ^ 11 ^ 4 @r9 ^ 11 ^ 4;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3403
 if (@rsp >> $proc >> @rsi ^ @rbp << @r12 >> 0y1 & @r11 == @rsp >> $proc >> @rsi ^ @rbp << @r12 >> 0y1 & @r11)  { test_statement(0x1F72); } else { test_statement(0x18FA); }
$error$
$end$
3404
 if (0y1110 << @r11 >> @rdi << @rsi & @rdi ^ @r9 >> +@rbx | 0x5 << @rbp | 0y0 >> @r9 0y1110 << @r11 >> @rdi << @rsi & @rdi ^ @r9 >> +@rbx | 0x5 << @rbp | 0y0 >> @r9)  { test_statement(0x2161); } elsif (@r12 >> (@rsp) >> @rbx)@rdx << $proc) { test_statement(0xA73); }
$error$
$end$
3405
 if (@rbp + 11 >> @r11 << $proc & $ip ^ @r11 & $buffer & @rdx ^ @rdi | @rdx >> 0x12 >> -$ip & 0n15 >> @r8 & 0y1011 & +@rbp != $thread << @rdx)  { test_statement(0x1175);  if (@rax == @r11 ^ @rsp)  { test_statement(0x1EBF); } else { test_statement(0x23A8); }  for (val = 10; @r13 ^ $buffer | $proc | @r8 $teb ^ 0y110 | ($proc) | $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif ($proc >> @rdi & @rax & (@r8) ^ $ip >> @r13 <= 0n18 << 0n15 ^ @rbx & @rdx & $buffer ^ @r13 ^ @rsp ^ @r9) { test_statement(0x1F1D);  break;  // /* This is a comment  } else { test_statement(0x918);  // /* This is a comment   if (@rbp))@r10)  { test_statement(0x15F6); } else { test_statement(0x2486); } }
$error$
$end$
3406
 if ($buffer << 0y1 << $buffer >> @rsp << $buffer >> 0n10 < @rax ^ @r10 ^ $teb >> $ip)  { test_statement(0x72D);  // /* This is a comment  ; } else { test_statement(0x1FA0);  // /* This is a comment   This is a not opened comment */  // /* This is a comment  }
$error$
$end$
3407
 if ((0y10000) >> ~$buffer | $ip << 0n9 >> @rsp >> 0x8 >< @r12 + @rsi << @rbx)  { test_statement(0x1A4D); } else { test_statement(0x1B4);  break; }
$error$
$end$
3408
 if (@rdx << @rax << @rdx | 0y10001 << @rdx ^ @r8 >> @rsi & $proc & ~0n10 ^ @rax ^ @rsp | $thread & @rbp ^ $teb ^ $teb ^ @r11 != $proc >> @rbp & @r11 << @r9 >> 0y101 >> @rdx & (0xA) & $ip & ~0x3 ^ 0y10000 << @r13 & @rsi)  { test_statement(0x20B4); } elsif (@rax << $thread != @r10 | @rdi >> 15 & 0n6 | @rbp ^ $teb | $teb) { test_statement(0x212D); } else { test_statement(0x182C);  if (@rsp ^ 0y10000 | 0y10001 @rsp ^ 0y10000 | 0y10001)  { test_statement(0x1A8D); } @rax = 21 ^ @rbp | @rdx | @r13 ; }
$error$
$end$
3409
 if (0x0 >> 0n9 << ($thread) ! $thread + 0n10 >> @rsi & $proc & @r12 & @rsp & 17 | @rbp << ~@r12 >> @rsi & @r8 & ~@rbp & 0n6 ^ @r13)  { test_statement(0x1E53);  if ($proc | $buffer @rsi & @r13 ^ @rbp ^ 0n13 | @r13)  { test_statement(0x270); } else { test_statement(0x11F8); } } elsif (@rbx >> ~$teb ^ @r11 >> @r13 (@r11) << $proc & (@rax) & $proc & 0y1000 ^ @rdi & @r12 & @rbp ^ @r11 | @rbp >> $teb & @rbx) { test_statement(0x1274); } else { test_statement(0x1B82); ; }
$error$
$end$
3410
 if (@rbx != 0y1 + @rsp << 0x7 >> @rsi >> @r9)  { test_statement(0x1EE7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y10001 & @rbp < 0n1 ^ @rbx ^ @rdi) ; } elsif ((@r12) << +@r8 & $proc ^ @rax ^ 0x8 ^ ~$teb > $thread | @r12 >> @r12 & ~$ip & @rbx ^ @r12 & @r8 ^ $thread ^ +0y1) { test_statement(0x1A79); }
$error$
$end$
3411
 if (@rsp >> 0n18 << $proc >> @rsi & @rsp & @r12 >> $ip @rsp >> 0n18 << $proc >> @rsi & @rsp & @r12 >> $ip)  { test_statement(0x1252);  /* This is a comment */ } elsif (0n1 >> @r13 >> +$buffer ^ @r9 & @r13 | @rax ^ @r8 & $ip))0n1 >> @r13 >> +$buffer ^ @r9 & @r13 | @rax ^ @r8 & $ip) { test_statement(0x1903); } elsif (0x2 >> 0xB & (0n8) & @r8 <> @rbp >> 17) { test_statement(0x1A66);  /* This is a comment */ } elsif (($buffer) & -0n1 | @r12 | +@rsi | 0n12 ; 0y10011 ^ (@r13) | @r12 ^ @r12) { test_statement(0x1CE);  /* This is a not closed comment  for (val = 10; @r9 ; $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc($proc) ; }
$error$
$end$
3412
 if (0y10011 + $thread << ~@r10 << ++(@r13) >> 3 | $proc >> @r12 & @r12 >> @rbx & @r9 ^ @rax & 0y1010 & @r11 | @r13 >> ~$proc ^ @r8 & $thread >= @rax >> $buffer >> @rax)  { test_statement(0x44C);  for (val = 10; @rdi ^ @r11((@rbx ^ @r9 | +@r8 | @r12 | $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rdx ^ (@r12) >= 0x12 ^ $teb | $ip)  { test_statement(0x12CF); } elsif (@rbx | $buffer != @rdx) { test_statement(0x101C); } elsif (@r8 >< @r8) { test_statement(0x22E8); } elsif ($teb < @rax) { test_statement(0x1F96); } elsif (@r8 = $thread) { test_statement(0x1D82); } else { test_statement(0x1D87); }  while  (0x4))$ip | 0n14)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3413
 if (@rsp << ~@rsi & (@rdi) << $proc & ($thread) >> @r8 ^ @rdi << $thread >> (+-@r12) | @r11 = $thread << @rdi << @rbx >> @r12 & @rdx >> $thread >> @rbp & (@rax) & @r11 | (@rax) >> 0x3)  { test_statement(0x1095);  while  (@r10 ^ @r11 ^ @r9 ! (17) & @r13 ^ $thread | $proc ^ ~@rdx | @rax | -$proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3414
 if (@r8 + @r10 << 0y1 & @rbp >> @r10 | $proc >> $thread >> 14 ; 0y1 + $thread >> @rsp << @r10)  { test_statement(0x1540);  /* This is a comment */ } elsif (@rsp << @rdx >> ~10 == @rbp << @r9 >> 2 ^ @r10 >> @rsp & @r11 & @r8) { test_statement(0xC4C); } elsif (@rbp))@r12 & $proc | ~@rsi & @rbx) { test_statement(0x589); @rax = $teb ;  while  (@rsi)@rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx & $thread | ~+$ip ^ @r12 | @r9))~0x7 & @r12) { test_statement(0x1FC3); }
$error$
$end$
3415
 if (0n0 + 3 << (5) << @rdi >> +@r12 >> @r12 | @rbx << ~@rsp >> @rdx >> $thread | ~($ip) & @rdi & @rsi | @rdi ^ 0n2 | 0n6 >< @r11 << $ip)  { test_statement(0x16EB);  while  (@r10 @r9 & @r10 | @rbx ^ $buffer | @r9 | -@r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @r11 & $buffer ^ @rbp ^ 0n8 ;  This is a not opened comment */ } else { test_statement(0x1D43);  // /* This is a comment   /* This is a comment */  while  (@rsp <> @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3416
 if (@rsp << @r8 << -@r13 ^ @r13 << @r11 >> @r13 ^ @rax <= $ip >> @rbx << @rdx >> @rdi >> @r10 | @rsi << (@rdx) | $ip >> +@rax & $buffer ^ @rbx ^ $ip | @r12 ^ $teb ^ @r11)  { test_statement(0x1EC0); }
$error$
$end$
3417
 if ($proc + @r13 >> ($buffer) >> @rdx & (0y0) << $ip | @r9 << @r10 & @r13 >> $ip & ~$teb & @rsp ^ @r12 >> +0n6 ; +@r13 + $thread << @r12 & @rsi >> @r12 >> @r11 & 0n6 >> 0x12 | (+0y101) | @r8 & 0n1 & $buffer | $thread & 0y10 ^ @r12)  { test_statement(0x1A0C);  if (@rax | $buffer | 21 == @rax | $buffer | 21)  { test_statement(0x18AF); } else { test_statement(0xD4F); }  This is a not opened comment */ }
$error$
$end$
3418
 if (@r13 >> -@rsi << $proc & @rbp ^ $proc << 0xD & @r9 >> (-$teb) & $proc & 12 ^ @r12 | $proc & @rbp & @rsp(@r13 >> -@rsi << $proc & @rbp ^ $proc << 0xD & @r9 >> (-$teb) & $proc & 12 ^ @r12 | $proc & @rbp & @rsp)  { test_statement(0x17B2); val = @r9 & @r11 ;  /* This is a not closed comment  while  (~@r12))0n4 | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x1909);  This is a not opened comment */ }
$error$
$end$
3419
 if (@rax ^ 0x7 << $proc | $ip << @rdi & @rbp >> @rdx ^ @r12 >> @rsp ^ @r10 ^ $proc ^ 0y1100 | $thread >> ~($proc) | @rsp & @r11)-@rdi >> @r8 ^ 11 & @rbp >> 0y1110 & ~@rdi & 0x2)  { test_statement(0x99D); } elsif ($ip << +@r12 >> @rdi >> @rbp & @r13 & @rdx)$ip << +@r12 >> @rdi >> @rbp & @r13 & @rdx) { test_statement(0x26A2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 3 ^ @rax)3 ^ @rax) ; } else { test_statement(0x270C);  while  (@rdi > @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3420
 if ($ip << 0n14 >> $ip ^ @rax << @rax & @r13 & 0n12 & @rax ^ @rsi >> +~$ip & 0x3 & @r9 ^ @rbp | +@rbx << $ip | 0y1 ^ (@r11) ^ @rdx | $teb & +@r11 >< $ip << 0n14 >> $ip ^ @rax << @rax & @r13 & 0n12 & @rax ^ @rsi >> +~$ip & 0x3 & @r9 ^ @rbp | +@rbx << $ip | 0y1 ^ (@r11) ^ @rdx | $teb & +@r11)  { test_statement(0x150E); } else { test_statement(0x3AC);  /* This is a comment */ ;  This is a not opened comment */  if (@rdx != @rdx)  { test_statement(0x16C1); } elsif (@r13 >= @r13) { test_statement(0x1D50); } else { test_statement(0x24B7); } }
$error$
$end$
3421
 if (@rsi >> @r12 ; @rsi >> @r12)  { test_statement(0xFAA);  /* This is a comment */ } elsif (2 << @r12 >> $teb & @rsp >> $teb & $proc >< 2 << @r12 >> $teb & @rsp >> $teb & $proc) { test_statement(0x2634);  /* This is a not closed comment  for (val = ($buffer) | @rax; @r13 > -0y1010;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@rsp ^ @rdi & @rsi ^ +@rdi ^ @rdx ! @rsi >> @r13 ^ $buffer & @rbp | $ip | $buffer | @r11 | @rax) { test_statement(0x241C);  for (val = 10; $ip | @rsp @r8 | $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y10 & @rdi ^ +@r8 | 0xF ^ +@r10 > @r12 & 0n9) { test_statement(0x1BDE);  /* This is a not closed comment } else { test_statement(0xA5C); }
$error$
$end$
3422
 if ($teb + @r13 << @rdi | @rsi >> +@rdi >> @r12 | 0y10011 >> @rbp & @r11 ^ @rdi ^ @rbp | (@r11) == $teb + @r13 << @rdi | @rsi >> +@rdi >> @r12 | 0y10011 >> @rbp & @r11 ^ @rdi ^ @rbp | (@r11))  { test_statement(0xCFB); } elsif (@r9 << 0n13 >> @r9 >> @r10 & @r12 & $thread ^ @rdx >> $proc & @rax & @rbx ^ @r8 & 0n19 ^ @r8 ^ ~0x10 10 & $buffer ^ @r8 >> @rbx ^ @r10 ^ @r11 ^ @rsp | @rbx >> @r10 & @r11) { test_statement(0x21D2);  if ($buffer $buffer)  { test_statement(0x1572); } elsif (@r8 | @r13 ; @r8 | @r13) { test_statement(0x845); } else { test_statement(0x1B26); }  /* This is a not closed comment } else { test_statement(0x18F8);  if (0n12 ^ ~@rbx <= $buffer ^ @rdi | @r8)  { test_statement(0x25CD); } elsif (0n13 @r13 | @r13) { test_statement(0x1707); } else { test_statement(0x8F); } }
$error$
$end$
3423
 if (@r13 << @rbx << @rbp >> -13 >> @rsp >> $ip ^ @r9 << 0n0 ^ 3 ^ @r13 ^ @rax ^ 0n15 > $teb << 0x3 >> @rsi << @r13 >> @rsi >> $buffer & @r8)  { test_statement(0x2696); }
$error$
$end$
3424
 if (+0n4 + @rdx >> $teb << 0xA >> @rbp >> @rbx ^ $ip >> @r11 | @rax | @r12 & $thread & ~$teb | @rbp ^ @r12 ^ $thread ; +0n4 + @rdx >> $teb << 0xA >> @rbp >> @rbx ^ $ip >> @r11 | @rax | @r12 & $thread & ~$teb | @rbp ^ @r12 ^ $thread)  { test_statement(0x2283);  This is a not opened comment */  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 > @r8) ; } else { test_statement(0x5FD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 | $teb | @rdx <= $ip | $ip) ;  if (@r13 < ~+-0y110 | @r12)  { test_statement(0x12FA); } elsif (~14 < 16) { test_statement(0x8A); } else { test_statement(0x17AF); } val = @rdx ; }
$error$
$end$
3425
 if (0y101 + @r13 = ($thread) << $proc << @rbp >> $teb << @rsp >> 0n0 & @rbp << 0x6 & @r13 & 0y111 | 0n3 << @r9 >> 10 >> $teb | @rsp ^ 0x10 ^ +@r11 ^ @rbp)  { test_statement(0xA38); } elsif (12 << @rdi ^ @r8 ^ $thread & $teb | $proc >> @rbp & +0n0 | @r9 & -@r12 ^ $thread ^ @r8 >= 12 << @rdi ^ @r8 ^ $thread & $teb | $proc >> @rbp & +0n0 | @r9 & -@r12 ^ $thread ^ @r8) { test_statement(0x24EE); } elsif (@rbx <= @rsp ^ @rbp & @rbx ^ @r13 ^ ~@rbp | 0x12 & @r10 ^ @rbx ^ 1) { test_statement(0x210A);  if (@rbx | @r12))@rbx | @r12)  { test_statement(0xFF4); }  for (val = @r9; ~@rbp ! @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (-~@rdx & $thread ^ 7 -~@rdx & $thread ^ 7) { test_statement(0x59C); } else { test_statement(0x185); }
$error$
$end$
3426
 if (0y1011 + @r9 | @r12 << @rsi ^ @rdx >> @rbp((0n2 + $teb << 0n6 << 0n7 ^ $buffer >> @rsp >> -0x7)  { test_statement(0xB74); } elsif (@rsp))@r13 << +@rbp & $ip | +$ip >> @rsp | (@r11) & @rdx ^ 0n15 | @r10 ^ ~@r8 | @rbp) { test_statement(0x1171); } else { test_statement(0x2440);  /* This is a not closed comment val = @r8 ^ @r9 | @rsi ; }
$error$
$end$
3427
 if (14 >> @r8 >> @rsi >= (@rsi) + @rbx ^ $teb << @r9 & @rbx & $teb ^ -$teb)  { test_statement(0x13B4);  /* This is a not closed comment } elsif (0n6 << (+0x3) & -@rax & $proc & 0n11 <= 0n6 << (+0x3) & -@rax & $proc & 0n11) { test_statement(0x1AF1);  // /* This is a comment   for (val = 10; @rdx | @rbp ! 0y11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx == @rdx) ;  while  (0n7((0xD)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 >> 0n10 ^ 16 & 0y111 ^ @r12 | 0xE >< 0y1011 >> 0xA & @rsp & 13 | 0x2 & $thread) { test_statement(0xB5); } else { test_statement(0x1168); ; }
$error$
$end$
3428
 if ((@rbx) + 0x5 << @r13 << @r9 >> @r9 << +@r11 | 15 >> ~-@rax >> 0x13 & 0x8 >> @r10 | (0y1100) >> 0n3 & @rsp | $thread)(@rbx) + 0x5 << @r13 << @r9 >> @r9 << +@r11 | 15 >> ~-@rax >> 0x13 & 0x8 >> @r10 | (0y1100) >> 0n3 & @rsp | $thread)  { test_statement(0x374); } elsif (@rbx >> 0y1011 == @rbx >> 0y1011) { test_statement(0x1578); } else { test_statement(0x1571); }
$error$
$end$
3429
 if (@rbp << @r10 >> $proc << ~@r11 >> $thread >> @r13 & @r13 << @rbp >> $ip & $buffer ^ @r9 << @rsi & @r11 & ($teb) ^ $thread ^ @rbx & @rdx > $teb >> @r10 << @r9 >> @r8 ^ @rbp)  { test_statement(0x134E);  while  (@rsi & @r9 == @r13 | 0y100 ^ 0n9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0n5 == @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0y1101))$teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  This is a not opened comment */  /* This is a comment */  /* This is a not closed comment  while  (((~@r9)) < @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~-$proc << @r13 ^ @rdx | $teb >> @r10 | @rdi & @rdi ^ 0n5 < 0n5 << 0n12 & @rdi & 1 & 0y101 ^ @r8 >> @rbp | @rdi & @r13 & @r11 ^ $buffer & (@rdx) ^ $teb ^ ($proc)) { test_statement(0x2232);  break;  for (val = 10; +@rdx < +@rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1B70); }
$error$
$end$
3430
 if (0x3 ^ 0x13 << @rbx | $buffer | $teb | @rdi | 0xF ^ @rbp <> 0x3 ^ 0x13 << @rbx | $buffer | $teb | @rdi | 0xF ^ @rbp)  { test_statement(0x167C);  /* This is a comment */  /* This is a comment */  /* This is a not closed comment } else { test_statement(0x1991); }
$error$
$end$
3431
 if (@r13 + @r10 >> @rax << @r9 >> $proc < @rdx << $buffer & ($proc))  { test_statement(0xAF1); } else { test_statement(0x51F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 | @r8 | @r9))@rdx ^ +0x6 | @r12) ; }
$error$
$end$
3432
 if (+0y1010 + 10 << ~@rdx << @r11 == @rdx & $ip >> @r12 & 0y1010)  { test_statement(0x20B2); } elsif (@r11 << ~@rdx ^ $proc(@r11 << 0n16 ^ @r11 & @r8 & $ip ^ 0n1 ^ @rax | $thread >> 0x10) { test_statement(0xAF9); @rax = @r12 ^ @rdx ^ @rsi | @rsi ^ @r8 | @rdx ; } elsif (@rax >> @r11 >= @r11 >> $proc ^ @rbx & @r10 ^ @rax ^ (15) | 0x2 & @r10 ^ @rsp) { test_statement(0x2C2); } elsif ($ip & $ip(0n12) { test_statement(0x14B8); } elsif (@rbx | @r9 >< @rbx | @r9) { test_statement(0x2C); @rax = $buffer ;  while  (0x6((0y1)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rsp)@rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx | -$proc > @rbx | -$proc) { test_statement(0x4E2);  /* This is a comment */ } elsif (@rbp = @r12) { test_statement(0x43); }
$error$
$end$
3433
 if ($buffer + (@r9) << @r12 << $thread ^ +@r10 ^ (0x8) >> 0y10001 | @r13 << $thread >> @r9 >> @rax ! $buffer + (@r9) << @r12 << $thread ^ +@r10 ^ (0x8) >> 0y10001 | @r13 << $thread >> @r9 >> @rax)  { test_statement(0x1EB4);  for (; -12 ^ @r12 | ~@r12 ^ @rdx | $ip | @rax))@rbx | ~@r11 | $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp << @rbx & @rdx >> 12 ^ +@r9 & $proc & @rax == @rsp << @rbx & @rdx >> 12 ^ +@r9 & $proc & @rax) { test_statement(0x2149);  /* This is a not closed comment } elsif (16 >> @rbp ^ -$proc & $buffer | $proc & @r12 ^ 0n7 | 2 | @rsi | @rax <= @r13 & @rsp & @rax | @r9 | @r11 ^ @r10) { test_statement(0x2C9); ; } else { test_statement(0x187F);  break;  if (@r8 | @rbx >< @r8 | @rbx)  { test_statement(0x1147); } else { test_statement(0x1BD1); }  // /* This is a comment  }
$error$
$end$
3434
 if (0x11 + 0y1000 & @rbx & @rsp >> @r12 & @rbx ^ $ip & ($proc) & @r11 & @r10 ^ @rsi ^ 0y100 | +$buffer << @rbx & @rbp >> +@r11 & @r11 | $proc >> $thread & @rbp & @rdi != @rax << $thread << 0y1100 >> ~-+@rax << +$proc & $proc >> @rbp >> @r8 ^ $thread << 0n9 & @r9 ^ 5 >> 0y11 ^ @rdx)  { test_statement(0x2F); } else { test_statement(0xFC8); }
$error$
$end$
3435
 if (~$proc >> @rsi << @r9 >> 0x9 >> @r9 ^ @rsi << @rsp >> @r13 >> (0) & $thread ^ -$proc <= -$proc + $teb << $teb >> @rax << @rsi >> @rsp >> 0x9 & @r9 << @rbx >> @rdx >> @r8)  { test_statement(0x20A1);  This is a not opened comment */ } elsif (@r12 << @rsp >> $buffer >> @r11 & $thread >> ~$proc | @rax >> @r9 & $buffer > @r12 << @rsp >> $buffer >> @r11 & $thread >> ~$proc | @rax >> @r9 & $buffer) { test_statement(0x1F60); } elsif (@rdx >> $buffer & @r11 <= @rsi ^ @rax ^ 0y10010 | $ip & $thread | 0y111) { test_statement(0x1430); val = $thread ^ 0y1001 | ~$teb | @r11 ; }
$error$
$end$
3436
 if (@r8 + @r11 & @r10 <> @rsp + @r13 << $teb << +-@r13 >> @rsp << @r10 & $teb >> @rsp >> @r13 & ~(@r13) >> 0y0 & @rdi ^ @rsi)  { test_statement(0x1687);  if (@r12 | @r13 ^ $ip > @r12 | @r13 ^ $ip)  { test_statement(0xA7); }  for (; 0x2 ! @rsp | ~@rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  This is a not opened comment */  This is a not opened comment */  while  (@rdi(@rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x22E9);  break; }
$error$
$end$
3437
 if (@rbp >> $proc << @r9 >> $thread >> 0n2 ^ (@rsp) << -@rbp((0x1 + 0x7 >> @rbp >> @r11)  { test_statement(0x146D); ; } elsif (@rsp >> ~@r13 & $proc >> 22 ^ @r12 ^ @rbp & @r8 ^ @r10 | 0x7 >> @rdx ^ $teb(@rsp >> ~@r13 & $proc >> 22 ^ @r12 ^ @rbp & @r8 ^ @r10 | 0x7 >> @rdx ^ $teb) { test_statement(0x18CB);  while  ($buffer | @rbp 0x5 | (@r9) | 0xD)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x249); }
$error$
$end$
3438
 if ((@rsp) + ~@r13 << 21 << $teb ^ $ip & ~+@r12 >> @r11 | @r13 & 0y11 >> @rdi ^ 0x7 >= @rsi << @rax >> $thread | +@r8 >> @rdi & $buffer & ~@rax & $buffer ^ @rsi >> @rdi & $ip & @r13)  { test_statement(0x17D6); @rax = @r9 & @rsp ^ ~@r13 & $teb ^ $thread | @r11 & 12 | $ip ^ $thread ; }
$error$
$end$
3439
 if ($teb + @rdx >> $teb << 0n16 & @r8 >> (@r13) >> @rsi & $ip >> @rax & $buffer & 0n18 ^ @r9 << $proc & @r8 >> $thread | +@rsi << +@rbx & $teb & @r13($teb + @rdx >> $teb << 0n16 & @r8 >> (@r13) >> @rsi & $ip >> @rax & $buffer & 0n18 ^ @r9 << $proc & @r8 >> $thread | +@rsi << +@rbx & $teb & @r13)  { test_statement(0x2460); } elsif (@rbp >> @rdx >> @rbp)@rbp >> @rdx >> @rbp) { test_statement(0xEFF); }
$error$
$end$
3440
 if (@r9 >> @rdi))@r9 >> @rdi)  { test_statement(0x16FE); } elsif (@r9 | (~$buffer) & @rsi | @rdi ^ @r12 | $buffer))@r9 | (~$buffer) & @rsi | @rdi ^ @r12 | $buffer) { test_statement(0x1AA1);  // /* This is a comment   break;  if ((@rsi)((@rax)  { test_statement(0xF16); } elsif (@rdx < @r12) { test_statement(0x239F); } }
$error$
$end$
3441
 if (@rax >> -+$buffer | $teb << $proc & $ip >> $buffer & @rbx & $ip | @r9 >> @rdi & @r10 & $proc >< @rax >> -+$buffer | $teb << $proc & $ip >> $buffer & @rbx & $ip | @r9 >> @rdi & @r10 & $proc)  { test_statement(0xA1C); }
$error$
$end$
3442
 if (@rsp >> 23 ^ @r13 >> $proc <= $proc & $proc << @r11 >> $teb | 0n11 << (@rbx) >> +@rax >> @r12 ^ -@rbp | @r8 >> @rax & @rsp ^ @r13 & @rbp | @rbx & +@rsp)  { test_statement(0x2572); ; }
$error$
$end$
3443
 if (0y1010 + @r13 << $ip << @rbx | @r13 & $buffer >> 16 ^ $buffer ^ @r10 & @r11)@r12 + +@rdi ^ @rbx << @r13 >> 14 >> @r10)  { test_statement(0x1B24); val = @r10 & 20 & @rsi ^ ~@rsp ;  /* This is a not closed comment @rax = -@r12 ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax))@r13) ; } elsif ((@rsi) & @rdi ^ 0y1 >> ~$thread & $thread & 0xD | @rbx & -@r8 | @rax ^ -$proc ^ ($buffer) | @rdi | $buffer = (@rsi) & @rdi ^ 0y1 >> ~$thread & $thread & 0xD | @rbx & -@r8 | @rax ^ -$proc ^ ($buffer) | @rdi | $buffer) { test_statement(0x107B);  if (@r11 ^ @rsp ! @r11 ^ @rsp)  { test_statement(0x247F); } elsif (~+@r11 < ~+@r11) { test_statement(0x1952); } } elsif ($teb & ($ip) & @r9 >= $teb & ($ip) & @r9) { test_statement(0x377);  This is a not opened comment */ } else { test_statement(0xB0C); }
$error$
$end$
3444
 if (@rdi + @rbx >> (~@r11) ^ @r13 | $buffer >> $ip >> ~@rsi & +@rbp >> 0y1011 & @rdx & ++@r9 ^ @rbx == @rdi + @rbx >> (~@r11) ^ @r13 | $buffer >> $ip >> ~@rsi & +@rbp >> 0y1011 & @rdx & ++@r9 ^ @rbx)  { test_statement(0x67E); } else { test_statement(0x2166);  if ($ip ^ $ip <= $ip ^ $ip)  { test_statement(0x213B); } }
$error$
$end$
3445
 if (@r11 + ($thread) << @rbp & @r9 & @rsp | 0n2 >> ($teb) >> @r13 & 0x10 | ~@rbp ^ ~~(@rdx) & $teb ^ @rax ^ $thread == $ip + @rsi >> @rsp << @rsp >> 5 & @rdi >> +-@rdi)  { test_statement(0x10CB); @rax = @r13 ^ @rsp ^ @r10 ; } elsif (@rsi << @rdi = @rsi << @rdi) { test_statement(0xCA);  for (val = 10; $thread | @rsi | $teb <= 0x4 ^ @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x13 >> @rax & @rbx | @r13 & 0y1100 ^ +@rdi >< ~(0n9) >> $buffer ^ 0xF & ~0y110 ^ $thread) { test_statement(0x25C1); } else { test_statement(0xB1E); }
$error$
$end$
3446
 if (@r13 << @r10 << $ip >> @r9 << $thread >> ~$thread >> 0n13 & @r9 << @r12 & @rsi >> 0n4 | 3 << --@r10 & 0n2 & @rdx & @r9 | ~@rsp ^ @r11 & 0xD ^ 0y10000))+$ip ^ @rbx << 0xA >> @rsp >> $thread)  { test_statement(0x1D0); } elsif ($buffer >> $buffer >> @rbx <= @r13) { test_statement(0x1A0A);  This is a not opened comment */ } elsif (@rsi >> @r10 == @rsi >> @r10) { test_statement(0x16E9);  /* This is a comment */ } else { test_statement(0x769); }
$error$
$end$
3447
 if ($ip << @rax << @r8 >> 0x12 << ~@rdi ^ @r8 >> @rbx ^ ~@r10 >> @rbx & @r10))@rsp << @rbp | $proc >> 0n2 ^ @rdi & $proc & 0y1101)  { test_statement(0xDB); ;  /* This is a not closed comment }
$error$
$end$
3448
 if ($proc + @rdx << @r10 <= ~20 + +$proc << @r9 | 0 << @rsi >> @r9 >> $ip ^ @r8 >> @r11 ^ $teb & 0x13 ^ @rax | @r12 >> @rdx ^ @rdx ^ @r8 | $ip & @rsp ^ 0x4 | (-$buffer))  { test_statement(0xF7B);  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
3449
 if (~$proc + $buffer << ~$buffer & @rsp << 0n18 ^ @rdi < +$proc + @rsp << 0x11 & $teb << 0n11 >> @rbp >> @r8 | @r13 << (@rsp) >> $buffer & @r10 >> +~@rsi & @rdx ^ +$proc >> @r8 & @rbp)  { test_statement(0x158E); ; } else { test_statement(0x174F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread <= $buffer ^ @r9 | (@rdx)) ; ;  This is a not opened comment */  if (@r11 ; (@rsp))  { test_statement(0x24C1); } elsif (0y10)0x1) { test_statement(0x1095); } else { test_statement(0x17E3); }  // /* This is a comment   while  ($ip <= $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3450
 if ($teb + @r13 >> 0xC >> @r9 >> $ip ^ $ip << $thread >> $buffer >> -0n11 ^ @r13))$teb + @r13 >> 0xC >> @r9 >> $ip ^ $ip << $thread >> $buffer >> -0n11 ^ @r13)  { test_statement(0x914); } elsif ($proc | $teb >> @r13 & @rbx & 0y1000 < $proc | $teb >> @r13 & @rbx & 0y1000) { test_statement(0x1EB8);  /* This is a not closed comment  while  (-@r12 ! @r11 | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 >> @rdx ^ $teb & ~$thread ^ ~@rax ^ 0y0 | 0n19 >< @r13 >> @rdx ^ $teb & ~$thread ^ ~@rax ^ 0y0 | 0n19) { test_statement(0x13A2); }
$error$
$end$
3451
 if (@rdi & $teb >> +14 >> +@rdx & @rbp ^ @rsi << 0x6 ^ @r9 >> @rdi & @rbp & @rbp ! @rbx + @r11 << @r13 << 23 & @rdi >> @rsi >> $buffer ^ @r11 << $buffer >> 0y101 & @r10 >> 0y10000 & @r8 & @r8)  { test_statement(0x12E4);  /* This is a not closed comment } elsif (@rbp ^ @r10 >> @rax | ~0y1 >> @rdx ^ $teb ^ @rdi(($proc << $buffer ^ @rsi & 0n5 & @rbp ^ +$buffer & $proc) { test_statement(0x1170);  // /* This is a comment   /* This is a not closed comment } elsif (@rax >> $proc & @r8 ^ @rdx & 7 ^ (@r13) ^ (@rax) > @rdx & $teb | @rdx ^ 0y1001) { test_statement(0xEE9); } elsif (@rsi & @r11 ^ $teb | @rbp | $ip | 0y1101 >= @r10 | $proc) { test_statement(0x2552); } elsif (@rbp ; 4 | @r8 | $proc) { test_statement(0x52); }
$error$
$end$
3452
 if (@rbp + ~11 << @rbp & @r11 << @rdi >> -0n17 >> @rsi & @rbx & @rax ^ @r12 << @rax >> @rbp >> 0n18 & @rbp | @r12 << $teb ^ $ip & $thread | @rdx >> @rbx & @rdx & @rdi = @rbp + ~11 << @rbp & @r11 << @rdi >> -0n17 >> @rsi & @rbx & @rax ^ @r12 << @rax >> @rbp >> 0n18 & @rbp | @r12 << $teb ^ $ip & $thread | @rdx >> @rbx & @rdx & @rdi)  { test_statement(0x854); } elsif (7 << 17 >> @rsp & $teb >> $buffer & @rsi ^ ~0y1111 >> $thread & @r9 & @rsp > $buffer >> @rbp ^ @rdi >> 0n14 & @rdx ^ @rax & @rbp) { test_statement(0x1A5D);  for (val = 10; ~@r12 < ($ip) ^ @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc & 0n9 ^ @rsi ^ $thread | @rdx != $proc & 0n9 ^ @rsi ^ $thread | @rdx) { test_statement(0x116F); } elsif (-@rax | (@r11) ^ 0y10001 > @rbp ^ $proc | @r13 ^ @r12) { test_statement(0x20DD); ; }
$error$
$end$
3453
 if (3 + @r13 << @rdi << $ip >> $teb << 3 >> @r10 | @rdx | @r10 >> @r13)@r12 + 0y1011 >> $thread << (@r8) ^ @rax << $proc >> @rdi | @rdi >> 0y1000 >> -@r12 ^ @r8 >> $teb & 0y10010 ^ 0n3 & +@r13 ^ 20 ^ 0n17)  { test_statement(0x11D1); @rax = @rax >> @rbp ^ @rdi ; @rax = @r9 ; }
$error$
$end$
3454
 if (@rax + @r13 >> 0y0 << @r13 >> @rdi >> @rdi ^ @rbx << @rdx ^ @r12(@rax + @r13 >> 0y0 << @r13 >> @rdi >> @rdi ^ @rbx << @rdx ^ @r12)  { test_statement(0xA5B);  /* This is a comment */ } else { test_statement(0x181E); }
$error$
$end$
3455
 if (@rax + @r12 << @r13 << 0y1101 & @r13 << @rdx >> $thread & $teb & $thread & @rdx ^ 0x3 << 0n9 >> +0x5 & +@r13 >> @r12 >= +@rdx + @rdi >> @rbp << @r11 >> 0y10010 & @r9 | 0y1100 << $teb & @rsp >> @r13 ^ 0y101 & $teb & @r11 ^ @r11 | @rax)  { test_statement(0x17ED);  /* This is a comment */  while  (@rdi | @r13 | $buffer >< @r11 ^ @r10 | @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  if (0x5 > @r8)  { test_statement(0x1217); } elsif ($teb != $teb) { test_statement(0xE5B); } elsif (@r11 >< ~@r9) { test_statement(0x876); } }
$error$
$end$
3456
 if (~0y10001 >> @r10(~0y10001 >> @r10)  { test_statement(0x228A); } elsif (@r11 << @r11 ^ $teb ^ @rdi & ($buffer) ^ @rsi ^ 0y1101 < $proc >> 0y1101 ^ ~@r9 >> $teb & @rsp ^ @r11 ^ @rax ^ @rbx) { test_statement(0x1457);  /* This is a not closed comment }
$error$
$end$
3457
 if (@rdi + $proc >> @r10 << @rdx >> @r8 & 6 << (@rsi) ^ 0xC << @rax & @rdi >> 0x13 & +-@r9 & -0y110 ^ @rsi >> @r9))$proc + @r8 << 0xD & @r13 << $buffer ^ @r12 << $ip)  { test_statement(0x2367); } elsif (@rax << @r8 >> @rbp < -@r10 << $proc >> $teb >> @rdi & +@rax & @r9 | @rdx & @rsp | $teb & @r12 | 0n18 ^ @rbp) { test_statement(0xE9);  /* This is a comment */  // /* This is a comment  } elsif (@r8 & (@rbp) ^ $thread & @r9 < $ip ^ @rsi & 0y1100) { test_statement(0x197F);  for (; 0n17 | @r11))@rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @r12 | @r9 ; } else { test_statement(0x90D); }
$error$
$end$
3458
 if ($proc << ~@r8 | 6 > @rbx + @rdx << +@rbp << @rsi)  { test_statement(0x26EC); } else { test_statement(0x1375);  if (@r10 | @r10 <> @r10 | @r10)  { test_statement(0xD80); } elsif (@r9 | 0y1 ! @rax | @r9) { test_statement(0x18C9); } }
$error$
$end$
3459
 if ($ip + @rax << ~@r12 >> $ip >> $thread >> @r13 & @rax | (~(@r12)) >> 0x7 >> @rdx ^ @rbp & -@r12 | 0n12 >> 0n4 | +@r13 | $proc ^ @rdx | 0x12 == @rsi & @r12 << @rdx >> 0n6 >> @r8)  { test_statement(0x500);  This is a not opened comment */  /* This is a not closed comment }
$error$
$end$
3460
 if (0y10001 << ~@rdi & $thread << $proc >> (@rdx) >> $thread | $teb >> @r12 >> +@rax ^ $ip >> @rax & @r9))0y10001 << ~@rdi & $thread << $proc >> (@rdx) >> $thread | $teb >> @r12 >> +@rax ^ $ip >> @rax & @r9)  { test_statement(0x232); } elsif (@rbp & @r9 >= 0y1100 & @rdi >> @r9 & @rdi ^ $proc & @rbp ^ $buffer) { test_statement(0x177); }
$error$
$end$
3461
 if (@r11 + 0n9 << (0n15) << @rbp ^ @rsi ^ 2 & $thread & 0xD))@r11 + 0n9 << (0n15) << @rbp ^ @rsi ^ 2 & $thread & 0xD)  { test_statement(0x1AA1); } elsif ($buffer ! 0xC << @rdx & $proc >> @r12 | @r12 & -@rdi ^ @r10 & $teb ^ @r8) { test_statement(0x17D1); }
$error$
$end$
3462
 if (@rdx ^ 0x5 << @r11 >> @rsp >> @r9 ^ $buffer >> @rsi | @rsi << ($proc) >> @rsp >> @r12 & @rbp >> @rbp & @rax & @rbp = @r11 << @r9 ^ @r11 >> $ip & @r12 & @r12)  { test_statement(0xE15); }
$error$
$end$
3463
 if (16 | @r13 << 0y0 >> @rbx >> $buffer ^ @rdx | @r12 >> @rsp & @r11 & @rdi((@r13 + @r9 >> $ip << @r13 | @r13 >> @r9 & ~0x2 >> @r13 ^ @rdx >> 14 & @rdi ^ @rbx & 0xC ^ @r8 ^ +@r12)  { test_statement(0x1E58); } else { test_statement(0x233A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@r13) ^ @r10 < @r12 ^ 0n8 | 0y11 | (@r12)) ;  This is a not opened comment */ @rax = $ip | @rsp ; }
$error$
$end$
3464
 if (@rax << +$thread << ~$thread ^ $ip >> (@r13) >> $teb & +0xB >> $ip ^ 0x10 ^ @r13 & $ip | @rsp >> ~@r10 ^ 0xB ! @rax << +$thread << ~$thread ^ $ip >> (@r13) >> $teb & +0xB >> $ip ^ 0x10 ^ @r13 & $ip | @rsp >> ~@r10 ^ 0xB)  { test_statement(0x14E4); } elsif (0x6 & @rbx & $teb | $proc >> 0n8 ^ @r9 ^ (@r13) ^ @rsi | @rbp(0x6 & @rbx & $teb | $proc >> 0n8 ^ @r9 ^ (@r13) ^ @rsi | @rbp) { test_statement(0xBEF); }
$error$
$end$
3465
 if (~$buffer >> $proc >> @r11 & $teb << @r9 >> @rsi ^ $buffer << -@r8 >> --$teb < ~$buffer >> $proc >> @r11 & $teb << @r9 >> @rsi ^ $buffer << -@r8 >> --$teb)  { test_statement(0x1E42);  // /* This is a comment  ;  while  (@r12 | $thread))$proc | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 ! @r8) ; ; @rax = +@r13 ; } else { test_statement(0x1A46); }
$error$
$end$
3466
 if ($buffer >> ~@rdi | $teb << @r12((@r9 << $thread << @r9 >> $buffer >> @rax | @r10 << $buffer >> @r10 >> +$teb)  { test_statement(0x60F);  break; } else { test_statement(0x194D);  while  (@rsi < @rbp | +$ip | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
3467
 if ($teb + -0n13 ^ @rbp << $buffer >> 0xA >< 0n16 + @rbp << @rsi << 0n10 ^ @rbx & @rdx >> @rbp | @rdi)  { test_statement(0xD52); @rax = @rsi ^ @rsp | 0xE & @rax ^ -@r13 | @r13 | +@rdi | @r8 ; } elsif (@rax << @rbx >> @r8 >> @r13 ^ 0n1 ^ $buffer & $ip | @rdi & $buffer ^ -@rbx & 0xB ^ @r8 ^ 6 | @rdi(@rax << @rbx >> @r8 >> @r13 ^ 0n1 ^ $buffer & $ip | @rdi & $buffer ^ -@rbx & 0xB ^ @r8 ^ 6 | @rdi) { test_statement(0x1CA1);  /* This is a comment */ } else { test_statement(0x146B);  break; }
$error$
$end$
3468
 if (@rsp + +@rax << @r9 << $ip ^ +(0n0) >> @r12 >> 0n7 & 0x8 >> @r13 | $teb << $thread ^ $buffer >> 0y1101 | @r10 & $buffer & $thread ^ $proc & 0n13 ^ @r10 ^ @rax | @rbx | -@r10 ^ ~0x10 ! @rsp + +@rax << @r9 << $ip ^ +(0n0) >> @r12 >> 0n7 & 0x8 >> @r13 | $teb << $thread ^ $buffer >> 0y1101 | @r10 & $buffer & $thread ^ $proc & 0n13 ^ @r10 ^ @rax | @rbx | -@r10 ^ ~0x10)  { test_statement(0x1DFA);  break;  /* This is a comment */ val = @rax ^ $ip | @r12 ;  for (val = 10; $thread == (@rbp);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3469
 if ($proc + @rax ^ -@rax >> @rdx >> $proc & @r8 >> @rbx ^ @rbx >> @r12 & @rsp & +@rsi ^ (-@rsp) ^ 6 ^ 0y1110 != 0y101 << ($buffer) << $proc >> @rax & @r11 << @r9 ^ $thread >> @rbx & $proc >> $buffer & @rax ^ @r10 ^ @r9 & 5)  { test_statement(0x16B9); ;  /* This is a not closed comment  while  ($proc >= $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @r8 = $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rbp >= @rdx)  { test_statement(0x1213); } elsif (-~0n8 == -~0n8) { test_statement(0x26EE); }  /* This is a comment */  // /* This is a comment  } elsif (@rbp | -@rdi >> 12 & (@rbx) & @r13 ^ @rdi & $buffer ^ @r13 | $teb & 0n12 | @r12 ^ @r9 (@r9) << @r9) { test_statement(0x5E8); } elsif (@rbx ^ @r12 = @r8 >> @rdx & @r9 | 20 & @rax ^ 20) { test_statement(0x1380); }
$error$
$end$
3470
 if (0y1101 << @r11 << (((@rsp))) >> @rbp >> @r8 ^ @rdx <= @rsp >> 0x0 << @rdi & 0n9 << @rdx & 0xB >> @rbp)  { test_statement(0x1ACD); } else { test_statement(0x4AC);  for (val = 10; ~11 | $ip | @r10)@rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3471
 if (0x1 + @r13 & @rsi << -$proc ! $buffer << @r11 ^ @r12 | 0n15 >> $ip & @rdx ^ 0n13 | @r8 ^ @rbx ^ @rbp ^ (@r8))  { test_statement(0x2341); ; } elsif (($proc) >> 0x11 | +-@r10 >> 0x9 ^ @rbx ^ ($ip)((@r9 & @r8 >> (@rax) & $buffer) { test_statement(0x183D); } elsif ($thread >> 0y110 ^ $ip & $teb | 0n12 & @r8 | @r8 | @r8((($thread) >> $ip) { test_statement(0x492); }
$error$
$end$
3472
 if (+(@rax) + @rax << ~@rbp << $proc | @rbx & @r9 >> @rsp & @rax != +(@rax) + @rax << ~@rbp << $proc | @rbx & @r9 >> @rsp & @rax)  { test_statement(0x216C); } else { test_statement(0xD75);  /* This is a comment */ }
$error$
$end$
3473
 if (@rdi + @rsp & @rdi << (@rbp) & 0x9 >> $teb ^ @rbx << @r10 & $teb ^ @r13 & @rbx ^ 12 & @rsp | $buffer ! @rsp >> $buffer)  { test_statement(0x1F90); } else { test_statement(0x25AD); }
$error$
$end$
3474
 if (@r11 ^ 0y0 >> $buffer >> @rsi & @r8 | @r13 >> @rsi & ($thread) & @r12 ^ -$teb >> $teb & @rax & @rdx ^ @rdi ^ 0x1 ^ @rbx | @r13 >> $thread ^ @rdi ^ 0x10 | 0x6 & 12 ^ $proc 0n6)  { test_statement(0x15C4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rbp <> +@rbp) ; } elsif ($buffer << @rax >> 6 >> 0xF & +@r10 >> ~0y0 ^ @r12 >> @rbx & (+$thread) & $teb ^ 0xF & 17 ^ 0y1110 ! @r8 >> $ip & @rsi >> @rsp) { test_statement(0x17A5); } elsif ($thread >> @rbp | @rbp >< ~@rdi >> +$proc) { test_statement(0x15C4); @rax = @rdi ^ @rsi | (@r9) | (-@r10) ; }
$error$
$end$
3475
 if (0n10 + @rax << @r8 & $teb >> 4 < 14 << @r9 << ~$thread >> @rbp >> @rbp & +0n10 >> -@rsp ^ 0y1110 >> 0n7 & @rsi)  { test_statement(0x2411); } elsif (@rsp << (-(0n9)) >> 0n16 ^ @rsi >> @rax | $proc & 0y1111 & @rbx)@rbx << @rax & 0y111 ^ @rdx >> @rdx & @rax & @rbx ^ @rax ^ $thread ^ @r10) { test_statement(0xA59);  This is a not opened comment */ } else { test_statement(0x1A1D); }
$error$
$end$
3476
 if (~+$proc + $thread << $ip >> @rax << +(@rax) ^ $ip >> @rsi ^ ~$ip ^ $buffer & @rdx ^ $proc((0x6 << $proc >> $proc << 0x4 >> +@r12 ^ -@r10 << @r12 >> @r10 >> @r12 | @rax << @r10 >> @rdx)  { test_statement(0xFD); }
$error$
$end$
3477
 if (@r13 >> $thread ^ @r8 @r13 >> $thread ^ @r8)  { test_statement(0x1887);  /* This is a not closed comment } else { test_statement(0x1FB0); ; ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread >< ($buffer)) ; }
$error$
$end$
3478
 if (@r13 | @r11 >> +@rdx >> 0 & @rax & @rbx & 3 ^ 0y1111 | @r11 & @rdx & (@r11) ^ @r13)$proc << @rbp << 0y10011 >> 0y1111 << @r13 >> ~0n9 ^ 0n14 << 0 >> 12 >> -@rax & $teb >> ~@r12 | 0x5 & -@rsi & @r13 & 0n7)  { test_statement(0x9B4);  break;  break; } else { test_statement(0xEC6);  while  (@r11 ^ @r10 ! @r11 ^ @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3479
 if (5 + @rbx << 0n1 << $ip & @rdx ^ $ip << @r13 >> ~$buffer >> $ip & 10 & @r11 ^ @r12 ^ $thread | @rdx >> -@r9 & @rsp >> @r8 & @r8 & -@r9 <= 5 + @rbx << 0n1 << $ip & @rdx ^ $ip << @r13 >> ~$buffer >> $ip & 10 & @r11 ^ @r12 ^ $thread | @rdx >> -@r9 & @rsp >> @r8 & @r8 & -@r9)  { test_statement(0x119B);  // /* This is a comment  } elsif (@r9 << 0n18 | @rsi | @r11 & -@r13 ^ 0n2 != $buffer >> @rbx >> ($thread) & @rax ^ @rax >> @r9 ^ 4 & $thread ^ @r12 ^ 0y111 | +@r9) { test_statement(0x1611); } elsif ($thread >> $ip & @rsi ^ 0n8 ^ @r9 ^ 0x1(@r10 & $ip ^ @rdi ^ @r12) { test_statement(0x1416); }
$error$
$end$
3480
 if (@r9 + @r12 << @r11 << $proc >> @rbx << ~@r9 >> 3((@r9 + @r12 << @r11 << $proc >> @rbx << ~@r9 >> 3)  { test_statement(0x11FC);  for (val = 10; @rsp > (@rbx) & -@rsp ^ @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($proc <= $buffer ^ @r8 | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xF54); }
$error$
$end$
3481
 if (@rbx + @r11 & 0xF << 0n3((@rbx + @r11 & 0xF << 0n3)  { test_statement(0x1C6F); }
$error$
$end$
3482
 if ($buffer + @rsi << $proc << ~~@rdx & @r11 >> @rdx & @rax >> (($teb)) ^ $thread & -@rdx >> $buffer & +$thread & @r10((12 << $proc & $thread & @r9)  { test_statement(0xCC6);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@r13 = +@r13) ; @rax = $teb | 0x5 ;  /* This is a comment */ }
$error$
$end$
3483
 if ($buffer + @rsp >> @r8 << $thread & @r10 >> @rbp >> @rsp & $ip >> @rbp & @r10 & $buffer >= $buffer + @rsp >> @r8 << $thread & @r10 >> @rbp >> @rsp & $ip >> @rbp & @r10 & $buffer)  { test_statement(0x164B);  // /* This is a comment   break; } elsif ($buffer << (@rbx) >> @rdx >> 0 | $buffer & @r12 & @rsp | 2 & $ip ^ @rax | -@rdx <> @rsi << 0y1110 & -@r9 >> @rdi ^ ~0y1001 ^ @r13 | @r10 >> ~@rsp & (~@r8) ^ $proc | @rax ^ $ip ^ 0xD) { test_statement(0x1A67); val = @rbx ^ @r12 | $buffer ; }
$error$
$end$
3484
 if (~@r12 << @r10 < 0n8 >> @r10 >> ~@r8 | @rdx << -~@r13 ^ @r13 >> $thread | 0n12 >> $teb & @r12 & $proc | $proc & @rsp ^ $ip ^ $ip | 0n3 ^ $teb | 0y111 | ~1)  { test_statement(0x19BD); } elsif (@rdi << 0x9 >> $buffer ^ @r11 <> @rdi << 0x9 >> $buffer ^ @r11) { test_statement(0xCA1);  /* This is a not closed comment } elsif (@rdx & ~@r10 & @rsi ^ @rsi & $proc ^ @rax ^ $thread | 0n10 ^ ~~-$ip ^ 0y1101 | ($thread) | $teb | @rbp == @rdx & ~@r10 & @rsi ^ @rsi & $proc ^ @rax ^ $thread | 0n10 ^ ~~-$ip ^ 0y1101 | ($thread) | $teb | @rbp) { test_statement(0x2509);  break; val = $ip | @r13 ;  /* This is a not closed comment } elsif (@rsp ^ $buffer ^ 5 ! @rsp ^ $buffer ^ 5) { test_statement(0x628); } elsif ($proc ^ @rdi ! $ip | $teb) { test_statement(0x1B67); } elsif (@r13(($teb) { test_statement(0x1695); } else { test_statement(0xB5); }
$error$
$end$
3485
 if ($ip + @rdx ^ @rsp & ~~@r11 ^ @r12 & @rbx ^ $thread & @rax | $ip << 0n10 >> @r13 >> 0x1 ^ 10 & @r10 ^ @r10 | @rsi >> $buffer ^ $proc = @rbp ^ @r10 >> $teb & @rsp >> 0x8 ^ @r12 >> @rsp & $buffer & +$proc)  { test_statement(0x1B8E);  /* This is a not closed comment val = @r9 ^ @rdx | $ip ^ $proc ;  while  (@rdi > @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi << @rdx >> @r10 ! 22 >> 6 & (0xA) >> @rbx & @r10 & @r9 ^ @rbp >> 0n14 & 0y101 & @r12 ^ @rbp) { test_statement(0x6BF); } else { test_statement(0x2299);  /* This is a not closed comment  for (val = 10; @r8 | @r8 <> @r8 | @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (~@r11))(~@r11)) ; val = $buffer ; }
$error$
$end$
3486
 if ($proc << $ip << -0x7 >> ($proc) << @r9 & (~$thread) << $buffer >> $proc >> 2 | (@rdx) & $thread ^ (0n6) >> -(@r8) ^ @r10 | @rsp & @r12 & $buffer ^ 15 & @r10 ^ +$buffer(-@r9 << $buffer << ($buffer) & 0y1000 & @rbp | @rsi ^ $teb & @rax & ~@rdx)  { test_statement(0x26F0); } elsif (~@rbx << @rbx | -$thread & @rax & $buffer | @rdx))$proc ^ @rbx & 0y110 ^ $proc & $ip) { test_statement(0x1134); @rax = @rsi & @rsi | $proc ; }
$error$
$end$
3487
 if ($proc + @rdi << @r13 ^ ~@rbp & $teb & $teb))@r10 >> 0x8 >> ~$thread >> @r9 & @rdx >> 7 ^ +-+@rax)  { test_statement(0x64A);  /* This is a comment */ } elsif (~0n0 << @r9 >> @r13 >> @rbx <= 0xB & ~@r11) { test_statement(0x10D5); ; } else { test_statement(0x5A6); }
$error$
$end$
3488
 if (~@rbx & @r11 ^ 0n17 << @r11 >> (@rax) >> $teb & 0y1011 & 0n4 & ~$buffer | 0n19 << @r12 >> $buffer & $ip & @rdx & @r8 | $buffer >> @r8 & @rsi ^ 2 ^ $buffer ^ @rsi >= @rsi + @rsi << @rsp << $buffer & (15) << @r9)  { test_statement(0x394); } else { test_statement(0x1562); }
$error$
$end$
3489
 if (@rbp & @rax << @r10 & @r9 >> @rsi & 0n2 & +@r11 | ~@rbx ^ @r13 >> -$proc ! @rbp & @rax << @r10 & @r9 >> @rsi & 0n2 & +@r11 | ~@rbx ^ @r13 >> -$proc)  { test_statement(0x1AD1);  This is a not opened comment */  /* This is a not closed comment } elsif ($buffer & @rbx >> $buffer >< @r13 & +@r12 >> @rsi & @rax) { test_statement(0x52A);  // /* This is a comment  } elsif (@r10 >> @r12 & @rsi | @rax & @rdx @r10 >> @r12 & @rsi | @rax & @rdx) { test_statement(0x1384); } elsif (@rdx & ~@rax ^ @r11 ^ @rax | $proc ^ $thread | $proc = @rdx) { test_statement(0x1C94);  while  (@r8 @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
3490
 if (@r11 + @rdi << ~@r13 ^ +@rax << @r10 | @rdi >> ~@rsi & +$ip ^ $teb | $teb & -@r9 & @rsi ^ $thread & $teb ^ @r12 | $buffer & @rsi | @rbx | $teb ; @r12 >> -5 << 1 >> @r11 ^ ~@r11 & $proc)  { test_statement(0x2616);  while  ($thread | 17 = $thread | 17)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x176D); }
$error$
$end$
3491
 if (@r11 >> 0x6 >> @r13 & -22 << @rdx & $teb >> 0n12 & @rdx | $proc << $buffer ^ $ip & $proc | $ip & $teb & @rax ^ @r10 & -@rsi | @r12 & @r12 ^ @rbp ^ ~+@r12 > @r11 >> 0x6 >> @r13 & -22 << @rdx & $teb >> 0n12 & @rdx | $proc << $buffer ^ $ip & $proc | $ip & $teb & @rax ^ @r10 & -@rsi | @r12 & @r12 ^ @rbp ^ ~+@r12)  { test_statement(0x8B7);  This is a not opened comment */  for (val = 10; 0n18)@rdx ^ @rbx | @rbp | 0y111;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif ($ip << $buffer == $ip << $buffer) { test_statement(0x1536); } elsif (@rsp ^ $buffer & -$proc > @r11 >> @rbp | @r9 ^ @rdx | $buffer) { test_statement(0x547);  // /* This is a comment   for (; $thread <= $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rdi ;  // /* This is a comment  } elsif ($ip & 22 | @r8 ^ 0y10000 | $buffer | (@r10) = $ip & 22 | @r8 ^ 0y10000 | $buffer | (@r10)) { test_statement(0x26BB); } else { test_statement(0x1BFD); }
$error$
$end$
3492
 if (@r8 << @r11 << @rbx & @rbx << $proc & @rdx & @rsi & $ip ^ 0y10000 & $ip >> 0x13 & @rbp ^ $thread >> @r11 & $thread)@r8 << @r11 << @rbx & @rbx << $proc & @rdx & @rsi & $ip ^ 0y10000 & $ip >> 0x13 & @rbp ^ $thread >> @r11 & $thread)  { test_statement(0x9B0);  if (@rsp & @rdi ^ @rdi ^ @rax | @rdi >= @rsp & @rdi ^ @rdi ^ @rax | @rdi)  { test_statement(0x1FCE); } elsif (@rbp | $buffer >< @rdx | @rax) { test_statement(0x3F7); } elsif (@r8 | @rsi <> @r13) { test_statement(0x1429); }  if ($buffer | +0x11((@rbx ^ @rax)  { test_statement(0x181B); }  This is a not opened comment */  This is a not opened comment */ ; } else { test_statement(0x1BB4);  /* This is a comment */ }
$error$
$end$
3493
 if (+@r10 + @rbp >> @r8 & @rbp & 0xA ^ @rsp << ~($thread) >> @rbx & 0n16 >> @rbp ^ @r13 & @r11 & @r9 | ~@r9(@rsp + @r9 | @r12 & $thread & @r9 ^ $thread & @r10)  { test_statement(0xFBB); }
$error$
$end$
3494
 if (~@r9 << @r12 << @rsi >> @rdx | @r11 >> @r10 >> 0n0 & $thread & @rsi | @r11 >> @r10 != ~@r9 << @r12 << @rsi >> @rdx | @r11 >> @r10 >> 0n0 & $thread & @rsi | @r11 >> @r10)  { test_statement(0x2603);  // /* This is a comment  } elsif (0xA >> @rdx >> 23 ^ (@r8) >> 23 ^ $thread >= @r13 >> @rsp & @r11 >> $buffer ^ $proc >> -@r8 ^ @rax & @r11 | (@r11) ^ $teb & ~@rax ^ @r8) { test_statement(0xDDA); } elsif (@r10 ^ 10 & @r8 ^ @rbp ^ @rsp ! @r10 ^ 10 & @r8 ^ @rbp ^ @rsp) { test_statement(0x2683); val = @r12 ^ @rdx | @r9 ; @rax = 0y0 | @rsp ; } else { test_statement(0x1C32);  if (@rbp | 0x6 | @rbp(@r8)  { test_statement(0x42D); } }
$error$
$end$
3495
 if (@rsi + (@r11) >> @r10 | @rbp << @rbx & 0y1 ^ $buffer >> 0n18 ^ $buffer & $ip | @rbp >> ~@r10 & @rdx & @rbx(@rsi + (@r11) >> @r10 | @rbp << @rbx & 0y1 ^ $buffer >> 0n18 ^ $buffer & $ip | @rbp >> ~@r10 & @rdx & @rbx)  { test_statement(0x22E1);  This is a not opened comment */ } else { test_statement(0xD74); }
$error$
$end$
3496
 if (@r12 & @rax >> @rsi ^ $proc >> 11 >> @r9 ^ @rbp >> 10 | $teb ^ @r8 & $buffer)$proc >> @rdx << @r8 >> $teb & @rbp << @rdi & ~$buffer >> 0n8 & @rbp | @r11 << $thread >> $thread ^ $thread >> @r13 & 0xD & @rbx ^ @r9 | +@r13 >> 0n12)  { test_statement(0x1AB8);  while  (0n6 ^ $thread))0n6 ^ $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  for (val = 10; $proc | +$teb >< $proc | +$teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rbp <> 0x9)  { test_statement(0x1797); } } elsif (+@r10 << ~@rax & $buffer | 3 | 0n4 | @r12 $ip >> $proc >> @r9 ^ 0n7 ^ @r12 | @r9 & @rsp & @r11 | @rbx) { test_statement(0x1BA8); } elsif (@rax >> 5 & $teb ^ @r11 ^ $proc | 0x5 & @r12)@rax >> 5 & $teb ^ @r11 ^ $proc | 0x5 & @r12) { test_statement(0x2421); } else { test_statement(0x2067); }
$error$
$end$
3497
 if (0n19 & 0x3 >> @r9 >> +@rbx > @rbp + $teb)  { test_statement(0x9F1); }
$error$
$end$
3498
 if (+@r8 << (0y10) << @rdx ^ @rdi << $teb >> $ip >> @rdi <= +@r8 << (0y10) << @rdx ^ @rdi << $teb >> $ip >> @rdi)  { test_statement(0x1F00); } elsif (~$proc << @rbp >> @rsp ^ 23 >> @r13 | (@r10) ^ $proc ^ @rbx <= @rsi | @r13 >> @rax & (@rbx) ^ @rsp & 6 ^ 0x8 | @rax & @rbx ^ ~$proc) { test_statement(0x24C4); }
$error$
$end$
3499
 if (+@r13 + ~$proc << 0y10010 << @r10))$buffer >> $buffer & @r11 << @rbp >> @rbx & $buffer >> @r9 ^ $ip & @r13 | $teb >> @rsp & @r10 & $teb & @r12 | @r12 >> @rbx & 0y1010)  { test_statement(0xE65); } else { test_statement(0xAD1); ;  while  ($proc((@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3500
 if ((($proc)) + @r13 >> @rsi << 0x5 < 0n9 << @rsi >> $teb << @rdi >> 0 ^ $ip >> $teb >> 0n14 & $proc | 0y101 | @rax >> @r8 & @r8 & -$buffer)  { test_statement(0x255A); }
$error$
$end$
3501
 if (@r9 << $ip << @r8 >> 14 & (@rbp) << @r10 >> @rsi ^ 0x11 << @rax ^ ~@r13 >> @rdi ! @r13 + @r12 << @r11)  { test_statement(0x22EC); } else { test_statement(0xBC8); }
$error$
$end$
3502
 if ((6) + @r10 >> (@r13) >> $proc ^ @r11 << @rax >> @r9 >> @rsp >< (6) + @r10 >> (@r13) >> $proc ^ @r11 << @rax >> @r9 >> @rsp)  { test_statement(0x9A8); @rax = @rsp >> @r10 ^ ($thread) & $ip | 0y10000 ;  if (0n16 ^ ~0 | $buffer <= 0n16 ^ ~0 | $buffer)  { test_statement(0x1EE2); } elsif ($teb | 10 >= $teb | 10) { test_statement(0x2097); }  /* This is a comment */  if (@rbx((@rdi)  { test_statement(0x179C); } elsif (-@r10 <= $ip) { test_statement(0x14FF); } }
$error$
$end$
3503
 if (@rbx << $buffer << -(0x1) >> @rdi & @rsp << @rax >> -$teb ^ -(@rdx) << @rbx)0y1000 >> @r12 << @rsp >> 0x6 | +@r11 << ~$buffer & @rbp | (@r9) >> $thread ^ @r10 & 0x7 | @r9 ^ (5) ^ ($ip))  { test_statement(0x1A95); } elsif ($buffer << @r10 >> 0x8 >> $buffer & @rdi ^ -0x3 & 0y10001 & +@rax ^ @r12 & @rsi <= @r10 << @rdi >> @r11 ^ @r10 ^ @r12) { test_statement(0x1DD1); }
$error$
$end$
3504
 if (@r11 << @rdx << +@rsi >> $teb >> @r12 | $ip << $thread >> @rax & @rsp(($proc << ~@rax << 0x1 | @rbx << +@rbp & @r10 >> @r13 & 0y1 & 0n1 ^ @rsi)  { test_statement(0x18FB);  This is a not opened comment */  while  (@r9 == +$proc | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12 & +-$proc ^ @rdx & $ip ^ @r10 | +0n16 >> (+@rax) < @r12 & +-$proc ^ @rdx & $ip ^ @r10 | +0n16 >> (+@rax)) { test_statement(0xC76); }
$error$
$end$
3505
 if (@r12 + @rdx << -@rbp << @rdi ^ 0n14 << $proc & $thread >> @r10 & +$proc & @rsp | @rsp >> @rdx ^ @r12 & @r9 ^ @rbx | @r13 & @r13 & @r8 | @rsi & $thread +$ip + $ip << 0y1000 >> $proc >> 0n2 & $proc)  { test_statement(0x2475); } else { test_statement(0xFB6); }
$error$
$end$
3506
 if ($ip ^ @r12 >> $thread >> $ip ^ @r8 & 0n17 | @r10 << $ip & -@r13 & ~@rdx & 0x7 ^ @r12 == $ip ^ @r12 >> $thread >> $ip ^ @r8 & 0n17 | @r10 << $ip & -@r13 & ~@rdx & 0x7 ^ @r12)  { test_statement(0xB48); ;  while  (@r8((@rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (17 ^ -@rsp >> @rdx ! @r8 << $ip >> +0y0 >> @rax & @rbp ^ @rsp >> @r9 & @r13) { test_statement(0xA0); } elsif (@rbp & (@r8) & +@rbp ^ @r9 & @r12 ^ $proc ^ @rsp | @r11 & @rdx | $ip ! (@r9) & $proc | -$ip & @rax ^ $thread | @rax ^ $proc | 0n14 | (@rdi)) { test_statement(0xB29); } elsif (@rsp & @r11 ^ @rsp <> @r8 & -@r11 | ($ip) | 14 | @r9) { test_statement(0x1A7E);  while  (@rax(@rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (+$buffer != @r11 | @r12 | $buffer) { test_statement(0x10EC); } elsif (~0n17 | $proc)~0n17 | $proc) { test_statement(0x5A2); } elsif (@rdx = @rdx) { test_statement(0x15A8);  /* This is a comment */ } else { test_statement(0xF7F);  break; }
$error$
$end$
3507
 if (@rbp + $ip << @r8 << 0y100 ; @rbp + $ip << @r8 << 0y100)  { test_statement(0xC89);  while  (@rsp & @rax ^ @rsi ^ 0x7 != @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer >> ++@r12 >> @rdi ^ $thread >> @rdx ^ -@rbp ^ @rsp ; $buffer >> ++@r12 >> @rdi ^ $thread >> @rdx ^ -@rbp ^ @rsp) { test_statement(0x1102); } else { test_statement(0x74C);  /* This is a not closed comment  /* This is a not closed comment }
$error$
$end$
3508
 if (@rsp >> @rdi >> @r12 | ~@rsi << @r13 & ($proc) >> @r10 & $ip & 0y1101 | -$proc >> @rdi & @rax & @r13 ^ @rsi ^ @rbx ^ @rdx | $proc(@rsp >> @rdi >> @r12 | ~@rsi << @r13 & ($proc) >> @r10 & $ip & 0y1101 | -$proc >> @rdi & @rax & @r13 ^ @rsi ^ @rbx ^ @rdx | $proc)  { test_statement(0x139A); } else { test_statement(0x571); }
$error$
$end$
3509
 if (@r13 >> $thread << @rdi & $thread << (-$ip) ^ $proc >> -@r13 >> 11 ^ @r11 >> $proc & $teb & $ip ^ @r11 | @rdi & @rax ^ $buffer >> @r9 & -@r9 & @r12 > @r13 >> $thread << @rdi & $thread << (-$ip) ^ $proc >> -@r13 >> 11 ^ @r11 >> $proc & $teb & $ip ^ @r11 | @rdi & @rax ^ $buffer >> @r9 & -@r9 & @r12)  { test_statement(0x1917); } else { test_statement(0x2672);  This is a not opened comment */  /* This is a not closed comment }
$error$
$end$
3510
 if (@r8 << $buffer >> $teb << @r9 & @r9 ^ @r10 << $teb >> ~@rbp | 0n3 << +0n19 ^ @r11 ^ 0n10 ^ (@rsi) ^ $teb | @r9 ^ 17 = @rbp << $buffer << @rbp >> @rdi ^ @r13 << @rbp >> 0x11 >> @r9 & 0y1)  { test_statement(0xE27); } elsif (7 | ~$thread >> @rsi & ~$teb ^ -15 & @r11 ^ @r13 | 2 ^ $buffer | @rax ^ 20(~@r11 << $teb >> @rbp & @r8 >> ~$thread & $proc & 0y110) { test_statement(0x771);  /* This is a comment */ }
$error$
$end$
3511
 if (+$teb + (3) >> ~@rsi << $ip & 0y10011 ^ @rbx <= @r13 & 0x7 & @rsi >> 0n19)  { test_statement(0x306);  if (~@rsp ^ @r9 | $teb ^ @r12 | +$proc == $thread & @r9)  { test_statement(0x6CD); } } elsif (@r10 << 0y10011 >> @r8 >> ~$proc ^ @rsi | @rax >> @r13 & $proc | $thread & @rdx == @r10 << 0y10011 >> @r8 >> ~$proc ^ @rsi | @rax >> @r13 & $proc | $thread & @rdx) { test_statement(0xEDC); } else { test_statement(0x1BB8); }
$error$
$end$
3512
 if (@r9 >> $buffer << $teb & @r10 << @rsi >> 0y101 | @r8 >< @r9 >> $buffer << $teb & @r10 << @rsi >> 0y101 | @r8)  { test_statement(0x1E3C);  for (val = 10; $thread & @r13 ^ @r9 | @rbx | 0y110 | @r13 @rax | $teb | @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = 0y1101 & @rbp ^ @rsi ;  for (val = 10; -17 | @rbx ; @r12 | (~6);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($buffer)$buffer)  { test_statement(0x177D); }  /* This is a comment */  This is a not opened comment */ } elsif (@r9 ^ 0y1111 >> $teb & (@r13) | 0n5 >> @r9 ^ @rsp | -@r12 | @r9 <> @r9 ^ 0y1111 >> $teb & (@r13) | 0n5 >> @r9 ^ @rsp | -@r12 | @r9) { test_statement(0x1C3F); } elsif (@r13 >> @rsp ^ @rbx & @rbp ^ $ip ^ @r9)$ip ^ @rsp & $ip ^ @rax) { test_statement(0x9BA);  This is a not opened comment */ }
$error$
$end$
3513
 if ($ip + @r12 >> -@rsi >> @rsp >> @rbp | -$thread << @rax >> (@rbx) | --@rsp ^ @r11 | @r8 ^ $proc ^ +@rbx = $ip + @r12 >> -@rsi >> @rsp >> @rbp | -$thread << @rax >> (@rbx) | --@rsp ^ @r11 | @r8 ^ $proc ^ +@rbx)  { test_statement(0xF62);  // /* This is a comment  }
$error$
$end$
3514
 if ((0y10) << $thread >> @rdx << @rdi | @r10 << -@rdi >> 0n13 & 0n7 & 0x3 > @r8 + @rsi >> @rsp >> @rax >> @rsi | 0n7 << $teb & $proc & @r8 ^ 0y111 | @rdi >> $buffer & @rsp ^ @r13)  { test_statement(0x90A); @rax = -@r11 & @r10 ;  /* This is a not closed comment } elsif ($buffer >> 0xA & $teb >> 0n13 ^ $teb ^ @r13 & @rbx ^ $proc | $proc | @r8 & $ip | 0n18 ^ @rax | +$buffer | @r11((0y111) { test_statement(0x1A85);  break;  while  ($buffer | @r11 != $buffer | @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y1011 | @r9 | $thread ^ $buffer | @rax | @rbp)0y1011 | @r9 | $thread ^ $buffer | @rax | @rbp) { test_statement(0xE01);  if ($thread | @rdx != @r11 | @rbx)  { test_statement(0x1CDC); } elsif (@r10 <= 0y10010) { test_statement(0x206D); }  This is a not opened comment */  This is a not opened comment */ } elsif (@r10)@r9 ^ 0n2 ^ @r9 | -@rsp) { test_statement(0xDB9); ; }
$error$
$end$
3515
 if (@r11 << @rbx & @rbp & @rdx ^ +~@r13 << @rsp >> @rax >> $thread | ~$thread = @r11 << @rbx & @rbp & @rdx ^ +~@r13 << @rsp >> @rax >> $thread | ~$thread)  { test_statement(0x6D3); ;  for (val = 10; @r10 | -11)@r10 | -11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3516
 if ($proc | @r9 << @rbx ^ @r12 >> $buffer ^ ~@r9 & $buffer ^ $ip | @r8 >> @rsp ^ +@r10 & @rax ^ (+$teb)(($proc | @r9 << @rbx ^ @r12 >> $buffer ^ ~@r9 & $buffer ^ $ip | @r8 >> @rsp ^ +@r10 & @rax ^ (+$teb))  { test_statement(0x266F); } else { test_statement(0xCED);  This is a not opened comment */  for (@rax = +@r11 | @r13; @r11 | @r13 > @r10 | -$teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = $teb | @r13 ; }
$error$
$end$
3517
 if ($teb << @r13 >> @rax << ~@rbx >> @r9 >> 0xE & @rax)@rsi << (0n6) << 0x13 & @rdi >> 0y101 >> +@rbp ^ $proc << @r10 & @r9 >> (@rdi) & @rdi | -~@r10 << @rbp >> -@rax & ~@r13)  { test_statement(0xAE5);  while  (@r13 & $teb ^ @rax((17 ^ 12 ^ ~$proc | $ip ^ @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (0n12 << ~@rsp >> $buffer >> $teb >< 0n12 << ~@rsp >> $buffer >> $teb) { test_statement(0x1FFE);  while  (12 | @rsp = @r12 ^ $thread | @r8 | 0n3)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } else { test_statement(0x1BF0); }
$error$
$end$
3518
 if (+0n1 + $thread << @r11 >> 0y1101 << ~@rdx >> 0y1001 >> 22 | 0y111 ; 0y1000 + 0n14 | @rbp >> $teb ^ @r10 & $buffer)  { test_statement(0x94C);  /* This is a not closed comment } elsif (@r9 & @rax >> 22 & $thread & 0y1010 ^ ($proc) >> -@r12 & $buffer ^ @rax & @rdx ; @r10 << $buffer & 0xC >> @rsp & 0n4 & @r11 | @rdx ^ ($teb) ^ @r12 ^ @rdx | @rdx & $teb) { test_statement(0x1289);  break; } else { test_statement(0x100A);  if (-0n1 ^ @r10 != -0n1 ^ @r10)  { test_statement(0x1C0); } elsif (@rbx <> @rbx) { test_statement(0xE90); } elsif (@r11((+@r11) { test_statement(0x1E7C); } elsif ($thread != $proc) { test_statement(0x26F8); }  if ($buffer | @r8(($buffer | @r8)  { test_statement(0x17FB); } elsif (@r10))(@r10)) { test_statement(0x1EF5); } elsif (@r12 = @r12) { test_statement(0x182D); } ; }
$error$
$end$
3519
 if (@r11 << @r11 >> +@rdi << ~@rbx >> 3 >> ~$proc ^ 0x12 | @rdi << @r8 >< 0n16 + 0x9)  { test_statement(0x882);  for (val = 10; @r10 & (+$ip) ^ @r10 = @r13 & 13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r10 << @r12 >> ~@r8 >> @rsp & @rsp >> $thread & ~@rdi | @rdx >> +(@rbp) & @rsp & 1(($ip) >> @r9 ^ 6 | @rbp) { test_statement(0x148E); ; } elsif (@rbp & @rdx & 0x11 ^ (0y1100) & @rdi ^ 0x10 ; @rbp & @rdx & 0x11 ^ (0y1100) & @rdi ^ 0x10) { test_statement(0x1A26); } elsif (@r10 ^ @r9 > @r10 ^ @r9) { test_statement(0xE4); } else { test_statement(0x1AE7); }
$error$
$end$
3520
 if (@r10 ^ 0y10011 ^ @r11 & ($proc) | @rbx & @rbx >> @rdi & @r11 ^ 14 | @rbp >> @r9 & 6 & @r13 ^ @r11 & @rdx | @r11 | $proc ^ $thread ; @r10 ^ 0y10011 ^ @r11 & ($proc) | @rbx & @rbx >> @rdi & @r11 ^ 14 | @rbp >> @r9 & 6 & @r13 ^ @r11 & @rdx | @r11 | $proc ^ $thread)  { test_statement(0x7E7); } elsif (@r9 << -@r12 >> ~17 ^ +@r8 >> @rsi & @rdi & -@rbp ^ 20 & @r13 != @r10 >> $teb) { test_statement(0x1731);  This is a not opened comment */  break;  // /* This is a comment  } elsif ($proc & $ip & @rbp | ~@rdx & $ip ^ @rax | @rbx ^ @rbx | ($ip) > $proc & $ip & @rbp | ~@rdx & $ip ^ @rax | @rbx ^ @rbx | ($ip)) { test_statement(0x600);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi)@rdi) ; ; } elsif (@rdi | @rbp > $proc) { test_statement(0xC65); }
$error$
$end$
3521
 if (0xF + @r12 >> @r13 & @r11 >> @r11 >> 0x10 & @rdx >> @rsp ^ 0n19 & $buffer < $proc & $ip & $buffer >> @rbx ^ -0x3 << $ip ^ $buffer ^ @rbp)  { test_statement(0xB38); } elsif (@r10 << +@r12 >> $buffer >> 5 & @r12 >> @r10 | @rbp >> @r9 & @r9 & @r10 | 0x3 & @rbp ^ @r13 ^ @rdi | $proc ^ @r10 ! @r10 << +@r12 >> $buffer >> 5 & @r12 >> @r10 | @rbp >> @r9 & @r9 & @r10 | 0x3 & @rbp ^ @r13 ^ @rdi | $proc ^ @r10) { test_statement(0x1C8D);  // /* This is a comment  } elsif (@r11 >> 0n17 & 0n2 & 0y1100 | $thread & @rsp | -$ip ^ @rdi = $buffer | @r13 & $ip | +0x9 ^ +0y11 | @r13 | @r9) { test_statement(0x1FDE);  // /* This is a comment   /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 @r13) ; ; }
$error$
$end$
3522
 if (@rdi + @r8 << 17 >> 0y1000 >> 0y1 >> ~@r13 ^ @r11 & @rbp & @rdx))@rdi + @r8 << 17 >> 0y1000 >> 0y1 >> ~@r13 ^ @r11 & @rbp & @rdx)  { test_statement(0x2545);  for (val = 10; ~(0xE) ^ @rbx)@rbp & @r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 << @rdi >> @rax & $teb ^ @r9 >> 0y110 | @rbx(@r13 << @rdi >> @rax & $teb ^ @r9 >> 0y110 | @rbx) { test_statement(0x2278);  break; } elsif ($proc >> $proc & @r8 ; @r12) { test_statement(0x249D); } elsif (@rdi ^ @rax ^ @rax <> @r11 & @rdi ^ @r10 ^ -~@r11 | @rbp ^ $buffer | $proc | -@rbp) { test_statement(0x1175);  for (@rax = @rsp; $ip == @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; (@rax))(@rax);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3523
 if (0y111 + @rbx << @rax << @rbx >> 0x11 << @r9 & @r11 << -@rsp & $ip >> +$ip ^ @r8 >> 5 | @rax << 0n3 >> @r9 >> @r11 & @rax >> $ip & $ip ^ @rbx >> +@rbx & @r10 < 0y0 + @r11 << @r11 << @r10 >> $proc << @r11 >> $proc >> -~@rsp & @rdx << (0n5) >> 0y1011 & 0n11 >> ~16 & @r12)  { test_statement(0x17E7); } elsif ($teb << @r9 >> @r9 >> @r11 <> $buffer << 0y1111 ^ @rdx >> 0x6 ^ @rsp & $thread ^ @rsi ^ 0x7) { test_statement(0x14BF); }
$error$
$end$
3524
 if (@rbp >> -@rdi & @rsp << @rsi ; @rbx + -0x1 << @r10 << @r9 >> 0x13 << @rdi ^ @rsp >> @rsi >> @rdi & -$buffer)  { test_statement(0x1737);  // /* This is a comment   if (@r8 <= @r10 | $buffer)  { test_statement(0x1177); } elsif ($ip | $proc ! $ip | $proc) { test_statement(0x902); } else { test_statement(0x6FC); }  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb > $teb) ;  break; } elsif (0n11 << $proc >> @rsp & @r11 >> @rbx & 20 & @r13 ^ $buffer >> @r12 & @rsi)0n12 << @r10 ^ @r13 & $buffer & @rsi ^ $thread | @rax & $buffer ^ @rax & @r13) { test_statement(0x1BDB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 14 == ~~@r9) ; } elsif (@rsi >> @rax & @r13 == @rsi >> @rax & @r13) { test_statement(0x14AE); }
$error$
$end$
3525
 if (@rsp + 0y1110 << -@r11 << @r11 >> @r12 ^ @r13 << @rbp >> @r12 >> @r13 & ((@rsp)) >> +0y10 ^ @rsi & @rax & +@r10 = 0n10 | 0n3 << -$ip ^ 0x8 | @rsp ^ @r12 | @r8 & @rdx ^ 0n8 | $teb ^ @rbx)  { test_statement(0x2653);  This is a not opened comment */  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rdi | $buffer((@rax | @rsi) ; } else { test_statement(0xD6F);  for (val = 10; @rdx ^ @rdi(@rdx ^ @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3526
 if (@r8 + -@rax << @rbx ^ @rsi << 4 | ~@rdi << @rax ^ @rdi ^ 0x11 & 0y11 ^ @r13 ^ @r8 != @r8 + -@rax << @rbx ^ @rsi << 4 | ~@rdi << @rax ^ @rdi ^ 0x11 & 0y11 ^ @r13 ^ @r8)  { test_statement(0x99C);  for (val = $ip & 17; @rax & $ip | @r8 ^ @rax | $teb | +@r10 ; @r12 & @r8 | $ip ^ -0y1100;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer >> @r12 & (@r8) & @rsp & 15 ^ 0n11 >> $proc | $thread >> @rbx & @rsp ^ @r8 & @rax | $proc & @rax ^ 0y1 ^ $ip != $ip << 0x8) { test_statement(0x1C35);  /* This is a comment */ }
$error$
$end$
3527
 if (~@rbx + $teb ^ @r8 & @rbp >> @rdx & $thread & @rbx ^ 0xC >> +@r9 & @rdx & -@rbp((~@rbx + $teb ^ @r8 & @rbp >> @rdx & $thread & @rbx ^ 0xC >> +@r9 & @rdx & -@rbp)  { test_statement(0x193); } else { test_statement(0xEE0); }
$error$
$end$
3528
 if (@r13 + 0xD >> +@rbp << $ip ^ 0xF << @r9 & @rsp == @r13 + 0xD >> +@rbp << $ip ^ 0xF << @r9 & @rsp)  { test_statement(0x15CB);  for (val = 10; @r13 <= @r8 & @rdi ^ @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ $teb)17 ^ (($proc))) ;  /* This is a comment */ } elsif ($proc << @rsp & $thread >> -@r8 ^ $buffer & 21 & @rbp(@r12 << 0xB >> @r10) { test_statement(0x26F6); } elsif (@rdx >> 0n14 & +@rsi & @r10 | @r13 & @rsp ^ 0x5 ; @rdx >> 0n14 & +@rsi & @r10 | @r13 & @rsp ^ 0x5) { test_statement(0xB18); } elsif ($proc & $thread ^ @rbx ^ +0xE | @r10 ^ @rax | 0xD ! @r13 | @rbx | @r13) { test_statement(0x1FC2);  while  (@r9 @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0xA ; 0xA) { test_statement(0xEBC); } else { test_statement(0xBE8);  This is a not opened comment */ }
$error$
$end$
3530
 if (@rbp << @r12 << 17 >> @rbp << @r8 >> (0y1101) >> @rbp & ($teb) << @r8 | @rsi << $buffer ^ $thread <> 1 << @r12 >> 0xE << @rdi >> @r9)  { test_statement(0x23);  break; } elsif (@r10 >> ($thread) >> @r12 ^ @rbx & 13 & @rdi != @r10 >> ($thread) >> @r12 ^ @rbx & 13 & @rdi) { test_statement(0x12EB); ; } elsif ($teb & @rsi ^ @rdx ^ 0x0 | @r10 | @rsp ^ @rax | 0y1100 | $proc >= $teb & @rsi ^ @rdx ^ 0x0 | @r10 | @rsp ^ @rax | 0y1100 | $proc) { test_statement(0xEF0);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x2 <> 0x2) ; } elsif (@rbp))$buffer & $thread ^ @rdi ^ 0n17 | @rdx ^ @r11) { test_statement(0x1E36);  /* This is a comment */ } elsif ($thread ^ $teb $ip) { test_statement(0x17DE);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx >= (@r13)) ; } elsif (@r11 | 0y10001 == $buffer) { test_statement(0x4DF); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 17 >< 17) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax >= 0n3) ; } else { test_statement(0x4F4);  while  ($thread ^ @r12((15 ^ (@r11))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  for (val = 10; @r9 == @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x2 == @r10) ; }
$error$
$end$
3531
 if ($thread + @r12 & @rdi << $teb >> @rbx | $teb >> $thread >> @r12 | @rbx & @rdx | @rsp | @r13 | 0y111 <= @r8 + @rdi << $thread << @rsp | ~@rbp)  { test_statement(0x6F1); val = @r12 & $ip ;  /* This is a comment */  /* This is a not closed comment } else { test_statement(0x201); }
$error$
$end$
3532
 if (@r12 & @rbx << 0x7 >> (@rbx) >= @r12 & @rbx << 0x7 >> (@rbx))  { test_statement(0x1AA0); }
$error$
$end$
3533
 if ($thread << $ip << @rsi >> 1 >> @r11 >> $thread & ($teb) << @rdi & @rsp & @rbp ^ @rdi << $teb & $ip <= $thread << $ip << @rsi >> 1 >> @r11 >> $thread & ($teb) << @rdi & @rsp & @rbp ^ @rdi << $teb & $ip)  { test_statement(0x1E3A);  for (; $thread <> @r8 | 6 ^ $ip | 0y1011;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (@rax = $thread ^ ++@rsi | $teb; @rbp ^ $proc | -@r12 | 0y1110 <= @rbp ^ $proc | -@r12 | 0y1110;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (($teb) ^ 0y11 & @rsp ^ $teb < (@r13) << @r12 & -@r10 & $proc) { test_statement(0xBEA);  if (@rdi <= @rdi)  { test_statement(0x14F9); } elsif (-$ip | -@rdi -$ip | -@rdi) { test_statement(0x2153); } elsif (5 <= 5) { test_statement(0xA85); }  while  (~@rsp != @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x15D); }
$error$
$end$
3534
 if (@r9 >> +0x11 >> @r9 >> 22 & 6 >> @rdx & $ip & $ip & 0y1111 | $thread & +@rax & @rax & +$thread ^ 0n10 >> -1 & $ip ^ @rbx & 0x0 <> @r12 + @rax << @r9 ^ @rbp >> $proc ^ 0x11 & 0x5 & @r12 ^ 0n0 | ~@r9 << @r8 & @r11 >> 0n15)  { test_statement(0x1E95);  for (val = 10; @rsi | 0n18 ^ 0n9 = $proc & @r11 ^ -@r8 ^ 0x12 | @rdi ^ -@r12 | @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3535
 if (+@rbx >> (+0xD) << @rax >> $thread >> +@rsi & @r11 << @rsp >> $proc >> 0y10 & ~@r13 >> @r8 ^ @r10 << @rsp >> (@r12) >> (@r10)))+@rbx >> (+0xD) << @rax >> $thread >> +@rsi & @r11 << @rsp >> $proc >> 0y10 & ~@r13 >> @r8 ^ @r10 << @rsp >> (@r12) >> (@r10))  { test_statement(0x7AA); } else { test_statement(0x17BA); }
$error$
$end$
3536
 if (@r12 >> $buffer << $proc >> $proc >> $buffer ; @r12 >> $buffer << $proc >> $proc >> $buffer)  { test_statement(0xA16); } elsif (0y10000 & @rsp >> $teb & 0x13 & 0n13 <> 0y1110 << -0n4 & @rbx & (20) & @rdx ^ +0n3 >> 0x6 ^ @rdx & @r10) { test_statement(0x1B6A); }
$error$
$end$
3537
 if (@rdx + (0n18) >> @rdi << $teb >> $ip >> @r11 == (0y1111) >> $buffer << ~@rbp ^ 0y1011 >> @rdi >> $buffer & $thread & $buffer & $thread | @rsi << 0y101 >> @rbp | @rdi >> $thread ^ 0y1100 & $ip)  { test_statement(0x20C); } elsif (20 & @rsi & @rsi ^ @rsp >> @rsp & 0n14 & @rbp | @r9 >> @r8 ^ @rbp & $proc ^ 0 | $buffer & 15 ^ @rsi ^ @rsi >< @rbp << $buffer >> @r9 >> @rdx & $teb >> @rdx & (20) & @r10 | 0y101 & $ip | 0xC ^ $thread) { test_statement(0x1069);  // /* This is a comment   // /* This is a comment   // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@r8 = -@r8) ;  /* This is a comment */ } elsif (@r9 >> @rdx ^ 0y1011 & @r8 | 0n3 & @r10 | +$thread | $proc((+@rsi ^ @rdi & @r13) { test_statement(0x1071); } elsif (0y10 ^ +0y110 | @rbx ^ 0x4 > @rsp & @rsp | @rax ^ $teb | $buffer | @r13) { test_statement(0x118C); } else { test_statement(0x1BA8);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp | @rsp | @rsp == @r13) ;  // /* This is a comment   // /* This is a comment  }
$error$
$end$
3538
 if (+@r11 + @rax << @rax << @r8 ^ @rsi << @r8 ^ @rax >> @r8 & @rax & @rdi | @rsi << @rbx ^ @rbp >> @r13 ^ @r13 ^ @rax ; @rdx + @rbp << @r9 >> @rsp << $thread >> ~23 & @rdx >> @rbx >> @r11 & @r13 ^ 0xD << @rsi >> @rax >> -0y1010 & @r9 >> $ip)  { test_statement(0x1BE);  This is a not opened comment */ }
$error$
$end$
3539
 if (0y1111 + @r12 >> ((0y101)) >> $teb & -@rax << +$ip >> ($teb) ^ @rsp ^ $teb >> @r11 ^ 0x5 & @r11 @r9 << 0y10001 << $proc >> -~0n12 << ~$buffer)  { test_statement(0xF04);  This is a not opened comment */ val = @rdx ^ 12 ; } elsif (@r13 >> 6 >> @rsp | $buffer >> @r9 | @r11 & @rax | @r13 ; 10) { test_statement(0x1D04); } elsif (@rdi >> +@rbp & +@r13 ^ 0x13 & (@r10) ^ @rdx ^ @r10 | @r12 @rbx) { test_statement(0xDE8); } else { test_statement(0x2475); }
$error$
$end$
3540
 if ($buffer >> @r9 << 0y10001 >> $ip >> @r8 & $buffer & $thread & @r13 ^ @r12 >> +@rdi ^ @rbx ^ 0x6 & @rbx < (0x9) + @r9 & @rdi & $teb >> +$ip ^ 20 << 0n1 ^ 0y10011)  { test_statement(0x20E4);  while  ($proc & @r8 ^ @rbp | @r8 | -@rbx | 11 < $proc & @r8 ^ @rbp | @r8 | -@rbx | 11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 ^ $ip | $ip))$proc) ;  /* This is a not closed comment } else { test_statement(0x2457);  This is a not opened comment */ }
$error$
$end$
3541
 if ($ip + 0n15 << $buffer << @rdx & $buffer << ~0y10 >> @rax & 0y0 & $proc | $proc >> $ip | @r10 >> @rdi | @r12 & $proc ^ @rdi | @r9 ^ $teb <= ~0y10001 + (@r10) << @r8)  { test_statement(0x247A); } else { test_statement(0x1361);  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
3542
 if (~@rax + @r8 >> @r10 << @r11 & @rbp & $thread >> @rdi & (@rax) & $thread ^ $thread << @rsp >> ~@rdx > $thread << @r12 >> @r13)  { test_statement(0x982); ; }
$error$
$end$
3543
 if (-@rdx << @rax >> @rbx >> -@rbp ^ @r8 & $proc & @r10 & @r10($buffer + +@rsp >> ~16 & 0y1111 << 0n13 & 0x8 >> @rsi & @rdi | @rbx | $proc >> (@rbx) & @rax)  { test_statement(0x1979);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +$thread & $proc ^ @r8 ^ +-@rdx | -(13) <= @r9 ^ @r9) ; } elsif (@r9 & @rbp ^ @r8 ^ @r11 != $teb ^ @rax & 0n16) { test_statement(0x193D); ;  break;  for (@rax = @r10; 0xD != $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($proc == +0y10001)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3544
 if (@rbp + @r8 >> 0xF & ~@rax >> @r11 & 17 ^ ($buffer) ^ @rsi >> $proc ^ 0y110 & 0y100 ^ $thread ^ (@rsp) | @r10 >> @rdx >> @rax ^ (@r13) & 22 >< @rsp << $ip & 0n6 & $teb ^ -@r9 << @r8 >> @r10 | $thread & @r11 & -~0y111 ^ @r13 ^ $thread & @r13)  { test_statement(0x957); } else { test_statement(0x1ABD);  if (@r12))@r12)  { test_statement(0x9D9); } elsif ($thread | 16))@r11) { test_statement(0x963); } }
$error$
$end$
3545
 if (@r12 + @r13 | @r11 << @r13 >> $ip >> ($buffer) & 0n3 >> (20) & @rsi ^ @rsp & @r12 ^ 0n16 & $thread | @rax >> @rbp & @r9 | $thread & @rdx | 0x11 >= @r12 + @r13 | @r11 << @r13 >> $ip >> ($buffer) & 0n3 >> (20) & @rsi ^ @rsp & @r12 ^ 0n16 & $thread | @rax >> @rbp & @r9 | $thread & @rdx | 0x11)  { test_statement(0x146B); } else { test_statement(0x1E1A); }
$error$
$end$
3546
 if (@rdi >> 0n12 << @r8 & ~@r13 >> @r13 >> ~~0n13 & @rdi >> -@rax & $buffer ^ @rdx & (@rdx) >> @rbp ; @rdi >> 0n12 << @r8 & ~@r13 >> @r13 >> ~~0n13 & @rdi >> -@rax & $buffer ^ @rdx & (@rdx) >> @rbp)  { test_statement(0x62B); } else { test_statement(0x16EB); }
$error$
$end$
3547
 if ($teb << +@r10 << +@rdx >> @rbx ^ @r13 << ($thread) & $buffer >> 0n13 | (@rdx) & @rax & @rbp ^ @r8 & $proc ^ @r8 | @rsi & $teb | @rax | $thread == $ip << @rsi << @rdi >> (@rdx) << 0n3 & @r13 & 0 & @rsp ^ +@rax >> $buffer ^ 0n9 ^ $teb ^ @rdi | 6 & -$teb & @rdx | $proc & ~4 & @rsi ^ $teb ^ $thread)  { test_statement(0x26C);  /* This is a comment */  /* This is a not closed comment } elsif ($ip >> 0n10 | -$thread >> +$buffer ^ @rbp & @rdi <> ~@rbp >> $buffer & 0x13 & -@r9 ^ @rsi >> $buffer & $buffer ^ @r11 & @r8) { test_statement(0x641); ; } elsif (@r12 >> $buffer & 0n11 & 0 ^ @r11 & @r9 @r12 >> $buffer & 0n11 & 0 ^ @r11 & @r9) { test_statement(0x5F1);  /* This is a comment */ } elsif (@r13 ! @r13) { test_statement(0x1B41); } elsif (0y10000 ^ @rsp | @r11 | ~3 <> $teb) { test_statement(0x15FC); } elsif (@r9 | @rbx ! @r12) { test_statement(0x1FA9); } elsif (@r12))@r12) { test_statement(0x1335); } elsif (~(@r11))@r9) { test_statement(0x166B);  This is a not opened comment */ } elsif (@r8))@rdx) { test_statement(0x14B6); } else { test_statement(0x11CF); }
$error$
$end$
3548
 if (@rbp + @r13 >> ~$teb << @rsi >> 0y11 >> @r9 & @rdi << @rdx & @r8 & $buffer ^ 16 << @rsi ^ @r13 >> 0y1111 | 0x3 & 0y10 & @r13 ^ @rsp ^ @rdx & 13 ; @rbp + @r13 >> ~$teb << @rsi >> 0y11 >> @r9 & @rdi << @rdx & @r8 & $buffer ^ 16 << @rsi ^ @r13 >> 0y1111 | 0x3 & 0y10 & @r13 ^ @rsp ^ @rdx & 13)  { test_statement(0x18E2);  This is a not opened comment */ } elsif (@rdx << @rdx == @r10 << $buffer >> @r13 >> @rbx ^ $proc >> @r8 & -$buffer & 0x8 | -@r11) { test_statement(0x1217); } else { test_statement(0x1ABB);  /* This is a comment */  while  (14 | @r12 ; 14 | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3549
 if (23 >> @r10)23 >> @r10)  { test_statement(0x1574);  if (@rbx & (@r11) ^ @rax ^ @rdi @rbx & (@r11) ^ @rax ^ @rdi)  { test_statement(0x1EDF); } else { test_statement(0x175C); }  break;  if (@r11 ; 0n8 | @r13)  { test_statement(0x15E0); } else { test_statement(0xC68); } }
$error$
$end$
3550
 if (@r12 + @r12 << @rsi << @r13 ^ @rax << -0y10001 >> @r8 >> @rsp = @r12 + @r12 << @rsi << @r13 ^ @rax << -0y10001 >> @r8 >> @rsp)  { test_statement(0xE5E); }
$error$
$end$
3551
 if (+$buffer >> @r11 << @rbp >> @rbp & @r8 << @r11 & $buffer ^ 6 << ($teb) >> @rax +$buffer >> @r11 << @rbp >> @rbp & @r8 << @r11 & $buffer ^ 6 << ($teb) >> @rax)  { test_statement(0x2101); }
$error$
$end$
3552
 if (@rdi >> $proc << @rsp >> @r8 >> @r10 ^ @r9 | ~@rax << 0n3 & @rdi >> $teb & $teb | 0x0 ^ @rsi & @rsp ^ @rsp ^ 0n10 | $teb & $ip ^ @rdx | 0n6 @rdi >> $proc << @rsp >> @r8 >> @r10 ^ @r9 | ~@rax << 0n3 & @rdi >> $teb & $teb | 0x0 ^ @rsi & @rsp ^ @rsp ^ 0n10 | $teb & $ip ^ @rdx | 0n6)  { test_statement(0xD9);  for (val = 10; @rsp ^ 0n2 | $teb ^ @rdi | $proc | @rsp < @rsp ^ 0n2 | $teb ^ @rdi | $proc | @rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (14 ^ @r8 >> $teb ^ $buffer | +~@r11 & ~@r10 & @rax ^ @rbx & @rax ^ 0y1 ^ 20 < 14 ^ @r8 >> $teb ^ $buffer | +~@r11 & ~@r10 & @rax ^ @rbx & @rax ^ 0y1 ^ 20) { test_statement(0x1924); } elsif (-@rax >> 0n6 & @r8 -@rax >> 0n6 & @r8) { test_statement(0x1FCD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 != 0y1100 | $thread) ;  /* This is a comment */  /* This is a not closed comment @rax = @rax ; } elsif (@r12 > @r12) { test_statement(0x2AD);  /* This is a not closed comment  if (2 ! 2)  { test_statement(0x1F5A); } else { test_statement(0x1CF7); }  break; } else { test_statement(0x25DD); }
$error$
$end$
3553
 if (@rsp + @r8 >> $proc >> @r11 | $thread << @rsi >> @r12 ^ $teb >> @rsi ^ $teb)$thread + @r8 >> @r10 >> @r11 >> $teb ^ (@rdx) << 4 & ~$buffer >> @r13 & $proc ^ +@rax)  { test_statement(0xA13);  while  (~@r10 | @rax | ~@rbx == ~@r10 | @rax | ~@rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb ^ 0xE >> @rdi ^ @r11 | @r12 >> ~0n5 & @rdi & $proc ^ $thread & 0x10 ^ @rbx ^ @r12 | $ip ^ @r12 | 0x1 ; $teb ^ 0xE >> @rdi ^ @r11 | @r12 >> ~0n5 & @rdi & $proc ^ $thread & 0x10 ^ @rbx ^ @r12 | $ip ^ @r12 | 0x1) { test_statement(0x1075); } elsif (@r11 & @rdi & @rsi ^ 0n18 | $ip | 0y1111 | @r9)0y111 >> @r10 & @rax) { test_statement(0xD8F); }
$error$
$end$
3554
 if (@rsp + @r10 >> @r10 << -@r12 & @rsp & 10 >> @rbx & 3 & $proc ^ @rdi << 2 & @r12 >> @r13 | 0y0 >> $teb >> @rax & @rsi | $thread >> 0y110 ^ @rsp ^ 0y1010 | $buffer & $buffer ^ (20) ^ 0y1101 | $thread ^ @r8 >< 2 + ~$ip << @r11 << 0y1 ^ 0n4 & 14 ^ +~@r10 & @rsp & @rax)  { test_statement(0x2047); } elsif (-@rsp >> @rbx & +~@r10 >> $teb & @rsp = @rsp << $thread >> $buffer ^ @rdi >> (0y100) | @r11 >> 0n4 & $buffer & $thread ^ 21 & ~@r11) { test_statement(0x1020);  This is a not opened comment */ } elsif (@rbp >> $proc | @rsp ^ 13 | @rdx ^ @rdx)0y11 & @rdi ^ @rax & @rsp | @rdi) { test_statement(0x1FE7);  for (; $thread <> $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } else { test_statement(0x22D8);  This is a not opened comment */  for (val = 10; @rsp | @r13 <= @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
3555
 if ($thread << @r8 & -$thread | @r12 << 0x0 ^ $proc & 0y101 & -0y10 ^ @rsi = $thread << @r8 & -$thread | @r12 << 0x0 ^ $proc & 0y101 & -0y10 ^ @rsi)  { test_statement(0x224C); } elsif (@rsi >> @rbp & 0xC & ~-@rbx & $thread ^ @r12 >> 0n8 & $ip | @r9 & ~0x2 < 0y1110 << @rsi >> @r12 & @r9 | @r11 & (20) | +@rsp ^ 0n10 ^ @r8) { test_statement(0xF84); } else { test_statement(0x6BF); }
$error$
$end$
3556
 if ($thread + @rax << @rsp << @rsi | 3 << @r11 ^ @rax & @r9 ^ @r10 | @r11 >> 0y10 ^ ~$thread ^ @r8 ^ @r8 = $proc >> $thread >> ~-(@r8) >> $proc & @r12 & @r10 >> 0y11 | 0n18 >> @rdi ^ @rax >> $proc ^ @rbx)  { test_statement(0x1517); } elsif (@r9 << 20 & $buffer ^ $ip @r9 << 20 & $buffer ^ $ip) { test_statement(0x14); } elsif (@rbx >> 0x11 ^ +0xC ^ @rbp ^ 0x9))@r9 & @r11 & $buffer) { test_statement(0x11BE); } elsif (@rax ^ $ip 12 & $buffer ^ @r9 ^ (0x13)) { test_statement(0xD79);  This is a not opened comment */  // /* This is a comment  } elsif (-$ip)2 | @r13 | $buffer) { test_statement(0xA14);  // /* This is a comment  } elsif (@r8))@r8) { test_statement(0x26ED);  // /* This is a comment   // /* This is a comment  } elsif ((~-$thread)((@rdi) { test_statement(0x138); } elsif (@r12 >= @r12) { test_statement(0x325); }
$error$
$end$
3557
 if (~@rbp << @rdi << @r11 >> $ip(($teb + @r8 << @rax & +0y100)  { test_statement(0x1BB2);  if (@rax($ip & ~~@rsp ^ @rdx | @rax)  { test_statement(0x1466); } elsif ($teb | @r11 >= $teb | @r11) { test_statement(0x17DF); } elsif ($thread | 0n10 < @rax) { test_statement(0x2190); } elsif (@r11 == @r11) { test_statement(0x8AE); }  for (val = 10; @rsp ^ @r13 | ~+@rax | @r10(@rsp ^ @r13 | ~+@rax | @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x891);  // /* This is a comment   break; }
$error$
$end$
3558
 if (@r9 + (@r9) << @rsi << $buffer & 13 << @r11 >> 0n10 & @rdi <= @rsp << 0y10 << 0xC & @r11 << @rdx & 2 >> @r13 & @r12 & @rax | -@rsp | $thread & @rbx ^ @r10 & @r11 ^ @r12 | 0x7 & 0x0 ^ @rdx ^ @r9 | $thread ^ 0n5)  { test_statement(0x1D1);  /* This is a not closed comment  break; val = 0 ^ 0y111 | ~@rbp | 0y10 ; } elsif (+@r11 >> @r10 >> -@r9 & @r9 >> @r13 & @rdx & $thread ^ -$thread & 3 ^ @r13)@r11 & @r13 >> 0x7 & @r11 | @r9 ^ $ip ^ 0y10000) { test_statement(0xEE); } elsif (@rdx & @r11 & ~@rsp)@rdi >> $ip & @r12 & @r11 ^ @r9 ^ $proc ^ @rdi | @rsp | @rsp ^ $teb | $buffer) { test_statement(0x1117); } else { test_statement(0x101D); }
$error$
$end$
3559
 if (0x2 >> @r12 & $proc >> @r8 >> -$teb & @rdx ^ $proc << 0x1 >> 0x7 >> @r12 & $proc | @rsi >> -@r13 ^ $buffer >> $teb | @r9 >> @rsp ^ @rdi & @r11 ^ @r11 ^ 12 | 0xB & $buffer(@rsp + 0y10011 << @rsi << @r10 & @rbx << @rdi >> $ip | @r13 & @rdi & (@r9) | @r9 | @rbp | $teb | @rsi | @r9)  { test_statement(0x13CF); } elsif (--0n10 << @rdi >> @rbx >> @r12 ^ @r8 >> @r13 & $ip ^ @rax & 0n19 ^ @r13 <= -@r13 >> @r13 & $proc) { test_statement(0x15FB);  /* This is a comment */ }
$error$
$end$
3560
 if (@r11 + @r9 << @rax >> $ip >> @r11 >> @rsp & ~@rsi << @r10 >> @rsp >> 0n14 & -~0y100 >> @rsi | 0n11 << +@r8 ^ 0y1111 >> @r9 & $thread < @r11 + @r9 << @rax >> $ip >> @r11 >> @rsp & ~@rsi << @r10 >> @rsp >> 0n14 & -~0y100 >> @rsi | 0n11 << +@r8 ^ 0y1111 >> @r9 & $thread)  { test_statement(0x1425); val = $thread & @r13 & 0xC | 0n14 & @r9 | 17 ^ @r11 | @r8 ; } elsif (@rsp >> $teb & (@rsi) & @rax ^ $ip & (0x10) ^ @rsp & @rsi | @r12 & @r13 | ($proc) < @rsp >> $teb & (@rsi) & @rax ^ $ip & (0x10) ^ @rsp & @rsi | @r12 & @r13 | ($proc)) { test_statement(0x2451); } else { test_statement(0x10DA); }
$error$
$end$
3561
 if (+@r8 + @r11 << @r11 >> $thread & @rax >> @rsp & @r12 | @r12 & $teb >> @r12 & @rbp & $buffer | @r10 ^ @rdx & $thread))~@rdi + +@r10 << @rsi >> @rbx | $proc << -$ip & @r9 >> @rdi & @rdx & @r11 ^ @r12 ^ @rsp ^ @r10 ^ @r13 | @rbx >> @r11 & 14 & $ip ^ $teb & ~@r12)  { test_statement(0xAE5); } elsif (@rax >> ++@r9 >> @rdi ^ ((-@rbx)) | @rbp >> -@r11 & $ip ^ +@r9 & @rdx | @r10 & 0n0 ^ @rbx <= @rax >> ++@r9 >> @rdi ^ ((-@rbx)) | @rbp >> -@r11 & $ip ^ +@r9 & @rdx | @r10 & 0n0 ^ @rbx) { test_statement(0x403); @rax = +@rbx | ~-@rsi | @rdi ; }
$error$
$end$
3562
 if (0x0 + @r10 & 0n12 << @r11 & $thread | @r9 << @r12 & @rax >> +@r11 & -$ip & @rdx ^ @rdi >> @r11 ^ @rdx ^ +@rdx ^ $teb | @rbp & $ip <= @rax & $thread)  { test_statement(0x1472); } elsif ($teb | 0n17 >> @rbx & +$thread ^ 0n3 & @r12 ^ @r9 ^ @rsi | -0y101 ^ $buffer | @r13 ^ 21 > @rdx << 0x3 >> +@rax >> @r12 | (@rdx) >> 0y100 & @rbx & +$teb | @rdx & $ip | @rdi ^ @rax | @rbx) { test_statement(0x12C2); } elsif ((@r10) ^ -0n13 & @r13 ^ @r8 ^ @r13 | @rdi ^ @rsi <= 10 >> $ip ^ 12 & @rdi ^ @rdx ^ @r10) { test_statement(0x12AB); } elsif (@r8 & @rdi | @r12 ^ 0x5 > @r8 ^ @rsp) { test_statement(0x1CD3); }
$error$
$end$
3563
 if (0xB + @rdx << @r9 >> 0y1001 << +@rax & ~@r13 << @rbx ^ @r12 << ~@r8 >> (17) ^ @r10 >> @rdx ^ +$teb ^ $thread | @r9 << @rbp & @r10 >> 0y1110 ^ +$thread & @rbp & @rbx | $buffer >> @r12 & @r13 & @r8 ^ $buffer ^ -(@rsi) | $thread ^ @rdx ^ @rsi | $buffer = +0n16 + ~@r8 << @rbx & 0xE << $thread >> @rdi & @rbp >> $proc ^ $teb >> @rdx ^ 5)  { test_statement(0x122C);  /* This is a comment */  if (0n16 ^ -@r9 | 22 | @r13 == 0n1 ^ ($proc) | 0y1)  { test_statement(0x604); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi | ($teb) ! @rsi | ($teb)) ; } elsif (@rsi << @rsi & ~@rsp ^ 0n9 >> $thread & @rsp | ($teb) & @rsi ^ @r10 & $proc ^ $ip(((@rsp) >> @rax & @rdx & @r11 & $teb ^ $proc >> @r12 & $teb ^ ~@rbx & (7) ^ @r9) { test_statement(0x2076); } elsif (@r11 < @rax & 0x4 ^ $teb ^ @rax | @rdx) { test_statement(0x721);  while  (@r12 >< @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r10 ;  break; } elsif ($proc | @r12 ^ @rdx >= $buffer) { test_statement(0x1BEA);  break; } elsif (0n9 ^ 12 <= @rsp ^ @rdi) { test_statement(0x4E6);  This is a not opened comment */ } else { test_statement(0x2702); }
$error$
$end$
3564
 if ($teb + @r11 << @rsp & $proc << (@r8) >> @rdx >> ~$buffer <= $buffer + @rsi << @rdx << 0n11 >> @rbx << @r11 >> @r8 | $teb ^ @rax & @r9 & $thread ^ $ip & 0x13 ^ @r8)  { test_statement(0xFA3); } else { test_statement(0x212E); }
$error$
$end$
3565
 if ($teb + @r9 >> @rsp >> 6 >> $buffer & $teb >> $ip | @rbp << +@rax(0x0 << 0n2 << @r13)  { test_statement(0x14D); }
$error$
$end$
3566
 if (@rsp + @rsp >> @rax << 0x7 >> $ip(0y110 << @rbp << @rdi >> 23 ^ $ip >> $proc >> $ip | $teb << @rdi >> @rdi >> @rbp | @rsp >> 0y1 ^ $buffer & @r10 | 10 ^ @r9 ^ @r11)  { test_statement(0x1FE7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y10 | 0n5 | ~@r10 | @rbx >< $thread & $proc | +@rdi | 0y1 | @rsi) ;  /* This is a comment */ } elsif (+@r8 << (@r13) & 0x11 & $buffer ^ @rsp & 0y10011 & @rsp ^ @rbp ; @rsp << @r10 & @r12 >> @rbx & @rbx) { test_statement(0x1190); } elsif ($buffer >> @rsi & @rdx | @rax & +0x11 ^ $thread)@rbp) { test_statement(0x102A);  This is a not opened comment */ }
$error$
$end$
3567
 if (@r11 + @rsp << @rsi << $buffer >> 0y1110 << $thread & $buffer ^ 2 >> ~12 ^ ~0n15 & $proc & @rbx >= 0y10000)  { test_statement(0xB5);  This is a not opened comment */ } else { test_statement(0x1E2B); }
$error$
$end$
3568
 if ($ip + -@r8 << @rbp >> @rbx >> @rbx >> ~@rbp ^ @r9 << @rax >> @rbx | $ip & $buffer ^ $thread >> $thread @rsp >> ~$buffer & $proc << $buffer ^ @r9 << ((1)) >> $teb & $thread & $thread & @r12 ^ @r9 >> @rdx | @r10 << +@rsp)  { test_statement(0x23F0);  break; } elsif (@rsi >> 17 ^ @r11 >> (@r10) & @rax & @r12 ^ @r11 & @r10 | (0y100) >> -0y1110 & @r10 ^ $proc & @rsp > @r11 << $proc >> ~@r8 >> @rsi & 0x9 & @r9 ^ @rdx & $ip & $proc ^ @rbx & @rbx ^ 0n8 ^ @rbx | @r11 >> @rsi ^ @rdi & @rdi | @rsp & @rsi) { test_statement(0x20AD); } elsif (0n3 >> ($proc) & @r13 | @r9 & @rdi ^ @rbx ^ +@rdi >< 0n3 >> ($proc) & @r13 | @r9 & @rdi ^ @rbx ^ +@rdi) { test_statement(0xE35); ;  // /* This is a comment   while  ($ip))0n1)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x2072);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 ^ @rbp != @r8 ^ 1) ;  /* This is a comment */ }
$error$
$end$
3569
 if (@rsp << @rbx ; @rsp << @rbx)  { test_statement(0x829); }
$error$
$end$
3570
 if (@rdx << @r12 & -~@rsp << 0x3 ^ 0y1 >> @rbp >> +@rdx ^ @rbx >> @r10 & @rbp & @rdi ^ 12 & 0x9 ^ @r10((0x4 + 0x13 << $buffer << @rbp & @r11 ^ @rax << 0n2 >> +@r11 & @rax >> @rax & @r9 ^ 0n16 ^ (-@rsp) & @r12 ^ @r9)  { test_statement(0x7E8); }
$error$
$end$
3571
 if (@r13 >> @rbp << +$teb & (0x3) >> $buffer & $proc ^ @rdi & @rax & @rax >< 2)  { test_statement(0x17CF); } elsif ($teb & @rsi >> @r9 | @r9 & $thread & @r13 ^ $proc ^ @r12 ^ @r13))@rdx) { test_statement(0x1009); } elsif (@r11 >> @rbp & $ip & 0x0 | @rdi)0y10000 >> 0x6 & @r8 ^ -@rdx | @rdx & ~@r13) { test_statement(0x2351);  if (@r10 < @rax)  { test_statement(0x1970); } } elsif (+$proc | @r11 ^ @rbp | @r10 >= 0x4 & $proc | @rax | (@rsi) | 1) { test_statement(0x13FF); } elsif (0y10 | 0n12 | $thread >= 0y10 | 0n12 | $thread) { test_statement(0x1E30);  This is a not opened comment */  if (@r9 >= 0x1)  { test_statement(0x1C75); } } else { test_statement(0x136A); }
$error$
$end$
3572
 if (@r13 + @rdx << @r12 << @rbp & $thread << @rbp >> @r12 & @rax & @rsp & @r12 | @r12 >> 13 ^ 0n5 & 0x13 >< @r13 + @rdx << @r12 << @rbp & $thread << @rbp >> @r12 & @rax & @rsp & @r12 | @r12 >> 13 ^ 0n5 & 0x13)  { test_statement(0x96B);  if ($thread ^ ($proc) >< 0y110 ^ (+@r13))  { test_statement(0x1AFB); } elsif (@rbp ^ @rbp | @rsi >< @rbx | @r10) { test_statement(0xC63); } } elsif (@r13 >> @rbp | @r10 >> $proc & 0y101 & -+@rsp))@r13 >> @rbp | @r10 >> $proc & 0y101 & -+@rsp) { test_statement(0x8A9);  break; } else { test_statement(0x111); }
$error$
$end$
3573
 if ($thread & -@r8 ^ ~$buffer << @rdx & ~+@rdi >> @r11 ^ @rbp >> +0n4 & @rax ^ @r11 & @r10 <= $proc >> $buffer | @r10 & @r12)  { test_statement(0x25E); } elsif (@rbx >> 0xD & @r13 ^ @rsi ^ 6 ; $ip >> $proc | @r11 | @rsp ^ $ip | $teb ^ (12)) { test_statement(0x923); } elsif (0n14 >> ~++@r13 & (@r11) ; @rbp & 0xE ^ -0n7 & 1 ^ @rbp ^ 7) { test_statement(0x17BF); } elsif ($teb & @r9 > (@r12) & @rdx ^ $teb) { test_statement(0x13BE); } else { test_statement(0xF6F);  This is a not opened comment */  while  (10 <= @r13 | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   for (@rax = @r9; (-@r9) ! +@rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3574
 if (@r10 >> @rsi << @rbx >> @rdx >> $thread & 22 & (@r11) ^ @r9 >> $buffer ^ @rdi ^ @r11 ^ @r9))@r11 >> @r10 >> 11 >> +0y111 ^ -$thread << @r11 >> @rbx & $thread >> @rdx & (@r8) & @r13 ^ @rsi >> 16 ^ @rax & @r8 | @rbx << @rdi >> @r9)  { test_statement(0xCB4); ;  while  (@r10 ^ 0x4 | @rax <= @r9 | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
3575
 if ($thread + $proc >> 0xE >> @r12 >> 15 & @rax << ~@r10 >> 0x1 >> @r11 & 0y1100 >> @r8 >= $teb << ~@r10 & 0xC << @rdx >> @r8 >> $teb & @rdi >> +@r13)  { test_statement(0x12AA); } elsif (-@rsp >> $teb ^ @rsi ^ -@rsp | @rdx | $teb != -@rsp >> $teb ^ @rsi ^ -@rsp | @rdx | $teb) { test_statement(0x9B2); }
$error$
$end$
3576
 if (0x9 + @r8 << +@rbp << $proc & @rbp << @r13 >> @rdi >> $thread & $teb >> $proc ; $buffer + @r10 << 3 >> 6 & -@rsi & @r11 & 0x1 & @r9 ^ @rbp & 0n9 ^ -@r13 >> @r8 | ~$buffer >> +@r9 & @rdi >> @rbp)  { test_statement(0x1C1B);  while  ($buffer & @rbx >< 0y1)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip << @rdx >> -@r11 >> @rbx & -$buffer | $proc ^ @rsp & $ip ^ +$thread ; @r12 & $teb >> @r13 ^ @r9 >> +$ip & @rbx ^ $proc ^ 17 ^ $thread) { test_statement(0xDB2);  for (@rax = $ip | @r12 | @r9; @r12 | $thread @r12 | $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (-0xC >> @rax ^ $teb ^ @r13 ^ $teb | @rsp & @r8 ^ ~13 | @r11 | @rdx = $thread & @rsi ^ @rbx & @r10 ^ @r10 ^ @r11 | $thread & @rdx | 0y11 | $ip | 0x11) { test_statement(0xD21); } elsif ($thread | @rbp ^ @r9 | -$teb | @r10 <= @rsp ^ @rdi ^ $ip) { test_statement(0x69A); ; } elsif (@r9 ! @rdi | @r9) { test_statement(0x4EC); } elsif (~@r9 | (0y1010) = $teb) { test_statement(0x1F68); } else { test_statement(0xFF1); @rax = -$ip & @r8 ;  if (10 | +@rsp ! 0n6 | @rax)  { test_statement(0x1B32); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc <= $proc) ; }
$error$
$end$
3577
 if (@r12 + @rbp >> 0x6 << $ip >> 16 & 0n8 >> $ip >> ~@rsp & $ip >> $buffer & (-@r13) & @r11 ^ ~@rdx >> @rdx >> @r11 & @r11 & @rdx & @rdi <= @r13 + @rbp >> @r10 << $proc & @rax << 0n5 >> 0n17)  { test_statement(0x11FB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread ^ $teb | @rbx < 0n19 ^ @rbx) ;  if ($buffer | ++$ip $buffer | ++$ip)  { test_statement(0x22BC); }  // /* This is a comment   // /* This is a comment  } elsif (@r10 & @rax >> @rax <= +@rsp << $proc >> 14 & 0y0 ^ 13 & ~@rdi | @rsi >> @rbx & @rsp & 0xB) { test_statement(0x18E3); } elsif ((~@r12) | @r13 & @r8 ^ ~0xA | @rsi >= @rbp & $teb & $ip ^ $proc | @r12 ^ $proc | 21 ^ @rsp | $buffer | @r8) { test_statement(0x144B);  This is a not opened comment */ } elsif (+@r12 & $proc ^ (@rbx) ; @rsi ^ @rsi ^ @rsp) { test_statement(0x1672); } elsif (0n16 | $ip | +$ip)0n16 | $ip | +$ip) { test_statement(0x2105);  This is a not opened comment */ }
$error$
$end$
3578
 if (0n3 + @r10 << @r12 >> -(~@r10) << @r13 >> -@r9 >> @rdx ^ $thread & ($proc) & @rsp & 0n8 ^ $buffer & @rax ^ @r8 != $thread >> @rax >> @rsp ^ +$proc ^ (0y101) & $ip & @r11)  { test_statement(0x3A2); }
$error$
$end$
3579
 if (@r9 + ++3 << $thread >> ~$teb & @r9 << @rbx | +$buffer << @r9 >> @rdi & $buffer >> $ip & @r13 | @r10 & $proc & @rsi ^ 0n10 & @rdx | @r10 & 0n16 ^ @rsi | $ip ^ $ip >< 0x11 << @rax << 0y1110 | @r10 << @rax >> @r9 >> @rdi)  { test_statement(0x78E); } elsif (4 >> @rdx & (@rsi) >> @rdi ^ @rax & 0x8 & @rbx | @r12 >> @r12 & @rsp | 0y1100 ^ @rsp ^ @rax | @r13 ; 4 >> @rdx & (@rsi) >> @rdi ^ @rax & 0x8 & @rbx | @r12 >> @r12 & @rsp | 0y1100 ^ @rsp ^ @rax | @r13) { test_statement(0x208D);  // /* This is a comment  } elsif ((0n1) >> @rbp & (@rdx) & ~@r10 ^ @rsi > (0n1) >> @rbp & (@rdx) & ~@r10 ^ @rsi) { test_statement(0x887);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n5 | @rbx(0n5 | @rbx) ; } elsif (@rax & 13 ^ $teb ^ @rsi | 11 ^ 3 | -@r10 ! @rax | @rax | $proc | ~6) { test_statement(0x881);  /* This is a not closed comment  while  (0x0 >< @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x77A); @rax = 0n2 & +$ip ; }
$error$
$end$
3580
 if (@rdx + 15 >> @r12 >> $teb | ((~$proc)) & (@r11) ^ @r11 >> 5 & (@rsp) & @rsp | $teb >> @rsi & @rdx & 0n5 >= @rdx + @r13 >> @rdi << @rax >> 0n7 & @rsi << $thread >> @r9 & +@r12 ^ @r8)  { test_statement(0x1888); ; } elsif ($proc << 0n16 & 0n13 | @rdi >> @r13 & $thread ^ $teb ^ @rax | @r13 ^ $teb | ~$proc ! +@rsp << 0x1 >> @r12 & ~@rdi >> 0n4 & @r11 ^ @r9 >> @rbp & @r9 & $buffer) { test_statement(0xF9D);  while  ((~@rax) ^ $teb = @rax ^ @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif (0y11 ^ 0xF & 7 ^ @r11 ^ @r9 | 0x10 ^ +--0n1 ^ @r10 = $buffer ^ @rdi | @r12 & +0x12 ^ 0n1) { test_statement(0xA18);  // /* This is a comment   /* This is a not closed comment  while  (@rbx))@rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x192A); }
$error$
$end$
3581
 if (@r11 << $thread << $teb & @r10 << @r9 & @r11 & -@rsp & @rbp ^ 21 << -@rdi & @r8 & @r11 | $thread << @r13 >> @r11 >> 0y1010 | @rsi >> @rdx & $thread | $ip & -@r10 | ~@rdx <> @r11 << $thread << $teb & @r10 << @r9 & @r11 & -@rsp & @rbp ^ 21 << -@rdi & @r8 & @r11 | $thread << @r13 >> @r11 >> 0y1010 | @rsi >> @rdx & $thread | $ip & -@r10 | ~@rdx)  { test_statement(0xD37);  /* This is a not closed comment } elsif (+@rsp & ~@r9 >> @rax & 1 & $thread ^ @rbp))@rsp >> @rbp >> @rdi & @r12 & @r13 ^ @rbx >> $ip ^ @rdi ^ @r9 | @rax >> @rdi ^ @rbx & @rsi ^ @rax ^ 10) { test_statement(0x22B);  if (@rsi | $thread @rsi | $thread)  { test_statement(0x25FD); } elsif (0y10001 | $proc >= $teb) { test_statement(0x439); } } elsif (4 | @rdx & 0xE))@r13 >> 0y1111 & @rdx & $proc) { test_statement(0x6FA); }
$error$
$end$
3582
 if (~@r9 & $thread >> @rsp ^ ~@r12 << @r11 & @r9 >> @r10 | @r9 & @rbp($proc & @r11 >> $teb >> $thread & @rax ^ @rbp >> $thread | $thread)  { test_statement(0x221F);  break;  /* This is a not closed comment  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer <> $proc) ; ; } elsif ($teb << @r9 >> @r12 >> @r11 & 0n0 >< $teb << @r9 >> @r12 >> @r11 & 0n0) { test_statement(0x20D);  for (@rax = @rdx ^ @rbp | @r9 | @rsi; 0xF ^ $teb | @rsi)0xF ^ $teb | @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1362); }
$error$
$end$
3583
 if ($buffer + @rsi >> @rax << @rbp >> $teb >> @rsp & 0n9 >> 0n7 | ((@rbp)) >> @rsi >> $thread & (@rdi) >> @r10 ^ @r11 == $buffer + @rsi >> @rax << @rbp >> $teb >> @rsp & 0n9 >> 0n7 | ((@rbp)) >> @rsi >> $thread & (@rdi) >> @r10 ^ @r11)  { test_statement(0x37D); } else { test_statement(0x155E);  break; }
$error$
$end$
3584
 if (@r11 + 0x2 << 0x0 << @r13 ^ $thread & @rdi | @r10 << -$ip >> ~@r10 >> @r12 | $proc ^ 0y111 ^ ~@r9 ^ $proc | @r8 & @rbp | -0n6 ^ $thread ; @rbx ^ @r8 >> +0y1110 >> +$thread ^ @r8 & 0x5 & 0n8)  { test_statement(0xEAE); } else { test_statement(0x7B8); val = @r9 & $ip | 0y1111 ^ +@r11 ;  This is a not opened comment */  /* This is a comment */ val = @rbp ; }
$error$
$end$
3585
 if ($proc >> @r11 >> $thread & $teb | @rbp >> @rdi >> @rbp & $thread >> @r8 & @r13 ^ $proc != $proc >> @r11 >> $thread & $teb | @rbp >> @rdi >> @rbp & $thread >> @r8 & @r13 ^ $proc)  { test_statement(0x25F5);  if ($buffer | @r11 != @r13)  { test_statement(0xA8B); } else { test_statement(0x1B03); }  for (val = 10; @rbx ^ @rdx(@rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3586
 if (@rbx << (@rax) == @r9 << @rbx & @rsi >> @rax ^ @rbp << 7 >> @r9 >> +@rdx)  { test_statement(0x106); } elsif (@r8 << @r8 ^ (6) ^ @rdi & $thread > @r8 << @r8 ^ (6) ^ @rdi & $thread) { test_statement(0x2510); } elsif (@r8 & @rax ^ @rsp | $teb != @r12 ^ -@rsp | @rdx & +0y110 | @r11 | @rbp | +@rax) { test_statement(0x1886); } elsif (@rbp & 0y100 ^ $ip ^ (@r8) | 0x6 | 0y10010 != $teb ^ @rsp ^ @rax) { test_statement(0x76C); @rax = $ip ;  /* This is a not closed comment val = @rdx ; }
$error$
$end$
3587
 if (@rbp + @rbp & @rax << 0y10001 ^ @r10 >> @rsp ^ 0y1)0xD & ($buffer) << @rdx ^ @rsp << +@rbx >> $teb ^ 0y10000 >> @rsi | @rax ^ 17)  { test_statement(0xCFA);  for (val = 10; $teb ^ 0xA | 0y1110 | ($buffer) @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3588
 if (17 << @r11 << @r12 & @rbx << $thread ^ $thread ^ @r8 >> @rbp & -1 >< ((@rdx)) & -@rbx ^ +@rsp << +~+@rdx >> @rdi | 13 << ($buffer) & +0y1101 >> $proc & ~@rsi & @rdi | ~@rsp >> $ip & @rdx ^ $proc & @rsi ^ @rsp)  { test_statement(0x843); } elsif (0y10000 >> @rax >> @r10 & $thread | 7 >> @rax = @r8 << @r10 | $ip & $teb ^ @r10 & 23) { test_statement(0xD49); } else { test_statement(0x81F); ;  /* This is a not closed comment }
$error$
$end$
3589
 if ((@r10) >> @rdx >> @r8 >> @r8 & @rsp >> 0y1000 >> 0y10 | -0n18 >> 0y101 ^ @r11 >> @r8 & @r9 | @rax & ($thread) <> $ip + @rbx << @r13 << $teb >> @rax >> +0n19 ^ -@rsi >> @r9 | $buffer << @r8 >> 0y111 >> @r10 & $teb >> $ip)  { test_statement(0x1C19); } elsif ($teb >> @rax & -+@rbx & 0x10 ^ @r11 & @r10 & 13 ^ @r12 | @rdi >> @r8 ^ @r13 & 11 ^ @r8 ^ (@r8) < $teb >> @rax & -+@rbx & 0x10 ^ @r11 & @r10 & 13 ^ @r12 | @rdi >> @r8 ^ @r13 & 11 ^ @r8 ^ (@r8)) { test_statement(0x41B);  // /* This is a comment  }
$error$
$end$
3590
 if (7 + ++@r11 << @r8 & @r12 >> @r9 >> 0n18 & 0y1001 & @rdi & @rdi ^ 0y1111 << @rax & @r13 ^ @r12 ^ $thread ^ ~@r10 ^ @rdi))@r11 + @rsi & $ip << $teb ^ 0x2 << (-(@r10)) >> @rdi & +@r8 ^ @r9 >> $ip ^ @rbx & @rbx)  { test_statement(0x210E); } else { test_statement(0x1FD2); }
$error$
$end$
3591
 if (@rbp + @rsp | @rax << @r9 >> 0x4 >> @r9 & 0n11 & 0x6 & @r10 | $ip >> -$proc & @rdi ^ @r12 | $ip ^ @r9 | 0n5 ^ @r13 >= @rbp + @rsp | @rax << @r9 >> 0x4 >> @r9 & 0n11 & 0x6 & @r10 | $ip >> -$proc & @rdi ^ @r12 | $ip ^ @r9 | 0n5 ^ @r13)  { test_statement(0x291); } elsif (@r11 << @r11 >> @r12 & @r13 >> @rbp & -~$teb & +@r11 | 1 >> $ip | $buffer >< @r11 << @r11 >> @r12 & @r13 >> @rbp & -~$teb & +@r11 | 1 >> $ip | $buffer) { test_statement(0x19B7); }
$error$
$end$
3592
 if ((~$thread) + 21 << @rbx >> @rsp >> @r11 & ~$thread >> @rdx & $proc & @r9 & @r13 ^ @rbp >> $teb & @rbx >> $ip & $buffer ^ 0x10((~$thread) + 21 << @rbx >> @rsp >> @r11 & ~$thread >> @rdx & $proc & @r9 & @r13 ^ @rbp >> $teb & @rbx >> $ip & $buffer ^ 0x10)  { test_statement(0x1A89); } elsif (@r9 << 0x2 >> @rdx >> 0n19 & @rsi ^ @rdi >> @r10 & +0y101 ^ $buffer & -@r12 | @r9 ^ @rbx < @rsp << @r8 >> $proc & $proc >> $thread ^ @r11 >> @r9 & @rdx & 0y0 ^ @rbx & $ip ^ @rsi ^ (@rbp)) { test_statement(0x1CD3); } elsif (-@rbp >> @r11 ^ @r9 & (@r9) | @r10 & $thread <= -@rbp >> @r11 ^ @r9 & (@r9) | @r10 & $thread) { test_statement(0x1C51); } elsif (@r9 & @rsi ! @rsi & @r12 | @r12 | @r9 | @rdx) { test_statement(0x510);  while  (0n7 >< @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r10 ^ @rsp == @r12 ^ @r9) { test_statement(0x17E);  // /* This is a comment  ; ; } elsif (+$proc <> @rdi | $thread) { test_statement(0x1DF0); }
$error$
$end$
3593
 if ($ip)$ip >> @rdx >> @rdx >> @rdx | 16 >> $teb & $ip >> @rdi ^ @rax & 0x5 | @r10 >> @rbx & @rdx & @rdi)  { test_statement(0x8EE); } elsif (~@rdx << @rsp & +$thread ^ (@rsi) & $ip | @rbx & +@r13 | 0xC & $teb <= ~@rdx << @rsp & +$thread ^ (@rsi) & $ip | @rbx & +@r13 | 0xC & $teb) { test_statement(0x15F); }
$error$
$end$
3594
 if (0y0 >> (-@rdi) >> $thread >> @rdx(@r9 >> @rbp << ~@r12 ^ @r12 << @rbp >> @r12)  { test_statement(0xC0B); @rax = 0y1 ^ @r11 ;  if (@r13 ^ 2)~$ip ^ @r11 | @rax)  { test_statement(0x1FD4); } elsif (-@rdx >= @r8) { test_statement(0x6C1); } elsif (@r9 ! @rdx) { test_statement(0x4DC); } } else { test_statement(0x81E);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@r13 | @rsp = -@r13 | @rsp) ;  for (val = 10; (@rbx) (@rbx);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rsp <> @rsp)  { test_statement(0x783); } ; }
$error$
$end$
3595
 if (@r8 + @r12 & @rax << ~@r11 <> @r8 + @r12 & @rax << ~@r11)  { test_statement(0x84C); } elsif (@r9 << $teb == @rbx << @r10 >> @rdx & $teb >> 0y1010 & $ip & @r13 ^ @r8 ^ -0y100 | @rdx ^ $thread ^ ~-@rbx) { test_statement(0x1E99);  while  (0n11 ^ 2 | @r10 $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
3596
 if (0y1101 + 0y111 << (@r12) << 0n18 >> $buffer >> ~0xD >> @rbx & @rbp >> @rax >> 14 & @r12 >> @r11 ^ @r10 ^ $thread & @r11 & @r9 ^ -@rsp & $teb | @r9 << ~$ip | @r12 >> @r8 & @rax = $thread + $proc & (@r9) >> @rsi >> 10 & @r13 ^ ~$proc & @r12 >> +0y10000 ^ $proc)  { test_statement(0x1E60); } else { test_statement(0x2148);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 15 >< 15) ; }
$error$
$end$
3598
 if (@rax >> $buffer << @r9 >> +$thread >> -$ip ^ $thread & @r12 & @r9 ^ -@rdx & @rax & 13 ^ @rax & @rsi | @rdx << 0y10010 >> @r8 & +$ip ^ @r9 >> $proc ^ $buffer ^ @rbp | @rsp ^ @r11 & (0n12) > @rax << $thread & @rbp | -@r8 ^ @rsp ^ @rdi ^ @rsi ^ @rdx)  { test_statement(0x2D1); ;  if ($buffer | ~0n1))16 ^ 0y1 | ((-(@r10))) | @rsp)  { test_statement(0xC86); } elsif (@rdx(@rax | @rax) { test_statement(0x37C); } } elsif (@r9 & ~@r9 >> @rbp != $ip << @rsp ^ 0y10011 | -$proc >> (@rbx) ^ @rbx) { test_statement(0x2432);  if (@rsi | @r9)@rsi | @r9)  { test_statement(0xD43); } elsif (@r12 $proc) { test_statement(0x34); } elsif (@r10 >= @r12) { test_statement(0x1EE1); } else { test_statement(0x968); }  /* This is a comment */ } elsif (0y10010 & ~@r12 & (@rdx) | @rax | (@rsi) | +$ip | @r8 < 0y10010 & ~@r12 & (@rdx) | @rax | (@rsi) | +$ip | @r8) { test_statement(0x2EE); } elsif (@rbx & 0n12 ^ +$buffer >< @rsp) { test_statement(0x23E6); } else { test_statement(0x24BD); }
$error$
$end$
3599
 if (@rbp << 0y10010 >> @r13 << ~0n15 & @rax >> @r12 = @rdx << @rdi << $ip | $thread & @rdx >> -$ip & (@rsp) & @rsi ^ @r8 & @rdi & (@rbx) ^ @rsp | $ip)  { test_statement(0x1B7); } elsif (-@r9 << +(13) | ($buffer) >> @rdx & -~0x13 & @r10 ^ $teb & 0x3(-@r9 << +(13) | ($buffer) >> @rdx & -~0x13 & @r10 ^ $teb & 0x3) { test_statement(0x6ED);  // /* This is a comment  } elsif ($proc & @rsp | @r9 | @rsi ^ @r10 | @r9 | $buffer != @r12 & @rbx & 13) { test_statement(0x1E56); }
$error$
$end$
3600
 if ($ip + $thread & @r8 << @r11 & $ip >> $teb | -@r13 << $buffer ^ @rdi >> @r10 & $proc & @rbx))$ip + $thread & @r8 << @r11 & $ip >> $teb | -@r13 << $buffer ^ @rdi >> @r10 & $proc & @rbx)  { test_statement(0x1CB);  /* This is a comment */  break; } elsif (0xE << @r8 ^ @r13 >> @rdi ^ @r9 & $thread | (@rbp) >> @rbp((-@r9 << $ip >> @rbp | @r8 >> -$thread & $thread) { test_statement(0x1616);  // /* This is a comment   This is a not opened comment */  if (@r13((@r11)  { test_statement(0x252E); } elsif (@r8 >= @r8) { test_statement(0x2546); } elsif (0x12(@rsi) { test_statement(0x10A9); } ;  This is a not opened comment */ } elsif (0x0 >> $ip & (@r11) ^ $teb | @rbp & @r11 ^ @rdi ^ $ip | +~@rsi ! 0x0 >> $ip & (@r11) ^ $teb | @rbp & @r11 ^ @rdi ^ $ip | +~@rsi) { test_statement(0x75E);  while  (@r10 | $proc >= 5)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3601
 if (@rsp >> @rsp >> $proc & @r12 << ~@rsi >= @rsp >> @rsp >> $proc & @r12 << ~@rsi)  { test_statement(0x1669); } elsif ($buffer >> @r10 & @rsi >> @rax))$proc >> +@r9 & (0y110) & $buffer ^ @rdi & $teb & 0x13 | @rsi ^ 0y10011 & @rbp | @r9 & 22) { test_statement(0x25E6);  /* This is a not closed comment ;  if (+$thread < +$thread)  { test_statement(0x35F); } val = @rdi ;  if ($ip (~@rsi))  { test_statement(0x6CA); }  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp(@rsp) ; } elsif ($buffer & 15 | 6 & @rdx != $buffer & 15 | 6 & @rdx) { test_statement(0xC19);  /* This is a comment */ }
$error$
$end$
3602
 if ($thread + @rdx << ((@rax)) << -($teb) & +17 << @r8 ^ @rbp << @r9 >> ~@r13 >> @rbx > $thread + @rdx << ((@rax)) << -($teb) & +17 << @r8 ^ @rbp << @r9 >> ~@r13 >> @rbx)  { test_statement(0x1602); } else { test_statement(0x1624); ;  break; }
$error$
$end$
3603
 if (@rax << ~@r11 << $proc >> @r10 << @rsi & @r13 << 0x1 & @r8 ^ (0x11) >> $ip ^ @r9 ^ 20 & @r9 | 1 >> 0y111 >> @r12 & @rsp >> $buffer & @rbp & ~$ip | 0y1100 | @r12 & @rdx ^ +0x6 ^ @rax)@rax << ~@r11 << $proc >> @r10 << @rsi & @r13 << 0x1 & @r8 ^ (0x11) >> $ip ^ @r9 ^ 20 & @r9 | 1 >> 0y111 >> @r12 & @rsp >> $buffer & @rbp & ~$ip | 0y1100 | @r12 & @rdx ^ +0x6 ^ @rax)  { test_statement(0xE8F); } elsif (@rdi >> @rax >> @rsp >= $proc << 0n6 ^ @r11 ^ 0xC ^ @rbp) { test_statement(0x69B);  /* This is a comment */ } elsif (@rbx & $thread & $proc ^ 0n13 @rbx & $thread & $proc ^ 0n13) { test_statement(0xF0F);  // /* This is a comment  }
$error$
$end$
3604
 if (@rdx << $teb << @r9 ^ $ip >> 0x13 & @r12 >> @rsi (@rbp) >> $buffer >> @r13 & @rsp << @rax >> @r11 ^ (@r11) << 0y10010 | 0y110 << @r9 >> ($buffer) >> @rsi)  { test_statement(0xF74); }
$error$
$end$
3605
 if (+@rsi << $buffer & $proc >> @rsi & @rsi >> $ip & @rsp ^ 0n8 & @rsp & -@rsp & $buffer ^ (0y1100) & @rax & -@rbx ^ $proc @rbx + -0n13)  { test_statement(0x14E1);  break;  if ($teb ^ (-@r11) | @r9 <> -@rbp | +-@rbp)  { test_statement(0x16A9); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp($proc | @r9) ; } elsif (@rax >> @r9 >> -@r13 & @r11 >> 5 ^ 0x9 >> $thread & $thread & @r10 == @r11 >> @r8 >> 0n14 & $buffer) { test_statement(0x1E6E); } elsif (@r8 < @r8) { test_statement(0x1DD7); } elsif (@rsi ^ $buffer | 0xD | @rdi(@rsi ^ $buffer | 0xD | @rdi) { test_statement(0x456); }
$error$
$end$
3606
 if (0xC >> $thread & $proc >> $ip ^ @r9 << ($buffer) & @rbx & @r10 ^ -@rbx >> @rdi & @rax & ~@r12 ^ @rdx ^ @r11 ^ @r13 | 22 >> $proc & @r13 >> +-$teb & +--$ip <> @r13 << $proc >> $teb ^ 0xD << @rax >> 13 & -@rbp)  { test_statement(0x55E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@r11) & 0y110 | 0y10011 ^ $ip $thread | @rdi ^ @r8 | ~$teb | $thread) ; } elsif (@rdi ^ 0y1000 ^ @r12 | $ip & -$teb & ~$teb ^ @rbp ^ $proc ^ $buffer | @r11 | 0y110 >= @rsp & @rsi ^ @rsp >> @rbp & 17) { test_statement(0x20B3); val = (+@r11) & @r9 ^ 10 ; } elsif ((@rdx) | @rbx | +$thread | $proc | 0n0 == $teb & @rsp ^ @r11 | @rbx & @rbp | @rbp) { test_statement(0x17C4); val = @rdi | @rsp ; } elsif (@r11 & $buffer <= @r11 & $buffer) { test_statement(0x14B8); }
$error$
$end$
3607
 if (~$ip + $thread << @r11 >> 0y1110 << $proc & @r10 << 14 >> @rbp >> 0y100 & @r13 >> @r13 ^ @r8 << @r8 >> 1 >> 0n6 & 0x5 >> $proc ^ @r8 >> @rbp >= ~$ip + $thread << @r11 >> 0y1110 << $proc & @r10 << 14 >> @rbp >> 0y100 & @r13 >> @r13 ^ @r8 << @r8 >> 1 >> 0n6 & 0x5 >> $proc ^ @r8 >> @rbp)  { test_statement(0x238A); } elsif (0n6 << @r12 ^ @r8 & @r10 | @rsp & @rsp ^ (@rbx) & @r8 < 0n10 & $thread | ~@r10 >> $buffer & 5 | @rdx | @r13 | @r13 | 0y0) { test_statement(0x724); } else { test_statement(0x2570);  This is a not opened comment */  while  ($teb >= 0y10001)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3608
 if (-@rsp + 0xD << 0x7 << $thread ^ @rax ^ ~$teb & @r11 ^ @rdi ^ @r10 ! 0x11 + @r9 << @rdx << @rsi >> $proc >> $buffer >> @r13 ^ @rax << @rbp & $thread)  { test_statement(0xE60);  if (@rdi ^ @r8 | @r10 ^ @rbp <> -@r12 & (@r8))  { test_statement(0x1842); } elsif ($thread ^ @r10(0y100 ^ @r10 | @r13 | @rsp) { test_statement(0x148B); } } elsif (@rdi >> $thread | @r9 >> @r8 & @r10 & $proc((@rax << @r12) { test_statement(0x464); ; }
$error$
$end$
3609
 if (@rdi + $ip >> @rdx | @r13 << $buffer >> $thread >> +0n8 ^ (0x8) & $proc & @rdx ^ @r12 | @rbp >> @rsp | ~@rdx ^ @rax ^ $teb))+-@rdi >> @r9 << ~$teb & @rdx & (0y110) & 0xF & @rbx ^ $buffer ^ $thread >> @rsp ^ @r11 | @rsi << @rax ^ $thread | $buffer & @r11 & @r10 | @r12)  { test_statement(0x1BD);  /* This is a comment */ }
$error$
$end$
3610
 if (@r10 + $proc >> 0y1011 ^ @rbp >> @r10 >> +(@rbx) & @r11 | $buffer ^ $buffer | 0n6 >> @r10 ^ @rdi ^ @r13 ^ 0y1 <> $proc >> @r9 >> @rbp & $thread)  { test_statement(0x208C); } elsif (@r8 << @r11 ^ @rbx >> @r8 & +(0y0) | @rdi >> 16 & @rsi ^ +@rax ^ @rbx > $ip << 0n17 & 22 >> $thread & @r13 & @r9 ^ @r13 ^ $buffer ^ @rsi | @rax | 0y10010 & 0x2) { test_statement(0xD4); }
$error$
$end$
3611
 if (@rsp + $teb >> $buffer ^ $ip >> @rbx & $teb >> ~@r12 ^ @rdx >> -3 | @rsi << (@rax) >> 5 ^ @rdi ; 0xC >> -0n4 << $ip >> ~$buffer & $thread << $thread & @rbx | @rdx << @r9 & $buffer & @r13 & (@rax) ^ 0n10 >> @r11 | @rbp >> @rax)  { test_statement(0x1758);  break; } elsif (+@rdi & $thread >> @rsp(@r9 >> +@rdx & @rdi & ~@rdx & @rdx | @rsi >> @r8 ^ @rax & -@r10 | @r13 ^ @rsi) { test_statement(0x1226); } elsif (@r9 >> $thread & @rdi != @r9 >> $thread & @rdi) { test_statement(0x17B9); }
$error$
$end$
3612
 if (@r9 & @rdx >> 0y10000 & @rbx >> @rsp & $thread <= @r9 & @rdx >> 0y10000 & @rbx >> @rsp & $thread)  { test_statement(0x1891); } else { test_statement(0x9AE); }
$error$
$end$
3613
 if (@r10 >> @r13 << (@r10) ^ -@r9 & @rbp & @rdx = @rbp >> $buffer << @r8 & $thread >> @r10 >> +@r10)  { test_statement(0x1D12);  /* This is a comment */ } else { test_statement(0x1D); }
$error$
$end$
3614
 if ($buffer + +$thread >> $teb ^ @rsp << @rsp ^ @r8 >> @rsi ^ @rsp | @r11 << (($proc)) ! $buffer + +$thread >> $teb ^ @rsp << @rsp ^ @r8 >> @rsi ^ @rsp | @r11 << (($proc)))  { test_statement(0x2665); } else { test_statement(0x192F); }
$error$
$end$
3615
 if (0n0 + +$thread & @r10))~~$teb >> @r13 >> @r8 & +@rsi << (@r9) >> @rdi >> @rdx & @r10 & 0y1101 ^ +@r12)  { test_statement(0x1EDE); } else { test_statement(0x3BA);  if (6 ^ 0n1 | @r13 | @rbx((@rdi | $buffer | @r10)  { test_statement(0x181A); } }
$error$
$end$
3616
 if ((@rbp) + $teb << @r10 << @r13 >> @r9 & 0xA & @r10 >> $thread ^ 4 << 0y110 ^ @r12 >> @r13 & @r12 ^ @r10 | (@r10) << (@rdi) & @rbx)0y1111 << @r11 >> ~+0n17 << $teb >> -@rsi & ~@r12 >> $teb & -@rdi >> @r9)  { test_statement(0x11F8); ; } elsif (@r8 >> @rsi | @rax >> $proc & @rsp ^ @r9 & @rdi ^ @r8 ^ $thread ! 0y10001 & 0n7 ^ $proc ^ +@r10 ^ @rbx ^ @rbx | @r9 >> @r9 & @r10 & 0n1) { test_statement(0x1FB1);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc | @rbx > @rsi ^ @rdx) ; } elsif (@r13 & @rsi & @rbx ^ @rsi & $proc ^ @rsp ; @r13 & @rsi & @rbx ^ @rsi & $proc ^ @rsp) { test_statement(0x589);  This is a not opened comment */  while  (@r13 ; $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n13 ^ @rsp == 0n13 ^ @rsp) { test_statement(0xA53); ; } else { test_statement(0x2029); }
$error$
$end$
3617
 if (@rsi + @rsp != @rsi + @rsp)  { test_statement(0x9D9);  /* This is a not closed comment  // /* This is a comment  }
$error$
$end$
3618
 if (1 + @rdx << @r10 & @r10 << @rdx ^ @r11 >> 0x8 >> @r10 >= @rax ^ @rdx << @rbp & 0n10 >> @r13 | @rdx >> @rdi | @r13 & @rbx | -@r9 & 0x6 ^ 0x10 ^ @r9 | $thread | @r10)  { test_statement(0x52B); } else { test_statement(0x24D0);  for (; @r11 != 0n7 ^ 0y10000 | $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3619
 if (@rax + @rsp << 3 & 0y1111 & @rsi & @r11 ^ (@rbx) ^ @rax >> $teb | $proc >> @rdx & @rdi ^ @rdx >> (@r8) < @r11 & ~($ip) >> @rsi & $proc)  { test_statement(0x1713);  /* This is a not closed comment } else { test_statement(0x1C9D);  This is a not opened comment */  while  (@r9 | @rdx <= $thread | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
3620
 if (@r12 + 0x4 >> +@rsi >> $teb != @r12 + 0x4 >> +@rsi >> $teb)  { test_statement(0x2028);  while  (+@rax & @r8 ; +@rax & @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 ^ 0n10 ; 0n2 ^ @r8 | (0y1011) | $proc) ;  /* This is a not closed comment }
$error$
$end$
3621
 if (@r11 + --@r13 << @r11 << $teb & @r11 & @rdx <> 0y1111 << @r10 >> @rbx << @rdi >> $proc & (16) >> @rbp & @rdx >> @r12 & 0y1000 & @rbx)  { test_statement(0x26E1); }
$error$
$end$
3622
 if (@rdi | $thread & @r9 <= @rdi | $thread & @r9)  { test_statement(0x14EF); } elsif (~@r8 << $buffer & @rbp >> @rsi & $thread & $buffer ^ @r13 >> @rax & 0xC >< @r8 & $buffer | @r8 & @rsp & $ip | @rsp & +@rdi ^ ($proc) ^ @rsp | 0y1111) { test_statement(0x4A3);  break; } else { test_statement(0xAA3);  while  (@r11 > @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($ip | $thread -@rsp)  { test_statement(0x1531); } else { test_statement(0x19); } ; }
$error$
$end$
3623
 if ($thread + @rdx << @r8 >> $buffer << @r8 >> @rdi >> @r12 & @r11 >> @r10 >> $ip ^ @rbx ^ ~17 ^ $ip ^ @r13 ^ @rbp | @rax << @rdi >= @rax + 4 << @rbx >> ~0n6 & @r13 & 22 >> @r8 | (0x3) << 0n15 & @r11 & (($ip)) ^ ~0y1 >> 20 & $buffer ^ ~+-@r11 & +@r13 ^ @r8 | @r11 >> @r8)  { test_statement(0x11E2); } elsif (@rsp << @r12 & @r8 >> @rdi & $buffer == (@r13) << 0x11 >> @rsp & @r11 ^ $proc >> @rbx & @rdx & @rbp | @r11 >> 12 ^ @rsp & $thread) { test_statement(0x10D5); }
$error$
$end$
3624
 if (@r8 + $buffer = $ip >> $buffer << @r11 & -@rbp >> @rdx & $thread | @rdx ^ $thread)  { test_statement(0xEFD); } elsif ($ip << @rdx ^ $proc & @rsi ^ +@rbp >= $teb << $thread & @rax >> 0y1010 & 0y1010 & @r10) { test_statement(0xA16); }
$error$
$end$
3625
 if (@rsi & @rbp & -~@rbx & $buffer & @r9 | @rsi << +@rdi >> @rsi >> @r10 & ~-@rsi ; @r11 + @rbp ^ @rsp >> 20 >> 0n18 & @rbp)  { test_statement(0x594);  /* This is a not closed comment  // /* This is a comment  } elsif (@r11 & @rsp ^ -@r10 >> @rsp & $buffer & @r10 ^ 0xF | ~@rbp & @rbx = 0y101 << $proc & @r13 >> ~3 | $thread & @rax & @r9) { test_statement(0x1AB4);  /* This is a not closed comment  break; val = @r10 ;  break; } elsif ($ip >> (@rdi) & @r9 & $ip ^ @r12 & @rbp($ip >> (@rdi) & @r9 & $ip ^ @r12 & @rbp) { test_statement(0xDCD);  if (@rsi(($teb | $proc)  { test_statement(0x266F); } } elsif (0y1001 & @rbx | 1 | $thread | +(@r12)))0y1001 & @rbx | 1 | $thread | +(@r12)) { test_statement(0x1A76); }
$error$
$end$
3626
 if (@rdi ; @r12 << (@rbp) & ~$teb << -@rdx & $proc >> @r11 | $thread & @rdx >> @rbp & @r8 | @r11 ^ 0n17 ^ -@r9 | 0x4 & ~@rbx ^ @rbp ^ @rsp | @r9)  { test_statement(0x18A6); } else { test_statement(0x2603); }
$error$
$end$
3627
 if ($proc << 0n14 << $thread & @rbp << @r12 >> +@r11 ^ @r9 << 0n13 ^ @r11 >> @rdi >< @r9 + @rbp << ~@r8)  { test_statement(0xDDB); } elsif (@r12 >> @rbp <= 0n16 >> @rbx >> @rbp ^ -0n1 ^ 22 & @r8 | 0y1001 >> ~$teb & @rdx | $buffer & (@r10)) { test_statement(0x195B); ; } elsif (@rsi & $thread ^ @rdi ^ @rax ^ @r8 > 22 ^ @r11 & @r12 ^ @rdi | +@r9 & @rsi) { test_statement(0x7AF);  /* This is a comment */  This is a not opened comment */  /* This is a comment */  while  (($teb) >= ~@rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3628
 if ($buffer + @rbp ^ @rbx << ~+@r8 > $buffer + @rbp ^ @rbx << ~+@r8)  { test_statement(0xD5B);  This is a not opened comment */ } elsif ($proc >> $proc & @rbx & 21 ^ @r12 >> @rsp & @rsi((~0y1111 << 0n11 & 17 >> ~@rsp & $teb & @r8 ^ @rsi >> @r10 & @rbx) { test_statement(0x1BFD); } else { test_statement(0x13FE);  while  (@rbp ^ @rbp ; @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3629
 if (0y0 + @r9 << 0x7 << @r11 >> @rbx << @rdi ^ @r10 << (@rbx) >> (@rbp) >> $buffer ^ @rsi >> @rsi & @rdi & (0x5) == @r10 + @rbx >> @r8 << @rbp >> $ip | @r12 << +0y11 >> 0y1000 >> $proc & $thread & -$buffer & $proc | -@rsi >> $teb)  { test_statement(0x1435);  for (val = 10; @rax & @rsp ^ $thread ; $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi >> @r9 >> $teb & @r9 >> @r9 ^ @rax ^ @rsp ^ $ip == @rdi >> @r9 >> $teb & @r9 >> @r9 ^ @rax ^ @rsp ^ $ip) { test_statement(0x17F5); } elsif (@r13 & @r10 & ~$teb | @r13 ^ 0xD ^ 0x10 | @rbp | @rsp | @rdx ! @rbp >> $thread ^ @rax & 10 ^ @rbp ^ @r8) { test_statement(0xA5B);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread >= $buffer) ; } else { test_statement(0x2340); }
$error$
$end$
3630
 if ($thread + $thread << $teb << +$teb ^ $ip & 22 >> (@r10) & @rsp ^ ($thread) >> $buffer ^ (@r8) != $thread + $thread << $teb << +$teb ^ $ip & 22 >> (@r10) & @rsp ^ ($thread) >> $buffer ^ (@r8))  { test_statement(0x19D6);  break;  This is a not opened comment */ }
$error$
$end$
3631
 if (@r8 + 0n8 << @r10 << $proc >> -0y1000 >> $buffer >> @rbx ^ 0n9 << 0y1101 & -@r11 >> $proc & @rax & @rbx ^ @r9 >> 0n9 ^ +@rdx ^ $ip | -@rdi & @r8 >> 4 <> $teb << @rbx >> 10 | $buffer << @rax >> $buffer & @rdi >> -@r8 ^ 0n18 >> @rax)  { test_statement(0x220E); } elsif (@r10 << @r8 | @r13 & 6 & +@rsp ^ 6 ^ @rsi ; 0y1010 << @rsp ^ @r8 >> @r9 & (@rdx) & -@rbp | @r12 & $teb & 17) { test_statement(0x255D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8(@r8) ;  /* This is a comment */ } elsif (0y1100 >< 0y1100) { test_statement(0x82E);  while  (~@r8 != ~@r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x3 & $ip > 0x3 & $ip) { test_statement(0x1D21);  /* This is a not closed comment ;  while  (@rbp @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1CFF); }
$error$
$end$
3632
 if (10 + $teb << @r13 >> 0y1001 >> $ip >> $teb & 0xE << @r8 & 3 ! 10 + $teb << @r13 >> 0y1001 >> $ip >> $teb & 0xE << @r8 & 3)  { test_statement(0x1117); } elsif (@r11 << 0n12 >> @rsi ! @r11 << 0y10000 >> @rdi >> $buffer & @rbp >> $ip & @r10 & 13 ^ +$teb >> @rbx) { test_statement(0x21C5); } elsif (@rdx | @rbp ^ @rdx ^ +$thread == $buffer ^ 0y1 | $ip & $teb) { test_statement(0x2148); } elsif ($proc & 0x11 ^ @r9 ^ 0n14 | @rdx | ~@rsi >= @r12 & 0n4 ^ @rsi ^ $proc) { test_statement(0x9AA); } elsif ((@r12)(0y110 ^ 0y10000) { test_statement(0x23BE); } elsif (0x2 <= @r11 | @rsi) { test_statement(0x63F); } else { test_statement(0xD52); }
$error$
$end$
3633
 if ($teb + $proc >> @rdx >> $teb > $teb + $proc >> @rdx >> $teb)  { test_statement(0x1ECC);  /* This is a not closed comment } else { test_statement(0x40A); }
$error$
$end$
3634
 if ($buffer + $thread & @r10 << @rbx & @r10 >> @r12 | @rbx >> 0x4 >> ~@r9 & (@rsp) >> 0y1111 != @rax >> 0n14 >> $buffer >> @rsp & 0n8 << 0x13 ^ $thread << +@rdi >> @r9 & (-0x6) >> 0n19)  { test_statement(0x41);  if (@r12 & @r11 ^ 3 | $ip | 0xE ! @r12 & @r11 ^ 3 | $ip | 0xE)  { test_statement(0xF3A); }  /* This is a comment */ val = @rdi ; }
$error$
$end$
3635
 if (@r9 & $teb & $teb >> @r8 & @r12 & 0n6 ^ @r11 >> 2 < $proc)  { test_statement(0xA97); } elsif (~@r12 >> @rsi & @r13 & (@rax) ^ ~$proc >> @r13 ^ $ip ^ @r13 = ~@r12 >> @rsi & @r13 & (@rax) ^ ~$proc >> @r13 ^ $ip ^ @r13) { test_statement(0x1012); } else { test_statement(0x2FC); }
$error$
$end$
3636
 if (@rax + @r8 << @rbx << @r13 & @rbx >> @rax >> @r9 | $proc | ~@rdx >> @r9 & @r12 ^ $ip <= $thread + 0y100 & @rbx >> @rbx ^ -$teb & @r9 ^ ~$ip >> @r12 | @r13 & $teb & @rsi)  { test_statement(0x15AA); } elsif (@rdx << @r11 ^ ((0y0)) >> @rsp & @rsi & ($ip) ^ $proc & (0x1) | @r10 >> @r9 >= @rdx << @r11 ^ ((0y0)) >> @rsp & @rsi & ($ip) ^ $proc & (0x1) | @r10 >> @r9) { test_statement(0x82E);  break; } else { test_statement(0x57A); }
$error$
$end$
3637
 if (@rdx + @r13 << 0y1100 << @r10 & @r11 << @rax >> $thread & @rax >> $teb ^ $proc >> @rbx >> ~@r11 ^ @r8 >> (-@r9) & 0y1 @rdx + @r13 << 0y1100 << @r10 & @r11 << @rax >> $thread & @rax >> $teb ^ $proc >> @rbx >> ~@r11 ^ @r8 >> (-@r9) & 0y1)  { test_statement(0xAFC);  /* This is a comment */  if (@rdi != $ip | +@r9 | @r12)  { test_statement(0x409); } else { test_statement(0xFD5); } } elsif (@r9 ^ +@r11 & ~@r8 & @rdx ^ $teb & @rsp | @r12 >> (@rbx) ^ ~@r11 ^ @r10 | @rbp ^ @rdx ^ @rdi | @r12 ^ @rdi <= +@r9 ^ @rsp >> -(0x7)) { test_statement(0x225C); } elsif ($buffer >> $thread & @r13 & @r8 ^ $proc & @r11 ^ $buffer(($buffer >> $thread & @r13 & @r8 ^ $proc & @r11 ^ $buffer) { test_statement(0x239F); } else { test_statement(0xB37); }
$error$
$end$
3638
 if (@rbp >> $buffer | @rdx >> @r13 >> @r12 & 0y1100 >> $teb & -$thread | 7 >> @r12 & @rdi & 0n3 | 23 ^ $ip | @rdi | (0y11) < $ip << @rax & +(@r11) << @r12 >> @rdi >> @r11 ^ 12 >> @r13 >> @r11 & $teb)  { test_statement(0x15A9);  /* This is a not closed comment } else { test_statement(0x4E3);  // /* This is a comment   while  ($proc >= @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
3639
 if (@rsp + $buffer << $thread >> $thread >> $teb & ~-@rdi << 0x3 & @r9 >> 0n2 ^ @r10 << @rax >> @rdx >> @rdi & -0y1010 & @rdx & @r13 ^ -(@rdx) & -@r9 & @rsi | @rax >> $buffer >> @r13 ^ $thread >> 0y1 ^ +$thread & $proc ! @r12 + @r8 >> $thread << $buffer | $teb >> $ip ^ -@rax & +0y1101 ^ -0xC | @rdi >> @r10 & @r8 ^ @r8 & @r10 | @r10 | ~0)  { test_statement(0x2682); ; } else { test_statement(0x1887); @rax = 0 | $ip | @r13 | @r8 ; ;  This is a not opened comment */ ; }
$error$
$end$
3640
 if (0xE + --0y1000 & @rsi << +@rsi ^ @rax << @rbx >> @rax ! 0xE + --0y1000 & @rsi << +@rsi ^ @rax << @rbx >> @rax)  { test_statement(0xEA1); } else { test_statement(0x156E); }
$error$
$end$
3641
 if (7 + @r13 << $ip >> 0n10 | @rsi < 7 + @r13 << $ip >> 0n10 | @rsi)  { test_statement(0x18D4); } elsif ($proc << @rbx & @r12 >> @rdi | @r13 = @r12 << $ip >> $thread) { test_statement(0x1EC3); }
$error$
$end$
3642
 if (@r9 + @rax >> 0 >> @r12 & @rsi >> 0x9 >> 0y1010 | 0y101 << @rsp & @r12 ^ $proc >> -@r10 & $thread ^ --@rax & +0n1 ^ @rsi ^ @rbp | @rbx >> @r8 & @r8 & 0y1111 ^ -@rax))$thread << 0y11 << @r9 >> @r8 << @r8 >> 0x9 & @r10 << @r10 ^ $teb >> -@r13 >> @rax)  { test_statement(0x4C6); } elsif (@r12 >> @r12 >> $proc | 12 & 0x7 ^ -@rbp & $buffer | @rbx & (@r11) ^ $teb ^ 0y10011))@r8 << @r10 >> 0y111 >> @rsi ^ $teb & $ip & @r11) { test_statement(0x7E8); } else { test_statement(0x2651);  /* This is a comment */  if ($teb >< $teb)  { test_statement(0x5); } elsif (~$teb ! -@rsp) { test_statement(0xC4D); } elsif ($teb)@rsi) { test_statement(0x22DC); } }
$error$
$end$
3643
 if (~$thread & ~@rbp << @rbp >> @r11 | @rsp << $proc >> ($ip) ^ 0n3 ^ @r9 | $ip & @r11 ^ $proc & @rbp <= @r11 + @r10 >> 0y111 << (0n8))  { test_statement(0x1D50);  // /* This is a comment  }
$error$
$end$
3644
 if (@rbx & $proc & @rsi & @r11((0y111 << -0n8 & @rax << 20 >> 0xA >> -$proc ^ 0n14 << $thread >> +@r8 & @rdx & @rax & @rbp | @rsp << @rsi ^ $ip >> $teb)  { test_statement(0x3F3);  /* This is a comment */  This is a not opened comment */ @rax = @r11 ^ 15 ; } else { test_statement(0xEEC); }
$error$
$end$
3645
 if (@rax + @rbx & $proc >> $buffer >> 0n4 & 0n12 ^ ~$proc >> @rsi >> @rbp > @rsp + ~$buffer >> @r11 << @rdx ^ $proc >> $thread >> @r12 ^ $buffer >> @r10 & $teb & @r10 | -0x11 << @r10 >> @r11 & @r11 >> 20 & $buffer & $proc ^ @r12 >> @rax ^ $proc ^ $teb ^ @r8)  { test_statement(0x118B);  if (~$ip ^ 0y1001 ^ -+0y10000 >= ~$ip ^ 0y1001 ^ -+0y10000)  { test_statement(0x4B2); } elsif ($buffer = @rdx ^ @r8 | @rbx | $buffer) { test_statement(0x22AC); } elsif (0n13 $proc | (@r12)) { test_statement(0x1FD4); } elsif (-@rbp = @r8) { test_statement(0xF41); } elsif ($teb >= 0n7) { test_statement(0x20FE); } elsif (@r13(@r13) { test_statement(0x2119); } else { test_statement(0xFE0); } }
$error$
$end$
3646
 if (@rsp + $proc & @rsi << $thread >> @r10 & 0x4 >> @r12 & $thread & $thread))~@rdi)  { test_statement(0x10A4);  for (@rax = (@rdi) ^ 0y1001 ^ $proc | @rsp | @rbp; @r8 & $buffer ^ @rsp | @rdx((@rdx ^ -@rax ^ 0x12 | @r9 | @rbp | $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3647
 if (@rax + @rdx <= 7 & 10 >> @r8 | 0xB << @r11 >> @r10)  { test_statement(0x26B0); } elsif (0n16 >> $ip & ((@r9)) >> @rbp ^ @rsi >> 20 & @r9 | @rbx >> @r10 & @r10 ^ 0y10010 ! 0n16 >> $ip & ((@r9)) >> @rbp ^ @rsi >> 20 & @r9 | @rbx >> @r10 & @r10 ^ 0y10010) { test_statement(0x22BF); }
$error$
$end$
3648
 if ((@r13) << 0xC ^ 0x9 << ++@rbx | $thread >> @rsi & @rdi & +$ip & @r12 ^ 12 & 0n7 & $thread | (+@rdi) >> 3 & @rbp & @rdx ^ @rbp ^ --@rax ^ 0x11 | @r8 ^ @r12(0y111 + @rbx >> @r11 << 7)  { test_statement(0x1206); } elsif (-@rbx | @rdi ^ (-$ip) & $ip ^ 0n12 < -@rbx | @rdi ^ (-$ip) & $ip ^ 0n12) { test_statement(0x1611); } else { test_statement(0x231C);  This is a not opened comment */ }
$error$
$end$
3649
 if (@r10 << -(@r13) >> 0x9 << @r9 & @r13 << ($proc) ^ +0y1110 >> $thread ^ -21 & -(~@r9) ^ ($proc) & @r12 ^ @rsi ^ $buffer ; @r10 << -(@r13) >> 0x9 << @r9 & @r13 << ($proc) ^ +0y1110 >> $thread ^ -21 & -(~@r9) ^ ($proc) & @r12 ^ @rsi ^ $buffer)  { test_statement(0x1B6D);  for (; +--@r11 ^ @rdx | ($teb) ^ @r11 | @r8 | (@rdx) > +--@r11 ^ @rdx | ($teb) ^ @r11 | @r8 | (@rdx);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x921); }
$error$
$end$
3650
 if (@rbx + @r10 << +@r8 ^ @r12 >> $buffer >> @rdi ^ @rbx >> 0x5 ^ +0xD & @r11 | @rbp >> -0n18 & $teb & 0y0 != @rsp << @rdx ^ 0n4 >> $teb & @r8 | -~@r9 >> $thread ^ @r13 & @rax & +@rsi | $thread >> $teb & 17)  { test_statement(0x24D6);  /* This is a comment */ } elsif (@rbp | @rsi ^ $proc ^ ~$thread @r13 & @r13 | @rax) { test_statement(0x1D2E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ^ @rax | $proc | $teb)@rbp ^ @rax | $proc | $teb) ; } else { test_statement(0xE1A); }
$error$
$end$
3651
 if (@rdx + @r12 & @r11 << -@r8 >> @r10 ^ @r12 << $buffer ^ @r8 >> @r12 ^ 0n5 ^ 0n10 | $ip >> 0x6 & @rsi & @r9 | 20 ^ 6 ^ @r11 | 21 ^ @rdx | @r9 ^ $proc | @r13 | @r13 < 0n4 + $buffer | @rax >> $teb ^ $ip >> @r10)  { test_statement(0x1D34);  if (@r10 & $proc | @rdi ^ @r12 | @rsi == @r10 & $proc | @rdi ^ @r12 | @rsi)  { test_statement(0x1CDA); } else { test_statement(0x163D); }  This is a not opened comment */ } else { test_statement(0x1AEB); val = @rsi & $teb | @r11 ^ @rax ; }
$error$
$end$
3652
 if (+@rbp | 0n5 << @r12 | $buffer >> 13 & +@rsp <> $thread + @rbx << @r8 >> 0y1 >> (@rdx) >> 0n17 & @r8 << @r12)  { test_statement(0x1B94);  /* This is a comment */  if (@r11 ^ (@r13) | $proc == @r11 ^ (@r13) | $proc)  { test_statement(0x2165); } else { test_statement(0x1433); }  for (val = @rbp | 0x9; ~0x4 <= ~0x4;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif ($proc << @rsp & 10 >> @r11 & +~~~$thread & $ip(((0xB) & @r9) { test_statement(0x162B); } elsif ((0n0) >> @rsp & 0n14 ^ @rdx & @r8 ^ @rax ^ $buffer | @rsi ^ 1 ^ @rax >= (14) >> @r10 ^ @rdi | @rbp & @rbp ^ @rax ^ @r9 | $buffer ^ @rbp | (@rdi)) { test_statement(0x9BE); }
$error$
$end$
3653
 if (@r12 + @r13 << @rbx & @r10 & @r8 ^ @r10 ^ @r11 | @rdx & @rdx >> (@r11) & @r8 ^ (17) & @rsi | @rbx >> @rsi & -@rbx = 0y1011 + @rdx << @r8 << @r11 >> 0x9 ^ @rdx | @rbx << @r12 & +3 >> @r10 & @r9 & @rax | $thread >> @rsi & @r8 ^ @r11 & (0y10) ^ @r13 ^ 10)  { test_statement(0x334);  /* This is a comment */ ;  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 ! @r13) ;  This is a not opened comment */  while  ($teb ! @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r12 ; } elsif (@rbx & 0xD & +@r12 & @r12 ^ 12 <= 0y10000 ^ 0y0 & -@rbx & 0n18 ^ @rdx | @r9 >> (~0n2) & 0y100 & $buffer ^ @rbp & @rbx ^ @r9 | 0n13 | $thread ^ @r12) { test_statement(0x1339); } else { test_statement(0x2027);  for (val = 10; @rsi ^ @rsp ; 2 ^ @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3654
 if (@rbp + @r13 << @rax << 0n0 ^ $teb & 0n9 >> $buffer & @rsp & ~-10 | +@rdx << @rdi >> $buffer >= 0xC + ~(@r13) & @r8)  { test_statement(0x1097); ; ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -(@r12) <> @r11 | @rdx) ; } elsif (0n18 << @r13 >> 0y1000 & @rdx >> @rbp ^ @r9 >> @r11 ^ ~@r10 | +@r10 ^ $ip & $ip ^ @rbx > 0n18 << @r13 >> 0y1000 & @rdx >> @rbp ^ @r9 >> @r11 ^ ~@r10 | +@r10 ^ $ip & $ip ^ @rbx) { test_statement(0x19A9); } else { test_statement(0x874); }
$error$
$end$
3655
 if (@r8 + @r12 | @r12 & -@rsp >> @rdx ^ @rsi & @r11 == @r13 & $teb ^ $proc << @rbp & @r10 ^ @r9 & 0x2 & @rbx)  { test_statement(0x23A0); } elsif (+@r9 << @r9 & @r9 >> 0x3 & @rax & @rsi((+@r9 << @r9 & @r9 >> 0x3 & @rax & @rsi) { test_statement(0x1202); } else { test_statement(0x3C3); }
$error$
$end$
3656
 if (@rdi ^ @rdi << @r11 >> @rdi >> @rbx & @r13 >> @rsp & 0n6 < @rdi ^ @rdi << @r11 >> @rdi >> @rbx & @r13 >> @rsp & 0n6)  { test_statement(0xB09);  break; }
$error$
$end$
3657
 if ($proc + ~0n0 << 0y0 & $proc & @r12 & 0xF & @r10 ^ $thread >> @r12 >< @rbp ^ @rbx << @rbx & ~0xA >> @rdx & 0y1001 & @rsp ^ @rdi >> 0n11 ^ ~~@r13)  { test_statement(0x1F96);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc ^ @r12 | @r9 < @rax ^ @r11 ^ $teb | @rdx ^ @r8 | 0) ; } else { test_statement(0x2651);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 | @r11 | $proc == @r8 | @r11 | $proc) ; }
$error$
$end$
3658
 if (@r8 + @rax ^ @r11 << 0n6 | @r11 & @rsi & @rdi ^ 0y10010 & $proc & 2 ^ $proc ! @r8 + @rax ^ @r11 << 0n6 | @r11 & @rsi & @rdi ^ 0y10010 & $proc & 2 ^ $proc)  { test_statement(0x37E);  /* This is a comment */ } else { test_statement(0x5C); }
$error$
$end$
3659
 if (@rsi | 0n19 << @r10 ^ @rdx | @rdx >> +@rbx & 0x6 & (@r8) <= @rax << (@rdx) >> 0x11 << @r9 ^ @r12 << @r8 >> @rsp | $ip >> @r12 ^ +$teb >> @rdi & @r13 ^ @rsp ^ 0y0 ^ @r12)  { test_statement(0x18F7); val = @r9 >> @rsi ; } elsif (+@rsi << $buffer >> +@rbp & $ip >> @rax & -@r10 & @r10 ^ 0y1101 >> $buffer ^ ($teb) & $ip ^ (@r8) ; +@rsi << $buffer >> +@rbp & $ip >> @rax & -@r10 & @r10 ^ 0y1101 >> $buffer ^ ($teb) & $ip ^ (@r8)) { test_statement(0x6C0);  This is a not opened comment */ } elsif (@r13 >> @rsp & @r9 & $teb ^ ~@rsp ^ $thread ^ 21 | @rdi & @r10 ^ @rax ! @r13 >> @rsp & @r9 & $teb ^ ~@rsp ^ $thread ^ 21 | @rdi & @r10 ^ @rax) { test_statement(0x11D1); }
$error$
$end$
3660
 if (@rsp + @r13 >> (@r11) << (@rbp) >> @r9 & --$ip >> @rdx >> $proc & @rbx & 13 ^ @rbp >> @rax >> $thread & 0n1 >> @rbx & $ip == $thread >> @rsp >> $thread >> 5 ^ +@rbx << $teb >> @rsi | @rdx & @r9 & @rdx ^ @rbp >> @rsi ^ @rdi & @r10 | ~14)  { test_statement(0x1027); }
$error$
$end$
3661
 if (@rbp << @rsi << $thread ^ @rsp << 0n4 | -@rdi ^ @r9 & 0y10001 & 0n15 | $ip & @rsp | 0y0 ^ @r10 | $teb < ($ip) + @r12 << -$ip & $buffer << @r11 >> @rdx)  { test_statement(0xD79); } else { test_statement(0x15A);  if ($proc ^ @rdi))$proc ^ @rdi)  { test_statement(0xBCF); } else { test_statement(0x1A); } }
$error$
$end$
3662
 if (@r9 + $proc << $buffer ^ -@rdi & @rdx(@r9 + $proc << $buffer ^ -@rdi & @rdx)  { test_statement(0x21F); ; } elsif ($proc << +@rsp & @r10 >> +7 & 0y1111 & @rsp >< $proc << +@rsp & @r10 >> +7 & 0y1111 & @rsp) { test_statement(0x5D5);  if (-@r11 ^ 13 == @r8 | @rdi)  { test_statement(0xE7C); } else { test_statement(0x107A); }  // /* This is a comment   /* This is a not closed comment  if ($thread ; $thread)  { test_statement(0x24FE); } else { test_statement(0x143); } } else { test_statement(0x50B); }
$error$
$end$
3663
 if (-$thread | @rbx << $proc & ~@r13 >> +@r11 < -$thread | @rbx << $proc & ~@r13 >> +@r11)  { test_statement(0x21C2); } else { test_statement(0x1EA6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 ^ $buffer | $buffer | (7) > @r11 ^ $buffer | $buffer | (7)) ; }
$error$
$end$
3664
 if ($thread >> @r10 | 0n8 & @r12 >> @rdx ^ @rax >> @r10 ^ @rsi ^ $buffer ^ (@r9) | $proc >> @r13 & @r12 ^ @r12 & +0xA ^ $proc | @rax ^ @rbx | @r8 ^ $proc | 15 ; $teb + -0n15 & @r12 << @rbx >> 0x9 >> @r9 & 0n7 >> 0n4 | @rsp << @rbx >> @r12 & @rbp >> 0x2 ^ $ip >> -@rbp)  { test_statement(0x1EDF);  This is a not opened comment */  /* This is a comment */ } elsif (0n5 >> 0y1111 >> @r10))0n5 >> 0y1111 >> @r10) { test_statement(0x13D5);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ($thread) ^ 1 >= @rbx | $teb) ; } elsif ($thread >> $thread & @rsp & $proc <= @r9 >> @rsi & @rbx) { test_statement(0x372); } else { test_statement(0x1384);  for (@rax = $buffer; $ip | 0x0)@rsi ^ @rax | 0y111 | ~@r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3665
 if (@r11 << @r11 >> -@r10 << @rbx >> (@rbp) >> @rbx & @r13 << $buffer >> @r10 & @rbx >> $teb & $thread & @rdi)23 + $ip << 0y1111 << @rsp & 0n13 >> @rdi >> 0n19 & @rbp ^ @rsi & 0n12 ^ @rsi & 0x4 & +@rsp)  { test_statement(0xCD9); }
$error$
$end$
3666
 if (@rbp + @r12 ^ @rbp >> +$teb ^ @rsp >> 0x9 | @rbx & 0y1 >> $proc & 0y10011 & $proc | @r13 & @r8 >= @r13 >> $proc >> 0xA)  { test_statement(0x1E62); } else { test_statement(0xC09); }
$error$
$end$
3667
 if (@r8 >> ~@r12 >> 0n13 & $thread << $buffer >> $proc >> @r11 ^ @r8 << 0n17 & 0x2 ^ +@r11 ^ 0xA ^ 0y1000(($ip + @r9 << @rsp << @r8 >> 15 & $ip << @rbp ^ @r12 << -@r13 >> $thread & @r8 & $proc | (0x0) >> +((@r8)) >> 0n4 ^ (~@r9) & 16 & 20)  { test_statement(0xD29); } elsif (@rsp << @rsp & 23 >> @r9 & 11 ^ $buffer & $proc & 0y1100 ^ +0y10000 & @rbp ^ @rbx ^ @rdi ; 0x3 << $thread >> @rsp ^ -@r10 >> @rsp & @r12 ^ @r10 ^ $buffer | @r11 ^ @r12 & @r13 | 0x5 & +@rsi ^ $teb | $buffer ^ @r11 | @r12) { test_statement(0xDE7); } elsif (@rbp & (+0x5) & $teb ; ~@rdi >> $proc & $teb & @rax | @rdi ^ @rsi ^ @r8 | @rbp | 0y1100 | (@r12)) { test_statement(0x1977); } elsif (@rdi & @rsp | @rsi >= @rdi & @rdx) { test_statement(0x1D0F);  if (@r10 <> @r10)  { test_statement(0xCDE); } elsif (@r9 > @r9) { test_statement(0x13D); }  This is a not opened comment */ ; } elsif ($teb | 0xB >< $teb | 0xB) { test_statement(0x17F9); } elsif (@rax >= @r12) { test_statement(0x23B1);  while  (@r10 == 0n9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; val = $buffer ; }
$error$
$end$
3668
 if (@rsp + $proc << @rsp << @rsi >> @r13 << $thread))@rax + $thread >> @rdi << @r10 ^ @rbp & @r8 >> 0y100 & @rsi & $teb ^ @rbp >> (@rbx) & 0n7)  { test_statement(0x416);  This is a not opened comment */ } else { test_statement(0x405); }
$error$
$end$
3669
 if ($proc + 0n3 << @rax >> @rsi >> @r10 == $proc + 0n3 << @rax >> @rsi >> @r10)  { test_statement(0x99B);  /* This is a not closed comment  if ($ip ^ @rbx ! $ip ^ @rbx)  { test_statement(0x261); } else { test_statement(0x11BA); } } else { test_statement(0x980); }
$error$
$end$
3670
 if (0n10 + (~@rax) | @r8 >> ($teb) & @r10 & (0n8) & @rdx ^ @rdx ^ 0x12 ^ 0n7 ^ $buffer | (@rbp) >> $teb ^ 15 ^ @r10 | @rsp & ~@rdi | @rbp | @rsi <= @rax + $buffer << @rbp << @r13 >> @rbx << +0y11 >> @r11 >> $proc)  { test_statement(0x1A35);  /* This is a comment */ }
$error$
$end$
3671
 if (@rdx + (@rsi) = -$ip + (@rsp) >> @rax & $thread >> @r10 >> $buffer ^ @r13)  { test_statement(0x618); } elsif (0y1100 >> $buffer | $buffer | $thread & $ip | @r12 ^ @rsi | 15 != @r11 << -@r10 & @r10 | $proc & $teb & @rsp) { test_statement(0xDB0);  /* This is a comment */  for (val = 10; $buffer @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3672
 if (@r11 >> -0y1111 & @rsp >> 0 ^ 0y1001 << $buffer >> 16 >> @r10 & @r11 >> @r8 ^ $teb(@r11 >> -0y1111 & @rsp >> 0 ^ 0y1001 << $buffer >> 16 >> @r10 & @r11 >> @r8 ^ $teb)  { test_statement(0x863); }
$error$
$end$
3673
 if (@r11 & @r8 << -@rax & (@rsp) & 14 & @rdx ^ 0x2 >> $proc & @rdi >> @r12 | $thread >> @rbp & $ip >> @rdi & 0x6 & -@rbx ^ +@rax >> @rsi <= @r11 & @r8 << -@rax & (@rsp) & 14 & @rdx ^ 0x2 >> $proc & @rdi >> @r12 | $thread >> @rbp & $ip >> @rdi & 0x6 & -@rbx ^ +@rax >> @rsi)  { test_statement(0x47C); } elsif (@r9 << 0xF >> $teb = @rdx << 0n10 >> @rbp >> ((@rbp)) & 0n9 >> -0xA | 0n9) { test_statement(0xB46); } elsif (0n10 & $thread ^ 17 | @rdx | $ip = @r9 ^ @rdi | @rdx & $ip) { test_statement(0x22CD); } else { test_statement(0x570);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip ^ (+($thread)) <> $teb) ; }
$error$
$end$
3674
 if ($buffer >> $ip << @rsi >> 0 | @r11 >> @r13 & ($thread) >> @rsp & @r10 & 0xA | @r11 >> 2 & 0x2 & @r12 ^ ~0y1011 & +@r13 ^ 0y1001 ^ $ip | @r11 | @r11 | -@r10(-@rsp & 21 ^ $teb >> $proc ^ @rdx >> 3 ^ 0y0 & ($buffer) ^ 0n12)  { test_statement(0x4C5);  // /* This is a comment   for (val = 10; $ip ^ 0x0 | ($ip) < $ip ^ 0x0 | ($ip);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (+@r11 << @rsp ^ @rdi >> @r9 ! +@r11 << @rsp ^ @rdi >> @r9) { test_statement(0x196B); }
$error$
$end$
3675
 if (@rbp + $ip >> @r10 << $buffer >> @rsp & @r11 << @rsi >> $proc & @rbp ^ @r9 >> 0y1000 >> @r8 & @rbx >> @rbp & @rbp ^ @rsp >> +0x4 & @rbp(@rbp + $ip >> @r10 << $buffer >> @rsp & @r11 << @rsi >> $proc & @rbp ^ @r9 >> 0y1000 >> @r8 & @rbx >> @rbp & @rbp ^ @rsp >> +0x4 & @rbp)  { test_statement(0x199F); ;  /* This is a not closed comment }
$error$
$end$
3676
 if (+@r12 + @rdx << @r8 << $thread <> +@r12 + @rdx << @r8 << $thread)  { test_statement(0x1881); } elsif (@r12 >> 0y100 >> ~@rdi | 2 & $proc & $buffer ^ 0n14(($thread << @rax | $ip >> @r9 & @r9 & 0x9 ^ $buffer | @rsp & @rax ^ $proc ^ 0n6 | @rdx ^ @r9) { test_statement(0x1CDF);  for (val = 10; @rax ^ 0x12 | @r10 | $thread(-@r8 ^ $buffer | @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3677
 if (@r8 + $buffer >> @rdx << @rbx & @rax >> @rdx ^ @rsi << @r10 >> 0x4 >> @rbx ^ @r12 >> ~@rsp > @r12 << @r8 << @r11 ^ @r10 >> $buffer >> 10 & @r11 & @r12 ^ ~$teb)  { test_statement(0x7E3); @rax = @r10 >> 0y11 | -~0n14 & @rbp ^ @r9 | -@rsp ^ @rax | @rbp ; ; } elsif ($teb << $teb >> @r12 & ~@r12 >> 0x12 & -@rbx ^ @rbp & @r10 & @rdi ^ 22 ^ @rbx ^ ~@r8 = @rsi << @rdi & @rbp & 0n9 & @rsi ^ @r13 & @r10) { test_statement(0x5D1);  for (val = 10; ~@rbx | @rdi @rbx ^ @r10 | $teb | -@rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  if (@r11 == @r10)  { test_statement(0xB63); } else { test_statement(0x24AE); } } elsif (@r13 ^ @r13 | @rbx & $teb ^ $teb | -$ip ^ $teb | @rsp == @r13 ^ @r13 | @rbx & $teb ^ $teb | -$ip ^ $teb | @rsp) { test_statement(0x6E9);  /* This is a comment */ } elsif (0y1011 ^ 0n18 > @rsp & $buffer) { test_statement(0x158C); }
$error$
$end$
3678
 if (@rax + $buffer << @r10 ^ 0n13 << @rbx | @rsi & $thread >> ~~@rax | +$proc >> $thread ^ 0n11 & @r10 ^ @r10 ^ ~@rbx | ~$ip & 0x3 ^ @r12 ^ $thread ; +@r10 + @r8 | 15 >> $thread | $buffer >> 0y1011 & @r10 & @rsp ^ @rax & 0n3 ^ $thread)  { test_statement(0x1F4); } elsif (@rbp << 0y1110 & +@r10 & @r8)@rbp << 0y1110 & +@r10 & @r8) { test_statement(0x24D6); }
$error$
$end$
3679
 if (@rbx + $ip << @r11 & ~+@r11 >> +$proc >> -0y1001 & @rdx & +-@rsi & @rdx ^ 21 << @rbx & $thread >> @rdx & ~$buffer ^ -(@r13) ^ 6 & $teb ^ @rsi >< @rdi + @r13 >> @r12 << ~-@r12 >> 0n18 >> @rdx & @r12 >> @r13 >> @rax)  { test_statement(0x23C0); } elsif (@rbx << 0y1111 ^ 0y0 & @r13 & 0xB | +$buffer >> @rsi | @r12 ^ @r9 | 0y1011 | $proc <= @rdi << @r8 ^ -$proc | @r12 >> @r11 & @r10 & @r10) { test_statement(0x175A); } elsif (@r10 | $proc & @r13 | @r10 ^ @rax <= $teb >> @r9 & @rbx & @rdi | @rsi ^ @r13 ^ @rbx | +0n5 ^ (@r13) | 6) { test_statement(0x17B6);  This is a not opened comment */ } else { test_statement(0x2598); }
$error$
$end$
3680
 if ($ip + @r10 < @r11 & 0xA & @rdi >> @rax ^ @r11 ^ @rax >> @rsp ^ @rdx ^ $thread)  { test_statement(0x1D69); } elsif (-($buffer) << (@rsi) & +0xD >> @rsp & @rbp & @r13)@rdx >> @r12 ^ $proc >> @r13 ^ @r13 ^ 0x13) { test_statement(0x19CA);  break; } elsif (@r11 ^ -@r10 ^ @rdi != @rsi >> $teb & +($thread)) { test_statement(0xA72); }
$error$
$end$
3681
 if (@rdi + @r8 << $thread << @r10 & 5 << @rbx ^ $thread >> $buffer >> 20 ^ $ip >> $teb & $ip ^ @rax ^ @rbx ^ @rsi | $teb << 7 ^ @r9 ^ $buffer & @rbx | (~@rdx) >> +@rdi & @rax ^ @r12 ^ $proc | $teb & 12 < @rsp & @r12 << $thread ^ @rbx >> $thread >> @rsp ^ @r10 & 0y100 & $teb)  { test_statement(0x16AF);  // /* This is a comment   /* This is a comment */ } elsif (@r10 << @rbx > @r10 << @rbx) { test_statement(0x14A3); val = @r12 & @rsi ^ @r9 ^ 0n19 ; } elsif (-0n12 >> 0n5 & @rsp ^ 0n3 ^ 0y1101(-0n12 >> 0n5 & @rsp ^ 0n3 ^ 0y1101) { test_statement(0x172B); val = @r13 ; } elsif (@rsp ^ @rbx | @r11 ^ 0n8 | @r8 | $ip @r12 & @rdi) { test_statement(0x1AF); } else { test_statement(0x21EA); }
$error$
$end$
3682
 if (@rdx << $ip & @r12 << @r8 >> @r10 & $teb >> $teb | @rdx | @rax & @rbx & $buffer <= @r8 + @rsp ^ $ip >> @rax >> @rbp & @r8 >> @r12 & @r10 & @rdi ^ @rax >> 0y1100)  { test_statement(0x1991); } elsif (@r10 >> @rax & 0x9 >> @rax ^ @r11 & 0y1100 & @rdx ^ @rsi | @r10 & ~@r8 | $buffer))$teb << @rax & @r13 >> $ip | @r10 >> @r12) { test_statement(0x1E5E); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax((~@r12) ;  /* This is a comment */ } elsif ((@r12) >> @r13 & (0n8)))(@r12) >> @r13 & (0n8)) { test_statement(0x2020); } elsif (0n1 ^ $teb | $teb | +@rdi ! 0n1 ^ $teb | $teb | +@rdi) { test_statement(0x22A0);  if (0n16 = 0n16)  { test_statement(0x263F); } elsif (@r9 >< @r8) { test_statement(0xCF); } else { test_statement(0x85C); }  for (val = 10; @rsi <= @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread ^ @r12 ; $ip ^ @rbx | 0y1000) { test_statement(0x137B); }
$error$
$end$
3683
 if (~0x11 << @r13 & @rsp << $buffer >> 22 >> @r12 & @rbp >> @r8 ^ $thread << @r8 >> $thread >> @r10 | ((@r12)) << ~@rdi & $teb >> $thread & @rax & @r12 ^ @r11 >> 0n16 & @rbx & @rsi ^ (0x11) ^ @r9 ^ $teb | @r9 & @rbx ^ $thread ^ @rbx ^ ~22 | @rsp & @rbp = @rax << $teb << ($buffer))  { test_statement(0xFBC); @rax = @rdi & $thread & @r11 | ~@r13 & 0x10 | 0n11 ^ @rbp ;  while  (0y10000 | $teb(0y10000 | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = ~$ip | (@r8) ;  // /* This is a comment  ; } else { test_statement(0x14D5); }
$error$
$end$
3684
 if ($thread(@r9 + @rdi ^ @rdi ^ @rax >> @r8 & -@rbx & @r10 | ~@rbp << ~6 ^ +$teb & @r9 & 11 ^ 22 & -$thread | 7 ^ @r10)  { test_statement(0x16B7); }
$error$
$end$
3685
 if ($ip + @r13 & +14 << -$ip & ($ip) & @rsi & @rsi > $ip + @r13 & +14 << -$ip & ($ip) & @rsi & @rsi)  { test_statement(0x14CD); }
$error$
$end$
3686
 if ($ip + @rsp | @rsp >> $teb & +@rdi & $ip & -@rax != @r11 + @rbx >> $proc << $teb >> (0n18))  { test_statement(0xC6D); val = @rsp ^ 0y1110 ^ @r10 ; } elsif (13 & @rdi >> 21 & -$ip ^ @r8 > @rdx << @rbp >> 22 >> $buffer | $buffer >> $teb ^ @rdi ^ @rax ^ @r8 | ($proc) ^ $thread ^ $ip | @rbp) { test_statement(0x245A); } elsif (0xB >> 0xD & @rsi & ~@rdx ^ $teb & -@r12 | 14 & @r13 > @rax) { test_statement(0x1228);  This is a not opened comment */ ; }
$error$
$end$
3687
 if (0n19 + 0y1100 << $teb & @rax | @rbx << 0x4 & 3 >> @r10))@r11 << @rsp & @rdi >> @rbx >> $ip & @r12 & 0n14 & 0xF | $proc)  { test_statement(0xE55);  while  ($ip ; $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; val = $buffer ^ @r8 ; } elsif ($buffer << --0n1 >> @r9 & ~@r13 >> @rdx & @r13 & @r13 ^ @rsi ! @rbp >> @rbp >> @rsi) { test_statement(0xA55); } elsif (@rsi >> 0x7 & @r12 & -@rdi ^ $ip @rdx >> 0n19 | @rbx ^ @r9 | @r13 | @r9) { test_statement(0x1950); } elsif (@rax(0n5 & (@r8) | @rdi | @rbx | @rbx) { test_statement(0x2463); } else { test_statement(0x43); }
$error$
$end$
3688
 if (@rdx << $buffer >> $thread >> 0n9 ^ @rsp << @rbp & @rdi >> +~@rsi | $teb << @rsi & --17 >> @r10 & 13 & $proc ^ $buffer & 0x11 & @rsp >= +10 + $proc & $ip & $proc ^ @rsp >> @r13 ^ 0n15 >> -$buffer & $ip ^ $thread ^ $ip)  { test_statement(0x185A);  This is a not opened comment */ } else { test_statement(0xA48);  break;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi @rdx) ;  // /* This is a comment   /* This is a not closed comment  if (@rbx > @r9)  { test_statement(0x1ED9); }  for (; $proc <= $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3689
 if (@r11 + @rdi & $buffer << 0y111 >> @r13 & @r11 >> $ip ^ +@r10 & 0n11 >> @r11 & $teb | @r11 << @rdx >> 12 >> 0n13 & @r11 ^ $proc & $ip & 0y110 | $ip & $teb & @r8 ^ 0xA & @r9 ^ @r8 | @rsi & +$ip ^ @rdx ^ 1 | @rdx ; @r11 + @rdi & $buffer << 0y111 >> @r13 & @r11 >> $ip ^ +@r10 & 0n11 >> @r11 & $teb | @r11 << @rdx >> 12 >> 0n13 & @r11 ^ $proc & $ip & 0y110 | $ip & $teb & @r8 ^ 0xA & @r9 ^ @r8 | @rsi & +$ip ^ @rdx ^ 1 | @rdx)  { test_statement(0xB8B); }
$error$
$end$
3690
 if (+7 ^ @r10 | $ip << +@rbp & @r12 >> @r11 ^ 23 & 0n13 ^ @r13 & 0y1011 ^ +0y100 != +7 ^ @r10 | $ip << +@rbp & @r12 >> @r11 ^ 23 & 0n13 ^ @r13 & 0y1011 ^ +0y100)  { test_statement(0x170D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb | @r11 = $proc & @rbp | +@rax | @rax | @rax) ;  while  (0xF | 0y10001 | +@rbp != +@r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } else { test_statement(0x244F); }
$error$
$end$
3691
 if (0n0 << @r9 << $teb >> @r9 >> @r8 >> @r11 & @rax << $thread & @r13 >> @rdi @r9 << @rax << @rsp)  { test_statement(0x135F);  /* This is a comment */ } elsif (-@r9 << $ip & 11 ^ @r13 >> @r11 & @r12 & $teb < @r9 >> @r9 & @r9 >> $ip | @rbp >> @rbp & @rax & @r9 ^ @r12 & 6 | @r13) { test_statement(0x332);  // /* This is a comment   /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@rbx) <> $teb) ;  /* This is a not closed comment  while  (@rdx 0x8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  /* This is a comment */ } else { test_statement(0x1C40); }
$error$
$end$
3692
 if (0n15 << @rsp << @r13 >> @rdx << $proc ^ $ip << $proc & @r9 >> $thread ^ -@r13 < @r13 << 0y10 << @rsi >> @r13 >> ~@r13 | @rdx | (@rbx))  { test_statement(0x11AB); }
$error$
$end$
3693
 if (@r13 >> $ip << @rbx >> ~0xE)@r13 + @rsp << (@rdx) >> @r11 << @rdx & +@rsp >> @rbx >> @r13 & 0y110 >> @rax)  { test_statement(0x3C9);  /* This is a not closed comment } else { test_statement(0x2515); }
$error$
$end$
3694
 if (@rdi + @rsi & 16 << 0y10010 >> $teb = @rdi + @rsi & 16 << 0y10010 >> $teb)  { test_statement(0xBBF); } elsif (@rax | (@r8) & @r8 ^ @r8 ^ ~@r11))0y10011 << @rdi >> $teb >> @rsp & @rsi | $proc & 0n2 ^ 22 & @r11 | @rbp & @rsp) { test_statement(0x133F); } else { test_statement(0x1FA);  break; ; }
$error$
$end$
3695
 if (@r11 + @r9 >> @r9 << $teb ^ @r11 << 0x11 | $thread | @rdx >> 0n13 ! @r11 << @r10 << @r8 & @rax << +@rdi & 0n16 >> $teb & @rdi & @r10)  { test_statement(0x1DD3);  if (@rdx ^ @rsi | 0x3 ^ +@r13 | @r9 | ~14 ! @r8 ^ @r11 | $teb)  { test_statement(0x8F3); } else { test_statement(0x1797); } } else { test_statement(0x5A1); }
$error$
$end$
3696
 if (@rbp << $buffer & -21 >> @rdx | 0x9 >> @r8 ^ $ip >> @rsi & @rbx & $proc | @r10 >> @r8 & 5 | @r8 ^ @r12 ^ @rsp = @rbx + @rbp << @r8 >> @r13 >> @r10 >> +-0n0)  { test_statement(0x1105); } else { test_statement(0x8BF); }
$error$
$end$
3697
 if (@rdi << 1 ^ @r10 >> @r10 >> $teb >= @r13 << 12 ^ ~@rdi << @rsi ^ @r10 & @r8 & +0y1000)  { test_statement(0x1498);  // /* This is a comment   if (@r12 ^ @rsp | $proc >= @r12 ^ @rsp | $proc)  { test_statement(0x1792); }  This is a not opened comment */ } elsif (@r8 & @r12 >> +(1) & $proc == @rdi >> $buffer & @r12 >> $ip & $ip & 0y100 ^ @r12) { test_statement(0x1B96); } elsif ($teb >> (0n16) & @rbx ^ @rsp & @rbx <= @rbx | @r10 & @rax) { test_statement(0x9C0); } elsif (@r8 & (@rbp) | @r9 | @rdx @r8 & (@rbp) | @r9 | @rdx) { test_statement(0x10C9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x7 <= 0x7) ; } elsif (@r11 | @r10 | $ip)@rbx ^ @r10 | 0x2) { test_statement(0xAD7); } else { test_statement(0x20CE); }
$error$
$end$
3698
 if (@r11 << @r11 ^ @r8 >> @rsp | @rbp << $thread >> +13(~($teb) << @rsi | $ip << @r13)  { test_statement(0x1A43);  while  ($thread ^ @r11 | $buffer | $thread | 7 $thread ^ @r11 | $buffer | $thread | 7)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx & @rbp ^ @r9 >> +@r9 | 0x1 >< @r11) { test_statement(0x20D1); ;  This is a not opened comment */  for (val = 10; @rbx != (@rbx);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = +@rdi; $buffer($buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rbp))@r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@r10 = @rbx) ;  /* This is a comment */ }
$error$
$end$
3699
 if (@rsi + -@r10 >> ~~@rsp ^ @r10 << (@r12) & @r9 ^ @rdx ^ 16 < @rbp << @r12 << 0n9 ^ @rsp >> $teb & @rbx >> $ip & @rbx & @rdx | $teb << +$teb >> $thread ^ 0xE >> +21 & @rdx & +@rsi ^ $buffer)  { test_statement(0x17B1); } elsif (-@r10 == @rbx ^ $thread >> +-0y10001 | @r12 >> @rbx & @rsi) { test_statement(0x13E1);  // /* This is a comment  } elsif (@r13 | 0x2 & @rdx ^ $thread | @r11 ^ 0n0 | @rsp | 6 @r13 | 0x2 & @rdx ^ $thread | @r11 ^ 0n0 | @rsp | 6) { test_statement(0xAF9); }
$error$
$end$
3700
 if ($thread + 0n13 | @rdx >> @rax | -0n13 >> $teb & $thread ^ ~@rdx | ~@rsi & @r13 ^ (@r10) ^ $ip ; $thread + 0n13 | @rdx >> @rax | -0n13 >> $teb & $thread ^ ~@rdx | ~@rsi & @r13 ^ (@r10) ^ $ip)  { test_statement(0x1185); } else { test_statement(0x161); }
$error$
$end$
3701
 if (@rdi + @r8 ! @rdi + @r8)  { test_statement(0x10D3); } else { test_statement(0x1346); }
$error$
$end$
3702
 if ($teb >> @r11 << 0y1101 ^ @rsp & $ip >> $ip | $teb << +@rdx ^ @r12 >> @r13 & $thread & $buffer ^ @rbx ^ 6 | 0 >> @rsi | $thread ^ @rax ^ @rax ; $teb >> @r11 << 0y1101 ^ @rsp & $ip >> $ip | $teb << +@rdx ^ @r12 >> @r13 & $thread & $buffer ^ @rbx ^ 6 | 0 >> @rsi | $thread ^ @rax ^ @rax)  { test_statement(0x179F);  if (@rsp & @r9 | +-@rsp ^ 0n1 | 12)@r13 & @rsi | -$ip | +@r9 | $proc)  { test_statement(0x170); } elsif (@rsi | ~$teb ; $proc) { test_statement(0x1C23); } elsif (@rax | @rdx >< @rax | @rdx) { test_statement(0xE4E); } elsif (22 <= 22) { test_statement(0x1BE4); } elsif (-0y100 >< $ip) { test_statement(0x19AE); } elsif ((@r8) == @r12) { test_statement(0x1D6B); } } elsif ($proc << @r8 >> $buffer & 15 >> $proc < @rbp >> ((@r10)) >> @r8 ^ $proc >> $teb & 0n16 & 0n5 ^ -(@rdi) | $teb & $teb & @r12 | 0xE & @r10) { test_statement(0xF9); } elsif (($buffer) >> $buffer ! $buffer >> @rsp & -@r8) { test_statement(0x205D); } elsif (@r13 & $buffer ^ @r12 ^ @r11 | @rax > 0x9 & @rbx | $buffer | -$ip | @rdx) { test_statement(0xB20); }
$error$
$end$
3703
 if (@rbx + @r8 << @rbp << @r10 >> @rax >> 0n14 & (@rdi) << @r13 ^ @r13 >> -@rsi >> @rdx & @r13 ^ @r10 >> $thread(@rbx + @r8 << @rbp << @r10 >> @rax >> 0n14 & (@rdi) << @r13 ^ @r13 >> -@rsi >> @rdx & @r13 ^ @r10 >> $thread)  { test_statement(0x85E); } elsif ($thread << @r11 >> $thread >> 0y0 | @rsi >> +@rdi & 16 & @r9 | $buffer ^ $buffer | @r13 != $thread << @r11 >> $thread >> 0y0 | @rsi >> +@rdi & 16 & @r9 | $buffer ^ $buffer | @r13) { test_statement(0xD2E); @rax = $thread & @rax ^ 0x9 ^ @r9 ; } elsif (-$proc ^ @rbp ^ -@r12 ! $teb >> @rsi | @r9 & 12 ^ (@rdi)) { test_statement(0x65D); } elsif (@rdx & @r8 ^ @r8 ^ @r12 | @rax | @rbp | @r11((@rdx & @r8 ^ @r8 ^ @r12 | @rax | @rbp | @r11) { test_statement(0x348); } elsif (@rsi ^ $proc | $teb != @rsi ^ $proc | $teb) { test_statement(0x22DC); } elsif (@r10 > @r12) { test_statement(0x81); } elsif (~@rdi != @rdx) { test_statement(0x13C6);  for (; @rax != ~@rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rdx > @rdx)  { test_statement(0x13B8); } } else { test_statement(0x1A32); }
$error$
$end$
3704
 if (+0y110 >> (@rdi) & 0x12 & $thread >> @r11 ^ @rsi & @rdi & @r12 & $ip <> +0y110 >> (@rdi) & 0x12 & $thread >> @r11 ^ @rsi & @rdi & @r12 & $ip)  { test_statement(0x12B5); } elsif (@rdi << 17 & @rbx >> $proc & @rsp & @rdi | 0y1010 >> @rsp & 0y10001 >= @rbx << @rsp >> @rdx & @r9 >> @rsp | @rax >> 0n15 ^ $teb | -0n17 & @r9 ^ $proc | @rsi | $proc | ~(@r8)) { test_statement(0x24D3); } else { test_statement(0x203E);  This is a not opened comment */  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc <> $proc) ; }
$error$
$end$
3705
 if (@r10 + @r8 << 0x3 << @r12 >> @rax >> @rbp >> 0n16 & $proc << +$proc(@r10 + @r9 >> $ip & 0x4 >> -@r8 & 0y110 ^ @r12 >> @r13 >> @r8)  { test_statement(0x1A8C); } elsif ($buffer & @rbp >> @rbx | @r9 >> @rsi | @r9 & @rsp)$thread >> $thread ^ @rdi >> @rsp ^ @rdi ^ +@r10 ^ @r8) { test_statement(0xF8); } elsif (+$buffer & @r10 & @rsi ^ $proc ^ @rbp == @r11 & $teb ^ +@rdi & (@r11) | $thread ^ $ip | @r12 ^ 0x0) { test_statement(0x88F); }
$error$
$end$
3706
 if ($buffer + $thread & @r10((+(@r11) ^ (@r11) << $buffer & 0n18 >> $ip)  { test_statement(0x358); ; } elsif (@r10 << $teb >> ~$proc >> @r10 ^ $thread | @r8 >> @rsi ^ $thread ^ @rax ^ ~@r10 | @r11 ^ $proc | 0xF ^ $ip | @rsp | @rsp = $thread << (@rdi) | 0n12 >> @rsi & @rbx & ~@rsi | 0n18 ^ @rax) { test_statement(0x2625); } elsif (@r10 ^ @rbx != 0x6 >> @rsi) { test_statement(0x1C51);  /* This is a comment */  // /* This is a comment   if (0x13 <= @r10)  { test_statement(0xF1D); } elsif (@rsi @r8) { test_statement(0x45A); }  // /* This is a comment  } elsif (@rbp & $buffer ^ @r8(0n5 & @r8 ^ @rax ^ @r8 | $thread ^ @rbp) { test_statement(0xEEA);  // /* This is a comment  } else { test_statement(0x59A); }
$error$
$end$
3707
 if (@rsp >> @rdi >< @rbx << @r10 << @r13 >> -@r9 >> 0n8 >> @r9 & -@rsp << $ip & @rsi >> @r9 & @rsp | @rsi << @rsp ^ @rdx >> $proc & @r10 & 21 ^ @rsi & @rsp ^ @r9 | -@rbp)  { test_statement(0x1B8);  if (@r13 ^ @r8 ^ @rbp | +-@rsi | ~$ip | @r8))$thread & -$teb ^ 0n1 ^ (@r13))  { test_statement(0x1AC4); } else { test_statement(0xE27); }  for (val = 10; +~@rbx(+~@rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @r13 | ~@rbx <> @r13 | ~@rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
3708
 if (@r12 << $teb << @rbx & 0x4 << +@rdi >> ~+$ip != ~0n12 + @rax << -@rsp & @rsp << 0n18 & $teb & @r13 & 0y1011 ^ $proc & $buffer >> $ip & -0n13 & @rbp ^ $thread >> $thread & @r12 & @r13)  { test_statement(0xC2A);  if (@rbp & 0y111)@r8)  { test_statement(0x1960); } elsif (0y111))@rsp ^ -@r10 | @rsp | 3) { test_statement(0x11F7); } elsif (@r10 | @r12 @r8) { test_statement(0x24A); } elsif ($teb))@r13) { test_statement(0x222); } elsif (@rsp)@rsp) { test_statement(0x1D96); } else { test_statement(0x24B9); } }
$error$
$end$
3709
 if ($proc + $buffer << $teb & 1 << @rdx & @r12 >> $teb & @r13 & 13 = -@r10 + @r10 >> @rdi >> @rdx >> @r10 | 0x5 << @rdi & @r9 & ~@r12 & +@rsp | 0y110)  { test_statement(0x1D52);  /* This is a comment */ } elsif (@rsp | @rdx | @rbp ^ 0xD ^ ~@rdi != $ip ^ @rax) { test_statement(0x404);  // /* This is a comment   /* This is a not closed comment  for (@rax = $buffer; (@r12) 5;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y10001 >> @r12 & @r10 & -@rsi ^ @r11 ^ @rsi ^ 23 | $buffer | @rdx ^ @r13 | @rsi | $thread((@r9 >> @r8) { test_statement(0x1226); } else { test_statement(0x12B4);  // /* This is a comment  }
$error$
$end$
3710
 if (0 + @r10 >> 0y1111 << 12 >> 0x5 >> @r8 ^ ~11 & 15 & @rbp & +~@r13 ; ~@r9 + $proc & @rdi << @rsp)  { test_statement(0x1111); val = @rdx & @rbp ^ 0xF ^ @rax ; @rax = ~@rax ; } else { test_statement(0x1E51); }
$error$
$end$
3711
 if (@rdi & ~$thread << @r8 >> $thread >> @rsp & @rdx & @r8 ; @rdi & ~$thread << @r8 >> $thread >> @rsp & @rdx & @r8)  { test_statement(0x1ACA);  /* This is a not closed comment }
$error$
$end$
3712
 if (@rdi + @rbx << @r10 << @rsi >> @rbx >> $ip >> 0n13 | $proc ^ @r11 ^ ~+0n9 | $buffer >> @rdi | @r12 ^ @rsi ^ @rbx != @rdi ^ 0n8 >> +$ip >> @r9 & @rsi >> +$proc ^ @rbx & $teb)  { test_statement(0x11E6); } elsif (($thread) >> @r11 < 4 & @r10 >> @rdx & -@r9 ^ @r11 & @r9) { test_statement(0x11D6); } elsif (~@rax >> $proc & @rbp & @rdi ^ $proc | @rdi ; ~@rax >> $proc & @rbp & @rdi ^ $proc | @rdi) { test_statement(0xE37);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@r12 > +@r12) ;  break; } else { test_statement(0x1859); }
$error$
$end$
3713
 if (@r11 << @rbp & $thread << 0y1000 & @r10 >> 20 & 0n16 | @rsp >> @rax >> 20 ^ @r10 >> @r10 & 4 & -@rax ^ @r12 ! @r11 << @rbp & $thread << 0y1000 & @r10 >> 20 & 0n16 | @rsp >> @rax >> 20 ^ @r10 >> @r10 & 4 & -@rax ^ @r12)  { test_statement(0x12E5);  // /* This is a comment  }
$error$
$end$
3714
 if ($thread + 2 >> $ip << @rbp <= @rbp + @rbx << $proc >> @r12 << +$teb >> @r12 & @r10 ^ -13 << @r11 & @r8 & @rbp & @r10)  { test_statement(0x889);  /* This is a not closed comment } elsif (@rax & ~@rsp >> @r10 ^ @rax & 13 & @rsp ^ 0xE & @r11 ^ @rdi | @rdx & 0n17 & @rbx ^ (@rdi) & 0n13 != @rdx << (@r8)) { test_statement(0x470); } else { test_statement(0x7FB); }
$error$
$end$
3715
 if (+@r8 + 0x9 & $thread << ~@r10 ^ $buffer >> @r12 >> ($thread)($teb)  { test_statement(0x2228); } elsif (@rdi >> @r8 >> @r10 & 0y1 >> +@r9 & 15 ^ @r9 & $buffer & $buffer ^ -@rdx & @rbx | @r11 & @rsp & -+@r9 ^ @rbp & @rsp ^ 0xB @rdi >> @r8 >> @r10 & 0y1 >> +@r9 & 15 ^ @r9 & $buffer & $buffer ^ -@rdx & @rbx | @r11 & @rsp & -+@r9 ^ @rbp & @rsp ^ 0xB) { test_statement(0x2620); @rax = @r11 ^ $ip | 0x8 ^ @r9 ;  for (val = 10; +$proc | 0y11)+$proc | 0y11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1E42);  break;  for (val = 10; @rbx | @r10 ! @rsi | @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; ~(0xF) != @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3716
 if (@r9 << @r13 << $thread | $buffer & $thread & 20 & @rsi ! @r9 << @r13 << $thread | $buffer & $thread & 20 & @rsi)  { test_statement(0x125A);  while  ((0y1) ^ @r9 ! ~0y1100 & @rdx | @r10 ^ 17 | @rax | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3717
 if (++@r8 + +$buffer ; $buffer + $ip & $proc << $thread & @rax >> @r10 ^ ~0xD << @r12 | +$ip << @rsi & $thread >> $teb & @rdi ^ ~$buffer | @rsp & @rdx & 0x0)  { test_statement(0x1C37); } elsif ($ip >> $teb >> @r13 | @rsi & ~10 & @rbp ^ @r13 & @r12 ^ @rbp | @rsi & 0x8 ^ ~@r9))$ip >> $teb >> @r13 | @rsi & ~10 & @rbp ^ @r13 & @r12 ^ @rbp | @rsi & 0x8 ^ ~@r9) { test_statement(0x1809); } elsif (@rdi ^ $teb & @r11 | (@rsp) & @rsp ^ $thread ^ 0n18 | @rsp | -@rax ! @rbx & @r10 & @rsp | @rsi & @r8 ^ @r9 ^ @r9) { test_statement(0x1D1E);  /* This is a not closed comment }
$error$
$end$
3718
 if (0n1 + ($teb) << @rsi << 0y1100 ! 0n1 + ($teb) << @rsi << 0y1100)  { test_statement(0x262B); } elsif (6 << @r9 & 0x1 >> 0x10 & @rsi & 0x7 | -$thread ^ (@r11) & @rdx(@rbp << 17 >> @r13 ^ @r11 >> @rbp | @r12 >> $thread & @r12 | @rsi ^ $ip) { test_statement(0x1357);  /* This is a not closed comment @rax = @r10 ^ @rdi ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11))@r11) ; } elsif (0x3 >> 0y1010 & @r12 & +$proc ^ $buffer & $teb > $thread >> @rdx & $proc & -@r12 ^ $teb & @r10 | 0y1010 & @r10) { test_statement(0x1968);  for (; @r9 | $ip >< @r9 | $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@rsp & 0n17 | @r10(~(@rbp) & @rbx ^ +(+@rsi) ^ @rsi) { test_statement(0x2575); }
$error$
$end$
3719
 if (@rdx 0n18 + 0x8 << @r9 >> 0n7 << @r8 ^ @rbx << @r10 >> @r12 >> @r11 | 11 >> $buffer >> @r8 ^ $teb)  { test_statement(0x25C6);  // /* This is a comment  }
$error$
$end$
3720
 if (@rbp + 0n8 & -0y111 << @rsi >> 0y10000 >> @rdx ^ @rax >> @rsp >> -0xE ^ +$buffer >> -$ip & @rbp & $thread ^ $thread ^ @rsp ^ 0n12 <> 11 & $buffer >> @rsp ^ $buffer << @r12)  { test_statement(0x209F);  /* This is a not closed comment  /* This is a comment */ }
$error$
$end$
3721
 if ((0n14) + @r10 << 0n5 << $teb ^ @r9 >> +$buffer >> @rdx & $thread ^ 15 >> @r10 ^ 0y1010 ^ @rsi ^ @r13 | @r12 & 0n3 >> @r12 | @r10 >> $thread & @rsi | (@rsi) ^ $proc ^ -$buffer)$teb << @r12 & @r13 << (@r12) ^ @rbx ^ @rax >> @rbp ^ +-@rbx ^ @r11 | ($teb) << @r11 >> (~@r8) & @rsp >> @rsp | @rbx >> @r12 ^ +@rsp ^ 0y1)  { test_statement(0x16B6); } else { test_statement(0x232); @rax = +$proc & 0n6 | 0x13 ;  for (val = $buffer | @rdi; @r10 <= @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   /* This is a not closed comment }
$error$
$end$
3722
 if (-@r9 + @r8 >> @r11 >> @r10 & 0y11 ^ ~$teb >> +@r10 >> @rdi ^ ~@rbx >> @r12 & ($thread) ! @r9 + @r11 << -(@r8) >> ~@rbp & ~0y1111 & $buffer)  { test_statement(0x2405); }
$error$
$end$
3723
 if (@rsp << $teb & @r13 >> $thread >> @r12 <> $buffer << 0y10 << $buffer ^ 0n4 | @r12 << (@rbx) >> $proc >> -@r8 & 0y10011 & @rsp & $ip)  { test_statement(0x1167);  if (@r10 & @r10 | @rsi((@rax | @rsi | @rdi)  { test_statement(0x1019); } else { test_statement(0x484); }  break;  if (@r9 | 17 < @r9 | 17)  { test_statement(0x910); } elsif (@rdx <> (@rdi)) { test_statement(0x2580); } elsif (+@r10)@rax) { test_statement(0x5D4); } elsif (@rdi <= 0n6) { test_statement(0x6F8); }  for (val = 10; $teb <= $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rdx)@r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   break;  while  ($ip ; 0y101)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rax & @r10 ^ $teb >> @r11 & +0x4 & +@rbp ^ @r11 & ~@rsp ^ 0y10011 ^ @rsi | $thread >> ~@r9 & @rsi & @rdi ^ @rbp <= @rax & @r10 ^ $teb >> @r11 & +0x4 & +@rbp ^ @r11 & ~@rsp ^ 0y10011 ^ @rsi | $thread >> ~@r9 & @rsi & @rdi ^ @rbp) { test_statement(0x2193);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n5 ^ $thread | ~@rax | @r11 ! @r13) ; } elsif (@rsp ^ (@r8) == @r10 & +@rbx & 0y11 | (@rax) & $thread ^ @r8 ^ @r9) { test_statement(0x1486); }
$error$
$end$
3724
 if ($buffer >> 0x9 << @rbx >> 14 & @r12 << @rbx ^ 0xC << $ip & 0n19 >> 0n10 & @r8 & @rdi | $ip << $thread & 0y1100 & 0y111 & 0y1100 ^ ($proc) >> $buffer & @r10 ^ $thread & @rsp ^ @rbx))$proc + @rsp << 1 ^ $ip << $proc >> 0y100 >> ($buffer) & @rbp & 5 | @rbp >> $buffer & -@rsi | @rdx & (@rsi) ^ @r11 ^ @rsi ^ @rdi)  { test_statement(0xE2); } elsif (0y1000 >> @rbp | $proc >> $thread & ($proc) & @rbp ^ +$teb & @r11 > 0y1000 >> @rbp | $proc >> $thread & ($proc) & @rbp ^ +$teb & @r11) { test_statement(0x6DB);  /* This is a comment */  This is a not opened comment */ @rax = @rax | $thread ; } elsif (@rax >> 0n12 & $proc & @rax | @rdi ^ ~~@rbp ^ @r12 < 0n16) { test_statement(0xF0D); } elsif ($ip & @rax ^ @r13 ^ $proc | @r11 ^ 0y100 | ~@r13 <= $ip ^ $ip ^ @rsp) { test_statement(0xF3A);  if (@r13 ; $buffer)  { test_statement(0xC55); } else { test_statement(0x208E); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ; +0x8) ;  for (; (@r11) == (@r11);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 <= @rsp ^ @r8) { test_statement(0x387); val = ~$proc ; } elsif (@rax | @r9 ; +-(0n12)) { test_statement(0x26F); ;  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
3725
 if ($buffer + $thread >> @rdx & ($proc) & @rsp >> @r10 <> @rsi >> 23 << @r11 ^ ~+$ip << @rsi >> $proc >> 0x8 & (@rsi) >> @rbx | @r10 << $buffer & @rdx ^ (0n16) & $buffer | @r11 & @rsi & @rsi)  { test_statement(0x1BD0); } else { test_statement(0x1F29); }
$error$
$end$
3726
 if (0y0 >> @rdx << @r9 ^ @r10 >> @r11 >> 22 ^ $proc & ~@rax | @r12 & ~@rbx >> $teb & $proc ^ @r11 >> (-0n3) == 0y0 >> @rdx << @r9 ^ @r10 >> @r11 >> 22 ^ $proc & ~@rax | @r12 & ~@rbx >> $teb & $proc ^ @r11 >> (-0n3))  { test_statement(0x439);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ; @rbp) ;  /* This is a not closed comment }
$error$
$end$
3727
 if (-+@r8 + 0y0 & +@rdx >> @r9 & @r12 ^ $thread >> 0y1100 >> @r13 & @r10 >> $thread(($ip) + @rdi >> @rsi << $thread >> (0xC))  { test_statement(0x1449); } elsif (@rsi << @rax | $thread >> 6 ^ 0y11 & @rbp ^ +@rbp ^ @rdx | 0n3 > @rsi << @rax | $thread >> 6 ^ 0y11 & @rbp ^ +@rbp ^ @rdx | 0n3) { test_statement(0x12E6);  if (@r12 | 0n6 | $ip(@r9 ^ @r9 | 0y1100)  { test_statement(0xF05); } else { test_statement(0x1EE0); }  /* This is a not closed comment } else { test_statement(0x20D3); }
$error$
$end$
3728
 if (@r9 + @rdx << @rdx >> (@r9) << @rax >> 0n10 & $teb >> @rsi >> (@rsi) & 0x13 >> @rdi & @r11 ^ @r13 << $teb ^ $proc | $proc >> @r13 | @rsi & @rbx & $ip > @r13 >> 22 << $teb >> 0xA >> (@r8) | @rdi >> @r8 >> @rsi & @rsi)  { test_statement(0x6D3); ; } elsif (@rbx >> @rsi >> $proc & @r8 & @r13 & 12 | @r10 | @rbx != $teb >> ~$buffer >> -@rsi & $ip >> @rbp ^ @rsi >> 22 ^ @rax & -0x11) { test_statement(0x226E); } else { test_statement(0x195D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc ^ $ip(@r8 | 14) ; }
$error$
$end$
3729
 if (~@r9 & @r12 ^ @r11 & $ip >> 0xB & @rsi = $proc + @rsi & +@rax >> @r12 >> @rdx & @rsi >> @r11 & @rdx | @r10 << ~$ip >> @r13 >> -@rax)  { test_statement(0x161D);  if (@r13 ^ (@rsp)))@r13 ^ (@rsp))  { test_statement(0x1643); } else { test_statement(0xECA); } }
$error$
$end$
3730
 if (@rax << -@r10 >< @rax << -@r10)  { test_statement(0x2692); } elsif (@r13 & +@rax ^ $proc >> $proc & $teb & +$proc ^ @rbx & -$buffer = ((0xB)) << @rax & @rax & -@rax | $teb ^ +$teb ^ @rbx) { test_statement(0x12C2); ; } else { test_statement(0x12D9); ; }
$error$
$end$
3731
 if ($buffer + +$proc >> 0n14 >> (+@r12) >> ($proc) & @rax >> @r11 >> +$buffer ^ @rdi >> 22 ^ @rdx >> @r11 ^ @r9 < $buffer + +$proc >> 0n14 >> (+@r12) >> ($proc) & @rax >> @r11 >> +$buffer ^ @rdi >> 22 ^ @rdx >> @r11 ^ @r9)  { test_statement(0x6D6); } elsif ($ip & @r13 >> 21 ^ +$thread ! +0xA << ~+@rsp ^ 0x11 >> @rdi & $thread ^ $buffer) { test_statement(0x5AF); } elsif ($ip & @rdx ^ @r9 ^ 0n9 ^ @rax | @r9 | @rsi ^ @r13 | (+$teb)))$ip & @rdx ^ @r9 ^ 0n9 ^ @rax | @r9 | @rsi ^ @r13 | (+$teb)) { test_statement(0x1BC1); } elsif (11 & @r11 | -@rsp ! $buffer ^ @rdx ^ 0y1010) { test_statement(0x1936); } elsif (@r8 | @r9 | @r12 >= $buffer) { test_statement(0xCC2); } elsif ($buffer | -0y1))$thread | @rsi) { test_statement(0xD79); }
$error$
$end$
3732
 if (7 + +~-0x12 >> @rbp << 0y10011 & @rsp ^ @rdx << @rbx & 0n16 >> ~0x3 | @r11 << @r12 >> @rdx & $buffer >> $thread & @rbx ! 0n1 + @rdi << @rbx << $proc >> @r13 << (0y10011) | $buffer << @r8 >> @rsi & @rax & @rax & @r9 ^ $buffer >> (11))  { test_statement(0x256C); } elsif ((0y1011) >> $thread >> $proc & @r8 & 0y10011 ^ @rbx ^ @r13 & @r13 ^ $teb (@rsi) << @r11 >> ~@rdx & @r12 >> @r13 & @rax & 0x10 | $thread >> 0xE & $proc) { test_statement(0xEE7); } elsif ($thread >> $buffer & -$thread & @r11 ^ @r12 ^ @rax >= @r8 | 17 & @rsp) { test_statement(0x1ADD); } elsif (-23 & $proc | 0x13 ^ 17 | $teb ; $ip & @rdx ^ $teb) { test_statement(0x1812); } elsif ($ip ^ (0n4) == $ip ^ (0n4)) { test_statement(0xD78);  while  (@rax ! @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; $buffer < @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
3733
 if (@rbx + 0x13 >> 0y1100 << $proc((0y0 + -~+0n15 ^ @rbx | ~@rbx >> @r12 >> @rsi & @rdi >> -~@r11 & @rdi & @r12 ^ @rdi >> @rsi & @r8 | @r13 | +0y0 | 0y10 | $buffer)  { test_statement(0xB27); } elsif (@r12 << 0x2 >> $thread & @rbx ^ 0n2 & @r11 ^ @r11 | $proc & @r12 ^ @rsi(-@rbp << $proc | @r12 ^ 0xF | $proc & $teb | @r9 | @r8) { test_statement(0x7); } else { test_statement(0x1969); }
$error$
$end$
3734
 if (+0y10 + $thread << @r12 ^ @rbx << @rsi & @rbp >> @r8 & $thread & @rsp ^ @rsi | @rdi ^ @r13 >> $ip ^ @r13 | @rbx >> (@r13) ^ $buffer = @rbx << @rbx >> 14 | @r12 & @r12 ^ $buffer)  { test_statement(0x21F6); } else { test_statement(0x1E0); }
$error$
$end$
3735
 if (0y1100 + @r9 & --@r9 | 16 & @rax & $proc == @r11 << @rbp << +$ip & $teb << @rbx & @r10 >> @rax | 0y0 >> $ip ^ @r9 & @rax & @rbx | @rsi & $teb ^ @r12 ^ ~@rsp | 0x0 ^ @r9 | @rsi ^ @rbx)  { test_statement(0x34C); } elsif ($thread << @rsp >> @r10 >> $ip | (@rsi) & @rsp & @r13 | $thread ^ 0 ^ @r11 == $thread << @rsp >> @r10 >> $ip | (@rsi) & @rsp & @r13 | $thread ^ 0 ^ @r11) { test_statement(0x1C2A); } else { test_statement(0x1332);  if (($ip) ^ $teb <> @rbx)  { test_statement(0xB8E); } elsif (~@rsi | @rdx == 10 | @rdx) { test_statement(0x2297); } else { test_statement(0xD58); } }
$error$
$end$
3736
 if (@rbp + @rsp >> $thread << @rsp <> 0n14 << @rax ^ @rax >> @r10 >> $buffer & @rbp >> ($ip) & 0n9 & @rdx)  { test_statement(0x12CE);  This is a not opened comment */ }
$error$
$end$
3737
 if (0n15 >> @rax >> @rsi >> ~@rbx & 20 << @r8 & 0y10001 ^ ($thread) >> @r8 | 0x3 << @r12 >> (@rdx) >> @rax & $ip & @r13 ^ 0n5 | @rbx >> @rsp ^ $ip | ($ip) & @rbp <= 0n15 >> @rax >> @rsi >> ~@rbx & 20 << @r8 & 0y10001 ^ ($thread) >> @r8 | 0x3 << @r12 >> (@rdx) >> @rax & $ip & @r13 ^ 0n5 | @rbx >> @rsp ^ $ip | ($ip) & @rbp)  { test_statement(0x1B94); }
$error$
$end$
3738
 if (~@r13 << @r10 << @rsi | @rsi | +@rsi >> @r8 & @rdx & @r13 ^ 0y1111 & $buffer ^ @rbp ^ -0xB != $teb + @r9 << @rsp >> @rax << 0y100 & @rsi)  { test_statement(0x167F); } elsif ($buffer << @rdi >> (+~0n2) >> @rsi ! @rax << $teb | (@rdi) >> @r12 & (@rdx) & @rsi) { test_statement(0x980);  break;  if (0n3 | $proc != @rsi | $proc)  { test_statement(0x14EC); } } elsif ($proc >> 0n0 ^ $ip | ~(@rdi) >< (0x6) ^ @rsi & $buffer | $buffer ^ @r9 ^ @r13) { test_statement(0x1351);  while  (15 | @r10 = @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp <= $thread) ;  for (@rax = 0y10; @r9 @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($proc >= +0x5)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  for (; 0n1 >= @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3739
 if (@rdx | @rbp << ~@r13 & ~@rsi >> +-@r10 & @r10 & ~@r12 ^ ($ip) & $ip & @r10 | +0xB >> @rax((@r9 + @rbx << $teb >> @rbp << @r12 >> (@r12) >> $ip & @r12 << -@r9 ^ $proc << $proc)  { test_statement(0x2255);  break;  break; } elsif (@rbp << @rsi >> @r10 >> @rbx & @rsi >> $buffer & $buffer & 0y10000(($thread ^ (@r9) & @rsp ^ @r11 ^ @rsi) { test_statement(0xC17);  while  (-+@rsi ^ @r9 | @rdi($teb | 14)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (21 & $teb | (22) & 0y1000 | $teb ^ $proc ! 21 & $teb | (22) & 0y1000 | $teb ^ $proc) { test_statement(0x1C8B); } else { test_statement(0xD91); }
$error$
$end$
3740
 if (@rsp + $teb << @r8 & $proc <= @r12 + @rdx >> 0n11 >> $buffer ^ @r12 >> $buffer >> @rsi ^ ~(@rbx) >> @rbx ^ @r13 & -@rbp ^ $proc ^ @r11 | $buffer)  { test_statement(0x6F5);  /* This is a not closed comment  // /* This is a comment  } elsif (@rsi << 22 & @r9 >> ~@rbx & 15 & @rdx ^ $ip = @rbp << @r11 & -@rdi ^ 0n7 & @rbx & @r9) { test_statement(0x13FF); } elsif (@rax >> -21 ^ -@r8 ^ @rsi > @rax >> -21 ^ -@r8 ^ @rsi) { test_statement(0x157B); } elsif (@rbp & (0y100) ^ $teb))$proc ^ @r9) { test_statement(0xCD0);  // /* This is a comment  } elsif (+$ip | $teb | 3 <= +@rsi ^ @r12) { test_statement(0x842); }
$error$
$end$
3741
 if (@rsi << 0n19 | $buffer & ~@r13 != @rsi << 0n19 | $buffer & ~@r13)  { test_statement(0xEBE);  if (@r11 & 0n10 >< @rsi & @rax ^ @rbx ^ 0y1101)  { test_statement(0x166D); } elsif (@rdx | @rbx | @rsi <= @rsp | @r10 | @r13) { test_statement(0xB2B); } elsif (@rbx | +@rdi >< @rbx | +@rdi) { test_statement(0x25BD); } elsif ($proc ; @r10) { test_statement(0x808); } } else { test_statement(0x124F);  This is a not opened comment */  /* This is a not closed comment }
$error$
$end$
3742
 if ($thread >> @rsp << @rbp & @rsi << ~0n18 | 0n13 ^ 0y1000 >> 22 & $thread & 12 == $proc + @rax << 22 << @r8 >> @rsp << 0n18 >> (0y10000) >> 0y10001 ^ @rax << @rdx)  { test_statement(0x748);  while  (@rax ^ ~$teb ^ @r13 | @rsi ^ $thread >< @rax ^ ~$teb ^ @r13 | @rsi ^ $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x10CF); }
$error$
$end$
3743
 if ($thread + $buffer << @rbx != $buffer << @rax << $teb | -(+@r8) << 0 >> $ip & $buffer & +0x3 & ($buffer))  { test_statement(0x1D9B); }
$error$
$end$
3744
 if ((@rsp) << @rax << 0n4 = (@rsp) << @rax << 0n4)  { test_statement(0x3EB);  /* This is a not closed comment ; ; }
$error$
$end$
3745
 if (-$teb >> $ip & @r11 & @r9 >> 4 | @rdx ^ @r13 | @rsp & $thread & +@r11 | @r9 ^ $proc ^ 0xC | @rsi ^ @r11 | 0 | $thread >= @rsp + @r8 >> @r9 << $ip >> @r11)  { test_statement(0x35F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi >= @r9 & @rdi | @rbx ^ @r11) ; } elsif (@rbp << +$thread >> 0y10010 ^ $thread & @rdi & 0n6 ^ @r8 & 15 | $buffer >> $proc ^ $ip ^ $proc ^ 0y110 | @r9 | @rsi <> @rsi << @r11 ^ @r11) { test_statement(0x1EF0); } elsif (10 >> @r8 & @rsp & $thread ^ @rsp = 10 >> @r8 & @rsp & $thread ^ @rsp) { test_statement(0xBE8); } else { test_statement(0x2615); }
$error$
$end$
3746
 if ((0n16) + $proc << ~@r10 << @rdi >> @r8 & @r11 & @rbx & 0x7 ^ $buffer >> ((@r12)) ^ +@rax & @rdx < $buffer & @rdx >> $buffer >> +@rsp ^ @r11 | -@r10 >> @r11 >> $proc & $proc | @rdi & @rdi)  { test_statement(0x667); } elsif (@r11 << 0x0 >> 0y11 & $ip >> @rbx | @rsi >> @r13 | @rbx & +0xF <= $proc >> @rax >> @rax ^ @rdi >> @rdx ^ 11 ^ $teb ^ @r8) { test_statement(0x238A); } elsif ($thread >> $proc | @r9 & @r11 ^ @r13 ^ @r10 = ~$buffer >> 0x5 & @rsi ^ $buffer & @rbx | $buffer | 5 ^ 0y1101) { test_statement(0x2028);  /* This is a comment */ } elsif ($teb ^ @r13 ^ 0n9 | @r10)0y1101 | +(@rdi) ^ ($thread) | 0y1110) { test_statement(0x1201); }
$error$
$end$
3747
 if (@rsp + ~@rsi & @rdx >> -$proc >> @rdi & @rdi >> $proc | @rdi << $buffer & $thread >> -@rbx ^ @rax & @rbp ^ @r8 ^ $thread < @rsp + ~@rsi & @rdx >> -$proc >> @rdi & @rdi >> $proc | @rdi << $buffer & $thread >> -@rbx ^ @rax & @rbp ^ @r8 ^ $thread)  { test_statement(0x1F03); } elsif (@rsp >> @rsi & @rsp >> @r12 & @r11 & 6 | (-0x8) | ~@rbx | 22 ^ @rbp | 0x1(0n12 ^ 0y1011 >> @r12 ^ ~@r12 & @rsi) { test_statement(0x20BF);  /* This is a comment */ val = 0n17 | @rbp | @rdx ;  while  ((@r10) (@r10))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x22F7);  for (@rax = @r12 | $ip; @rbx == 7;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3748
 if ($thread + +(@rbx) << 23 << @rbx | $proc << @rbx >> @r9 ^ @rdx & $buffer & @rdx)@rsi << $teb << @rsp | @r12 & -@r12 | $ip ^ @r13 | $ip | @r11 | @rbp | @r10)  { test_statement(0xAFC); }
$error$
$end$
3749
 if (@rdi + @r9 >> @rbx | @r13 >> 0y1111 >> @rbp & ($teb) >> (@r12) | @rax >> ~0x1 & @rbp & $ip ^ @r13 <> (@r13) + @rbp & @r9 << @r11 & @rbp >> $proc & @rsi)  { test_statement(0x10D2); }
$error$
$end$
3750
 if (@rbx & 0n7 & 0x1 >> 0y10001 & ~2 >< @rbx & 0n7 & 0x1 >> 0y10001 & ~2)  { test_statement(0xE01);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n12 >< 0n12) ; } else { test_statement(0x16DA);  if (@r13 ^ $teb)@r11 ^ @r8 | @r8)  { test_statement(0x128A); } elsif (@r12 | @rax >= @r12 | @rax) { test_statement(0x27); } elsif (@rbx))@rsi) { test_statement(0x1778); } elsif ($proc ; $proc) { test_statement(0x1AC7); } else { test_statement(0x2492); }  /* This is a comment */ }
$error$
$end$
3751
 if (0y11 + @r13 | ~0x3 << @rax & @rbp >> @rsp & @rdi & $ip ^ 0x0 & @rsp ^ 15 | @r12 >> @rsp & @r12 ^ @r12 >= 0y11 + @r13 | ~0x3 << @rax & @rbp >> @rsp & @rdi & $ip ^ 0x0 & @rsp ^ 15 | @r12 >> @rsp & @r12 ^ @r12)  { test_statement(0x211F); ; }
$error$
$end$
3752
 if (0x6 >> $buffer = @r10 + @rsi << @rdi << @rsi >> ~(@r10) << @rbp ^ @r13 >> @r9 ^ @rdi >> 0y1101 & @r11 & $proc ^ @rbp & @rsi)  { test_statement(0x23C); } elsif (@r12 << $teb & $teb & @rsp & $proc ^ @rbp >> 0x7 & @r13 <= +@rax >> @rax >> @r8 ^ ~0x7 >> @r10 ^ +$proc ^ @rbx | @rsi >> 0 ^ @rdx | @rsi & ~@rbx) { test_statement(0x1FE0);  This is a not opened comment */ } else { test_statement(0x5D0);  for (; $teb ^ @rbx != $teb ^ @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = $ip ; }
$error$
$end$
3753
 if (0x0 << 0xB & @r9 << $teb ^ @r13 & @rbx >> @r13 & @r11 & $thread | (@rbx) >> @r12 >> $ip ^ @rsp & @r13 ^ @rsp | $teb >> 0xE & @rsi != $ip >> ($proc) >> (@rbp) ^ $proc | +@rbp << @rsi ^ @r11 ^ @rdx & @rdx ^ @r10)  { test_statement(0x1944);  while  (@r9 & @rbp ^ (@rdi) ^ @r9 ; @r13 & 0y111)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r9 & +@r13 >> @r13 <= 0n14 << @rsi) { test_statement(0x204A); } else { test_statement(0x10AC);  while  (@rax | (@rdi) == ~@rdx | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ ; }
$error$
$end$
3754
 if (+@rdx << @r9 << $ip & 0y10011 >> $buffer & 0xB >> @rax != -@r12 + @rsp << @rbx << @r8 | @rdx >> @rax >> @r9 & @rsi >> @rax ^ -7 & $teb | +-+@rdx >> $ip & $thread & $thread)  { test_statement(0x14EA);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ^ @rsp != @rax | @rax) ; @rax = (@rsi) | 0y100 ; } elsif (@r8 >> @r8 & +$proc & $teb & @rbp ! @r8 >> @r8 & +$proc & $teb & @rbp) { test_statement(0x2254);  // /* This is a comment  }
$error$
$end$
3755
 if (0n6 + @r11 >> @r13 = @rdx << ~+0n11 << $proc & @rdi & (4) ^ @r13 << @rbx & @r11 & @r12 & @rbp)  { test_statement(0x98E); } else { test_statement(0x1B97); }
$error$
$end$
3756
 if (@rbp >> @rdi << $thread & @rdi << 0y1011 > @rbp >> @rdi << $thread & @rdi << 0y1011)  { test_statement(0x1C8E); }
$error$
$end$
3757
 if (@r9 + @rsp << 0y10001 | @r12 << ~@r8 >> @rsp >> @rax & $thread >> @r11 & 4 & ~@r10 | $proc ^ 0y10010 & @rbp | @r11 ^ 7 ^ @r10(($buffer & $ip & $ip ^ @r11 << @rdx >> $teb & @rdi >> @r13)  { test_statement(0xC05);  if (@rdi ^ @rbp | @r9 <> @r11 | $teb ^ @r12 | @rax | 0x9)  { test_statement(0x1E6); } else { test_statement(0x224C); } ; }
$error$
$end$
3758
 if (@r9 + +@r8 << @rsi >> @rsp >> @rax | @r11 << -$thread ^ @rsi != @rsp << 11 << $thread)  { test_statement(0xEE9);  if ($proc & @r8 ^ @rbp ^ @rax | @rbx | @r11 >< $proc & @r8 ^ @rbp ^ @rax | @rbx | @r11)  { test_statement(0x194E); } elsif (@r9 | -@r10)@r9 | -@r10) { test_statement(0x1BC5); } ; @rax = $proc ;  if (@rdi))$thread)  { test_statement(0x20FD); } else { test_statement(0x12D9); } } elsif (@rbx << @r11 >> @rbp >> @r12 & $buffer >> @rsi < (11) << +@rdx & ~0x6 ^ 0x7 >> @rdx) { test_statement(0x250B); } elsif (0y101 >> -@rax <> ~@rsi & @rsp ^ @rbp & @r12 | @r13 & $ip ^ @rax ^ @rsi | 0n1) { test_statement(0x1A87);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 < @rsi) ; }
$error$
$end$
3759
 if (@r13 + $ip << @rsp ^ ~@rsi << @rbp & @rbx > @rax + @rdi << $buffer << @rax >> @rbp & @rsp ^ 0n8 >> 0y110)  { test_statement(0x23CD); ;  This is a not opened comment */ } elsif (@rax << $ip >> $ip >> 14 & @rdx >> @r11 & +@rdi & @r12 ^ $teb | @r11 & @rax < -@r13 >> @rbp & @rbx >> $proc & @r12 & 0y1101 ^ @rdx >> @rdi | @rsp >> @rax & $teb) { test_statement(0x23DF);  while  (0n18 | @rsp | 7 >< -$teb | @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  This is a not opened comment */ } elsif ($ip >> @r11 ^ $thread & @rsp ^ @r13 <= $ip) { test_statement(0xDF9); } elsif ($proc & $proc ^ $teb))$proc & $proc ^ $teb) { test_statement(0xA22); }
$error$
$end$
3760
 if ($thread >> $buffer << $teb >> $thread >> $buffer & @rdx & ($teb) & @rbp ^ @rsp >> @rsp & @rbp))@rbp + $thread << $thread << @rbp >> @rdx << @rbp)  { test_statement(0x10AE);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | @r13 < @r10 | @r13) ; } elsif (0y11 & $proc >> +@r10 | @rsp >> (@r11) | $proc | @r11 | 2 | @rbp <= 0n0 ^ @r9 >> @rbx & 0xA ^ ($proc) ^ $thread ^ @r11 | (17) >> -+-0y1 & $thread & @rax | $ip & @r10 ^ 0n17) { test_statement(0x1147);  while  (@rsp | $proc = @rsp | $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x3E1); }
$error$
$end$
3761
 if ($teb & @rbx << @r12 & $teb >> $ip & @r12 | (@r9) >> $proc >> @r8 ^ @rdx >> @rbp ^ 0xD | @rsi >> @rsi & @r11 $teb & @rbx << @r12 & $teb >> $ip & @r12 | (@r9) >> $proc >> @r8 ^ @rdx >> @rbp ^ 0xD | @rsi >> @rsi & @r11)  { test_statement(0x17CD);  while  ($ip == $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1B06);  /* This is a comment */ }
$error$
$end$
3762
 if (0y100 << $teb >> 0n14 ^ ~@r12 & @r12 | @rsp << @rbp >> ~(@r10) & ~@r8 & @r12 & $ip ^ @rbx & (@rdi) & @rbx))0y100 << $teb >> 0n14 ^ ~@r12 & @r12 | @rsp << @rbp >> ~(@r10) & ~@r8 & @r12 & $ip ^ @rbx & (@rdi) & @rbx)  { test_statement(0x4A); } elsif ((@r9) >> 0y1110 | $teb >> @rdi ^ @r11 | $thread ^ @rdi @rbp ^ 20 ^ $ip & @rsp | 0y1110 >> $teb ^ @rdx | $teb & $ip | @rbx ^ @rdi | @rsi | @rdi) { test_statement(0x26CD); } elsif ($teb ^ ~3 == $teb ^ ~3) { test_statement(0xE77);  /* This is a comment */  for (@rax = (21); ~@rdx == @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread & --6 ^ $ip ^ @r8 | 0y1011 | $thread))$ip ^ @r9 ^ 12 | @rdi ^ @r10) { test_statement(0x2D4);  break; } elsif (@rax < @rbx | -@r11 | @rsp) { test_statement(0x41); } else { test_statement(0x1BF2); }
$error$
$end$
3763
 if ($thread + @r9 << @r8 ^ @r13 ^ @rsp & $teb(@rbx & @r9 << $ip >> @rbx)  { test_statement(0x1778); } elsif (@rbp >> @rbp & @r13 >> $buffer & @r11 ; @rax & @rdi >> @r8 ^ 0n2 & $teb & @rdi) { test_statement(0x1B73);  while  (@r13 >< 0x11 ^ ~$proc | @r12 | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 >> 0xF ^ 0y1100 & @r12 < (@rax) | 20 ^ @r10 ^ @rbp | @rdx ^ @rsi | @r10) { test_statement(0x6A);  This is a not opened comment */ }
$error$
$end$
3764
 if (@rsp + $thread & @rbx << @rbx ^ @r9 @rsp + $thread & @rbx << @rbx ^ @r9)  { test_statement(0x181A);  /* This is a comment */ } elsif (@r9 << $proc ^ (@r10) >> 0x2 & +$ip & @r9 ^ 0y1110 ! 0xE << @rbx & @rax & @r11 & 0y1010) { test_statement(0xD56);  // /* This is a comment  } else { test_statement(0x207);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 ^ @rsp != @r13 ^ @rsp) ;  for (val = $teb | @rdx; +$teb | -$thread))+$teb | -$thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3765
 if (@rbp + -$teb >> @r13 << @r9 >> 0y1101 >> @rbp & @rsi << @r13 ^ @r8 >> @r12 >> @r10 ^ ($teb) >> 0y0 & @r10 ^ @rbp((~@r8 + $proc << $thread << $buffer >> $proc << $buffer & 23 >> @r9 >> @r8 & @rdi >> 10 ^ @rdi >> @r12 ^ ~@rdi & @rbp & @r13 | @rdx >> @r8 & @rsi >> 0n5 & 0xF)  { test_statement(0x13D0); } elsif (@r12 | @r10 & $thread & @r10 ^ (@r13) & @r8 @r9 >> $teb >> @rdx & @rdx >> @r13 ^ @r13 >> @rdi & @r11 & @r9 ^ @r11 & @r10 ^ $thread) { test_statement(0x2462);  This is a not opened comment */  /* This is a not closed comment } elsif ($ip >> @rdi ! $ip >> @rdi) { test_statement(0x1DEF); }
$error$
$end$
3766
 if (@r10 << $ip >> $teb << ~@r13 & ~@rbp << -@rsp | 20 & 7 >> 15 | @r11 >> (15) ^ $teb ; 0n10 << ~@rdx & ($proc) << @r12 | 0y110 >> @rdx & @rsi & @rbx ^ @r13 >> @r10 & @r10 | -(0x0))  { test_statement(0x21F8);  // /* This is a comment  } elsif (12 << 0n11 & ~@rsi >> $thread & 0n13 ^ 0y10010 >> $ip ^ @rdx <= $teb << $teb >> @rsi & @rsp & @rdi ^ @rbx & $buffer & @rdx) { test_statement(0x24AC);  break;  break; } else { test_statement(0x1A8E); @rax = @r8 ^ @rax | @r12 ^ ($ip) | 0x3 | (~~@rdi) ;  for (val = 10; @r11 | @r12 != (@r8);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3767
 if (+@r13 + $buffer ^ @rbx & -0n17 >> +@rsp ^ @r8 | $ip ^ $buffer >> 16 & @r9 ^ $ip ^ -@rdx ^ @r12 > $teb >> @rbp << +$teb >> @rdi >> @rdx ^ @rbx << @r9 >> (@rbp) & $thread ^ @rax >> $ip | $ip << @r11 & @r9 >> @r9 | @r12)  { test_statement(0x1685);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 ^ @rdx)@rbp & 7 ^ @rsp ^ @rbx) ; } else { test_statement(0x2A8);  for (val = 0n5 | 0n18 | @r8; ~@rbp ^ @r10 | @r11 | @r12(@rbx | (@rsp);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; @rax = @r8 ; }
$error$
$end$
3768
 if (@r8 + $buffer >> @r9 << 0x12 & ~@r9 | @r12 << +@r11 <= @r11 + -@rbp >> @r10 >> 0y100 >> $proc & @rsp << @r10 & +(-0y101) >> @rdi | 0x11 << 16 & @rbp & @r9 ^ @rdi ^ @rsp ^ @r13 | -@r12 >> @r13 & ~0n8 & $teb ^ @r11 ^ $proc ^ ~$thread)  { test_statement(0x211F); } elsif (@r8 >> $ip >> 15 & @r12 >> 0x3 & $teb | @rax ^ @rbp != @r8 >> $ip >> 15 & @r12 >> 0x3 & $teb | @rax ^ @rbp) { test_statement(0x189D); } elsif (@rbp >> @rbx & 20 & ~@r10))@rbp >> @rbx & 20 & ~@r10) { test_statement(0xF6D); } elsif (@r10 & 20 ^ ~0xE))+-0y101) { test_statement(0x1FF1); ;  // /* This is a comment   /* This is a not closed comment val = 7 ;  break; } else { test_statement(0xF0F);  This is a not opened comment */  /* This is a not closed comment }
$error$
$end$
3769
 if (@rdi + @r13 << 0n1 | 10 & @r12 >> (@r13) <= $teb + @r11 << $ip >> $buffer << @r8 & @rsp)  { test_statement(0x1206);  for (val = 10; $ip ^ 4 ^ @r12 | @r11(@rsi & 0x8 ^ 0n7 ^ $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp << 4)@rdx & @rsp >> @rdi & @rsi ^ 3 >> @r9 | @rdi >> $buffer & @r11 & (0xD) | -$proc & -@rsi ^ (0y1) ^ @rdx) { test_statement(0x1C9C); } elsif (@r10 >> 0x1 | $thread @rbx >> @rax & @r9 ^ @r9 | @r9 & @rbp | @r11 | @rbp | $proc) { test_statement(0x9A4); ; } else { test_statement(0x129A); }
$error$
$end$
3770
 if (-0y1111 + $teb << +@rbx << @r9 >> @r8 << @rsp & @rdx << $teb ^ 0xB << $teb & @r9 >> @r13 ! -0y1111 + $teb << +@rbx << @r9 >> @r8 << @rsp & @rdx << $teb ^ 0xB << $teb & @r9 >> @r13)  { test_statement(0xA50); }
$error$
$end$
3771
 if (@r8 << @r10 << @r8 <= ~@rax + 20 | $buffer << @rdi ^ $teb >> @rbx)  { test_statement(0x1395);  // /* This is a comment  } else { test_statement(0x8D7); val = 0y1 | @r9 ^ +$proc | 11 | @rsi ; ; }
$error$
$end$
3772
 if (@rsp >> 0y1101 << @r12 >> @rdx >> (0y1111) & $proc << ~~@r12 >> @r8 >> @rsp & @rdx >> 0xF & 0n12 & 1 ^ (@rax) << 0y11 | +@rdi << 0n6 & @r12 | 16 >> @rbp ^ @rdx & 0x11 | (@r8) ^ @rdi ^ +0n7 | -0n11 ^ $ip | $thread > @r9 + ($teb) >> @r9 << ($thread) | ~@rbp >> @r8 & +@r10 >> @r10)  { test_statement(0x4F2); } elsif ($ip << @rbp ^ -~@rdi ; $ip << @rbp ^ -~@rdi) { test_statement(0x1B0F); } elsif (@rbp | @r13 & @rax <= @rbx & @rbp & @r10 ^ 0n10 & @rbx | $buffer & $ip) { test_statement(0x2AD);  break;  /* This is a not closed comment  // /* This is a comment   for (; 0xB <> $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb & 0y100 ^ @r9 <= @r13 & @rsi) { test_statement(0x3DF);  /* This is a not closed comment } elsif (@rsp <> @rsp) { test_statement(0xAC8); @rax = $ip ; }
$error$
$end$
3773
 if (@rsi + @rdi << $proc >> 0xB << @r11 & $teb & @r10 >> @r13 & $buffer(@rsi + @rdi << $proc >> 0xB << @r11 & $teb & @r10 >> @r13 & $buffer)  { test_statement(0x431);  for (; @r13 ^ @r11 ^ @rdx ! @r10 & @rbx ^ -~0n15;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 >> 0x11 & ($proc) >> @rdx & @rdx & @r8 | @rsp >> ~@r9 > $ip << 1 & @rdx >> 12 | @r8 | 0x3 & @r13) { test_statement(0x15C1); } elsif ($proc & 11 ~@rax) { test_statement(0x636);  /* This is a not closed comment } else { test_statement(0xBAA);  for (val = $teb ^ ~$buffer; @r13 >= @r13 ^ ~+$thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r13 | ~@r8 < $ip | @rax)  { test_statement(0x1B20); } elsif (+@r10 <> @rdx) { test_statement(0x269B); } elsif (@r10 = @rsp) { test_statement(0x54A); } elsif (@rsp <= $teb) { test_statement(0x1054); } }
$error$
$end$
3774
 if (@rax & $teb << @rsi)@r12 + 0n13 >> @rbp & $teb << @rdi >> @r10)  { test_statement(0x257B);  break; }
$error$
$end$
3775
 if (@rdx & +-@rsp ^ +@r8 << +0y1101 | ~$proc << @rax | $proc & $teb ^ 16 ^ (0y110) = @rdx & +-@rsp ^ +@r8 << +0y1101 | ~$proc << @rax | $proc & $teb ^ 16 ^ (0y110))  { test_statement(0x215A);  /* This is a not closed comment } elsif (+@rsi >> @rsp & $thread & $buffer & @r11 ^ -@r11 >> $thread & -@r9 ^ @rdx & ~@rdx ^ 0n8 | @r8 >> 11 | 0n18 & @rax ^ 0y10011 < +@rsi >> @rsp & $thread & $buffer & @r11 ^ -@r11 >> $thread & -@r9 ^ @rdx & ~@rdx ^ 0n8 | @r8 >> 11 | 0n18 & @rax ^ 0y10011) { test_statement(0x25A1); ;  This is a not opened comment */ } elsif ($teb | 0y10010 & @rsp ^ @r12 ! $thread >> @r9 & -$buffer | @rsi ^ @rsp) { test_statement(0x1D03);  while  (@rax = -0n4)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 & +17))0xA ^ @rax) { test_statement(0xF44); } else { test_statement(0x8EB); }
$error$
$end$
3776
 if ($proc << @rdx >> (@rbp) >> @r12 >> $ip | 5 >> ~@r9 >> @rax ^ $teb >> @rdi >< 0y101 + @r11 << $thread & -@r8 << @r11 >> 0y1 ^ 1 & $teb >> @r9 & @r13 & @r10 ^ @rax >> @rbx ^ @r8 & @rsp ^ @rsi ^ @r11)  { test_statement(0x38); } elsif (@r10 << @rbp >> @r9 & -@r8 & @rdi ^ @r13 >> @rdi | $buffer >> @rsp & @r13 ^ @r8 | $thread & @rbp ^ @r11 >= @rsp << @rbp & @r13 ^ @rbp >> $ip) { test_statement(0x25A5); }
$error$
$end$
3777
 if (0y101 + $buffer << @r13 >> -~0n14 ^ @rbx << @rax ^ ~@rdx >> @rax & $teb ! @rdi << $teb << 0n13 & @r13 << ~@r11 & 0y10011 >> @rsp ^ -@r8)  { test_statement(0xDA7); ;  while  (+@r13 | $teb | @rbx = @r12 ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3778
 if (@r11 >> @r12 >> @r11 >> $ip | @rdi << $ip >> 0x10 >> $thread & (@rax) >> @r12 | 0xB & @r13 & $ip ! @rdi + @r9 << @r13 >> @r9 << 0n4 | @rsp >> $proc >> 0x0)  { test_statement(0xDA3);  if ($buffer ! @r12)  { test_statement(0x51F); } else { test_statement(0x1DD0); }  break;  This is a not opened comment */  while  (@rax != @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3779
 if (@rbp >> 0xB << @r9 & @rsp ^ $buffer << $ip >> @rbx >> $teb($ip << @rdx << @rdi & @r10 & $thread & 20 ^ $ip >> @r10 >> @rax & @r13 ^ @rsp >> $buffer & @r8 ^ (@rdi) & -@rsp ^ @rdi)  { test_statement(0x1F12); } elsif (@rbx << @rsi >> -$proc >> @rsp | @r10 >> @r10 & @rax & 5 ^ @rsp ^ $ip <= @rbx << @rsi >> -$proc >> @rsp | @r10 >> @r10 & @rax & 5 ^ @rsp ^ $ip) { test_statement(0x2442);  if (0y100 ^ @r12 <> @rdx ^ ~0n7)  { test_statement(0x1560); } else { test_statement(0x1F07); } ; }
$error$
$end$
3780
 if (@rbx & +(2) >> @r11 != @rbx << @r8 >> @rbp | ((0n9)) << @rbp >> +@r12 ^ @r9 >> $proc & $ip | @rbp & 0n5 & @r8 | @rdi)  { test_statement(0x2029); ;  for (; +$proc ^ @r13 >< $ip ^ @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8))@rsi) ;  if (@rdi <= @rsp)  { test_statement(0x1657); } }
$error$
$end$
3781
 if (@rbx + @r13 >> 10 >> 15 >> @r9 & -$teb >> @r13 >> $thread | @r9 ^ $buffer >> @rbx & @r9 & @r12 != @rdx + +12 & @r10 >> @rbx >> @rbx & ~$ip & @r12 | $buffer & @r11)  { test_statement(0x718); } else { test_statement(0x2375);  /* This is a comment */ }
$error$
$end$
3782
 if ($thread << @rsp >> ~@rsp << $proc & @r13 ^ $proc << @r11 & @r12 >> $teb != -$buffer + @rsi >> $thread >> +@rsp >> $buffer & 0y111 << @rdi >> @rsi | @r10 >> $teb >> @r12 | @r11 >> @rdi)  { test_statement(0xAE3);  for (val = 10; @r12 & @r8 = @rsi & @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3783
 if (@rdi << +@r11 >> 0n17 >> @r11 @rax + @rsp << 0y10011 << @rsi >> +@r9 >> 0y11 & ~@rsi >> 0y1000 >> @r13 ^ @rbx >> 0n14 >> @rax & @r11 >> @r12 ^ ~$proc >> @r8)  { test_statement(0x1125); }
$error$
$end$
3784
 if ($proc << @r13 << @rsp >> (@rsi) >> $thread >> @rdi ^ 0y10000 << @rsp & 0y1111 >> @rbx & @rsi & ~@r9 | $teb >> @rsp >> 0n15 ^ 0n4 & @rbp & +@r9 ^ -$ip & (@r9) | 0x1 >> @r10 & +@r8 == -0n8 << @r9 >> $proc >> @rdx | @r9 << @rdi | @rdx ^ @rax | +@r13 & @r9 ^ $proc ^ $teb)  { test_statement(0xDEE);  /* This is a not closed comment  while  (@rbx ^ $ip < $buffer ^ @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1FC8);  if (@rsi ^ @rax | @r11($proc ^ @rbx)  { test_statement(0x1313); } else { test_statement(0x15D9); }  for (val = 10; (@rdi) <> $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi < $teb) ;  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 6 ! @r11) ;  This is a not opened comment */ }
$error$
$end$
3785
 if (0n17 + @r8 & @rbp << @rdi >> 0xC >> -21 ^ 13 >> @rsi >> @rdi | @rdx << @r8 >> @r8 >> $ip & @rbx & @r12 & 0y11 ; @r11 >> @r11 ^ $teb ^ +@r13 & @rsp)  { test_statement(0x5E4); }
$error$
$end$
3786
 if (@rax + 0n13 @rax + 0n13)  { test_statement(0x2461); }
$error$
$end$
3787
 if (@r9 << -@r12 >> $buffer ^ -@rdi >> 0y101 >> $buffer))@r9 << -@r12 >> $buffer ^ -@rdi >> 0y101 >> $buffer)  { test_statement(0x1CFD); } else { test_statement(0xBC1);  break;  while  (0x13 | 23 ! @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3788
 if (0x8 + @rax >> @r10 << 11 ^ ~~@rsi ^ @r9 >> 2 & $thread | $ip << @r13 ^ @r10 & @rsi ^ $ip | @rdx >> @rax & $proc & -~~0y11 ^ $ip ^ $thread <> @rbp << @rdx & 0n6 >> @r13 >> $buffer | @r9 >> @rdx >> @r10 ^ @rsi >> @r13 & @r13 | +@r9 >> @rdx)  { test_statement(0xD14); }
$error$
$end$
3789
 if (@r13 + +@r11 << @r12 | ~@rdi << @rdi >> @rsi >> @r13 & @r9 | @rsp >> (@r13) | @rsi & @r9 | @r9 ^ @rsi | @rbp ; @r13 >> $teb << $buffer & @rdi << @rbx >> @r8 >> @rbp ^ 0x8 << @r9 | $teb >> @rdi >> +$teb & @rdi & 0x9 & 0x2 | 0x6)  { test_statement(0x7EB);  while  ($buffer ^ $buffer ^ @r9 | @r13 | @r11 ; @r13 | $proc ^ @rdi | +($proc) | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  break; } else { test_statement(0x1B80); ; }
$error$
$end$
3790
 if (@r10 + @rdi << @r9 << $thread ^ 0xA >> $thread & $ip & $ip | @r9 << @r10 >> $thread ^ (+$ip) >> @r11 | @r8 >> 0x3 ^ $ip & @rdi ^ $thread @rax << -@rdx >> @r8 << @rdx & @rdx << @rsp)  { test_statement(0x920); } elsif (@rdx >> $proc >> @r10 >< $teb ^ ~@rdx >> -$thread | 0n18 & 3 ^ +-0x2 & $buffer) { test_statement(0x423);  while  (-@r8 ^ @rbp | 0n1 | @rsp)@r9 ^ @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x22A8); }
$error$
$end$
3791
 if ($proc >> 0xE ^ $thread & @rbx ^ @r9 & -(@rsi) | (@r13) << @rbp >> $teb ^ @rdx >> ~$ip))@r13 + 0xC & @r11 << @rbx & @rdi >> @rsi)  { test_statement(0x1BF8); ;  /* This is a comment */ }
$error$
$end$
3792
 if (@r9 + @r11 & -@r11 << +@rdx & 0y1111 & @r9 & $ip ^ 0xB >> $teb | ~@rbp << @rsp >> @rsi >> 0y10000 & $thread ^ @rbp >> 0y1011 & @r12 ^ @rdx ! @r9 + @r11 & -@r11 << +@rdx & 0y1111 & @r9 & $ip ^ 0xB >> $teb | ~@rbp << @rsp >> @rsi >> 0y10000 & $thread ^ @rbp >> 0y1011 & @r12 ^ @rdx)  { test_statement(0x26FF); } elsif (@rbp >> @r13 & $buffer @rbp >> @r13 & $buffer) { test_statement(0x41F);  This is a not opened comment */ } elsif ($ip >< ~0y1111 >> @r8 | @r11 ^ @r12 | $thread ^ @rbp | @r10) { test_statement(0x1950); }
$error$
$end$
3793
 if (0y1010 << 2 << @rsi & 0n8 << $proc >> $thread >> $ip & (0n13) & $thread ^ -@r10 & $teb >> (0n19) | @r9 >> $teb >> 0y110 & @r12 >> $proc ^ @r12 >> @r12 ^ $proc & @r8 != @rsp << @rsp >> 0n2 << @r11 & $proc << ~~+@rsi)  { test_statement(0xC3); } elsif (@r9 | -@rsp >> 0n11 ^ @r13 & 0xF @rdi >> @rax >> @r13 & ~@rsp >> @r11 ^ 0y1110 ^ (@r12)) { test_statement(0x4B3); } else { test_statement(0xD54);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 | @r12 | @r10 >= $ip | @rsi) ;  while  (@r10 == @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3794
 if (@rax + @rax >> @r11 & @r13 << @r13 & $thread >> @r8 == @rax + @rax >> @r11 & @r13 << @r13 & $thread >> @r8)  { test_statement(0x783); } elsif (@r11 << (@rbx) >> @r12 & $thread >> 0n11 & (@r11) | @rsi >> @r12 ^ $teb ^ @rdi((@r11 << (@rbx) >> @r12 & $thread >> 0n11 & (@r11) | @rsi >> @r12 ^ $teb ^ @rdi) { test_statement(0x440);  for (val = 10; @r9 ^ @r9 | @rdi | 0y101 != @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3795
 if ($thread + 0y1000 << $teb >> @rsi >> ~@r9 & 0y1011 << -@rsp ^ @r8 << 1 & @rax >> $ip & @rbp ^ @rbp | @rax >> 0n3 >> @r8 & @rbp >> @rbp & @r12 & @rdi ^ @rsp & @rax & ~@r12 ^ @rax | 0n6 >> 0x11 <> -0x10 + +6 >> @r11 ^ $ip << @rsi & $teb & @rsi & @r8)  { test_statement(0x1ABE); } elsif (21 >> ~0n0 >> +0y10 ^ @rdi >> @r11 ^ +0xD ^ @rbx)$thread >> $teb ^ @rbx) { test_statement(0xA1C); } else { test_statement(0x1A4F);  This is a not opened comment */ }
$error$
$end$
3796
 if ($buffer & @r13 << $buffer >> 0x2 & @r11 ^ +0n5 << 0x2 & @r13 | $teb << $teb >> @rbx & @r10 >> $ip = -16 + @rax << 0x6 << -0x5 >> 0n8 ^ (@r9) >> @r10 ^ @r12 >> (0y1010) | @rbp << $teb ^ @r13 >> $proc ^ @r9 | @r13 >> @r9 & @rax & @rdx)  { test_statement(0x1924); } elsif (@r11 >> 0y10001 & @rdi >> @r8 & @r13 & $buffer ^ ~$teb >> @rax | @rdx >> (@rsp) & ~@r13 & $teb | @r9 ^ @r12 | 0y1110 | @r11 $ip & $thread >> ~@rsp & @r10 & @rsp ^ ~$thread >> @r11 ^ @rax ^ 0n1 | ~@r8 >> $proc & @rdx & $teb ^ @r11 ^ 0x6) { test_statement(0x85D);  // /* This is a comment   if (-@r11 >= @rdi)  { test_statement(0x107B); }  // /* This is a comment  }
$error$
$end$
3797
 if (@r9 + @r12 << 0y1110 >> -@r13 ^ ~@rsi << @r8 >> 0x13 >> @rax))@r10 << $teb << @rbx & $proc & @rsi >> @rsp | 0y110 << $thread ^ @rsp ^ 23 & -@rdi ^ @r8 ^ @r12 | 0y10011 >> $proc & $buffer & @r11 ^ ~$ip ^ -0y11)  { test_statement(0x1D4B); } elsif (0y1000 << 1 ^ @r8 >> @rbx & $proc ^ $buffer & +~@r8 <> 0y1000 << 1 ^ @r8 >> @rbx & $proc ^ $buffer & +~@r8) { test_statement(0xCB9); } elsif (@rax(@r12 >> $thread | @rbx ^ $proc) { test_statement(0x7F0);  // /* This is a comment  }
$error$
$end$
3798
 if ($teb << 0y1011 >> ~@r8 << 0n3 >> (0x4) & @rax << @r11 >> @rsp ^ 0y111 << @r11 ^ @r10 & @rsi ^ @r11 & 0n5 ^ @r11 | @rbp << $buffer | @rsp & @rdx | @r13 & @r8 | @rsp >< @rdi << 0n1 << $ip)  { test_statement(0x1E29);  This is a not opened comment */  while  (@rsp | $teb((@r8 | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  if (@rsi == 20)  { test_statement(0x1F97); } else { test_statement(0x258A); }  break; } else { test_statement(0x26E0);  break;  if ((@rbp) | @r12 0y1111 | $teb)  { test_statement(0x5F0); }  break; }
$error$
$end$
3799
 if (($buffer) << @rax << @rbp | 0x6 ^ @r13 >> @r11 & 7 ^ @rdi & $ip == $proc + @r12 << (@rsi))  { test_statement(0x1E0); } else { test_statement(0x19D9);  while  (@rbp ^ @r11 >= @r8 | $buffer | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3800
 if (@rbx + @rbp >> ~+@r11 << @r9 >= $thread + +@r9 >> (@rbp) & @rdx << @r12 >> 10 >> @r10 ^ @rsp << $buffer >> @r11 >> @rbx | 7 << @r10 & 0n8 | @r11 >> @rsp)  { test_statement(0xAA3); } else { test_statement(0x1DC);  break;  if (@r9 | +~@r9 < @r9 | +~@r9)  { test_statement(0x1DFE); } elsif (@rax((@rax) { test_statement(0xD25); } else { test_statement(0x1498); }  This is a not opened comment */ }
$error$
$end$
3801
 if (@rdi + $ip >> 3 | +$thread >> @rbp >> -@rsi & -@r8 & ~$buffer & @r8 | @r12 & 0y0 | @rax ^ @rdx ^ -$ip | $buffer ^ 0n5 | @rbx | 0y1000))@r13 << @rax >> @r10 << 0n13 >> @rdx)  { test_statement(0x29); }
$error$
$end$
3802
 if (12 + $ip << @rdx << 0xC >> (@rsi) & @r13 & 17 >> -$thread != 12 + $ip << @rdx << 0xC >> (@rsi) & @r13 & 17 >> -$thread)  { test_statement(0xE95); } elsif ($thread << $proc | $ip >> @rsp ^ ((@rdi)) & @rdi = $ip >> +@rsp >> @r8 & +@rax >> $teb ^ ~@rsi & (~($proc)) ^ $teb ^ @r11) { test_statement(0x35A);  if (@rdx | $buffer <= $proc ^ $teb | 0n6)  { test_statement(0x1C14); } else { test_statement(0x10D6); }  for (@rax = $teb | 0xA; @rbp | (@r11) != (0y111) | @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rax < @rax)  { test_statement(0x440); } else { test_statement(0x517); } } elsif (0y1110 >> @r13 ^ $teb ^ 0y1 | @r9 & $proc ^ 0xA ^ $proc 0y1110 >> @r13 ^ $teb ^ 0y1 | @r9 & $proc ^ 0xA ^ $proc) { test_statement(0x5B3); }
$error$
$end$
3803
 if (@r11 & 23 & 0n19 >> @rdx & @r12))0n19 + $teb << $ip << $proc >> @rax >> @rsp >> 0n8 & 6 >> $proc >> (0n17) ^ @r10 << $ip ^ 0y1011 & 0y1111)  { test_statement(0xE24); } elsif (-@r8 ^ +$thread & (7) <= -@r8 ^ +$thread & (7)) { test_statement(0xBFD); } else { test_statement(0x7BB);  while  (@rdi ^ $thread <= @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   while  (@rsi ! @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  /* This is a not closed comment  /* This is a comment */  if (@r11 ; @rbp)  { test_statement(0x8D3); } }
$error$
$end$
3805
 if ($thread + @rdi << @rbx << ~~@r10 >> @rdx >> @r12 >> $teb | $proc << @rbx >> 0xE ^ $proc >> ~($ip) & @rbp 0x0 + 0y1 & @rbp & @r9 & 0n7 | 0y10001 << $thread ^ ~20 | @r9 >> 15 | $ip | @r11 ^ 1 | $buffer | 0y0)  { test_statement(0x1453); } elsif ($thread << +@r8 >> (@rdx) >> @rbx & 0xB >> $buffer & @rax & 0x12 ^ 0xE | $teb & @rax & $ip != -@rsi << @rdi >> $ip >> 0x2 ^ @rdi ^ @r12 & @rsi ^ $teb ^ @r10 | @rax >> @rsi & @rsp ^ +@r11 & $thread ^ $thread ^ 0y11 | ~(@r9)) { test_statement(0x17C8);  /* This is a not closed comment  This is a not opened comment */  if ($teb <= $teb)  { test_statement(0x1CA4); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 +@r10) ;  /* This is a comment */ } elsif (-$teb >> 0y1010 & @r10 & @rsi = @r9 | @r13) { test_statement(0x174D); } else { test_statement(0x77); }
$error$
$end$
3806
 if (@r13 + $thread >> @rsi << $proc >> 0y10001 | (((@r10))) << @r13 ^ +@rbp >> @rsp & @r11 ; @r13 + $thread >> @rsi << $proc >> 0y10001 | (((@r10))) << @r13 ^ +@rbp >> @rsp & @r11)  { test_statement(0x1A8A);  if (0y110 & $proc ! @rsp | @rbp | 1 | $ip)  { test_statement(0x780); }  /* This is a not closed comment } elsif (0n3 >> 0y10001 >> $buffer & @r11 & $ip & 0y11 | @r10 >> @rdx & @r11 & $buffer ; @r8 | 0xD ^ $proc & (@r12) | (@rsi) & $thread | @r11 ^ @r11) { test_statement(0x16B1);  // /* This is a comment   This is a not opened comment */ } elsif (@r10 ! @rsi >> @rsi ^ @rsi & +~$thread) { test_statement(0xA7E); } elsif (15 & @rdx ^ ~$ip ^ 0x10 == @r12 & @rsi ^ 0n18 ^ $buffer | @rsp) { test_statement(0x1C66); } else { test_statement(0x859);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 ^ -@rdx | @rdi(@rsp) ;  while  (@r8 = -+0y101 | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3807
 if (@r10 + 14 << @rbx << 0y110 >> @r13 << @rsi & @rdx >> @r12 >> $thread <= $proc + 0y10010 << $proc >> $thread >> @rax | @r8 & $ip & @rdi | $proc >> @rdi)  { test_statement(0x127F); } elsif (@rdi << $ip >> 0x13 ^ @r9 & 0x3 & 0y10001 ^ @r11 ; @rax << $proc ^ @rbx >> 2 & @rdi & -~(@rdi) | @rbx >> $thread ^ @rbx ^ @rdi | ~0y111 & @r11 | @r10) { test_statement(0xFB0); } elsif (@r13 >> @rbp & @rbp | $buffer > @r13 >> @rbp & @rbp | $buffer) { test_statement(0xFCB);  for (val = 10; @rbp | $buffer <= @r12 | 15;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3808
 if (@rbp << -$ip & @r9 >> @r10 & 0x0 & $buffer & @rsi >< @rbp << -$ip & @r9 >> @r10 & 0x0 & $buffer & @rsi)  { test_statement(0x117D); } else { test_statement(0x1857); }
$error$
$end$
3809
 if (@r9 >> @r11 << $buffer ^ @rbp << @rbx > @r9 >> @r11 << $buffer ^ @rbp << @rbx)  { test_statement(0xD68); }
$error$
$end$
3810
 if (+@r11 << 0x10 << ++0x7 | (0n0) << @r11 >> 3 >> $thread & $thread >> +0xB & @rdx ^ @rsi >> $thread | $proc & -$teb | 16 | @r13 ^ @rbp)+@r11 << 0x10 << ++0x7 | (0n0) << @r11 >> 3 >> $thread & $thread >> +0xB & @rdx ^ @rsi >> $thread | $proc & -$teb | 16 | @r13 ^ @rbp)  { test_statement(0x13D2);  while  (0y1000 & @rdx != 0y1000 & @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = ~+17 & @r9 | @rbp ; } else { test_statement(0x1150);  while  (@rsi ^ @r10 | $teb < 0n6 | @rbp | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3811
 if (($teb) + @rdi << $thread << @rsi ^ @rsp << @r11 >> $ip >> @rdx & $thread & @r9 & @rdx | $buffer << 0x3 ^ $proc >> @rdi <= (1) + @rax & 1 >> @r13 >> $thread | -~@r12 << $buffer & @r13 >> $buffer ^ 12 >> @r11 & @rax & +@rsp ^ ~@rax & $proc | @r8 & @r13 | -$ip | @r10 | @rdx)  { test_statement(0x1AF6);  /* This is a comment */  for (val = @rdi ^ @r8 | @r11; @rsi ^ 0y110 | 0y111)(@r13) ^ $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif ((~~(~@r13)) >> 0y11 | @rbx ^ $teb & ~@rsp | +@r12 ^ ~0x10 ^ @r10 <> (~~(~@r13)) >> 0y11 | @rbx ^ $teb & ~@rsp | +@r12 ^ ~0x10 ^ @r10) { test_statement(0x1F35);  // /* This is a comment  }
$error$
$end$
3812
 if ($ip + @r13 | ++@rdx & @rsi >> @r10 ^ @rsp >> @r8($ip + @r13 | ++@rdx & @rsi >> @r10 ^ @rsp >> @r8)  { test_statement(0x216D); } elsif (@r11 << 0y100 ^ @r8 ^ -+0y110 ^ @rax ^ @rsi < @r11 << 0y100 ^ @r8 ^ -+0y110 ^ @rax ^ @rsi) { test_statement(0x956);  This is a not opened comment */  break;  This is a not opened comment */  if (@r10)@r10)  { test_statement(0x18EE); } } elsif (@rdi & @r12 & @rbp ^ @rbp))@r12) { test_statement(0x1809);  for (; $ip >< $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (0y10000 ^ $teb | @rdx ^ $teb ! @r8) { test_statement(0x11E1); } elsif (@rax ! ~0x6) { test_statement(0xE17);  if (0y100 ! @r11)  { test_statement(0x146D); } elsif (@rdx ! 0y1100) { test_statement(0x1869); }  break;  while  ($ip < @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1C62); }
$error$
$end$
3813
 if (@rbp + @rdx << @r11 << @rbp ^ @rsi >> @r13 >> @r9 ^ $thread >> @r8 & $proc & @rbp < @rbp + @rdx << @r11 << @rbp ^ @rsi >> @r13 >> @r9 ^ $thread >> @r8 & $proc & @rbp)  { test_statement(0x20A5);  for (val = $ip & @rdx ^ @r9 | 0y0 ^ @r8 | @rdi; -@r9 & 0x4 | @r8 | $thread == -@r9 & 0x4 | @r8 | $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x11A0);  /* This is a comment */ @rax = @r12 | ~$proc ; }
$error$
$end$
3814
 if (~@rdx + 0y1011 << -@r8 << 0y101 ^ $buffer << $teb >> @r8 >> (0y0) & @rax & @rax ~@rdx + 0y1011 << -@r8 << 0y101 ^ $buffer << $teb >> @r8 >> (0y0) & @rax & @rax)  { test_statement(0x1CAA);  // /* This is a comment   for (; 0n1 ^ @rdx > 0n1 ^ @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (@rax = @rdx; --@r11 | @r8 == $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   for (val = 10; @r12 >< @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x6D9); }
$error$
$end$
3815
 if (@rbx + +@rbp << @r12 << $proc & @r10 << 11 ^ @r8 << @rdx & -@rbx ^ @rdi >> 0x7 & @r12 ^ @rbp ^ @rbx | @r11 << @r10 ^ @r9 >> 12 & @rsi ^ 0x8 | @rdi >> ~$teb ^ 0x1 & @rsp ^ $proc ^ (0xA) = @rbx + +@rbp << @r12 << $proc & @r10 << 11 ^ @r8 << @rdx & -@rbx ^ @rdi >> 0x7 & @r12 ^ @rbp ^ @rbx | @r11 << @r10 ^ @r9 >> 12 & @rsi ^ 0x8 | @rdi >> ~$teb ^ 0x1 & @rsp ^ $proc ^ (0xA))  { test_statement(0x273);  break;  for (val = 10; @rsp | (0y1100) | @rsp == @rsp | (0y1100) | @rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; $thread ! $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3816
 if (~$ip + @rbp & @r8 >> @rax >> $proc & $thread ^ @r9 << @rdx | @r8 ^ @rbx >> @rax & $ip ^ @r12 | $teb & @rbp <> @rdi + @rdx >> @r10 << @r10 >> @rsp >> 0n18 ^ @rsi | @rbp << 15 >> @r8 ^ @rbx & $proc & @rdx ^ @rsp & @r8)  { test_statement(0x20D8);  /* This is a not closed comment }
$error$
$end$
3817
 if ($teb | $proc >> ~@rsi >> @r10((@r12 + $teb & -@r8 << ~@rax ^ +@rsi << @rdi & $teb >> $ip ^ @rdx & 0x6 | @rsp & @r10 & @rbx)  { test_statement(0x2528); } else { test_statement(0xBE2);  /* This is a not closed comment }
$error$
$end$
3818
 if (@r13 + @rsi << @r8 | ((@rax)) << 0x11 ^ @rax ^ $teb & @rsp | $thread & @r11 | 21 & @r8 | @rsp | @rbx(@r13 + @rsi << @r8 | ((@rax)) << 0x11 ^ @rax ^ $teb & @rsp | $thread & @r11 | 21 & @r8 | @rsp | @rbx)  { test_statement(0x13AD); } elsif ($teb << @rsi & @r11 >> $teb & $buffer & $thread | $proc >> ~@r9 & 0x1 | @r11 & @rbx ^ @rsi ^ @r9 | +$proc | 0y1001 | $thread <> @rax << ($thread) >> @r9 ^ @rdx >> @rbx ^ 0x6 | $buffer >> @rax & @rbp & @rbx ^ +@rbx & @r10) { test_statement(0x14B1);  // /* This is a comment   // /* This is a comment   if (0n7 = 0xF)  { test_statement(0xFC1); } else { test_statement(0x155B); } } else { test_statement(0x2294); ;  while  (~(@rax) ~(@rax))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (13 <> $teb)  { test_statement(0x260B); } elsif (@r13 != 0n10) { test_statement(0x25D9); } elsif (~@r11(-$buffer) { test_statement(0x1B21); }  // /* This is a comment  }
$error$
$end$
3819
 if (@rsp >> @r12 ^ @rdi << (@rbp) >> @r8 >> @r10 ^ $teb | @r11 >> @r9 >> @rbx ^ @r10 >> @r10 & $teb & ~@r8 ^ @r10 & 0y1100 <= 0x13 << @r9)  { test_statement(0x2479); } elsif (0x3 << @r9 >> @r13 >> (@rbx) ^ $buffer & $teb & @rsi((0x3 << @r9 >> @r13 >> (@rbx) ^ $buffer & $teb & @rsi) { test_statement(0x84E); } elsif (@rbp & @r13 & @r11 ^ @rbx ^ @rdx <= @rbx >> ~$buffer ^ $proc & @r12) { test_statement(0x158A);  break;  /* This is a comment */ } elsif ($ip & $thread | -@r8 ^ ~$proc > ~-$proc ^ +$proc | +0n19 ^ @rdx) { test_statement(0x18D8);  break;  This is a not opened comment */ } else { test_statement(0x487); }
$error$
$end$
3820
 if ($thread << 0x9 & ~@rsp ^ (~($teb)) | 0y10000 << 1 >> @r12 >> (@rsp) ^ $thread >> ~@r12 == (14) << $thread >> 0x4 >> @rdi >> 0n14 | @r10 >> @r12 >> 6 & $ip >> @rbx ^ @rdx >> ((@r12)) ^ @rbx | @r9 ^ @r10 & $proc ^ @r13)  { test_statement(0x239F);  This is a not opened comment */  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 22 ; 22) ; @rax = +21 ; } else { test_statement(0xA60); }
$error$
$end$
3821
 if (@r12 + @rsi << @rbp ^ @r12 << ($teb) & 0n1 ^ @rax >> $thread & $buffer & @rsp ^ 0n7 <= -~$teb & @r11 & @r12 | @rbx & @rdi ^ $proc >> 0n13 ^ $teb & ~0x2 ^ 0y10 ^ @rbp)  { test_statement(0x1818);  /* This is a not closed comment  while  (0x0 >= 0x0)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rbp | @r10((0n7 | 0n19)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n11((@r13) ; } else { test_statement(0x1F5A); }
$error$
$end$
3822
 if (-@rdx + -@r13 << @rsp << @r8 == 7 & @r8 >> $ip >> @rbp & @r10 >> @rsp ^ 0y100 >> $ip >> @rsi | @rsi << $teb | @r8 >> @r10 | -@rbx & 0n5 ^ 7 | 14 ^ $proc)  { test_statement(0x1E1E);  for (val = 10; ($buffer) & $ip ^ @r11 | @r9 | @rdi | @r12 != ($buffer) & $ip ^ @r11 | @r9 | @rdi | @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rax ^ @rax = -@rbx | @rbp)  { test_statement(0x154E); } else { test_statement(0xEAA); } } elsif (+@r10 ^ 0n10 >> $teb & @rdx & 0n9 ^ $proc & $buffer > $buffer << $proc >> @rax >> $thread | 0n18) { test_statement(0xE3F); }
$error$
$end$
3823
 if (@r10 + $proc >> @rbx << ~$buffer >> @rbx >> 0y1 & @rsi >> @r10 >> $thread & $buffer >> @r12 | @rsp << @rsp >> @rbp >> @rsi ^ $ip >> @rdi & @r11 | ~@r12 >> $teb & @rdi ^ @rsp @r11 >> +@r12 >> (@rbx))  { test_statement(0x132);  /* This is a comment */ } elsif ((@r8) << 0n11 >> @rax >> +@rax ^ @r13 != (@r8) << 0n11 >> @rax >> +@rax ^ @r13) { test_statement(0x6DE); } elsif (@rbx ! 0y1110 >> ~(@r8) | @r8 | @rbp ^ @rdx) { test_statement(0x34C); } elsif (@rdi((@r10 | $buffer | @r13) { test_statement(0x6EB);  while  (@rax ; $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; 0n12 >= -@r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3824
 if ($ip & @r8 | @r12 << @r13 == 0n4 + @r9 << $teb & @r13 << @rbp >> @r10 & -0n4 | @rdi >> @rsi >> @rbx & @r10 & @r11 & @rbp | @rbx ^ 16 & @rax | $ip | @r13 | @rsi)  { test_statement(0x49); } elsif ($teb >> -@rbx >> 0n14 ^ 0n15 >= 0y1001 >> 7 >> 7 ^ ~-0y1011 >> $proc | @rbx >> $thread ^ 0n16 & (-@rbx) ^ $buffer) { test_statement(0x185E);  /* This is a not closed comment } elsif (@r8 >> ~@r12 & @r10 & @rax ^ $buffer ^ @r12 | $teb | @r11 ^ @rsp)@r9 >> @rbx & @r12 | @r13 ^ $teb ^ ~@rdx) { test_statement(0x1FBB); } elsif (@r12 | 0y10 ^ $teb(@rax | @rdi ^ @r12) { test_statement(0x1EC); } elsif ($thread ^ @rbp >= (0x1) ^ 11 | @rbp) { test_statement(0x3F); ;  while  ($teb == @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($ip))@r11)  { test_statement(0x1B78); } }
$error$
$end$
3825
 if ($ip + $ip >> $proc >> @rdx ^ @rsi & 0x0 ^ @rbx >> @rdi ^ ((@r12)))(@rsi) + @rbx >> $teb << 0n17 >> 0xB >> $thread | $thread >> @rbp & @rdx >> @rsi & @rbx & @rdi)  { test_statement(0x140F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi ^ @rsi ^ 0y111 | 0y101((@rsi ^ @rsi ^ 0y111 | 0y101) ; } else { test_statement(0x7FC); }
$error$
$end$
3826
 if ($buffer << 14 & @rax << @r11 & 3 >> @rdx ^ 10 >> ~-@rdx & 0n5 >> $ip & @rsi > $buffer << 14 & @rax << @r11 & 3 >> @rdx ^ 10 >> ~-@rdx & 0n5 >> $ip & @rsi)  { test_statement(0xE); val = 15 >> ~@r13 | 0y1110 & (@r11) | @r9 ^ @r8 ; } else { test_statement(0x1034);  /* This is a not closed comment ; @rax = @r10 | @rdx ; }
$error$
$end$
3827
 if (@r10 & +$buffer << @rdi >> 21 >> 0x6 & 0n12 >> @r8 & @r8 & +(@r9) ^ @rbp << @rbp = (@r9) + @r12 >> 0n4 << $thread & @r9 << @rsp >> ~@rsi & ~0x0 & @r8 ^ -0x8 << @rsi & +@r10 ^ $proc >> @rbx & @rsi & 0n9)  { test_statement(0x19FA); @rax = 0n6 >> $buffer & $ip ;  /* This is a not closed comment }
$error$
$end$
3828
 if ($buffer & 0y11 << @rdx >> @r10 >> @rbx & 0x13 | (0) << 0xF >> @r9 >> @rdx ^ 0x11 ^ @r12 & $teb | 0x7 >> ~@rdi ^ @rdx & @rbp | @r10 != 0n5 << $teb & @r10 << 0n7 >> $thread | @rdx << 0y10000)  { test_statement(0x1DDA);  while  (+@rbx & @rax ^ (@r8) | $teb | $proc | 0y1010 @r9 | -@rbx ^ @rsp | @rbx | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3829
 if (@r13 & $buffer >> +~~@rsp >> -@rax & $proc >> 6((@rdx + $proc >> $proc)  { test_statement(0x26DF); } elsif (-(@rdx) >> @r11 >> (@r13) & 0n0 >> +$teb & @rbp ^ @r10 >> +@rbx & @rsp ^ @r13 & @r9 | @r13 >> @r9 ^ +@rsp ^ @r13 0x1 << @rbx >> $ip >> 0n14 | @rsi & @r9 ^ $ip & (@rax) ^ 0x10 | $ip & $teb ^ @r9 ^ @r9) { test_statement(0x24CC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 ^ @r12 != ~-$proc ^ @rsp) ; } else { test_statement(0x39C); }
$error$
$end$
3830
 if ((0x13) + +0xF >> @rdx << @r10 & @rsp << @rdx ^ @rsi >> 0n18 >> +@r8 | @rsp >> $ip >> 13 & $teb >> @r13 & +@r11 | $teb | $ip | 0y101 ; (0x13) + +0xF >> @rdx << @r10 & @rsp << @rdx ^ @rsi >> 0n18 >> +@r8 | @rsp >> $ip >> 13 & $teb >> @r13 & +@r11 | $teb | $ip | 0y101)  { test_statement(0x20A5); }
$error$
$end$
3831
 if (@r12 + @rsi << (+@rsi) >> 11 << @rax >> 15 ^ 0x12 >> @rbx >> $thread | -@rax >< @rax >> $buffer << @rbp >> @r13 >> ($buffer) ^ @rsi >> @r11 >> @rbp & 0x2 ^ @r12 >> 0n17 & -$buffer)  { test_statement(0x1F0A);  /* This is a not closed comment } else { test_statement(0x13A1); @rax = @rsp & $proc ^ @r8 ;  for (val = 10; @rsp | @r9 ! ~0x11 | 0n16;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0 != $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3832
 if (@rbx + @r12 << @rdx << @rsi >> ($thread) << @rsp(@rdi + 0x3 ^ @rax << @rdi | @rsi >> @r11 & @r9 >> 0n13 & @rdi & $teb)  { test_statement(0x86E); } else { test_statement(0x5EF); }
$error$
$end$
3833
 if (@rbp << (@rbx) << @r11 >> $teb << @r11 & @rsi << @rbx ^ @r10 >> @rsi | 0n19 << 0n5 >> $proc >> @rsp ^ @rdi >> 0x1 & @rbp & @r9 <= ($proc) + ~@rbx >> -$ip << @r11 & ~@r11 << $proc >> @r8 >> @rdi)  { test_statement(0x23A1); }
$error$
$end$
3834
 if (@rdi << 0y10 & 0xF >> @rdx >> @r10 & @rdx & ~@rdi ; @rbx << 0n4 << @rsi)  { test_statement(0x1E6A);  // /* This is a comment  } elsif ($ip << -@rsp >> @rdi >> ~($ip) & @rdi >> $teb & $thread ^ @rsp ^ $proc & $proc | @r9 | 0y1001 & 0n9 ^ $teb ^ 4 ; @rbx) { test_statement(0x18C5); } elsif (-+0x6 & @rsi ^ $ip & 0y111 ^ @r12 ^ @rax ! -+0x6 & @rsi ^ $ip & 0y111 ^ @r12 ^ @rax) { test_statement(0x8D3); } elsif (@rdi & 16 ^ $teb ^ @rsp = $buffer ^ 0n9 | @r9 | @r13 | @rax) { test_statement(0x1654); }
$error$
$end$
3835
 if (+@r9 << 20 ^ @r9 >> @rbp | @r9 & @r12 >> -+@r12 & -$ip & @rbp ^ $ip & @rbx & @r12 ^ 0y10000 ^ $ip | @rdx ^ @rsi & $thread ^ @r10 | $teb <= @r8 + @r13 | $proc << 0n3 | @rsi >> 0x3)  { test_statement(0x2542); ;  if (@r8 ^ @r11 | $buffer | $buffer < @r8 ^ @r11 | $buffer | $buffer)  { test_statement(0x1CF8); } elsif (@r8 | 22))@rdi) { test_statement(0xC17); } else { test_statement(0x15D2); } } elsif (@rsp))13 << @rax ^ @r10) { test_statement(0x10CB);  /* This is a not closed comment } else { test_statement(0xAB7); val = @rbx ^ @rsp | @r10 ^ 0x4 ; @rax = ~-@r12 ; }
$error$
$end$
3836
 if (@rdx & @rbp >> (@rdx) >> $ip & 0y1 >> @rsp & +$ip & @r9 <> $teb >> 11 >> @rsi & $buffer >> @r10 >> @rbx & @r11 ^ 14 >> @r13 ^ -($buffer) >> $buffer & @r13 ^ @rbx & @rax)  { test_statement(0x1590); } elsif (@r8 << @rsp >> @r13 >> @r8 >= @r8 << @rsp >> @r13 >> @r8) { test_statement(0x263F); }
$error$
$end$
3837
 if (@rbx + -@rbx | @r9 >> @rsp & @r9 & +0y10 ^ $thread ^ $proc & @rsp >= $ip << 0x7 << 0n12 ^ @rdx << @rsp >> @r12 >> @rax & @r9 & @rdi & @r13 ^ -@rbp >> $teb ^ ($ip) & $thread ^ @rbx)  { test_statement(0xE30); } else { test_statement(0x24EC); }
$error$
$end$
3838
 if (@r9 + ($ip) & @rdi << +@rdx >> @rdi >> -@r12 ^ @rsi << @r10 | @rbx << @r9 >> @rbx ^ @r11 & 0xC & @rbp > @r9 + ($ip) & @rdi << +@rdx >> @rdi >> -@r12 ^ @rsi << @r10 | @rbx << @r9 >> @rbx ^ @r11 & 0xC & @rbp)  { test_statement(0x2583); }
$error$
$end$
3839
 if (-@rax + @rbp << @r9 >> @r12 >> @rsi & $ip << @r10 >> $thread & @r10 & $proc | $proc >> @rax >> ~~+14 & @rsi >> $teb & $teb & @r11(-@rax + @rbp << @r9 >> @r12 >> @rsi & $ip << @r10 >> $thread & @r10 & $proc | $proc >> @rax >> ~~+14 & @rsi >> $teb & $teb & @r11)  { test_statement(0x2185); } else { test_statement(0x204); @rax = ~0xC & @r11 | @r8 ^ 16 ;  /* This is a not closed comment  // /* This is a comment   /* This is a comment */  /* This is a not closed comment }
$error$
$end$
3840
 if (+@rsi >> $teb << @r9 >> @r13 & @r12 | @rsp << @rbx & 0x4 ! +@r9 & ~@r11 << +@r10 & @r13 | +@rdx << @r11 & $thread >> 0n12 | @r8 & @rax & @r9 ^ ~@rax ^ @rdx)  { test_statement(0x98B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi & @r12 ^ 4 ^ @r13((@r13 & @r10) ; } elsif (@rbp << @rsi | @rdi & $teb & @r11 | @rdx ; @rsp >> @rdx >> @rbp ^ (@r10) >> $teb & @rbp & 1 | $thread >> $teb & +@rbx & @rsp) { test_statement(0x176D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx | @rdi))@rbx | @rdi) ; } elsif (@r10 & ~0n14 & @rdi ; $thread >> @rdx & $teb & 0y1100 ^ $proc & @r13 | $buffer & $buffer ^ 0y100 ^ -@rdi | $thread ^ $teb) { test_statement(0x1BD0); } elsif (~@rax & -2 ^ $buffer > @rsp & $teb) { test_statement(0x11FB); val = 0x10 | -@rsp ;  while  (@r13 <= $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3841
 if (@r8 + @r12 << -0y100 << @rax >> $teb | ~@r8 | @r11 & @rbx & @r11 | -0y111 & @r8 | @r9 $teb & $thread << 0x13 & @r13)  { test_statement(0x1999); }
$error$
$end$
3842
 if (~$ip << @r10 & 3 >> ~$proc >> @rsi | ~$thread << @rbp >> 17 >> @rbp ^ @r9 >> 20 ^ $buffer & (~~$thread) @rdi << @rdx >> @r8 << @rdx & ~@r10 << @r11 & ~@rdi >> @rsp ^ ($buffer) << 0n1 >> -$proc >> @r12)  { test_statement(0x1242);  /* This is a not closed comment } elsif (@r11 << @rax ^ @r8 >> @rbx & @rsi & @r9 | @rax & @r9 & @rax | @rax((0x12 & $ip >> @rsp & $teb) { test_statement(0x2481); } elsif (@rsp & @rdx >= @r11 >> @r13 & @rax & @rax ^ @rsi | @rdx ^ 16 | @r13 | $thread | @rsp) { test_statement(0x1CB1); ;  /* This is a comment */  // /* This is a comment   /* This is a not closed comment } else { test_statement(0xC12); }
$error$
$end$
3843
 if (-@r8 + -+@rsi >> @r12 << 0xC >> $proc & @r13 >> 7 & -@rdi & 0x12 & $teb | -$ip >> @rax ! @r12 + 0n18 ^ $teb << @rsp >> ~@r10 & $buffer & 2 & (@r12))  { test_statement(0x1FDF);  break;  for (val = 10; @rax != 0xC ^ @rsi | 2;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (+$proc | (0n8) == +$proc | (0n8))  { test_statement(0x11EB); } else { test_statement(0xB4A); } } elsif (@rdi << 0x3 & @r13 & @r13 & $ip ^ (@r8) >> $teb ^ @r12 & @rsi ^ ~0xF ^ -2 @r8 << @rbp >> $proc >> +17 ^ 0xB & @r9 | @rdx >> @rsp ^ @rbx ^ 0y111 ^ @rbx) { test_statement(0xDCD); } elsif (@rsi ! $buffer ^ @rbx) { test_statement(0x20F8); } elsif (+$thread & ~@rdi | $proc | (@rbp)))$teb) { test_statement(0xABE);  This is a not opened comment */ } elsif (@rax(@rax) { test_statement(0x142B);  if (-0y10010 < (@r8))  { test_statement(0x229D); } elsif (-@r9 == -@r9) { test_statement(0x116); } val = @rax ;  if ($proc = @rbp)  { test_statement(0x121); } ; } else { test_statement(0x1C97); }
$error$
$end$
3844
 if (@rbp + ~0n7 & 0n7 >> 0y1001 >> @rsi & 0x11 >> 0x0 & 0y10010 & 22 | $teb >> @r8 & $proc ^ ~@rbp & @rsi)@rbp + ~0n7 & 0n7 >> 0y1001 >> @rsi & 0x11 >> 0x0 & 0y10010 & 22 | $teb >> @r8 & $proc ^ ~@rbp & @rsi)  { test_statement(0x63D); }
$error$
$end$
3845
 if (@r12 + -@rbp ^ @r10 & 0n6 & @r8 & $proc ^ 0n10 >> -~@r8 | @rdi >> @rax ^ 0y11 & $proc & @rdi((@rsi & $proc << @r13)  { test_statement(0x1CE7); val = $thread & @r11 ^ @r12 & -@rdi ^ $teb | @rsp ^ +$ip | 0x0 ; } elsif ($proc << 0xA >> -$teb >> @rdi ^ @rsp >> @rbx & (4) ^ -$proc ^ $buffer ^ 20 > @r13 & @rdx >> $ip & @rbx | @rsp >> ~@rax ^ @rax) { test_statement(0x320);  This is a not opened comment */ }
$error$
$end$
3846
 if (@rdx + $ip << 0y11 >> 0y101 & -@rdi >> @rdx >> 0y1 & $buffer & @r8 & (-@r11) | $proc << @rdi | ~~0n3 & $proc ^ $proc & $thread ; @r12 + @rsp & ~@rdx << $ip)  { test_statement(0xE2F);  // /* This is a comment   if ((@r11) ^ 0n11 > -@rbx ^ @r9)  { test_statement(0x26DD); } elsif (0n3 0n3) { test_statement(0x1E01); } elsif ($buffer))$buffer) { test_statement(0x147E); } elsif ($ip((+@rbx) { test_statement(0x15E6); } elsif (@rsi < @rdi) { test_statement(0x1DBE); } else { test_statement(0x2A0); }  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1011 >= @r13) ; } elsif (@rbp >> @rsi))0y110 ^ @r9 >> @r13 & (@rbp)) { test_statement(0x982); @rax = @rsp & ~$thread ^ (@r11) ^ $buffer | 0y11 ; ; } elsif (@rbx & @r8 | $buffer | @r11 | @r8 | $teb @rbx & @r8 | $buffer | @r11 | @r8 | $teb) { test_statement(0xB89);  if (@rax | 0y111(@rbp | $thread)  { test_statement(0x1C9D); } elsif ($proc = $thread) { test_statement(0x2052); } } else { test_statement(0x1E51); }
$error$
$end$
3847
 if (@rdx << $buffer << $buffer ^ ((@rbp)) << ($teb) >> $thread >> @rsp ^ @rdi ^ @r11 | $ip << +@rdx >> @r8 >> @r13 & 0n15 >> @rdi & @r11 ^ +~@rsi & @r11 ^ @r9 ^ 1 >= @rbp + $thread << $proc << @r10 >> 0n18 << $teb >> $buffer ^ $ip >> $buffer >> @r12)  { test_statement(0x2499); } else { test_statement(0x1A91); val = $buffer & $ip | @rax ^ 0y1000 ; }
$error$
$end$
3848
 if (@rbp + @rsi << -@rdi << @r8 >> @r12 ^ @rsp | $ip >> 6 >> 0x7 | @rsi ^ @rsp ^ @r11 > @rbp + @rsi << -@rdi << @r8 >> @r12 ^ @rsp | $ip >> 6 >> 0x7 | @rsi ^ @rsp ^ @r11)  { test_statement(0xC18);  if (@rsi | @r13 | @rax | @r11 != $teb ^ 0y0 ^ ($proc))  { test_statement(0x141D); } elsif (@r12 ^ (@r12)((@r10 | -@rbp) { test_statement(0x10D1); } elsif (@r11 | (@rdi) ; @rbx) { test_statement(0x198D); } elsif (@rsi)@rdx) { test_statement(0x11B0); } elsif (@rbp >= @rbp) { test_statement(0x132A); } else { test_statement(0x1AAD); } ;  /* This is a not closed comment  while  (@r10 <= $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r8 ;  if (13((13)  { test_statement(0x2303); } } else { test_statement(0x1217);  /* This is a not closed comment ; }
$error$
$end$
3849
 if (@rbx ^ @r8 << @rsi >> $teb >> $teb))@rbp + 0x9 ^ @rbx << -@r10 & @r10 >> 0y1111 & 0n7 & @r13 ^ ($ip) & 0y1010 & $buffer ^ 0x2 ^ @r8)  { test_statement(0xEB0);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~$ip ^ 21 < @rbx ^ $proc) ; }
$error$
$end$
3850
 if (+@r8 & $teb & @rdx | 0n8 & 0x2 >> ~0y1110 | @rdi +@r8 & $teb & @rdx | 0n8 & 0x2 >> ~0y1110 | @rdi)  { test_statement(0x245); ;  // /* This is a comment  @rax = @rdi ^ 0y110 | 0y0 ;  while  ($teb >< $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rdx ; ;  while  (+13 <> 0y101)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = $thread ; } else { test_statement(0x22F5);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx | -+@r9 != 0x12 | $ip) ;  This is a not opened comment */ }
$error$
$end$
3851
 if (@r8 + $proc >> @r9 << +$buffer >> 12 >> 0y1010 & $proc >> @r13 >> (@rdi) != -3 << @rsp ^ @r11)  { test_statement(0xD88);  while  ($buffer & @r10 >< @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@rsp >> @rbx ^ @rbx > 0y10010 << @rdi >> $proc >> $thread ^ @rbp | @rdx) { test_statement(0x1D1);  break; }
$error$
$end$
3852
 if (@rbp << 0n17 >< ~@rdi + +@rsp << $thread ^ $thread ^ @rax >> @r13 & @r12)  { test_statement(0x7DD); ;  if (@rdi ^ $proc | ~@r8 <= @rdi ^ $proc | ~@r8)  { test_statement(0xD32); } elsif (@rbx >< $proc | @r12) { test_statement(0x1AC4); } } elsif (@r10 ^ @rbp >> $teb ^ $buffer & 0xC ^ 6 ^ @r9 ; @rsp << $ip >> @rbx >> @rdi ^ $ip & @r9 ^ @r11 & @rbp) { test_statement(0x2FD); }
$error$
$end$
3853
 if (-$thread + (@rax) & $buffer << @r12 ^ $ip << 0n13 >> 0n1 ^ ~@r11 >> 0y100 & @rsi ^ +@rdi & @rdx ^ $proc | @r13 << @r12 >> $ip ^ @rdx >> @rbx & @rbp ^ @rsi & $proc ^ +0y110 | $thread >> @rax != @rbx + $thread << $teb << ~$teb >> $proc << @r11 ^ 22 >> @rsi >> $teb & 22 >> $teb & $buffer | @rsi << @rbx | @rsp | ~@r9 ^ $ip | $buffer ^ -$teb)  { test_statement(0x13AC); } elsif (@r11 << 3 >> @rax ^ $buffer | @rbx >> 0n7 ! @r13 >> @r10 >> @r13) { test_statement(0x1859); } elsif (@r13 >> $thread = ~$proc ^ 0xC | 0y1111 ^ 21) { test_statement(0x1A48); } elsif ($thread | $thread | $proc | $thread ! @rbx & @rax ^ 0y10 ^ -0x12) { test_statement(0xB01); } else { test_statement(0xE22);  This is a not opened comment */ }
$error$
$end$
3854
 if (@rax + $buffer << @rbp << @r13 >> @rsi << @rsi & 0x7 & @r12 & @rdi & 0y10000)@rax + $proc << -@r8 >> $buffer >> ~@rbp >> 0y10011 ^ @rbp << (-@rbx) & 0xD)  { test_statement(0x1B57); }
$error$
$end$
3855
 if (@r11 & +@rbp << $proc ! $proc << $ip << @rdi & @rsi << $ip & @r12 >> $thread)  { test_statement(0x212D);  // /* This is a comment  } elsif (@rdi << $thread & 0y100 >> (@r10) & +~12 & 0n0 | @rax >> (@rbp) ^ @rsi & -@rdx > 0n4 << $teb >> @rsp & @rbp ^ 0y1100 & $proc ^ @rbp & @rbx | @rax & @rsi & 0y1) { test_statement(0x809);  for (; $proc ^ ~@rax ; 0y101 ^ @rsp | $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3856
 if (@r10 + -$thread & 0y1110 & $proc >> @r8 | @rdx ^ ~@r9 == @r10 + -$thread & 0y1110 & $proc >> @r8 | @rdx ^ ~@r9)  { test_statement(0x10B); } elsif ($thread << ~@rsi >> @r8 & 13 >> +@rbx & $ip <= @rdi << @r9 | (0y10000) >> +14 ^ 0y1011 & 0y111 ^ @rax) { test_statement(0x1D4C);  // /* This is a comment  } else { test_statement(0x2D8);  for (@rax = @rbp ^ @r10; @r13 ^ @rbp | @r8((@r10 ^ $ip | -@r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3857
 if (@r8 + @r8 << -$teb & 0y10011 << @rbp >> @rdx >> @r8 & $proc != @r8 + @r8 << -$teb & 0y10011 << @rbp >> @rdx >> @r8 & $proc)  { test_statement(0x8EE); ; }
$error$
$end$
3858
 if ($teb + ~@r8 << @r11 << @r11 >> $proc << @r8 >> @rsi >> 0x11 ^ $ip << $thread & 0n16 >> 0x1 ^ @rdi >> +@r12 & @r10 ^ @rsp >< $teb + ~@r8 << @r11 << @r11 >> $proc << @r8 >> @rsi >> 0x11 ^ $ip << $thread & 0n16 >> 0x1 ^ @rdi >> +@r12 & @r10 ^ @rsp)  { test_statement(0x258A); val = 0x5 ;  This is a not opened comment */ val = 0y10010 ^ $buffer ; } else { test_statement(0x25DC); }
$error$
$end$
3859
 if (@r13 + $ip << $teb >> @r10 << $teb & @r12 >> $ip >> @rsi | -(@rsi) << 0xC < 0x3 + 0y10 << 0 << @r13 & +@rdi << $proc & @r9 & ~$teb | $teb << (@rsi) >> @r10 | -@rbp ^ @rsp | 0n2 & @r11 | @r11 ^ @r8)  { test_statement(0x146B);  for (val = @r9 & @r10 ^ @r10 ^ (+-$thread); +++-@r10 >< @r9 ^ $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rax & +@rdi ; } else { test_statement(0xA64); }
$error$
$end$
3860
 if (@rsp >> @r13 >> 12 >> 0xC(@rsp >> @r13 >> 12 >> 0xC)  { test_statement(0x1B12); } else { test_statement(0x2149);  for (@rax = -@r11 | @rsp; 0x2 | ~@rbx ; $buffer ^ 0n0 | @r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment ; }
$error$
$end$
3861
 if (@rsp + 1 << -@r11 ^ ~@rdx << 17 >> @rsp >> @r8 ^ -$thread & @r13)@rsp + 1 << -@r11 ^ ~@rdx << 17 >> @rsp >> @r8 ^ -$thread & @r13)  { test_statement(0x13AE); val = $buffer >> @rax ^ @r10 & @rbx ^ @r12 ^ @rsi ;  /* This is a not closed comment  // /* This is a comment  } elsif ($proc >> @rdi >> $ip & ($proc) >> -+@rsi & @rdi ^ 0n6 ^ $thread >= $proc >> @rdi >> $ip & ($proc) >> -+@rsi & @rdi ^ 0n6 ^ $thread) { test_statement(0x1C03);  break; } elsif ((@rbp) | @rdi & $proc | -@r9((@rbp & @r9 ^ 0y0 ^ @rsp | @rax & 0n6 ^ ~@r8) { test_statement(0xA17); } elsif (0n19 & @rdx ^ @r9 ^ @rdx | @rdx ^ @r10 <= 0xA ^ @rsp ^ @rdx | $teb ^ @r12 | +20) { test_statement(0xE5E); }
$error$
$end$
3862
 if (@r8 + @r10 >> $thread << ~@rdi >> $proc & @rdi << -$ip >> -0x3 >> @r9 | @rdi << @rbp & @rbp >> @r13 & @r8 & @r10 ^ @r10 & @rax | @rbp >> $thread & 0n9 > 0n3 << @rbp)  { test_statement(0x12C2); }
$error$
$end$
3863
 if (@rsp + @r13 << $proc << @rax & $buffer << @r10 >> 0n0 >> -@r8 < @r8 + -0y100 << 0xA & @r11 << @rsp >> -(@rbp) >> @r8 & -@rbx >> 0n2 | @r11 << @rsp & @rdx & @r8 & @rbp ^ (@rdi) & ~@rsi)  { test_statement(0x22F3); }
$error$
$end$
3864
 if (@rdi + $thread & 0x7 >> @rdi & ((@rdx)) >> @r13 & @r12 & ($buffer) ^ $thread >> $ip & 0n4 >> @r12 ^ 0n10 & $ip ~@r8 + @rbx << @rsp >> @rbx >> -0 >> +0y11 & @r12 | @rdi | 0n12 >> (-@rsi) ^ @rbp)  { test_statement(0x58F); } else { test_statement(0x186A); }
$error$
$end$
3865
 if (0n6 + $buffer >> @rbx ; 10 + @r9 << @rbx >> 0y10010 << @rsp & @rbx << $thread & @r10 ^ $thread >> 0x4 >> $proc ^ @rdi >> @rdi)  { test_statement(0x5D5);  while  ($proc ^ 0x11 ^ @rdx $proc ^ 0x11 ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (($proc) << (@rax) & (~$thread) & ~0n0 & @rax <> @rbx << 4 >> $thread >> +@r8 ^ 11 >> @r9 ^ ~$teb ^ @rdx | @r10 >> $buffer | @rsp | $teb ^ 0n15 | ~(1) | @rax) { test_statement(0x5CA);  /* This is a comment */ } elsif (@r8 ^ @rbx ^ @r13 ! @r8 ^ @rbx ^ @r13) { test_statement(0x795); }
$error$
$end$
3866
 if (@r8 >> @r9 << 0n11 ^ $buffer << @rdx & ~-$proc >> ++0y10010 ^ $buffer >> @r10 ^ 0y1101 ^ @r12 ^ 0n6 <> 0n15 >> $teb << @rdi >> @r11)  { test_statement(0xADF);  This is a not opened comment */  if (@rbx ^ 0y1010 < @rbp ^ @rdi | +@r11)  { test_statement(0x11A5); } elsif (@r10 | @r10)@r10 | @r10) { test_statement(0x5DE); } else { test_statement(0x514); }  This is a not opened comment */ }
$error$
$end$
3867
 if (0n5 >> @rsi << 0n7 & $thread << $proc <= -@rdx << @rax & $thread << $buffer >> @rax & @rdi & $buffer | @rsp & @r9 & @r11)  { test_statement(0x1ADB); } elsif (@rbx >> @r10 >> @r11 = @rbx >> @r10 >> @r11) { test_statement(0x2633);  break;  break; } elsif (0x3 >> $teb & $buffer & (0x11) ^ $thread | 0xF & (0n7) != 0x3 >> $teb & $buffer & (0x11) ^ $thread | 0xF & (0n7)) { test_statement(0x1128);  /* This is a not closed comment }
$error$
$end$
3868
 if ($buffer ^ @rax << @r8 >> $proc & 0y1011 <> $proc + @r8 << @r11 & 0y111 << @rdx >> $ip)  { test_statement(0xCF3);  if (@rbp | @r13 @r11 & @rsi)  { test_statement(0x270A); } } else { test_statement(0xB3E); }
$error$
$end$
3869
 if (@rsi << $buffer & @rbp << @r9 & @rax >> @rbx | @rdx & $ip ^ @r13 >> @r9 | ~@r9 ^ @rax ^ +0x10 ! @r9 + +@r12 << $buffer << +@rdx | @rsp >> $teb >> @rdi & @r13 >> 0n16 & @r13 | ~0x4 & $thread)  { test_statement(0x13C5); } elsif ((0y1101) & @rdx & @r13 ^ 0n1 & $thread ^ @rdi | (@rax) & @rsi ^ $proc & $buffer ^ $buffer | (~0n11) < @rdi << @r12 >> 0y1110 ^ @r9 & ~14 & @rdx ^ $ip) { test_statement(0x222E); } elsif (0y111 & +@rbx ^ @rdx ^ 0n5 | 0xE & 0x12 ^ @rax ^ $buffer != +@rbp >> @r13 ^ @rdi & +0y100 ^ +@rdi ^ @rbp) { test_statement(0x1248);  /* This is a comment */  /* This is a comment */  if (1)1)  { test_statement(0x2091); } else { test_statement(0x411); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 ; @rdx) ; }
$error$
$end$
3870
 if (~$teb >> @r9 & 0n17 << 0x8 >> $proc >> @rbp & $buffer & (@r9) ^ @r13 >> 0xB ^ @r9 >> @rbx & $buffer ^ 0y1011 & @r8 ^ @rsp = @rsp + 16 << $buffer >> @rbp >> @rbx)  { test_statement(0x1BE4); } elsif (@rax << @r10 | 0n17 | ~@rdi | @r13)@rax << @r10 | 0n17 | ~@rdi | @r13) { test_statement(0xACA); } elsif (@r12 ^ $thread & $thread ^ $proc ^ 0y1010 | $thread ^ (0x6)(@rsi >> @rdi) { test_statement(0x40C);  while  (0xA ; -@rsp | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  if (@r8 >= $teb)  { test_statement(0x1ABA); }  This is a not opened comment */  /* This is a comment */ } else { test_statement(0x23E6); }
$error$
$end$
3871
 if (@rbx + 7 << $proc >> $ip >> +@r10 & @r11 | @rdx << @rsp & (@r8) ^ @r9 & ~$proc & @rbp ^ +@r13 & $teb | @rsp >> -~+(+(0y1110)) ^ @r8 & @rax | @rbp ^ $ip | @r11 ^ $thread | +@rsp | +@rbp != @rbx << $thread << @r9 >> @rbp << $ip >> $buffer)  { test_statement(0xF9C); } elsif (@r9 >> $proc ^ @rsi & ($thread) != 1 << 0n18 >> @rsi >> @r10 & $teb ^ @rbx ^ $ip) { test_statement(0x174E);  for (val = 10; @rax ^ $ip | @r12 < @rax ^ $ip | @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
3872
 if ($buffer + 0y1111 ^ $thread & @rdi)@r10 + @r9 << (@r8) << $ip & @rax << @rdi & @rbp & 0y10 ^ @r8 | @r13 | @rax & 20 & $teb)  { test_statement(0x239A); val = $buffer | @rbx & +@r8 ^ $ip ^ @r13 ;  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
3873
 if (@r9 + @rsi << @r10 << 3 >> @r13 << @rdx >> @rax >> $thread < 0y0 << @rdi << 0y100 >> @rsp << @r11 >> @rbp ^ @rbp << @rbx >> $proc & $thread >> @rsp ^ @r12 >> @r13 & @rdx | @rbx << $thread ^ @r13 >> @rax & @r11 & @r12)  { test_statement(0x2011);  /* This is a not closed comment } elsif (@r8 ^ @rbx & @r12 ^ @rax & @rsi | @rbx ^ $thread & $buffer == @r11 | $proc >> @r11 & @rdi) { test_statement(0xBB1); } elsif (@rbx >> @r13 ^ $ip & 0y101((@rbx >> @r13 ^ $ip & 0y101) { test_statement(0x1360); } elsif ((@rbp) ^ $teb ^ $ip | @rsi ^ @r8 ; @r11 & $teb ^ @rsi ^ @rdi) { test_statement(0x1DFE); } elsif (11 ; @rsp ^ @r12 | @r9) { test_statement(0x113C); } else { test_statement(0xD8E); }
$error$
$end$
3874
 if (@rbp >> 0y1101 ^ @rdi & @r12 >> @rax ^ $thread >> @rax & @rax & 0y10010 ^ @rdx & $buffer ! @rbx + @rbx << @rbx << $teb >> @r10 & ~@r10 << -(@rbx) >> @rax | @r8 ^ @r11 & @r8 ^ +$ip & @r12 | @rax & @rsp | @rdi & @r11)  { test_statement(0x1DD0); }
$error$
$end$
3875
 if (@rbp << @rdx << @r8 >> ~@r12 & 0y110 << @r9 | @rax >> $thread & 1 >> @rbx)@r11 + @rbx << @r10 << +@rdx)  { test_statement(0x7BF);  /* This is a not closed comment  This is a not opened comment */ } elsif (@r9 & 0y1011 >> @r8 ^ @rbx >> @rbx & $buffer ^ @r8 | (@r9) >> 0y10011 ^ @r11 & @rdx | $buffer & $ip ^ @rbp ^ @rbx == @rsi ^ -@rbx >> @rsi) { test_statement(0x1D44); ;  for (val = 10; @r12 | @rbp == @r12 | @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x513); }
$error$
$end$
3876
 if ($proc + 0n14 << @r9 << 0xA ^ @r10 ^ ~$proc & @rsi & 0xB ^ ~@rbp ^ @rax ^ +@r13)@rbp + @rsi << @rdx & @rsi >> $ip)  { test_statement(0x2004);  /* This is a not closed comment  break; } elsif (@r10 >> @r11 >> 0n19 & 0n9 & @r9 & $teb ^ @r10 >> $buffer & @r8 & 7 ^ @r11 | 2 >> -@rsp & @rsp | @rbx & @r13 ^ ~$buffer ^ $thread | $ip ^ ~@rbp >< 0n12 >> @r11 >> 0xB | @r10 >> 5 & @rax) { test_statement(0x305); val = 0n7 & @rbx ^ 15 | 13 | 0xF ; @rax = @rax ; } elsif (@rbx >> @rbp ^ @rax & @rbx ^ $buffer ^ @r11 | @rdx(0xE >> @r11 & @r13) { test_statement(0x16D6); }
$error$
$end$
3877
 if (0n6 | @rsi << @rbx & @rdx >> @rsi & @rdi & 21 ^ @r12 ^ $teb ^ -+@rdi))@rdx + @r12 << $teb << 0y1 >> @r8 << 0n6 >> @rsi >> 0n11 ^ @rbx & $thread >> @r13)  { test_statement(0x143A); }
$error$
$end$
3878
 if (14 + $proc << @rbp | $buffer << $thread >> 0x5 >> +$thread ^ @r12 ^ ~@r10 & $proc ^ @r8 ^ @r10 | 0x2 >> $buffer ^ @rbx ^ 0n2 ^ -0xA <= $thread << $ip >> 0xF << @rbx >> @r9 & @r8 << $ip >> @rdx >> @r13)  { test_statement(0x18AE); }
$error$
$end$
3879
 if (+$buffer + @r13 >> 0n14 & --@rbp << -$buffer ^ @rdi & @r12 & @r11 & $ip ^ $thread >> @r12 | @rbx ^ $ip >> @rsp ^ @r10 | +@rsi < @rdx + @rax << @rdx << @rax >> (@rsp) | (@rsi))  { test_statement(0x254D); } elsif (@r11 >> @rsp >> $teb & -@rsi & $proc & 13 | 0n8 >> $thread ^ @r12 & $teb ^ @rdx >< @r11 >> @rsp >> $teb & -@rsi & $proc & 13 | 0n8 >> $thread ^ @r12 & $teb ^ @rdx) { test_statement(0x1CF7); ;  if (+@rdi))@r12 | $buffer)  { test_statement(0x22A9); } ; } else { test_statement(0x1284);  for (@rax = @rdx | 0y111 | @r12; $buffer ^ $teb))@rbx ^ +$buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
3880
 if (0x13 + $thread << +22 << @r12 & (~0n11) << @r11 >> -21 >> $ip((0x13 + $thread << +22 << @r12 & (~0n11) << @r11 >> -21 >> $ip)  { test_statement(0xF27); @rax = @r11 ^ @rdx ^ @rdi ;  for (val = 10; @r8 ^ @r11 @r8 ^ @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y111 | @r8 > @rsp | @r10) ;  while  (@rsp = @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x164F);  This is a not opened comment */  break; @rax = $proc ; }
$error$
$end$
3881
 if (@rdx + @rbp << @r12 << @r10 ^ @rdx << -@r9 ^ $teb | @rsi & -@r9 >> 0n18 = @rsi >> @rbx >> @r13 >> @r12 & @rdi >> 10 >> ~0y1100 & @rdx >> +$buffer)  { test_statement(0xCE2);  This is a not opened comment */ } else { test_statement(0xF5F); }
$error$
$end$
3882
 if (@r12 << 0xD ^ $buffer << 0x5 ^ @rbx))@r12 + 0n5 << 0n13 << -+0x8 & @rbx & (@r8) >> @rdx & 14)  { test_statement(0x12); ;  This is a not opened comment */  // /* This is a comment   // /* This is a comment   while  (@r13 <> 0y1011)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
3883
 if (@rdi ^ @r10 ^ @rbp >> @r13 & @r11 & @rsp ^ @rsp | +@r10 & @r10 >> $teb & +@rdx & $proc ^ @rsp >> 0n19 & ($buffer) | @rbx >> 0y10 ^ @r10 ^ @rsi | $proc & $thread != @rdi ^ @r10 ^ @rbp >> @r13 & @r11 & @rsp ^ @rsp | +@r10 & @r10 >> $teb & +@rdx & $proc ^ @rsp >> 0n19 & ($buffer) | @rbx >> 0y10 ^ @r10 ^ @rsi | $proc & $thread)  { test_statement(0x113C); } elsif (@rsi >> @rbp ^ ~0xD >> @r13 & 0x10 & $ip ^ -@rdx & $ip ! $buffer >> @r13) { test_statement(0x130E); ; } elsif ((@rdx) >> (0n19) ^ @rbp & 0y11 ^ @rdi ^ $teb | @rsp ^ $teb | @r12 ^ @r9 > @rdx >> -$proc ^ @r11 ^ @r13 | @r8 | $thread ^ ~22) { test_statement(0x131D);  // /* This is a comment   while  (@rdx ; @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif (0y1011 & @rdx ; 0y1011 & @rdx) { test_statement(0xC01);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@r11 < +@r11) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8(~$thread) ; } elsif (0n11 | $thread | @r9 != 0n11 | $thread | @r9) { test_statement(0x4B9);  /* This is a comment */  if (@rbx(@rsi)  { test_statement(0x14AC); } } elsif ($ip | @rbp = @rsp) { test_statement(0x2082); }
$error$
$end$
3884
 if (0y1100 >> $teb & $teb << ($ip) >> @r12 >> @r8 & @r13 >> $thread ^ ~@rbp << ~$ip & 0n16 >> @r10 & @r13 & @r11 | @r10 << @rax & $buffer ^ @rdx >> @rdi & ~@r10 ^ @rdi ^ @r9 | @rbp >> @rbx >< 0y1100 >> $teb & $teb << ($ip) >> @r12 >> @r8 & @r13 >> $thread ^ ~@rbp << ~$ip & 0n16 >> @r10 & @r13 & @r11 | @r10 << @rax & $buffer ^ @rdx >> @rdi & ~@r10 ^ @rdi ^ @r9 | @rbp >> @rbx)  { test_statement(0x1827);  // /* This is a comment  } elsif ($buffer >> 14 | @r10 >> @r8 ^ -@r9 & @rsp >= $buffer >> 14 | @r10 >> @r8 ^ -@r9 & @rsp) { test_statement(0x14B0);  // /* This is a comment   /* This is a not closed comment @rax = @rbx ; } elsif (~$buffer | +@r11 & @rax ^ @rdi | -@r11 | $thread | @rdx < @rsp) { test_statement(0x18C3);  while  (@rsp | @r8 >< @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp ^ @r11 ^ 0n12 | $ip ^ -$teb | 0y1010 | $ip >= $teb ^ @rbp ^ @r10 | @r9 | @rsp) { test_statement(0x1219);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 @r8) ; } elsif ($ip ^ 3 < @rdx ^ @r10) { test_statement(0x1B91);  This is a not opened comment */ } elsif (@r9 | @r9((@r9 | @r9) { test_statement(0x1896); } elsif ($buffer((@r13) { test_statement(0x239D);  // /* This is a comment  } else { test_statement(0xC90);  // /* This is a comment  }
$error$
$end$
3885
 if (@r13 & ~@rsp << $thread >> @rsp >> -0xB | @r12 > ~@r8 & @rdi & 0y1011 ^ $proc << $buffer >> $proc >> 15 ^ $teb | ~0n6 & @r9 ^ $buffer >> @r10 | 20 & 11 ^ +$buffer ^ @r10 ^ @r13)  { test_statement(0x9AD);  /* This is a comment */ } elsif (@r10 << 0y1001 & @r9 ^ 0x11 >> +~$buffer ^ @rsi & @r9 ^ 0n12 | @r9 & @rsp & $proc ^ @rdi & @r8((@r10 << $proc & ~@rsp >> +$proc | 0y10001 ^ 0x4 ^ $buffer | @rax & @r8 ^ $ip | @rdi | 0n17 | 0) { test_statement(0x8);  This is a not opened comment */ }
$error$
$end$
3886
 if (@rsi + 10 >> -21 << @r8 & @rbp | ~$ip << $thread >> 0y1 | @rsp & @rbx & 0y1000 | $ip ! @rsi + 10 >> -21 << @r8 & @rbp | ~$ip << $thread >> 0y1 | @rsp & @rbx & 0y1000 | $ip)  { test_statement(0x1268);  break; @rax = $proc & @rdi ; } elsif ($proc & @rdx >> $proc & @rbx & @r12 ^ @r8 >> @rsi & ~@rbp ^ $ip)@rbp << $teb >> -@rsp >> @r9 ^ 0x5 >> +@rax & @rbp & 0y1001 | @rdx >> @rbx & @rbx & @r9 ^ @rdx ^ +$ip ^ @r9 | (~$ip) ^ $proc) { test_statement(0x52E);  This is a not opened comment */ } else { test_statement(0x2E4); }
$error$
$end$
3887
 if (0x3 + 4 & @rdi << @r11 >> @r10 & @rdx >> @r8 & @rdx >< 0x3 + 4 & @rdi << @r11 >> @r10 & @rdx >> @r8 & @rdx)  { test_statement(0x18C2);  /* This is a not closed comment } elsif ($proc << $ip >> 0n16 | ~~0y1010 ^ $teb ^ @r11 ^ @rsp >< 0y1000 >> $thread & @r10 >> $proc & @r9 & 4 ^ $thread & 0y1100 & @rbp) { test_statement(0x8B9);  This is a not opened comment */ }
$error$
$end$
3888
 if ((@r13) + 0n11 << @rdx << @rsi))@r13 << 6 << $ip & @r10 ^ @rsi << @rdi)  { test_statement(0x24F1); }
$error$
$end$
3889
 if (@rsi << -$thread << @rax >> $buffer << $teb >> 0y10010 >> @rdx >< @r8 << $ip & @r11 << 0n8 | @r11 >> @rdi & 17 >> (@rdx) ^ @rbx & ~$thread & -@rsi ^ @r13 & @r10)  { test_statement(0x156F); @rax = @rbp & @r9 ;  break;  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 13 < 13) ; } elsif (0n13 ^ @rdi & 0y1 & @rbx | (~5) >> @r10 ; 0x1 & @r12) { test_statement(0x159A); }
$error$
$end$
3890
 if (+$ip >> @rsi ^ $teb ^ @r9 & 0x1 & 0y110 | $proc << @r12 | $thread ^ 0n7 ^ @r10 ^ @rsp | @r12 & @rsp ^ @r8 ^ @r8)+$ip >> @rsi ^ $teb ^ @r9 & 0x1 & 0y110 | $proc << @r12 | $thread ^ 0n7 ^ @r10 ^ @rsp | @r12 & @rsp ^ @r8 ^ @r8)  { test_statement(0x1035); ; }
$error$
$end$
3891
 if (-0n14 << @rsp ^ 0x1 & @r12 | $buffer >> $buffer | @r12 >> 0n3 & (@rbp) & (@r13) ^ 0y101 & @rdx ^ 0y10010 ^ $ip ; +0y10010 >> ((@rbx)) & @r12 << 0x2 >> @rdi >> $ip ^ 0y10010 << 0y1010 ^ @rsp >> @rdi ^ 0n15 & (-@rbp))  { test_statement(0xD16); } else { test_statement(0x4F);  // /* This is a comment   // /* This is a comment  }
$error$
$end$
3892
 if (@rsp + $thread >> @rbx >> ~3 >> @r12 & ~@r10 << @rsp >> @r13 & +$ip >> @rsi | 0x0 << @rbp >> @rsi >> $buffer ^ @rdi & $teb & +$thread ^ 0n16 & $buffer > @rsp + $thread >> @rbx >> ~3 >> @r12 & ~@r10 << @rsp >> @r13 & +$ip >> @rsi | 0x0 << @rbp >> @rsi >> $buffer ^ @rdi & $teb & +$thread ^ 0n16 & $buffer)  { test_statement(0xA4B);  break; }
$error$
$end$
3893
 if (@rdx >> 0y1000 & $thread >> @r10 >> @rsi ^ @r13 << @rdx >> @r10 >> @r9(@r10 + @r13 >> (0n3))  { test_statement(0xA6E);  break; } else { test_statement(0x1D65);  // /* This is a comment  }
$error$
$end$
3894
 if (@r9 >> 10 >> @r8 >> @r8 & @r8 >> @rsp >> @r10 ! $ip >> $thread << $ip)  { test_statement(0xFB0); val = @rsi >> @r9 & $ip ; val = @r10 ^ @rsi ; ; } elsif (@r11 & @r12 | $teb >> $ip & 15 & @r9 | @rdx & $thread ^ 0y1111 | @rbx >< @rsp << $buffer >> $proc >> $thread & @rax) { test_statement(0x2B1); } else { test_statement(0xEA1);  /* This is a not closed comment  for (val = 10; @rdi | @rax != @rdi | @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3895
 if (@r13 + 0y1011 >> @rdi << @rdi & ~@r12 << @r8 & 15 & $teb & @r11 | @rsi >> @rsp ; $buffer >> +@r10 >> @r10 | 23 & @rsp >> @rdx ^ @rbp >> +@rsi & @r13 ^ @r13 & @rbx ^ -$ip ^ 7)  { test_statement(0x1497);  break;  /* This is a not closed comment  if (@rbx | @rax ! $proc | @rsi)  { test_statement(0x2150); } elsif (~$ip $thread) { test_statement(0x2681); } else { test_statement(0x78C); } }
$error$
$end$
3896
 if (0n18))@r9 & @rsp >> 0n17)  { test_statement(0x1C5E);  if (@rsp & @rdi ^ $ip ^ @rdx ; @rsp & @rdi ^ $ip ^ @rdx)  { test_statement(0x2076); } elsif ($proc ^ -@r13 > ~@r8 | -0y10010 | 0n6) { test_statement(0x2118); } else { test_statement(0x1CCB); }  while  (0x7 ^ $ip <> @r11 | @rax | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n19))(@rbp)) ; } elsif (@r11 << @rdi ^ 0x0 ^ @rbp & -10 | @rdi >> @r10 ^ 20 | @rbx)@r11 << 0n7 >> -~@r9 >> 0n5 & @rsi >> @rbx) { test_statement(0x5E2);  for (; $buffer($buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3897
 if (-~~$teb + $thread << @r11 << @r8 ^ 0y1000 << $teb ^ -(0xA) & +10 >< -~~$teb + $thread << @r11 << @r8 ^ 0y1000 << $teb ^ -(0xA) & +10)  { test_statement(0x3BE);  This is a not opened comment */ } elsif ($proc << (@rsi) | @r8 >> @r8 & @r11 & @rdx | (@rsp) & 14 ^ @rdi ^ -$teb == @r12 & -$buffer >> @r8 ^ +0y1101 >> @r11 | 0y10010 >> $proc ^ @r13 & @rsi ^ $ip) { test_statement(0x1005); } elsif ($thread ^ @r13 & @r13 ^ $teb ! @rsi | 15 ^ @r11) { test_statement(0x452); }
$error$
$end$
3898
 if ($thread + @r12 >> ((@r11)) << $teb & $thread << @r13 ^ @r11 | 0n12 << 0x0 & @rsi < 7 << @rsp << @r12 >> @rax << $teb ^ +@r10 & @rbp >> @r9)  { test_statement(0x1871); }
$error$
$end$
3899
 if (@rax + 11 << @r12 << @r8 ^ 0n13 << @r10 >> -@rdx >> @rax & @rsi ^ -@rbx & 0y1110(($ip << 0n7 >> $thread << @r12 & @r13 << @r10 & +@r13 & @rbx & @rax | @r9 >> @r13 >> (@rax) & $proc >> $buffer & $proc ^ @rdx & @rsi & $teb)  { test_statement(0x1135);  This is a not opened comment */ }
$error$
$end$
3900
 if (@r12 << 0n4 >> @r11 << $ip >> @r13 | @rbp << @r8 >> 0xF ; @r13 ^ @r9 ^ @rsp & @r10 & @r10 ^ $thread)  { test_statement(0x1AFF); } else { test_statement(0x1692); }
$error$
$end$
3901
 if (@r13 + $teb << @r8 << @rdx >> 0y10000 << $teb >> +$teb & $thread & @r12 >> 0n8 ^ @r12 << $proc >> @rdx >> @rsi ^ @rbp >> @r10 ^ @rsi & @rbp | ($teb) << 14 >> $buffer & 0n12 >> @rbp & @rsp ! @r13 + $teb << @r8 << @rdx >> 0y10000 << $teb >> +$teb & $thread & @r12 >> 0n8 ^ @r12 << $proc >> @rdx >> @rsi ^ @rbp >> @r10 ^ @rsi & @rbp | ($teb) << 14 >> $buffer & 0n12 >> @rbp & @rsp)  { test_statement(0x3EE); }
$error$
$end$
3902
 if (@r10 >> @rdi << @r11 >> @r9 >> @r11 ^ @rdi << +$thread >> @rsp >> @rax & @r9 | @r8 << $ip ^ ~$buffer | -@rdx & (@rsp) & 13 > @r10 >> @rdi << @r11 >> @r9 >> @r11 ^ @rdi << +$thread >> @rsp >> @rax & @r9 | @r8 << $ip ^ ~$buffer | -@rdx & (@rsp) & 13)  { test_statement(0x1522); }
$error$
$end$
3903
 if (0n0 + 0n11 >> @rbx << 5 & @rsi << 0xB >< @rsp + ~$ip << $buffer << $buffer & @r12 >> 0 >> ~@rbx & @rbp >> 10 ^ $thread << @rax | @rdx << @rsi & 22 >> @r9 & @rdx & @rax ^ $proc ^ @rsp)  { test_statement(0x13E5);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx & $ip ^ 0x11 | @r12 ^ @rsp > +@rsi | @rdx | 11) ; ; } elsif (@rdi << (~@rdi) >> @rsp >> 0n17 ^ @rax ^ $thread & @rdi | 0x4 >> +$teb & @rbp & $buffer ^ @rax ^ ~@rdi | @r12 & @rsp ^ @r10 ^ 0n15 | @r11 >= 5 ^ @r9 >> @rdx ^ ~@r9 & @r10 | 0n1 & $thread & @r12 ^ @r11 & @r9) { test_statement(0x18CF); } elsif (0n19 >> ~@r11 & -0n12 != 0n19 >> ~@r11 & -0n12) { test_statement(0x4C0);  /* This is a not closed comment  for (val = 10; @r10 <> $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   while  (@r8 = @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r12 == @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
3904
 if (0x11 + 0n5 >> 0x6 << @rdx >> 0y1 & $ip & $buffer >> @rsi | @rdi << $teb >> @rsi ^ 0n19 >> $buffer ^ @r11 & @r9 ; 0x11 + 0n5 >> 0x6 << @rdx >> 0y1 & $ip & $buffer >> @rsi | @rdi << $teb >> @rsi ^ 0n19 >> $buffer ^ @r11 & @r9)  { test_statement(0x1AB9); }
$error$
$end$
3905
 if (@rbp & @r9 << @rbp >> $teb & @r9 >> @rbx & +@rbp & @rbx ^ 4 << ($buffer) & @r10 >> ~@rdi & -$teb | 0n4 << @r8 & +-$ip ^ @rdx >> @r13 ^ @rdi & 0y10000 ! -~@rdi + $ip << @rdx >> @rsp << 0y110 >> $ip | @r10 & $ip)  { test_statement(0x1F3); } elsif (@r9 ^ $buffer >> @r11 | @r9 & @r12 | $buffer & $proc ^ (0y1010) | @rdi ^ $proc | $proc((@r9 ^ $buffer >> @r11 | @r9 & @r12 | $buffer & $proc ^ (0y1010) | @rdi ^ $proc | $proc) { test_statement(0x12EF); }
$error$
$end$
3906
 if (@r12 >> $thread << ~@r8 & $proc << $teb >= $ip)  { test_statement(0x1967); }
$error$
$end$
3907
 if (0n1 >> @rbx >> ~@rdx >> @r8 & @r8 << @rax & @r12 & @r9 & @rax ^ ~@r13 << 16 >> 20 ^ 0x2 & $teb ^ @rsp & @rax ^ 0 >= @rbp << +$ip << $thread >> 23 << $teb >> @rdx & @r11)  { test_statement(0x18D1);  break;  break;  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx == $teb) ; }
$error$
$end$
3908
 if (@r10 + @rdi << @rax << @r8 ^ @rbp >> @r9 & 0y111 ^ @r10 >> @rsi | @r9 & $teb & @rbp & @rbp ^ 0n9 >> @rsp ^ @rax ! @r10 + @rdi << @rax << @r8 ^ @rbp >> @r9 & 0y111 ^ @r10 >> @rsi | @r9 & $teb & @rbp & @rbp ^ 0n9 >> @rsp ^ @rax)  { test_statement(0x2394); }
$error$
$end$
3909
 if (@rax << @rax >> 0n3 << @rbx >> $teb >> @r11 ^ @r8 << @r9 >> $thread <> 0n17 + ((-0n19)))  { test_statement(0xBA9); @rax = --@rsi >> $teb & $buffer ^ @r13 ^ 0n15 ^ @r10 ; } elsif (@r9 & $ip >> 22 & @r8 & 0n5 ^ @r8 >> -@rbp == @rbp >> @r10 >> @r8 & @r11 >> 17 & @r10) { test_statement(0x107C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ +@r12 == @r12) ;  // /* This is a comment  @rax = @r11 ; }
$error$
$end$
3910
 if ($buffer << @r12 << ~$thread >> @rdi >> @rbx | $teb >> @rsi >> @r13 & @r12 ^ @r8 >> @rsp & $proc & $proc ^ @rsp & ~@r12 ^ 17 ^ 0xC | @r11 >> @rdx ^ @rbp | +@rbp ^ @r9 | @r13 | +0x3 > @rdi >> $buffer)  { test_statement(0x5CD);  while  (@r12 & 0n5 ^ @r12 ^ @rdx | @rdi ^ @rax | $proc == @rsp | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1735); }
$error$
$end$
3911
 if (0y1001 + $ip & $thread << @r12 >> @r13 >> @r13 ^ 7 >> $ip ^ 0y1100 >> @rsp & @rsp & (@r9) ^ @r9 & $buffer ^ @rsi ! 0y1001 + $ip & $thread << @r12 >> @r13 >> @r13 ^ 7 >> $ip ^ 0y1100 >> @rsp & @rsp & (@r9) ^ @r9 & $buffer ^ @rsi)  { test_statement(0x1CAF); }
$error$
$end$
3912
 if (-$ip + @r12 << @rsp & @rsi << $buffer ^ $thread >> +0n8 ^ $proc & @r10 ; -$ip + @r12 << @rsp & @rsi << $buffer ^ $thread >> +0n8 ^ $proc & @r10)  { test_statement(0x300);  break; }
$error$
$end$
3913
 if (0n0 >> @rax << ~$teb ^ $teb >> @rsi >> 0xF >< @rdi << -@rsi & (@rdx) << $buffer ^ @rsp >> @rbx & @rbx ^ (@r12))  { test_statement(0x67F);  if (15 ^ @r8 | +$proc)10 ^ @rsp ^ 0n9)  { test_statement(0x46D); } elsif ($teb | @rdx | 3(+-@rdx ^ @r10) { test_statement(0x1A2); } elsif (0y0 | $ip((0y0 | $ip) { test_statement(0x4A4); }  while  ((@r9) | 0n6 | @rbp >< (@r9) | 0n6 | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  if (@rsp > @rsp)  { test_statement(0x1B56); } }
$error$
$end$
3914
 if (@rdi + @rsi << 0n13 << @rbp & @rbp ^ @rbp & @r11 >> @r10 & 0xC & 0n9 ^ @r13 & ~$proc & 0xF ^ $buffer ^ $thread $ip & 1 << @rbx & @rax >> @rdi)  { test_statement(0x1220); } else { test_statement(0x1B7A);  if (@rax ^ $buffer != @rax ^ $buffer)  { test_statement(0xF0E); } elsif (@r13 >= @r10) { test_statement(0x13A1); } else { test_statement(0xEAE); }  while  (@rsi | $teb <> @r9 | 0y101)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3915
 if (0x8 >> +@r12 & @r10 << @rdx & @r12 >> (@r9) ^ $buffer << @rsp & $thread >> 22))0x8 >> +@r12 & @r10 << @rdx & @r12 >> (@r9) ^ $buffer << @rsp & $thread >> 22)  { test_statement(0x202E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -~+@rsp | @r8 >= -~+@rsp | @r8) ;  for (val = 10; @rbp | @rsi = (@r8) | $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif (@r13 & @rsi >> $buffer(($thread >> $thread) { test_statement(0x1BE);  /* This is a not closed comment } elsif ($proc >> @rsp & @r9 ^ 0n16 @r9 ^ ~+$ip & $teb) { test_statement(0xD8A); } elsif ($teb))@r10) { test_statement(0x2290); } elsif ($proc | @r12 != $proc ^ @r8 | @rsi | @r11) { test_statement(0x25D7);  // /* This is a comment  } else { test_statement(0x9EC); }
$error$
$end$
3916
 if ($proc + ~$proc << @rsi << @r11 & @rbx << $ip ^ -@rbp | @r8 >> $thread >> 0n17 & 13 >> $proc | @rdx >> ($buffer) | $buffer & -@rsi < $proc + @rsi & $ip >> @r11 >> $teb & 0x10 >> 13 & @r12 & $teb)  { test_statement(0x14E4); }
$error$
$end$
3917
 if (0xE + $thread >> ~+$ip ^ @rsp ^ @rsp >> 0xA & @rax & @r11 ^ @r8 ^ (13) | @r12 << $teb ^ $ip >> $thread & 0n17 & @r9 | @rbp >> @rax))$teb + @r11 << @r11 << (@r9) ^ +$thread << @r8 ^ ~0y10001 >> @rsi & -0n19 & @rsp | @rdx << 15 >> @r12 >> ~@r11 & @rbp >> $teb ^ 0x1 >> @r11 & 0n12)  { test_statement(0x1E1);  break; } elsif (@rdi & 0x5 ^ $ip >> @r8($ip << $proc >> @rdi >> $ip | @r10) { test_statement(0x18E9);  /* This is a comment */ }
$error$
$end$
3918
 if (-12 << @rax << $buffer >> @rdx >> -(-@rdi) & @rsi >> (0y10010) & 0y10011 & @rsi ^ 0n16 << @rdx | @r8 << 0y1100 & @r12 & @r8 ^ 0x10 ^ @r9 ^ 6 | $thread >> $ip & @r9 | $ip | @r9 ^ $proc | @rdi(@rdx + $thread << @r11 >> (@rax) << $ip >> 1 >> @rdi ^ @r12 >> 0x13 >> +@rax | 0y0 & @rbx >> @rsi ^ 0x10 >> $buffer)  { test_statement(0x4B0); }
$error$
$end$
3919
 if ($proc << @r9))@r8 >> @rdx ^ @r9 & 0x12 & @r10 & @rsi | -@rbp << (0y1001) & $teb >> @r10)  { test_statement(0xBA7);  if (+$ip)@r9 ^ @rsp ^ $thread | 7)  { test_statement(0x122A); } elsif (0x11)0x11) { test_statement(0x1498); } } elsif (@r13 ^ @rsp >> @r10 & (@r12)(@r13 << @rdx >> @rax ^ $ip >> @rdi & @rbp & $thread) { test_statement(0x999); ;  break; }
$error$
$end$
3920
 if (@r11 << @r13 >> $proc >> @rsi ^ @rsp << @r10 >> 0y1101 ^ @r10 >> 0y1010 & ~@r13 ^ @r11 0xD + @r12 & @r9)  { test_statement(0x1240); } elsif ($thread << @r10 >> @rsi ^ @rsp >> @r13 & -0n18 & @rbp | $proc >> -$proc ^ $proc ^ $buffer ^ @r11(($buffer << 0y1011 >> $proc >> @rdi & @rsi >> $teb) { test_statement(0x1F9E);  // /* This is a comment  } elsif (@r11 & $proc ^ 0y1111 & @rbp | @r11 & @r11 ^ @rsi | @rbx ^ @r11)+$thread & @r13 & 0y1011 | ~$proc & $ip | (@rbx) ^ @rdi) { test_statement(0x1C02); } elsif ($ip ; @rbp & +0n12 ^ @rbp | $teb | +@rdi) { test_statement(0x253C); } elsif (+@r11 == @r11 ^ @r8) { test_statement(0x14CB); } elsif (@r9))@r9) { test_statement(0x2504); }
$error$
$end$
3921
 if (22 & $ip >> @r12 & @rsi | 0n10 << 0n12 & @rdi >> @rsi ^ $proc == 22 & $ip >> @r12 & @rsi | 0n10 << 0n12 & @rdi >> @rsi ^ $proc)  { test_statement(0x1D1E);  while  (@r10 <= @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r11 | @r12 | @r9((@rsi ^ 0x9 | 0y100)  { test_statement(0xADF); } else { test_statement(0x214); }  if (0x6 > 0x6)  { test_statement(0x901); } elsif (@r12 ! $teb) { test_statement(0x292); } elsif (@rax @r12) { test_statement(0x1FCF); } } elsif (~0y10011 >> @rdx | @rax & +@r13 & 0n3 | 0x9 ^ $ip <= ~0y10011 >> @rdx | @rax & +@r13 & 0n3 | 0x9 ^ $ip) { test_statement(0x2005);  // /* This is a comment   if (@rbx ! @r9 | ~22)  { test_statement(0x19DA); } } elsif (0n9 >> +@rsi & $buffer & @r13 ^ $teb & 0y1111 > 0n9 >> +@rsi & $buffer & @r13 ^ $teb & 0y1111) { test_statement(0x812); } else { test_statement(0x94E);  while  (~@rdx(($ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3922
 if ((@r8) << 0y10010 << @rbx >> 0y1010 >> @rdx & $thread << @rbp & -@r9 >> -@rsi & @r11 | @rdx | $buffer >> -$buffer ^ $proc((@r8) << 0y10010 << @rbx >> 0y1010 >> @rdx & $thread << @rbp & -@r9 >> -@rsi & @r11 | @rdx | $buffer >> -$buffer ^ $proc)  { test_statement(0x673); }
$error$
$end$
3923
 if (@rbp + @r13 << @rdx >> @r11 >> ~(@r11) >> @rbp & @rbp & 0n17 >> @rdx & $ip ^ -@r11 << -$teb >> @r12 ^ @rsp & 0n15 ^ @r9 & @r9 ^ @rax ^ 20 | @rsi ^ 0n9 >> @rsp & @rdx ^ $proc & @rbp ^ @rdi(@rbp + @r13 << @rdx >> @r11 >> ~(@r11) >> @rbp & @rbp & 0n17 >> @rdx & $ip ^ -@r11 << -$teb >> @r12 ^ @rsp & 0n15 ^ @r9 & @r9 ^ @rax ^ 20 | @rsi ^ 0n9 >> @rsp & @rdx ^ $proc & @rbp ^ @rdi)  { test_statement(0x20E3); ;  This is a not opened comment */ ; }
$error$
$end$
3924
 if (@rax << 0x1 >> $ip & 0n2 << @r13 ^ $thread | 0y10000 >> @r12 >> @rdi & @r12 & $ip & @rsi >= @rbx << @rbp << $buffer & @r11 & @rbx & 15 & @rax ^ (@rsi) << @rbp >> @r10 >> @rax ^ @rsi >> @rdx ^ (~@rsp) ^ $thread)  { test_statement(0x18A6); } elsif (@rbp << (@rax) >> $teb >> @rsi & $thread & @r12 & $teb <> @rax & @r9 >> $teb & @r9 | @rdi | -@rsi & @rsp) { test_statement(0xA77); } else { test_statement(0x1D6E); }
$error$
$end$
3925
 if (@r13 >> @rbx >> $ip >> @rbx & @rdx << @rbp ^ @rdi << @rax >> 0y110 | $thread >> @r12 >> @r9 | @rsp >> @rsi & @r13 & $ip ^ $thread ^ $thread(($thread + @rsp & 22 & -@rdx ^ @r10 << @rsi >> @r10 | 0y1101 >> @rsi >> @r12 ^ (~21) >> 4 & @rsp & 0x5 | @r13 >> ~$thread)  { test_statement(0xDA7); }
$error$
$end$
3926
 if ($teb >> @r12 << $thread >> (@rdi) <= @r9 + @r12 & @r8 << @rbx | $thread & 0y111 & $proc)  { test_statement(0x5E);  /* This is a comment */  /* This is a comment */ }
$error$
$end$
3927
 if (@r11 << @r11 << 0n16 >> @r13 >> @rbp >> 0xB | $ip >> $teb ! @r11 << @r11 << 0n16 >> @r13 >> @rbp >> 0xB | $ip >> $teb)  { test_statement(0x2626); }
$error$
$end$
3928
 if (2 + @rsi >> $proc << @rbx ^ @rbx << @r8 >> $proc))$teb >> 0xD & @r8 << @r10 & @rbx & @r9)  { test_statement(0x21BA); } elsif (0n19 << @r9 >> @rsp))~$buffer >> (13) >> @r9 | @rbx >> @r13 & $proc | $thread & $ip ^ -@r8 | 0 ^ @r10 | @r11) { test_statement(0x1C47); @rax = 0y10010 | @r11 | @rbp | 0y1101 ; } elsif ($proc ^ @r12 & @rsi | +@r9 & @r12 ^ @r9 ^ @r8(0n0 | 0xD & -+@rdx ^ @rsi) { test_statement(0x44);  break;  // /* This is a comment   /* This is a comment */ } elsif ($ip & ~@r10($ip) { test_statement(0x15E2); } elsif (~0y10010 ^ @r9 | @rax | @r9)$thread ^ $buffer | $ip) { test_statement(0x1AFE); } else { test_statement(0x108); }
$error$
$end$
3929
 if (0y10 + @rdx << +$proc << @r10 >> 23 & ~@r8 << @r9 @r11 + 0y10010 >> @rax)  { test_statement(0xD32);  for (; $buffer & $ip | @rdi ^ (0xA) | $proc | +@rsp <= $teb | $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@rsi >> @r11 >> @rsp ^ 0y1111 & @rax ^ $buffer | @rsi | 3))@rdx ^ @rbp & @r10 & @r11 ^ @r8 | @rbx) { test_statement(0x911);  This is a not opened comment */  /* This is a comment */ } elsif ($ip ^ +@r8 ^ @rsi ^ 0n4 | @r11 | @rsi ^ @r13)$proc >> $buffer | ~@rsp & @r11 ^ $proc ^ @rsi) { test_statement(0x19F6);  /* This is a not closed comment  while  (@r9 ! @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  This is a not opened comment */  /* This is a comment */  break; } elsif ((0y10001) & @rdx ^ -@rax | @r12 | @rsp | ~+@r12(@r10 & @rbx ^ @r13) { test_statement(0x929); } elsif ($ip | $buffer < $ip | $buffer) { test_statement(0x1C29);  This is a not opened comment */  while  (@rax <> $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 == @rdx) { test_statement(0x8E0); ; val = @r12 ; }
$error$
$end$
3930
 if ($ip + @r10 & @r8 | $teb << @rbp | @rdi >> @rsi | $proc & (-0y110) | (@rsi) ^ @r12 | $teb >= 17 >> $teb & @r12 << @r9 >> $proc >> @rbx & @rdx >> +$proc)  { test_statement(0x31B);  /* This is a comment */ } elsif (@rsi | $proc ^ @r12 != @r10 << 0x5 & 2 >> ~@r10 & $buffer & 0xD | ~@r8 & $thread & @rbp ^ @rbx | $ip & @r8 | 14 | @rdx | $proc) { test_statement(0x5BF); } else { test_statement(0x1E2E); }
$error$
$end$
3931
 if (@r10 + $thread << $thread & @r12 ^ 17 >> (+@rsi) & @r12 >> @rax & ~$ip & 0y1010 ^ $teb >> $thread & @r8 ^ $thread(($teb + @rbp << @rax ^ @r8 ^ +@rbp ^ 3)  { test_statement(0x7); } elsif ($teb << @r9 >> $thread ^ @r9 ^ @rbp & @r11 ^ 0n18 ^ @rsi = $teb ^ +@r13 >> @rsp | (-0n19) >> @r10) { test_statement(0x243C); ; } else { test_statement(0x930);  /* This is a comment */ }
$error$
$end$
3932
 if ($teb << +0n4 << $teb ^ +0y1010 << @rdx & 0n4 >> @r12 & @rdx & @r8 ^ $buffer >> @r8 ! $ip << -$thread >> @rax & +@r12)  { test_statement(0x1ECA);  /* This is a comment */ } elsif (@rsp << 6 >> $ip >> (0y110) ^ @r11 & @rdx & -$ip ^ @r11 & 0xB ^ @rsp ^ @r11)@rsp << 6 >> $ip >> (0y110) ^ @r11 & @rdx & -$ip ^ @r11 & 0xB ^ @rsp ^ @r11) { test_statement(0x2253); val = $ip ^ @r9 | 0x11 ; } elsif (@r10 ^ ~-@r11 ^ 0xA ^ @r11((@r8) { test_statement(0xFF1); } elsif (@rsi ^ $thread ^ @rbx | @rdx((@rsi ^ $thread ^ @rbx | @rdx) { test_statement(0x5D2);  /* This is a not closed comment } else { test_statement(0x9F3);  This is a not opened comment */ ;  break; ; }
$error$
$end$
3933
 if (@rbp + ~$teb << 0n10 << @rsi >> $buffer << $ip >> ~@rdi >> 0n4 & @r8 << @rax & @rbp & 4 & @rbx >< $buffer << $thread >> @rbx >> @rdi ^ 22 << @rdi >> $teb)  { test_statement(0x17C7); val = $buffer >> $teb ;  /* This is a comment */ } elsif (@r8 << @rsi & @rsi >> @rdi & $buffer & $thread ^ @rbx ^ @rsp & $proc | @rdx >> +@rdx & $buffer & $buffer ^ $buffer & 0 <> @r13 >> @rbp & ~@r12 >> @r11 ^ @r13 & @rdi & -@r11) { test_statement(0x98);  break;  /* This is a not closed comment  /* This is a not closed comment } elsif (@rbp >> @rsp | 0xB & @r8 | $thread ^ $teb | 0xC @rbp >> @rsp | 0xB & @r8 | $thread ^ $teb | 0xC) { test_statement(0x533); val = +@r10 ; } else { test_statement(0x176E); }
$error$
$end$
3934
 if (@rbp + @rbp ^ $ip >> $thread ^ +@rax & $thread | $proc ^ +0n18 & @r8 ^ @r8 & $proc ^ @rdx | @r11 >> @rbx & @rsp & @rbp ^ @r9 & -$ip | @r12 & $proc | @rdi ^ @rbx | @rsi | @rsi(@rsp << @rsi << $teb >> @rbp | 0 << @rsp >> @r8 >> @rbx)  { test_statement(0xA24); } else { test_statement(0x1F1B); }
$error$
$end$
3935
 if (@rbx + 0y111 >> @rbx << 0x5 ^ $buffer >> 0n10 & (@r10) >> -@r12 & @r13 & 0x9 ^ $proc >> $buffer @rdx + @rsi >> @rdx << @r9 ^ $ip | @r10 >> @rdx >> @rdi & @r11)  { test_statement(0x1D72); } else { test_statement(0x206C); }
$error$
$end$
3936
 if (0 + 0n5 << @r9 << @r11 & @rsi >> @rax & @r11 ^ 3 & @rdi >> ~@r9 ^ @rsi >> @rdx((@rsi + @rsi << 0n3 | @rbx & @rsi >> @r10 ^ @rdx >> @r9)  { test_statement(0xADB); }
$error$
$end$
3937
 if (@r13 & @rdx >> 0n5 | $proc >> @rax | @rdx ^ ~(@rsi) ^ -@rbx ^ $buffer >= @r13 & @rdx >> 0n5 | $proc >> @rax | @rdx ^ ~(@rsi) ^ -@rbx ^ $buffer)  { test_statement(0x69C); } elsif (@r8 ^ @rsi & @r10 ! @r8 ^ @rsi & @r10) { test_statement(0x16CF); } elsif (@r8 | @r10 ^ @r10 ^ $proc | $buffer ^ 0y1111 | @r8 >= 0n1 >> $buffer & @rsi & @rax ^ @rax) { test_statement(0x258C); val = 0y110 | -@rdx | @rsi ; } elsif (@r12 | 0n7 | (@r10) | @rax == @r11 & -@r13 | 0y1100 ^ ~@r9 | @r12) { test_statement(0x7D0);  This is a not opened comment */ } elsif (@r11 ^ 0n7 | -$teb = $teb ^ $thread | @rsp) { test_statement(0x646); ; } else { test_statement(0x1CE2); }
$error$
$end$
3938
 if (@rsp + @rsp << $proc << $thread >> 0 << $proc >> @rsi >> @r12 >= ~@r10 >> @rsi << -@r11 >> @r11 & $teb ^ 0y1110 ^ @rsp & @rax & 0y10 ^ +0x4 ^ -$proc ^ @rbp)  { test_statement(0x11FC);  break;  This is a not opened comment */ }
$error$
$end$
3939
 if ($buffer + ($buffer) << @rdi ^ $ip << @rbx ^ @rdi ^ @rsp & @r8 ^ 0y100 >= 0n13 << @rsi << 0y10010 >> @r13 ^ @r10 >> @rax >> $teb & @r9 >> @rbx | 0y10 << @r12 ^ @rbp)  { test_statement(0x18ED); } else { test_statement(0xE92);  /* This is a not closed comment }
$error$
$end$
3940
 if ($teb + @r13 & @rdi >> @rax | +-@rax ^ @rbp & 0x8 & @r13 ^ @r12 & @r12 ^ ~@r11 ^ 0n12($teb + @r13 & @rdi >> @rax | +-@rax ^ @rbp & 0x8 & @r13 ^ @r12 & @r12 ^ ~@r11 ^ 0n12)  { test_statement(0x144);  for (val = 10; 0n6 | +$proc = ~$proc ^ (@rax) ^ $thread | @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  break;  for (val = 10; -@rdi = -+@r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3941
 if ($ip & @r13 << @r13 >> ~@r10 | @r13 << @rbp >> +@rsi >> $proc | 0y1 >> @rbp & @r11 | @r12 & $buffer ^ $buffer ^ $teb | $teb ^ @r13 <= $ip & @r13 << @r13 >> ~@r10 | @r13 << @rbp >> +@rsi >> $proc | 0y1 >> @rbp & @r11 | @r12 & $buffer ^ $buffer ^ $teb | $teb ^ @r13)  { test_statement(0xEE6); }
$error$
$end$
3942
 if ($buffer + @r10 << $ip << @r12 & $proc >> @rbx & @rdi >> 15 | $ip >> 0n17 >> $buffer & +0x3 >> @r13 ^ @rsi & @rbp & +0y0))$thread >> @rbp << 0 >> @r8 | @r11 << @rdx >> @r10 >> -0n2)  { test_statement(0x1A39);  if (@rsp & ~@rbx == @rbp & $teb | @rbp ^ @rdx | $buffer | @rdx)  { test_statement(0x20B0); } elsif ($proc ^ -@rdi = $proc ^ -@rdi) { test_statement(0x1B7); } else { test_statement(0x926); } } elsif (0x12 << -$ip >> @r13 >> @r13 & -@rbx & $thread & 0y1000 <= +@rbp << @rax) { test_statement(0x2041);  for (val = 10; 11 | @r10 ! 11 | @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($teb | $thread ! $thread)  { test_statement(0x2668); } elsif ($ip < $ip) { test_statement(0xF65); } else { test_statement(0x25FD); }  This is a not opened comment */  if ($teb)@r12)  { test_statement(0xD51); } elsif (@rax == @r8) { test_statement(0x161); } } else { test_statement(0x1B03); }
$error$
$end$
3943
 if (@r12 + $teb & $thread >> 0n4 >> $teb & @rbx & $buffer & @r11 | $thread ^ @rbp & 0x0 >< @r11 + @rbp >> @rbp >> ~-@r9 ^ @r13 & $teb >> @r12 ^ @r11 >> @r11 & @rdi & (@rdx))  { test_statement(0x1EDC);  /* This is a not closed comment  /* This is a not closed comment  // /* This is a comment   /* This is a not closed comment } elsif (@rdx << @r11 ^ 22 & @rbx & 0x8 | @r8 >> ~@rbp | $proc ^ @rsp))@rdx << @r11 ^ 22 & @rbx & 0x8 | @r8 >> ~@rbp | $proc ^ @rsp) { test_statement(0x62B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ++0y100 ^ $thread((++0y100 ^ $thread) ; val = @rsi ; ; } else { test_statement(0x2548);  if (0n6 ^ --@rsp | -@rsp | @r9)0n6 ^ --@rsp | -@rsp | @r9)  { test_statement(0x18AD); } elsif ($buffer >< $buffer) { test_statement(0x2315); } elsif (@rbx >< $ip) { test_statement(0xB71); } elsif ($proc < @r11) { test_statement(0xF4E); } elsif (($buffer) <= @r12) { test_statement(0x1CE2); } }
$error$
$end$
3944
 if ((@rdi) + ($teb) << @rdi << @rsp >> @r13 ^ $buffer ^ -++@r12 >> @rdx & @r11 & -@r8 ; (@rdi) + ($teb) << @rdi << @rsp >> @r13 ^ $buffer ^ -++@r12 >> @rdx & @r11 & -@r8)  { test_statement(0x1C89);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread > (@r13) & $ip) ; }
$error$
$end$
3945
 if (@r10 >> @r11 << 0x11 >> @rbp >> 0y1110 | @r12 << 11 | @rsi @r13 ^ @r8 << +@r12 ^ @r11 & ~@r11 & 0y1100 ^ @r11 | $buffer >> @rbp & @r8 & @r12 ^ 0x3 ^ 3 ^ @r8)  { test_statement(0x11FD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +0xE ^ 0xD = +(@rsp) & @rbx ^ $ip ^ ((@r12)) | 0) ; } elsif (@rsi >> 0n5 & 0n18 >> @rbp ^ @r11 ^ @rsi | @rbx ^ @r10 ^ @r8 <= @rsi >> 0n5 & 0n18 >> @rbp ^ @r11 ^ @rsi | @rbx ^ @r10 ^ @r8) { test_statement(0x1AAC); val = 0xD & 0n0 | @rax | 1 ; } else { test_statement(0x10D0); ; }
$error$
$end$
3946
 if ((@r12) << $proc >> +@r13 << $ip & $buffer >> @r10 ! $proc + @rbx << +$proc & ~@rbp << +@rbp >> @rsp & @rsi >> @r9)  { test_statement(0xD4);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ^ @r13 | ~@r13 != @rdx ^ 4 | @r12) ; } elsif (0n9 << $ip ^ $teb >> @r10 & $ip & @rdx | $buffer & @rax & @rsi ^ 22 & @r13 | @rsi & @r11))@r12 << +-@r13 >> @r9 >> @rbp ^ @r9) { test_statement(0x184F); } elsif ($buffer & -(@r12) & @rbx <> $buffer & -(@r12) & @rbx) { test_statement(0xD3A);  for (@rax = +@rbp | @r9; @r9 ; @rsi | $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($ip)@rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (-14 & @r8 ^ +@rdx))@rdx ^ 0x6 | $proc) { test_statement(0x2439);  for (val = 10; -21 ; -21;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2495); }
$error$
$end$
3947
 if (~$thread & $ip << @rdi & $teb | $buffer & @r10 & +0 | ~$buffer ^ 4 & $buffer | @rdx & +@r12 ^ $buffer <> $thread >> $proc << @rbp & @rbx >> +0y1101 & $teb & @rdx | 0y1110 << 0x1 | @rbx >> @r8 & @r13 & @rsi | @r13 ^ $ip)  { test_statement(0xBF5); } elsif ($teb & $teb >> @rsp & 2 | 0y11 >> -0n3 & $proc & @r12 ^ 0 & (@r9) >< @rsp << @r13 >> @rax | +((0x12)) >> 0n13 ^ $proc & @r13 | 0x13) { test_statement(0x15B6);  break; }
$error$
$end$
3948
 if (0n18 + $buffer ^ @rsp << $proc >> 6((@r10 >> @rdx << @r13)  { test_statement(0xFFB); } else { test_statement(0x967);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc ^ $buffer | 0n1 >= @r8 ^ @r8 | @rax | @rbx) ; ; }
$error$
$end$
3949
 if (@r11 >> 3 ^ $thread ^ @rdx >> (@r13) & 0n12 & @r12 ^ @rdi ^ @rbp ^ $thread != @rsi ^ @rdx << +$ip & @r11 >> 0n10 & 4 & @rsi)  { test_statement(0x857); } elsif (+$buffer << $ip >> $ip >> @rsi & @rdx < +$buffer << $ip >> $ip >> @rsi & @rdx) { test_statement(0x232F); ;  // /* This is a comment   if (@rdx @rdi)  { test_statement(0x24DA); } elsif (@rbp(-$proc) { test_statement(0x1524); } elsif (@rsp <= @rsp) { test_statement(0x510); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip <> $buffer) ;  /* This is a not closed comment } elsif (@rbx & @rdx & 22 ^ +@r9 | $teb)@rbx & @rdx & 22 ^ +@r9 | $teb) { test_statement(0xB5A); }
$error$
$end$
3950
 if (@rdi + @r10 << @r11 << 4 >> (0y100) << $thread >> @r12 ^ @rdi >> 15 >> @rbp & @r8 >> @r8 | @rax($ip & $thread & @rdi >> +$buffer & $buffer | @r11 & @r10 & @r8 & @r11 ^ 0y1111 >> 0y1 & @rax)  { test_statement(0x19A7); }
$error$
$end$
3951
 if (@rsp + $proc ^ 0n8 & @rbp >> 0n19 & @rsi & @rdi ^ @r12 | @rbp >> @r8 | @r12 & $teb ^ @rsi & @rdx > @r11 + $proc >> (@r11) << @rbp & $teb | @rdx << ($proc) >> -0n11 | @rsi >> 0n17 & @rax & $proc)  { test_statement(0x87B);  if (0x12 & @rdx > 0x12 & @rdx)  { test_statement(0x14B2); } elsif (@r13 | $thread | @rdi(+@rbp) { test_statement(0x2053); } elsif (~@rsp | 0xE <= 0y10011) { test_statement(0x155F); } else { test_statement(0x1443); } val = 13 & @r9 ^ @rdi | 0xB ^ @rdi | +0y100 ;  if ($teb | @rdi(($proc))  { test_statement(0x992); } elsif ($ip >< @rbx) { test_statement(0x1763); } } elsif (@rdi << @r10 & 2 > @r10 & @rdx & 12 | @rdx | $thread & $teb ^ 0y1001 ^ @rbp | @rsi | @r10) { test_statement(0x1175); ; } else { test_statement(0x791); }
$error$
$end$
3952
 if (@rsi + $ip & @r12 ^ $buffer << $teb | @rbx & @r12 ^ @rbx > @rsi + $ip & @r12 ^ $buffer << $teb | @rbx & @r12 ^ @rbx)  { test_statement(0x21C8); } elsif (-@rsp << $proc & @rsp ^ ~--$ip >> $buffer ^ @r8 | @rdi ^ $teb & @r9 < $proc | 0xC) { test_statement(0x2580);  while  (@r11 ^ @rdi 0y1001)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rax ^ @rdi & $thread ^ $buffer ^ $buffer))@rax ^ @rdi & $thread ^ $buffer ^ $buffer) { test_statement(0x356);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread))0y1111 | 0n8) ; } elsif ($thread <> +0x4 & $ip ^ @rdi ^ 0x1) { test_statement(0x102F); } elsif ($thread 0x2 | @r11) { test_statement(0xBF7);  for (@rax = ~@rax; $buffer <> $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3953
 if (@r10 + 0xC << @rsp >> 0n16 >> --$thread >> -$buffer((@r11 + @r8 | @r13 & +@r8 >> @rsp & -$teb ^ @r9 >> @r12 & @rsp & $thread ^ @rbx)  { test_statement(0x16AE); } elsif ($thread >> @rdi & --@rdx >> $buffer ^ $thread >> @r13 & 2 | ~@rbx >> @r12 ^ @r11 & 0n11 >= @r8 & ~$ip & @r12 & 0y1001) { test_statement(0x21A1);  This is a not opened comment */  if (@r12 > @r12)  { test_statement(0x17E4); } elsif (@rsi(@rsi) { test_statement(0x1EA6); } elsif ((@r13) <> $teb) { test_statement(0x1C76); } else { test_statement(0x2103); } } elsif (~0 & (@rax) & @rsp ^ @r13 ^ 0x6 ^ 0x5 | 0n4 & @rdx ^ @r12 >= @rsp) { test_statement(0x1C6D);  This is a not opened comment */  This is a not opened comment */ } elsif (@r8 ^ @r11 ^ $ip = @r8 ^ @r11 ^ $ip) { test_statement(0x145E); } elsif (@rbx ^ $proc == $ip ^ @rsp | ($ip) | (0n12)) { test_statement(0x421); val = (@rsp) ;  while  (-@rbp ; -@rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3954
 if (-$teb ^ 0x5 << @rdx >> @rsi >> $teb & 23 ^ @r11 >> @r8 & @r10 & 16 ^ @r8 & @rbx ^ @r8 ^ +$proc | $ip << @rsp & @r11 & 0n15 & @r9 | $proc >> @rsi & 15 ^ $proc >< -$teb ^ 0x5 << @rdx >> @rsi >> $teb & 23 ^ @r11 >> @r8 & @r10 & 16 ^ @r8 & @rbx ^ @r8 ^ +$proc | $ip << @rsp & @r11 & 0n15 & @r9 | $proc >> @rsi & 15 ^ $proc)  { test_statement(0xCA3); } elsif (@r11 << -0y1000 >> @r8 & @rbx >> @r10 ^ -@r11 >> -@rsp & @rbp))@r11 << -0y1000 >> @r8 & @rbx >> @r10 ^ -@r11 >> -@rsp & @rbp) { test_statement(0x1459);  for (val = 10; @r11 >= $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@rsp > $thread) ; } else { test_statement(0x13DE); }
$error$
$end$
3955
 if (0x7 + 0x13 >> @rbx << @r13 | @r10 & @r11 >> @rsi >= @rsp + @rdx & ~$buffer >> +@r13 & -0y110 >> @rsi & @r8 & @rbx | $teb & 0y100 & ~@rdi ^ @r10 >> $teb & @rax)  { test_statement(0x23E7);  // /* This is a comment  } else { test_statement(0x1B57);  /* This is a comment */  // /* This is a comment  }
$error$
$end$
3956
 if (@rsp << @rdi << @r8 >> -$buffer ^ +@rbp << 0n18 >> @rax >> 0n14 ^ @r10 >> $teb ^ $ip & $buffer))-@rbp + @r10 << @rdi >> @rbx >> $ip >> @rsp & @rbp << 0y10010 >> +@rdx >> $ip ^ @r10)  { test_statement(0x14DF); }
$error$
$end$
3957
 if ($thread + -@rsi << @r9 | @r13 << 0x13 ^ $proc >> 0y100 & $teb(@rdx << @rbp << @r13 >> 0 & $buffer << $ip)  { test_statement(0xBF4);  for (@rax = 22 & 0x3 ^ @rdx | @r10 ^ @rax | $buffer | @rax; 12 | @rax != $teb & ~$proc ^ @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xBF0); }
$error$
$end$
3958
 if ($proc + -$buffer >> $proc >> @rsp >> @r12 & 3 << @rsp & $thread >> @r11 & ~3 & @rsi | $buffer << @r8 ^ $buffer >> $proc & ~@rsi | $teb >> @rax > @rax + @r10 << $teb >> @rbp << 0x5 >> @r10 & @rdx >> @r10 & $thread)  { test_statement(0x25C0);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@r10 & @rsp | @r10 ^ $ip ; ~@r10 & @rsp | @r10 ^ $ip) ; } elsif ($buffer & @r10 & @rsp ^ @r10 ^ ~$teb)$buffer & @r10 & @rsp ^ @r10 ^ ~$teb) { test_statement(0x1148); } else { test_statement(0x236F); ;  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
3959
 if (-0y10010 << 4 << (@rbx) >> @r10 << $buffer >> @r12 ^ @rax >> $ip & @rax >> ~0n3 | @rax << @r12 >> @r11 >> 0y101 & $teb | @r13 <> -0y10010 << 4 << (@rbx) >> @r10 << $buffer >> @r12 ^ @rax >> $ip & @rax >> ~0n3 | @rax << @r12 >> @r11 >> 0y101 & $teb | @r13)  { test_statement(0x26A3); }
$error$
$end$
3960
 if (@rdi + @rdi << @r11 << @r11 >> @rbx >> -13 ^ @rbx << $teb | (~0x13) << @rsi >> @r8 & @r12 | @rbx ^ $thread ^ @rdi ^ $buffer | $thread ^ @rbx ^ 0y11($ip + @r8 << $proc & 0n18 << 0y110 ^ @rsp << @rsi & @rdx >> $thread | -@r9 << $buffer >> @rbx & @rax & 1 ^ @rbp >> @r11 ^ @rsi ^ +$thread)  { test_statement(0x1635);  for (; @r11 & 15 ^ @r12 = @r11 & 15 ^ @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3961
 if (+@r8 + @rsp << @r10 << @r10 & +@rbx >> @rdi >> $teb & $thread ^ +@r10 >> @rdx ^ 0y1000 >> +17 <> +@r8 + @rsp << @r10 << @r10 & +@rbx >> @rdi >> $teb & $thread ^ +@r10 >> @rdx ^ 0y1000 >> +17)  { test_statement(0x1CA8); }
$error$
$end$
3962
 if (@r13 + @r10 << -@rbp << @rax & +$teb & @rsi & $teb & @rbx | @r13 >> @r12 & @rdi >> @rax & 0y10001 & @r9 ^ -$ip >= @rdi << @rbp << $thread ^ @r9 & 0n7 >> @rbx | @rdx >> $buffer & @rsp ^ @rsi & $buffer & @rdx ^ 0y10000)  { test_statement(0x2070); } elsif ($ip >> @r11 >> 0 & 0y1000 >> @rax ^ @r12 ^ @rbp & @rdx | $proc ^ @rsi ^ 0y1010 | @r11 & $thread ; @rax << @r10 & $ip >> @r12 | @r13 & $buffer ^ +-@rdi & @r11) { test_statement(0xEFF);  This is a not opened comment */ } else { test_statement(0x21E9); }
$error$
$end$
3963
 if (0n9 << @r10 & $thread << -@rdi & $teb & @r10 ^ ~@r8 << $proc ^ 4 >> $proc ^ $ip & @rdi ^ -$teb)@rsp + @rsi >> $buffer & (@rbx))  { test_statement(0x2650); } elsif (@rsi >> $proc ^ @rsp & 0n17 & $buffer((@r9 >> @rbx & $ip & $thread ^ +0n2 >> $buffer) { test_statement(0x1496); }
$error$
$end$
3964
 if ($ip + @rbx << -$teb & ~@r11 & 0n5 >> @rax(($ip + @rbx << -$teb & ~@r11 & 0n5 >> @rax)  { test_statement(0x1DCF); }
$error$
$end$
3965
 if (+@rsp >> $proc << (+~@r10) >> @r8 >> $ip ^ @rsi << @rax <> @rbx << $teb << 12 >> @rsi >> @r8 >> $buffer ^ 12 & -@rax ^ @rbx | @rbx << $teb | @rax >> @rdi & $proc & $teb ^ @rbx ^ 0x1 ^ $ip | 0xB & 0xF)  { test_statement(0x1435); }
$error$
$end$
3966
 if ($ip >> $teb ^ @r11 << 0xF >> 0y1011 >> $proc & @rdx ! $proc << @rsp & (@rbp) << @r13 >> @rsi)  { test_statement(0x2A4);  This is a not opened comment */  break; } else { test_statement(0x9B3);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rdx >= @rdx | $thread) ; }
$error$
$end$
3967
 if (@r13 >> @r9 << @rax >> $buffer | @rdi << @r11 & $proc != 4 << @rsi >> $teb & 0x3 << @r10 >> @r13 >> -@r13 & @rdx | $proc << 0y1101 & $thread >> $thread & 0x10)  { test_statement(0xFF3);  // /* This is a comment  } elsif (@rbp << $ip >> @rsp >> @r8 ^ @r11 >> (~@r8) = @rax << 0y101 >> 0y0 & 0n7 >> @r10 & +@rsi) { test_statement(0x2513);  /* This is a comment */  /* This is a comment */  // /* This is a comment   // /* This is a comment  ; }
$error$
$end$
3968
 if ($ip + @rdx << $proc << ~@rsi >> @rax 0n11 + @r8 & @rbp << $teb & @r10 & @r11 ^ -$buffer & $teb ^ @rdi ^ $proc & @r12 | @r8 << @rbp >> @r8 >> @r8 & $proc >> +@r9 & $ip)  { test_statement(0x963);  for (; @r11 | +$teb < $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = 0x5 ^ @r12 ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x12 | 5 == @rdx) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc = @r10) ; }
$error$
$end$
3969
 if (@rsp + $thread & $proc >> 0n12 & @r10 >> $proc & @rdx != $proc | @r9 << $teb >> @rax >> @rsp & @rbx >> ~0y10010 & @rsp & @rdi)  { test_statement(0x116D); } elsif (0x12 << @rdx & @rbp & -@r10 & @rbx((0x3 << 0y10 | @rdx >> $proc & @rdx ^ @rdi & 0y1011 | $ip & @rbx ^ +@r10 | @r12 ^ @rdx | @r12 | @rax) { test_statement(0x256A); } else { test_statement(0x1D5B); }
$error$
$end$
3970
 if (@rdi + 13 << @r12 >> $buffer << @r10 >> $proc >> @r8 & @rbp >> $buffer >> -+$proc & @rsi >> 0y10011 | $buffer << @rdx >> @rdi | @rax >> -@rsi <= @rdi + 13 << @r12 >> $buffer << @r10 >> $proc >> @r8 & @rbp >> $buffer >> -+$proc & @rsi >> 0y10011 | $buffer << @rdx >> @rdi | @rax >> -@rsi)  { test_statement(0xDED); } elsif (@rdx << 0xC >> $teb ^ @r13 | @rbp ^ 0y1000 & $ip ^ @r10 >= $teb & -(~@r9) & 0n14 ^ $teb & $teb & @r8 ^ @rsp ^ 0x3) { test_statement(0x2598); } elsif (+@rbp >> -@r12 & +@r13 ^ $buffer & @r13 | $thread | @r8 ^ @rbp > @rsp & @rbx & 0n9) { test_statement(0xC13);  This is a not opened comment */ @rax = 0y10011 | @r12 ;  for (val = 10; @rdi <= -($teb);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (-$teb | $ip | @rsi(-$teb | $ip | @rsi) { test_statement(0xD80); }
$error$
$end$
3971
 if (@r9 << ($teb) | @r12 << 0n4 >> @rdi >> @r13 ^ @rsi >> +@rax ^ $proc ^ (@rdi) <> +@rbp & (@rbp) ^ @rbx >> 0n6 >> @rbp)  { test_statement(0x635); }
$error$
$end$
3972
 if (0xE + @rdi >> 5 << @r11 | @rsp ^ @rdx | $proc <= 0xE + @rdi >> 5 << @r11 | @rsp ^ @rdx | $proc)  { test_statement(0x2376);  break; } else { test_statement(0x4C5); ;  break; }
$error$
$end$
3973
 if (@r10 << $proc | @rsi & -@r13 | @rsp & @rdi & @r10))@r10 << $proc | @rsi & -@r13 | @rsp & @rdi & @r10)  { test_statement(0x1ED6); } elsif (+@rsp << @rdi >> @rsi >> 0y0 ^ @rax & @rax & @rdx ^ -@rsi | $buffer ^ @r13 ^ $ip ^ -@rdx | @r9 & @r8 ^ $thread ^ 0x0))+@rsp << @rdi >> @rsi >> 0y0 ^ @rax & @rax & @rdx ^ -@rsi | $buffer ^ @r13 ^ $ip ^ -@rdx | @r9 & @r8 ^ $thread ^ 0x0) { test_statement(0x111B);  /* This is a comment */ }
$error$
$end$
3974
 if (@rbx + 0x13 << @rdi << @r9 >> $thread ^ $ip << -+@rdi ^ $thread ^ @rax & (0xE) ^ @r11 | ~@r10 & @rdi & @r10((@rsp << @r8 & @r11 << $buffer | @r8 & $thread & @r9 & (@r13) | @rsp >> -@rbx ^ @r8 & @rsi ^ -~@rdi | $thread | 0y1110 ^ @r12)  { test_statement(0x24D6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rsi & @rax >= @r10 & @r12) ; } elsif (6 << @rdi & @rdi >> @r11 & (0xD) & @rax < 0y10011 << +@r9 & @rsi >> @r8) { test_statement(0x241F); } else { test_statement(0x151F);  /* This is a comment */ }
$error$
$end$
3975
 if (@r8 << @r13 & @r9 >> @r9 ^ @rsp & @r11 & $thread | 0n5 << @rax & $ip | +@rdi ^ @r8 ^ @r9 ^ $thread == @r8 << @r13 & @r9 >> @r9 ^ @rsp & @r11 & $thread | 0n5 << @rax & $ip | +@rdi ^ @r8 ^ @r9 ^ $thread)  { test_statement(0x269E); } elsif ($buffer << $thread >> @rbp & $teb & @r9 ^ @rax >> @r8 & 0xB | 0n3 | $buffer | @r10 ^ 0y10011((@rax << @r11 >> @rsp & @r11 & -@r8 & @rsi ^ $buffer & ~(0n12)) { test_statement(0xB2D);  for (val = @r13; @rbx ^ @r13 | @r11 <= @r12 ^ $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0n4 | @rax <= @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3976
 if (@r10 << $ip << 0n16 >> 0x6 >> $teb >> @rbp & $buffer(($teb << (+$ip))  { test_statement(0x11CF); } elsif (@r12 << @r11 >> 0y10 & $thread & @rsp | @r8 >> @r12 & 0n14 & @r11 != @r12 << @r11 >> 0y10 & $thread & @rsp | @r8 >> @r12 & 0n14 & @r11) { test_statement(0xE7B); } elsif (@r10 ^ @rdi ^ @rbx ^ @rbp != 0n0 | @rbx & @r12 | @r8 | $teb | -@r13) { test_statement(0x12E2); } elsif (@r8 @rbx) { test_statement(0xAD1);  break;  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx @rdx) ;  /* This is a comment */  break; } else { test_statement(0x1149); val = @r11 | 0xE ^ @r12 ; ; }
$error$
$end$
3977
 if ($ip + $buffer << 0y111 & @rbx << @r11 & @r12 & @rax >< $ip + $buffer << 0y111 & @rbx << @r11 & @r12 & @rax)  { test_statement(0x17F6);  break; }
$error$
$end$
3978
 if ($buffer >> +0y101 << +@rdi >> @r10 & 0x11 << @rdx >> 10 & -0xD & 21 & @rsi ^ @r8 ^ 0n1 & @rax | 0xC >> @r9 ^ 0y1 >> $thread & $thread($buffer + @r10 >> 13 << -0x11 >> @rax ^ @r12 << @r11 >> @r12 >> @r10 & ~@rdi >> ~@rax & @r10 & +@r10 | 0y1000)  { test_statement(0xA61); } elsif ($proc << @r11 >> @rdx >> 0y1011 > $proc << @r11 >> @rdx >> 0y1011) { test_statement(0x3EC); } elsif (0x9 >> $teb >= $teb >> $thread & @r8 & @rbx ^ @rsi ^ 11) { test_statement(0x50B);  // /* This is a comment  } elsif ($teb ^ @rsi ^ @r9 | @rsi | +$buffer | 0x7 > $buffer ^ @rsp ^ @r12) { test_statement(0x17F7); }
$error$
$end$
3979
 if (@r11 + @r11 << @rdi << +$thread >> +@r13 << 0x4 & 0y1011 << @r9 ^ @r8 << @r13 & (@r13) & @rbp >< @r11 + @r11 << @rdi << +$thread >> +@r13 << 0x4 & 0y1011 << @r9 ^ @r8 << @r13 & (@r13) & @rbp)  { test_statement(0x17D); } elsif (@rsi & -$ip >> 0x2 != @rbx << 0n15 >> 0n2 >> (@r9)) { test_statement(0x1324);  // /* This is a comment  }
$error$
$end$
3980
 if ($proc >> $proc & +7 << 23 & @rbx ~@r11 + @rdx >> +$teb >> @rdx & @rdi << @r11 ^ @r11 ^ @r8 >> @rdi & @r12 & $teb ^ @r11 & (16))  { test_statement(0x195C); } elsif (@r11 >> @rdi != 0n19 << 0n6 & @rbp ^ @rdx >> $buffer & @r11 ^ @rsp & 0x4) { test_statement(0x1CFD);  break;  // /* This is a comment  ; } else { test_statement(0xD4); }
$error$
$end$
3981
 if (@rsp >> $ip >> @r8 >> @r13 & (~@rbp) >> @r9 >> @rdi ^ @rbp << @r12 <> @rax + @rax >> @r13 >> @rsi >> 16 & @r10 << -@r12 & +(@rsp) >> @r10)  { test_statement(0xC69); } elsif (0n17 >> @r11 >> @rdx ^ (@r13) >> @rbx ^ -@rdi & $buffer | $ip & +@rdx & @rbx ^ $buffer & -$proc | $proc != 20 & $proc >> @r13 & +$ip) { test_statement(0x1539); @rax = $teb & @rsp | @r12 ^ 13 | $teb ;  for (val = 10; @r9 | ~@rdx)@r9 | ~@rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3982
 if (0y10001 + @rbx >> @rdx << @rdx & @rdi >> (@rdx) >> -$ip & $proc >> @rsi & @r12 & @r9 ^ $thread >> $thread & @r10 & @r13 ^ 0x5 >> 0y111 ^ +@r10 ^ @rdi ^ +$thread | $teb & 0x4 & +~(@r9) ^ @r13 ^ $teb & @r13))@rbp + @r13 << @rbx << @rsi & @rdx >> @rdx | $proc << ~@rdx >> $thread >> 0y101 & 0n11 & 0x2 & +$proc)  { test_statement(0x874);  break;  // /* This is a comment   // /* This is a comment   This is a not opened comment */ @rax = 0x3 ; }
$error$
$end$
3983
 if (@rdi << @rsp << @rbp ^ 17 << @r10 & @r9 >> @rax ^ @rbp @rdi << @rsp << @rbp ^ 17 << @r10 & @r9 >> @rax ^ @rbp)  { test_statement(0x1D15);  if (+@rbx ^ @r10 | 0n3 ^ @r13 | +0y11 | $thread <> $teb & ~$ip ^ +@rbx ^ @r13 | @rdx | @r13 | 0y0)  { test_statement(0x97C); } } elsif (@rdx >> $ip >> @rdi | -~0xD >> @rsi & $thread ^ @r11 & +$ip ^ $teb ^ ~$proc | $thread & -@rbx < $proc ^ -@rsi >> @rdx & 21) { test_statement(0x15B7);  /* This is a comment */ } else { test_statement(0x9D0); }
$error$
$end$
3984
 if (@rbp + 21 << $teb << @r10 & ($buffer) << 0n10 >> @rbp >> $buffer & ~@rdx >> 0n13 ^ 0x13)@rbp + 21 << $teb << @r10 & ($buffer) << 0n10 >> @rbp >> $buffer & ~@rdx >> 0n13 ^ 0x13)  { test_statement(0x1E46); } elsif (+~@rdx & @r8 ^ 5 & @rdi & @rax ^ @r13 & ($proc) ^ $buffer = @rsi << 0y0 >> @r13 >> $thread | ~0n6 | 0n9 ^ @rdi ^ @r12) { test_statement(0x1957);  while  (@r12 ^ 0x10 == @r12 ^ 0x10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r9 & $thread & 0y1101 ^ @rbx & 1 ; @r10 >> @r11 & 13 & -@r9 | ~~@r9 ^ @r10 ^ @r12) { test_statement(0x3B4);  break; }
$error$
$end$
3985
 if (@r13 << @rax << @rbp ^ (@r9) | @r10 << @r8 >> -$teb = @r13 << @rax << @rbp ^ (@r9) | @r10 << @r8 >> -$teb)  { test_statement(0x6C4); } elsif (@r13 >> $teb | $teb >> @r8 & ~$teb ! $teb & @rsp >> +~@r9 ^ @r12 >> @r12 ^ @r10 & 0y10000 | 21 >> @rsp | @rsp & 0y1010 | @r12) { test_statement(0x11CA); } elsif (0 & 15 & +@r9 | -@rax & @rbx | @r8 >< 14 >> +$ip & @rbx) { test_statement(0x1847);  /* This is a not closed comment  if (@rbp <= @rdx)  { test_statement(0x23F6); }  for (val = 10; $teb @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3986
 if (@rbx + -@rax << ~@rsi << @r9 >> $proc >> +6 & @rdx >> 0xF & -@rbx >> @rax | 22 << (21) >> @r12 == @r10 << @rdx << @rbx ^ @r11 & $teb ^ (-@rdi) >> @rsp & @rax & $ip | @rsp << @rdx >> ~@r11)  { test_statement(0x1A4A);  while  ($thread ^ @rdx ^ @rbp | @rsp ^ $proc ! $thread ^ @rdx ^ @rbp | @rsp ^ $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (+~@r9 ^ @rbx >= @rdx)  { test_statement(0x1425); } else { test_statement(0x1BE2); }  if (+@rax(($proc)  { test_statement(0xE4B); } elsif (@r13 ! @r13) { test_statement(0x6E1); } elsif (13 >= 13) { test_statement(0x2124); } else { test_statement(0x116C); } } elsif (@r9 << $teb | 0y11 >> @rsi & @r12 & @r13 ^ $teb ^ @rbx ^ $buffer | +@rbp & 0y10010 ^ 22 ^ $thread))0n5 << -@rdx >> (0x12) & (@rsi) >> @r10 ^ @r13 ^ @rsp & 0x7 ^ 0x9) { test_statement(0x1075); } elsif (@r9 | 0y10000 ^ -$thread ^ @r10 | @rbp != @r9 | 0y10000 ^ -$thread ^ @r10 | @rbp) { test_statement(0x1006); } else { test_statement(0x1DEE); }
$error$
$end$
3987
 if (@r12 + (@rdi) << $teb & $ip << @r9 & @r9 & @rsi & ~@rbx ^ 0y10011 < @rbp + @rsi & @r10 << @r11 >> $buffer | $ip << +@rbx >> 0n9 >> 0x7 | @rbp ^ +@r8 ^ $teb ^ @rbp | @rsp ^ ~7 | @r13 ^ @r9)  { test_statement(0x11DB); } else { test_statement(0x1DC1); }
$error$
$end$
3988
 if (@rbp << $proc << @r11 >> @rbx ^ 0n0 ^ $teb >> @rbp & @r13 ^ @rbx & @r13 | $teb >> @rax >> @rdi & @r8 & @rbp ^ 0n0 & @r8 ^ @r8 & @r8 > @rbp << $proc << @r11 >> @rbx ^ 0n0 ^ $teb >> @rbp & @r13 ^ @rbx & @r13 | $teb >> @rax >> @rdi & @r8 & @rbp ^ 0n0 & @r8 ^ @r8 & @r8)  { test_statement(0x71A);  /* This is a not closed comment } else { test_statement(0x24A2);  if (@rbp <= @rbp)  { test_statement(0x26F9); } elsif ($teb)@rbp | 10) { test_statement(0x1DC1); } elsif (0y110((0y110) { test_statement(0x1350); }  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
3989
 if ((@rax) + $thread << 12 >> @r12 << 0x7 ! @r11 & @rax << -$teb >> @r8 ^ @r8 << 0xA ^ $thread ^ $teb ^ $teb | @r12 << @rsp & -~@rbx >> @rbx | @rdi >> @r10)  { test_statement(0x203);  if (@r8 != @rdx & -@rdx ^ @r8 | @r9 ^ @r11)  { test_statement(0xAC2); } elsif (@r10 ^ @r13 | $thread >< $proc ^ @rax | $proc | 0y1010) { test_statement(0x5D9); } else { test_statement(0x228F); }  for (val = 10; @rax ^ @r10 == @rsi | @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp >> ~$proc & @rbx >> @rsi ^ @rbx >> 0y1010 & $thread & @rax ^ @rsi & $proc = 0n1 & 6) { test_statement(0x15BE);  if (@rsi ^ @rdx <= @rsi ^ @rdx)  { test_statement(0x22DE); } elsif ((@r10) <> @r13) { test_statement(0x1FD3); } elsif (@r11 <= @r11) { test_statement(0x705); } else { test_statement(0x330); } } elsif ($proc >> @r10 & 0y100 & $ip | $thread & @rdx ^ 0y1100 ^ @r13 <= $proc >> @r10 & 0y100 & $ip | $thread & @rdx ^ 0y1100 ^ @r13) { test_statement(0xDEA);  for (val = 0xB; (@rdx) >< @rsp | (~@rax);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rsi < @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3990
 if (@r8 >> $buffer >> @rbx >> +$teb & -$buffer & @rbx & @r13 | 0x12 << @rdx >> 0x0 & $buffer & @r10 & @rdx ^ @rsi >> @r12 & $buffer & @r13 ^ -@r12 ^ (@rdi) ^ @rax | $thread >> 0n8 | ((~@r11)))@r8 >> $buffer >> @rbx >> +$teb & -$buffer & @rbx & @r13 | 0x12 << @rdx >> 0x0 & $buffer & @r10 & @rdx ^ @rsi >> @r12 & $buffer & @r13 ^ -@r12 ^ (@rdi) ^ @rax | $thread >> 0n8 | ((~@r11)))  { test_statement(0x1F4A);  while  (@r8 ^ @rdx < @r8 ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
3991
 if (@rsi << (($thread)) << $thread ^ $thread >> @rax & @rax >> @rsp @r8 + @rdx << @rdx << -+~$thread ^ -@rsi << @r10 & +@rbp & $thread & $proc | -@rdx << +@rax >> @r10)  { test_statement(0xF1D); } elsif (0y10001 >> @r12 >> $buffer | ~@rdx >> $ip & @r13 ^ $thread ^ @rsp = 0y10001 >> @r12 >> $buffer | ~@rdx >> $ip & @r13 ^ $thread ^ @rsp) { test_statement(0x1F8A); } else { test_statement(0x9BE);  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
3992
 if (0n9 + -@rsi & $thread & -@r8 >> +@rdx <> -@r9 ^ (@r10) & @rsp >> $thread | ~($proc) >> +@r13 >> $ip ^ +@r13 >> $teb)  { test_statement(0xBFC);  for (val = 10; ($thread) | @rsp | @rdi))-@rbp & @r9 ^ @r13 ^ 0n5;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif ((@rax) << +$proc >> @r12 ^ @r9 & $buffer ^ -$thread ^ @rsi ^ @r13))$teb << 0x0 >> (@r8) & $thread & @r10 | @rbp ^ @rax & @r11 ^ @r13 | ~0xB & @r13) { test_statement(0xCFB); } elsif (@r12 & (@r10) ^ $teb & 0xE ^ @rsi | $proc & @rax ^ $teb != @r12 & (@r10) ^ $teb & 0xE ^ @rsi | $proc & @rax ^ $teb) { test_statement(0xAE5); } elsif (@r12 | @rbx ^ $ip($teb ^ -$buffer | @r8 | (5) | -0y110) { test_statement(0x30D); }
$error$
$end$
3993
 if ($proc + +@rsp << @rdi << 0n1 >> @r13 << 10 >> @r12 & 0y10 >> $proc & (21) & @rdx ^ (-$buffer) << @rsp >> @r10 >> 0n8 ^ @r8 >> @rbx & @rbp ^ @r9 | @rbp >> @r8 ^ $ip & @r13 < @rdx << @rbp << @rbp >> +0n18 & @r11 << 0xD >> +$buffer >> @rsp ^ @rsp >> $ip >> +$ip ^ @rsp)  { test_statement(0xF33); ;  if (@rbx ^ @r10 | @r9 | +@r12)@rbx ^ @r10 | @r9 | +@r12)  { test_statement(0xAC6); }  // /* This is a comment   if (@rdx <> @r11)  { test_statement(0x7E); } elsif (@r12((@r12) { test_statement(0x6B0); } elsif (2 != @r8) { test_statement(0x25B5); } else { test_statement(0x259A); }  This is a not opened comment */ } elsif ($ip >> $thread >> +~@r9 ^ @r12 >> 4 ^ $thread ^ 0y1000((15) { test_statement(0x21E6);  break; } else { test_statement(0x1920); }
$error$
$end$
3994
 if (0x11 << (0x11) >> @rdi << 0n0 | 0 >> +16((@r11 << 7 & ~@rbx >> -(0x13) ^ @r11 >> @rdi >> @rbx & @rdi & ~+0y101 & 0x4 | $buffer << @r10 >> $proc & $thread >> $thread & @rdx & @rdi)  { test_statement(0x1D98);  // /* This is a comment   /* This is a comment */  for (; @rsi <= @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  for (val = 10; @r10 0n14;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rbp ; } else { test_statement(0x5EF); }
$error$
$end$
3995
 if ((@r8) << ~-@r10 << 21 & 0n14 << $buffer & @r10 >> @rsi | $proc ^ @rdx & $thread & -@rdx ^ @rsp | $buffer & $ip ^ $thread ^ $thread >= (@r8) << ~-@r10 << 21 & 0n14 << $buffer & @r10 >> @rsi | $proc ^ @rdx & $thread & -@rdx ^ @rsp | $buffer & $ip ^ $thread ^ $thread)  { test_statement(0xA7D);  if (~@rsi & 16 ^ @rbx | @rbx | +@r13 | @rsp <> ~@rsi & 16 ^ @rbx | @rbx | +@r13 | @rsp)  { test_statement(0xC42); } else { test_statement(0x11E9); } } else { test_statement(0x1055);  for (val = 10; (@rdx) ^ @r10 >< (@rdx) ^ @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread | @r11)0xA | 20) ; }
$error$
$end$
3996
 if (@rdi >> @rsi >> @r11 >> $buffer ^ $buffer << $ip >> ~@r11 >> @rsi & $proc >> 0x13 | 16 & @rbx ^ @rdx > @rdi >> @rsi >> @r11 >> $buffer ^ $buffer << $ip >> ~@r11 >> @rsi & $proc >> 0x13 | 16 & @rbx ^ @rdx)  { test_statement(0x3); } elsif ($ip >> $ip != @r10 << $ip >> @rbx >> @r11 & $proc >> (@r13) & ~@rsi | -$teb & -~$buffer & $teb ^ @r9 & 0x3) { test_statement(0x1AB9); } elsif (@rdx & @rbx ^ @r10 | @r13))0y1111 >> $teb | 0n1 ^ @r11) { test_statement(0x2062);  // /* This is a comment   for (val = 10; (~@rdx) @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   // /* This is a comment  } else { test_statement(0x468);  This is a not opened comment */ @rax = @r10 ^ @r9 ;  This is a not opened comment */ }
$error$
$end$
3997
 if (@r12 + @rsp & ++0x3 >> (@rbp) | @r12 & 0y1111 & @r11 & @r10 ^ $buffer >> @rbp & $thread & @rsp ^ $proc & (@rbp) > 4 + @rbx ^ $thread & @rdx >> 0y1100 | (@rbp) & @r11 & -$ip & @r10)  { test_statement(0x20D7); }
$error$
$end$
3998
 if (0xB << @r9 << @rdx & $ip >> +@rsi ^ 16 ^ @rdi ^ $buffer & $proc ^ @rbx)$thread ^ @r12 << $thread & @r9 >> @rdx ^ @r8 ^ $buffer & 0y110)  { test_statement(0xD3E); } elsif (@rax << @r8 >> @rdx & @rdx | $teb & @rdx | @rbx ^ -@rsp == @rax << @r8 >> @rdx & @rdx | $teb & @rdx | @rbx ^ -@rsp) { test_statement(0x31F); } elsif ($ip & @r10 | @r10 & -$ip | $ip | @rbx)$ip & @r10 | @r10 & -$ip | $ip | @rbx) { test_statement(0x1C61); } elsif (0n19 | 0y1 ^ ~@r11 = $buffer & @rbp) { test_statement(0x2235); } elsif (@r12 ^ ~@r8 | @r11 | $thread = @r12 ^ ~@r8 | @r11 | $thread) { test_statement(0x3E1); ; } elsif (@rsp ; (0y1010)) { test_statement(0x20B1);  /* This is a not closed comment  break; } elsif (+0n16 < $ip) { test_statement(0x1B3E);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc != @rdx) ; }
$error$
$end$
3999
 if (~@rsp << @r9 << (@r9) & $buffer >> @r8 ^ @rsp >> -@rsi | @r10 << +@r11(~@rsp << @r9 << (@r9) & $buffer >> @r8 ^ @rsp >> -@rsi | @r10 << +@r11)  { test_statement(0x219);  while  (~@rbp <= @r8 & $ip ^ @rdx ^ @rsp | +@rax ^ $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  // /* This is a comment   // /* This is a comment   /* This is a not closed comment }
$error$
$end$
4000
 if (~@r11 & 0y1 >> @r10 ^ (@rsp) ^ @r9 >> ~0y1010 ^ 0n12 ^ $thread ^ $buffer = +@r9 >> 21 << ~(@rdx) >> 0y1101 & +@rbp << @r8 >> ~5 & @rdi >> -+@rdx & -@r8 & @r13 ^ -0xB >> @rax >> (@rdi) & @r13 >> $thread)  { test_statement(0x51F); } else { test_statement(0x17EC); }
$error$
$end$
4001
 if (0x11 + ~$teb << 0x7 << @rdx & 0xA ^ 0y10000 >> $teb ^ $ip ^ @rax & ~0y10000 | 0n5 << @r9 = 0x11 + ~$teb << 0x7 << @rdx & 0xA ^ 0y10000 >> $teb ^ $ip ^ @rax & ~0y10000 | 0n5 << @r9)  { test_statement(0x3A2); } else { test_statement(0x2345); }
$error$
$end$
4002
 if (@r8 << -@r8 << @rbp & @r10 >> @rdx >> 20 & $ip >> @rsi ^ @rsp << @r9 >> 0x3 >> $thread ^ -$teb & @r11 & (@rsp) >= @r10 + $ip << @rbx & @r12 << 0xC & 0y0)  { test_statement(0x670); }
$error$
$end$
4003
 if (0y11 << -@r10 & 0y101 << @r9 >> $ip & +@r9 >> @r12 ^ @r10 << 0y10010 >> @rbx | @r8 ^ @r10 >> @r10 ^ @r8 ^ $buffer | $proc >> @r11 ^ @rsp ^ $buffer == 0y11 << -@r10 & 0y101 << @r9 >> $ip & +@r9 >> @r12 ^ @r10 << 0y10010 >> @rbx | @r8 ^ @r10 >> @r10 ^ @r8 ^ $buffer | $proc >> @r11 ^ @rsp ^ $buffer)  { test_statement(0x248A); ; @rax = +@rsi ^ 0x0 ;  break; } elsif (@r9 << 0n15 ^ @rsi & @r10 & ++@rsi ^ ($buffer) & 0n7 ^ ~@rdi | @rdx >> $ip & @r13))@r9 << 0n15 ^ @rsi & @r10 & ++@rsi ^ ($buffer) & 0n7 ^ ~@rdi | @rdx >> $ip & @r13) { test_statement(0x4C0); } elsif (@r10 >> @rdx & (~4) & $buffer <> +$proc ^ @rsi ^ 0y10010) { test_statement(0x182A);  if (@r10)$proc)  { test_statement(0xEDD); } else { test_statement(0x3E4); } } else { test_statement(0x2538); }
$error$
$end$
4004
 if (@rsp + @r10 << @r9 & 0n11 ^ $thread >> -0n9 >> +@r13 & @r10 >> @rbp ^ $proc ^ (@rdi) & -~@rdx ^ +$thread | @r9 << @rbp >> $buffer >> 20 & $teb >> @rbp & @r8 ^ $thread >> @rbp ^ 0y10010 & @r12)@rsp + @r10 << @r9 & 0n11 ^ $thread >> -0n9 >> +@r13 & @r10 >> @rbp ^ $proc ^ (@rdi) & -~@rdx ^ +$thread | @r9 << @rbp >> $buffer >> 20 & $teb >> @rbp & @r8 ^ $thread >> @rbp ^ 0y10010 & @r12)  { test_statement(0x10BC);  for (val = 10; $proc & 0n8 ^ $ip ^ @r13 <= $proc & 0n8 ^ $ip ^ @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } else { test_statement(0x1CF2); ; }
$error$
$end$
4005
 if (($teb) & @rbp >> $teb >> @r9 & @r11 & +@r12 & 0y110 ^ @r10 << @r10 >> 7 >> 2 & (@r11) ^ @r11 <= $proc + @rdi << @rax << (0n12) ^ $thread << @r9 & @r13 & @r8 & $buffer ^ (0y10010) >> 0xE ^ @rbx)  { test_statement(0x2477); } elsif (-@rax & @rdx >> $ip & $proc ^ -+@rbx >> @rsp & @r13 ; +15 << @rdi) { test_statement(0xA3); } else { test_statement(0x1496); }
$error$
$end$
4006
 if (@rax + @rdx << ~@rsp << @rdx >> @rax >> @rbx >> @r8 <= @rax + @rdx << ~@rsp << @rdx >> @rax >> @rbx >> @r8)  { test_statement(0x1F5D);  /* This is a not closed comment } elsif (0n5 >> $buffer & @rax >> $teb & ~$proc ^ ~$thread >> @rbx ^ @r13 | @r11 >> ~$thread & ~$teb & $teb ^ 0y10 ^ $ip > $ip >> @rbx) { test_statement(0x1474);  if ((@r11) ^ @r11 | @rbx ; (@r11) ^ @r11 | @rbx)  { test_statement(0x156B); } elsif (@rbx | @r9 >< @r9) { test_statement(0x1199); } else { test_statement(0x470); }  This is a not opened comment */ } elsif (@r13 >> @rsi | 16 & @rdx >< @r13 >> @rsi | 16 & @rdx) { test_statement(0x25E4);  /* This is a comment */  break;  /* This is a not closed comment } else { test_statement(0xE13); }
$error$
$end$
4007
 if ($thread + @r10 << @r8 << $teb >> @r10 >> $teb >> @r9 ! $buffer << @rsp << $buffer >> @rsi)  { test_statement(0x718); }
$error$
$end$
4008
 if (@rdx + @r8 >> @rdi >> @rbp & 12 << @rsp >> @rdi ^ 0y101 >> @rdi ^ $thread >> 0x3 & @rdi & (@rdi)))$proc >> @rax ^ $thread & @r8)  { test_statement(0x138D);  for (val = 10; 0x7 >< 0x7;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc << 5 >> @rax & 0x4 & 17(@r13 << +@r13 & $proc >> 0n4 ^ $teb & @r11 ^ 0n1 & @rbx ^ $ip ^ $ip) { test_statement(0x14A0);  for (@rax = @rbx ^ $ip | 0x13 | @r9; @r10 ^ @rsp | -@r8 | $ip < @rbx ^ $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1CD7); }
$error$
$end$
4009
 if (0y10 >> 0y1101 >> @r11 >> @r12 ^ @rax & @rbx >> @rsi & @rdx | @r13 & @r9 >> @r11 ^ $buffer & $teb & ~@r8 ^ 0n1 ^ @r9 | @r11 & $thread | @rbx & $ip | 0y10011 < $teb & +@r11 << @rbx >> 0x11 & @r13 >> @r9)  { test_statement(0x1D47); val = @rdi >> @rdi ; } elsif (0y10001 | -@rbp & ($teb) ^ 0n9 & 0y1010 | @rdx & $ip < +~0x7 >> 0x1 ^ @rax >> @rbp & @rdi & @r10 | ~@r10 ^ $thread ^ @rdx ^ 0x8) { test_statement(0x1042); val = @rsp & @rsp | $teb ^ @rax ;  // /* This is a comment   while  (0y1011 ; 0y1011)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x145); }
$error$
$end$
4010
 if (-@rbp << $teb >> 0n8 >> +@r8 ^ (~0x1) ^ +@r9 >> 0x2 & @rax & @r9 ^ @rbx | ++0y1101 >> @r11 ^ 0x12 & @rsi & @rbx((-@rbp << $teb >> 0n8 >> +@r8 ^ (~0x1) ^ +@r9 >> 0x2 & @rax & @r9 ^ @rbx | ++0y1101 >> @r11 ^ 0x12 & @rsi & @rbx)  { test_statement(0x18DC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y100 & @rbp ^ @r9 | @r8 | @rsp >= 0y100 & @rbp ^ @r9 | @r8 | @rsp) ; } elsif ($proc = $proc) { test_statement(0x10E3);  for (val = 10; (@rbx)((@rbx);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
4011
 if (@r9 << @r10 & 0n4 << @rdx & $proc >> 0n1 = $buffer >> $proc >> -0n5 ^ @rax & @rsp >> @rdx & @rbp & $proc ^ $thread >> $thread & @rsi & @r8 | @r11 << 0x12 ^ @rdi & $buffer)  { test_statement(0x3A2);  /* This is a comment */  for (val = 10; @rbx > @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x504); }
$error$
$end$
4012
 if ($ip + @r8 << $teb & @rsi << $proc >> @r8 >> 0y1011 ^ (0y1000) >> @r12 ^ +@rdx ^ (@rdx) & @r9 > $ip + @rbx << $teb << @rdx >> @r13 << @rbx ^ 23 << @r9)  { test_statement(0x157E); }
$error$
$end$
4013
 if (13 << @rbx ^ @rdi >> @rsi >> @r11 ^ +@rbx & @rsp ^ @rsi ^ +$ip ^ 0n12 | @rdx << $buffer & @r12 ^ 0xB >> 13 > 13 << @rbx ^ @rdi >> @rsi >> @r11 ^ +@rbx & @rsp ^ @rsi ^ +$ip ^ 0n12 | @rdx << $buffer & @r12 ^ 0xB >> 13)  { test_statement(0x22FD); } elsif (@rax >> @r8 | $ip >> @rdx & @r13 & +@r12 | ~@rsi & $proc >< @rax >> @r8 | $ip >> @rdx & @r13 & +@r12 | ~@rsi & $proc) { test_statement(0x107D);  This is a not opened comment */ } else { test_statement(0x112); }
$error$
$end$
4014
 if ($thread + @rax << @r13 << $ip | @rsi >> @rsp >> @rdx ^ 0n6 >> @rsp ^ @rsi & $teb ^ $teb | @r13 >> $buffer ^ @r12 & (0n14) ^ @r13)$teb << @r11 << @rsi >> @rbp >> ~((@rdx)) >> @rdx)  { test_statement(0xD04);  This is a not opened comment */ } elsif ($teb($proc & @r11 >> @r11 & @r8 ^ @rbp & @rdi | @rbp & @r11 & $buffer ^ @r10 | @r12 & @r9 | @rdx ^ @rdx) { test_statement(0x25CC);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx | @r10 ; @rsi | 0y1111) ; ; } elsif (@rdi >> @r13 & 0n13 | $teb & @rsp ^ ($teb) ^ 0n0 | @rdx(@rdi >> @r12) { test_statement(0xC25); } elsif ((-@r11) & @rsi ^ @r9 ^ $thread < @rsi) { test_statement(0x40D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (~@rax) ~+$thread) ; }
$error$
$end$
4015
 if (~@rsp + $proc >> @rdi ^ ~$proc << (@rbx)))0x9 + @rbp << -@rax << ~@r9 >> 23 ^ 0y11 >> 0xC ^ $buffer | 0x6 << @r9 & @rbx >> 0y1111 | $ip >> $proc ^ @rsp | 20 & 0xF)  { test_statement(0x21EB); ; } elsif (@rbp << @r12 & $buffer >> @rdx & @rdi & @r12 | 11 ^ $thread ^ @rsi ^ @rbp ; $buffer >> 0y10011 >> 0x7 ^ 0n17 ^ @rdx ^ @r10 | -@r8 >> @r8 ^ @rax ^ $thread ^ $teb) { test_statement(0xADE);  for (val = 10; @rbp | 21 @rdi ^ -@r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12 >> @rax ^ (0n3) ^ 0y11 ^ $buffer | $thread & $ip | @r13 >= @r12 & @r8) { test_statement(0x937);  // /* This is a comment  } else { test_statement(0x1800); }
$error$
$end$
4016
 if ((~0n12) + 17 >> +@r12 << 3 >> $thread ^ +-@r10 ^ @rdx & 22 | @rsp >> @rsp & @r13 >> $ip ^ (@r13) & -$buffer ^ @rdi & @rdi ^ $thread ^ @rsi | @r11 >> @rax & -@r9 ^ @rbp ^ 5 | @rdi ^ $teb ^ @r10 | +0n6 | $teb >= @r12 ^ @rax >> ~@rsi >> -0n1 & @r9 >> $buffer & @rbx & $buffer | @r11 & @r12 & $teb)  { test_statement(0x123D);  // /* This is a comment   // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 13 | 0xC = 13 | 0xC) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi = @rsp) ; @rax = -@rbp ;  for (; $teb == $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
4017
 if ($thread + $thread >> @rax <> 0n4 + @rdx << @r10 << @rdi >> ~@rdi << @r8 >> 0n7 >> @rsp | 0y1110 >> 0n17 & @rax & @rsp ^ @r12 >> @r10 | @r12 >> @rsi)  { test_statement(0xE18); } elsif (@r13 >> (@r11) ^ 0n17 >> $buffer & @rsp ^ +$thread @r9 << @rdx >> 0y1101) { test_statement(0x13CA); }
$error$
$end$
4018
 if (@rax >> @rdx >> @r11 & @rdi ^ --@rbx << @rbp >> @r11 ^ 0y11 >> $proc ^ @rsp & $ip ^ $buffer ! @rax >> @rdx >> @r11 & @rdi ^ --@rbx << @rbp >> @r11 ^ 0y11 >> $proc ^ @rsp & $ip ^ $buffer)  { test_statement(0x1029);  This is a not opened comment */ }
$error$
$end$
4019
 if ($proc + ~@r11 << ($thread) | @r13 >> $proc <= (@rsi) & @rdi & ~@r10 >> +@rbp)  { test_statement(0x15A3);  This is a not opened comment */  while  (0n16 ^ @r11(($proc | @rsp | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp << @r9 & +@rdi >> @r10 & ~$teb & 0n7 ^ @rsi >> (0xC) ^ $proc & @rdx ^ ~@r11 > $teb & @rax >> 1 & -@r9 & @r8) { test_statement(0x25C1); } else { test_statement(0x18E5); }
$error$
$end$
4020
 if (0y1011 >> @rdi & 0y101 & @rbp & @rbx ^ 16 >> +@rax | @r13 << +$proc >> ~12 >> @r13 ^ @rdi ; @r11 ^ @r10 << 0x0)  { test_statement(0x748); }
$error$
$end$
4021
 if (@rbx >> @rax != $buffer + +0n17 ^ -@rdi)  { test_statement(0x1FCE);  break;  /* This is a comment */ ; } elsif ($thread << @r8 >> @rdi >> @rsp & @rdi >> ($ip) | 15 >> @rax ^ @r12 & @r11 ^ @rdx < $thread << @r8 >> @rdi >> @rsp & @rdi >> ($ip) | 15 >> @rax ^ @r12 & @r11 ^ @rdx) { test_statement(0x2468); } elsif (@rbp >> @rbp == @rbp >> @rbp) { test_statement(0x227F);  This is a not opened comment */  if (@rbx == @r11)  { test_statement(0x23EA); } elsif (+@rdx >< +@rdx) { test_statement(0x1CD2); } elsif (@rsp > @rdi) { test_statement(0xC02); } else { test_statement(0x69E); } } elsif ($thread & $ip <> ~@rsp & @rsi) { test_statement(0x3A6);  This is a not opened comment */ } else { test_statement(0x2216); val = @r9 & @r11 ;  This is a not opened comment */  This is a not opened comment */ ;  /* This is a not closed comment @rax = @r8 ; }
$error$
$end$
4022
 if (@r8 + +0xF << @rsi << @rdi >> -$thread << 0y1010 >> $ip & @r11 ^ $thread >> @r9 >> $buffer ^ $teb(@r9 + @r12 << @rsp >> 0n17 >> 0n7 ^ @rax | @rdi >> 0x5 >> $thread)  { test_statement(0x21EA); } else { test_statement(0xB8F); }
$error$
$end$
4023
 if (@r11 << @r12 | (@r11) << @rsi | @rdx & (@r10) & 0y1010 ^ +@rsi ^ @rbx == 22 >> ~+@r9 & -$thread | 12 >> $ip >> @r13 & @rsi >> $proc | @r10 >> $teb ^ @rdi & @r13 ^ $thread | $proc & @rdi)  { test_statement(0xBC); } elsif (@r9 >> @r11 = @r9 >> @r11) { test_statement(0xE44);  // /* This is a comment  } elsif ($proc >> $proc ^ 0y1010 & (@r12) @rbp & ($buffer) | 16 ^ $buffer | @r10 ^ @rsi) { test_statement(0x1411);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 | $buffer >= @rdi | $ip) ;  /* This is a comment */ } else { test_statement(0x163B); }
$error$
$end$
4024
 if (@r9 << $proc ^ @r13 << 0y1000 >> $proc >> @r13 ^ (@r13) | $proc << -17 & @rsi = @r9 << $proc ^ @r13 << 0y1000 >> $proc >> @r13 ^ (@r13) | $proc << -17 & @rsi)  { test_statement(0x1123);  /* This is a not closed comment  This is a not opened comment */  // /* This is a comment  } elsif ($proc | 2 >> @rsp & $proc ^ @rbx <= $teb & $thread & $thread | -0y10010 >> @r12 ^ +$thread & @rbp) { test_statement(0x11C8); @rax = @rdi & $ip ^ @r8 | +@rsi ^ $teb ;  if (@rdi | $ip <= @rdi | $ip)  { test_statement(0x265); } else { test_statement(0x260C); }  for (val = 10; +@rsi((0n3;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4025
 if (@rsp ^ @rax << 21 >> @rax ^ 0y111 >> @rdx | ~@rsp & 0n5 >> @rsp & $ip & @r10 ^ @r9 ^ @r11(@rax >> @rax & @r12 >> @rdx >> @rsp & $ip >> 0x10)  { test_statement(0x25B3); } elsif ($proc << @rsi | @rbp >> @rdx ^ @rsi ^ $teb <> $proc << @rsi | @rbp >> @rdx ^ @rsi ^ $teb) { test_statement(0x209);  while  ($ip ^ 6 | +0n3 | @r13 <= @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  // /* This is a comment   This is a not opened comment */  This is a not opened comment */ ;  for (; @r10 = @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc >> 0xE ^ 4 ^ @rsi <> $proc >> 0xE ^ 4 ^ @rsi) { test_statement(0x2C); } else { test_statement(0x244E);  break; }
$error$
$end$
4026
 if (2 << @r12 << $buffer >> @rsp << (0y1111) | @rax ^ +@rbp >> @rdx & @rbx & @r8 ! $teb + @rax >> @rax << ~$proc & 0n18 << @rbp)  { test_statement(0x1473);  while  (0xC ^ @rdi | ~@rbx | @r10 | @rdx > @rdi & @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (0y110) >< @r8 | $teb) ;  for (; @rbx @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4027
 if (+(22) << @r11 << $buffer & 0xB << $ip >> $ip & $buffer >> $buffer & 0y0 & +@rsp > @r12 ^ @r8 << 0n19 >> $buffer ^ $proc ^ @rbp)  { test_statement(0x834); } elsif (~@r10 << $ip >> @rsi >> @rdx & @r10 | @r12 >> @r13 | @rbx & @r8 ^ $teb | (@r10)(~@r10 << $ip >> @rsi >> @rdx & @r10 | @r12 >> @r13 | @rbx & @r8 ^ $teb | (@r10)) { test_statement(0x9FC); } elsif ($teb >> $proc & -0x13 & $ip | ++~@rsi ^ $proc ^ @r10 | @r13 ; @r9 >> +$thread ^ +@r9 & @r11 ^ $ip | @r12) { test_statement(0x1DB0); } elsif (@r13 & @rsi ^ $proc ^ @rbx | -+@r10((@r13 & @rsi ^ $proc ^ @rbx | -+@r10) { test_statement(0xCDD); } elsif (+@rdx ^ (@r10) <> ~15 ^ @r8) { test_statement(0x25DE); } else { test_statement(0x25E5);  This is a not opened comment */ }
$error$
$end$
4028
 if (+~~$proc + @rbx << @r11 >> @rdx << @rdx & @r13 << $thread >> @rsp >> $teb ^ +-(@r13) >> @rbx & ~$buffer & @r11 & @r13 >= +~~$proc + @rbx << @r11 >> @rdx << @rdx & @r13 << $thread >> @rsp >> $teb ^ +-(@r13) >> @rbx & ~$buffer & @r11 & @r13)  { test_statement(0x234A); } else { test_statement(0x929); }
$error$
$end$
4029
 if (@rbx + $thread >> @rbx << $buffer >> @r10 & @rdi << 0n9 >> @rsp >> @r12))@rdx + @r12 ^ @r10 << @r10 >> 0n15 & @rbp >> @rsi & @rsi & @r11 | ~@r8 & 0x0 >> $proc)  { test_statement(0x2045);  if (@r11 & 0xA ^ $buffer | @r11(-$ip & $teb ^ 0n1 ^ ~@r12 | @r11)  { test_statement(0x5A1); } elsif (4 ^ @rbp))@rax | $buffer) { test_statement(0x24E6); }  /* This is a not closed comment } elsif (~@r13 >> @r9))$ip << @r12) { test_statement(0x1A36); } else { test_statement(0x2178); }
$error$
$end$
4030
 if (14 + @r9 >< @rdi + $thread << +@rbp << @rdx & @r10 >> @r12 | @rsi >> @rdx ^ $teb >> @rbx & (@rdi) & 0 | $buffer >> -@rsp | @r9 ^ @rsi | (0y10011))  { test_statement(0x37C); } else { test_statement(0x587); ;  /* This is a not closed comment }
$error$
$end$
4031
 if (12 + 0n5 >> 13 << +@rsi & $buffer >> 0n3 >> @rax & (@r13) & +~@rdi & @r13 ^ @rsp << $teb & @r11 & @rsi ^ @r10 >= 12 + 0n5 >> 13 << +@rsi & $buffer >> 0n3 >> @rax & (@r13) & +~@rdi & @r13 ^ @rsp << $teb & @r11 & @rsi ^ @r10)  { test_statement(0x1BE1); ; } elsif ($proc ^ @rdx & @r10 ^ @r8 & @r12 ; $ip << $thread >> 0y1101 >> @rdx & -@r13 ^ $teb & $teb & @r9 ^ 0n10 & $proc ^ @rdi) { test_statement(0x1F26); } elsif ($ip & $proc & @rbx ^ @rdi($ip & $proc & @rbx ^ @rdi) { test_statement(0x622); ;  for (val = 10; 0y10))0y10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rsi ;  /* This is a not closed comment  if ($ip(($ip)  { test_statement(0x903); }  This is a not opened comment */ } elsif (0 & @r11 == 0 & @r11) { test_statement(0x210C); } else { test_statement(0xECA); }
$error$
$end$
4032
 if (@rax + @r13 << @r12 & ~0y1000 << @r12 >> (+0y10000) >> @r8 & $buffer & @rax | -@rdx << @r10 & 0y10 >> +0n12 ^ +$proc >> 0x0 ^ @r12 ^ @rbx | 0xC >> (@rsi) & @rsp ^ 17 & @rbx ^ @rsi | @rsi == 0xE << 0y11 << @rbp >> @rbp ^ -@r8 & @r9 >> @rsp & @rdi & @rax ^ $buffer ^ @r9 & @r12)  { test_statement(0x5A6);  for (val = 10; 0xD & $buffer ^ 0x0 | +$buffer | 11 11 & @r8 ^ $ip | $proc | $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1166);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y111 | @rsp | @rax != 0y111 | @rsp | @rax) ;  // /* This is a comment  }
$error$
$end$
4033
 if ($teb ^ @rdx << @rdi & $buffer & 0x13 & $thread ^ @rax >> @rdx ^ (@rsp) & 0n9((+0y1011 >> @rdi >> @r11)  { test_statement(0x25E0);  if (@rdx & 0x6 ^ @rax ^ $buffer))@r11)  { test_statement(0x1E4); } elsif (@rbx ^ ~@rax)@rbx ^ ~@rax) { test_statement(0x249); } elsif ($buffer | (@rdx) ; $buffer | (@rdx)) { test_statement(0x139A); } elsif ($thread(($thread) { test_statement(0x1F88); } elsif (-@rdx ; @r11) { test_statement(0x1C1); } else { test_statement(0x1738); } } elsif (@r9 << @r8 >> @r11 >> $proc & @r12 ^ -@r12 & $buffer ^ $thread ^ 0y1010 ^ @rbp | $thread ^ $buffer ^ @rsp ^ @r9 ; @r9 >> 0y110 | @r10 >> (@r10)) { test_statement(0xE1D);  if (@rdx))$proc | $buffer)  { test_statement(0x9D7); } elsif (16 | ~$teb ; 16 | ~$teb) { test_statement(0x246C); } else { test_statement(0x1E1); }  if (@rdx | @rsi))13)  { test_statement(0x1A8A); } } else { test_statement(0x1626); }
$error$
$end$
4034
 if (@r12 << (@rax) << $thread >> 0n6 ^ $thread << @rbx | 10 ^ $ip & @rsp ^ $teb > -0x11 ^ $teb << $teb & @rdi >> @rbp & 15 & 0y11)  { test_statement(0x1AC6);  if (@r12 & $ip ^ @rdi ^ @rax | @r8)@r12 & $ip ^ @rdi ^ @rax | @r8)  { test_statement(0xC72); } elsif (4 ^ 0n4 | @rsi >< @r9 | $buffer | $thread) { test_statement(0xF11); } elsif ($ip(($ip) { test_statement(0x25B2); } else { test_statement(0xBAD); }  This is a not opened comment */ } elsif (@rsi ^ +@r11 >> @rax & @rax | @r9 >> @rdx & @rsi & $proc ^ ++0n11 ^ ~@rbx ^ @rdx | ~~@rdi & -@rdi | @r9 ^ $teb | @rdx <> @rsi ^ +@r11 >> @rax & @rax | @r9 >> @rdx & @rsi & $proc ^ ++0n11 ^ ~@rbx ^ @rdx | ~~@rdi & -@rdi | @r9 ^ $teb | @rdx) { test_statement(0x105C); }
$error$
$end$
4035
 if (@r10 >> @r13 << @rax | 0n2 >> @rsi | $proc & $buffer ^ @r10 > @r10 >> @r13 << @rax | 0n2 >> @rsi | $proc & $buffer ^ @r10)  { test_statement(0xA25); val = +@rbp & @r8 & @rsi | @r10 & $proc ^ 0x12 ;  This is a not opened comment */  /* This is a comment */  /* This is a not closed comment @rax = @rdx ; @rax = +$teb ; } elsif (0n5 >> $thread >> @rax & @rdx < $buffer >> $thread ^ @rbx) { test_statement(0x2232); } else { test_statement(0x462); }
$error$
$end$
4036
 if (+@rax + $proc << (~$ip) << 0n18 > @rdi + 0xF << 0y111 << 0n7 ^ 15 << +@r11 >> @r10 & $ip >> $teb ^ @rbp >> @rdx & 6)  { test_statement(0x20F2); } else { test_statement(0x1BD7); }
$error$
$end$
4037
 if (@r12 + @r8 << $teb << @r13 & +@r10 << @r13 >> $thread >> @r13))@r12 + @r8 << $teb << @r13 & +@r10 << @r13 >> $thread >> @r13)  { test_statement(0x21B4); } elsif (@r10 << 0y1110 >> @rbp & @r9 & 0y1100 <= $proc << @r11 >> @rax & $ip & +$buffer & 0xC ^ $ip ^ @rax & @r13) { test_statement(0x91E);  if (@r9 | (@r10) = @r9 | (@r10))  { test_statement(0x20EF); } elsif ($thread | $thread(@r13 | @rbx) { test_statement(0x22E3); } } else { test_statement(0x9F5); }
$error$
$end$
4038
 if (-(@rsp) ^ @rax << @r8 >> @rbp >> @r9 & (@r11) >> 15 & $buffer & @rsp | @rax >> ($ip) & @r12 | @r8 >> $ip & @rax | @r9 & 0y111 ^ $buffer | $ip ^ @r12 | @rsp | @rbp))-(@rsp) ^ @rax << @r8 >> @rbp >> @r9 & (@r11) >> 15 & $buffer & @rsp | @rax >> ($ip) & @r12 | @r8 >> $ip & @rax | @r9 & 0y111 ^ $buffer | $ip ^ @r12 | @rsp | @rbp)  { test_statement(0x13B5);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rax ^ @rdx ^ @r10 | @rax ^ @r10 != -@rax ^ @rdx ^ @r10 | @rax ^ @r10) ;  /* This is a not closed comment } elsif (0y10001 << (@rdi) >> @rbp & @r9 ^ -0x2 ^ 0xB ^ @rsp ^ @rsp | @r9 >> @r11 & $proc ^ ~@rsp & @rbx ^ $thread ^ @rsi ; 14 << @r12 >> @r9) { test_statement(0x1A62);  // /* This is a comment  } elsif ($thread >> 14 | @rbp & ~0x1 ^ @rsp | 0y1011 ^ @r10 ! @rsp >> 0y10000 & @r9 & @r11 ^ $ip & (@r12) ^ -+@r11 | @r11) { test_statement(0x6EF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y111 >= @r11) ; } else { test_statement(0x176D); }
$error$
$end$
4039
 if (@rbx + 12 >> ~($teb) ^ 0y100 << $thread >> +@rdi >> 0y111 & 0x9 >> @rdi(-@rbp + $ip & $teb ^ 3 | @r13 >> @rsp >> @rsp & $teb | 0x2 >> @r13 & @r11 & @rsp ^ 0n0 & @rax | @r8 ^ $proc ^ @rsp)  { test_statement(0x19FD); } elsif (@r10 << +@rdi ^ @r11 ^ @rdi & @r9))@rax << 2 >> +-(~@r12) ^ +@rdx & @rsi | @rdi >> @rsp | 0y11 & @rbp ^ @rsp | $proc ^ @rdi | $proc) { test_statement(0xFAE); } else { test_statement(0x20EB); val = @rdx & @r13 ^ @rsi | -$teb ^ @r9 ; }
$error$
$end$
4040
 if (0y111 << @rsi > 0y111 << @rsi)  { test_statement(0x9A2); } elsif (@rbx & -@rbx >> $proc | @r8 ^ @r13 & @r9 ^ @rax ^ @r12 | ($buffer) & @r13 ^ $ip ; @rbx & -@rbx >> $proc | @r8 ^ @r13 & @r9 ^ @rax ^ @r12 | ($buffer) & @r13 ^ $ip) { test_statement(0x1B4F);  /* This is a comment */  // /* This is a comment  } else { test_statement(0x1812); }
$error$
$end$
4041
 if (-$thread & @rsp & @r12 >> @r13 & 0 | @rdi ^ @rax >> 0xC & $thread | @rsp & @r11 ^ @rax | @rdi & @rsp | @rbx | $thread | 0y1101))-$thread & @rsp & @r12 >> @r13 & 0 | @rdi ^ @rax >> 0xC & $thread | @rsp & @r11 ^ @rax | @rdi & @rsp | @rbx | $thread | 0y1101)  { test_statement(0x4C3); } elsif (@rsp << @r13 >> @r10 ^ @r12 >> $thread ^ @rsp $ip << @rsi & @r13) { test_statement(0xBD6); } elsif (@rax >> @rsp ^ @rdx & @r12 | @r12 ^ @r9 ^ 12 | ~@r12 ^ @r9 | 0y10 | @r8 @rax >> @rsp ^ @rdx & @r12 | @r12 ^ @r9 ^ 12 | ~@r12 ^ @r9 | 0y10 | @r8) { test_statement(0xF2C); }
$error$
$end$
4042
 if (@r10 >> @rbp >> @rdx & @r13 >> $teb >> @rsi <= @r10 >> @rbp >> @rdx & @r13 >> $teb >> @rsi)  { test_statement(0x1BD5); } elsif (@rbp >> @r8 ^ $teb & 0x10 & @rax ^ @r8 & (@rdx) ^ $thread < @r11 & +@r13 & @r12 ^ +0n5 & @r11 ^ @r11 ^ -@r12) { test_statement(0x1A6B); } else { test_statement(0x2C6); }
$error$
$end$
4043
 if (-@r11 + $ip << @rax << 0n0 & @r12 << 0y111 & @rbx(-@r11 + $ip << @rax << 0n0 & @r12 << 0y111 & @rbx)  { test_statement(0x154E); } elsif (+$thread & @rsi)0xE << $proc & @rax >> +@rdi | @r11) { test_statement(0x2186); }
$error$
$end$
4044
 if (-0y100 + +2 << @r10 << @r8 ^ @rdi << @rax >> @rbp & @r13 & -(@rsi) & @rdx ^ @rbx & +$thread & ~@rdx <> -0y100 + +2 << @r10 << @r8 ^ @rdi << @rax >> @rbp & @r13 & -(@rsi) & @rdx ^ @rbx & +$thread & ~@rdx)  { test_statement(0x23EE);  break; }
$error$
$end$
4045
 if ($teb & @r12 >> @rax >> @r8 & @r10 >> @rbx & $thread & (~+@r13)))@r11 + @r13 << @rdx << @rax >> @rsi << -$teb >> @rsi >> (@rdi) | @rbp << 16 & @rbp & $proc & $proc ^ @rax >> @r12 & 20 & -0y10)  { test_statement(0x2090); }
$error$
$end$
4046
 if (0x0 ^ $buffer << @r8 & @r12 >> @r8 & $ip ^ @rbx >> +13 | 0n6 & @rsp >> ~0x13 != 0x0 ^ $buffer << @r8 & @r12 >> @r8 & $ip ^ @rbx >> +13 | 0n6 & @rsp >> ~0x13)  { test_statement(0xB65);  if ($thread & @rdi | 0n11 ! @r13 ^ @rbx ^ @rax | -16)  { test_statement(0x1287); } elsif (0y101))0y101) { test_statement(0xDC2); }  This is a not opened comment */ } else { test_statement(0x232C); ;  while  (@r9(22)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4047
 if (22 << @r12 >> $proc << @r13 >> (0n5) >> 21 ^ @r11 >> ~@r8 >> ~@r11 | +0n7 >> @rax >> 7 & @rax >> $buffer ^ 5 <= 3 << @r11 & $proc << 15 >> @rbp ^ $proc >> @rdx >> $buffer)  { test_statement(0x1A45); } elsif (@r10 >> ~0n4 & @rsp & $buffer & $buffer ^ @rsi >> 2 & @r12 & @r12)2 << 0x9 >> 0y110 >> 16 ^ @rbx & @rdx & @r12 | @rdi ^ @rbx) { test_statement(0x879); } elsif (@r12 >> @r11 & @r11 ^ @r9 & @rsi | ~@r13 & 0y1011 = @r12 >> @r11 & @r11 ^ @r9 & @rsi | ~@r13 & 0y1011) { test_statement(0xC30); } elsif (@rdx & @r11 ^ $buffer ^ ~$buffer ; @rdi ^ 0n14 ^ @rbp) { test_statement(0x1FA0); @rax = @rdx | @r12 ;  This is a not opened comment */  // /* This is a comment  } else { test_statement(0x103); }
$error$
$end$
4048
 if ($ip << @r8 << @rbx | @rbx ^ @r8 ^ $teb ^ @rsi($ip << @r8 << @rbx | @rbx ^ @r8 ^ $teb ^ @rsi)  { test_statement(0x4F6); } elsif (~5 >> @rdx & @rsi >> @r12 >< ~5 >> @rdx & @rsi >> @r12) { test_statement(0x20E0); }
$error$
$end$
4049
 if ($buffer + $buffer & $thread & @r10 >> @rsp & @rdx & @rbp ^ $thread >> @rdx | @r13 >> @rsi >> 0y1100 & $buffer >> 0n17 & 0xE & @r8 ^ 0x2 & @rdx & 14 ^ @rbx & 5 = @rsi + @r9 << $ip >> 6 << @rdx >> 0n12 & @r12 << $ip >> -@rbx >> @rsp | @r11 >> $proc & 0n3 & +@r10 ^ $buffer >> +@r11 ^ @rdx | @rdi)  { test_statement(0x2611);  if (+@rdx & @r11 ^ $teb ^ 0y1110 | -@r13 ^ -$proc | $proc((@r8 & $ip ^ 0n7 ^ @r12 | @rsi)  { test_statement(0x25C); } elsif ($teb ^ -$proc | @r9)$teb ^ -$proc | @r9) { test_statement(0x9B1); }  while  (~--@r12 | @rdi >= @rdx | +(@rsp))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rax >= @r12 | @r11)  { test_statement(0x1829); } elsif (@r11((@r11) { test_statement(0x804); } elsif ($ip)-$teb) { test_statement(0x3B5); } elsif (@rbx ; @rbx) { test_statement(0x1FD4); } else { test_statement(0xC0E); } } elsif (@r11 & 0n4 ^ @r10 & @rdx ^ $teb & @r12 ^ -0y1000 | @r13 >> $teb & @r12 & @r9 ^ @r11 ^ -@r8 | @r10 ^ 0x1 ^ @rsi <= @r11 & 0n4 ^ @r10 & @rdx ^ $teb & @r12 ^ -0y1000 | @r13 >> $teb & @r12 & @r9 ^ @r11 ^ -@r8 | @r10 ^ 0x1 ^ @rsi) { test_statement(0x2510);  /* This is a not closed comment  /* This is a not closed comment } elsif (@rdi & 0n0 != @rdi & 0n0) { test_statement(0x217B); val = @rsi ^ $thread | $proc ; }
$error$
$end$
4050
 if (0x13 + @rdx >> @rbp >> 0x5 >> $thread > @rdx + ~@rdx >> +$thread << @r10 >> 0n1 >> 0n17 & @rdi | 0x10)  { test_statement(0xB9D); val = $teb ^ @rbp & (@rsp) ^ @rsp ^ @r12 ;  if (@r12 | (@rdi) ! @rdx)  { test_statement(0xCCF); } elsif ($thread))@rdx | @r10) { test_statement(0x2689); } } elsif (@r11 >> $ip & 0y1110 & ~$teb & 0n7 ^ $proc & @r13 == 1 | -20 >> 0y1101 ^ @r11 ^ (@rbx) ^ @r10) { test_statement(0x1A79);  // /* This is a comment  } elsif (@r8 >> @r8 & -$ip & $ip ^ $teb & @r12((@r8 >> @r8 & -$ip & $ip ^ $teb & @r12) { test_statement(0x258D); } elsif (@rsp & @rbx | 0n12 | ($teb) | @r12((@rbp ^ @rax ^ 0xF) { test_statement(0x18E3);  This is a not opened comment */  while  (~$buffer)~$buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc >= $proc) { test_statement(0x84F); }
$error$
$end$
4051
 if (@rdx + @rsi << $teb >> @r11 << $teb & @r12 << @rsp >> @rdi >> +0x6 | @rax << @r13 >> @r10 >> @r12 ^ ~$teb & @rsi ^ @rbp & @rax ^ @r10 ^ $buffer | @rbp >> -@rdx | 0n15 ^ @rdi | 23 ^ 0y10010 | +$thread | $teb = @rsi << $thread | 0n9 >> $ip >> @r9 & ~@rdx & @rdi & @r10 ^ @r10 & @r9 & 0xB)  { test_statement(0x266D); ; }
$error$
$end$
4052
 if (@rax << -@r11 & @rdx << @r9 >> $ip ^ @rbp << @r11 & @rdi >> $thread ^ @r9 ^ $thread | @r11 >> $ip <= @rsp + -~+$ip | $teb ^ @rbp | $thread >> 0x6 ^ $ip ^ -10 ^ $ip)  { test_statement(0x1C94); }
$error$
$end$
4053
 if (~0n5 + (22) ^ @r13 << @r10 & $teb >> +0x4 & @rsi ^ ~@r10 & @r10 | 0n10 << 0x5 >> (@rbx) ^ @r13 >> @r9 & $buffer ^ $teb & @r11 ! @rax + @rax ^ $thread >> 0y1100 >> @rdi ^ @rax)  { test_statement(0x467);  while  ($teb ^ $buffer ^ -+@rsp($teb ^ $buffer ^ -+@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  /* This is a comment */  for (val = 10; $teb @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r12 != @rdx)  { test_statement(0x84C); } elsif (0xE)@rbx) { test_statement(0x265C); } else { test_statement(0x1CC8); } } elsif ($ip >> @r11 >> @rdi | @rsp & @rdx ^ $proc & @rbp | ~@rbp ^ @r8 ^ @rax | @rsi >< @rsp >> -@rbx) { test_statement(0x90A); } elsif (@r13 >> @r11 & $ip))$ip & @r10 & @rax | 0n3 ^ @rsi) { test_statement(0x24CD); } else { test_statement(0xA61); }
$error$
$end$
4054
 if (@rdi + $buffer << @r10 >> 0y1001 & @r8 << @rsp & ($thread) >> $ip & $teb & (@rsi) ^ $teb >> @rdx >> @r13 | @r12 << 0y10010 >> @r9 ^ 0n13 >> @rax ^ @rdi & @rdi ^ 0x5 > $proc << $ip << @rdi >> $thread << @r8 ^ 0n15 | -@r12)  { test_statement(0x1F43); }
$error$
$end$
4055
 if (@rsi << @r8 >> 0x6 << (@rdx) >> @r8 >> @rbx <= @rsp >> @rbp << (@r10) & ~0n19 << 0x12 >> @r10 >> $thread ^ @rdi << @rdi & @r13 | ~-@rsi << @r9 ^ ~$teb >> 0y1011 ^ 0y101 & $thread)  { test_statement(0x5E4);  /* This is a not closed comment  /* This is a comment */  break;  if ((0n4) != (0n4))  { test_statement(0x5D3); } }
$error$
$end$
4056
 if (@rbp + $buffer >> @r11 ^ @r13 >> 0x4 & $teb >> -$teb & @rbx & ~0x0 ^ 5 <= @r11 << 0x4 << $thread)  { test_statement(0x141B); ; val = @rsi ^ @rdi ^ @r12 ;  if (~$teb))@rsi)  { test_statement(0x179D); } elsif (@r8(-0n9) { test_statement(0x648); } elsif (@r9 != @r11) { test_statement(0x16B3); }  while  (~$teb @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb >> 0y1111 >> @rsp ^ ~@rsi ^ $ip & @r12 ^ @rdx ^ $teb > 0n14 ^ 0y10001) { test_statement(0x17AF); } elsif (21 >> @rdi ^ 0x4 ^ 0x1 ^ @rdx((+7 & $ip & @rbx) { test_statement(0xAB5); } else { test_statement(0x143D); ;  break; }
$error$
$end$
4057
 if (@r12 >> $thread << @r8 >> 0xD >> @rbx & $thread >> @rdx ^ @rbx >> $ip >> @rsi ^ 0x6 <> 0x3 << $buffer)  { test_statement(0x1244); } elsif (@r13 $ip << +-(~@r11)) { test_statement(0x240F); }
$error$
$end$
4058
 if (+@r11 + 23 ^ @rbx ^ 11 & @rax & $proc < +@r11 + 23 ^ @rbx ^ 11 & @rax & $proc)  { test_statement(0x1D13);  /* This is a not closed comment  This is a not opened comment */  for (val = 10; $teb | @rdi ~@r8 | 0x9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4059
 if (@r11 + (0y1000) >> @rbx << @rsp & @r11 << 0n12 >> @rdi ^ $buffer << @rbp & ~@rdi >> @rsi & @rbp & ~@r12 | -@rdx >> $thread & 0y1 >> @rbp & $ip ^ -$thread >> @rsi | $buffer >> @r9 | @rax & @r12 | $thread ^ @rbx > @r11 + (0y1000) >> @rbx << @rsp & @r11 << 0n12 >> @rdi ^ $buffer << @rbp & ~@rdi >> @rsi & @rbp & ~@r12 | -@rdx >> $thread & 0y1 >> @rbp & $ip ^ -$thread >> @rsi | $buffer >> @r9 | @rax & @r12 | $thread ^ @rbx)  { test_statement(0x1324); } elsif (@r8 >> $buffer >> $teb & ~@rdi & $thread & @rbx | @r9 | @rax ^ @rsi ^ @r10 >= @r8 >> $buffer >> $teb & ~@rdi & $thread & @rbx | @r9 | @rax ^ @rsi ^ @r10) { test_statement(0xD8D); @rax = ($thread) & $buffer | 0n10 | +@rbp | 0x3 ;  break;  while  (@rdi ; +@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx | @rsi & $buffer(@rdx | @rsi & $buffer) { test_statement(0x2A6);  break; } elsif ($proc & 0xA(($thread & -@r9 ^ @rax ^ 10 | @rdi ^ 0x1 | $buffer) { test_statement(0xA28); } elsif ($teb ^ 0n9((~~-@rdi | $proc) { test_statement(0x870);  // /* This is a comment   if ($buffer > $proc)  { test_statement(0x532); }  /* This is a comment */ } elsif ($buffer = @r13 | $thread) { test_statement(0x1E83); } elsif (+0x9 ; @r13) { test_statement(0x79E);  This is a not opened comment */ } elsif (@r12))@rsi) { test_statement(0x897); } elsif (@r11 > $proc) { test_statement(0x15); } else { test_statement(0x9CE);  // /* This is a comment  }
$error$
$end$
4060
 if ($ip + 0xF << 22 >> @r8 >> @rsp & $buffer << $proc >> 0x11 >> @rbp & @r9 >> @r9 & @rsi & @r8 | $teb >> -@rsp >> -@rsp & @r11))@rsp + 0x1 << 0y1010 << @r12 | $proc << $proc | -@rsp & $thread ^ @r10)  { test_statement(0x34E); } else { test_statement(0x260B); }
$error$
$end$
4061
 if (0y100 + (@rdx) << @rsi >> 0n19 >> ~@rdx >> +-@rsi & @r12 >> 0y101 | @r10 >> @r11 >> @rbp ^ @rsp >> @r11 | @r12 >> @r11 ^ @rdi & $proc 0xB & @r11 << -~@rsp ^ @r12 >> @r13 >> @r13 ^ @rbx | $teb << -@rsi >> 0y1101 >> @rsi ^ $thread >> @r9 & @rax | $thread & @rax)  { test_statement(0x2675);  if (0x1 & (@r9) ^ --@r13 ^ @rax | +@rax ^ @rsp | @rsp | -0n16 <= 0x1 & (@r9) ^ --@r13 ^ @rax | +@rax ^ @rsp | @rsp | -0n16)  { test_statement(0x20F9); }  if (0n19 ^ @r8 | 0x1 | +@r8 ; $proc ^ @rdi)  { test_statement(0x2202); } elsif ($proc))$proc) { test_statement(0x20B6); } elsif (@rbx >< @rdx) { test_statement(0xC71); } elsif (-@r10 == -@r10) { test_statement(0x178B); } else { test_statement(0x177C); } } elsif (@rbp << ~0x8 >> -@r11 >> @rbx & @r9 >> $thread & 14 & @r13 ^ @rdx >> $teb | @rdx >> 0n16 & 22 ^ 0y1 ^ ---0n15 ^ 0n3 | 0n9 | +0y1 != @rbx << @r11 | +@rbx & @r13 & $ip ^ ~@r8 & @rdi ^ 6 ^ @r8) { test_statement(0x8A8);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 != @rsp ^ @rax | 0x12 | @r8) ; } else { test_statement(0x1C06);  while  (@rdx | @r12)0x6 ^ @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
4062
 if ($proc ^ @rsp >> @rdx & @rdi | @rsi & $thread | $ip & @rax <> @rax << (@r11) >> @rbx >> @r8 >> $ip & @rax >> @r8 >> 0n15 & $thread >> @r10 ^ @rdi | @rsp << $thread >> $teb >> @rdi & 0y1111 ^ @rax & @r11)  { test_statement(0x1375);  for (; @rdi ^ $teb ^ @rsp | 0n5 ^ @r13 <= 16 & $buffer ^ (@rsi) ^ 0n3 | 0n16;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 >> $proc & @r9 | $thread & 0n17 > 0n5 & @rbx | @r12 ^ @r13 & 0n3 ^ ~$teb) { test_statement(0x23BC); } elsif (@rdi >> 7 == @rdi >> 7) { test_statement(0x129B); } else { test_statement(0x2B1); }
$error$
$end$
4063
 if (~$proc + @r12 >> @rbx << 0y10010 & +@rax << 0xF & ~(6) >> $buffer & @rbx & @r10 ^ $proc << $proc >> $thread >> @rbp & ~0y0 >> 0y1101 ^ $buffer | @rbx & ~0n17 & (@rsp) & @rsp | 0x7 >> @r10 | -@r10 | @r11 ! $ip)  { test_statement(0x9C7); }
$error$
$end$
4064
 if ($ip & 5 & @r8 & @rbx ^ $thread << @rbp >> @r11 & (7) >> @rdi & ($teb) ; $teb & $thread << @rdx | @rsp ^ @r13 >> 0x12 | (0y1011) & @rdi)  { test_statement(0xBDF); ;  break; } elsif (~@rbx >> @r9 ^ 0n11 >> $ip ! +@rdi << 0n9 ^ @rdi >> @rsi & 0y1 ^ @rdi) { test_statement(0x98B);  // /* This is a comment  } elsif (($teb) >> @rbx | @r13 ^ @r13 | @rsp ^ @rdi | $ip == 4 >> @rbx & ~$ip & 0xB ^ @rdx & @r9 | @r11 | 0x11 ^ 0n0 | @rsp) { test_statement(0xD4D);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0xD))0xD) ; }
$error$
$end$
4065
 if (@rsi >> @rsp << @r10 >> @r9 >> @r8 ! @rsi + @r10 << 0y1011 >> @rbx << (@rax) >> @rsi)  { test_statement(0x1578);  /* This is a comment */  /* This is a comment */  while  ($teb | $teb = $teb | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4066
 if ($thread + $teb << +@r13 >> 0y1)~$buffer + @rsi >> (@r11) & @r9 >> @rbp & @rsp)  { test_statement(0xBA7);  // /* This is a comment   /* This is a not closed comment } elsif (@r8 << +$ip & @rsi & @rsp ^ @r10 | $thread >> -$ip & @rsi ^ @r10 ^ $proc ^ @rdi <> -@rsi >> @r13 >> -@rbp | 0xF & @rsp & @rdi ^ $proc | @r10 ^ @r12) { test_statement(0x1144);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~$thread ^ 0y1101 | @r10 = 0n9 ^ @r13 | @r10) ; } else { test_statement(0x1C1B);  /* This is a not closed comment  This is a not opened comment */  for (@rax = @rbp; @rax != @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4067
 if (@r9 + @r8 << 0y10001 ^ $buffer << $proc ^ @rsp & $teb ^ @r13 & @r11 ^ ~@rdi ^ @rdx | ~@rbx << -@rax >> ~@rdi & +@r8 | @r9 >> $buffer ^ $buffer & @rdi ^ @rax ^ 0y1010 ; @r11 + 0n9 << @rsp << @rsp >> @rdx)  { test_statement(0x1E5E); } else { test_statement(0x1A2D); }
$error$
$end$
4068
 if (@rax + ($thread) << @rbp << @r9 >> -3 << @rax >> 0n14 >> -~@r10 | ~@rsp >> @r12 >> 17 == @rax + ($thread) << @rbp << @r9 >> -3 << @rax >> 0n14 >> -~@r10 | ~@rsp >> @r12 >> 17)  { test_statement(0x1C74); @rax = @rbp >> @r13 ; } else { test_statement(0x927); }
$error$
$end$
4069
 if (@r11 + @r13 < $buffer << @rdi ^ 22 << @r11)  { test_statement(0x6DC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@rbx) & @rbx | @rbx | @r11 ; (@rbx) & @rbx | @rbx | @r11) ;  break; }
$error$
$end$
4070
 if ((5) + 2 >> ($proc) & $ip >> @rsp & 0y10011 >> @r12 | $thread << 21 >> $ip >> ~@rsp & @rbp ^ @r12 ^ $ip & @r9 | $thread >> -@rsp & @rbx ^ 0xB & @rbx | @r11 ^ @r13 | @rdx ^ 0y111 < 0x1 << @r8 << @r12 & @r11 << @rax >> @rsp ^ @r9 << ~$thread >> $teb >> @r8 & @r10 ^ ~@rsi & $buffer | $ip ^ @rdx ^ @rsi & @rax)  { test_statement(0x1770); } else { test_statement(0x913); }
$error$
$end$
4071
 if (@rbx ! @rbp + @rax >> $teb << 0y1 >> 0x7 >> @rsi | $teb >> @r11 >> 0y101)  { test_statement(0x23BF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 ^ @rsi))@r9 ^ @rsi) ; } elsif (@r12 << $teb >> @rsi & 22 >> @rbp | 20 & (+@rsp) ^ ((0n1)) ^ 0y1111 ^ $teb ! @r12 << $teb >> @rsi & 22 >> @rbp | 20 & (+@rsp) ^ ((0n1)) ^ 0y1111 ^ $teb) { test_statement(0x1F06);  /* This is a comment */ }
$error$
$end$
4072
 if (0n11 + @rbp & @rsp & @r11 >> @r13 ^ @r13 << @r12 >> +--@r9 >> @rax ^ @r12 >> @r12 & +4 <> @rsp << +@r9 ^ @rsi >> $ip ^ $buffer >> @r10 | +$thread >> @rdi | $ip & $buffer ^ @r13 | @r10 ^ $teb ^ @rbp)  { test_statement(0x17C4); } elsif (@rdi << 4 >> @r12 >> $proc & $thread >> @r12 ^ @r9 >> +~@r9 & 0n3 & @rdi > 0n10 >> @rdx & 0y11 >> @rsp & @r8 & $ip) { test_statement(0x1544);  for (val = 10; 0n15 ^ @rdx | -@rsp(@rbx ^ 0n12 | @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r10 >> @rbp | 0n13 & 22 | +$teb ; @r10 >> @rbp | 0n13 & 22 | +$teb) { test_statement(0x2343); }
$error$
$end$
4073
 if ($buffer << @r9 << (+@rbx) ^ @rdx >> @r9 >> @r10 & @rbx & --@r10 & @rdx | 0y10 | 0n17 & $ip & @rdi ^ @rbp & @rbp == $buffer << @r9 << (+@rbx) ^ @rdx >> @r9 >> @r10 & @rbx & --@r10 & @rdx | 0y10 | 0n17 & $ip & @rdi ^ @rbp & @rbp)  { test_statement(0x1F52); }
$error$
$end$
4074
 if (@r9 + $teb ^ $teb >> @r9(@rbp << @rdi)  { test_statement(0x1974); } elsif (0n15 << @rbx >> @r13 & +0y1010 ^ @r9 >> 0x8 & @r11 ^ @r11 ^ @r12(+@r8 & +@rbx >> +20) { test_statement(0x2AD); val = @r9 ; } elsif (~@rsi & @rsi & 0xA | @r12 & 0n6 -$thread ^ @rbp ^ -0x4 ^ @rdx | $buffer & @rdx ^ @rdi) { test_statement(0x249A); } elsif ($proc & $ip)@r10 & (@r13) ^ @r9 ^ $teb) { test_statement(0x1B88); } else { test_statement(0x19A4);  break;  /* This is a comment */ }
$error$
$end$
4075
 if (-(@r10) ^ +(0xF) | @r8 << $thread >> @r11 ^ ~@r9 & @rax & $proc ^ ~@rbx ^ 0xE < 0y11 + @r10 >> 0x9 << @rbx & @rsp ^ $thread)  { test_statement(0x25C4); } elsif (@rsi >> @rdi >> @r11 ^ @r12 >> ~@rbx & @r13 & 0xA ^ @rsp & @r8 ^ $thread ^ $teb = @rsi >> @rdi >> @r11 ^ @r12 >> ~@rbx & @r13 & 0xA ^ @rsp & @r8 ^ $thread ^ $teb) { test_statement(0x18C9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer ^ $teb | @r11 | ~@rsi = 0xD ^ @r11 | @rdi | -(@r9)) ; }
$error$
$end$
4076
 if (@rsp + @rax >> @r10 >> 0x13 >> @r12 & @rsi << @rbx >> 0x11 >> 0n11 ^ -(@r11) << $thread >> @rax(@rsp + @rax >> @r10 >> 0x13 >> @r12 & @rsi << @rbx >> 0x11 >> 0n11 ^ -(@r11) << $thread >> @rax)  { test_statement(0xAA3);  break; } elsif (0y0 << 0n19 & @rsp >> @r10 & @rdi & @r12)@rsp ^ @rbx >> +@rax | @r11 >> @r9 ^ @r10 & @rdi) { test_statement(0x89D); ;  This is a not opened comment */  if (-@rdi >< 0x2)  { test_statement(0xB4C); }  This is a not opened comment */  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@rsi <= @rdx) ; } else { test_statement(0x1EDE); }
$error$
$end$
4077
 if (@r11 >> @rbx >> @rdi | @r13 ^ 0x1 & $ip & @rbx ^ +3 & $buffer ^ 0y101 | $thread >> ~$thread & @rsp & @r10 ^ -$ip ^ $thread ! @rbx << $ip | (@rdi) >> @rbp >> ~@rdx | $buffer >> $thread & @rsp & @r8 ^ @rdi ^ @rdi)  { test_statement(0xF39);  break;  /* This is a not closed comment  if (0x5 | @r12(@r13 | @rsp)  { test_statement(0x175D); } elsif (@r12 < +@r10) { test_statement(0x1534); } else { test_statement(0x1D4E); }  while  (-++@rdx)@rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rdx < @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; ; }
$error$
$end$
4078
 if (+$proc >> $ip << $proc >> 0y1110 ^ $teb << @rbp >> 0x11 & $thread ^ 0 ^ 0x6 ^ $thread ^ 0y10010 | @rbx >> +@rsp(+$proc >> $ip << $proc >> 0y1110 ^ $teb << @rbp >> 0x11 & $thread ^ 0 ^ 0x6 ^ $thread ^ 0y10010 | @rbx >> +@rsp)  { test_statement(0x605);  // /* This is a comment  } else { test_statement(0x65A); }
$error$
$end$
4079
 if (@r12 + @rbx >> @r10 & @rdx << @r10 >> (@rbp) & 0y1 = @r9 | 0y1 << @rbx | @rdi >> @r10 | 0xA ^ 0y111 ^ (@r11) | 0n1 | -0n7)  { test_statement(0x87C); } elsif ($teb << 0xC >> $teb >> $buffer & @rdx >> @rax & $teb & @rdi ^ @rsp >> +0x9 & 0n12 | $ip >> 10(@rdx << @rbp >> ~@rsp ^ @rbx & @r13 & @rdi ^ +@rbx & $buffer) { test_statement(0x187A); }
$error$
$end$
4080
 if ($proc + +$thread << @r12 >> @rbp & (@r12) >> @r13 >> +@rdx | @rbx << $thread | $buffer & @rbx ^ @r11 ^ 0y1110 ^ +$thread | @rbx & @r11 | @rdi | @rax $proc + +$thread << @r12 >> @rbp & (@r12) >> @r13 >> +@rdx | @rbx << $thread | $buffer & @rbx ^ @r11 ^ 0y1110 ^ +$thread | @rbx & @r11 | @rdi | @rax)  { test_statement(0x1BAB);  /* This is a comment */ }
$error$
$end$
4081
 if (@rax >> 0n16 >> @rdi >> $thread & @rbp << $ip | @rsi << @rdx >> $teb >= 0n8 + @rbp << @rbx ^ @rsi >> $buffer)  { test_statement(0x212C); }
$error$
$end$
4082
 if (~$proc + @r11 & $thread << $teb >> +@rsp >> @rdi | 2 >> 0y100 ^ @rdx >> @rbp ^ (@rbp) & @r11 | @r8 & $thread & $teb | $ip & $ip ^ $buffer ~$proc + @r11 & $thread << $teb >> +@rsp >> @rdi | 2 >> 0y100 ^ @rdx >> @rbp ^ (@rbp) & @r11 | @r8 & $thread & $teb | $ip & $ip ^ $buffer)  { test_statement(0x702); } elsif (@rsp ^ @r10 & $thread)$buffer << @r13 & @rsp >> @r9 & 7 & @rdi) { test_statement(0xD9A); }
$error$
$end$
4083
 if (@rdi << $ip = $buffer << 0n0 ^ $teb << @r10 & $thread >> $proc & @rdx ^ @r8)  { test_statement(0x25E7); } elsif (@r12 & @r13 >> $thread & +@r13 & @r11 >= @r12 & @r13 >> $thread & +@r13 & @r11) { test_statement(0x2297); } elsif (@rbp | 0y10000 & @rdx > $thread & 17 ^ @r11 | -@rbp & @rdx) { test_statement(0x8F7); } elsif (@r10 | @rax ^ @r9 | 0x3)@r10 | @rax ^ @r9 | 0x3) { test_statement(0x234D); } elsif (0x2 ^ @r11)@r10) { test_statement(0x168E); }
$error$
$end$
4084
 if (~@rsp + @rax << @r12 << @rdi | @r13 << @r9 >> @rdi >> (@rbx) ~@rsp + @rax << @r12 << @rdi | @r13 << @r9 >> @rdi >> (@rbx))  { test_statement(0x1680); }
$error$
$end$
4085
 if ($teb << $ip >> @rsp >> 0n3 >> $thread & $ip << @r12 >> @rbx & @r11 >> $ip | @rsp >> @rax & @rsp >> $proc ^ @rsp >> @rsi & $ip & 0y111 | @rsp ^ ~@rsi ^ 0y1111 > $ip + @rsi << @r8 << @rax & @rdi << -@rdx ^ @r12 >> -@r13)  { test_statement(0x3BC);  for (val = 10; @r12 & @rdx ^ -$teb ^ @rbp == @r12 & @rdx ^ -$teb ^ @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x5F8); }
$error$
$end$
4086
 if (@rdi + @rsp & @rsi << $proc >> $teb <= @rdi + @rsp & @rsi << $proc >> $teb)  { test_statement(0x4FF); } elsif (+@rdx << $thread ^ @rbp >> +@rbp | $ip & +@rdi(+@rdx << $thread ^ @rbp >> +@rbp | $ip & +@rdi) { test_statement(0x161E); } elsif (0xB & @rbp <= 0x4) { test_statement(0xEF1); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@r11))@rsi) ;  This is a not opened comment */ } elsif (@rax ^ @r13 ^ (@r9) <= ($teb)) { test_statement(0x4BE); } else { test_statement(0x1814); }
$error$
$end$
4087
 if (15 << 16 << @rdx >> $proc ^ 0n6 ^ @r12 ^ (@r9) != 15 << 16 << @rdx >> $proc ^ 0n6 ^ @r12 ^ (@r9))  { test_statement(0x593);  // /* This is a comment  } elsif (~@r13 << $thread & @rsi >> @rbp ^ ~@rdi >> @rbp ^ @rdi & @r11 != ~@r13 << $thread & @rsi >> @rbp ^ ~@rdi >> @rbp ^ @rdi & @r11) { test_statement(0x3D5);  This is a not opened comment */ } elsif (@r13 >> ~13 & @r12 ^ (0x9) & 0n16 | +0n10 & @r10 == +@r11) { test_statement(0x126B); } elsif (@rdi <= @r10 & @r11 ^ @r13 ^ $buffer) { test_statement(0x15AD); } else { test_statement(0x1775); }
$error$
$end$
4088
 if ($buffer >> @r8 >> ~@r9 < 0x5 << (@r8) << $ip & @rsi << @rbp & @rbx >> ~@r8 | $teb << @rbp & @rsp >> @r13 & ~@rbx ^ @r9 & @r11)  { test_statement(0x19E1); } else { test_statement(0xC07); }
$error$
$end$
4089
 if ($teb + (@r12) & @rdi ^ $proc << @rax & @r8 & @rbx | $teb & @rbp ^ 12 >> @rbp ^ @rsi ^ $ip ^ @rdx | $teb & 0x6 ^ @r10 & $thread ^ ~@rax ^ $buffer | @rsp & ~@rdx 21 + @r11 ^ $teb >> @r8 & @r8 & 0y0 & @r9 ^ $buffer ^ @r9 & $teb)  { test_statement(0x1B12); } elsif (~0x5 << @r13 >> 0n8 <> $thread >> $buffer >> $ip) { test_statement(0x1DF1);  for (val = 10; 0n15 ^ 0n11 | @rax | (@r13) <= 15 | @rbx | @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  for (val = 10; (@rbp) = $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rax((@rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x18C8);  // /* This is a comment  @rax = $proc ; val = $buffer | (@rsp) ;  if ($buffer))$thread)  { test_statement(0x2365); } else { test_statement(0x226E); }  break; }
$error$
$end$
4090
 if (@rsi + @rbp & (@r10) & $ip >> -@rsi | @rsi << $buffer <= @rsi + @rbp & (@r10) & $ip >> -@rsi | @rsi << $buffer)  { test_statement(0xE3B);  /* This is a not closed comment } elsif (@rdx << 0y1100 | @r12 >> $thread & 0y0 ^ @rbp ^ $thread | @rax & 0y1001 @rdx << 0y1100 | @r12 >> $thread & 0y0 ^ @rbp ^ $thread | @rax & 0y1001) { test_statement(0x8F1); } elsif ($ip & ~0y1111(($ip & ~0y1111) { test_statement(0x1F17); }
$error$
$end$
4091
 if ($thread << @rbx << +$proc >> @rsp << 0n4 >> @rbx >> @rax ^ $ip & 0y110 >> @r10 = $thread << @rbx << +$proc >> @rsp << 0n4 >> @rbx >> @rax ^ $ip & 0y110 >> @r10)  { test_statement(0x243D); }
$error$
$end$
4092
 if (@rdx + @r13 << 0y11 << @rdi ^ 0n15 & @r13 = @rdi & $thread << $thread & @r12 & @r10 & 0x9 | @rax << @r11 >> $thread >> @rbx & +$teb >> $teb)  { test_statement(0x3F9); } else { test_statement(0x350); }
$error$
$end$
4093
 if ($teb >> @rbx | @rdx << -@rax ^ $teb((@rbx) + $thread << ~@rbx & 12 >> @rbx >> @r12 | $teb << ~~$teb >> @rbx)  { test_statement(0xF4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x0 & @r13 | @rax ^ @rdx(0x0 & @r13 | @rax ^ @rdx) ;  /* This is a not closed comment  /* This is a comment */ } elsif (-~@r10 >= -~@r10) { test_statement(0x1E44); ; } else { test_statement(0xD3); }
$error$
$end$
4094
 if (@rsp >> 20 >> $ip >> @r11 & @rdx >> 13 >> @rsi ^ @rbp << -0y10 & @r12 >> @r13 & @rsi ^ 0x12 >> (($ip)) | $proc >> -+~@rsi >> @rsp & @rsp >> @rdx & @rsp ^ @r13 & @rdi ^ $proc & @r11 ^ 0 ^ 0n15 ! $proc + $teb << @r12 >> @r8 >> (~0n12) & (-(0n8)) << @r10 >> @r8 & ~~$ip & @rax)  { test_statement(0xAC); } elsif (@r11 & $teb >> @rdi ! @r12 << 15 >> @rbx >> @rbp & $buffer >> @r10 ^ @rax & @r8 ^ @r13) { test_statement(0x251F); } else { test_statement(0x1763);  This is a not opened comment */ ;  while  (@r13)@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   if (@rsi >= ~@rdi)  { test_statement(0x1272); } }
$error$
$end$
4095
 if (-~~@r11 + 0y1101 << $proc | @rsp ^ @rax ^ @r11 ^ @r11 | 0n3 >> @r8 ^ ~4 | 0n3 ^ 0y1101 ^ $ip | $ip | 0n12 >< @rbx >> @r8 << @rbx)  { test_statement(0x1899);  break; } elsif ($proc << +0n2 = $proc << +0n2) { test_statement(0xB79);  This is a not opened comment */ } elsif ($thread >> @rbp ^ @rax | $ip & 4 | @rdi | $buffer <= @rsp >> @rax) { test_statement(0x8A4); } elsif (@rdi & @rsi ^ @rbx | $proc > @r10 | @rdi ^ @rbp | @rax) { test_statement(0x388); @rax = $buffer | (0xF) ; } else { test_statement(0x13E0); }
$error$
$end$
4096
 if (~$proc + $thread << $thread >> ~$thread | $ip ^ @r11 >> @rax ^ 0n9 ^ @rbp ^ $ip | 0n8 ^ +@rsp ^ @rax ^ @r13 | @r13 & $proc ^ @r13 ^ $ip | $proc)~$proc + $thread << $thread >> ~$thread | $ip ^ @r11 >> @rax ^ 0n9 ^ @rbp ^ $ip | 0n8 ^ +@rsp ^ @rax ^ @r13 | @r13 & $proc ^ @r13 ^ $ip | $proc)  { test_statement(0x2676); }
$error$
$end$
4097
 if ($buffer + @r8 << @rax >> 0y1110 & -@rbx | @r12 << ($thread) >> $buffer((+@rsp + $teb >> 0y10 >> $thread >> $teb & @r13 << -@rsp)  { test_statement(0x2F1);  while  (0y11 | $ip | @r9 ! @r10 ^ @r9 | $thread | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@rdx & @rsp >> @rsi ^ @r11 >> 0xA != ~~($buffer) << @rsp) { test_statement(0x174E); } elsif (@r10 & $buffer ^ @r10 ^ @r12 ^ @rdx | $buffer & @r9 ^ $buffer ^ 0n6 | 0y1011 ^ @rax | ~~0n6 >< ~@rsi >> @rdx & @rbp & $buffer ^ (14)) { test_statement(0x426); } elsif (@r10 ^ 0y1110 0x0 & $proc | $ip ^ @r13 | (0n18)) { test_statement(0x1B49); }
$error$
$end$
4098
 if (@rdi + @rbp >> @r13 << @r13 & $proc & $thread >> $teb & $teb ! @rax + @r11)  { test_statement(0x15D8); } elsif (@rdi << $thread >> @r12 >> 0xA <= @r11 << @r9 >> 0x2) { test_statement(0x194B);  This is a not opened comment */ val = 0x4 ;  /* This is a comment */ } elsif ($thread & @r9 & @rsp ^ @rdx & ~@r13 ^ @rdi | ~$proc & @rsp ^ $ip | ($thread)))@r10 | @rsp ^ 0xB) { test_statement(0xD25);  break; } elsif (@r10 ^ @rsp ^ @rax | 0y1101 | $proc >= $thread ^ @rbx | @rdx) { test_statement(0x22BD);  /* This is a comment */ }
$error$
$end$
4099
 if (@r13 + $proc << @rsp << @r9 >> 0n3 & @r9 << @rsp >> $teb & ~$ip & 5 ^ -@rsp & $thread | @r11 << @rdi & @r12 & @r9 & @r10 ^ @r11 ^ @r12 == -0y1001 + @rbp << @rdx >> +0n7 << $thread >> $teb & (0xA) & $teb ^ @r11 << @rbp ^ @rax >> @rbx ^ @r10 ^ 0y0)  { test_statement(0x1372);  while  (@rsp & $teb ^ @r12 | (($buffer)) ; @rsp & $teb ^ @r12 | (($buffer)))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4100
 if (@r12 + @rbp & @rdi << ~~$buffer >> @rsp >> $buffer > @r11 + $teb >> $buffer << @r12 ^ @r12 << @r10 >> @r10 & -$proc | 0y10000 << 0y111 ^ -$teb | @r8 & 0xA & @r9 ^ @r10 & ~$proc)  { test_statement(0x204);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n16 ^ @rbx)@rsp & @rsp ^ @r13 | 0x11 ^ -@r10 | 0n19 | @rsp) ; } elsif (~$thread & +@rdi >> @rdi ! ~$thread & +@rdi >> @rdi) { test_statement(0x1CE4); }
$error$
$end$
4101
 if (@rbx << 13 << @rbp >> @r8 >> @r8 ^ +@rsp << +@r10 >> 0n10 >> @rsp & 13 >> @r10 ; @rbx << 13 << @rbp >> @r8 >> @r8 ^ +@rsp << +@r10 >> 0n10 >> @rsp & 13 >> @r10)  { test_statement(0x129F); } elsif (@rbp >> @rax ^ @r12)@rbp >> @rax ^ @r12) { test_statement(0x21D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip | 0y1011 <= @rbx ^ $thread) ;  while  (@rbx <= @r8 | 0n11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (@r10 ^ -0xA & (-@rsp)))7 >> @r9 | @rdi & ($thread) ^ @r10 ^ -@rsi) { test_statement(0x231F); } else { test_statement(0x8B2); }
$error$
$end$
4102
 if ($teb >> @rsp << @rbx & $proc == $buffer + @r12 << @r8 ^ 0y1001 >> @rbx & $teb >> ~0x2 & @r10 ^ @rbp >> +0n1 ^ @rbx)  { test_statement(0x6E3); }
$error$
$end$
4103
 if ($proc + +$teb >> 0n13 >> @r8 ^ @rax >> $thread >> @rdi & 0y111 ^ @r8 | $teb == $proc + +$teb >> 0n13 >> @r8 ^ @rax >> $thread >> @rdi & 0y111 ^ @r8 | $teb)  { test_statement(0x25E3);  /* This is a comment */ val = @r11 & +@rdx ; } elsif (0y110 << @rax ^ $thread | 7((7 << +0y0 >> @rdi & -@r9 & @rax & @r8 | $buffer | @rdi | @rbp ^ @r11 | 15) { test_statement(0x1589);  while  (-@r13 | @r8 = -@r13 | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb >> 14 >= $teb >> 14) { test_statement(0xC68); }
$error$
$end$
4104
 if (@rsp + @r10 << @rbp << 0x8 & @r13 << @r8 >> @rdx & $teb >> $proc & @r9 & $thread ^ 0x12 << $ip >> $ip & --@rdx ^ $buffer & 0x4 & @rdx ^ $teb & 11 >= $thread + $thread >> $proc)  { test_statement(0x1E7A); } elsif (@rbp >> @rdx >> ~$ip ^ 0y10000 >> -@rax ^ $ip & 0x12 ^ @rdx | 0xC > 0n16 << @r12 & @r10 >> 0n12 & @rax & @rdi) { test_statement(0x219F); } elsif (@rsi >> $teb != @rsi >> $teb) { test_statement(0x168D);  while  (@rdx | @r8(@rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r13 != $ip)  { test_statement(0x1427); } elsif ($thread(($thread) { test_statement(0xBD1); } elsif (@r12((@r12) { test_statement(0x101C); } else { test_statement(0xC2F); } } else { test_statement(0xDF4); @rax = @r9 & 0x10 ^ @rbp | 0xF | @r11 | @r9 ;  /* This is a comment */ }
$error$
$end$
4105
 if (@r8 + -@r8 & +10 << @r12 | $thread ^ @r10 >> @r11 ^ 0n17 & ~-@r8 +@rsp & @r13 >> +@r9 | (0y10001) << @r8 >> ~-21 & @r11 >> @rbx & $thread & @rbp ^ @rsp & $thread & @rdi | ~+@r12 & 0n8 & 0n0 ^ ~$thread ^ @rbx ^ 6)  { test_statement(0x231F);  while  (@r11 & 0x10 | $proc | 1 | $proc ; 0y10010 & @r12 ^ @rbx ^ @r8 | 0y110)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4106
 if (@rsp + -$thread | @r8 >> @rbp(@rbx >> 16 << @rsi ^ +(@rsi) & -0y110 & @rdi & @r13 ^ @rbx ^ @r9)  { test_statement(0x1E5C);  This is a not opened comment */ } else { test_statement(0x1CCB); }
$error$
$end$
4107
 if (-~-@r8 + @rsp << 0x1 << 0n10 >> @r12 << $buffer >> @r8 >> $proc ^ -$ip << 0x7 | @rsi << @rdi & 0x9 ^ ~@rsp & @r8 ^ @r8 ; -~-@r8 + @rsp << 0x1 << 0n10 >> @r12 << $buffer >> @r8 >> $proc ^ -$ip << 0x7 | @rsi << @rdi & 0x9 ^ ~@rsp & @r8 ^ @r8)  { test_statement(0x1AF5);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ 0x8 ^ (@r9) | @rbx | @r11 <> $buffer & @rsp) ; } else { test_statement(0x4EF); }
$error$
$end$
4108
 if (($thread) & @rsi << @rbx & $proc >> @r8 & @rsp | @r13 << @rsp ^ @r13 >> $buffer & ~@rsi ^ @rdi & @rax | @r10 >> 10 ^ 21 | +@r13 ^ @r8 ^ @r8 = ($thread) & @rsi << @rbx & $proc >> @r8 & @rsp | @r13 << @rsp ^ @r13 >> $buffer & ~@rsi ^ @rdi & @rax | @r10 >> 10 ^ 21 | +@r13 ^ @r8 ^ @r8)  { test_statement(0x662); } elsif (0x7 >> ~1 & @r11 & -$buffer | @rsi ^ @r9 & 0n7 | 0y10011 & 0xB | $ip | ~@rsi > 0x7 >> ~1 & @r11 & -$buffer | @rsi ^ @r9 & 0n7 | 0y10011 & 0xB | $ip | ~@rsi) { test_statement(0x2151); val = $teb & $ip ^ 0y10000 | @r13 ;  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rdx != $buffer) ;  if (0y1 = @r8)  { test_statement(0x24D0); } elsif (+-~0xB(0x2) { test_statement(0x13C6); } else { test_statement(0x2043); } } else { test_statement(0x228); }
$error$
$end$
4109
 if (@rbp & +(@r9) << -@r8 ^ (@rbp) << $thread > @rdi + $ip >> @rax << $proc & 16 << @rdi >> $buffer & 0x3 >> @r13 & @r11 ^ @r10 << $ip & @rdi | 0x9 << @r11 ^ @r11 >> ~@rsi ^ 0xE | $ip)  { test_statement(0xA57);  if (0x1 >= @rbp ^ $teb | $ip ^ @r11 | @rbx | @r13)  { test_statement(0x134D); } elsif (@r8 = @rsp ^ @rdx | @rdx) { test_statement(0x1CAE); } elsif (@rsp <= @rsp) { test_statement(0xEAD); } else { test_statement(0x1CCE); }  /* This is a not closed comment } else { test_statement(0x18A6);  break; }
$error$
$end$
4110
 if (0y1001 >> @rax << @r8 >> $teb >> $proc & $buffer >> -@r13 >> @r10 ^ 0x5 >> $proc($buffer)  { test_statement(0x2142);  break;  while  (@rsi ; $buffer ^ @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rbx ^ @rbp | +@rbx | 0x11 ; }
$error$
$end$
4111
 if ($teb + @r10 << @r8 ^ +$thread << +@r11 > $teb + @r10 << @r8 ^ +$thread << +@r11)  { test_statement(0x542); } elsif (@r10 >> $thread >> $buffer & @r13 >> @rbp & $teb((~$teb ^ $thread >> 0y1111 & ~$thread ^ @rbx ^ 0x1 | @r13 >> $buffer | 0y1111 & ($proc)) { test_statement(0x267F);  This is a not opened comment */ } elsif ((@rbx) >> @rdi & @rdi & $thread | $teb <= ~$teb ^ @rbx) { test_statement(0x1EA7); }
$error$
$end$
4112
 if (0xE + @r11 << @r13 & $teb >> @rax >> $ip & -@r8 ^ $ip << 0x8 & ~@rdx | (@r9) << @r10 >> 0x8 | @rbp >> -$buffer & @rax ^ 0x12 ^ -@r9 | @r10 & @rax >= @rbx << @rdi << @rbp >> @r11 << 0n12 & @rbx & -$buffer & ~@rsi | @rax << @rax >> @rbp >> @r13 | @rsi & (@r9) & @rsp ^ @r8 ^ $ip ^ @r8 | @r10)  { test_statement(0x113C); } else { test_statement(0x28C);  for (val = 10; @rsi ; $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4113
 if (0n6 >> $buffer < @r9 + @rdi << @rax << 0x13 & @r13 << 0y1 >> @r10 >> @rbx ^ @r12 & +@rdi | @r8 << @r13 >> $proc & (+0n5) >> @r12 ^ @rax & $thread & 16 ^ $thread)  { test_statement(0x258F); }
$error$
$end$
4114
 if (@r11 + @r13 << @rbx << $teb @r11 + @r13 << @rbx << $teb)  { test_statement(0x1BA8); } elsif (@r8 << @rsp >> $proc >> 0n4 & @rsp == @r8 << @rsp >> $proc >> 0n4 & @rsp) { test_statement(0xE7); @rax = $ip ;  // /* This is a comment  }
$error$
$end$
4115
 if (0y110 | @rsp >> @r11 >< ($buffer) + @r12 << 0y111 << @r9 >> @rdi << (~$thread) >> @rbp >> @rsi | ~@r8 << $buffer ^ 0y0 >> 0y101)  { test_statement(0x1BC); } elsif (@rsi >> +($buffer) >> 0n9 & $thread & $proc >< @rsi >> +($buffer) >> 0n9 & $thread & $proc) { test_statement(0xD0E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1100 ^ $thread != 0y1100 ^ $thread) ; } elsif (@rsi >> $ip ^ @r12 | $thread((@rsi >> $ip ^ @r12 | $thread) { test_statement(0xDD9);  break; } elsif (@r12 ^ @r9 <= @rax ^ @rdi | @r9) { test_statement(0xEC1);  /* This is a not closed comment } elsif ($teb | @r11 | @r9 < @rbx ^ $thread | 0xB) { test_statement(0x1F48);  break; ;  while  (0y100($ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (6 == $buffer | 6) { test_statement(0x12AC);  This is a not opened comment */  if (@rbp <> @r8)  { test_statement(0x778); }  /* This is a comment */ } elsif (+@rbp ! $ip) { test_statement(0x17A6); } elsif ($teb <= $teb) { test_statement(0xAC5);  This is a not opened comment */ } elsif (+@r11 <> @rsi) { test_statement(0x226B); } else { test_statement(0x3B4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 ^ @rbx | @rdx | @rbp < $teb ^ $proc | $proc) ;  /* This is a not closed comment }
$error$
$end$
4116
 if (($thread) + @r13 & $ip >> @r9 >> 0 ; ($thread) + @r13 & $ip >> @r9 >> 0)  { test_statement(0x641);  /* This is a comment */  // /* This is a comment  }
$error$
$end$
4117
 if (@r8 << 0n12 << 0y1111 & $proc << 3 ^ (@rax) >> @rbp >> @rbp & ($proc) >> +0y101 & $proc ^ @r9 & 0x3 & +@r13 ^ @rbp ^ 6 ! $proc + @rbp >> @rbx & @rax << @rdx & $proc >> @rdi)  { test_statement(0x22D7); @rax = @r12 >> ~$buffer & $ip ; val = 0x4 ;  if (@rbx | @r13 >= (@r10) | $thread)  { test_statement(0x200A); } elsif (@rdx >< @rdx) { test_statement(0x1DB6); } elsif (~@r13(($thread) { test_statement(0x2455); } }
$error$
$end$
4118
 if (0n11 + -~@r12 | @r10 << @rsi & 0n0 >> @r9 & (@rsi) != +@rdx ^ 0xD << @r11 ^ @rdi & $ip ^ (@rbp) & $thread)  { test_statement(0x28F); } else { test_statement(0x167D); }
$error$
$end$
4119
 if (@rsp << $buffer & 0y1 << @rbp >< +@r10 + 0x13 & @rbx & @rsi)  { test_statement(0xCBB);  if (+$ip & @r13 ^ @r8 ^ $thread(+$ip & @r13 ^ @r8 ^ $thread)  { test_statement(0x8F7); }  if (+@r8 ^ 0x6 = $buffer | 0y10001)  { test_statement(0x1B70); } else { test_statement(0xD85); }  while  (@r9 ; @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0n18 ; 0n18)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = +$buffer ; }
$error$
$end$
4120
 if ($teb + @rsp << @r12 << $ip(($ip >> $ip << @r10 | @r12 << @rbp & @r10 & @rsi & (@r10) ^ @r8 >> @rsp & @rdi ^ $teb)  { test_statement(0xBD7);  if (@rdi & $teb == @rdi & $teb)  { test_statement(0x2262); } else { test_statement(0x1D67); }  break; } elsif ($proc << 14 >> @r10 >> $proc))@r10 | @rsi & @rbp | 23 & +0n4 ^ 0xE ^ +0y1111 | 10) { test_statement(0x1663);  // /* This is a comment   This is a not opened comment */ } else { test_statement(0x1924); }
$error$
$end$
4121
 if (@r11 ^ -@rsp << @rax ^ 15 >> @rbp & @rbp & $teb | +@r13 << -@rbx < @r11 ^ -@rsp << @rax ^ 15 >> @rbp & @rbp & $teb | +@r13 << -@rbx)  { test_statement(0xB07); } elsif (@rdx << ~$thread >> @r8 >> @r10 == @rdx ^ @rsp & 0y10011 & @rdx ^ @r13 ^ 0xC | @r9 >> $buffer & @r13 | @r12 & $teb ^ $teb ^ $teb) { test_statement(0xBA5);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 >< @r10) ;  /* This is a comment */ } elsif (@rsi >> ~0n9 & @r10 & @rdi ^ @rdx ^ $ip | $proc & (@r8) ^ 0y10011))@r9) { test_statement(0x7FE); } elsif (0n6 & $proc ^ @r11 ^ 0x2 | $proc ^ 0y1111)0n6 & $proc ^ @r11 ^ 0x2 | $proc ^ 0y1111) { test_statement(0xAA2); }
$error$
$end$
4122
 if (@r8 + @rdx << $thread << @r11 >> $teb << $thread >> ~$buffer | @r10 != $thread + @r12 << @rsi << $teb >> @r8 >> 0y1001 >> @rsi & +@rsp >> +@rbx ^ 0x12 & $ip)  { test_statement(0x85E); } elsif (~@rsi << $thread & @rdx >> @r13 | @r10 & +$teb | $buffer | @r9 | @r10 | @rax >= $proc << ~0n4 ^ @rsi >> @r9 ^ $teb & @rdi ^ $teb) { test_statement(0x17A7); } else { test_statement(0x48B); }
$error$
$end$
4123
 if (@r12 & $thread << 0y1110 >= @r11 >> $ip << @r12 >> @rdx >> 0x10 | $thread ^ -@rbx & +@r10 & @rsp ^ @rdi & $teb ^ @rbx ^ @rdx)  { test_statement(0x3F);  /* This is a comment */ } elsif (@r10 << @rbx >> @rax >> ~@r12 ^ $ip | -11 >> $proc ^ $buffer & @rax ^ 0x3 ^ @rbp >= 0y1101 >> ~@r8 & @rsi >> @r9 ^ @rbp >> $proc | 0n5 & $buffer ^ $thread & $proc) { test_statement(0x78D); } elsif (+@rdx >> @r9 & (+@r12) & $teb > $buffer >> @rdx & $buffer & @r10) { test_statement(0x61F); }
$error$
$end$
4124
 if (@rsp + $ip << @rax << $teb >> $proc | @rbx << (@rdi) >> 0y10(@r13 & 0n3 << @r10 >> $teb | $ip << $ip >> @rsi >> +-@r12 ^ @r12)  { test_statement(0x18B);  // /* This is a comment   break; } elsif (@rsp << @r8 & $thread & @rdx($teb ^ @rdx ^ ~@r12 | @r12 & $buffer & @r12) { test_statement(0x261); } elsif ($teb & @r9 & @rdx ^ @r9 & @r13 ; $teb & @r9 & @rdx ^ @r9 & @r13) { test_statement(0xBED); ; }
$error$
$end$
4125
 if (@rsi << @rax << @r11 >> @rbx << @rax & @rdx >> 0n7 & @r8 >> @r11 & (~@r13) ^ @r11 << @rdx & 0n8 >> $buffer & @rsi & @rbx | ~@r8 << @r12 & @r12 & @r10 & @r11 | @rdx | @rbp & 0y0 <> $thread + @r11)  { test_statement(0x13D6); @rax = @r10 | $thread & @r11 ; } else { test_statement(0xB02); }
$error$
$end$
4126
 if ($buffer << @rdi << @rax ^ @rax << @rbp >> @rbp <> 10 + @rsi >> (0n5) << @rsp >> 0n3)  { test_statement(0x11D7); }
$error$
$end$
4127
 if (@r10 << @r11 ^ 0n19 & $proc >> @rax & -@rax | 0xD ^ @rbx >> @r9 = @r13 ^ 0n18 << 11 >> @rdx & $buffer)  { test_statement(0xD2); ;  if (@r12 ^ 23 >< (@r8) ^ $proc)  { test_statement(0x1F4); } elsif (@r9 | 0n11 == @r9 | 0n11) { test_statement(0xBCA); } elsif (@rbx ! @rbx) { test_statement(0x917); }  for (val = 10; -@rbp | $thread == @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } else { test_statement(0x221E); }
$error$
$end$
4128
 if (@rdx << @rdi ^ @r8 >> (@rax) & 0x9 >> @r10 & @rdi & @r9 ^ @r9 & $teb & $teb ^ @rdi ^ 0x13 | @r10 >> $thread & @rsi >> 2 | @r9 ^ @r8 ^ @rsp ^ @r13)0y10011 >> ~@r13 >> @r8 >> 0x6 & @r8 >> @rsp & $ip & @rbx | -~0x13 >> @r9 >> @rsi ^ @rdi >> 13 | +$thread >> @rax & @rdi & @r10)  { test_statement(0x24A0); } elsif (@r9 & ($thread) >> $thread | @r12 & @r9 & 12 ^ 0n8 & @r13 ^ ($buffer)(($thread & @rdx & (@rsp) & $buffer ^ @rbp ^ +@rbx ^ 0y10000 ^ @rdx) { test_statement(0x14E4);  if (@rax ^ ((@rsp)))@rax ^ ((@rsp)))  { test_statement(0x1452); } elsif (@rdi > 20 | $thread) { test_statement(0x138); } } elsif ($thread & @rbp | @r12 ^ $proc ^ @rax | 0y1111 | -0y1000 | @rsi > $thread & @rbp | @r12 ^ $proc ^ @rax | 0y1111 | -0y1000 | @rsi) { test_statement(0x17AC); } elsif (@rdx == 0y1110 ^ ~($ip) ^ ~$thread | @r8) { test_statement(0x26BB); } elsif (@rdx = @rdx) { test_statement(0x289);  for (val = 10; @rdi <> @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 ; $buffer) ;  if (@r12 <= 20)  { test_statement(0x4E); } } else { test_statement(0x25D5); }
$error$
$end$
4129
 if (@rsp >> @r8 >> $teb >> @rdx & $thread << @rsp >> @r12 & -1 >> @rdi & @rdx | @rbx << @r11 >> @r10 >> @r8 & -@rbp >> @r12 ^ @rbx >> 0y11 & 17 & @r8)@rsp << @r11 << 0y10000 & @r11 << +@r10 >> @r13 >> (@r8) ^ @rsi >> @r8 & $proc ^ @r8 | @r10 << @rbx >> $teb >> 0y1110)  { test_statement(0x9C8); } elsif (@r12 ^ $buffer >> @rbx ^ $proc | $thread >> ~@r8 & $proc ^ $buffer & $ip ^ $thread ! @r12 ^ $buffer >> @rbx ^ $proc | $thread >> ~@r8 & $proc ^ $buffer & $ip ^ $thread) { test_statement(0x243C); } elsif (@rbx >> @rbp & @r10 & @r10 | @rbx ^ ~@r9 | $buffer >< @rbx >> @rbp & @r10 & @r10 | @rbx ^ ~@r9 | $buffer) { test_statement(0xE8B);  // /* This is a comment  } elsif (@rbp & ~@rsp ^ @rbx ^ @rbp != @rbp & ~@rsp ^ @rbx ^ @rbp) { test_statement(0x6BB); } elsif ($proc ^ $teb == $proc ^ $teb) { test_statement(0x23DB); } elsif (+0n0 >< -@rbx) { test_statement(0x1DD); } else { test_statement(0xE7E); }
$error$
$end$
4130
 if (@rdi << -@rdi << 0y101 & @r9 >> 5 >> 0n3 & @r8 >= @r10 << @rsi << @r13 >> $teb << @r9 >> +$ip & @rsp << @r11 >> @rax & $thread & @rbx ^ 0xD << 0n7 >> ~@r9 | 20 & $buffer >> 0y10000 & 0y10 & -@rbp)  { test_statement(0x19F8); } elsif (@r11 << $proc != @r11 << $proc) { test_statement(0x30B); } else { test_statement(0x18C9); }
$error$
$end$
4131
 if (-@r9 << @rbx >> @r10 >> $ip & @r12 << $thread & 0n14 >> @rsi ! -@r9 << @rbx >> @r10 >> $ip & @r12 << $thread & 0n14 >> @rsi)  { test_statement(0x1071);  // /* This is a comment   // /* This is a comment   /* This is a comment */  // /* This is a comment  } else { test_statement(0x1C70); }
$error$
$end$
4132
 if (@r10 + 12 >> $proc << (@rsi) >> 5 >> @r9 ^ $proc << $thread & +@rsi == @r10 + 12 >> $proc << (@rsi) >> 5 >> @r9 ^ $proc << $thread & +@rsi)  { test_statement(0x1F38); } elsif (@r13 << @r11 >> @rsp & @rbp ^ @r13 >> $proc & @r9 & @rsp = @r12 >> @rax ^ $proc & @rdi | 0x1 ^ @r9 ^ @r13 ^ -@rsp | 6 | $buffer ^ -$buffer) { test_statement(0x6F6); }
$error$
$end$
4133
 if (0xF + @rax << 0y10 << $proc & 4 << @r9 >> $thread & @r12 & $buffer >< @rbx + @r9 & $proc << 0y10 & $proc ^ @r11 << (14) ^ $ip >> @rdi & @rdi & 16)  { test_statement(0x11D9); } elsif (0y1001 << @rbp >> 0n4 | @r8 ^ @rbp & $teb ^ @rax ^ ~$teb | @r8 & @rbp)0y1001 << @rbp >> 0n4 | @r8 ^ @rbp & $teb ^ @rax ^ ~$teb | @r8 & @rbp) { test_statement(0x12B0); } elsif ($proc ^ (@rdx) | @r13 ^ $thread <= $thread & ~@rbp) { test_statement(0xA34); } elsif (@rbx ^ @rsi <= @rbx ^ @rsi) { test_statement(0xECF); } else { test_statement(0xB36);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1101 ^ @r11 ; +~17) ; }
$error$
$end$
4134
 if (@r11 >> @rdx >> @r12 >> @r11 & @rax << @rdx ^ @rsi ^ @rax & @r10 & @rbx >< @rbp << 10 & @r10 << ~0n14 & 4 & ~@r12 & @r8 ^ @r13 << @rbx & 0y1000 >> $proc & @r9 & 11 ^ +@r8 & 1 & +@rsp ^ @r12)  { test_statement(0xE3F); } elsif (@r8 << 0n0 & @r9 ^ ($proc) >> @r9 | $ip >> @r10 != @r10 & @rdx ^ $thread & 0x2 | $buffer & @rsi & (0x9) ^ $teb & 0x3) { test_statement(0x1107); } elsif (@rbx ^ @rbx ^ ~$thread ^ +-~13 <= ~@r13 >> @rbx & 0y1000) { test_statement(0x1649); } elsif (+@r13 & @rbx = +@r13 & @rbx) { test_statement(0x1444); } elsif (@r11 | @r8 | @rdi >= @r9) { test_statement(0x2290); }
$error$
$end$
4135
 if (0n5 << $buffer >> $proc << @r10 & @rsp << 12 >> 0n9 & @r9 ^ @rbp & $thread >> @rsp ^ @rdi & 0n12 | @rbp & @r9 ^ @r11 & 0x8 & 0n4 ^ @rdx | @r10 >> @r13 & $teb ^ (@r9) | -$thread & @rdx ^ @r8 ^ 0n5 <> @rsi + @rdi >> ~@r9 & +$thread | @rax >> 11 & 13 ^ @r11 >> @rsp ^ ~(@rdi) & @r13)  { test_statement(0x20E2);  if (@rdx & @rbx ; @rax | 0n4 | @r11 | @rdx)  { test_statement(0xD7F); } elsif ($buffer | @r9 | @rbx >= @rdi | -11) { test_statement(0x13C9); } elsif (-@rbp >= 0xA) { test_statement(0x1BC4); } elsif (+@rsi <> +@rsi) { test_statement(0x64E); } elsif ($buffer <> $buffer) { test_statement(0x970); } elsif (@rdi >= @rdi) { test_statement(0x13B1); } else { test_statement(0x1C13); } }
$error$
$end$
4136
 if (2 ^ @r13 >> @rsi >> +@rsi ^ @rax & 0n1 & $teb ^ ~@rdx ^ @r11 ; @r13 + @rdi ^ @r9 << @r11 >> @rdx ^ -@rdx & 0y1110)  { test_statement(0x234F); }
$error$
$end$
4137
 if (@rsi << @r13 << @r8 & @r13 << @rbp | 0x1 << @r13 >> @rax >> @rdx & +@rdx >> @r12 & @rsp & $thread ^ @r10 | @r10 >> 0x9 <= @rsi << @r13 << @r8 & @r13 << @rbp | 0x1 << @r13 >> @rax >> @rdx & +@rdx >> @r12 & @rsp & $thread ^ @r10 | @r10 >> 0x9)  { test_statement(0x748);  /* This is a comment */  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11((@r10 | @r11) ;  while  ($proc < $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4138
 if (@rax << $buffer >> @r8 & @rdx >> $teb >> -@r9 & $teb & @rax & 2 | @r11 ^ ~@r11 & @r12 & @rbx ^ 21 ^ @rbx ^ -@r13 <= $thread << 0n0 & @r13 << 0x8 | 0y1011 >> @r13 >> @rdi ^ @rax >> @r11 ^ +$teb & @rbp | $proc >> $proc & @r8 & 0)  { test_statement(0x23BF); }
$error$
$end$
4139
 if ($ip >> @r13 << @r8 >> @rdx ^ $proc << @rax ^ $thread >> $ip == -@r8 << 0n12 >> @rax >> 10 >> @r8 | @r10 << @rdi >> (0x9) >> @r9 & @rbp >> @r8 ^ 21 & @r11 & ~@rbp | @rdx ^ $teb & 7 ^ 0n3)  { test_statement(0x475); } else { test_statement(0xC34); }
$error$
$end$
4140
 if (@r13 >> @rbp >> @rsp >> -0n13 ^ @rdi << @rdi & 15 >> @rdx ^ @r9 >> 17 ^ @rsp & @r11 = @r13 >> @rbp >> @rsp >> -0n13 ^ @rdi << @rdi & 15 >> @rdx ^ @r9 >> 17 ^ @rsp & @r11)  { test_statement(0x5D0); } elsif (0y111 >> +0y1000 >> 0xF ^ $thread >> $thread))$teb) { test_statement(0x6F6); } elsif (@r10 >> 0n14 ^ $thread ^ -2 ^ @rax | $ip | $proc ! $teb | $proc ^ @r9 ^ @r13) { test_statement(0x1A49); } elsif (@rsi ^ -@r10 >= $buffer & $proc ^ @r11) { test_statement(0x1CB2); } elsif (@r10 ^ @rbx >< @rbp ^ 0y10001 | ($proc) | @r10) { test_statement(0x2CA);  /* This is a comment */ } elsif (@rsi @rax | @rdi) { test_statement(0xAD7);  break; } elsif (~@r10 >= 0xF) { test_statement(0x1DA2);  if ($teb >= $thread)  { test_statement(0xAE7); }  /* This is a comment */ }
$error$
$end$
4141
 if ((($thread)) + @r8 << @rdx << @r10 | 0y10001 & -@r8 & ~@r8 | 14 >> 6 & -$teb & @r9 | @rdi & @r13 | $teb ^ @rax((@r13 + @rbp ^ +@rax | @rbp >> @rsp >> @rsp ^ @r13 & @rsp & +@rsi ^ @r9 & @rbx ^ $thread | @r9)  { test_statement(0x70A); val = @r13 >> +5 ^ @rsi & $thread ^ @r10 ^ @rbx | 0y1000 & $thread ; } else { test_statement(0x2049); }
$error$
$end$
4142
 if ($buffer << 0 << @r12 >> 5 >> @rbp >> @r10 & @r12 >> @r10 >> @rbp ^ ~$buffer << -@rax >> @r9 & $proc >> @r8 & @rsi ^ $proc >> 0xD & +$buffer | @rax ^ @rbx = $buffer << 0 << @r12 >> 5 >> @rbp >> @r10 & @r12 >> @r10 >> @rbp ^ ~$buffer << -@rax >> @r9 & $proc >> @r8 & @rsi ^ $proc >> 0xD & +$buffer | @rax ^ @rbx)  { test_statement(0x13E8); } else { test_statement(0xB48); }
$error$
$end$
4143
 if (@r8 + @rbp ^ @rdi << @rbx & @r11))@r8 + @rbp ^ @rdi << @rbx & @r11)  { test_statement(0x1D53); ;  while  ($proc | @rsp = $proc | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif ($proc << @rdi >> @rax & @rsp & @rbx ^ @r10 | @rsi & @r10 & @rdi ^ @rsp & +@rsi | @r9 & @rbx ^ $thread ^ @rdx(($proc << @rdi >> @rax & @rsp & @rbx ^ @r10 | @rsi & @r10 & @rdi ^ @rsp & +@rsi | @r9 & @rbx ^ $thread ^ @rdx) { test_statement(0xE23); }
$error$
$end$
4144
 if (@r8 << $ip & $proc << @rbp >> @rdx ^ 4 << @rdx >> 0x13 & -@rbp >> @rsi & +$buffer & 16 | @r11 << ~@rdi >> $teb ^ @r9 >> @rdi & -$thread & 0n17)@r10 + 0y10011 << 0y110 >> @r10 << $thread & 11 << +$ip | -@rsi >> @rbx >> $buffer & 0xD & $thread)  { test_statement(0x14CC); val = @rbp ^ @rbx & @rdx | @rsp & @rbx ; } elsif (@r10 >> (@r13) ^ $proc >> @r9 ^ $buffer & @r8 ^ ~@rax ^ @r9 >< 0xD << @rsi >> -@r9 ^ $teb >> $ip & ~@r12 ^ @rdi & @rdx | @r11 >> $teb & $thread) { test_statement(0x1C01); } elsif (@r11 >> @r11)3 >> @rdi | $buffer ^ -15 | $thread | @r8 | $teb) { test_statement(0x63A); }
$error$
$end$
4145
 if ($proc + @r8 & @r9 << @r10 ^ -@rsi << @r9 & @rsp >> @r9 ^ @rdi >> $teb ^ +$buffer ^ @r13 ^ 0y10011 != $proc + @r8 & @r9 << @r10 ^ -@rsi << @r9 & @rsp >> @r9 ^ @rdi >> $teb ^ +$buffer ^ @r13 ^ 0y10011)  { test_statement(0x904);  // /* This is a comment   if ($buffer | @rsi | @rdx ! @rsi)  { test_statement(0x2592); } } else { test_statement(0x26FB);  break; }
$error$
$end$
4146
 if (@rbp << $teb & @r9 << @r9 & @r10 ^ @r13 >> -$ip & -@rsi >> @r12 @rdx + @r11 << @r8 << $ip >> @r9 ^ $proc << $buffer & @rax >> $teb & $buffer ^ $teb >> @r12 & @r8 ^ @r13 ^ $ip ^ @rsi)  { test_statement(0x25CC); } elsif (@r13 & ~$teb >> @r9 & $thread | @rbx >> @r11 & @r8 ^ -@rsp & @rax | $teb ^ $teb >= @r13 & ~$teb >> @r9 & $thread | @rbx >> @r11 & @r8 ^ -@rsp & @rax | $teb ^ $teb) { test_statement(0xD0E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ^ +-~$teb | 0 > -@r11 | $teb | @r9) ; } elsif (0y1000 >> @rax ^ $proc & $thread ^ $buffer | 0n4 & ((0y10011)) ^ $buffer ^ @rax ; @r12 >> $ip & @rax ^ @r10 & +$thread ^ $proc ^ -@r8 | @r12 ^ @r8) { test_statement(0x1A7C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rdi | 0y1)$thread | $buffer) ; val = 0x2 ;  for (val = 10; @rsp > @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp & @r11((@r10 & @r10 | $teb ^ @rbp | 0x12) { test_statement(0x263C); } elsif (@rsi ^ 0n4 | (($ip)) | 21 ; ~@rdi ^ $teb | @rbp | @r11) { test_statement(0xA2D); } elsif (@rsp | 11 != @rsp | 11) { test_statement(0x1AAB); ;  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer(($buffer) ; } elsif (+-$ip != 0n9) { test_statement(0x43B); } else { test_statement(0x23E2);  This is a not opened comment */ }
$error$
$end$
4147
 if ($thread >> 0y11 << @rax >> @r9 ^ @r8 << -@r9 ^ @r10 >> $buffer & +$thread & @rbp | 0xC << @rsi & @rsp & 0x11 & @r8 >< +@rbp << @r13 << @rbp >> ~23 >> @r13 >> $ip ^ 0n2 >> @rsp | $thread)  { test_statement(0x204A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 <= @r9) ; } else { test_statement(0x1A09);  break;  /* This is a comment */  break; }
$error$
$end$
4148
 if ($ip << @rdx >> @rdi ; $ip << @rdx >> @rdi)  { test_statement(0x21F4);  /* This is a not closed comment } elsif ($buffer >> @rbp >> -@rsp ^ ~@r12 < 13 >> @rbp & @r13 & @r13 & $thread ^ 0y10000 >> $proc) { test_statement(0x14A2); }
$error$
$end$
4149
 if (0n3 << $thread >> @rbp ^ @rsi >> @rdi & $teb & ~@r10 & @r8 ^ @r11 >> @rax(@rdx << ($thread) << @r8 >> @rbx >> $ip >> @rsi & +@rsp ^ $thread | @rsp >> ~@r9 ^ @r12 >> ~@rbx & @rbx & ~@r13)  { test_statement(0x26A4);  for (val = 10; +@r12 & @rsp ^ $buffer ^ $ip +@r12 & @rsp ^ $buffer ^ $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r8 ^ @r13 | -@rax | @rbx))0x2)  { test_statement(0x2D); } elsif (@rax(@rax) { test_statement(0x2101); } elsif ($buffer @rdi) { test_statement(0x11EF); } elsif (~12((~12) { test_statement(0x1DD2); } elsif (+5 != @rbx) { test_statement(0xCB3); } else { test_statement(0x794); } } else { test_statement(0x1299); }
$error$
$end$
4150
 if (@rbp + @rdi << +@r8 << 0y0 >> ($ip) << @rax >> 1 & @r12 >> @r8 >> @r10 & @rbp ^ @r10 << 5 >> -0y10011 >> @r12 & @r9 >> $thread ^ @r9 >> @rsi | +(14) << @r13 >> @rax >= @rbp + @rdi << +@r8 << 0y0 >> ($ip) << @rax >> 1 & @r12 >> @r8 >> @r10 & @rbp ^ @r10 << 5 >> -0y10011 >> @r12 & @r9 >> $thread ^ @r9 >> @rsi | +(14) << @r13 >> @rax)  { test_statement(0x1052); } else { test_statement(0x10EB);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 | @rdi != 17 | $thread) ; }
$error$
$end$
4151
 if (11 + @r10 << ~$teb >> $buffer << 0xF >> $buffer & @rdi | @r9 << 0y111 | -$buffer & @r13 | $ip & +-@r10 | $teb ^ ($ip) == @r13 ^ @rsp >> $proc | @r12 ^ 0y1110 >> @rbx | @rax ^ 0x6 & @rbp ^ @rsi ^ 0x11 | 0n15 ^ -(@rsi) ^ 0n19)  { test_statement(0x1632); } else { test_statement(0x15DA); }
$error$
$end$
4152
 if (@rdi + @r11 << @r9 & @rsp >> $proc | $proc << @rdx >> 0n0 >> @rax & -@r10 ^ @r9 >> @r12 | ~0y101 & @rbx & +@rsp ^ @r12 ^ +@r11 ^ @rdx | @rbx & @r8 ^ @r11(~@r8 << @r8 << @r8 >> $proc >> 0x10 & @r11 << @rdi >> @r13 >> @rsi | -$proc << 0n8 >> 0x1 >> @r11 & 0xC >> @rbx & @rsp & $thread)  { test_statement(0x1896);  This is a not opened comment */  for (; $proc ^ @rsi))@r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax | @r9)@rax | @r9) ; }
$error$
$end$
4153
 if (@rdi + 0y1110 << @r9 & (-(@r11)) & 0n1 >> @r12 <= 0y1110 + $thread << $buffer)  { test_statement(0x278); }
$error$
$end$
4154
 if ($ip << @rbp << @rbp >> 0y1110 << @rbx & @rsi >> +7 >> 16 ^ @rdx >> @rdx >> $proc | @rdx << @rdx >> @r10 & @rsi >> (@rax) ^ $teb >> @r10 & @r8 == @rdi >> @r12 << @r10 >> @rdx ^ @r9 >> @rax)  { test_statement(0x1509);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax & (@r10) ^ 0n15(((@rbx)) ; } elsif ($thread >> -0x11 & $ip >> 7 & $thread > $thread >> -0x11 & $ip >> 7 & $thread) { test_statement(0x273);  break; } elsif (20 >> @r11 & 21 & @r8 ^ @r9 & @r9(20 >> @r11 & 21 & @r8 ^ @r9 & @r9) { test_statement(0x1AA7); } elsif ($proc & @rax | @r9 ^ 0n3 <= @r11) { test_statement(0x1109);  // /* This is a comment   for (val = 10; @r13 > $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   for (; @rsp)@rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4155
 if (2 >> @r9 >> @rbx >> @rdx ^ +@rax >> @r8 >> @rdx & -@r11 & @r13 & @rsp ^ @r11 & $proc = 15 | @rdx << (@rax))  { test_statement(0x18EF); } elsif (@r12 << $buffer & @rdx >> -~@r9 ^ @rsp | -$proc >> @rbp & @rdi & @r8 > @r12 << $buffer & @rdx >> -~@r9 ^ @rsp | -$proc >> @rbp & @rdi & @r8) { test_statement(0x478);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n8 ^ @rsp))0y1000 | @r8 | @r12) ; } else { test_statement(0xA88); }
$error$
$end$
4156
 if ((@r10) + @rbp & @r13 >> 3 & @rbx >> @rbx & @rsp & @rax | $buffer & @rax & @r8 & @r9 ^ @r10 & 0n18 ! (@r10) + @rbp & @r13 >> 3 & @rbx >> @rbx & @rsp & @rax | $buffer & @rax & @r8 & @r9 ^ @r10 & 0n18)  { test_statement(0x2351);  for (val = 10; @rsi & 0y10001)@rax & 0y0 ^ $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x5 << $thread >> +@rbx & @rbx >> @rdx | @rbp & @rax & @r11 ^ $ip ^ +@r9 | @r13 ^ 14 ^ -@r11 | -$ip ^ @rsp = 0n15 & @rbx >> @rax | @rbp >> @r11 ^ @rax | (@r12) | $teb | @rsp | @r12) { test_statement(0x1F2B);  while  (@rax ^ $thread == @r10 ^ @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
4157
 if (@r11 << $teb >> @r13 >> @r12 ^ $ip << (@r12) == @r11 << $teb >> @r13 >> @r12 ^ $ip << (@r12))  { test_statement(0x2F9); } elsif ($thread << ~@rsp >> @r13 >> ~@r11 & -$teb >> @rax ^ $buffer >> $teb ^ -@rbp & @r12 ^ ($teb)))+@rdx >> @rsi & (@rsi) >> @rsp & @r11) { test_statement(0x600);  break; } elsif (@r13 >> ~0y1011 ^ 0y10001 & $buffer ^ @rsp ^ $teb ! @r13 >> ~0y1011 ^ 0y10001 & $buffer ^ @rsp ^ $teb) { test_statement(0x8F6); } elsif ($teb & @r11 > $teb & @r11) { test_statement(0x1C11);  /* This is a not closed comment  /* This is a not closed comment } elsif (0x8 ^ @rsp < -@rbx | 10 | @rax) { test_statement(0x7DB); } elsif (@rsp | @r11))$proc) { test_statement(0x372); } elsif ($ip)@r8) { test_statement(0x125D); }
$error$
$end$
4158
 if (@r11 + (0n14) >> $proc >> @rbx 2 >> @r13 << $ip | (@rax) | 0x12 >> @r10 & ~@rdi | 13 ^ @r12)  { test_statement(0x1ACD); } elsif (+@rbx >> @rbp >> +@rax & 16 & @r8 & @r11 ^ $teb >> $teb & 0x12 & -$ip)+@rbx >> @rbp >> +@rax & 16 & @r8 & @r11 ^ $teb >> $teb & 0x12 & -$ip) { test_statement(0x250F); } elsif ((@rsp)(((@rsp)) { test_statement(0xD4A); } elsif (0y1001 | ~@r13 >< 0y1001 | ~@r13) { test_statement(0x2311);  for (; @rax(@rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (-@rbx ^ @rdx | @r13 | 0y0 >< $buffer ^ @r10 | 0xD) { test_statement(0x23DC);  break; } elsif (@rsi < @rsi) { test_statement(0x1983); }
$error$
$end$
4159
 if (@r10 & @r13 >> $thread & $buffer ^ @rbp << @rsp(@rbp ^ 0xE << @rbp >> @rdx | 0n9 >> @rsp ^ @r13 & @r12 & -$ip ^ @rbx | @r10 >> @rsp & ($proc))  { test_statement(0x18EE);  This is a not opened comment */  break; } else { test_statement(0x1CB4); }
$error$
$end$
4160
 if (@rax << @rax << ~$teb >> @rdi << @rdi >> @r8 & @rdi >> @r11 | +17 >> @r13 >> 0y10010 | ~@r13 >> 0n8 ^ @r10 | 0xC & $thread ^ 0y1011 ^ @rbx)@r12 + @rsi << @rbp << ~@r13 >> (14) << $proc >> $proc & @rdi << 0xD >> $buffer >> 6)  { test_statement(0x2028); } else { test_statement(0x32E);  /* This is a comment */ }
$error$
$end$
4161
 if (@rax ^ @rsi << $thread >> @r8 >> $teb & @rbx >> @rbx == @rdx >> $thread >> $ip & $teb << @r13 >> @r8 ^ @r9 << 0y1 >> @rbp >> 0n10 | 0x13 << 0x5 >> $teb | @r9 ^ 0n18 | (@rdi) & @rax)  { test_statement(0x1AF); } elsif ($thread << (@rbp) >> -@rsp & -@rbp | @r8 >> @rdx & @rdx & @r8 | @rax | 0x1 | @rsp | 0y1110 == $thread << (@rbp) >> -@rsp & -@rbp | @r8 >> @rdx & @rdx & @r8 | @rax | 0x1 | @rsp | 0y1110) { test_statement(0x13A);  for (val = 10; $ip ^ @r13 < $ip ^ @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~-$proc >> @rax & $thread ^ @r13 & @r11 | 7 & 0x0 < ~-$proc >> @rax & $thread ^ @r13 & @r11 | 7 & 0x0) { test_statement(0xFDC);  if (@rsi ; @r8)  { test_statement(0x2AB); } else { test_statement(0x14E3); }  This is a not opened comment */  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~(+@r11)(~(+@r11)) ; } elsif (@rbx | ~@rbx ^ -@r13 | @rbp > @rbx | ~@rbx ^ -@r13 | @rbp) { test_statement(0x90F);  /* This is a comment */ }
$error$
$end$
4162
 if (+@rdi + @rsi <> ($teb) << @rax << @r10)  { test_statement(0x454);  break;  This is a not opened comment */ }
$error$
$end$
4163
 if (~@r13 & @rdx >> @r12 & @rax >> $buffer ^ $buffer << @r9 | $ip << 14 & @r12 >> @rbx ^ $thread >> @rdi & $buffer & $teb | $teb >> -+@rbx & 20 ^ @rbp & 0x8 >< ~@r13 & @rdx >> @r12 & @rax >> $buffer ^ $buffer << @r9 | $ip << 14 & @r12 >> @rbx ^ $thread >> @rdi & $buffer & $teb | $teb >> -+@rbx & 20 ^ @rbp & 0x8)  { test_statement(0x8C1);  if ($proc | +@r8 ; $proc | +@r8)  { test_statement(0x273); } elsif ((@rdx) | @rbx = @r13 | $proc | $buffer) { test_statement(0x236D); } elsif ($proc | 0n19 ; $thread) { test_statement(0x9C7); } elsif ($ip(0n13) { test_statement(0x1F23); } }
$error$
$end$
4164
 if (@r12 << -0y101 << $teb & +$proc << @r12 >> -@rsi & @rbp & @rbp | @rdx << @rdi >> 0y101 & @rax & @r8 ^ (@r10) >> $buffer @r12 << -0y101 << $teb & +$proc << @r12 >> -@rsi & @rbp & @rbp | @rdx << @rdi >> 0y101 & @rax & @r8 ^ (@r10) >> $buffer)  { test_statement(0x634); }
$error$
$end$
4165
 if (@r8 << @r10 << @rax >> @rsp << $ip ^ ~+@rsp | @rax >> $proc ^ $teb | @r9 ^ 0n9 | $proc ^ 0x0 | @rsi ^ @rbx | @rbx | @rsp ; @r9 + @r9 >> @r9 << @rdi >> @rdx)  { test_statement(0x1CFB); }
$error$
$end$
4166
 if (@rdx >> @rdx & $buffer << @rax >> @rax | @r9 << 4 & @r11 >> @r13 & 0n5)0n10 + @rbx << @r10 ^ @rdi & 0y1000 & 0n7)  { test_statement(0x26C4); } else { test_statement(0x17FF); }
$error$
$end$
4167
 if (@r10 ^ @rbx << @r9 >> $buffer 2 & @rsi)  { test_statement(0x16C2); }
$error$
$end$
4168
 if (~$buffer + @rsp << $proc ^ @r10 << @r8 >> -0y1001 >> 13 | $teb << @rbp & @r12 >> @r10 | @r12 | @r13 ^ $teb ^ $buffer | @rbp ^ $teb | 0y100 | 0n8 <= ~$buffer + @rsp << $proc ^ @r10 << @r8 >> -0y1001 >> 13 | $teb << @rbp & @r12 >> @r10 | @r12 | @r13 ^ $teb ^ $buffer | @rbp ^ $teb | 0y100 | 0n8)  { test_statement(0x99A);  while  (@r13 & $proc ^ @r10 ^ ~@r12 | @rax ^ 0y1011 <= @r13 & $proc ^ @r10 ^ ~@r12 | @rax ^ 0y1011)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($ip($ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x6CE); ; }
$error$
$end$
4169
 if (~$teb + ~@rdx)~$teb + ~@rdx)  { test_statement(0x136F); } elsif ($teb >> +$ip ^ @r9 | @rdi & @r9 & @rbp ^ +@r8 & @r10 | @r9 | @r9 ^ 0n13 >= @r11 << 12 >> 0y111 >> 0n15 | -@r11 >> @rsi ^ $thread | ($proc) & 0y10000) { test_statement(0x249F);  while  (@rbx ^ (0x1) >= @rbx ^ (0x1))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rax | @r11 | @r10 ;  while  ($thread <> $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (-$teb = +4)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } else { test_statement(0x1BCA);  while  (@r9 ^ @r10 >< @rbx ^ $buffer | -@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4170
 if ($teb >> @r13 << @rdx | @r10 & 0n8 >> $ip & 0n8 ^ @rax >> 4 ^ +@rdi & @rsi ^ @rbp ^ $buffer > @rbx << ~@rdx)  { test_statement(0x16B6); }
$error$
$end$
4171
 if (0y0 + +@r12 >= 0y0 + +@r12)  { test_statement(0x17E3); } elsif (0y11 << $proc & $teb >> +@r11 & @rbx == @r9 << 0y10 & 6) { test_statement(0x1E33);  for (val = 10; @r10 ^ @r12 > @r10 ^ @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (-(@rdi) | 3 != @rsi)  { test_statement(0x25DF); } elsif (@r9 ; @r9) { test_statement(0xF8A); } } elsif (@rsp & $ip | (-0xB) | ~@rbp((@rsp & $ip | (-0xB) | ~@rbp) { test_statement(0xA7A); } else { test_statement(0x1807); }
$error$
$end$
4172
 if (@r12 << (@rdi) <= @r9 + @rax << $buffer << @r10 & 0n12 >> @rdx ^ @r12 >> 0x3 & @rbp >> @r9 & -$buffer | -@rax << @rsi >> @rsp)  { test_statement(0x5A3);  break;  if (20 ^ @r11 | 0n7 | $thread(20 ^ @r11 | 0n7 | $thread)  { test_statement(0x81B); } elsif (@r8 @r8) { test_statement(0x396); } elsif (0xB < ~$thread) { test_statement(0x1328); } } elsif ($teb & @rdi ^ @r13 >> @r10 & $thread ^ $proc ^ @r8 | @rsi >> ~@rdx & @r9 & 0x1 ^ 0y0 ^ ~@rdx | @rsp ^ $proc | $proc ^ $ip | @r10 | @r10((0n3)) { test_statement(0xEF9);  /* This is a not closed comment } else { test_statement(0xB4D); }
$error$
$end$
4173
 if (0x11 >> @rax << $proc & @r10 << @r12 >> @rsp >> @r13 & 13)@rdx ^ @rbx << $teb | @rbp << @rbp >> @r8 >> @rax & @rdx >> @r8 ^ 0x3 >> +@rdi)  { test_statement(0x879);  if ((@r12) ! (@r12))  { test_statement(0x249D); } elsif (@r8 ^ @r11 | (0y10010) >= @r8 ^ @r11 | (0y10010)) { test_statement(0x132F); } } elsif (0n19 << (0y100) >> @rsi ^ $teb >> @r12 ^ @r9 ^ +@r13 ^ @rbx | 12 ^ 3 & @r10 | -0y0 & @rdx ^ $buffer ^ $ip | @r8 | 0xD(0n19 << (0y100) >> @rsi ^ $teb >> @r12 ^ @r9 ^ +@r13 ^ @rbx | 12 ^ 3 & @r10 | -0y0 & @rdx ^ $buffer ^ $ip | @r8 | 0xD) { test_statement(0x7CC); }
$error$
$end$
4174
 if (--@r10 != 0x8 + @rsi << @rsi >> @rbx & $thread << @r9 | 0y111 & @r13 & 0n9 ^ 1)  { test_statement(0x1263); }
$error$
$end$
4175
 if (0xF & 0y10001 >> @rdi & ~@r9 & @r11 & +$thread | @rdi >> @r13 >> @rdi & @rbx & ($thread) & @rsi ^ @rsp & @rbx & $buffer == @r12 >> @rdi >> @rdx >> 0n3)  { test_statement(0x1E0B);  while  (@rbp | @rbp ^ -@r9 <> @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  /* This is a comment */  // /* This is a comment  } else { test_statement(0xC8);  /* This is a not closed comment }
$error$
$end$
4176
 if (0x2 + 0n4 << $ip & @rax >> @r13 >> @r13 & -@rdi >> @rdx & 7 | @rax << @rax ^ +$proc >> 0y10010 ^ +$proc >< 0x2 + 0n4 << $ip & @rax >> @r13 >> @r13 & -@rdi >> @rdx & 7 | @rax << @rax ^ +$proc >> 0y10010 ^ +$proc)  { test_statement(0x1675);  This is a not opened comment */ }
$error$
$end$
4177
 if ($ip << @rbp << 0n11 >> 0xF | (@r10) << 0n2 & @r9 ^ @r9 & 7 ^ @r11 | (@r12) >> 0n10 & 0n9 <> 0y111 + $thread << @rsi ^ @rdx << $teb >> @r9 >> @rbx & $teb >> @rdx & ~0n14 & +@rbx | @rdi >> @rsp >> $teb & @r8 >> @r8 | 0n17 | @rdi & $proc | @r10)  { test_statement(0x24F0);  /* This is a not closed comment } else { test_statement(0x44C); }
$error$
$end$
4178
 if ($buffer << @rsp >> @r8 << @r11 & @rdi >> $teb >> 23 & @r13 >> $thread & 2 & 0y1100 | $thread << @r8 | @rbx & @rsi & $thread ^ @rsi & @rdi ^ @r8 <> @r12 + $ip >> @r8 >> $proc >> @rbx ^ @rdx << $teb & @rsi | @r8 >> @r8 & $thread & $buffer)  { test_statement(0x6F5); } elsif (0x8 << @rsp >> $buffer)@r10 & @r12 & @rdx ^ @r12 ^ @r9 | @r11 >> $buffer ^ @r8 | @rbx & (@r10) ^ 0y1010 | @r13 ^ @rsi) { test_statement(0x267B);  This is a not opened comment */  if ($teb | $buffer ; $thread)  { test_statement(0x1E5E); } } elsif (@r9 >> $teb & 0n11 ^ @r11 & @r12 ^ @r13 ^ @rdi | $ip & @rsp | @r8 ^ @rbp)@r8 >> @rdi ^ $proc & ~@r8 | 0x11 & @rax | @r12 | +@rax | -@rdx) { test_statement(0x159F); } else { test_statement(0xAF4); }
$error$
$end$
4179
 if (@r9 << +@r11 >> @r11 ^ @rax & @r11 >> @rdx & 0n18 & @rax ^ $proc & @r9 | @rdi >> @r13 ^ @rsp >> $thread <= @r9 << +@r11 >> @r11 ^ @rax & @r11 >> @rdx & 0n18 & @rax ^ $proc & @r9 | @rdi >> @r13 ^ @rsp >> $thread)  { test_statement(0xD4A); } elsif (@rdx >> @r9 ^ @rdx >> (-$thread) & @r10 & 3 | 0y111 >> @rdi | $ip & @rdi | 0y10000((@r10) { test_statement(0xB85); }
$error$
$end$
4180
 if ($teb + $proc ^ $teb & +~+@rbp >> @r8 & 0n1 & @r12 ^ @r12 & @rdi | $proc >> @r11 >> @r9 | 0y1011(($teb + $proc ^ $teb & +~+@rbp >> @r8 & 0n1 & @r12 ^ @r12 & @rdi | $proc >> @r11 >> @r9 | 0y1011)  { test_statement(0x2231); } else { test_statement(0x262B); }
$error$
$end$
4181
 if (0y110 >> @rax << @rdi & @r10 & 20 | @rdi << 0y1000 | @r10 | @rax & ~@rdx)0xA + @rbp << 23 >> @rdi >> @rsp ^ @r13 >> @rax >> $thread & @rbx >> @r11 ^ @rsi & $teb | -$thread << $teb & @rsi & @rsi & $buffer ^ @r10 >> ~@rdx & @rax & $teb ^ @r12 & @r8 ^ $proc)  { test_statement(0x1B22); } elsif ($teb << 7 >> ~@rsi & $buffer & $buffer ^ @r12 >> (@rdx) & (0n14) > ($buffer) << -@rsi >> @rdx >> $ip | 0y10010 & @r9 & ~$proc ^ @rbx & @r11) { test_statement(0x1D2); } elsif (@r9 >> $buffer & $proc ^ @rax & ~$proc ^ ($ip) = $thread >> (-(@r10)) & -~$teb | @rdi | @r12 | 0y1110) { test_statement(0x1299); } else { test_statement(0x596); }
$error$
$end$
4182
 if ((0n0) >> @r9 & @r12 << 0xA >> @rax & 0y1110 >> @r13 & @r12 ! (0n0) >> @r9 & @r12 << 0xA >> @rax & 0y1110 >> @r13 & @r12)  { test_statement(0xA03); } else { test_statement(0x1C3C); }
$error$
$end$
4183
 if ($thread << $teb & $teb >> $thread & ~@rsi >> 0y1100 ^ 0y1111 ^ +@r11 & @rbp ^ @rbx <= $proc << @r11 << $thread & $teb << $buffer >> @rdx >> @r11)  { test_statement(0x2285); } else { test_statement(0x2E1); }
$error$
$end$
4184
 if (~$teb + @r10 << (+@rax) & 0y11 << @r11 & @r12 >> 0y10011((@rsi + @r10 << $thread >> @rsi << 0y1000 >> +@r12 >> 0x8 ^ $proc & @r10)  { test_statement(0x1532); } else { test_statement(0x17D8); }
$error$
$end$
4185
 if (@rbx << +0n14 >> 0y1010 >> 0y100 & $ip << @rbp >> @rsi ^ @r8 << (+@rax) & @rax & +@r12 & @r8 ^ @r12 >> 0n4 | @rsp << @r12 & @rsi >> +$teb & @rsi < @rbx + @r10 << 21 << @r9 & @rbp << 0xF >> @r13 ^ @rbx >> (4) >> $ip & @rsp >> @r11 & 1 ^ $teb >> -0x3 & $buffer ^ @rax & 20 ^ $proc ^ 17)  { test_statement(0xBD6); ; } elsif (@rdx << @r9 >> $proc))@rbx << @rbp & @rbp & 0y1100 & @r12) { test_statement(0x1B5A);  for (; @rdi >< ($buffer);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x57F); }
$error$
$end$
4186
 if (0x10 << 4 ^ 0n8 << @rdx >> @rbp | 22 ^ @r10 >> @r9 ^ $proc & @r11(+@r12 + ~0y100 << ($buffer) << @r9 >> $buffer | @rdi >> $buffer >> @r10 & 0y11 & $thread)  { test_statement(0xA99);  /* This is a not closed comment ; ; } else { test_statement(0x1E61); }
$error$
$end$
4187
 if (0x10 << @rbx << @r12 >> @r11 << ~(-@r9) >> @r10 >> 0n12 & 0 & $ip >> @rsi ^ @rbp << @rsp >> $proc ^ @rsi >> $teb | $ip << -@r9 >> $teb >> (@rbx) & @rsp >> 11 ^ @rdx >> @r8 & @rdi ^ @rdx | +0n14 >> 0y100 & @rsi ^ $ip ^ 0y1010 ^ @rsi = @rsi << (@rdi) & $buffer << $proc & $thread >> $thread & @r11 ^ @rax << $proc & (@rsp) | $buffer << 0n12 >> @rdi ^ @rsi >> +@r10 & @r9 & @rbx)  { test_statement(0x2082);  /* This is a not closed comment } else { test_statement(0x1811); }
$error$
$end$
4188
 if (@r8 + @r11 << -$teb << @rsi >> $proc >> @rax)@r8 + (0x7))  { test_statement(0xBA3);  /* This is a not closed comment } elsif ($buffer << @rbx >> +@rsi >> 0n7 <> $buffer << @rbx >> +@rsi >> 0n7) { test_statement(0x2256); } elsif (@r11 >> (+@r8) | @rdi & @r12 ^ @r12 ^ $thread | 0n19 | $proc | 22 21 >> @r9 & $ip & @rsi ^ $thread & @r12 ^ @rax) { test_statement(0x36F);  while  (@r11 | @rdi))$teb | 0n0)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi <> @rdi) { test_statement(0x136C); } elsif (@rbp((@r12 | @r12 | @r13) { test_statement(0x2680); } elsif ($thread | @rdi($proc | @r11) { test_statement(0x269F);  for (; $teb <> @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r9))@r9)  { test_statement(0x609); } }
$error$
$end$
4189
 if (0x3 | 0x8 << @rax ^ @rsi >> @r12 & ~@rbp < @rbx + @rdx >> $thread << @r13 ^ @r13 << 0y1 ^ @r8 >> 0y10011 ^ @rsp)  { test_statement(0x1A54);  for (val = @rax | @r8; @rsi & @r9 ^ ~0y1000))@rsi & @r9 ^ ~0y1000;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1178);  This is a not opened comment */  for (val = 10; ~$teb == 0y10 | $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rsp((@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4190
 if (~@rdi + @rax << @rbx & @r13 & @rdi >> 0n4 | $ip << @rsp <> @rsp ^ ~11 >> (@r13) | @rdx << +($teb) >> $teb & -@r9 >> @r12 ^ @rsi >> @r13 & @rax ^ @r12 | @r8 & $teb & $ip)  { test_statement(0x185); } elsif (@r11 >> 13 & @rax & @rbp))@r13 >> @rax | -$teb | @rdi & -$thread ^ 0x8 ^ @rax) { test_statement(0x1625); }
$error$
$end$
4191
 if (@rbp << 0y1010 << @r12 >> 21 >> 0y10 >> @r10 & ~$teb << @r10 ^ 0x6 << $buffer >> $teb >> +@r11 ^ $proc >> @rsp & -$ip | $buffer & @rsi >> 0x9 & @r13 ^ @r12 & @rdi & $buffer = @rsp >> ~0n3)  { test_statement(0x1A00); } elsif ((@r10) << @rbx & $thread & $thread >< (@r10) << @rbx & $thread & $thread) { test_statement(0x1C4D); } else { test_statement(0x1142); }
$error$
$end$
4192
 if (@r11 + @r10 & -@r9 << 0x2 & $proc)(-@rbp) + @rsp << @rbx << $buffer >> 0n3 << @rsp & 0n10 << @r8 >> $buffer)  { test_statement(0x1D67);  while  ($ip | $teb != 0n11 & @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
4193
 if ($thread + $thread << @r9 & @rdi >> 6 >> @rbp & @rax | -$thread << -$thread > @rsp | 0n12 << +@rbx >> @r13 ^ @r11 >> $teb & @rbp ^ @r10 & $ip)  { test_statement(0x486);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 & $proc ^ @r11 ^ @rdx | 0x9 | 0x10 @r12 & $proc ^ @r11 ^ @rdx | 0x9 | 0x10) ;  while  (@rsi | $proc((@rsi | $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4194
 if (0y11 & @rbx << $ip ^ @r11 << 23 >> ($buffer) >> @rbp & $thread >> +0xB & @r13 ^ 0n13 >> @rax != 0y11 & @rbx << $ip ^ @r11 << 23 >> ($buffer) >> @rbp & $thread >> +0xB & @r13 ^ 0n13 >> @rax)  { test_statement(0x1A61); ;  /* This is a not closed comment } elsif ((@r10) << $buffer ^ @rsi & @rbp & 0y10 | (@r11) | +@r13 & +0n0 ; @rbx << @r8 >> @rsp >> @rsi | @rdi | $teb & 20 | 20 ^ $proc | @rdx) { test_statement(0x144F);  This is a not opened comment */ }
$error$
$end$
4195
 if (@rdi + @r9 & @rbx << +$ip >> $ip >> @r12 & $proc & @r10 ; @rax + @rdx << @rsp >> @r9 & +@rdi << $thread & $buffer ^ $proc >> @rbx >> $proc ^ @r8 >> @r11 ^ @rdx & ($proc))  { test_statement(0x11B6); } else { test_statement(0x738);  /* This is a comment */ }
$error$
$end$
4196
 if (@rdi >> @r11 | @rsp ^ $thread((0n6 >> -@rax << @r9 >> @r12 ^ 15 << 0n8)  { test_statement(0x1D6F);  /* This is a comment */ } elsif (@rax >> ~@rbx >> @rsp ^ ~($thread) ^ @rsp & +(@rsi) ^ @rsi | @rbx >> $ip | $buffer & $buffer ^ 0y1 ^ @rbx | $thread ! @r11 << $buffer >> (@rbx) & $proc >> @rbp ^ @rdx >> @r13 ^ ~+@rbp & @r8 ^ 0y0 | 0n5 | @r10 | $proc | +@rsp) { test_statement(0x26E); } else { test_statement(0x7D1);  while  ($ip > @r9 ^ $proc | @r11 | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4197
 if ((~11) + @rax << @r8 << @rsp & 1 << (-@rbx) & (@rdi) | (0x9) << 0n12 >> 0y11 >> @rax & @rbp >> ~@rbx | @rdx >> @rbx | 0x7 & @r8 | @rax ^ ~$proc(((~11) + @rax << @r8 << @rsp & 1 << (-@rbx) & (@rdi) | (0x9) << 0n12 >> 0y11 >> @rax & @rbp >> ~@rbx | @rdx >> @rbx | 0x7 & @r8 | @rax ^ ~$proc)  { test_statement(0x2595);  This is a not opened comment */ }
$error$
$end$
4198
 if (22 + @r8 << @rsp >> $teb << @r8 >> 0y1000 >> $thread & $thread >> @rbx | @rdi >> $teb & @r12 >> +@rdx & +@rdi > $teb << @r13)  { test_statement(0x1E5A);  if (@r10 & @rdi ^ @r13 ! @r10 & @rdi ^ @r13)  { test_statement(0xB68); } elsif (@r11 ^ $proc | @rdx <> @r11 ^ $proc | @rdx) { test_statement(0x345); } } elsif (@rdi << $proc >> @r9 & $ip & @r9 ^ @r9 >> ~@r11 & $thread)@rdi << $proc >> @r9 & $ip & @r9 ^ @r9 >> ~@r11 & $thread) { test_statement(0x45D); } elsif (@r10 & $buffer & @r9 | $teb & $ip ^ 0x9 ^ @rsp | @r13 ; @r10 & $buffer & @r9 | $teb & $ip ^ 0x9 ^ @rsp | @r13) { test_statement(0x10E1); } elsif (@r11 & $buffer ^ 0xF <> @r8 | +@rax | -$buffer) { test_statement(0x811); } elsif (@rdx((@r10 ^ +(~$buffer)) { test_statement(0x1F19);  break;  // /* This is a comment  } else { test_statement(0x21B3);  while  (@rsp(($thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@r11 >= @r9 | @r13) ; }
$error$
$end$
4199
 if (0y0 + @r13 << @rax << $buffer >> @r13 & @r8 << @rbp & ++@r13 ^ $ip << @rbp & $teb | @r8 << @r12 >> (@rsi) | @r10 >> ($ip) & $teb & 0xD | @r11 & @rbp | -@r10 | $buffer >= 0y0 + @r13 << @rax << $buffer >> @r13 & @r8 << @rbp & ++@r13 ^ $ip << @rbp & $teb | @r8 << @r12 >> (@rsi) | @r10 >> ($ip) & $teb & 0xD | @r11 & @rbp | -@r10 | $buffer)  { test_statement(0x568); } else { test_statement(0x92B);  This is a not opened comment */ }
$error$
$end$
4200
 if ($buffer + @rax << @r8 << $teb >> @rbp << @rax & @r13 << @rbx ! $proc << @r8 >> @rsi << @r9 >> @rdx >> ~0y110 & @r8 >> $proc & @rax ^ ($buffer) & $buffer ^ $teb & @rbx & $ip ^ @rdi & $proc)  { test_statement(0xC33);  if (@rbp ^ @r11 | 0y101)@rbp ^ @r11 | 0y101)  { test_statement(0x6FD); } elsif ((+@rdx) | @r9 <> @r11 ^ $proc | @rsp | @rdi) { test_statement(0x41C); } elsif (+$proc | @rsp))(@r8) | @r8) { test_statement(0x1BBE); } } elsif (+@rdi ^ @rsi | @rsi & @r11 | $proc & $ip ^ $thread ^ @r13 | @r13 | @r12 != +@rdi ^ @rsi | @rsi & @r11 | $proc & $ip ^ $thread ^ @r13 | @r13 | @r12) { test_statement(0x25);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10((@rbp ^ @r8 | ~@rsp) ; } elsif (@rdx >> @r9 & @r9 & 0y1110 ^ @r11 | @rsp & @rdx $teb >> ~@r10 & @rsp & ~5 ^ 0x0 & @r10 ^ @rax) { test_statement(0xA75);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y110 > $thread | +@rdi) ; ; } elsif (@r8 & @r13 ^ @r12 | @r13 ^ 16 | $buffer | -+$thread != @rbp & @r12 ^ ~$thread) { test_statement(0x1E51); } else { test_statement(0x1A39); }
$error$
$end$
4201
 if (-0x12 + @r9 << @rdx & @rsp << 0x7 >> @rsp ^ @rdi << @rdi ^ @r9 >> ~$ip & @r8 ^ $proc(5)  { test_statement(0x1706); } elsif ($ip & $thread ^ @r10 >> @r12 ^ @rax & -$thread ^ @r11 ^ @r11 ! @r13 >> -@r13 >> $ip ^ $proc >> @rbx ^ $thread & $buffer | ($thread) ^ 0n3) { test_statement(0x1D3A); } elsif (0n15 >> 0n5 | @rax ! 0n15 >> 0n5 | @rax) { test_statement(0x1E3D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 | @r8 >< $teb | 0x12) ;  while  ($ip == @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx ^ ~$thread ^ @r11 <> @r11 & +@rbp) { test_statement(0x11D8);  /* This is a comment */ }
$error$
$end$
4202
 if (@r10 + @r11 >> $buffer >> $buffer >> $thread & ~$thread << @rdi & @r12 ^ @r9 & 0xA & @rsi ^ $proc & $teb & $proc != $thread + +$thread << @r10 & @r9 << 0n19 | $ip ^ $ip & 0y111 & @rax | 23 ^ @rsp & @rax ^ $teb ^ 0xF)  { test_statement(0x8C3); } else { test_statement(0x24EF); }
$error$
$end$
4203
 if (@r11 << 0n1 >> ~@rax >> ~@r8 ^ 13 & @rdx & @rbp & @rdx | @rsi & 0y1010 >> @rsp & -~@r9 & (@rax) ^ @rbx & $proc & $teb @r11 + @rbx >> 21 >> @rdi | $buffer << $ip >> $ip & @r9)  { test_statement(0x21A4); } elsif (@rax << @r9 & @rax >> @r10 ^ ($buffer) >> $teb & @r12 | @rbx & @r12 ^ @rbx ^ @r8 ^ $teb | @rax & @rdx | ~0y0 ^ ~@r9 | @r8 | +@rbp >= -$teb & $proc ^ @r11 >> @rbp | $thread ^ $buffer) { test_statement(0x110F); }
$error$
$end$
4204
 if (@rbp & -@rdi << @r12 >> ~10 >> 0y1010 | @rsi << @rbp >> $teb >> $teb & @r13 >> $buffer & @rbx & $proc ^ @rsp >> +@rsi & @r12 | $ip & @rax & @r8 ^ ~@r13 & @rdi | @r10 & (@r9) ^ @rbx | ~@rbx >= @rbp & -@rdi << @r12 >> ~10 >> 0y1010 | @rsi << @rbp >> $teb >> $teb & @r13 >> $buffer & @rbx & $proc ^ @rsp >> +@rsi & @r12 | $ip & @rax & @r8 ^ ~@r13 & @rdi | @r10 & (@r9) ^ @rbx | ~@rbx)  { test_statement(0x463); } elsif (+@rbp & ~-($ip) >> @r12 ^ @r11 & 0n7 & $ip ^ @rsp & @r12 ^ (@r11) | 0x5 >> $proc | 3 | ~@rbx ^ @rdi | 0xA = $teb) { test_statement(0xD71);  // /* This is a comment  } elsif (@r11 & 3 | -@r8 ^ 0x0 ^ @rdi | @rax ^ @r12 ! @r11 & 3 | -@r8 ^ 0x0 ^ @rdi | @rax ^ @r12) { test_statement(0x7F0); } elsif (@r12 ^ @r9 ^ @rdx < @rbx ^ $buffer | 21 | $ip) { test_statement(0x1687);  for (val = 10; @r12 ! @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0xB ^ ~@rsi < 0y1 | @rax | @r11) { test_statement(0x8D6);  while  (@rsi <= @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 | ($proc) <= @rdi | @r9) { test_statement(0x692);  if (@rbx(@rbx)  { test_statement(0x39F); } val = $proc ;  /* This is a not closed comment }
$error$
$end$
4205
 if ($thread >> $thread << @rax ^ @rdx << @r12 >> @r11 ^ $ip >> $proc ^ @r13 | @r10 ^ +(~@rsi) & @rsp ^ @rax))$teb + $ip << @rdi >> @rax << 0y110 >> @r11 ^ @r10 << @rdx >> ~@rsp & 0n14 >> @rbx ^ +@rbp >> @r9)  { test_statement(0x2592);  while  (@rax >= @r11 ^ @rbp ^ $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ val = @r9 ^ $ip ; } else { test_statement(0x3CE); }
$error$
$end$
4206
 if (@r10 << @rdx ^ @r12 & (@rsp) & @r9 & @r11 ^ $thread >> @r9 & -$thread & $proc ^ @rbp & @r13 | @rdx & $ip | @rdx & @rdi <> @r10 << @rdx ^ @r12 & (@rsp) & @r9 & @r11 ^ $thread >> @r9 & -$thread & $proc ^ @rbp & @r13 | @rdx & $ip | @rdx & @rdi)  { test_statement(0xBA1);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | $ip | @r13 | 0n0 == @rbp & 0x5 ^ -+@rdx ^ $thread | @rsp | @rsp | @rdx) ; } else { test_statement(0x1E4F);  // /* This is a comment   while  (@rdi | $buffer($teb | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
4207
 if (@rsi = @r11 & $teb << @r11 & 0n16 >> @r13 & $buffer & $proc ^ -@r9 >> @r12)  { test_statement(0x2154);  // /* This is a comment  val = 0x13 & @rbp ^ @r9 ^ ~$ip | @rdi ^ @r12 ; } elsif ($buffer << @r8 ^ ~-0x3 & $proc & @rsi ^ $proc & @rdx | -$proc >> 1 | 0n4 | $teb | @rsp == @r8 << $proc ^ @rsi) { test_statement(0xF42); }
$error$
$end$
4208
 if ($buffer | $buffer << @rsi >> 0n9 | $ip ^ @r9))0n19 + @r9 ^ @rdi & $thread)  { test_statement(0xD60); } else { test_statement(0x44A);  This is a not opened comment */  for (; 0n7))+@rbp | @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
4209
 if (@rbx << -@r10 & $ip & @r9 >> -+$proc & @rsi & @rsp ^ @rsi << -$teb >> 0n19 & $thread >> @rsi & $buffer & $buffer < 3 << @rsi << $ip & (@rdi) >> 0n11 >> @r11)  { test_statement(0xECC);  break;  This is a not opened comment */ } else { test_statement(0x120B); val = @rsi & @rsi | @rdi ^ @rbx ;  /* This is a not closed comment ;  while  (@rsp(@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($buffer((@rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
4210
 if (@r11 + $ip << @r13 << @rsi >> @rbp << 0y1000 >> ~@rbp & +@r12 >> $teb | $buffer ^ 0x3))@rbx + @rdx << -$teb << $ip >> 0y1110 >> (@rsi) >> (@r12) ^ $thread ^ ~@r11 >> @rax & @r8 & @r10 ^ $teb & @rsi ^ (@r9) ^ @rdx)  { test_statement(0x1343); } else { test_statement(0x1FFB);  // /* This is a comment   while  (~@r9 | +$thread))~@r9 | +$thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n2 != 0xF) ; val = @r13 ; val = @r11 ; }
$error$
$end$
4211
 if ($ip + @r9 >> 0n2 | -@r12 ^ $thread >> ($ip) | ~@r9 & 0y1110 & 0n8 ^ @r11 | @r8 ^ -$ip | 0n14 = $ip + @r9 >> 0n2 | -@r12 ^ $thread >> ($ip) | ~@r9 & 0y1110 & 0n8 ^ @r11 | @r8 ^ -$ip | 0n14)  { test_statement(0xC12);  // /* This is a comment  } else { test_statement(0x136C); }
$error$
$end$
4212
 if (+-@rdi << $ip <> 0y1100 << 0y1 << 0n11 & @r12 << (-@rbp) >> @r9 >> (@rsi) & (@r9) >> @r11 ^ $ip)  { test_statement(0x1C6D); } elsif ($proc << $buffer ^ @r10 & @r11 & $proc ^ -+$thread ^ @rdi ^ $buffer | $ip & 17 <= $proc << $buffer ^ @r10 & @r11 & $proc ^ -+$thread ^ @rdi ^ $buffer | $ip & 17) { test_statement(0x933);  break; } elsif (@r10 >> @r10 ^ @rax | -$thread & @rax ^ $thread | @rbp ; $thread & 0) { test_statement(0x78B); } else { test_statement(0x23C); }
$error$
$end$
4213
 if (@rax << @rax >> -@rdx << $buffer >> 21 & $buffer << @r10 ^ $buffer & $buffer >> @r10 & 0x1 ^ 0y110 ^ @rdi & @rdi | (@rbp) << $buffer >> @rbx >> 0y10 ^ 0n8 & @rbp & @r10 ^ 0xC & @rdx ^ @rsi | @r10 >> (0y10011) & @r10 ^ @rsi & -$teb)@r12 + @r8 << @rsi << @rax >> @r10)  { test_statement(0xCC0); } elsif (@rbp >> $ip >> 12 & 0y1100 >> +$proc | @r9 >> @r11 ^ +0y1111 & -@rax ; @rbp >> $ip >> 12 & 0y1100 >> +$proc | @r9 >> @r11 ^ +0y1111 & -@rax) { test_statement(0x6CC); @rax = @r9 ^ @r12 | $ip ^ @r12 | @r11 | 0n18 ;  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 >< 0n1) ;  for (val = 10; -@rdi((-@rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 >> @r13 >= $buffer >> @r12 & @r11 & @rsp ^ +0x10 & 0n11 ^ @r9 ^ (@r10) | @rdi & 0n11 ^ ~@rbx ^ $thread | @r9 ^ $proc | 0xC) { test_statement(0x19BB); } elsif (0xB | 0x11 | @rsp | @r13 > 0n11 & @rsp ^ @r11 | @r9) { test_statement(0x132E); } elsif (@r11 <= @r13 ^ @r9) { test_statement(0x916); }
$error$
$end$
4214
 if (0y10010 << @rdi << @r12 >> (@rbx) << @r13 == @r13 + +@rsp >> 11 & $teb << @rdi & $proc >> @rsp & @r10 & ($thread))  { test_statement(0x387); ; ; } elsif (@rdx << -0x2 >> $proc))@r10 << @r13 >> (@r8) >> @r12 | @r12 >> ~@rbp ^ @r12 & -+@rsi ^ @rbp | @rsp ^ $buffer) { test_statement(0x1CAC);  break; @rax = 5 | @rbx ;  /* This is a comment */  break;  break;  for (; +($thread) >< @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } else { test_statement(0x411); }
$error$
$end$
4215
 if ($teb << $ip << -@rdi >> 0 >= $teb << $ip << -@rdi >> 0)  { test_statement(0xE9E);  This is a not opened comment */ } else { test_statement(0x141C); }
$error$
$end$
4216
 if (@r12 << $teb ^ @r13 >> $buffer >> $proc ^ @r13 >> @r11 & @r11 & @r12 ^ +0y10000 | $proc << @r13 >> 0n6 | $thread(@r12 << $teb ^ @r13 >> $buffer >> $proc ^ @r13 >> @r11 & @r11 & @r12 ^ +0y10000 | $proc << @r13 >> 0n6 | $thread)  { test_statement(0x19A); } else { test_statement(0x960); }
$error$
$end$
4217
 if (@rsi << @r13 >> (@r11) << $teb >> @rsp >> @rax ^ 0x12 @rsi << @r13 >> (@r11) << $teb >> @rsp >> @rax ^ 0x12)  { test_statement(0x7B8);  This is a not opened comment */  if (@rax != @rax)  { test_statement(0x260B); } ; } elsif (@rsp ^ @rbx >> @rdi & @r13 & @rbp == @rsp ^ @rbx >> @rdi & @r13 & @rbp) { test_statement(0x203);  /* This is a comment */ } elsif (@r13 >> 0n12 ^ @rbx & @r12 | @rdi & @rsp != 0y0) { test_statement(0xF04); } else { test_statement(0x2142);  /* This is a not closed comment  This is a not opened comment */ }
$error$
$end$
4218
 if (+$ip << 0x3 @rbp + ~$proc >> @r9 << 13 >> @rsi & @r11 << 7 >> 0x7 ^ @rax >> @r11 & @rbx >> @rdi & $teb)  { test_statement(0xE1D); @rax = @r9 ^ @r8 ;  This is a not opened comment */  break;  // /* This is a comment  } else { test_statement(0xBE8); }
$error$
$end$
4219
 if ($proc + 0y11 << 0y100 >> $ip >> @r8 ^ @r13 << @r8 >> @r9 ^ ~$thread & @r8 & @r10 ^ 0n19 | @r11 = @rbx >> 0n16 << 0x11 | (@rbp) << -0n7 ^ @rdx | 0y101 >> @r8 | $proc & @rsi ^ @rsi ^ 4 | 22)  { test_statement(0x1107);  /* This is a not closed comment ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ! @r10) ;  while  (+@r9((-@rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($buffer > $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rbp)0x8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; $buffer == $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xEAF); }
$error$
$end$
4220
 if ($ip ^ @rsi >> @rsi >> (@rbx) ^ +@r10)$ip ^ @rsi >> @rsi >> (@rbx) ^ +@r10)  { test_statement(0x20EE);  break; } elsif (+(~(@r13)) << @rdx ^ @rax & @r12 & 6))0xE & +@rsi) { test_statement(0xF22); }
$error$
$end$
4221
 if ($thread << (++@rsp) << @rbp >> $teb << @rdi > @r8 >> 1 >> @rdx | @r13 << $teb >> +0n16 & +@r12 >> @rsp & @rax | @rsi | $ip | @rdx | @rax)  { test_statement(0x1A6F);  break;  while  (@r11 @rbx ^ @rsp | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif (@rsp >> @rdi | @rax >> $teb ^ 0x6 & @rsp ^ (@r12) ^ @r9 ; @rsp >> @rdi | @rax >> $teb ^ 0x6 & @rsp ^ (@r12) ^ @r9) { test_statement(0x140); } else { test_statement(0x1CDF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp | @rdi | @rbp = @rbp | @rdi | @rbp) ; }
$error$
$end$
4222
 if ($teb << 20 << 0x7 ^ @rbx >> @r10 & $teb & @rsi & @r11 < +$proc + @rdx >> @rsi >> @rsi >> @r9 & @r13 >> 0y10001)  { test_statement(0x392);  break; @rax = @r12 & -0xE | @rsp | (@rsi) ; }
$error$
$end$
4223
 if (@rsp >> (@r10) >> @rsp >> $thread & @rbx ^ 0y1 << $thread ^ $proc | @rbx <> -(@r13) + $ip << $thread << $buffer >> @r9 ^ $buffer << @r11 & $ip ^ @rdx >> 0y101 ^ $buffer ^ @r8 | 12 >> $ip >> @r10 & 0xE >> @r9)  { test_statement(0x238F); } elsif (@rax >> @rdi <> @rax >> @rdi) { test_statement(0x732); val = 0n4 ^ @r13 ;  /* This is a comment */  for (val = 10; @r13((@rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp & @r10 & 0y1000 ^ @r13 | -@rbp & @rdx < @rdx >> @rdi & @rbx & ~@rsp ^ $teb & -@rdi ^ -(0y1111) ^ @rsp) { test_statement(0xCF5); }
$error$
$end$
4224
 if (@rsp + 0y100 << @r10 | $buffer ^ 0n18 & +@rax ^ @rsp ^ @r9 ^ @r9 > @rsp + 0y100 << @r10 | $buffer ^ 0n18 & +@rax ^ @rsp ^ @r9 ^ @r9)  { test_statement(0x775); } else { test_statement(0x278);  break; }
$error$
$end$
4225
 if (-@r11 + 5 << $buffer >> @r13 >> ~12 >> $teb(($proc + 0x5 | @r10 << +0x6 >> 0n2 ^ @rsi & @r12 ^ @r13 & 0xF)  { test_statement(0x1CBD); ;  This is a not opened comment */ }
$error$
$end$
4226
 if (@rbp >< @rbp)  { test_statement(0x175D); }
$error$
$end$
4227
 if ($thread << (+0) | @rbx | @r11 & $ip & @rbx | (@r8) & $thread ^ $proc >= @rdx >> 0x11 << @rbp & @rbx >> @rsi & ($proc) | @r8 >> $teb >> @rsp & @r13 ^ $thread & 0y1)  { test_statement(0x1D90);  // /* This is a comment   break; } elsif ($buffer << @rsp & $buffer >> $thread | 0y10000 >> 0y1010 & @rdi & @r10 ^ (~-@rsi) ^ @rbp | @r9 == $buffer << @rsp & $buffer >> $thread | 0y10000 >> 0y1010 & @rdi & @r10 ^ (~-@rsi) ^ @rbp | @r9) { test_statement(0xD9); ;  /* This is a not closed comment } elsif (@rdx >> $teb | @rax & @r12 ^ @r13 ^ @rdx)@rsp >> @rsi & @r10 | +@rdx ^ $proc ^ 0x9 | @rbp | $thread) { test_statement(0x1B6); } elsif (@rbp ^ ~@rsp(@rsi) { test_statement(0x15C3); } elsif (@r10 >= @r10) { test_statement(0x1DBF); @rax = 0y111 ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~(@r12) ; ~(@r12)) ;  if (@r12 >< ~$proc)  { test_statement(0x264F); }  while  (@r11 ! +(-+$thread))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb | @rbx))$teb | @rbx) { test_statement(0xA0D);  while  (+@r8 ; @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2523);  This is a not opened comment */ }
$error$
$end$
4228
 if (@rax << $thread >> @r8 << ~@rdi >> 0y1010 >> @rax & 0x4 >> 6 ^ @rax << @rax >> @r11 & @r13 >> @rbx & $buffer ^ @r13 & @r8 & @rbx ^ 0x11 ^ @rsi | @rdi >> @rax & (@r9) <> @rax << $thread >> @r8 << ~@rdi >> 0y1010 >> @rax & 0x4 >> 6 ^ @rax << @rax >> @r11 & @r13 >> @rbx & $buffer ^ @r13 & @r8 & @rbx ^ 0x11 ^ @rsi | @rdi >> @rax & (@r9))  { test_statement(0x221A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 & @r10 ^ 0y1110 ^ 0xC(@rbx | @r12) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip | $thread($ip | $thread) ; } elsif (@rdx >> $teb >> @r9 | -@rdi >> @rsp != @rdx >> @rbx >> $teb) { test_statement(0x2353);  break; } elsif (@r13 & 0x3 & @r9 ^ @rdi & @rsp <> 17 >> 6 ^ 0 & $thread ^ $teb | $teb & @r10 ^ 0xB ^ @r11 | 0xD) { test_statement(0xAE1); } else { test_statement(0x17CD);  /* This is a comment */ }
$error$
$end$
4229
 if ($ip + $proc << $proc ^ $ip << (@r9) & @rax & @r10 ^ @rbx ^ @rax & +$thread ^ 0y0 ^ @r12 | @rbp >> $ip & @rdi & $thread & $ip | $thread >> $ip ^ 0n9 ^ 0y11 | 0n19 ^ 0x6 ^ @r8 | $teb < @rax << -@rsp << 0n13 | @r10 >> 0x7 >> (@r9) & @rsp & @r9 & +@rsi | +@r9 >> @rsi & $teb & @r11 ^ @rsp & @rbx ^ $buffer ^ @rbp)  { test_statement(0x17E);  break;  // /* This is a comment   if (0xC | @r8 <= @rsp)  { test_statement(0x18B8); } elsif (@rsp)@r13) { test_statement(0x2120); } elsif (@r9 != @r9) { test_statement(0x203A); } else { test_statement(0x3C0); } }
$error$
$end$
4230
 if (-~@r11 + 0n2 & (0n8) ^ $proc << +-@r8 >> @r11 ^ @rax >> @rdx | @r8 >> $ip >> 0x8 ^ -0n14 <= ~@rbx + @r11 | 0x10 << $buffer >> @rbp >> @r12 & $buffer >> $proc & @r10 & @r8 ^ (@rsp) >> $thread & 1 & (+$proc) | $buffer >> @rdi ^ $teb)  { test_statement(0x1ABA); } elsif (+@rbx << $teb | ~@rsi >> @rdi | 13 ^ ~@rsp ^ 0y1101))@r10 & @r11 >> $teb & 0n3) { test_statement(0xC40); } else { test_statement(0x1328);  /* This is a comment */ @rax = @rsp | @rdx | @r9 ;  // /* This is a comment  }
$error$
$end$
4231
 if ($thread & 0y1010 << 0n13 >> @rsp ^ @rdi << @r12 & $buffer >> -21 <> $proc ^ $ip << @r10 >> @r13 >> @rsi & 23)  { test_statement(0x1C23);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y111 & $ip ^ @rsp | @rbx | 7 | 20 != @rbx | @rbp ^ $buffer | 0y10010) ; }
$error$
$end$
4232
 if (@rsp + 15 << @rbx | @r12 << $teb((+@rsp << @r11 >> @r10 << @r13 >> @r9 >> ~(@r11) & @rbx & @rbp >> @rbp & $thread)  { test_statement(0x41D);  /* This is a not closed comment  while  (@r12 | @rsi == $proc | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (0xC > @r12)  { test_statement(0x18D9); } else { test_statement(0x1C69); }  while  (@rax((@rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (0n18 >> @r11 >> (@rbp) & (14) >= 0n18 >> @r11 >> (@rbp) & (14)) { test_statement(0x16DE); }
$error$
$end$
4233
 if (+@rdx << @rdi >> @rbx >> ~0x4 >> @r12 | $proc << @rax))$thread + +@rsp << @rsi & @r12 | $teb << +0x1 ^ @rbp & $proc)  { test_statement(0x511); }
$error$
$end$
4234
 if (0y1 << $ip & @rax ^ ($teb) >> @r8 >> @r8 & 0n11 >> @rdx | @rdx << +@r10 >> ~~$buffer & $thread & 0n7 & @rdx ^ 0n10 >> $proc & @rsp & 0n11 ^ $thread & $proc ^ 0))@r11 + 0xC << $thread ^ $buffer >> $thread & -~@rsi | @rsp & $teb >> @r10 ^ @r12 & @rbp & $ip | 13)  { test_statement(0x1F6F);  // /* This is a comment  } else { test_statement(0x1CEB);  while  ($thread | @r10 | $proc((+@r8 ^ 0n0 | $thread | $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = ($proc) ^ @r11 ; }
$error$
$end$
4235
 if (~@rax + @r10 << 20 << @r12 >> @rax >> $teb >> $thread | $proc & @rax & @rsi ^ -0x3 >> -@rdi ^ @r12 | $buffer & -@r9 ^ @r10 & @rax | @rbp > @rbp >> @r8 >> $proc | @rbx >> 0x2 | $buffer >> -@rbx & @rsi ^ 0n16 & -$teb)  { test_statement(0xBB0);  while  (@r12 & 15 | @r13 ^ $proc | 5 <> 0y1001 ^ @r11 ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y10 | 0n2 @rdi | @rdx | $buffer) ;  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n8)$ip) ;  break; } elsif (@r10 << $buffer & +$teb >> $buffer & @rsi ^ $thread >> $teb & 0xC & ~@rsp ^ ($proc) <> @r13 & @r11 & @rbx | 13 >> $thread & $thread ^ @rbx ^ 0n5 ^ 0y1) { test_statement(0x14); } elsif (@r10 >> @r9 >= ~@r10 ^ @rbx & @r12 ^ @rbx | @r13 & ($ip) ^ (14) | $thread) { test_statement(0x1DBD); val = @r10 ^ @rax ; } else { test_statement(0xE1B); @rax = @r8 & 0y10001 ;  for (; $thread | $teb 0y1 | 21;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4236
 if (~0n4 << $thread >> $ip >> $proc & @rbx << ~-0y10000 >> 0n19 & 0y11 & @rsi & $teb ^ @rdx ; ~0n4 << $thread >> $ip >> $proc & @rbx << ~-0y10000 >> 0n19 & 0y11 & @rsi & $teb ^ @rdx)  { test_statement(0x1C68);  // /* This is a comment  } elsif (@rax << 0y110 >> +-@rdi >> @rax ^ $teb < @rdx) { test_statement(0x6AA); } else { test_statement(0x8);  break; val = @r12 | $buffer | $proc ;  if (@r9 -~@r10)  { test_statement(0xE2C); } elsif (@rsp >= @rsi) { test_statement(0x1263); } elsif (@r9)-@r9) { test_statement(0x18A); } }
$error$
$end$
4237
 if (0x2 << @rsi & @rbx << @rax & @rsp & @r13 ^ 1 << $ip >> @r8 >> $ip & @r11 >> @r11 ^ @r12 >> ~@rdi ^ $teb | 0x6 << @rdx >> @rdx ^ @r13 >> @r11 & @rdi & @r12 | @r10 >> $proc ^ $ip ; 0x2 << @rsi & @rbx << @rax & @rsp & @r13 ^ 1 << $ip >> @r8 >> $ip & @r11 >> @r11 ^ @r12 >> ~@rdi ^ $teb | 0x6 << @rdx >> @rdx ^ @r13 >> @r11 & @rdi & @r12 | @r10 >> $proc ^ $ip)  { test_statement(0x164A);  /* This is a not closed comment } elsif (@rsp << @r12 ^ 0xD ! @r10 << -@r13 ^ (@rdi) >> @rdi) { test_statement(0x80A); } else { test_statement(0x648); }
$error$
$end$
4238
 if (-$teb + $thread >> @rsi << @rbx & @r9 >> @rbp >> (@rax) ^ 7 >> $buffer >> @rsi | @r11 >> @rax >> $thread & @r11 >> $thread(-$teb + $thread >> @rsi << @rbx & @r9 >> @rbp >> (@rax) ^ 7 >> $buffer >> @rsi | @r11 >> @rax >> $thread & @r11 >> $thread)  { test_statement(0x442);  while  (@r9 & @r13 ^ 0y101 | 0y1001 ^ +@rsp | 0n4 | @r13)0n7 & $thread ^ @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx << ~@r9 >> $teb >> $thread & -0y1 & 0x5 & 0n9 ^ @rbp >> @r9 & $teb ^ $proc ^ @r10 ^ $thread | ~@rsp >> 0y1000 ^ -$thread | $teb & $proc ^ 0x10 $buffer << @rdx >> +-+0y101 >> $proc) { test_statement(0x82D); } else { test_statement(0x788); }
$error$
$end$
4239
 if ($proc + @r12 >> @rax >> $buffer <> $proc + @r12 >> @rax >> $buffer)  { test_statement(0x26E1); } else { test_statement(0x9AD); }
$error$
$end$
4240
 if (@r8 + @rbx >> @r8 ^ 0y101 << -$proc ^ 3 | @r13 >> @r9 & @rdx ^ @r9 >> @r13 | -@r13 >> 0y1111 & +$ip | 6 ^ @rbp == @r11 + @r9 & @rsi << @r10 ^ $proc << @rbp >> @r11 >> 23 ^ +@rdx >> $thread ^ $thread & $buffer ^ @rsi ^ 0y110)  { test_statement(0x2194); } elsif (@rbp ^ @r11 & -(@rsi) & @rsi ^ @r10 & @r11 ^ 0x11 ^ @r11 | 0xE & @r11 & @rbx ^ $teb & ~@rdi ^ ($ip) ^ +@r9 @rbp ^ @r11 & -(@rsi) & @rsi ^ @r10 & @r11 ^ 0x11 ^ @r11 | 0xE & @r11 & @rbx ^ $teb & ~@rdi ^ ($ip) ^ +@r9) { test_statement(0x1DBA);  // /* This is a comment  } else { test_statement(0x1DDB); }
$error$
$end$
4241
 if (@rsi + @r9 >> @r9 >> @r13 >> @rbx | 0x6 << @r9 >> 23 & $ip >> @r8 | (@rax) >> @rdi ^ $teb ^ 0xF ! @rsi + @r9 >> @r9 >> @r13 >> @rbx | 0x6 << @r9 >> 23 & $ip >> @r8 | (@rax) >> @rdi ^ $teb ^ 0xF)  { test_statement(0x176F); } elsif (@rbp >> +@rdi >> 0n2 & 21 >> @rax & @rbp ^ @rbx >> @r9 ^ 0y1111 ^ @r9 ^ @r10))@rbp >> +@rdi >> 0n2 & 21 >> @rax & @rbp ^ @rbx >> @r9 ^ 0y1111 ^ @r9 ^ @r10) { test_statement(0x239E);  /* This is a not closed comment }
$error$
$end$
4242
 if (@r11 << @rbp >> @r9 & @rax << $teb & -$teb & ($ip)((@r8 >> @rsp ^ 0y1010 << (($proc)) & @rbp >> $buffer | ~@rsp << @r9 >> @rbp & 0x3 & ~+@rdi ^ $thread >> $teb & 0y100 & $proc | @rbp | @rbx ^ @rax)  { test_statement(0x1A07);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp & 0x13 | ~@r12 == @rbp & 0x13 | ~@r12) ; } elsif (@rsp << @r8 $ip >> 0x10 >> @r13 ^ @rdi >> @rbp ^ (@r9) ^ @r10 | 0y11 & @r10 & $ip | $teb ^ $buffer | ~$ip) { test_statement(0x2368);  This is a not opened comment */ } else { test_statement(0x1CA6); }
$error$
$end$
4243
 if ($teb + @r12 << @r11 << @rdi < @rdx & @rsp ^ @rbx << $thread & @rsi & @rbx & +$proc ^ ~@rdx >> @rbx & @r11 ^ @r10 & $proc)  { test_statement(0x2F1);  /* This is a comment */ } elsif (-@r8 >> @r9 >> (@r13) | @rax ^ $thread & $proc | $ip & $proc | 0y100 ^ @rdi | 0n5((@rdx << @rsi & ~$thread | $buffer ^ $thread & ($ip)) { test_statement(0x1492); } elsif (@rdx & 0xD | @rax < @r9 >> @r10 & -@r8 ^ 22 ^ @rbx ^ @rsp | @rsi ^ @rsi | +@r12 ^ @rax) { test_statement(0xC70); } elsif (@rdx & 0xE ^ @rbp ^ @rbp <> 0y101 ^ 0y10001 | $teb | @rax) { test_statement(0x90C); ; val = @r13 ; ;  if ((@r13) < 0y100)  { test_statement(0x2556); } } elsif (0n13 ^ @r8 | @rbp | 0y110 > @rdi ^ @r9 | -@rdi) { test_statement(0x7EA); ;  break;  /* This is a not closed comment }
$error$
$end$
4244
 if (@rdx ^ $proc & 0x2 & @rsi ^ @r8 >> ~@rdx ^ 0y1011 ^ (@rbx) ^ @r13 @rdx ^ $proc & 0x2 & @rsi ^ @r8 >> ~@rdx ^ 0y1011 ^ (@rbx) ^ @r13)  { test_statement(0x1CD);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ @r10 | @r9 | (0x1) < 5 ^ @rdi | @rdx) ; } else { test_statement(0xA6F); }
$error$
$end$
4245
 if ($teb << $proc << @r10 & @r12 << @rdi ^ @rdx << $ip >> $teb >< +0x11 & (@rax) << 0n0 >> 21 >> @rdx & @rbx >> @r10 ^ 21 << @r13 >> 0y1100 >> @r10 & ~@rdx >> @rsi | @rdi << 0n14 >> $thread | @rdx | @rdx ^ @r10)  { test_statement(0x18F8); } elsif ($thread << 2 & @rax ^ @r12 >> @rbp > $thread << 2 & @rax ^ @r12 >> @rbp) { test_statement(0x10C); @rax = 0xD | @rax | @rax | $teb ; val = @rsp ^ @r8 | $teb ; } else { test_statement(0x1E31); }
$error$
$end$
4246
 if (@r11 << 0n10 << @rbx >> ~@rdi | ~$buffer << $ip >> @r10 >> @rsi ^ (@r12) >> @rbp & @r12 ^ @r10 & @r9 ^ +0x1 | $proc >> $proc | @r9 ; @r11 << 0n10 << @rbx >> ~@rdi | ~$buffer << $ip >> @r10 >> @rsi ^ (@r12) >> @rbp & @r12 ^ @r10 & @r9 ^ +0x1 | $proc >> $proc | @r9)  { test_statement(0x69D);  if (~@rdi & 0n6 | @rbp ^ @r8 | $teb | (0n19) <= $thread & $proc | @r12 ^ @r12)  { test_statement(0x1B64); } }
$error$
$end$
4247
 if (@rdi + $buffer << @rsp << @r10 & @r13 << @rbx ^ $ip & $proc & @r11 | @rdi >> +@rdx >> $ip & @r12 | 0x2 >> @r11 & @rax & @rax | @rdx & @r9 ^ @r10 ^ @r10 | @rsi @r13 & @r11 << ~@r9 ^ @rsi << @rbx ^ @r10)  { test_statement(0x23E7); }
$error$
$end$
4248
 if (~@r13 + 0y1011 << $thread << $proc & @rdx ^ @r12 << ~$thread >> @r13 >> 23 ^ @rbp >> 0n11 & ~$buffer & $ip ^ ~@rsp ^ @rbp > $ip + @rbp << @rbp >> @rax << @r11 >> 20 & $proc >> @r8 >> (@rdx) & @r12 & +-0n5 & 3 ^ 0y10 >> (@r9) | $thread << @rax & 0xF | @rbx & 0xE)  { test_statement(0x2445); val = 0n19 >> @rbx ^ @rax & -0xA | @rbx & (@rax) ^ @r13 ; } elsif (@rdi << (@rax) >> @r9 ^ 0y1011 & @r12 ^ $thread & @rax((@rdi << (@rax) >> @r9 ^ 0y1011 & @r12 ^ $thread & @rax) { test_statement(0x2AB); } else { test_statement(0xDF3); }
$error$
$end$
4249
 if (@rax + @r11 << @rbx << 0y1110 & $buffer >= @r10 + 1 & $buffer & @r11 & 0y1000 & @r13)  { test_statement(0x199E); }
$error$
$end$
4250
 if (@r11 << +$ip << @r8 ^ @rbx << @r11 >> $teb >> @rsi & $ip >> @r8 ^ ($teb) ^ +@rdx & -0x0 | @r9(@rbx << 0y1100 << @r12 >> $thread << $thread ^ ($ip) ^ 0xC)  { test_statement(0x1FBF); ;  /* This is a not closed comment  /* This is a not closed comment } elsif ($buffer << 0n4 >> @rax ^ @rax >> -$teb & @rbp > @rbx << @rbx & -~@rsi >> @rdi & @rdi & @r13 | 0n12 & 1 | @rbp | ~@rax ^ $ip | $proc | $buffer) { test_statement(0x19ED);  /* This is a comment */  /* This is a comment */  // /* This is a comment  }
$error$
$end$
4251
 if (@r13 << +@r12 << @r12 >> @rbx ^ @r10 << @rsp & @r12 >> @r12 & @r8 | @r8 << @rsi | +(@r13) >> @r11 & $ip ^ $ip & $ip ^ @r8 = $teb << @rbx << -@rsp ^ $ip << @r11 | 0y1001 >> $ip & 0x4 & @rbx)  { test_statement(0x1875); } elsif (@rax >> $ip >> $buffer & 0n12 >> ~0y1 ^ @rbp | 0y1101 >> 0n1 & ~$buffer > @rax << @r11 & @rax >> $proc ^ @r12 >> $proc & +@r8 | $proc >> @rax & 0y10011 | @r11 ^ @r10) { test_statement(0xB65); } else { test_statement(0x3AA); }
$error$
$end$
4252
 if (0x8 + -@r8 << @r13 ^ @r8 << @rax ^ @r13 & $proc & @rbp ^ $buffer & 0y0 ^ @rdi ^ @rbp | @rbp << @rsi & $teb >> @r13 ^ @r11 >> 2 | @rbx & @rbp & @rsp ^ +0x13 & $buffer != 0x8 + -@r8 << @r13 ^ @r8 << @rax ^ @r13 & $proc & @rbp ^ $buffer & 0y0 ^ @rdi ^ @rbp | @rbp << @rsi & $teb >> @r13 ^ @r11 >> 2 | @rbx & @rbp & @rsp ^ +0x13 & $buffer)  { test_statement(0x1258);  if (0n13 & @rax ^ 0n3 ^ @rsi | $buffer ^ ($proc) >< 0n13 & @rax ^ 0n3 ^ @rsi | $buffer ^ ($proc))  { test_statement(0x165D); } ;  /* This is a comment */ } elsif (@r11 << @r9 >> @rax ^ ~@r13 >> $buffer & @r9 ^ 0n2 ^ @r8 | $thread & 0xF & @r8 | $thread | @rsp | @rsi | @r11 != @r11 << @r9 >> @rax ^ ~@r13 >> $buffer & @r9 ^ 0n2 ^ @r8 | $thread & 0xF & @r8 | $thread | @rsp | @rsi | @r11) { test_statement(0x4FA); }
$error$
$end$
4253
 if (@rax << (($ip)) << $buffer >> 0y100 ^ @r13 << 1 >> $buffer ^ $teb ^ 0y1011 & @r13 ^ @r10 | $thread << 0n12 ^ @rsi >> @rbp | @rsi >> @r12 & 16 ^ @rax ^ 21 ^ @rdi((@rax << (($ip)) << $buffer >> 0y100 ^ @r13 << 1 >> $buffer ^ $teb ^ 0y1011 & @r13 ^ @r10 | $thread << 0n12 ^ @rsi >> @rbp | @rsi >> @r12 & 16 ^ @rax ^ 21 ^ @rdi)  { test_statement(0x15D1); } elsif ($buffer >> 0y10011 >> @r9 ^ @rax >= @r8 >> @rbp & $buffer >> @rsi ^ @rax >> @rsp & @r10 & $proc ^ @r13 | ~@r12 >> @rdi) { test_statement(0x1B1B); }
$error$
$end$
4254
 if (@rbx + $ip & (-@rbp) & @r10 & 0y1011 & @rsp)@r12 + @rsp << @r8 >> @rdx << @r10 & @r12 << @r9 >> $buffer & ~4 ^ 20 << @rdx >> @r13 >> @rsp)  { test_statement(0x1CF7); }
$error$
$end$
4255
 if (@r9 + $teb >> @rsi << ~0x2 >> $proc >> @r13 > @r9 + $teb >> @rsi << ~0x2 >> $proc >> @r13)  { test_statement(0x12DB);  /* This is a comment */ } else { test_statement(0x1414); }
$error$
$end$
4256
 if (@r12 >> @rsi << 0n7))@rbp << @rax >> 0n15 << @r10 >> 0x6 >> @rax & $thread & @rax & $teb ^ $proc >> $thread >> @r12 | @r9 & @rsp ^ @rbx & @rax & $teb ^ 0y101)  { test_statement(0x1EE3); } elsif (+@r8 << ~+0n6 >> @rax >> @rbx ^ @r12 | @rdx >> @r13 & @r10 & @r11 <> $proc << +@rsi >> $proc & @rsp >> 0x12 & 0y10000 ^ @rsp & @r9) { test_statement(0x1ADE); } elsif (0n8 & @rbp ^ @r9 & @rsp ^ @rbx ^ 0y10001 == 0n8 & @rbp ^ @r9 & @rsp ^ @rbx ^ 0y10001) { test_statement(0xBF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 >< @r11) ; }
$error$
$end$
4257
 if ($buffer << $proc << @r9 & @r10 >> +12 & +@r9 & @rbx ^ @rbx << @r8 $buffer << $proc << @r9 & @r10 >> +12 & +@r9 & @rbx ^ @rbx << @r8)  { test_statement(0xE6F);  if ($buffer & @rdx <= $buffer & 0n16 ^ 16)  { test_statement(0x326); } elsif (@r10 < @r10) { test_statement(0x8A7); } elsif (@rsi)@rsi) { test_statement(0x1549); } elsif (($buffer))0x2) { test_statement(0x9EB); } elsif (0y1100 != 0n15) { test_statement(0x58F); } } else { test_statement(0x1704);  // /* This is a comment   while  (@r8 | @rsi <= @r8 | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = $proc ; ; val = @r13 ;  /* This is a comment */ }
$error$
$end$
4258
 if (@rbp << +~$teb << @rdi >> @rax | @rbx << @rdx >> @r10 & +@r12 >> @rbx & @r12 ^ @r9 >> $buffer ^ @rax & 0x6 | @r11 ^ @r10 & $thread ^ @r11 | 15 ^ $proc ^ $ip | $teb <> @rbx + @r8 >> @rbx << @rsp >> 0n10 >> @rdi ^ @rdx << @r10 >> (@r8) ^ @r9 ^ 0n1 & @rdx)  { test_statement(0x1C27); }
$error$
$end$
4259
 if (~$buffer << @rsi << @rbp >> @r9 ^ 0y1011 >> -@r11 & @r8 & @r12 & $ip ^ @r8 & ~$thread | @r10 & @r13 >> @rsi ^ $thread >> @r11 & @rdi ~$buffer << @rsi << @rbp >> @r9 ^ 0y1011 >> -@r11 & @r8 & @r12 & $ip ^ @r8 & ~$thread | @r10 & @r13 >> @rsi ^ $thread >> @r11 & @rdi)  { test_statement(0x23A);  /* This is a comment */ } elsif ($proc & 3 & $teb ^ @r9 >> @rax & (@r11) & $ip ^ 0x5 > $proc & 3 & $teb ^ @r9 >> @rax & (@r11) & $ip ^ 0x5) { test_statement(0x19A5); } else { test_statement(0x1ECB);  /* This is a not closed comment }
$error$
$end$
4260
 if (@r11 + @rsp << @rax >> $proc << @r13 & $teb >> +$buffer ^ $proc >> @r8 & @r10 >> -0y101 & $ip)$teb + @r12 ^ @rbp)  { test_statement(0x1211); @rax = @r13 & 0n17 ^ 0n7 & 0n4 ;  This is a not opened comment */ } elsif (@rbp << 0y10 | $ip >> @r10 ^ ~$buffer | @rsi & @r11))@rbp << 0y10 | $ip >> @r10 ^ ~$buffer | @rsi & @r11) { test_statement(0x25AA); }
$error$
$end$
4261
 if (+@r12 & -@rax & +21 ^ 0n6 << @rbx & @r8 >> @r10 +@r12 & -@rax & +21 ^ 0n6 << @rbx & @r8 >> @r10)  { test_statement(0xE08); val = 0n4 >> -+0n18 & 0x0 ^ $buffer ;  This is a not opened comment */  if ($thread | @rdx((@rsp | -$teb)  { test_statement(0xC39); } else { test_statement(0x849); } }
$error$
$end$
4262
 if (0x12 << @rbx | 4 << $proc >> 1 >> @r12 > ($ip) + @rsp << @r12 >> 0y11 >> $teb >> @rbp | ~13 << @r12 >> @rsi | $buffer ^ $thread ^ @r9 | @r13 & $teb ^ -@rsi ^ @rax)  { test_statement(0x17D9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx & @rbp ^ @r10 | @rax | @rax >< 0n15 & 0x2 | @r13 | +-$teb | @r11) ; } else { test_statement(0x107); }
$error$
$end$
4263
 if (@r11 & @r13 << @rdi >> $proc & @rdi ^ @rdx << 2 >> $thread >> ~@rsp & +@rbx & @rbx & $teb ^ ~$buffer | @rdx << +0n7 ^ @rax >> @r9 & @r8 & @rax == @r11 & @r13 << @rdi >> $proc & @rdi ^ @rdx << 2 >> $thread >> ~@rsp & +@rbx & @rbx & $teb ^ ~$buffer | @rdx << +0n7 ^ @rax >> @r9 & @r8 & @rax)  { test_statement(0x13CD); }
$error$
$end$
4264
 if (@rsp + $buffer >> @r13 << 0n8 >> @r11 & @rsp << $buffer == 0x9 ^ @r8 >> @r11)  { test_statement(0x164); } elsif (@rbx & 16 >> @rsi & @r11 ^ @rsi & $teb & @r12 ^ @rbp ^ $teb | @rbx >> @r9 & -@rbp & @r13 | $teb & 0xC ^ 0x5)@r8 << @rsi & @r8 >> -$buffer) { test_statement(0x15A6);  // /* This is a comment  } elsif (0n11 ^ @r9 & @rdx | @rsp & $proc ^ @r10 <= 0y10001 & @r13 | 14 & $buffer ^ 4 ^ $proc) { test_statement(0x298); } elsif ($thread ^ @r9 ^ $thread @rax | ~@rax | @rdi) { test_statement(0x609);  // /* This is a comment   /* This is a comment */  break;  if (@rdi <= @r12)  { test_statement(0xF0C); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp((0x2) ; } elsif (@r12 ^ -0y10011)@r12 ^ -0y10011) { test_statement(0x2175); @rax = @rdi ; } elsif (+7 | @rdi > +7 | @rdi) { test_statement(0x19E);  /* This is a comment */  for (; @r8 ! @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif (0y0 = 0y0) { test_statement(0x1F4A);  if (@rsi((@rbx)  { test_statement(0x205F); } } elsif (@rsi < @r9) { test_statement(0x66C); } elsif ($proc @rbp) { test_statement(0x1BC6); } else { test_statement(0x259F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 ^ -$proc <= @r8 ^ -$proc) ; }
$error$
$end$
4265
 if (@rsp << @r11 ^ @rsp << @r12 ^ @r12 & $buffer & @r10 | @rsp << 6 ^ @rdi >> $teb((@rax + @rsp & @rdi ^ @r9 << 0x10 >> @rbx ^ @r10 >> @r8 & $ip)  { test_statement(0x1930);  if ((0y1011) & @rdx | @rsp | @rdx | 0n7 ! $proc & $proc | @rax ^ @rdi)  { test_statement(0x94E); } elsif (@rbp | $thread = @rdi) { test_statement(0x25A3); } elsif (@r9 <= @rax) { test_statement(0x8F); } }
$error$
$end$
4266
 if (0y10000 + @r13 << @rax >> @r13 >> 17 & @rdi = @rsp + @r10 >> @r10 >> @r8 >> @r11 & @r12 << $ip & $buffer >> 0y1100 ^ ~0n0 << $proc >> $proc >> $thread)  { test_statement(0xC4); } elsif ($ip << $teb ^ @r8 >> $thread & @rsi & -(~$buffer) = @rsp << $ip >> @r12 >> @rsp ^ (@rax) >> @r12 ^ @r11 & $proc | @r11 & @r8 & $ip ^ @rdi) { test_statement(0x230B); } elsif ($ip = $ip) { test_statement(0x2507); } elsif (-($ip) ^ 0xF >< 0y10000 ^ @r11) { test_statement(0x6E2);  break; }
$error$
$end$
4267
 if (@r13 + 22 & +$ip << 0y1111 >> @rdi & @r11 | $buffer >> @rdi >> @rsi ^ ++0xF >> (@r13) & $proc | @rsi & @r8 | @rdx > @r13 + 22 & +$ip << 0y1111 >> @rdi & @r11 | $buffer >> @rdi >> @rsi ^ ++0xF >> (@r13) & $proc | @rsi & @r8 | @rdx)  { test_statement(0x16FE); } elsif ($thread << +@rsp = @rsp << @r10 ^ @rsi & @rsi | ~@r9 >> 0n15 & $buffer ^ @r10) { test_statement(0x393); val = 0xD ^ 0n2 ; } else { test_statement(0x157D); }
$error$
$end$
4268
 if ($buffer + @rdx << @rsi >> @r9 & @rbp >> @rax >> 0n16 ^ @r9 << $thread | @r12 >> 0x11 & @r9 >> @rsp & $thread $buffer + @rdx << @rsi >> @r9 & @rbp >> @rax >> 0n16 ^ @r9 << $thread | @r12 >> 0x11 & @r9 >> @rsp & $thread)  { test_statement(0x1E35); } elsif (@r11 << (@rax) ^ @r9 >> $buffer | @rdx >> 10 > @rax << (($ip)) ^ @rbp >> @rsi | @r11 ^ @rbp & @rax | $buffer & @rbp ^ 23 ^ -@r9) { test_statement(0x1CAE);  for (@rax = @rsi; 0x3 | $teb | $teb >= @rax | +@rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi(@r9) ;  for (; @rdi != ~$thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif ($ip >> -@r11 & -(@rsi) | -@r9 | 0x9 | $ip != $proc & @rdx ^ $teb & +~@r13 ^ 0y1100 | @r11 & $ip ^ @r8 | @rbp) { test_statement(0x246D); } else { test_statement(0x1645); }
$error$
$end$
4269
 if (@rax << $buffer << $thread & @r13 & @rsp & (@r9) != @rax << $buffer << $thread & @r13 & @rsp & (@r9))  { test_statement(0x1CFD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 >= @r13) ; ;  /* This is a comment */  for (val = 10; @rdi($thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ ;  break;  /* This is a comment */ } elsif (@rbx << $proc >> @r11 >> @rbx | @rbx & @rbp ^ 0y10011 & 0xB | @rdi | @rsp >< @rdi >> @r10 & 0n17 >> @rdx & $ip) { test_statement(0x2A4); ; }
$error$
$end$
4270
 if ($proc >> @rdi >> 0y1000 >> @rbx & @r8 >> @rbp >> @rdx & (@r10) >> $proc | $buffer & @r8 <> $proc >> @rdi >> 0y1000 >> @rbx & @r8 >> @rbp >> @rdx & (@r10) >> $proc | $buffer & @r8)  { test_statement(0x1EAA);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ($ip) | $buffer 20 ^ @rsi | @r11 | 0y101) ; } elsif (@r11 << @r11 >> @rax >> $teb ^ @rbx & @r13 & @rbx | ~@r13 >> -$teb & $teb & @rsi != 23 >> @rbx ^ $ip >> +@rax ^ @rsi & @rax) { test_statement(0x22AE); } elsif (@r10 | 2 | $proc ^ @r13 | @rbx | @r9 <> @r10 | 2 | $proc ^ @r13 | @rbx | @r9) { test_statement(0x20E8);  if ((@r13) | $ip = @r11)  { test_statement(0x193F); } elsif (0n11((0xA) { test_statement(0xF98); } elsif (~@r10 == $proc) { test_statement(0x21BB); } else { test_statement(0x2291); } } else { test_statement(0x1BA5); }
$error$
$end$
4271
 if ((~$thread) + 0y11 ^ $teb << ~$thread >> @r9 >> @r8 & 5 | 0x10 << @rbp >> ~@rsi ^ @rbx & @r8 & @rdx == $proc + ~$ip << +$teb >> @rsi << @r10 >> (@rbp) & +6 ^ @rdi >> +$ip >> 0n10)  { test_statement(0x189B);  for (; $buffer & @rdi ^ @rdi | +@rbx ^ @rsp))@r11 & @rbp | 0n14;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rax | $proc | @r8 ! $thread | @r12 | $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x217A); }
$error$
$end$
4272
 if (+$ip << @rsi << @r9 >> @r8 << @r8 >> @rbx & @rbx >> $thread ^ 0n2 << @r8 >> -@r12 ; @r11 ^ @rsi << @rsp & ~(@rbp) & @rsi ^ @rbp >> @rbp & @rdi)  { test_statement(0x1585); } elsif (@r8 << -@r10 >> $ip ^ @rdx ^ $buffer & @r12 ^ @rsp | -(0xE) & $proc | $buffer & @rsp)(~@rbx) >> @rbx ^ @r13 & @r12 & $teb) { test_statement(0x12DF);  /* This is a comment */ } else { test_statement(0x609); }
$error$
$end$
4273
 if ((@rdx) + @r9 << (0n5) >> @rax << 0y10001 & 0 << ~@r11 & 20 >> ~0n7 & @r12(((@rdx) + @r9 << (0n5) >> @rax << 0y10001 & 0 << ~@r11 & 20 >> ~0n7 & @r12)  { test_statement(0x1B33);  /* This is a comment */  This is a not opened comment */ ; }
$error$
$end$
4274
 if (-+~@rbp << $proc << $proc >> (@rbp) >> 2 & @rdx << +@r12 ! @r11 + @r8)  { test_statement(0xC03); }
$error$
$end$
4275
 if (0y10000 + @r9 >> $teb >> 14 ^ @rbp << @rsp >> 0n12 & +0x12 >> 0y1101 & @r9 | $proc << $ip & $teb ^ (@rdx) >> +@r13 ^ $thread & 0n4 ^ $buffer | @r12 & @rdi & @rax | $ip & 0n7 | @r13 ^ $thread != $proc + @rsp << ($teb) >> @r10 << +@rbx >> @r9 >> @r10 ^ ~0xC << $thread >> 11 >> @r9)  { test_statement(0x10D1); }
$error$
$end$
4276
 if (0n3 + @rbx >> @r9 << @r8 | @rdi << 23 >> @rdx >> @r8 & +$proc >> 17 | @rdx & @rbp & $ip ^ @rdx ^ -0n16 | @rbx | 0n15 | $thread)$ip + 0n14 << ~@rbp << $buffer >> @r8 >> @rbp & @rsi << @r12 & @rsi >> @rax & @rbx & @rax ^ $buffer << @rdi & -0n13 >> $ip & 15 ^ @r12 >> +@rsi & 0x8 ^ $buffer ^ @rbx ^ @rbx)  { test_statement(0x155B);  if (@r8 & -@rdi ^ $ip ^ 0n15 | @rsp | -$ip | (~0x0) = @r8 & -@rdi ^ $ip ^ 0n15 | @rsp | -$ip | (~0x0))  { test_statement(0x609); } else { test_statement(0x2B2); } } elsif (@r12 << 0n9 >> @r10 ^ @r11 & @r11 ^ $thread ^ @rax == $buffer & @rsp & @rbx & 4 | $thread >> @r13) { test_statement(0x222B); } else { test_statement(0x2095); val = @r8 ^ @rdx ^ (@rax) | $proc ^ $proc ; }
$error$
$end$
4277
 if (@rbx + @rdx >> 0y110 << @r13 & $buffer >> ($thread) >> @r8 | @r9)@rbx + @rdx >> 0y110 << @r13 & $buffer >> ($thread) >> @r8 | @r9)  { test_statement(0x258B); } elsif (@rdx >> -@rsp | $teb | @r10 ^ @rsp ^ ~@r9 | +$buffer | @r10 @r13 ^ +@rbx & @rdi & $proc | +$teb >> @r11 & $buffer ^ @r11 & @r9 | -@rsi & @r9 ^ @r9) { test_statement(0xE26); }
$error$
$end$
4278
 if (+21 + @rax >> @rbp >> ~@r12 & @rbx << @rsi | @rbp >> $teb >> @rsp ^ $buffer ^ (+0x9) ^ $ip ^ 0y0(+21 + @rax >> @rbp >> ~@r12 & @rbx << @rsi | @rbp >> $teb >> @rsp ^ $buffer ^ (+0x9) ^ $ip ^ 0y0)  { test_statement(0x1FA);  This is a not opened comment */ } else { test_statement(0x2411); }
$error$
$end$
4279
 if (-@r10 + @r10 << $proc << $proc >= $proc & @rdx << (@rax) >> @rdi >> -$thread)  { test_statement(0xD38);  while  (((0y1000)) & 0xA ^ @rsi ^ @rdx ; ((0y1000)) & 0xA ^ @rsi ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x10FB);  /* This is a comment */ }
$error$
$end$
4280
 if (0y10000 + @r9 ; @rbx + @rbx << -~+@rbx)  { test_statement(0x1680); } else { test_statement(0x3D9); }
$error$
$end$
4281
 if (@rbx >> 0n10 | @r10 << $teb >> @rbp ^ 0n5 >> @r10 | $ip >> @r13 ^ (@rbx) | 0n16 | $proc ^ $teb | -@rsp)@rbx >> 0n10 | @r10 << $teb >> @rbp ^ 0n5 >> @r10 | $ip >> @r13 ^ (@rbx) | 0n16 | $proc ^ $teb | -@rsp)  { test_statement(0x2010);  for (val = 10; @r11 & $proc ^ -$ip ^ $ip > $thread & @r13 ^ ~@rax | ~$teb | @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer | 0y1011 ^ @rbx ; $teb << @rsi & 0xF & @rbp) { test_statement(0x13CD); } else { test_statement(0x6C0); }
$error$
$end$
4282
 if (@rbx + 0x4 >> @r9 << @rsi >> @r11 | @rdx << 0xF ^ @r12 & 0y1 ^ $teb((@rsp + @rbp >> @rdx & -0n9 >> 0y1101 & (0x10) & ~@r8 | @rbx << (@rdx) & $thread & @rdx | @rsi >> @r11)  { test_statement(0xAC8); } elsif (0y10011 << -0xB)@r12 >> @rbp & @rsi >> @rsi ^ +@rdi >> 0n5 & @r10) { test_statement(0x24D0); } elsif (@rbx >> @r12 | $buffer & $thread | $ip ! 0n3) { test_statement(0x1AC8);  /* This is a comment */  while  (@r10 <> @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($teb((@rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x165E); }
$error$
$end$
4283
 if ($ip + @r13 >> -@r10 >> --@r13 >> +@rsi ^ $teb << @r9 & @rdi & 0n12 & @rbx(($ip + @r13 >> -@r10 >> --@r13 >> +@rsi ^ $teb << @r9 & @rdi & 0n12 & @rbx)  { test_statement(0x2520); ;  while  (0n0 ^ @rsp((-@r12 | 0n17)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x1A31); }
$error$
$end$
4284
 if (@r11 >> @rsi << $proc >> @r11 >> +0y10000 & @rsi << @r10 >> @rsi >> @r13 & +$thread >> $proc ^ (@r12) << $ip >> $thread >> $ip & ~@rbx >> @rdx & @r8 = @r11 >> @rsi << $proc >> @r11 >> +0y10000 & @rsi << @r10 >> @rsi >> @r13 & +$thread >> $proc ^ (@r12) << $ip >> $thread >> $ip & ~@rbx >> @rdx & @r8)  { test_statement(0x62B); } elsif (@rsi >> +0n12 ! @rbp >> $thread >> $proc & ~@rbx >> @r13 & @rbp) { test_statement(0x2527); } else { test_statement(0x16C5);  This is a not opened comment */ }
$error$
$end$
4285
 if (@rdx << 0n8 | @r13 ^ @r12 & $thread & $buffer | @rsp & $proc | @r13 > $ip + @r12 << -@rsi << -$teb & $buffer & @rdi & 10 & -$proc)  { test_statement(0x1B65); } else { test_statement(0xD8A);  break; }
$error$
$end$
4286
 if (@rdi << @rdi >> @rdx << $thread >> 0xA & @r9 >> @rbx >> 0x11 & $thread | ~@r8 >> ~@rbp >> $proc | 0xE & @rbp & @r10 == @rdx + @rdx << @r12 & 0x9 << @r9)  { test_statement(0x1D9D); ; } else { test_statement(0x2497);  // /* This is a comment   if (~(+@r13) >< ~(+@r13))  { test_statement(0x6BD); } }
$error$
$end$
4287
 if (@rax + 0y1111 >> @rsp << @rbx & 0y1101 << @r13 >> $thread & 0y1100 >> $teb | @r11 << @r10 >> $ip >> @r12 & ~@r9 & $buffer < @rax + 0y1111 >> @rsp << @rbx & 0y1101 << @r13 >> $thread & 0y1100 >> $teb | @r11 << @r10 >> $ip >> @r12 & ~@r9 & $buffer)  { test_statement(0x2382); ; ; } elsif (@r12 >> @rbx >> @r10 ^ @r12 >> @rdx & @r11 ^ $thread & ~++@rdi != @rsp ^ @rax & @r11 ^ @r13 & ~@rdx ^ $proc ^ 17) { test_statement(0x1B91); } else { test_statement(0x816);  // /* This is a comment   /* This is a comment */  // /* This is a comment   if ($ip >< $thread)  { test_statement(0x24EC); } }
$error$
$end$
4288
 if (@r8 << @rbp << @rsi ^ (1) & @r11 >> $teb)@r8 << @rbp << @rsi ^ (1) & @r11 >> $teb)  { test_statement(0x11AF); } elsif (-@rdi << @rdx ^ $thread <= -@rdi << @rdx ^ $thread) { test_statement(0xE8B);  /* This is a not closed comment  break;  while  (@r13(@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip | $teb & @rsp ^ $ip ^ @r9 ! @r12 >> $proc) { test_statement(0x12FA); } else { test_statement(0x20DB);  while  ((0x5) | $teb != @r10 ^ @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r8 | 0y10000 ; @r8 | 0y10000)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  // /* This is a comment  }
$error$
$end$
4289
 if (@rdi + -@r12 << 0x9 << (@rdi) & @r11 << @rsi ^ @rbx << @rdi & @r10 | @rdx >> $proc >> @r8))@rdi + -@r12 << 0x9 << (@rdi) & @r11 << @rsi ^ @rbx << @rdi & @r10 | @rdx >> $proc >> @r8)  { test_statement(0x302); @rax = $proc >> 17 & @rbx & $thread ^ $teb ;  This is a not opened comment */ } else { test_statement(0x1778); }
$error$
$end$
4290
 if ($buffer << @rdi << @rdx & @rdx | @rbp >> @r8 >> @r11 & @r8 ^ @rsi >> @rdi >< @rdi + $ip << -0x13 << $buffer & $ip >> 0n3 | -@r10)  { test_statement(0x16E1);  /* This is a not closed comment } elsif (@r8 >> ($thread) >> @r8 | $ip >> @r10 | 12 & @r13 ^ $proc ^ @rbp != 1 & 0n16 & 0x12) { test_statement(0xF07);  // /* This is a comment  } elsif (-@r12 ^ $proc ^ @rbx | @rdi & $proc))@rbp ^ ~@rdx) { test_statement(0x1291); } else { test_statement(0x6CD); }
$error$
$end$
4291
 if ($proc ^ @r10 >> @r12 >> @rsi & @r13 & 11))@rdi << @rbp << @rbx & 3 << 13 >> @rax | @rbx << $teb)  { test_statement(0x22DE);  for (val = 10; @rbp & @rbx <> @r12 ^ 20;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4292
 if (0x1 + @r9 >> $teb << @rdx >> @r12 | @rbx >> @rbx >> $thread & $thread >> 0y1101 & @rdi & @r12 | @rsi >> @rsp & @rdx & ++@r11 ^ @r13 ^ 0y10010 ! 0x1 + @r9 >> $teb << @rdx >> @r12 | @rbx >> @rbx >> $thread & $thread >> 0y1101 & @rdi & @r12 | @rsi >> @rsp & @rdx & ++@r11 ^ @r13 ^ 0y10010)  { test_statement(0x12CC);  while  (21 & @rbp | 0n13 ^ @r11 < 0x1 & 0xF ^ @r8 ^ $ip | @rdi | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
4293
 if ($teb + @r11 & @rbp >> 0y110 & ~$ip & $proc & @r11 ^ @rdi << @rdi ^ @r11 >> 0xE & -$teb & $teb ^ @r11 & @rdi ^ @rsi ^ $teb)@r9 + ~0n16 >> $buffer << $buffer >> @rsi >> @r11 & +@rbx << @rdi >> $thread >> $buffer)  { test_statement(0xF9F); } elsif (@r10 << $thread >> @rdx >> @rdx ^ @r10 >> @r12 & -@rdi & @rdi ^ @rax | @rsi & @r11 | @rdi | $proc ^ $teb @r10 << $thread >> @rdx >> @rdx ^ @r10 >> @r12 & -@rdi & @rdi ^ @rax | @rsi & @r11 | @rdi | $proc ^ $teb) { test_statement(0x1BA3);  while  (@rsp ^ @rsp | @r12 <> $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (@r10 & $teb ^ $proc & $teb ^ @r10 ^ -$proc | $ip & 0x4 ^ $buffer | @r13 ^ @r10 | @rax | 0x8)$ip >> @rdx & 0y1110 & $teb) { test_statement(0x1E96); } else { test_statement(0x7F2); }
$error$
$end$
4294
 if (@rdx + 7 ^ @r8 & 0n18 >> -0n9 & 0x3 & @rbp ^ @rdi >> @rdi & @r8 & $proc ^ $ip & 0y10001 ^ 11 ^ $buffer | 0y10001 << 0x0 ^ (0y1101) == $proc + 0x6 << 6 & @rsi << @r12 ^ @r11 << @r12)  { test_statement(0x411); }
$error$
$end$
4295
 if (@rsi + ~0n10 & ~(@r10) ^ @r10 << @rbx != 0n18 + 0n15 & $ip << @r9 >> @rdx)  { test_statement(0x24D5); ; }
$error$
$end$
4296
 if (@rdi << @r9 << $teb | $proc << @rdi >> 0n11 >> @rbx >= (@rdi) + $proc >> $teb >> $ip >> $ip)  { test_statement(0xEB1); } else { test_statement(0x662); }
$error$
$end$
4297
 if (@rsp + 23(@r8 << @rax >> @rbp << $thread >> $buffer >> 13 | $thread >> $teb >> @rbx ^ ~0y0 >> @rdx & -$buffer & -+@rsp)  { test_statement(0x359); } elsif ($thread & $teb == 0y1110 << @r9 ^ ~0x3 >> @r9) { test_statement(0x118E); } elsif (@rdi ^ @rax > @rdx & $thread & $buffer | @r8 & $teb ^ @rbp ^ @r9 | $teb | 0y111) { test_statement(0x12AB); } elsif (+@rsi ^ $teb | $teb ^ @r13 | ~@rbp | 0x1 < +@rsi ^ $teb | $teb ^ @r13 | ~@rbp | 0x1) { test_statement(0xD5E); } elsif (+@rsi +@rsi) { test_statement(0x10A5); } elsif (0y1 >= 0y1) { test_statement(0x764); } elsif ($buffer ; $buffer) { test_statement(0xC7A);  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
4298
 if ($buffer + ~$teb ; $proc + @rbp >> @r9 << @rax ^ @r8 << ~@r10 & @rdx & @rax | +0xD << @rsp >> @r8 | @rdx >> +@r8)  { test_statement(0x90D);  for (val = 10; @r13 ^ @r12 = @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($ip ; @rdx | @rax | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  // /* This is a comment   for (val = 10; (0y1111) ! (0y1111);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@rdx << @r13 >> $proc >> @rsp ^ @rdi & @r13 ! @r11 << @r13 ^ @rsp >> @rbp & @rdi | 1 ^ $teb & @rsi ^ @rbp) { test_statement(0x2581);  /* This is a comment */  break; } else { test_statement(0x1F12); }
$error$
$end$
4299
 if (@rbp >> 0n4 > @rax << 0n13 << @r9 >> @r11 << $proc >> $buffer >> @rax & ~$proc >> @r8 & $thread >> @r8 | $teb << @r12 | @rbp >> @rax & 0x13 & (@r11) ^ -@r12 & -@rdx ^ 7 | @r10 ^ @rsp ^ @r12)  { test_statement(0x137C);  for (val = $teb | @r12 ^ @r10 | $buffer | $ip; ~@r9 ^ $ip == ~@r9 ^ $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x3DF); }
$error$
$end$
4300
 if (@rbp << $thread << @r9 & 0y101 << @r13 >> ($proc))0y10001 << $thread << ~0x2 ^ @rbp)  { test_statement(0x21A7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx <> +0n13 & @r9 ^ @rdi | $thread) ;  // /* This is a comment  } elsif (+@r11 >> @r10 ^ $ip >> (@r8) ^ @r8 >< +@r11 >> @r10 ^ $ip >> (@r8) ^ @r8) { test_statement(0x910); } elsif ((~@rbp) ^ @rsp)0x13 >> @rbx & ($ip) & @r13 ^ @r8) { test_statement(0x1183); } else { test_statement(0x98);  /* This is a comment */  while  (@r12 | @rdx <> @r12 | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4301
 if (@rsp + 0x13 >> 0n17 << @rbx & $teb << ~@rsp & +--+@rsp >> +0y1 & $thread | +@r10 & 0y11 >= (-@r13) << $ip & @rdx >> @r11 >> +$ip & @rdx ^ @rsi << $ip & @r13 & @r10 & @rax ^ 23 ^ $thread ^ @r13 ^ @r12 | @rdi | @r12 >> 4 | -0x3 | @r9 ^ @rax)  { test_statement(0x12BD); } elsif (@r11 << 0xB >> @rax >> @rax & 22 | $ip & 0x8 & $thread | @r11 & $buffer ^ @r12(($thread) { test_statement(0x110F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer ^ @rax(@r10 ^ @r8) ; } elsif (@rax @r8 & @rsp & @r10 | @rdi ^ @r12 | -~@rsp | $ip) { test_statement(0xBEC);  while  (-@rdx < @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0n17 ! @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ val = 4 ;  while  ($ip >= @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xA9); }
$error$
$end$
4302
 if (@r9 << 22 ^ @rax & @rsi >> @r8 | @r9 | 0n7 ^ @rdx & 0n7 ^ $proc ^ @rdi ; @r9 << 22 ^ @rax & @rsi >> @r8 | @r9 | 0n7 ^ @rdx & 0n7 ^ $proc ^ @rdi)  { test_statement(0x2704);  // /* This is a comment  } else { test_statement(0x22F4); ;  /* This is a comment */  for (val = @r10; 0y10011 <> 0n18;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @r12 < @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4303
 if (@rsi + @r11 & @rbp << @r9 ^ +@r9 << @r10 >> (0n4) >> $ip ^ (@r8) & 0n2 ^ @r11 ^ 5 = @r8 << (@r11) >> (6) << $teb >> @rbx >> ~@rax & @rbp >> @rdx | @r12 & @rbx ^ $proc >> $buffer & 0y0 ^ @rax & @r12 ^ @r9)  { test_statement(0x1FC3);  This is a not opened comment */  /* This is a comment */  /* This is a comment */ }
$error$
$end$
4304
 if (@rdi << $thread << $buffer & 0x11 << @rbp & -@r11 & @rdi & @rbx | @rbx & @rax & @r13 0y1111 << @rbx & 3 << -+0n19 >> @rbx >> 0y1110 ^ 0y111 >> @rsp & @r11 >> @rsi ^ @r12 >> $ip & @r10 ^ @rdi ^ @r13 ^ @rdi | @r11 << @r9 >> +@rbp >> @rbx & @r12 ^ @r13 ^ $ip & @rdx ^ $ip ^ 0n4)  { test_statement(0xF2C); } else { test_statement(0x45B); }
$error$
$end$
4305
 if (@rax << @r8 << @rsp >> @rdx ^ -@r13 & -@r11)@rax << @r8 << @rsp >> @rdx ^ -@r13 & -@r11)  { test_statement(0x14C8); }
$error$
$end$
4306
 if ($thread ^ (@r10) >> @r12 >> $buffer = $thread ^ (@r10) >> @r12 >> $buffer)  { test_statement(0x1A86); } else { test_statement(0x1076); }
$error$
$end$
4307
 if ($teb + @rsp | @rsi << (0n4) ^ @rbp > $thread + -(@rsi) | @rsp >> 10 >> +(0n4))  { test_statement(0x1A45); } elsif (0n4 << @r8 & @rax >> @rbp & @rsp | 0n3 & 0x12 & @rdi ^ @r9 & $proc ^ ~$ip | @r9 & -@rsp ^ @rax ^ 0xB((0n5 ^ @r9 >> @rdi | @rsi ^ @rsp ^ 0y1110 | 0y10) { test_statement(0x927);  for (val = 10; (@r8) ^ $proc | @rbp | 0y110 != (@r8) ^ $proc | @rbp | 0y110;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x8DB); ; ; }
$error$
$end$
4308
 if (0y1100 & $ip & 0y10010 >> @r13 < 0y1100 & $ip & 0y10010 >> @r13)  { test_statement(0x1F2C); val = 0x10 >> @rbp ; } elsif (0y11 >> $proc & @r13 >> @rdi >= @r11 >> @rbx & @rbx >> @r10 ^ @rbp >> $buffer ^ @rax & $buffer | @rsi ^ $ip & @rsp ^ @rbx | @r10 & @rdx | $thread ^ 0x8 | (@rdi) | $buffer) { test_statement(0x1568);  This is a not opened comment */ } elsif (@r13 & @rsi > @r8 & 0y101 | @rdi ^ @rbp | 0y10010 ^ @r11) { test_statement(0x137);  /* This is a comment */  This is a not opened comment */ } elsif (@rbp & 0y1011 ^ 0n13 <= @rsp ^ @rax ^ +$thread) { test_statement(0x456);  if (@r11 > @r11)  { test_statement(0xD6C); } else { test_statement(0x50C); } } else { test_statement(0xA4F); }
$error$
$end$
4309
 if (@r11 >> $teb << @rdi >> @rsp ^ ~@r10 << $thread & @r11 & @r9 & 0n6 | $proc & @rdi & @rsp & @rdx != @r11 >> $teb << @rdi >> @rsp ^ ~@r10 << $thread & @r11 & @r9 & 0n6 | $proc & @rdi & @rsp & @rdx)  { test_statement(0x1D15);  break; } elsif ($ip >> $buffer ^ @rsp | @rdi ^ -$teb & @rsp > $proc << @r10 >> +$ip) { test_statement(0x2FF); }
$error$
$end$
4310
 if ((+@rdi) + @rsi << @r9 << @r9 >> @rbp << +@r13 >> @rsi >> ++$ip & (@rax) << @rdi >> @rdx >> ~@r11 & @rax & @r11 ^ 0xA << @rdx >> @r13 >> @rdx & @rax >> @rsi != (+@rdi) + @rsi << @r9 << @r9 >> @rbp << +@r13 >> @rsi >> ++$ip & (@rax) << @rdi >> @rdx >> ~@r11 & @rax & @r11 ^ 0xA << @rdx >> @r13 >> @rdx & @rax >> @rsi)  { test_statement(0x37D); ; ; } else { test_statement(0x1CB8);  if (@rsp(@rsp)  { test_statement(0x8); } elsif ($proc | @rdi <> $thread) { test_statement(0x236A); } elsif (@r8 >< @r8) { test_statement(0x195E); } else { test_statement(0x25A0); }  /* This is a not closed comment  while  (~@rsi((~@rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
4311
 if (@rdi >> 12 << $teb ^ @rax << @rdx >> @rax >> +@r8 & @rbp ^ $teb & @r13 ^ $buffer | -@r10 << 0y1110 >> ~$ip >> @r11 & $proc & @r13 == @r8 + @rbx >> 2 >> $thread >> 0y111 ^ 0xF << @r8 >> @rsi & 14 >> @rsp & @r10 & $proc ^ @r10 >> @rsi & @rdi & $buffer ^ 0y1101 ^ (0x4))  { test_statement(0x1A6F); } elsif (0y1 << 0y10010 >> (@rsi) >> -@r10 & @rsp >> ($buffer) ^ @rdi & $thread > @r13 >> +$teb | @r8 ^ $proc & @rdx ^ 0n9 ^ @r12 | @rsi & @r12 | -@r11 ^ @r8) { test_statement(0x16A8);  // /* This is a comment   // /* This is a comment  } else { test_statement(0x7D3);  while  (@rsi | @r10 == $proc ^ $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ @rax = @rdx ; }
$error$
$end$
4312
 if (@r10 << $proc >> @rbp | @rsp << @rbx >> (@rdx) >> @r8 >< @r11 + @rdi << @r12 & -$teb << @rdx ^ @rdx << $proc ^ @r12 >> @r11)  { test_statement(0x2170); val = @rsp >> @r10 ; }
$error$
$end$
4313
 if ($ip ^ 0 ^ @r13 >> @rdx & @rbx ! $ip ^ 0 ^ @r13 >> @rdx & @rbx)  { test_statement(0x1A72);  for (; $proc & 0n16 0y101;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } else { test_statement(0x111F); }
$error$
$end$
4314
 if (~@rsp + $ip << @r11 << $ip & 6 & $proc ^ -$teb << $thread ^ @rsi >> @rdi >= ~@rsp + $ip << @r11 << $ip & 6 & $proc ^ -$teb << $thread ^ @rsi >> @rdi)  { test_statement(0x163); } elsif ($ip ^ 0n17 & @r10 ^ 0xB ^ (@rbp) ^ @rax | @rdx >> +~@r12 & $teb < $ip ^ 0n17 & @r10 ^ 0xB ^ (@rbp) ^ @rax | @rdx >> +~@r12 & $teb) { test_statement(0x1905); } elsif (@rbx = @r10 & $thread ^ $proc & +$proc) { test_statement(0x1221);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -+@rsp < -+@rsp) ; } elsif (0x10 ^ $ip ^ 0y1010 | -@rax ! $buffer | 0x8 ^ 0y10010 | -@r12 | @r9) { test_statement(0x18B8);  for (val = 10; $proc <= $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   /* This is a comment */ } else { test_statement(0x25AD); }
$error$
$end$
4315
 if (@rdx << $teb & @rdi & $buffer & $teb & $buffer = $buffer + @r12 >> 0y101 & @r10 << @r9 & $buffer | $proc << @r13 >> $ip & 0x4 >> +$thread ^ 0xA >> @rdx & @rsi)  { test_statement(0x22B1);  break; } else { test_statement(0x2160); }
$error$
$end$
4316
 if ($buffer + @r12 ^ $ip << +@rax >> @r8 & @r8 >> 0n11 & -@r8 & @r13 == 0x4 << 0y1101 << @r9 >> $ip << (@r11) & @rdx << 14 & @rdx)  { test_statement(0xEFF);  This is a not opened comment */ ;  /* This is a comment */ }
$error$
$end$
4317
 if (@r11 + -$thread >> @rdi ^ @rsi << $teb >> 0n2 ^ @rbx >> @r9 & @r10 | @r9 & @r9 >> $proc & @r13 & @rbx ^ $teb >> $teb > @rbx + @r10 ^ @rdi >> @r12 & @rsp ^ @rsi & 0y1001 ^ 12 | -@rdi << @rbp >> @rsp >> @rdx ^ 0n7 >> $teb | $thread >> @rbp & @rsi ^ @r13 & @rsi | ~0x12)  { test_statement(0x14EB); } else { test_statement(0x1079); }
$error$
$end$
4318
 if ($ip >> @rbx << ~@r8 >> @r9 >> $ip & @rbx >> @r13 & +$teb & $proc | @rdi << ~@r9 & +$ip >> @r10 ^ @rdi >> $proc | 0n15 >> ~+$proc ! $ip >> @rbx << ~@r8 >> @r9 >> $ip & @rbx >> @r13 & +$teb & $proc | @rdi << ~@r9 & +$ip >> @r10 ^ @rdi >> $proc | 0n15 >> ~+$proc)  { test_statement(0x1DB9); } else { test_statement(0x6A1); }
$error$
$end$
4319
 if (@rbx << @r10 | $ip != @r11 >> @r9 ^ @r9 ^ @r12 ^ @rbx)  { test_statement(0x12DC);  if ($proc & $thread ^ @rdx ^ 0n0 = ($buffer) ^ @rax | 0x11 ^ @rsp | @rbx)  { test_statement(0x1862); } elsif (0n11 ^ 0x1 | 1 <= $teb ^ 0y1100 | @rbp | 0n12) { test_statement(0x58C); } elsif (@r8 ! @r8) { test_statement(0xFF3); } elsif (@rsp ! @r8) { test_statement(0x1B93); } elsif (@rsi != @rsi) { test_statement(0xAED); } else { test_statement(0x18DE); }  /* This is a not closed comment  break; } elsif ($teb << +@rax & @rdi | 0xF & @r13 & @rbx ^ @rbp | $ip | @rax | @r13 | $proc != @rax << 0x5 >> @r10 >> @r8 & @rbx & @rbx ^ $buffer ^ -@r12 & 0x4) { test_statement(0x22DF);  /* This is a comment */ ;  /* This is a not closed comment  /* This is a comment */ } elsif ($ip >> @r10 & @r9))@r9) { test_statement(0x9E7);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 > ~@r8) ; }
$error$
$end$
4320
 if (0x2 << $teb | 0x0 << @rsp ^ @rbx >> -@rbx & $ip & $thread ^ $teb & 0y10001 | @r9 & $ip & @rsi ^ @r12 & 0x5 | @rbx ^ +@rbp | @r8 ^ +@r12 ; 0x2 << $teb | 0x0 << @rsp ^ @rbx >> -@rbx & $ip & $thread ^ $teb & 0y10001 | @r9 & $ip & @rsi ^ @r12 & 0x5 | @rbx ^ +@rbp | @r8 ^ +@r12)  { test_statement(0x1A55);  // /* This is a comment  } elsif (@rsp << ~(-$ip) >> 0x10 >> @rbx & $proc & $buffer & 14 ^ @r9 >> @r12 & $thread & $buffer ; @rsp << ~(-$ip) >> 0x10 >> @rbx & $proc & $buffer & 14 ^ @r9 >> @r12 & $thread & $buffer) { test_statement(0x2075);  // /* This is a comment  } elsif (@r8 >> @r8 & $ip & $proc | @rsp & @rdx ! $proc >> 0n7 & (@rdi) & $teb | 0xB ^ @rsp | @r8) { test_statement(0x768); } else { test_statement(0x230B); }
$error$
$end$
4321
 if ((@rsi) << @r13 << $ip & @rbx & @rsp ^ (@r9)((@rsi >> $proc & @rbx << @rax >> $ip >> $buffer)  { test_statement(0x2471);  /* This is a not closed comment } elsif (@rbp << 0x12 & +-@r8 ^ ~0y10011 >> @r11 & $thread & @rdi))@rbp << 0x12 & +-@r8 ^ ~0y10011 >> @r11 & $thread & @rdi) { test_statement(0x1189); }
$error$
$end$
4322
 if (0n13 << @rsp >> @r10 >> @rsp ^ 5 << @r13 >> @rax >> $buffer & @rsi >> @r11 & @r10 & @rdi ^ ~6 >> 0x0 = $teb & @rbx << @rax >> (~@r12) >> @r13 | $thread << @r13 >> @r13 & (21) | $teb >> $ip & (@rsi) & 5 ^ @r8 & 0y1011)  { test_statement(0x19B); } elsif (@r12 >> $buffer | $proc >> @r8 & @rsp & $ip | 21 | @rsp ^ 0xF | 0y1110 | 0x10))$buffer ^ $buffer & 22 ^ @r8 & $buffer ^ @r12 ^ @rsp | $ip >> @rax) { test_statement(0x2303); }
$error$
$end$
4323
 if ($buffer + @rbx << (@rbx) << @rdx >> @r8 << $thread >> -(@rsp) | @r8 >> @rbx >> @rdi & @rdx | 0y10010 & @rbp & $buffer | @r8 & 0y10 ^ @rdi ^ @rsi >= $buffer + @rbx << (@rbx) << @rdx >> @r8 << $thread >> -(@rsp) | @r8 >> @rbx >> @rdi & @rdx | 0y10010 & @rbp & $buffer | @r8 & 0y10 ^ @rdi ^ @rsi)  { test_statement(0x1E08);  // /* This is a comment  } elsif (0x6 != 0x6) { test_statement(0xFF8); } else { test_statement(0x7B9); ;  break; }
$error$
$end$
4324
 if ($ip + @rdi << @rsi($ip + 0x9 << @rsp >> 20 >> @r10 >> @r8 | @r11 << @r10 >> $proc >> (@rbx) ^ $ip >> $thread & @r12 ^ @r12 & @r8)  { test_statement(0x1305);  /* This is a not closed comment ;  This is a not opened comment */ } else { test_statement(0xFDE);  break;  /* This is a not closed comment @rax = @r9 ; }
$error$
$end$
4325
 if (@rbx @rbx)  { test_statement(0x1336);  if (@rax == $teb & ~@r10 | @rax ^ 0y10)  { test_statement(0x20D2); } val = $proc | @r11 ^ $thread | @rax ;  This is a not opened comment */ } else { test_statement(0xC99); }
$error$
$end$
4326
 if ($thread >> @r9 << @r8 & @r10 << -@rsp >> -@rsp >> @rsi ^ @rdi << @rdi ^ @r12 | $proc << @rsi >> @r8 | 14 >> @rdi | $proc ^ $proc | (@rdx) ^ @rsp)$thread >> @r9 << @r8 & @r10 << -@rsp >> -@rsp >> @rsi ^ @rdi << @rdi ^ @r12 | $proc << @rsi >> @r8 | 14 >> @rdi | $proc ^ $proc | (@rdx) ^ @rsp)  { test_statement(0x62B);  while  (@rsi ^ $thread ^ 0xA >< @rsi ^ $thread ^ 0xA)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   for (val = 10; $teb | ~0n5 != $teb | ~0n5;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 << $teb & @rdx | -@rbp >> (~(@rsi)) & 2 ^ 0n8 & 0xE @r11 >> -@r9) { test_statement(0x3B1);  /* This is a comment */ }
$error$
$end$
4327
 if ((@r9) >> 0n2 << @rsp & @rsi << @rbp >> @r13 ^ @rsp >> 21 >> @rax & $ip ^ +@rdi >> $proc & -0x7 & @r11 ^ $proc & @r13 ^ @rbx >= (@r9) >> 0n2 << @rsp & @rsi << @rbp >> @r13 ^ @rsp >> 21 >> @rax & $ip ^ +@rdi >> $proc & -0x7 & @r11 ^ $proc & @r13 ^ @rbx)  { test_statement(0x249B); } else { test_statement(0x225); }
$error$
$end$
4328
 if (@rsp ^ @r13 & @rbx | ~$thread << 3 & 17 >> @r8 != -@rdx << -+0n13 << (+0n8) >> @rbx & $ip << 0y1011 >> @r13 >> @rsp ^ 0n15 ^ @r9 >> ~@rdi)  { test_statement(0x12C3);  /* This is a comment */ } elsif ((-@rbp) >> 0y0 >> 0y1111 | @rdi >> @rsp & (@rdi) ^ 21 ^ $teb ^ @r9 <= @r9 >> $teb) { test_statement(0x2D9); } elsif (+@rdi >> @rsi & -$ip ^ @rsp ^ $buffer ^ $thread | @r8 & ~@rdx ^ @r8 = @r12 >> @r10 ^ $thread & 0 ^ $thread ^ @r13 | @r9 ^ 23 | @r9 | @rdi | ~@r10) { test_statement(0x2220);  for (val = 10; @rbp | +@rsi ; @rbp | +@rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @r13 | $buffer ; } elsif (@r11 | (11) | +@rbp)@rsi & @r10 | @rsp | @r10 | 0n17) { test_statement(0x8A0); ; @rax = @rdi ; }
$error$
$end$
4329
 if (0x13 << (0y1010) << @r12 >> @rax << @rax >> $proc >> @rdi | @rbp << @rsp ^ 0n13 >> @r12 & @rax | @rdi >> 0y1100 & @rdx & @r10 ^ 6 & @r9 | @r13 & $proc ^ 0n13))$buffer << 0x4 << $buffer ^ @r13 << @rsp & @r13 >> $thread & $proc & 0y1)  { test_statement(0x11AE);  /* This is a comment */ } elsif (0xC << @rdx >> (~@rbp)(0y11 & $teb >> 6 & $thread | @r9 >> @r11 ^ ~@rdx & (@rbx) ^ $proc | @rsp & 0x8 ^ @r9 | @r12) { test_statement(0x2379);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp))@rdx) ; }
$error$
$end$
4330
 if (@rdi + $teb << 23 & @rsi >> $ip >> $thread & 0y1000 & (13) ^ $ip << $thread >> (-6) & @rdx >> @rbp ^ @rax >> ~@rsp | +-$buffer >> @r12(0xD & $proc >> $thread >> $thread | @rsp << -@rsi >> @rdx >> -@rsp ^ @r11 & @r10 & @r12 | @rbx & @rbx & ~@rsp)  { test_statement(0x140C); } elsif (@rsp >> @r9 != @rsp >> @r9) { test_statement(0x60);  if (+@r10 >= $proc ^ @rax | 0y1111 | @r12)  { test_statement(0xD17); } } elsif (@rdx >> @rdx | $proc & -0x6 | 0y111 | @rsp <= $proc | @r13 & (@r12) | @rsi ^ @rdi | @r10) { test_statement(0x13F4);  /* This is a comment */ } elsif (@r9 ^ @r11 ; @r9 ^ @r11) { test_statement(0x1E7C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@r11 = +@r11) ;  /* This is a not closed comment  if (~$buffer(($buffer)  { test_statement(0xDA0); }  /* This is a comment */ }
$error$
$end$
4331
 if (@rsi >> @rdi << $thread >> @rsi >> @rsi & @rbp >> 0n18 ^ @r10 << @rbx ^ +$ip >> 0n16 & --@rsi | ~@r12 >> @rsi & 0n1 < @rsi >> @rdi << $thread >> @rsi >> @rsi & @rbp >> 0n18 ^ @r10 << @rbx ^ +$ip >> 0n16 & --@rsi | ~@r12 >> @rsi & 0n1)  { test_statement(0x6AA);  /* This is a comment */ } elsif (@rdx >> $buffer >> @rbp & ~@rbp & @rsi & @r8 ^ @r12 | 3 >> 2 & @r13 & $ip ^ $thread & @rdi ^ 0xF | $thread & -@r11 ^ @rax | 11 | @rbp ; @rdi & @rbx >> @r9 ^ $ip & $proc | @rsp ^ @r13 & 0n1) { test_statement(0x1932); } elsif (@rdi >> -0y10010 = @rdi >> -0y10010) { test_statement(0x13E0);  // /* This is a comment   for (val = 10; @r9(@r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @r10 ;  /* This is a comment */ val = @r12 ;  while  (0y1011)@r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx ^ (+0y10001) ^ @r12))@rbx ^ (+0y10001) ^ @r12) { test_statement(0x981); ; } elsif (@r8 | ~$ip >< @r10 | (@rax)) { test_statement(0x2528); }
$error$
$end$
4332
 if (@rsp << @rdx << @r8 ! 0n9 + 0n4 >> ~@rbp >> @rax >> 2 & @rsp >> @rsi & +$teb)  { test_statement(0x1648);  if (@r12 ^ ((($thread))) ^ $ip | @rsi ^ @rbp | 0y1110 | $teb(@r12 ^ ((($thread))) ^ $ip | @rsi ^ @rbp | 0y1110 | $teb)  { test_statement(0x64A); } elsif (0y1010 ^ @r8 | @r13 | (@rdi)(0y1010 ^ @r8 | @r13 | (@rdi)) { test_statement(0x25DE); } else { test_statement(0x20CB); } } elsif (@r9 >> @rdx >> @rdx ^ @rax >> @r9 & @r8 & @rax ^ @r8 & 0y1000 ^ @rsi ^ 0x0 ; @r11 >> $buffer & @r13 >> ~$proc & @rax) { test_statement(0x1CA8);  while  (--$ip +@r11 ^ @rdi | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rdx | 0xF < @rdx | 0xF)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x162); }
$error$
$end$
4333
 if (@rbx + +4 << -$ip & 1 >> $proc & 0n1 >> 14 & -@r13 & @r10(0y1001 + @rdx ^ (+@r12) >> $buffer >> $thread & 0y1001 >> $ip & @rbp)  { test_statement(0x25F3);  if (@rsi & @r12(@rax & 0n13 ^ 10 ^ @r13 | @rax | @rdx | @rdi)  { test_statement(0x5B7); } else { test_statement(0x1E0C); } } elsif ($thread << $teb >> 5 >> @rdx & @r9 & @rbp ^ @rdx >> @rdx ^ $teb ^ -$teb ^ @r9 = $ip & @r11 >> $proc | @r8 >> @rax & 0x2 ^ @r8 & 0n14) { test_statement(0x7C0); }
$error$
$end$
4334
 if ($ip + @rdx << 0y10011 >> (@r11) << $teb & @rdi << @r8 >> @r9 >> @r10 & @r11 >> @r9 & @rsi & @rbp ^ @rdi >> $teb & ~-@r9 >> $teb | +~(@r9) << @r10 >> $proc & @rdi >> ++@rsp ^ @rbp | $proc >> $proc ^ @rax & @r8 ^ @rsi ^ @r13 = 7 + $proc << @rsp >> (@r12) << +$ip >> $thread >> -~@rax & @r12 << @r10 >> $thread)  { test_statement(0x178E);  while  ((0y1110) & @r9 ^ @r11 ^ @rdi > -$teb & $ip ^ @r10 ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4335
 if ($buffer << @rdi << @rsp >> 0n5 << 0y10010 & @r13 << @r9 >> $proc ^ $thread << -@r12 >> @r9 & @r13 >> @rbp & $ip ^ @rsi >> -$teb & (2) ^ $teb & @rsi <= $buffer << @rdi << @rsp >> 0n5 << 0y10010 & @r13 << @r9 >> $proc ^ $thread << -@r12 >> @r9 & @r13 >> @rbp & $ip ^ @rsi >> -$teb & (2) ^ $teb & @rsi)  { test_statement(0x1A01);  /* This is a not closed comment } else { test_statement(0x1E6B); }
$error$
$end$
4336
 if ($proc << 23 << @r9 >> @rsp << @r13 & @rax << @rsp & ~+$proc ^ 0xD << $ip >> $proc >> @rdx | 12 ^ $proc ^ 0n4 & 0n19 ^ $buffer | (@rdx) | ~@r8 ! @r9 + @rbx >> @rdx & @r11 >> @r11 >> ~@r9 | @rdi << (@r13) >> @r13 >> @rbx & $teb)  { test_statement(0x1D04); }
$error$
$end$
4337
 if ($thread + @rbp << @r8 << 6 >> @rbx << -@r11 >> $proc >> $buffer >< $thread + @rbp << @r8 << 6 >> @rbx << -@r11 >> $proc >> $buffer)  { test_statement(0x1B25); } else { test_statement(0xED8); }
$error$
$end$
4338
 if (@rsi | @r8 >> $thread ^ 0y1 >> 0n4 & $ip & @rsi ! @rsi | @r8 >> $thread ^ 0y1 >> 0n4 & $ip & @rsi)  { test_statement(0x11E0);  while  (@r11 ^ (0n9) ^ (0n4) ; @rdx | @r9 ^ 2)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12 >> 22 | @rsp & @rsp & 0n6 | @rdx | @r10 ^ ~-~@rdi | @rbp | @rdx ! @rsp << @rdx & @rbx >> $buffer) { test_statement(0x4ED); } elsif (@rsi >> (@r12) & ~@rsi & 0x9 | (@rdi) & @rdx)@rsi & @r13 & +@r9 | 0y0 ^ $thread ^ $thread) { test_statement(0x61D); } elsif (@rdi & ++~@rbp == 22 & -21 ^ @r13) { test_statement(0xBBD); ; } else { test_statement(0x413); }
$error$
$end$
4339
 if (0x3 + @r10 >> @rbp << @rdi | ++@r10 << +@rsp >> @r13 >> +10 & @rbx & ~22 | +0y10000 >> @rdi & $ip | -0xA & @rsi ^ @rsi ^ +12 | 0y1111 | $ip | ~@rbp >= 0x3 + @r10 >> @rbp << @rdi | ++@r10 << +@rsp >> @r13 >> +10 & @rbx & ~22 | +0y10000 >> @rdi & $ip | -0xA & @rsi ^ @rsi ^ +12 | 0y1111 | $ip | ~@rbp)  { test_statement(0x11CD); } else { test_statement(0x21AC);  for (val = 10; @rbx ^ @r11 | +(0x8) | @r11 <= 17;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4340
 if (@rbx >> @rsi >> 0n16 >> @rsi & -+@r9 << 0n7 & @r10 >> @r10 & 0x0 ; @rax ^ @rsi << ~~@r11 | 0y100 & 0n15 ^ @rdi & 0xC)  { test_statement(0x188A); @rax = 0xF | @r12 ; } elsif (@r13 & +$thread ^ @r10 ^ @r13 >= @r13 & +$thread ^ @r10 ^ @r13) { test_statement(0xDAB);  for (val = 10; 17 ^ @r8 >< @rax | @r12 | (0y1111);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb & ~@rbp = @r9 >> @rsi & $teb | $teb | 0y10010 ^ @r9) { test_statement(0x1B24); ; } elsif ($proc & @r13 ^ 0x5 != $buffer ^ 0y111) { test_statement(0x1251); } elsif (@rdx ^ @rdi ; @rdx ^ @rdi) { test_statement(0x2083);  if ($ip == $teb)  { test_statement(0xBC8); } } elsif (-$ip @rdi | @r13) { test_statement(0xE51); ; }
$error$
$end$
4341
 if (@r10 + (-~@r12) << $proc | @rax << @r10 & +1 >> @rbp & @r13 | -@r10 & $thread & @r13 ^ @rdx & $thread ^ @rax ^ $buffer ; @rbp + @rbx << 0x7 ^ $thread << @rbp >> 0x2 >> @rsp | @r8 & @rsi)  { test_statement(0x61D);  This is a not opened comment */ }
$error$
$end$
4342
 if (@r8 + @rdx << -@rsi << @r10 & @r11 ^ @rsi >> $proc ^ @rbx >> @rdx | 2 << $thread >> 0n14 >> 0y1001 & @r8 == 0y111 & -@rbx << @r11 >> 6)  { test_statement(0xDCB); } elsif (14 >> -@rdi >> @r11 ^ @rbp ; 14 >> -@rdi >> @r11 ^ @rbp) { test_statement(0x145F);  // /* This is a comment   // /* This is a comment   for (val = 10; 0n11))0n11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 >> @r12 (@rbp) & +-0n0 & @rdi | 0y10 & @r11 | (22)) { test_statement(0x26BD);  while  ($ip | @rsp < $ip | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @r8 == $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4343
 if (~($buffer) + -$teb << 0y1010 & @rsp >> @rdx >> @rdx ^ +$thread >> @rsp >> @r12 & @rsp >> @rbp > $buffer | (@rdx) << @r12 >> 0n16 >> ~@r9 & $ip ^ @r12 >> @r11 & @rax & +-@r11)  { test_statement(0x1713); ; }
$error$
$end$
4344
 if (@rsi >> ~$thread >> @rdx ! @rsi >> ~$thread >> @rdx)  { test_statement(0x9D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb & 0x3 ^ @rbx | @rax <> @r13) ;  /* This is a not closed comment  break;  break;  for (val = 10; @rbx))0y1;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4345
 if (-$buffer + $teb << @rsi << @r10 | 0y1011 << ~-0y11 & ($buffer) & $buffer & $buffer | (@rdi) >> $thread & 1 = $buffer >> $thread << $buffer ^ $thread ^ @r9 & @rbx ^ $thread | @rax & 0x11 >> +@rsp & @rsp & $ip)  { test_statement(0x1859); } else { test_statement(0x267E); }
$error$
$end$
4346
 if (@r12 + @rax << @r12 << +$teb >> +@rsi << 21)+$proc + @r8 ^ $thread >> 0n15 ^ $buffer ^ $thread ^ @rdx | @r11 << @rsp >> 0y10001)  { test_statement(0x3A2);  for (val = 10; @rsp & @r10 ^ @rdi ^ @r12 ! @rsp & @r10 ^ @rdi ^ @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x141A); }
$error$
$end$
4347
 if (@rax + @rdi >> @r12 >> @rsp >> @r12 ^ @rdi << @rsi & 0x1 & @rsp | 0n19 << @rsp & 0n11 >> -~0n12 & 0xD | ~$buffer & (@r10) ^ @rdi & @r10 ^ @rsp ^ @r13 <> @rax + @rdi >> @r12 >> @rsp >> @r12 ^ @rdi << @rsi & 0x1 & @rsp | 0n19 << @rsp & 0n11 >> -~0n12 & 0xD | ~$buffer & (@r10) ^ @rdi & @r10 ^ @rsp ^ @r13)  { test_statement(0x157C);  break; }
$error$
$end$
4348
 if (@rdi >> 0xD | @rdi ^ 0n9(@rdi >> 0xD | @rdi ^ 0n9)  { test_statement(0x1803); } else { test_statement(0x122B); }
$error$
$end$
4349
 if (@rdx + $thread >> @r12 << @r11 & +($ip) >> @rbp >> @rax & -~@rbx >> @r13 & $teb & @r9 | 0x10 >> @r12 & @r11 >> $buffer & $buffer & $proc == @r11)  { test_statement(0x6E5); ; } else { test_statement(0x6E6); }
$error$
$end$
4350
 if ($buffer + @r8 >> -@rbx >> $proc >> 21 & -@rsp >> 0n2 ^ @rsi & 17 >> $ip & ~@rbx ^ $proc == $buffer + @r8 >> -@rbx >> $proc >> 21 & -@rsp >> 0n2 ^ @rsi & 17 >> $ip & ~@rbx ^ $proc)  { test_statement(0x5E8); ;  This is a not opened comment */  break; } elsif (@rax >> @rdx >> @r10 & -$thread >> @rsi ; @r13 >> @r9 ^ @rsi >> @rax & @r9 ^ @rsi ^ $proc ^ @rbp | @r13 >> $teb & $thread ^ @r11 ^ $buffer | @rdi ^ 0x5) { test_statement(0x2541);  break; } else { test_statement(0x156B);  break; }
$error$
$end$
4351
 if (-@r13 + 0xE == 0x8 + -6 << 0n7 << +@r11 >> $proc << ~@rdx >> @rbx | @r11 << +1 | @r12 & @rsi)  { test_statement(0xCF6); @rax = @rdx ^ @rbp & @r12 ^ ($thread) ; } elsif (@r9 >= @rbx << ~+$teb >> @rbx | @r11 >> $buffer & 21 ^ +@r12 & +0y100 ^ @rsp | ~@rdi ^ @rsp ^ @r11) { test_statement(0x106A); }
$error$
$end$
4352
 if (0y101 + @rbp >> $thread << 0x13 >> @rbx | @r9 << @rbx >> +@r11 & 0n7 >> ~@rsi = 0y101 + @rbp >> $thread << 0x13 >> @rbx | @r9 << @rbx >> +@r11 & 0n7 >> ~@rsi)  { test_statement(0x11C3); ;  break; } elsif (@r12 << @rdi & -(~@rdx) ^ @r10 >> @rsi ^ $buffer & @rsp | @rdx & +@r11((@r12 << @rdi & -(~@rdx) ^ @r10 >> @rsi ^ $buffer & @rsp | @rdx & +@r11) { test_statement(0x373); } elsif (-$teb ^ +0y1011 -$teb ^ +0y1011) { test_statement(0x20C2);  /* This is a comment */ } else { test_statement(0x95); }
$error$
$end$
4353
 if (11 >> @rdi << @rsp >> @rdi >> $ip & @r9 << @r9 >> $teb >> @r8 ^ @r8 << @rbp ^ -@rbp >> $proc & @rsp ^ @rbx & 11 ^ 0x5 ^ 0x13 | $proc << ~@rdi & $thread @rax + @rdx << @rsp & @r8 << 0xA >> 0y100 >> @rdi ^ 0xD & @r8 >> 0x8 & $thread & @rsi ^ $teb & @rdi & ($thread) | (0y10011))  { test_statement(0x1815); } else { test_statement(0x123F); }
$error$
$end$
4354
 if (6 & $proc << $proc >> @r12 ^ @rdx ^ 12 & @rdi & $buffer(0n2 & $ip << @r11 & 0x1 ^ ~-~@r9 >> 0x7 >> @r11 & $ip & (@rdi) | $proc ^ 0x11 & @r10 & @rdx)  { test_statement(0x1C45); }
$error$
$end$
4355
 if (@rsi << @r9 << 22 >> @r13 << 0y1111 >> @rdx >> ($thread) & 0n8 << @rsp >> @rdx >< @rbx + 0n18 & $ip)  { test_statement(0x26AD);  This is a not opened comment */  break; } elsif (@rsi & @rbp >> 0n8 | $thread ^ ($teb) ^ 0x13 ^ -@rsi | @r13(0y1101 << @rbp >> 0n7 >> 0y101 & @rsp >> ~@r8 ^ @rdi >> @r8 | $thread) { test_statement(0x23); }
$error$
$end$
4356
 if (@r13 + 0x10 >> @r10 >> $thread ^ @r9 << $proc = @r13 >> @r9 & @r12 & @r10 & 0n1)  { test_statement(0x25E9); } else { test_statement(0xF26); }
$error$
$end$
4357
 if (@r11 >> @rdx << $buffer >> @rdx >> @rax ^ @r8 & @rbp | 0xA << @r13 >> @r12 >> 0y10 & @r10 >> $ip ^ $teb >> 0x13 ^ @rdx((@r11 >> @rdx << $buffer >> @rdx >> @rax ^ @r8 & @rbp | 0xA << @r13 >> @r12 >> 0y10 & @r10 >> $ip ^ $teb >> 0x13 ^ @rdx)  { test_statement(0x2393);  break; } elsif (4 >> 22 >> 0x3 > @r12 << $thread >> ~@rsp & @rdx & @r11 | 0x0 >> @rbp & 20 ^ $proc & @rsi ^ 0y10001 | 0x3 & @r9) { test_statement(0x837); } else { test_statement(0x155B); }
$error$
$end$
4358
 if (@r9 & ~$teb >> @r11 & $thread >> @r13 | @rax >> 0y11 >> @r11 ^ 0xE >> 14 ^ @r11 ^ @rdi ^ +@rdx == @r12 + @r9 << 17 << $ip ^ $thread & @rbx >> @rdi ^ $buffer & $thread)  { test_statement(0x9C9);  if (@r8 & --@rbp ^ @rsp ^ @rax | 0y1101 ^ $thread ; @r8 & --@rbp ^ @rsp ^ @rax | 0y1101 ^ $thread)  { test_statement(0x811); } elsif (@r13 ^ $teb))@r10 ^ 0x3) { test_statement(0xE89); } elsif (@rdi | @rsp = @rsi) { test_statement(0x26D0); } else { test_statement(0x2065); }  for (; ~~@r13 ^ @r8 ! ~~@r13 ^ @r8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rdx | $teb < @r9 | @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (0y1100 ! $thread)  { test_statement(0x2496); } else { test_statement(0x179); }  // /* This is a comment  }
$error$
$end$
4359
 if (@rbp << @r12 ^ @rdx ^ @rbx & $buffer ^ @r8 & -@rsi ^ 0y1001 | $proc << @rbp ^ $teb ^ +$buffer & @r12 ^ 4 ^ $buffer | @r13 & ($proc) & 0y1101 ^ @rbx & @rsi <= +$teb << @rsp << 0y0 & @rax >> $thread >> +@r8 & @r9 & @r12 & @r13 ^ @rsi << $buffer >> 0x12 >> (@r10) & @r11 ^ $teb)  { test_statement(0x1B6C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@r11) <> @rdi | 0 ^ $thread) ; } else { test_statement(0x7B7); }
$error$
$end$
4360
 if ($thread << 0n17 ^ @r8 << $teb >> 2 >> ~@r12 & (@r11) >> @r9 ^ 21 & @r9($teb << +@rbp << 4 >> @r8 << @r9 & -(0y1011) << 0n13 >> @rbx >> -(0n9))  { test_statement(0x108E); @rax = 0x9 >> $thread & @r11 & @rdx ; } elsif (0x9 << @rbp & @r10 ^ $thread & $proc & $ip = @r12 >> 0n13 & @rsp & $teb ^ $proc ^ @rbx ^ 10 ^ (@r9)) { test_statement(0x1829); } elsif ((@r12) ^ (0n11) ^ 0x12 @r11 & @rdx & $buffer) { test_statement(0xA5D); } else { test_statement(0x136A); }
$error$
$end$
4361
 if (@r11 + @rax >> @rdx << $thread >> @rax >> @rdx & @r13 & @rdx & @rax & @r13 | @rdi << 15 & -$thread >> 0y1011 ^ @r13 >> @rdx & @r12 ^ @rsp(0xC + @r8 & $buffer >> -@r12 >> @r9 | @rax << @rsp >> $proc & @r11 & 0n7 ^ @r11 | 0x10 ^ 6 ^ 0n19 ^ @r12)  { test_statement(0x1D82);  This is a not opened comment */ ; } elsif (21 >> $ip >> @rsp & @r11 & @rdx & $proc ^ $proc((@rax << @rdi & @r10) { test_statement(0xA3E); } elsif (@rsi & $teb & @r9))0xF & @rsi & 0n15 ^ @r8 & @r11 ^ @rsi ^ $thread | 0y100 & +@rbx | @r11 ^ -($proc) | @rbp | -@r10) { test_statement(0x5D2); } else { test_statement(0x230E);  /* This is a not closed comment }
$error$
$end$
4362
 if (0y111 << @rbx & @rdx << @r12 >> @r9 ^ 11 << @r8 ^ $ip >> @rdx & (0n3) & ~3 ^ $buffer | @r12 >> ($buffer) >> 6 | @rdx | 17 & @r13 ^ 0n4 | @r9 ^ 0xD | @rdi == 0y111 << @rbx & @rdx << @r12 >> @r9 ^ 11 << @r8 ^ $ip >> @rdx & (0n3) & ~3 ^ $buffer | @r12 >> ($buffer) >> 6 | @rdx | 17 & @r13 ^ 0n4 | @r9 ^ 0xD | @rdi)  { test_statement(0x23EE);  // /* This is a comment  ; @rax = @rbx ^ 0n9 | @rdi ;  while  (0n17 > $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (0n11 >> @rsp & +@r10 & $buffer ^ @r8 = $teb >> @rax >> $proc ^ $proc & @r10 & $thread | @r9 & $proc & -@rdi ^ @r8 & ~@rax | 0y1 | @r11 ^ 3 | $buffer | ($proc)) { test_statement(0x76E);  break; val = 0x6 ^ @rdx | @r10 ; } elsif (@r13 >> 0x7($ip >> @r10 ^ @r9) { test_statement(0x262D); }
$error$
$end$
4363
 if ($proc ; @rsi >> @rsp << ~2 >> @rdi ^ @r13 << $buffer & @rax ^ (0n8) & @rbx ^ @rbx & $ip ^ 0n18 | $thread << $ip ^ ~-@r9 >> 0n15 | @rsp >> @rsp ^ @r10)  { test_statement(0x10AA); } elsif (@rsp & @r10 >> @r13 | $buffer & @rbp | @r11 >< @rsp & @r10 >> @r13 | $buffer & @rbp | @r11) { test_statement(0x806); } elsif (@rdx >> @r12 ^ @r13 & ~21 != +@rdx >> -$thread & @r9 & +@rbx) { test_statement(0x1ACF);  if (@rsp ! +0y101 | @rdi)  { test_statement(0xE6B); } elsif (@r13)@rdi) { test_statement(0x15EB); } elsif (0y1010))@rsp) { test_statement(0x1CB0); } elsif ($buffer ! @r12) { test_statement(0x2194); } }
$error$
$end$
4364
 if (@rsp + $ip << @rax << $buffer >> +@r12 << @rbx ^ @rsi << $teb ^ +~$ip | @rax >> 0y110 >> 0n15 & $buffer >> @rdi & @rdx & @rsi ! @rbp << -$buffer << ~@rbx >> @rbp & $ip << 3 ^ @r13 ^ 0y1110 ^ 0x9 | +@r9 >> (@rax) >> (@r10) ^ (@r11))  { test_statement(0x86C);  This is a not opened comment */ }
$error$
$end$
4365
 if ($ip << -0y1011 & 0n4 << @rdx ^ @r11 << $buffer ^ @rbp >> 0x0 | $teb << @r10 & +@r10 & $ip))$ip << -0y1011 & 0n4 << @rdx ^ @r11 << $buffer ^ @rbp >> 0x0 | $teb << @r10 & +@r10 & $ip)  { test_statement(0x208A); } else { test_statement(0x4E); }
$error$
$end$
4366
 if (+$thread((@rbx + $teb << @r11 >> @rsi >> -@r12 >> @r9 & $ip << @r12 ^ $thread ^ $ip >> $ip ^ @rbx)  { test_statement(0x1748);  /* This is a comment */ } else { test_statement(0x26D0);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13($proc | 0y10000) ;  if (@r13 < @r13)  { test_statement(0x1A3D); } elsif (@rdx <= @rdx) { test_statement(0x1C36); } else { test_statement(0x4DD); }  for (val = 10; @rbp = @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4367
 if (@rsi << @rbx >> @rsp << $ip | $proc << 0n2 & @r9 & @rax & @rdi ^ @r8 & @rdi & $proc = @rsi << @rbx >> @rsp << $ip | $proc << 0n2 & @r9 & @rax & @rdi ^ @r8 & @rdi & $proc)  { test_statement(0x1874); } elsif (@r8 >> 6 >> @r13 ^ @rsi = @rax << @rdx ^ @r10 >> @r12) { test_statement(0x1492); ; } else { test_statement(0x140F); }
$error$
$end$
4368
 if (@rdi << @r12 << $ip >> 0y10 << $teb >> $buffer >> @r13 & 20 << +17 & $proc >> (@r11) & @r10 & $buffer | $teb >> @rsp >> @r10 | ~0y1001 >> @rdx & 0x10 & $proc ^ 0n4 & -@r9 | $proc & (@r11) ^ ~$thread ^ @rdx)$proc >> @r13 ^ @r11 << @rsi >> @r13 >> @r8 & @rbx & $proc | @rbx << 0n6 & $teb)  { test_statement(0x8E6);  break;  break;  This is a not opened comment */ } elsif (@rsp | $proc >> @rsi ^ 0x13 & @rbp | $proc ; 20 >> -@rdx & @r13 >> @r12 ^ @rbx & @rdx & @r13 ^ (@r11)) { test_statement(0xE5B); } else { test_statement(0x2100); }
$error$
$end$
4369
 if ($proc << @r9 << $buffer >> 0n4 & $thread >> ~0xE ^ $teb << @rax | @rsp << @rbp >> @rdi & $ip >> @rbp ^ ~@r12 >> @rax & @rsi | @rbx >> @rbx & @r10 ^ @r13 & $proc ^ @rsp ^ (@rsp) <> @r10 + @rbp ^ ~20 >> @rbp & $proc >> @rax & 0y1100 & ($teb) | @r9 << @r9 ^ (@r11) >> @r9 & 0y10001 | 0n8 & 11 ^ @r9)  { test_statement(0x1B0C);  This is a not opened comment */ } elsif ($buffer << ~@rdx >> 0n8 ^ @r13 >> ~$proc & $buffer ^ @rsi & @r12 ^ @rsi ^ $teb | 0n7 ^ $buffer & @rdx ^ +(~0y1011) | $proc & @r10 ^ -$proc > +@rsi & @rsp >> @rbx & $thread) { test_statement(0x1236); } elsif (@r9 >> $proc <= 6 & @r13 ^ @rdx & @r9 ^ @r10 ^ (@rsp) | @r11 ^ @rdx) { test_statement(0x1B9F); }
$error$
$end$
4370
 if ($teb | $ip & $ip >> @r10 & @rbx | @rdx | 0n17 ^ +$buffer | ~@rsp | @rdi = $thread << @rdi << $teb >> @r12 << $proc >> @rax >> @rdx & @rdi >> 0x13 >> $ip)  { test_statement(0x21C3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n13 & @r12 ^ $proc ^ @rsp | 0y10 ^ $ip | 0x10 | $ip((@r12 & @rax ^ $thread ^ -$ip | @r12) ; } elsif ($ip << @r9 ^ @rbp | @rbp & 0x4 ^ @r9 ^ @r8 >= $ip << @r9 ^ @rbp | @rbp & 0x4 ^ @r9 ^ @r8) { test_statement(0x733);  while  ($buffer ^ @rdx <= $buffer ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y10000 >> @rdi & @rsi ^ $thread & $thread | @rdx ^ 0x11 ^ @r9 | 0 ^ @rax))((5)) | @rax & @r10) { test_statement(0xEA); } elsif (~+$teb & @rdi ^ @r11 < @r13 & @r8 ^ @r8 ^ 0n9) { test_statement(0x1D66); ; }
$error$
$end$
4371
 if ($thread << @rdi >> @rdx ^ 12 << @rdx >> $proc >> @rbx & @rbx >> @r10 & @rax & @r10 | ~@r13 >> (@r12) & @r10 & $proc | @rax >> $thread & 0xE & $proc ! @rax >> @rax << @r9 ^ @rbp >> 23 ^ @rax & 20 & -@rdx ^ ~@r9 | 0y1111 ^ $teb >> @r10 | @rsp >> $proc | @rax & @rdi ^ -$proc | 0x2 ^ @r10)  { test_statement(0x2269); val = @r9 & @r13 & $proc ^ @r9 & @rbx ^ +(@rdx) ^ ~$buffer | @r13 & $buffer | $thread ; } else { test_statement(0x144F); ; }
$error$
$end$
4372
 if (@rbx + @rbx & $ip & @r9)@r9 + @r12 << @r11 >> @r11 << $ip >> @r11 >> @r12 ^ ~@rdi << $ip >> @rbp >> @r8 & @r9 & @rsi ^ @rax ^ 17)  { test_statement(0xE2F); val = @rbp >> @rdi & ~$teb & ~@r11 | ~@r11 & -0x10 ^ 23 | @r9 ^ @rdi | $teb ; } else { test_statement(0x1139);  break; }
$error$
$end$
4373
 if (@rbx + 0 << $proc & @r13 << $teb & @r11 & $buffer & 0xA ^ 0x13 | ~$teb << 0y101 >> 0y10001 & ((@r8)) >> @r11 | --$ip ^ (@r11) | $thread ^ 0n18 ^ @r10 | $buffer ^ @r12 | $thread | $ip != $buffer + @rsi << -@rsp ^ @rax << @rsp >> @rdx >> @r11 ^ @r9 & @rbx & @r9 ^ $ip ^ +@rsp)  { test_statement(0x17F); } elsif (@r12 << @r8 >> 0x13 ^ 12 >> $ip ^ $buffer)-2 & @rbx >> -+-0y1101 | 3 >> @rsp) { test_statement(0x241D); } elsif (+0y1 & @rbp & @r12 ! +0y1 & @rbp & @r12) { test_statement(0x203F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp | @r11 <> 0n2 | 0y1101) ;  break; } elsif (+0n10 ^ $thread | $ip > $buffer) { test_statement(0x1FF8); }
$error$
$end$
4374
 if (-@rsp << @rdx >< 12 + @r10 << @r11 | @r13 << 4 >> @rbp >> 0n4 & $buffer & @rbp ^ (@r8) & @rsp | -@rsi >> @r12)  { test_statement(0x13EC);  while  ($proc & ~0n12 < $proc & ~0n12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4375
 if ($ip >> 1 << @rdx ! $ip >> 1 << @rdx)  { test_statement(0xE00); }
$error$
$end$
4376
 if (-@rsi + 0y1000 << $teb >> $buffer ^ @rsp >> $ip >> @r10 ^ @rbp >< $proc + $ip << +@rsi << @r12 & $thread >> (@rdx) >> @r11 & @r9 & @rbp ^ @rsi << @r12)  { test_statement(0xC51); } elsif (~@rsp << -12 & (@rdi) & 0y1000 ^ @r11 ^ @r8 ^ $teb((~@rsp << -12 & (@rdi) & 0y1000 ^ @r11 ^ @r8 ^ $teb) { test_statement(0x2AD); } elsif (@rsp >> ~$proc | @r12 ^ $teb >< @rsp >> ~$proc | @r12 ^ $teb) { test_statement(0x11BA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx != @rax) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx < @rax) ;  break;  break; } elsif (@rsp | @rax | ~@r8 >= -@r12 & ~$ip ^ $ip | @rbp ^ @rbx) { test_statement(0x1DFB); } elsif ($buffer | (0n10) | @rsi <= ~@rbp ^ @r8 | $thread) { test_statement(0x341);  if (@rsp > 0n17)  { test_statement(0x1ED0); } } elsif (@r10 = @rbx | $buffer) { test_statement(0x120D);  for (; @rdi @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; $proc)@rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x17E); val = @rbx & 0y10010 ; }
$error$
$end$
4377
 if (@r9 << @r8 << @r8 >> @r8 << 0y10011 | 0x0 << @rbp >> 0y0 ^ @rbp & (@r13) & +@rbx ^ 0x3 & @rax ^ $thread @r9 << @r8 << @r8 >> @r8 << 0y10011 | 0x0 << @rbp >> 0y0 ^ @rbp & (@r13) & +@rbx ^ 0x3 & @rax ^ $thread)  { test_statement(0xDFF);  for (val = 10; @r10 ^ $buffer ^ +@r11 <= @rdi & @rax ^ ~6;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
4378
 if (~@rdi ^ @rbp << @rsp >> $buffer ^ 0n15 >> 0x13 & $thread & -+@rbp ^ @r8 ^ 0n3 ^ @r10 | @r13 >> $buffer & ~@r9 & @rbp & $proc > ~@rdi ^ @rbp << @rsp >> $buffer ^ 0n15 >> 0x13 & $thread & -+@rbp ^ @r8 ^ 0n3 ^ @r10 | @r13 >> $buffer & ~@r9 & @rbp & $proc)  { test_statement(0x23EC); } elsif (@r12 & 0y10001 >> @rax ^ 0y101 >> @r13))@r12 & 0y10001 >> @rax ^ 0y101 >> @r13) { test_statement(0x81);  for (@rax = -@r10 | 0y11; 0n6 ^ @rax ! +@r8 ^ 0x10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r12 | $buffer = $ip | @rdi)  { test_statement(0x135C); } elsif (0n13(($thread) { test_statement(0xC3E); } elsif ($buffer(($ip) { test_statement(0x2549); } } elsif (@rsp >> ($thread) & 4 >= @rsp >> ($thread) & 4) { test_statement(0x1A45);  if ((0xE))(0xE))  { test_statement(0x66A); } elsif (($ip) >= ($ip)) { test_statement(0x18C6); } elsif ($proc != @rsp) { test_statement(0x1C7F); } } elsif (-$buffer & @rsi ^ @r8 ^ $ip | 17 >= -$buffer & @rsi ^ @r8 ^ $ip | 17) { test_statement(0x1626); ; } elsif (@rsp ^ +$proc((@rsp ^ +$proc) { test_statement(0x26B6); val = $teb ;  /* This is a comment */ } elsif ($teb <> $teb) { test_statement(0x1D75);  if (@r13 ! @r13)  { test_statement(0x2FD); }  /* This is a comment */ ; } else { test_statement(0x1AA8); }
$error$
$end$
4379
 if (@rdx << @rdi << @r12 >> (@r11) | ++@rax >> 0n2 >> $thread & @rdx ^ 0n12 >> $thread | $buffer & $thread & @rdx ; @rdx << @rdi << @r12 >> (@r11) | ++@rax >> 0n2 >> $thread & @rdx ^ 0n12 >> $thread | $buffer & $thread & @rdx)  { test_statement(0x7EE);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -$thread & @rdi ^ 16 ^ @r12 | @r12 > 0n8) ; } elsif ((@rsp) << @rbx ^ ~@r10 >> @rsi & 0x12 & +0n19 ^ @r13 <= (@rsp) << @rbx ^ ~@r10 >> @rsi & 0x12 & +0n19 ^ @r13) { test_statement(0xBA9);  /* This is a not closed comment @rax = @r9 ;  // /* This is a comment   break; val = +~$buffer ; } elsif (+@r12 & 0y1101 ^ @rdi & @rbp ^ 0y10 ! -@rbp >> @rsp ^ @r8 & @rdx) { test_statement(0x241E);  if (@rbx | @r10 == $ip)  { test_statement(0x1F41); } elsif (-@r10 <= -@r11) { test_statement(0x46A); } elsif (@r13 ! @r13) { test_statement(0x2128); } elsif ($ip < $ip) { test_statement(0x300); } else { test_statement(0x2301); } } else { test_statement(0x29E); }
$error$
$end$
4380
 if (@r13 + @r11 >> $buffer << @r9 >> @r8 & -(@rax) << 0xE & 0n2 >> @rax | @rsi << +@r13 >> @rsi | @r11 & (+@rsp) & -0y0 | @r9 | @rbp | +@rsi ! @r11 + $ip << @rsp << (@r13) >> @rdx & @rbx >> @r13 >> @rsi & $buffer ^ ~@rdi << 0n3 >> @rdi >> @rdx & @r10 & @rax)  { test_statement(0x26A5); @rax = @rsi >> $proc ^ $thread ; }
$error$
$end$
4381
 if ($ip >> 0y1 << @rbx ^ -@rbx >> $thread >> +$ip)0n6 + @r11 >> @rdi << @rsp & @r13 << @rbp)  { test_statement(0x1297);  /* This is a not closed comment  /* This is a not closed comment }
$error$
$end$
4382
 if (@r9 + +$teb ^ $proc))@r9 + @rsp << $proc << @r8 >> @rsp << ~@rsp & $ip << @rdx & $teb >> 6 & $teb & @r12 | 0y10000 & ~@rbx & $ip & @r9)  { test_statement(0x955);  while  (~@r8 & @rbx <> +4 ^ @rbx | @rsi ^ @rsi | $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4383
 if (@rdx >> @r9 & +@r9 << 0x0 & @r10 | $teb >> @rbp >> @rax & @rsi >> @rdx | @r12(($buffer + @rsi & @rsp >> @rdx | $proc >> +$teb >> +@rdi & @rbx | @r8)  { test_statement(0x2566);  // /* This is a comment   /* This is a not closed comment  if (@r9 >< (@r11))  { test_statement(0x2600); } elsif (@rax(($proc) { test_statement(0xB1E); } elsif (0y110 < 0y10010) { test_statement(0x2261); } elsif ($proc))@rsi) { test_statement(0x2A4); } else { test_statement(0x2570); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax > 0n9) ; } elsif ($thread >> @r8 >> @r11 & 0y101 ^ @rsi & (@r11) ^ 0x13 & 0y1111 | @r12 >> -$teb > @rdi << $thread ^ $buffer >> 0y1110 & @rbp) { test_statement(0x154B); }
$error$
$end$
4384
 if (@rsi << $proc << $thread >> $proc << $teb >> 0y1100 >> (@r13) & 0y10000 & $buffer ^ ~@r12 << 0x3 & @rsp ^ @r11 >> $teb & @rbp & $thread = ~@r11 << $ip & @rbx << @rbx & @r12 & 17 | @r10 << (0n16) >> @r9 >> @rbp)  { test_statement(0x1125); }
$error$
$end$
4385
 if (@rbp << @r10 << @rdi ^ ~$teb << @rax >> @r8 >> $teb $teb + @r13 << @rbx << @r10 >> $proc & $teb >> $ip ^ +@rax & +@rdx >> @r12 ^ @r11 & 0xB | -$ip >> 0n18 & +@r8)  { test_statement(0x2430);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@rdi 0y10 & @rbp | -$buffer ^ $thread | @r13 | $ip) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread | 0xD < $thread | 0xD) ; } elsif (~0xF & @r10 >> (@r8) & 0y10011 & @r11 <> 0n14 ^ $thread >> @r9 & @rax & $thread ^ $buffer) { test_statement(0x1330); } elsif (@rbx >> -$buffer & (~@rbx) | @r13 ^ @rsp ^ $ip)@rbx >> -$buffer & (~@rbx) | @r13 ^ @rsp ^ $ip) { test_statement(0x1585); } elsif (@rsp ^ $thread | +@r12 @r11 ^ @rdx | +@rbp ^ $ip) { test_statement(0x2533); } elsif ($proc == @rdx | 0y10000) { test_statement(0x1B60);  if (0n7 < 0n7)  { test_statement(0x1D17); } else { test_statement(0x338); } } elsif (@r10 > @rdi) { test_statement(0x3C4); ; }
$error$
$end$
4386
 if (@rsi + $thread >> @rdx << @r10 ^ @rax << @rsi & @rsp ^ $thread >> 0y1101((@rsi + $thread >> @rdx << @r10 ^ @rax << @rsi & @rsp ^ $thread >> 0y1101)  { test_statement(0x23E5);  /* This is a not closed comment } else { test_statement(0x214B);  while  ($teb ^ (~@rsp) | @r9 > @r10 ^ @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  for (val = 10; $teb < @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
4387
 if (@r11 + @r12 << 0n2 & +$ip & $ip >= @r11 + @r12 << 0n2 & +$ip & $ip)  { test_statement(0x168A);  This is a not opened comment */ } elsif (0x11 << 0y1110 >> @r10 ^ @r10 ^ 17 ^ @r10 <> 0x11 << 0y1110 >> @r10 ^ @r10 ^ 17 ^ @r10) { test_statement(0x17CF); }
$error$
$end$
4388
 if (@rdx + $ip << $thread << $proc >> @r10 << @rsi >< @r9 << 0y100 << 0n9 | @rsp << $ip ^ 13 ^ (@r10) ^ $proc ^ $ip)  { test_statement(0x49); }
$error$
$end$
4389
 if (@r9(0n10 & 0n6 & @r13 & @r9 & 0n2 | (@rdi) << 0xB | @rbx >> +@rsi & -$teb ^ @rbx)  { test_statement(0x1654); } else { test_statement(0x1D); }
$error$
$end$
4390
 if (+-0x4 & $teb << ~0xF >> @rdx >> @r10 & ($ip) ^ $teb << @r13 & $teb >> @r13 >< @r10 >> @rax & +@rsp << $proc >> @r11)  { test_statement(0x1DA1);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 ^ @r13 ^ $teb | @rbx | 0y1010((@rdx & @rbp) ; } elsif (@rbp & @rsp >> $buffer ^ @r8 & -@r11 & @rax | +12 >> $proc & --@r8 & @rdi ^ @rdx | 0xC & @rsp ^ 0n15 > @rbp << (@r13) >> 0n8 >> @rsp & @r12 & @rdi) { test_statement(0x8B0); } else { test_statement(0x1A7);  /* This is a comment */ }
$error$
$end$
4391
 if ((@r8) + @rdi & @rsi & 20 >> ~@rdx & 23 & ~(@rax) | (22) ^ @rdi ^ -($teb) & @r11 ^ 11 ^ -@r12 | -$thread >> $proc & @rdi & @rdx ^ @r8 & $buffer ^ ~@r9 | $buffer ^ 0n18 ^ @rdx($ip << -@rbp >> 0y100 << 0y10001)  { test_statement(0xBC4); } elsif (0x10 << ($thread) ^ @rdx >> @r9 & @rsi | @r11 >> @rsi & @r11 & @rbx ^ @r11 & @rdi ^ @rdi ^ $buffer)0x10 << ($thread) ^ @rdx >> @r9 & @rsi | @r11 >> @rsi & @r11 & @rbx ^ @r11 & @rdi ^ @rdi ^ $buffer) { test_statement(0x23A1); }
$error$
$end$
4392
 if (~~15 + @rsi >> $proc)@rdx & @r12 << @r10 ^ @rbx >> ~@r9 ^ @r11 >> -@rbx & $buffer)  { test_statement(0x1B0);  This is a not opened comment */ }
$error$
$end$
4393
 if (@rdi >> @r8 & $buffer << @rdx >> ($teb) >> @r9 & @r12 >> @rax ^ $teb << $proc | $proc >> @r9 ^ @r11 >> $thread & @r10 & @rsi | @r11 & @rsi ^ 0xD ^ @rbx | @r13 ^ $ip ^ @rbp | @rbx ^ @rax | 5 | -@r11 > @rbx >> @r12 >> 0y1001 >> (@rbp) ^ ~~0n19 << @rax >> @rdi >> 0y1100 & 0y1000 & @rdx & @rdi)  { test_statement(0x23D1);  break; val = @rsi & @r8 ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 != @r12 | (@r13)) ; } else { test_statement(0x337);  if (@r11 ^ @r8 != @rbx ^ -(0x6))  { test_statement(0x2093); } elsif (@r10))@r10) { test_statement(0xE09); } elsif (@rax)~@r9) { test_statement(0xC61); } elsif (21 <= $thread) { test_statement(0x2408); } elsif (@r11 >< @rbx) { test_statement(0x1CB7); } else { test_statement(0x1282); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp | $proc != @rdi | (@r13)) ; }
$error$
$end$
4394
 if ($buffer >> $teb & @rbx << @rbx & (@r12) >> (@rdx) & (@r9) & @rdx | +(@r12) >> @rbx | @rdi & @rbp ^ 0x6 & @rsi $proc + $thread << @r13 | @rax << 14 >> @rsi & @rsp ^ $ip ^ 13 | @rbp)  { test_statement(0xDFF);  This is a not opened comment */ }
$error$
$end$
4395
 if (@r10 + @r8 >> 0n14 << @r9 >> ~@rax & @r8 ^ $proc << (@rsp) >> 0y10001 ^ @rbx ^ 0xD ^ $teb ; $teb + @rax << @r13 << @r9 & $buffer << @rsp >> (0x0) >> @rdi & -@r10 >> $teb)  { test_statement(0xCA3); }
$error$
$end$
4396
 if ($buffer ^ @r11 & $teb | @rsp >> $teb & $thread >> @r11 & +-@rbx & $buffer ^ @rsi & @r10 ^ @rdi ^ ~@rsp | @r12 >> 0y10010 | +-$teb ^ $teb ^ @rsi | @r13 ^ ($thread) | $buffer = ~~@rsp & $ip << @rdx & @rsi ^ @r13 >> @r8 >> @r12 & (0n1) >> $proc & $buffer)  { test_statement(0xC20); } elsif (10 << +@r10 ^ @rdx & -10 & @rsi < @r10 << $ip >> @r12 >> +$buffer | @r12 ^ @rbp ^ @rdi | @r13 & @rdx) { test_statement(0xA56); } else { test_statement(0x1349);  This is a not opened comment */ }
$error$
$end$
4397
 if (~$teb ^ @r8 << +0n17 & @r8 >> ($thread) & @r8 & 0y10010))0x11 << $buffer << -$ip >> $ip >> @rax >> $ip & @rbp)  { test_statement(0xAB8);  break;  for (val = 10; @r11 ^ $buffer(@r11 ^ $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4398
 if (~0xD + ~(@rdi) << @r13 << @r10 & @r13 >> @rdi ^ 0n17 << @r10 ^ 0y1110 & -@r10 & @rsi ^ @r11 & $buffer ^ $thread ! 0n16 >> @rdx & @rdx << @r11 >> $proc ^ (~$thread) >> @rsi & (0x11) >> @rdx ^ @rdi >> (@r11))  { test_statement(0x931);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@r10) ^ 0xA | $proc ^ 6 >< @r9 & $teb ^ @r8 ^ @rax | @rbp ^ @rax) ; } else { test_statement(0x1A4E); }
$error$
$end$
4399
 if ($teb ^ @rdi << @r11 >> +@rax ^ $ip & ~$ip & +@rsi ^ @rbx ^ +0n15 ^ @r8 | @rbp << @r9 ^ 0y10000 >> $thread < $buffer + $teb << 0n19 | (@r11) >> @rdi & $buffer >> @rbx & @r12 & ~@rsi ^ @rbx ^ $ip & @rdx ^ (@rdx) ^ @rsp)  { test_statement(0xC61); ;  while  (0x13 | 17 ; @r10 ^ +@rsi | @r13 | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4400
 if ($buffer + 0x8 & +@r12 ^ 0y11 >> 0x1 >> $teb & $proc | $thread >> $buffer & @r8 | +$proc >> $teb ^ ~@r13 | @rsi | $buffer ^ 0x5 | @r11 | @r12 > $buffer + 0x8 & +@r12 ^ 0y11 >> 0x1 >> $teb & $proc | $thread >> $buffer & @r8 | +$proc >> $teb ^ ~@r13 | @rsi | $buffer ^ 0x5 | @r11 | @r12)  { test_statement(0x2CA); } else { test_statement(0x1692);  for (val = 10; 0x8 ^ @r11 | +$teb >< 0n4 ^ $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r12))+@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4401
 if ($teb >> @rbx << 0x12 >> $ip ^ @r10 << $buffer ! @rbp << ~@r8 >> 0n16 ^ 4 >> $teb >> @r12 ^ $ip & @r13 & @r9)  { test_statement(0x1415); ; }
$error$
$end$
4402
 if (@r11 + @r10 >> @rdi ^ $teb << @r13 >> @rdi | -@rbx << @r8 ^ +0y1000 | @rdx >> 0x0 ^ @rbx ^ @r10 | 0n8 = @rax + 0x7 << +@rsp >> @r12 << @r11 ^ @rsp << 0y1 & $proc ^ $teb >> @r11 ^ @rax & @r12 | @r11 << 23 >> @rsp >> @r13 ^ +$proc & @rbp)  { test_statement(0x9D1); } elsif (0xC << $proc >> @r13 ^ @r9 ^ $teb != 0xC << $proc >> @r13 ^ @r9 ^ $teb) { test_statement(0x200C); }
$error$
$end$
4403
 if (@rdi << 10 >> @rbx << @rax & @r13 << @rsp >> $teb >> ~@rax & @rbp >> @r11 & $buffer & 6(0y1001 << 0y1110 ^ @r10 << @r9 & @r10 >> @r8 ^ $proc >> 0n5 ^ @rdi ^ $ip ^ @rsp)  { test_statement(0x118B);  if (@rsi))@r13 & 16 ^ ~@r9)  { test_statement(0x11B); }  // /* This is a comment  ;  break;  while  (3(0n15)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ((@rbp) >> 20 | 0x1 & @r12 & $ip ^ @rdi >< (@rbp) >> 20 | 0x1 & @r12 & $ip ^ @rdi) { test_statement(0x197C);  if (0y10 ^ @r12((@r9 | $proc)  { test_statement(0xCE7); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~0xA(($thread) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ! @rbx) ;  if (0n1 = 0n1)  { test_statement(0x11EA); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11)@rdx) ;  // /* This is a comment   if (@r11 ! @r11)  { test_statement(0x133A); } }
$error$
$end$
4404
 if (@r12 + ~@r11 << @rax & @rdi >> @rsi >> $proc <> @r11 << @rbp << ~@rsi)  { test_statement(0x9B2); } elsif (@r13 << @r8 >> 0y110 & 0y101 >> @rsp & @r12 & 0n0 | +@rax >> +0y101 & @rbx ^ @rbx & -0xF ^ (@r11)((0x13 >> @r11 >> ($proc) | $thread & @rsp ^ 0y1010 ^ @rsp) { test_statement(0x17ED); } elsif (0y11 >> 0y10011 & @rdx & $proc ^ $thread | 0n3 ^ @r8 | ~@r13 ^ 0y101)0y11 >> 0y10011 & @rdx & $proc ^ $thread | 0n3 ^ @r8 | ~@r13 ^ 0y101) { test_statement(0x1A6D); ;  for (val = 10; 2(($buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x6D5); }
$error$
$end$
4405
 if (+~(@rdx) >> $ip ^ @r8 >> -@rdx < -@rbx ^ @r13)  { test_statement(0x68F); } else { test_statement(0x16E1); }
$error$
$end$
4406
 if (@rbx + $thread >> -0n7 >> $proc | +@rsp << $ip >> $proc >> @r12 & $ip & @r11 & @rdi ^ @r10 ^ $proc | +@rax & 0x1 ^ @rsp ^ +@rdi | 16 >= @rbx + $thread >> -0n7 >> $proc | +@rsp << $ip >> $proc >> @r12 & $ip & @r11 & @rdi ^ @r10 ^ $proc | +@rax & 0x1 ^ @rsp ^ +@rdi | 16)  { test_statement(0x1D1E); } elsif ($proc >> (@r8) ^ 22 == @rsp << (@r9) >> ~@r13 >> @r8 ^ @rsp >> 1 & @r9 ^ $thread & ($teb)) { test_statement(0xB56);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip <= $ip ^ $buffer) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n1 | -@rbx ! (@rdi)) ; @rax = $proc | (0n8) ;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb(((@rax)) ;  for (; @r12 = (@rdx);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
4407
 if (10 << @r9 << @r10 & @r13 >> @r8 & @rax >> @r10 & -0y1010 & $buffer ! $thread << @r8 << @r8 & 1 >> 0y1000 >> @rbp)  { test_statement(0x1B32); @rax = @r13 ^ @rsp & +$buffer ; }
$error$
$end$
4408
 if (~@r8 + 5 << +@rsi << $teb >> @r8 << @rdi | ~@rsi >> $thread & $buffer >> (@r11) & ~@rsi & @r13 ^ 11 >> @rdx & 0n4 & @rsp | @r12 >> @rbx | $proc & @r10)@rax + @r9)  { test_statement(0x1004); }
$error$
$end$
4409
 if (@r13 + @rsi >> 20 >> 0y1000 & @rsi << $buffer & (23) >> @rbx & @r13 | @rbx << @rbp >> @r9 >> -$teb & @rdi & @r10 ^ @rbp >> ~@r9 | 0y100 >> -0y10000 & $buffer ^ $proc & $thread <> @r11 + ~@r10 << @r12 << $thread & $proc << ~@rbp | 10 & (@rdi) >> @r11 | $thread >> (@r8) | $proc ^ $proc | @r13)  { test_statement(0x14DE); }
$error$
$end$
4410
 if (@r9 << @r11 << $thread >> @rdx << (2) | @rax << 16 >> @rsi(@r9 << @r11 << $thread >> @rdx << (2) | @rax << 16 >> @rsi)  { test_statement(0x1448);  /* This is a comment */  /* This is a comment */  /* This is a comment */  if (0y1010 > 0y1010)  { test_statement(0xE43); } else { test_statement(0x14D2); } } else { test_statement(0x1AD9); }
$error$
$end$
4411
 if (@r10 << -@rdx ^ 0y10001 | $buffer << @rsi >> @r12 ^ 0n0 >> @rsi | ~@r9 >> ~@rsi & (@rax) & @rsi ^ @rsp & @r10 | @r8 ^ 1 ^ 0n15 < 0y10000 ^ $ip << @r11 >> $buffer & @rdx >> 0n4)  { test_statement(0x1C27);  while  (0y1101 & @r13 | @r9 ^ @rsp | $thread < @r11 & $thread | @rdx ^ 0y1111)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (-@r11 << ~@r11 ^ $ip >> $teb & @r13 ^ @r12 & 0y1110 | @rsp ^ 13 & @rbp | -0y1011 ^ $thread ; @r10 << @r13 >> -@r13 ^ @rax >> @r12 | @rbp >> @rax & @r10 & @r11 ^ 0n7 & $thread ^ @r10) { test_statement(0x1FA1); } elsif ($ip >> $buffer | ~(~@r10) ^ $teb ^ @rsi | +0y1110 >= $ip >> $buffer | ~(~@r10) ^ $teb ^ @rsi | +0y1110) { test_statement(0x4BD);  if (0x12 >< 0x12)  { test_statement(0x313); } @rax = 0n9 | ($ip) ; } else { test_statement(0x6BC);  This is a not opened comment */ }
$error$
$end$
4412
 if (@r13 + ~@r8 << @rsp & @rbp ^ @rax << @rdi ^ 0n13 >> ~$buffer | 12 << @rsi | @rdx ^ +$teb & @r8 ^ 0x7 | @r12 | $buffer | @rax < @r12 + @r13 << @rdx >> @r12 & $ip << @r11 & $buffer & @r11 | ~@r12)  { test_statement(0x2250);  break;  while  (0y1110 == 0y1110)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r13 > @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4413
 if (@r11 + @rdi << 0x5 << 0n2 & 0y11 >> @rsi >> @rsi & 3 & @rdi | $thread << @rdi | --@rdi >> @rbp | $proc & $teb | 0n2 | 0xC | @rbx < 0x13 + ~+@rsp >> @r13 << @rdx & 0y1000 & $teb ^ $ip >> @r10 >> @rdi & @r8 ^ $teb & @r8 & @rbx | ~0 >> 0n18)  { test_statement(0x1946);  while  (+@rsi ^ -((@rsi)) | $ip ^ 0x13 | @r11 ; @rdx | @rbx ^ @rsi | $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  /* This is a not closed comment  /* This is a comment */ } elsif (@rbp << $teb >> @r12 >> +@rdi & @r9 & @r8 ^ @r8 ^ @rax & $buffer | @rax >> $proc ^ $ip ^ @rbp ; @rbp << $ip >> 23) { test_statement(0xC70);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ^ @rsp | @rax((@rsp ^ @rsp | @rax) ;  break; } elsif (-@r13 >> 0x7 & $ip ^ 7 & $ip ^ @rsi ^ ($ip) ; -@r13 >> 0x7 & $ip ^ 7 & $ip ^ @rsi ^ ($ip)) { test_statement(0x1520); ; } elsif (23 ^ @r9 ^ @rbx | $teb ^ ~@r11 | 3 = 23 ^ @r9 ^ @rbx | $teb ^ ~@r11 | 3) { test_statement(0x1FFA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 >= @r12) ;  /* This is a comment */ } elsif (@rax ^ @rdx | @rsi | @r8)$buffer) { test_statement(0x5C6); }
$error$
$end$
4414
 if (0x10 & @r12 << @rbp & $ip >> @r11 & @rax | @rdx << 0n9 & 0y101 >> @rsi ^ $proc & $proc <> 0x10 & @r12 << @rbp & $ip >> @r11 & @rax | @rdx << 0n9 & 0y101 >> @rsi ^ $proc & $proc)  { test_statement(0x2038);  if (@rax | $ip <= @rbx ^ ~@rbp ^ (0n19) | @r9)  { test_statement(0x633); } elsif (@r11(@r9 ^ @r10) { test_statement(0x2454); } elsif ($thread >= @rax | ~@r8) { test_statement(0x976); } elsif (@rdi > (@r8)) { test_statement(0x17E); } else { test_statement(0x200A); } }
$error$
$end$
4415
 if (0n7 + @r13 & $ip >> @rdi >> (@r12) ^ $teb ^ 0n12 >> @r9 & @r8 | 0n4 | @rdx >> @r11 <> 0n7 + @r13 & $ip >> @rdi >> (@r12) ^ $teb ^ 0n12 >> @r9 & @r8 | 0n4 | @rdx >> @r11)  { test_statement(0x2577); @rax = @rax & 0y1101 ^ @rax ; } elsif (~@r10 >> $ip >> @rdi | $proc & @r11 ^ @rbp ^ 0xB >= ~@r10 >> $ip >> @rdi | $proc & @r11 ^ @rbp ^ 0xB) { test_statement(0x176A); } else { test_statement(0x59F); }
$error$
$end$
4416
 if ($buffer + +-(@r8) & @rdx << @rdx >> $buffer >> $ip ^ 0y1000 ^ 0x10 ^ 2 | @r9 << @rdi >> @rdx >> ~@rbp & +0xD & -@rbp & @rbp ^ $thread >> $thread & @r13 & @rbx | $buffer >> $teb & 0y1 ^ @r13 | 0x8 & @r9 ^ @r10 ^ $thread $buffer + +-(@r8) & @rdx << @rdx >> $buffer >> $ip ^ 0y1000 ^ 0x10 ^ 2 | @r9 << @rdi >> @rdx >> ~@rbp & +0xD & -@rbp & @rbp ^ $thread >> $thread & @r13 & @rbx | $buffer >> $teb & 0y1 ^ @r13 | 0x8 & @r9 ^ @r10 ^ $thread)  { test_statement(0x1D73); } elsif (-@r10 << $teb >> @r13 >> 0y1101 & $thread & $buffer ^ $thread >> 0y1111 | @r8 >> ~~@rbp & @rsp $thread << 0n0 >> 0x3 & 0n5 >> @rbx & @rbx ^ 0y100 >> $ip ^ $ip & @r11 ^ 0y0 ^ 0n5 | 6 >> +($teb) ^ $teb) { test_statement(0x8D7); } elsif (@r9 ^ $buffer ^ (@r8) ^ ~~0xF(@rbp & +$proc ^ $buffer ^ @r8) { test_statement(0x12C3);  /* This is a not closed comment } elsif ($teb & @r13 ^ @rdi | @rsp ^ (@rsp) | @rbp < @rbx & $thread ^ @rsp | @rsp) { test_statement(0x79); }
$error$
$end$
4417
 if ($proc >> $teb >> +((@r12)) >> +@r9 ^ 0x13 << $teb & @r9 >> @r13 | $buffer << $thread >> 0y1111 >> 1 ^ @r8 | @rbp >> @rbp & @r11 & @rsp ^ ($thread) & @r8 ^ $ip ^ @rsp | 6 & ($proc) ^ $thread ^ -0y10 < +1 << @r11 >> @rsp >> @rdx & 21 << @r11 & 0y10000 ^ (0y100) << $teb >> $buffer >> @r13 ^ @rax | @rdi << 0xB & @r12 >> -$teb & @rax | @r10 & $ip)  { test_statement(0x429); } elsif (@r10 << @rsi & @rdx & 10 & ~$teb ^ @r13 | $ip | -@rax | 13 | 6 | @rax <= ($buffer) << +@r8 | @rbp >> ~$buffer) { test_statement(0x237C); } elsif (+16 & @r8 & ~11 | @rsi & 0x6 ^ @rax | +@r12 ^ @rdx | -@r9 | $ip @rsi >> $buffer & @r11 & -@r11 | @r10 | 0x4 ^ @rax | $teb | ~$teb) { test_statement(0x11E1); } else { test_statement(0x2034); }
$error$
$end$
4418
 if (@rsp << @rsp & 0n3 << +@rsi >> @r12 >> @rsp ^ $teb >> $ip >> @rax & @rsi & ~@rdx ^ @r10 & @r11 & ($thread) | @rbx & @r8 >> @r9 & @r12 | $buffer & +0y1110 & @r13 >< @r11 & @r8 << -@r10 & 0xB & $ip & 0y0)  { test_statement(0xEFE);  break; }
$error$
$end$
4419
 if (+@rsp + @rbp << +@r13 ^ 0xF | @rdx << @r11)+@rsi << @rsp | @r11 & -$proc >> $thread & @rbx ^ 0n8 >> @rdi | @r8 & ~0n11 & @r12 ^ @r8 ^ @rdx)  { test_statement(0x714); }
$error$
$end$
4420
 if (@r11 + @rdi << @rdx >> @rsp << $ip >> $buffer ^ @rsi >> @rbp ! $buffer + @rdi >> $thread)  { test_statement(0x1376); } elsif ($teb ^ @r12 | $proc >> @r12 & @r13 ^ $teb & @rax(@rdi << @rdi | 0y1010 >> ~@rsp) { test_statement(0x352);  /* This is a not closed comment ;  while  (@r12)@r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = 0y101 ; } else { test_statement(0x25F4);  while  (@r13 ^ $thread == @r13 ^ $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4421
 if (@rax + @r8 | $thread << +@r12 >> @r11 | @rsi & @rax ^ @rsp ^ 4 | @rsp & @rsp | @r10 $proc & @r11 << @rbp ^ @r11 & 0xE ^ +~@r11 >> 0y1011 & $ip ^ (@r10) & 0n1)  { test_statement(0x225E);  /* This is a comment */  while  ((+@rax) = 0n9 ^ @rdi | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($teb(@rsp)  { test_statement(0xA4A); } elsif (@rbx > @r13) { test_statement(0x2006); } else { test_statement(0x2533); } } elsif (@r9 & 0y1011 >> @rsi & @rbp ^ 0x2 >> @r10 & @rax ^ @r12 | @r8 >> @r8 ^ 0y1100 ^ @r11 | @rsp & @rdx | @r13 | $proc ; @r9 & 0y1011 >> @rsi & @rbp ^ 0x2 >> @r10 & @rax ^ @r12 | @r8 >> @r8 ^ 0y1100 ^ @r11 | @rsp & @rdx | @r13 | $proc) { test_statement(0x2696); } else { test_statement(0x22AC); }
$error$
$end$
4422
 if ($ip + @r8 >> @r13 << @r13 & @r12 << @rdi & 0n2 >> @rsi ^ @rbx & $buffer | $ip & @rbp >> @r8)~@rdi + @rbx << @r9 & @rdx >> @rbp ^ @r13 << @r13 ^ @rax & @rsp ^ 0xF ^ @r10 | @r9 >> $teb & 0y10000)  { test_statement(0x4E);  // /* This is a comment   /* This is a not closed comment } elsif (0n16 << @rbx >> (0n18) >> @r8 & @r10))0n16 << @rbx >> (0n18) >> @r8 & @r10) { test_statement(0x1E12); ; ; } else { test_statement(0x1EB0); }
$error$
$end$
4423
 if (@r11 <> @r10 + ~+@r12 << 5 >> @r10)  { test_statement(0x1293); @rax = @r10 >> @r11 | $teb ^ @rdi ^ @rdi | @r12 ^ @rbp | @r11 | ~0xD ; } elsif (@r12 << 0n12))@r12 << 0n12) { test_statement(0x1861); } else { test_statement(0x26C0); }
$error$
$end$
4424
 if (@rsi + 0n9 << $proc << @r11 >> @rsi >> $buffer >> @r8 | @r9 << @r11 & @rax >> 0xC ^ 0n8 & 0n5 >< ~$thread & @rax)  { test_statement(0xEFD); } elsif (@rbx >> @r12 ^ @r10 >> $buffer ; $thread & @rdx | @r10 ^ @r9 ^ @rsi ^ 0y10001) { test_statement(0xDDB); val = @rbx ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rsi ! $teb | 0n9) ; } else { test_statement(0x12F7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax(@r13 ^ 0x3 | 0n3) ; }
$error$
$end$
4425
 if (0x1 << @rdi & -($ip) << $buffer >> @rsi >> @r11 | @r13 | 0n15 | @r9 & ~@rdx | $buffer ^ 0x3 < @rbx ^ @rdx << @r12 & @r10 & @rax & +@rbx ^ @r13 >> 0x7 & @rdx)  { test_statement(0x3C2);  /* This is a not closed comment  for (val = 10; 20 ^ (@r12) | (@rsi) | 0y10001 == @r12 | @rdi | $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1478);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 1 ^ @rsp <= 21 ^ @r13) ; @rax = ~@rax ;  This is a not opened comment */  /* This is a comment */  if (0n0 >= 0n0)  { test_statement(0x880); }  for (; @rbx > +@rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4426
 if (@rbp & +@rbp >> 0y1010 & @r8 & @rbp ! @rbp & +@rbp >> 0y1010 & @r8 & @rbp)  { test_statement(0x942);  /* This is a not closed comment }
$error$
$end$
4427
 if (+$teb << ~@rbx << @rsp >> 0n17 & @r13 << $teb < +$teb << ~@rbx << @rsp >> 0n17 & @r13 << $teb)  { test_statement(0x1675); }
$error$
$end$
4428
 if (@rbx >> $teb << @rbp >> ~$thread >> @r9 ^ @rsi(0y0 & @rdi << @rdi ^ @r11 >> 12)  { test_statement(0x2698);  while  ($proc | $proc != @r9 ^ $teb | (@rdx) | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; ;  // /* This is a comment  } elsif ((-@r9) << @rdi >> 1 >> @rbx ^ ~0xF >> $proc & +@rbp & --$proc ^ @rdi & -$thread(((($buffer)) ^ $teb >> $proc ^ @r11 | @rsp & $teb ^ @rsi | @rbx ^ 0n17) { test_statement(0x21BA); }
$error$
$end$
4429
 if ($teb + 0n13 >> 3 << 0x6 ^ $thread ^ ~$buffer >> @rsi >< -~-@r13 + +@rax & @rax << @r12 & @rsi >> 0x5 | @rdx)  { test_statement(0x20B5); val = $proc >> @rdi ^ @rdx & @r9 ^ $thread ^ @rsp ;  /* This is a not closed comment } elsif (@r12 << $thread >> -@rsp >> @rbp & @rbp >> 0x12 | 0n19 >> @rsp | -@rsp & $buffer ^ 0xE | @rax))@rsp << $proc >> 0x8 >> @rdx ^ $proc >> @r10 & @r11 & @rdx ^ 0y101 ^ @r8 | $thread >> $buffer & $thread & @rsi ^ $proc ^ @rbp) { test_statement(0xB0A); } elsif ($proc >> 0y11 & 0n13 & $buffer ^ @rdi & $proc | @rsp | @rsi ^ -$ip | $teb | @r11(($proc >> 0y11 & 0n13 & $buffer ^ @rdi & $proc | @rsp | @rsi ^ -$ip | $teb | @r11) { test_statement(0x200F); } elsif (~@r8 & $thread ~@r8 & $thread) { test_statement(0x1C2A); }
$error$
$end$
4430
 if (@rax + @r9 << 0y110 >> 0xA << $thread & $buffer >> $teb & $teb >> @r8 & $buffer & @r13 ! @rax + @r9 << 0y110 >> 0xA << $thread & $buffer >> $teb & $teb >> @r8 & $buffer & @r13)  { test_statement(0xC64); }
$error$
$end$
4431
 if (@rsp << ($teb) >> $proc << @rbx ^ $teb << 0y1001 >> @rbp >> 0x11 & @r9 >> @r10 & @rdx & @rsp | 0y111 << $buffer >> @r11 >> @r10 & @r9 & @rbp & @rbp | -$ip >> @r13 ^ @r13 & $teb @rsp << ($teb) >> $proc << @rbx ^ $teb << 0y1001 >> @rbp >> 0x11 & @r9 >> @r10 & @rdx & @rsp | 0y111 << $buffer >> @r11 >> @r10 & @r9 & @rbp & @rbp | -$ip >> @r13 ^ @r13 & $teb)  { test_statement(0x22F4); } else { test_statement(0x1730); }
$error$
$end$
4432
 if (@rdi >> @rdx << 0n18 >> @r10 & (@r13) >> @r13 >> @r10 ^ @rsp << $buffer & @r11 >> ~@rsp & @r9 >= @rdi >> @rdx << 0n18 >> @r10 & (@r13) >> @r13 >> @r10 ^ @rsp << $buffer & @r11 >> ~@rsp & @r9)  { test_statement(0xB0); } elsif (@rax << $teb >> @rsp & @rsi ^ $teb ^ ~@r8 & 0y11 ^ 0n18 | ($thread) >> $ip & @rbp & $teb ^ 11 ^ @rax ^ @rdi | $proc)(@rsp) >> $thread ^ @rsp | $thread >> @r10 ^ 0n11 ^ @r11 ^ -@r13 | @rdx ^ @r11 ^ $buffer) { test_statement(0x130B); } elsif (@rsi & @r9 & 0x4(($teb >> @rdx | $proc) { test_statement(0x85D);  break; }
$error$
$end$
4433
 if ($ip << @r8 << $thread >> 0n12 ^ 0y1000 >> @r12 >> @r11 ^ 0x7 >> @r10 & @rsi | @rax & 15 & $buffer & @rdi <= $buffer >> -@r11 << @rsi ^ @rdx << @rdi & @r9 & @rbp & $buffer | 0y1101 ^ @rdx >> $thread & @rsp)  { test_statement(0xDE4); }
$error$
$end$
4434
 if (+@rdx + $ip << 0y10010 << @r11 >> $proc & 7 & @rax >> @r13 & @r8 & @r10 ^ @rbp >> ~-@r9 >> $ip & ~$thread >> (@rbx) | $buffer >> 0n4 >> @rsi & ($proc) & @r13 & @rbp != $teb + @rbp & @r12 | @rdi << ($proc) >> 14 ^ @r13 ^ 0n14 & 0n17 | $proc >> @r8 & 4 | @rdi & @rsi ^ @r12 | 0n19 | @rbx)  { test_statement(0x453);  break;  /* This is a comment */ } elsif (@r11 << $ip >> @rax >> -+$proc & @rax & @r10 ^ @r10 & 22 != @r8 | @r9 >> -@r11 & @rsi ^ 0y10 ^ @r13) { test_statement(0x1C70);  /* This is a not closed comment } elsif (@rax & @r12 | @r9 > 5) { test_statement(0x200);  /* This is a comment */ } elsif (@r10 ^ 0n1 ^ @rsi == 0x1 & @r13 ^ @r10) { test_statement(0x430); } elsif (@r13 ^ @r10 ; @r13 ^ @r10) { test_statement(0x19B6); @rax = (@r13) ; ; } elsif ($teb > 0n9) { test_statement(0xFA6);  while  ($thread = $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (3)3)  { test_statement(0x2417); } } elsif (10)10) { test_statement(0x1EFC); } else { test_statement(0x5D4); }
$error$
$end$
4435
 if ($teb + $teb & @rsi << 0x4 & +@rbp >> 0n18 & 0n5 ^ -$thread << @r8 ^ $ip & (@rdx) & $buffer > $teb + $teb & @rsi << 0x4 & +@rbp >> 0n18 & 0n5 ^ -$thread << @r8 ^ $ip & (@rdx) & $buffer)  { test_statement(0x18E5); }
$error$
$end$
4436
 if (@rsi << ~@r10 @rsi << ~@r10)  { test_statement(0x11E1);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread & ~@rax ^ 0n10 | $ip($buffer & @r9 ^ (0x13) ^ ~-$buffer) ; }
$error$
$end$
4437
 if (0y111 + @rsi ^ 0n0 << +@rbx & 0y10011 >> @r10 ^ @rdi & @r9 = 0y111 + @rsi ^ 0n0 << +@rbx & 0y10011 >> @r10 ^ @rdi & @r9)  { test_statement(0x1042); }
$error$
$end$
4438
 if (@rdx + @r9 & 0n3 >> -$ip ^ 20 << @r11 >> 14 & 0n11 >> ~@r9 & $thread & $thread ^ @rdx & @r10 & $teb | $buffer >> ~@rbx | $proc ^ @r13 ^ @rdx ^ @rdx +@r9 + -$proc << $thread)  { test_statement(0x9B6); }
$error$
$end$
4439
 if (0n2 >> @r13 & @r12 >> @r13 >> @rsp | $teb >> $proc >> @r11 & ~@r8 >> 0xC >= 0n2 >> @r13 & @r12 >> @r13 >> @rsp | $teb >> $proc >> @r11 & ~@r8 >> 0xC)  { test_statement(0x7B4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | $buffer))$buffer & -+$buffer) ;  /* This is a comment */ } else { test_statement(0xC9E); @rax = 0y10001 & $proc | @rbx ;  while  (@rbp | 0y1(@rdi | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4440
 if (@r12 << @rax & @rax << +~$ip ^ @rdx)$buffer >> 0y1010 >> ($proc) >> @rdi & 0y101 >> $thread ^ @rbx >> @rdi & @rsi >> $thread ^ $proc & @r12 ^ @r13)  { test_statement(0xE6D);  /* This is a comment */ } else { test_statement(0x15C1); }
$error$
$end$
4441
 if (@rsp + @rax << ~~$thread & (@r12) << @r12 ^ 0n5 ^ 0x9 >> @rbp & @rbp ^ @rbx & @rbp < @rdx << @r11 << 0y1 & ~$thread >> @r13 >> (@r13) ^ 13 << @r11 >> $teb & 16 >> @rsp & ~$buffer)  { test_statement(0x2139);  /* This is a comment */ } elsif (@rax >> @r8 >> +0n1 & $thread >> @r12)@rax >> @r8 >> +0n1 & $thread >> @r12) { test_statement(0x1719);  This is a not opened comment */ } elsif (+$teb & @rax & @r8)+$teb & @rax & @r8) { test_statement(0x9C6);  if (@r13 | $buffer = @r13 | $buffer)  { test_statement(0x19BC); } else { test_statement(0x1DC8); }  // /* This is a comment   break; ;  while  (~@rax > @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x34B); }
$error$
$end$
4442
 if (@r9 & 0n11 << $proc(@r9 & 0n11 << $proc)  { test_statement(0x408); } else { test_statement(0x21B5); }
$error$
$end$
4443
 if ($proc << +0y110 | 0xD | $proc & @r12 ^ +@rax & $buffer((0y10 + 0y1111 << 0n19 >> @rsp)  { test_statement(0x3A7); } elsif (-@rax >> 0x6 & @rbx >> ($teb) ^ @rdx >> ($thread) & (@r10) ^ @rsi ^ $buffer ^ @rax = -@rax >> 0x6 & @rbx >> ($teb) ^ @rdx >> ($thread) & (@r10) ^ @rsi ^ $buffer ^ @rax) { test_statement(0x157); ; } elsif (0x8 >> @rsi ^ 21 & @rsi | @r13 & @r13)$buffer >> @r8 ^ 6 & @rsi ^ @rbx ^ @rsi) { test_statement(0x10CE);  while  (0x7 >< @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y11 & @r9 | +$proc < $teb & $proc) { test_statement(0x1EA2); } else { test_statement(0x2292);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 | (@rbx) <> 0x8) ; }
$error$
$end$
4444
 if (@r12 << -$thread >> @rbx >> $thread ; @rsp + @r9 << 10 << @r13 & ($ip) << (@r13) >> @r12)  { test_statement(0x2420);  /* This is a comment */ } elsif (@rdx << @r9 >> @r13 | +@r8 & @r11 & +0n12 ^ @rdx & 6 | ($proc) ^ @rsi ! @rdx << @r9 >> @r13 | +@r8 & @r11 & +0n12 ^ @rdx & 6 | ($proc) ^ @rsi) { test_statement(0x374); } else { test_statement(0x90F);  for (val = 10; @r11 ^ @r8)~$proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
4445
 if (@rsp + @r13 << $ip & $buffer << (@rdx) >> +@r9 & $teb >> @rsp ^ @rbx << @r8 >> 0y1001 >> @rsi ^ @r12 ^ @rsi & 0y1000 @r9 + 0x9 >> @r8 << @rax >> (@rdx) >> @r13 & 0n10 >> 0n8)  { test_statement(0x4F8); } elsif (@r11 << $proc >> $ip >> $ip ^ @rsi >> @r12 | $proc >> @rax & $teb & @rbp != @rbp << @r12 >> -$teb >> @r11 & @r10 >> @rsp ^ (@r13) >> (@rdx) ^ 10) { test_statement(0x1DE);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx <> @rbx) ; } elsif (@r13 & @rdx & ~@rsp @r9 >> +@r12 | @r10 & @rdi ^ @rbp | @r11) { test_statement(0x1220);  while  ($buffer | @rbx ! $teb | @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x20B0);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y100 ^ @r13 | $buffer | $buffer(($proc | @rdx) ;  while  (~@r9 ! @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r9 ; @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4446
 if (@r11 + @rdx & $teb << $thread & ~@r12 ^ ($proc) | @rdi >> @r13 >> @rdi & $proc >> $thread & @rbx & @rbx ^ @rbp & @rbx & @r8 | ~$proc >> @r10 & $buffer <> @r8 << @rbp >> @rsi << $buffer >> @r12 & 0 << @r8 >> @r8 ^ ~@rax ^ $teb >> ~21)  { test_statement(0x2567); val = 0y1001 >> ~@rax & @rbp & @rbx ^ @rax ; @rax = @rsi & @r9 ^ (@r12) | @r10 | @r9 ; } else { test_statement(0x1729); }
$error$
$end$
4447
 if (-$ip >> (@r12) & @r9 > -$ip >> (@r12) & @r9)  { test_statement(0x11C7); }
$error$
$end$
4448
 if (@rdx << @r11 >> @rdi << @rbp >> $proc ! @rdx << @r11 >> @rdi << @rbp >> $proc)  { test_statement(0x1250); }
$error$
$end$
4449
 if (@r12 + $ip >> @rsp >> (@r12) >> 0x2 & 20 << @rbx ^ (+0n10) << @r13 | @r10 >> @r13 & ((@r12)) >> $teb | @r8 ^ @r9 ^ @rsp | @rsp | @rbx <> @rsi << @rdi << @rbx >> @rsp << $teb & 0x6 ^ 0x5 ^ @r13 & $teb & @rbx)  { test_statement(0x11D8); val = @rdx >> @rbp & @r13 & (@r9) ; } else { test_statement(0x1A13); }
$error$
$end$
4450
 if (@r8 << +$ip >> @r10 << $proc >> $buffer & 0xE << @rsp >> @rsp ^ 6 << @rax ^ ~+@rbx >> @r11 & ~$proc & @rbx ^ (@r11) & @rsi | 7 << 0x1 ; @r8 << +$ip >> @r10 << $proc >> $buffer & 0xE << @rsp >> @rsp ^ 6 << @rax ^ ~+@rbx >> @r11 & ~$proc & @rbx ^ (@r11) & @rsi | 7 << 0x1)  { test_statement(0x10CC);  for (val = 10; @r13 & $thread | @r12 < @r13 & $thread | @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx << 0n7 > @rax << -~0y10001 >> ~@rsp >> (@rbx) & @r13 >> @r9 | ~@rsp | $proc) { test_statement(0x217F); } else { test_statement(0x24FA); }
$error$
$end$
4451
 if ((+@rsi) + @rsp & ~@rbx << +$thread >> $ip | 16 >> @rbp ^ @r10 >> 14 ^ +@r12 >= @rax + @r11 >> 12 << $ip ^ +@rdi << $ip ^ @rsi >> @r9 ^ @rsp & @r13)  { test_statement(0x137B); }
$error$
$end$
4452
 if (@rax + $teb << $buffer & $thread >> @rbp >> 6 & 0n19 ^ @rdi >> $teb((@rax + $teb << $buffer & $thread >> @rbp >> 6 & 0n19 ^ @rdi >> $teb)  { test_statement(0x26A9); } else { test_statement(0x310);  while  (0n2 | @rax != 22 ^ $teb | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~0n14 <> ~0n14) ; }
$error$
$end$
4453
 if ($teb & 10 < @r8 + @rsi >> -$thread << $proc | (@rbp) ^ @rbx | 0y1111 | ~@rsp ^ 0y1010)  { test_statement(0x1356); } elsif (14 << $thread >> @r13 ^ $proc ^ ~@rdx ^ @r11 | $teb >> @r8 & @rdi | @rax ^ @rsp ^ (@rax) | 0n2 ^ (0y1) == @r9 >> @rdi >> +@rsp ^ $ip & @r9 & @r9 ^ 0x12 | @r8 >> @r11 ^ @rbp & @rdi ^ @rax) { test_statement(0x1740); } else { test_statement(0x4FD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb | $teb != @r8 | @rbx | @rdi) ; }
$error$
$end$
4454
 if (~@rbx + 0n15 << $proc << @r9 >> @r8 << +@r8 & $thread << @rdi & +@r12 >> @rbx | @rdx >> $buffer ^ @rdx | @rdx ^ 0y11))~@rbx + 0n15 << $proc << @r9 >> @r8 << +@r8 & $thread << @rdi & +@r12 >> @rbx | @rdx >> $buffer ^ @rdx | @rdx ^ 0y11)  { test_statement(0x1FC9); } elsif (@rdi))@rdi) { test_statement(0x13E8);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~0x11 ^ $ip | 0n3 | 0n8 >< @rax) ;  for (val = 10; ~$proc | @r13 ; @rdi | @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  // /* This is a comment  }
$error$
$end$
4455
 if (@rdx << @rax << @r10 | @rbp << 0y10001 >> 0n17 >> @rax ^ -$thread ^ (0n16) <= 0y1 << $proc >> @rbx >> @r11 | @r10 >> $proc >> @r10 ^ 0y1001 >> @rbx & $proc & @r12 ^ $thread ^ @r11 | @rbx >> 0n3 & $proc)  { test_statement(0x173E); }
$error$
$end$
4456
 if (@rsp << @rdi >> $thread << $teb >> @rdx & -~-~@r11 >> @r10 & @r11 >> $thread & $teb & -@rdx ^ 22 << $ip & @rsi >> $ip & +@rax | $teb ^ @rdi <> @rsp + @r11 ^ @r8 << 0x7 & @r12 >> 5 | 0n12 << @rbp | (12) ^ $teb & 0n15 ^ @r12 ^ 0n19 | +@rsi ^ -0y1001 ^ @r8)  { test_statement(0x1DFE); } elsif (@rbp << @rsp >> 0x8 ^ @rax & @rax | @r12 >> 15 ^ @rsp & $teb <> @rbp << @rsp >> 0x8 ^ @rax & @rax | @r12 >> 15 ^ @rsp & $teb) { test_statement(0x2488); } elsif (@r12 >> @rdi ^ $ip & +21 ^ 0xA ^ @rdi | +@r12 > @r12 >> @rdi ^ $ip & +21 ^ 0xA ^ @rdi | +@r12) { test_statement(0x13BD); } else { test_statement(0xFE9); }
$error$
$end$
4457
 if (@rsp >> +$ip >> $proc ^ @r11 << 0x6 <= @rsp >> +$ip >> $proc ^ @r11 << 0x6)  { test_statement(0x848); } else { test_statement(0xFA3);  while  (6 ^ 0y10010 | -21 | +@r13 == @rsi ^ @rdx | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (+-@r8 | @r13(+-@r8 | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4458
 if ($thread + +@r11 ^ @r12 >> 11 >> @rbx & $buffer >> -@rdx & @r13 ^ $teb >> +0n2 & @r9 & (@r13) ^ @rsp & @rsp ^ @rdi ^ $proc ! @rbx >> 0x2 & +$thread << @r8 >> @rbp >> @r11 | @rbx | $buffer & @rbx ^ @rsp | @r8 & $proc)  { test_statement(0x1294); } elsif (-@r13 ^ @rdi < (+@rsi) << @r12 ^ ~@rdx >> @rdi & +@r11 & $buffer | @r9 & @rax) { test_statement(0x135E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 > 0n17 ^ @rsi | $ip | $buffer) ;  if (@rsi(($proc)  { test_statement(0x2563); } elsif ($ip $ip) { test_statement(0x1D3D); } elsif (-@rsp = $teb) { test_statement(0x1168); } elsif ($teb >= $teb) { test_statement(0x21E6); } else { test_statement(0x1377); } } else { test_statement(0xCC7);  /* This is a comment */ }
$error$
$end$
4459
 if (12 + @r12 << ~@rdx & @rdx << $buffer >> $buffer & @r13 >> @r8 | @r12 << +@rdx & @r10 >> @rdi ^ -@rdx ^ 0n11 ^ $teb | @r9 & (@r12) & 0n9 ^ @r10 & @r9 ^ $teb | 0y1110 & @rsi ^ @rax ^ -+$proc)12 + @r12 << ~@rdx & @rdx << $buffer >> $buffer & @r13 >> @r8 | @r12 << +@rdx & @r10 >> @rdi ^ -@rdx ^ 0n11 ^ $teb | @r9 & (@r12) & 0n9 ^ @r10 & @r9 ^ $teb | 0y1110 & @rsi ^ @rax ^ -+$proc)  { test_statement(0xFF3); } else { test_statement(0x191F);  if (~@rdi ^ @rbp ~7 ^ $buffer | $ip | @rbp)  { test_statement(0x99A); } else { test_statement(0x26AE); }  // /* This is a comment   // /* This is a comment   if ((@rdi) <> 6)  { test_statement(0x170E); } elsif (+0x11 >< $teb) { test_statement(0x40D); } }
$error$
$end$
4460
 if (@rbp + @rbx << @rsp << 0n9 >> @r12 << @rdi >> @r11 >> $ip | @r10 >> @rbp & $teb >> -14 >= @rbp + @rbx << @rsp << 0n9 >> @r12 << @rdi >> @r11 >> $ip | @r10 >> @rbp & $teb >> -14)  { test_statement(0xFAC);  This is a not opened comment */ }
$error$
$end$
4461
 if ($ip ^ 0y1010 >> @r13 >> @r10 | @rsp >< $ip ^ 0y1010 >> @r13 >> @r10 | @rsp)  { test_statement(0xC7D); }
$error$
$end$
4462
 if ($teb + 0y1001 & @rdi << 23 & $teb >> 0x12 & @r8 ^ @rbp << @rdx & 0y0 & @rbx | $thread | $ip >> $ip & @rdi | @r8 ^ -$teb ; $teb + 0y1001 & @rdi << 23 & $teb >> 0x12 & @r8 ^ @rbp << @rdx & 0y0 & @rbx | $thread | $ip >> $ip & @rdi | @r8 ^ -$teb)  { test_statement(0x1906); }
$error$
$end$
4463
 if (20 + @r10 << @r12 << @r8 | $thread << @rsp >> @rdi & @rdx & @r8 & 0y10001 ^ $thread ^ @r11 ^ @rbx | +$thread ^ @rsi & @rbx 20 + @r10 << @r12 << @r8 | $thread << @rsp >> @rdi & @rdx & @r8 & 0y10001 ^ $thread ^ @r11 ^ @rbx | +$thread ^ @rsi & @rbx)  { test_statement(0x3D7); } elsif ($buffer & @rbx ! $buffer & @rbx) { test_statement(0xE43);  /* This is a comment */  while  (-$buffer < @rbx | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi >> @rdi & $proc ^ -@rsi & @rbp ^ (@rbp) ^ @rdi > @rdi >> @rdi & $proc ^ -@rsi & @rbp ^ (@rbp) ^ @rdi) { test_statement(0x18B0);  while  (@r12 > ~0x4)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n11 ^ 0x0 ! -@r9 | ($buffer) | @rdx | @rdx) { test_statement(0x1312);  if (@r8(($buffer)  { test_statement(0xDB); } ; } elsif ($buffer ^ $proc = ~~~@rbp | $thread) { test_statement(0x249); } else { test_statement(0x1100); }
$error$
$end$
4464
 if (0xA + @rbp << @rdi << @r8 ^ $thread << @r11 & -$ip >> @rax & $ip & @r12 | @rdx >> @r8 >> ~$teb >< @r8 & @rdx ^ @rbp ^ @r8 >> 0y1100)  { test_statement(0x25DE); } else { test_statement(0x13D7); }
$error$
$end$
4465
 if (+$thread << ~0n0 >> @rbx ^ 0y111 >> 17 >> $thread > @rsp + 7 << @rdi << 0y10010 & @r8 << $thread & 0n9 >> (@rsi) & @rax ^ @r8 << 0y1000)  { test_statement(0x19E2); } elsif (0xE << $teb >> @r13 >> 12 & $ip ^ @r12 & ~+(0n19) & $thread >= @rax & 21 >> @rax & @r12 & $buffer) { test_statement(0x227); @rax = $ip & @rdx ^ @rbp | @rsp ^ -@rdx ;  for (val = 10; +$teb | ~$ip <> +$teb | ~$ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2074); }
$error$
$end$
4466
 if (-@r9 ^ $proc << $proc >> ~@rdx & 0 >> @rbx & @r12 & ~@rbp <= 0n10 + $ip >> $thread)  { test_statement(0x1701); }
$error$
$end$
4467
 if ($thread + @rdi & +@r10 << @rbx >> $thread >> (0n16) ^ 0x4 << $proc >> @rdx < $thread + @rdi & +@r10 << @rbx >> $thread >> (0n16) ^ 0x4 << $proc >> @rdx)  { test_statement(0x15B6); }
$error$
$end$
4468
 if (@rbx + @rdi >> $teb << 0y1001((@rbx + @rdi >> $teb << 0y1001)  { test_statement(0x20DE);  // /* This is a comment  }
$error$
$end$
4469
 if (~$thread & $thread << @rax & 0y11 >> ~$thread & @r12 & 0xF | ~@r11 >> @r8 == -0xA + @rsi >> @rbp & $ip << @rbp >> @rbx >> @r12 & @rsp & (+@r9) & @r8)  { test_statement(0xA5A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer ^ @rdi((21 & @rsp | @rdi | $proc) ; } elsif (0n4 & 0x13 & -@r10 & $thread | @rdi >> $teb & -@rsi | $ip($thread << @r8 | @r11 >> @r9) { test_statement(0xD65); } elsif (@rsp & +@rbp & @r11 ^ @rsi & 0n16 ^ @r10 ^ $ip > @r13 >> @rax & @r13 ^ ~$thread & +-$teb) { test_statement(0x23BD);  break; } elsif ($teb & @rbx ^ @r12 | -@rdi | @r9 > $teb & @rbx ^ @r12 | -@rdi | @r9) { test_statement(0xCF0); } else { test_statement(0x1C9F); }
$error$
$end$
4470
 if (@rbx + @r10 << $ip << @rsp >> @r12 ^ @r12 >> @rbx & @r11 & $ip | $ip << $teb >> @r8 & @rsi & @rax & @rbx | @rdi >> $thread <= @rbx + @r10 << $ip << @rsp >> @r12 ^ @r12 >> @rbx & @r11 & $ip | $ip << $teb >> @r8 & @rsi & @rax & @rbx | @rdi >> $thread)  { test_statement(0x1D30); } elsif ($teb << -+@rbp >> @r8 ^ @r8 ^ 0n7 & @rdx)14 >> @r12 >> @rdx ^ $buffer ^ @rdx & @rbx ^ @rsi) { test_statement(0x1368);  This is a not opened comment */ } elsif (@rdi & ~@r8 ^ ~6 & 0y0 ^ $buffer)@rdi & ~@r8 ^ ~6 & 0y0 ^ $buffer) { test_statement(0x251);  This is a not opened comment */ ; } else { test_statement(0x26D3); }
$error$
$end$
4471
 if ($teb + $teb >> @rbx >> @rbp >> @r13(($teb + $teb >> @rbx >> @rbp >> @r13)  { test_statement(0x1BAA); }
$error$
$end$
4472
 if (@r12 << @r13 << $teb & @r11 << @r10 >> 0y1010 >> @rdx & $buffer >< $ip + @rax << $teb << @rdi >> $thread >> -~$ip & 0x9 << $ip)  { test_statement(0x1FD9); }
$error$
$end$
4473
 if (+@rbp >> @r12 << @rdx ^ @r12 << @r9 >> -+@rsp ^ 4 & @r10 & @rdx ^ @rsi | @rbp << @rbx | @rsp >> @r8 & @rdi & $ip ^ 17 & @r13 ^ +$teb | +$thread & -$thread | 0n0 ^ +-@rsi | 0x5 > @rsi >> 0y111 >> $buffer & @r8 & @rdi & $ip & ~(@rsi) ^ -$thread >> +$buffer ^ ~0n1 & @r9 & @r10 | 0y10)  { test_statement(0x2FB);  while  ($teb & @rsp(@rdi & 0x11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp >> $buffer >> 0y1111 & @r10 ^ @r13 ^ $proc ^ @r13)@rdx) { test_statement(0x1ED1); } else { test_statement(0x26FA); }
$error$
$end$
4474
 if (@r10 >> 0n17 >> @rax & 10 >> @rbp ^ $proc << 0n1 | 0y10000 << $thread ^ @rdi >> @r8 & (@r13) & -$ip ^ @r11((@rsi + -+$thread >> $teb ^ @r12 & @r12 >> 2)  { test_statement(0x342);  /* This is a not closed comment  if ($buffer ^ @r13 ! $buffer ^ @r13)  { test_statement(0x6E7); } elsif (@r8 == @r8) { test_statement(0x1C69); } @rax = @rdx ^ 0n10 | +-+@r10 ; } elsif (@r13 >> @r12 >> @r11 & $buffer >> 0n7 ^ ~~@r11 ^ @rdi ^ @rbp ^ @r11 | $teb >> @rdx ^ @r12 & @r13 ^ $ip = 0y10 << @r8 & @r11 & @r11 & $buffer) { test_statement(0x997); }
$error$
$end$
4475
 if (0y1 + @r11 >> (@rsp) << @r8 >> @r12 | ~@rax << $teb >> @r8 >> @rbp & $ip >> @rdx <> @rdi << 17 | $ip | 17 ^ 0y10011 | $thread & 0n16)  { test_statement(0xF3A);  if ($proc & @r10 | @r8 | @rsi <= $buffer)  { test_statement(0x56A); } elsif (@rsi ^ $thread | @rdi | @rbx >< $thread ^ 0n6 | @rsi | @r10) { test_statement(0x1308); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 21 ^ @rsi(21 ^ @rsi) ;  while  (@rsi | @rdi != @rsi | (0n10))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; ;  if (@rbp ; 0xF)  { test_statement(0x2372); } } elsif (@r10 << @r11 & 0n6 >> @r13 >< 0y1001 & @r11) { test_statement(0x1E36); } else { test_statement(0x1B5); }
$error$
$end$
4476
 if (0xD + @r13 >> @rdx & $proc >> ~@rbp & $ip >> @r12 & $buffer & @rax ^ $proc & -@rdi & @rax | -@rbp >> @rbp >> @rdx | @rsi & @rdi | +@r8))$proc ^ 6 << @r11 >> @rsp >> @rdi & ~(@r12) & ~6 & 13)  { test_statement(0x1B1F);  This is a not opened comment */  for (val = 0x7 ^ @rdi | @r13; $proc ^ @r9 | @r13 | ~($ip) @rdx ^ @r13 | @rbx | @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  for (@rax = 0n17; @rsi > $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp & ~$thread >> $proc & $buffer <> @rsp & ~$thread >> $proc & $buffer) { test_statement(0x25CE); } elsif (-16 & $thread ^ (0n0)))@rsp & @rdx | @r11 ^ @r12 | @r8 ^ @rdi | $thread) { test_statement(0xF19);  break; } elsif (@rsp & @rsi ^ $proc ^ $proc | @r11 ^ 0n8)0n1 ^ $buffer ^ (@r8) | @rbp | @r13) { test_statement(0x17FA); } elsif (@r10 | $thread ! @rbp ^ @rbx | @rsi) { test_statement(0x997); } elsif (@rbx(@rbx) { test_statement(0x1015); @rax = @rdi ; }
$error$
$end$
4477
 if (--0y0 + $ip << ~2 << @r8 >> @rsi >= 0xF + @rax << -~$ip << $proc)  { test_statement(0xBAF);  break; } elsif (@r10 >> $thread >> @r11 | @rdx >> @rbx ^ @rbx ^ $teb ^ 0n18 <= @r10 >> $thread >> @r11 | @rdx >> @rbx ^ @rbx ^ $teb ^ 0n18) { test_statement(0xE3B); }
$error$
$end$
4478
 if (@r8 >> (+@r8) << $ip >> @r13 >> $teb & $ip << @rax >> @r10 >> @rbx | $proc << $ip >> @r11 >> ($buffer) & $thread >> @rsi & @rax ^ @rdx & @r9 & ~~@rax | @rbp & @r10 ^ ~-6 ^ @rsi ^ @rdi | @rbx | @r8 ^ @rsp))@r8 >> (+@r8) << $ip >> @r13 >> $teb & $ip << @rax >> @r10 >> @rbx | $proc << $ip >> @r11 >> ($buffer) & $thread >> @rsi & @rax ^ @rdx & @r9 & ~~@rax | @rbp & @r10 ^ ~-6 ^ @rsi ^ @rdi | @rbx | @r8 ^ @rsp)  { test_statement(0x1244); } elsif (@rsp << @r10 & @rax & @rax & $ip | $thread >> @rdi & ~12 & @rsi ! 0x3 << $buffer >> @rbp >> @rdx & (@rdx) >> @r10 | @r10) { test_statement(0x4AB); val = 0n9 & @r13 ^ @r12 ^ @rsp | +$thread ^ @rdi | -$buffer ;  if (@rsi | 0y100 == @rbp | @rbp)  { test_statement(0x135A); } else { test_statement(0x78A); } }
$error$
$end$
4479
 if (0n5 + $buffer << @r12 << @rdi & @rdi == 0n5 + $buffer << @r12 << @rdi & @rdi)  { test_statement(0x640); }
$error$
$end$
4480
 if (@rbp << $teb >> @r9 << @r10 >> @rdi ^ @rax << +@r12 >> @r11 >> @r9 ^ @rsi <> @rbp << $teb >> @r9 << @r10 >> @rdi ^ @rax << +@r12 >> @r11 >> @r9 ^ @rsi)  { test_statement(0xC18);  if (@r10 & $teb >= @r10 & $teb)  { test_statement(0x207D); } else { test_statement(0x26BC); }  while  (@rsi ^ $teb | @rsp | ($ip)))$proc ^ @r9 | @rbx | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($thread @rsp | $thread)  { test_statement(0x1132); } elsif (@rsp @rsi) { test_statement(0x1E9E); } else { test_statement(0x1625); } } elsif (@r8 << @r9 >> @r9 & @rax >> @r10)@rax << -@rsp & 0n18 & $teb ^ @rbp & @rsi ^ $ip ^ $buffer ^ @r13 | +~@rbx >> @r10 ^ +@rbp | @r13 & @r11 | $ip | @r13) { test_statement(0x553);  break;  /* This is a comment */  while  (~$proc <= ~$proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x302);  break;  while  (~-@rbp | @rax))~-@rbp | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4481
 if ($ip + @r10 << 0n8 = 15 & @rsi << @rbp >> @rbx)  { test_statement(0x230A);  break; } elsif (@r10 & $teb & 0n2 ^ @r9 >> @r11 & 0y10010 & $teb ^ 0x10 & @rbp | @r9 & $buffer != @r10 & $teb & 0n2 ^ @r9 >> @r11 & 0y10010 & $teb ^ 0x10 & @rbp | @r9 & $buffer) { test_statement(0x20F1); } elsif (@rsi >> (@rbx) ^ @rdi ^ @r13))0x4 >> 0xB & $thread & @rax | $proc & @r11 ^ ~@rax ^ @rdx) { test_statement(0x1DA6);  This is a not opened comment */ } else { test_statement(0x1E1B);  if (0n9 ^ $teb | @rsi 0y1100 | @r8)  { test_statement(0x786); }  // /* This is a comment   if (@rsp((@rsp)  { test_statement(0xA19); } elsif (+@r10 >= $ip) { test_statement(0x13D2); } }
$error$
$end$
4482
 if ($thread << @rdx(@rdi + @rsp << @r13 >> $buffer >> @r11 >> ~0n9 & @rax | @r8 ^ 0n8 & @r9 & $thread ^ ~-$teb)  { test_statement(0x24D9);  /* This is a comment */ } elsif (@rsp >> @rdx))@rbx) { test_statement(0x1614);  if (@r9 > $buffer)  { test_statement(0x427); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rbp | @rax((+@rbp | @rax) ; } elsif (@r8 & @rsi & $teb ^ 0 & 0 | +0n19 & @r11 ^ $teb >< @r8 & @rsi & $teb ^ 0 & 0 | +0n19 & @r11 ^ $teb) { test_statement(0x1EE3); } else { test_statement(0x1B6E);  This is a not opened comment */  for (val = 10; 5 | @rdx))5 | @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   while  (@rsp < @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4483
 if ($proc + 0n5 >> @r10 & $thread & @rdx ^ @rsp >> @rsp & 0y1101 != 0y100 + $ip ^ @r9 & 0n16 | $buffer & @r8 ^ $proc & (@rax) & 21 ^ ~@r13 ^ 0y1101)  { test_statement(0x104A); } elsif (0n7 << 6 & @r10 & @r13 & @r13 ^ $proc ^ 0y1111 & 0x9 ^ $ip >= 0xA << @rsp | @rbx >> @rbp & @rsp ^ @rbp ^ @rsp ^ ~@rsp | (0xF) & $ip ^ +$ip ^ @rdi | 13 ^ @rdi | @rdi) { test_statement(0x1D48); } elsif (+@r12 & ($teb) & -13 ^ $buffer ^ $thread ^ @rdi | $buffer | @rsp ^ @rbx | 15 | $teb == +@r12 & ($teb) & -13 ^ $buffer ^ $thread ^ @rdi | $buffer | @rsp ^ @rbx | 15 | $teb) { test_statement(0x905); } elsif (@rsi ^ @rdx ^ $thread | @r8 ^ @r8 > ((@r13)) & @r9 | @rax | @r9) { test_statement(0x2651);  while  (@rdi ; @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rbx((@rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y1 | $ip | ($buffer)))0y1 | $ip | ($buffer)) { test_statement(0x1110);  if (@rsp ! @rdi)  { test_statement(0x9AE); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0xC != @rdi) ; } elsif ((+@rdx) | @rdi ; (+@rdx) | @rdi) { test_statement(0x524); } elsif (~@r10 <= ~@r10) { test_statement(0x1259);  break;  break; } elsif ($ip(($ip) { test_statement(0xDAD); } elsif (0y101 21) { test_statement(0x3DC); } else { test_statement(0x5D5);  break;  while  (-@rbp | @r9(-@rbp | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9(@r9) ; @rax = $teb ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ; 2) ; }
$error$
$end$
4484
 if ($teb + +@rsp >> ~@rdx & @rsi ^ @r13 << ~@r9 >> @rsi >> @rax & ~@r10 >> 0x11 & 0x10 >= $teb + +@rsp >> ~@rdx & @rsi ^ @r13 << ~@r9 >> @rsi >> @rax & ~@r10 >> 0x11 & 0x10)  { test_statement(0x1BA1); } else { test_statement(0x8A3); }
$error$
$end$
4485
 if ($thread & @r9 & $ip >> @r13 ^ ~~$teb << ($teb) & @rbx & @r8 & @rax ^ @rax >> 0xC <> @r12 >> @r12 << @r10 & @r9 << 0n14 >> 0y1000 >> @r10 & @rbx ^ @rdi << -$ip >> $proc & 0n9 | $teb >> +@rsp & @rdi & $teb & @r12 | @rsi | $proc ^ @r8)  { test_statement(0x571); } elsif (@rbx << @r12 >> @r12 ! @rbx << @r12 >> @r12) { test_statement(0x1766); } elsif (@r9 >> $thread ^ ~$teb == @rsp & $ip ^ 20 & 0n17 | @r8 ^ @r11 | ($buffer) | @r11) { test_statement(0x1644); }
$error$
$end$
4486
 if (@r9 >> $proc << 0n9 & $buffer >> 1 >> ~-0x7 & @rsp >> ~0y110 & @r11 & @r8))@rax + ~@rbx << (20) >> @r8 << 14 & @rax << 0xC ^ @r9 << $buffer & 0n18 >> @rsp | $thread << ~@rbx ^ 11 >> 0xA & @r11 ^ $buffer & @r13)  { test_statement(0xF6B); ; } else { test_statement(0x1FDF); }
$error$
$end$
4487
 if (0x11 << @rdx >> 0n19 & @r11))@r8 + @r10 << $ip & 0y1111 & $ip >> @rax)  { test_statement(0x2356);  // /* This is a comment  } else { test_statement(0x1BC);  break;  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx != ~$proc) ; ; }
$error$
$end$
4488
 if ((@r10) >> @r11 >> -$proc ^ $buffer >> $ip >> @r10 ^ $ip | $proc >> @r10 >> $buffer & @r8 | @rbx & @r13 & 0y1100 ^ @r10 & $ip ^ ++@rdx > 13 + @r8 >> 0x7 << 0x3 & @rbp << @r12 | $teb & @rdx & @rdx)  { test_statement(0x346); } elsif (@r9 >> 0y10001 >> -@rdi | @r12))@r9 >> 0y10001 >> -@rdi | @r12) { test_statement(0x15E6); }
$error$
$end$
4489
 if ($proc << 0xA >> @r10 << @r8 & +15 >> @rsp & 0n9 >> $proc | @r12 << ~0n8 >> $proc >> +~@rsp & (~0y10010) >> 0n4 ^ @rbx >> @r9 & @rsi & -~0x6 ^ @r9 & @rax | ~@r12 >> @rbx & $teb | +@rsp & 0y100 <> $thread << ~@r13 ^ @r12 << @rax >> $teb & @rax & -@rsp & $thread)  { test_statement(0x19EF); } elsif (@r10 << $proc >> --@rdi | @r13 & @rbx ^ $teb & @rdx | $thread | $thread ^ ((@rdi))((@r8 << @rdi ^ $proc) { test_statement(0x2499);  if (@r12 ^ @r12 >< (+@rsp) | $ip)  { test_statement(0x173B); } elsif ($thread))$thread) { test_statement(0x1061); } ;  for (val = 10; +-@r11(@r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc))0n11) ; ; } else { test_statement(0x555); }
$error$
$end$
4490
 if (0y1000 + @r12 << @rsp >> @rsp | -0y10001 & @rdi ^ ($proc) & +@r12 & @rbx ^ @rdi & @r13 ^ $thread((@rbp << @r11 << @r9 >> @rdx << $thread >> @rdi | (0x9) >> -@r10 & @r12 >> @r9 ^ @rdx >> 0x5 | $proc & @rsp & @rsp ^ 0n17 & @rsi ^ @r11 | @r10)  { test_statement(0x2247); } elsif ((~@rax) << 0y11 | @rax >> @r8 | 0y10011 & $teb ^ @r8 | @r9 > (~@rax) << 0y11 | @rax >> @r8 | 0y10011 & $teb ^ @r8 | @r9) { test_statement(0x270D); }
$error$
$end$
4491
 if (@r9 + $buffer & @r11 >> $ip & @r12 >> @rsi ^ @rbp >> 0n6 >> (-@r8) <= @r9 + $buffer & @r11 >> $ip & @r12 >> @rsi ^ @rbp >> 0n6 >> (-@r8))  { test_statement(0x26A6); } elsif (+-@r12 >> (@rsp) >> @rsp ^ @r8 & 0y11 & $thread | $teb | @rax & 0y1100 ^ (@rbx) | $ip != @rdi >> -@r9 >> @rax & @rbx >> @rsp & 0xF ^ @rax & @rdi) { test_statement(0x21C6); @rax = @r10 & @r10 ^ $teb ^ +@r13 | $proc ; } elsif ($teb >> @rsp & (0n12) & 0y10011 | (@rbp) & +@rbx ^ @rsi | 0y1001($teb >> @rsp & (0n12) & 0y10011 | (@rbp) & +@rbx ^ @rsi | 0y1001) { test_statement(0x447);  for (val = 10; @r8(@rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4492
 if (@rbp + @rax >> @r12 & @r10 ^ @rsp >> -@r11 >> @r13 | ~0y10011 << $buffer >> (@r13) >> @r8 & @rsi >> -0 & @r9 & (+@rdx) ^ @r12 ^ 0y10001 == @rbx + @r11)  { test_statement(0xA62); } else { test_statement(0x1FCB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 | @rbx <> @r10 ^ 0x10) ; }
$error$
$end$
4493
 if (-$buffer + @rax ^ @r9 >> -$ip >> 0n19 & @r10 ^ @rsi >> $teb | @rdi >> @r11 & +@rbp >> $buffer ^ @r11 >> $ip & (@r10) & @r8 | ~$buffer >> @r12 & @rdx & ~@rbx ! -$buffer + @rax ^ @r9 >> -$ip >> 0n19 & @r10 ^ @rsi >> $teb | @rdi >> @r11 & +@rbp >> $buffer ^ @r11 >> $ip & (@r10) & @r8 | ~$buffer >> @r12 & @rdx & ~@rbx)  { test_statement(0x15A5); }
$error$
$end$
4494
 if (-@rdi + (20) >> $buffer | 0y101 >> @rax >> $teb ^ $ip & 0x0 & @rsp ^ @r13 & @r13 ^ +@r12 ! ($buffer) + @r8 << @rbp >> @rbp << @r8 & +@r13 | $ip << 0n0 ^ @rbx >> @r12 & $ip ^ @r12 & @rdi | $thread >> @rsi & @r12)  { test_statement(0x1465); @rax = @r10 & $thread | ($ip) & $proc | @r9 | @r13 | @r9 ; } elsif (@rsp << 0x10 & $thread | 0n11 >> @r10 ^ @rdi & @r8 | @r9 <= @rsp << 0x10 & $thread | 0n11 >> @r10 ^ @rdi & @r8 | @r9) { test_statement(0x1A25); } elsif (+@rdi ^ @rbx ^ @rdx | @r12 & @rbx | @r10((+@rdi ^ @rbx ^ @rdx | @r12 & @rbx | @r10) { test_statement(0xBF9); } elsif (@r10 & @rdi ; @r10 & @rdi) { test_statement(0xAB8); }
$error$
$end$
4495
 if (@rsp & $teb << $buffer >> 4 >> $proc & $ip & --@r11 > $ip | +0 >> 0xA & @rax >> @rbp & @rdi ^ 0n19 & @rdi ^ $teb | @rsi & @rax ^ 0xB ^ @rdx | -0n14)  { test_statement(0x611); } elsif (0x4 << @rdi ^ @r8 & @r11 == @rdi << @rbp) { test_statement(0x1550); }
$error$
$end$
4496
 if (@rbp + $buffer << @rbx >> @r8 << -$thread ^ (0xE) >> @r13 >> 0y11 | @rsp << @rdx & @rsp >> @rsi & @rbp & ~@rbx ^ 17 & @rbx | @r10 & ~@rbx & (0y0) < @rdi + 0y1011 << @r10 >> ~0x1 << @rsp >> @r10 | @r13 << @r10 & @rsi & @r13 & @r11 | $proc ^ @r11 & @r11 | $teb & @r8 ^ @rbp ^ @rax | @r13)  { test_statement(0x17CA); val = @rax ^ @r10 | -@r13 & $proc ^ 0n0 ^ @rdi | 0n12 | @rax | 0n12 ; }
$error$
$end$
4497
 if (@rsi >> 0y1010 << 0n7 & @r12 & @rbx & @rdi & @rsp | @r10 >> @r9 >> @r12 & $ip != @rsi >> 0y1010 << 0n7 & @r12 & @rbx & @rdi & @rsp | @r10 >> @r9 >> @r12 & $ip)  { test_statement(0x1848);  /* This is a not closed comment  /* This is a comment */ ; } else { test_statement(0x1B0F);  while  ($buffer <> @r8 ^ @rbx | 0xC)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
4498
 if (0x5 << $ip >> (@rbp) >> @rdi >> -13 ^ (@r9) & $thread ; 0x8 << @r12 << @rbp)  { test_statement(0xEE2);  This is a not opened comment */ } elsif (0y0 << 0y1 >> (0n9) >> $proc ^ +@r13 >> 0x8 & $ip & 0xA ^ @rax | @r9 >> @rsp & -@rbp | @rsi ; 0y0 << 0y1 >> (0n9) >> $proc ^ +@r13 >> 0x8 & $ip & 0xA ^ @rax | @r9 >> @rsp & -@rbp | @rsi) { test_statement(0x2072);  if (@rbp | ($thread)(@rbp | ($thread))  { test_statement(0x1293); } else { test_statement(0x309); } } elsif (22 >> $thread ^ @rdx ^ @r10 ^ @rbp(-0x1 | 14 | $thread ^ @r10 | ($proc)) { test_statement(0xB61);  This is a not opened comment */ }
$error$
$end$
4499
 if ($teb + @rax << $teb | $buffer << -@rdx ^ (@r9) >> $ip ^ +(@r8) & @r10 ^ @r10((@rbx >> 0x11 >> ~@rsi >> -@rdx ^ $teb << @r11)  { test_statement(0x26EA); } elsif (~@r12 << @r9 >> @r12 >> @rdx & +@rax & @r10(((@r10) >> @rbx >> 0x1 ^ $ip & @rax & @r8) { test_statement(0x1F79); } elsif ($thread >> @r11 | $proc & @r8 > 0x7) { test_statement(0xE8F);  if (($thread) | @r12 >< @rdx)  { test_statement(0x1EBF); } elsif (@rax ! 0y1011) { test_statement(0x12D5); } elsif (7))7) { test_statement(0x249A); } } elsif (@r10 & @r9)@r8) { test_statement(0xEB1); } else { test_statement(0x115D); }
$error$
$end$
4500
 if (@rsp + $ip << $teb << $teb >> @r9 >> @r10 >> $buffer & 0n17 << @rax & @r9 & @rdx & $ip ^ @rsp << @r9 & $teb & 15((@rsp + $ip << $teb << $teb >> @r9 >> @r10 >> $buffer & 0n17 << @rax & @r9 & @rdx & $ip ^ @rsp << @r9 & $teb & 15)  { test_statement(0x26B7);  while  (0n17 ^ @r8 | @r10 ^ @r9 | @rbp < 0n17 ^ @r8 | @r10 ^ @r9 | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rsi | @r9 | @rbp)@rsp ^ 0n18 | 0n11 | ~$proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4501
 if (@rbp + @rdi << 3 >> 0y110 ^ @rdi >> -@r13 ^ @rsi >> $ip((@rbp ^ 23 & $teb & $buffer & @r11)  { test_statement(0x2053); } else { test_statement(0x9F4); ; }
$error$
$end$
4502
 if (@r9 + ~0n16 >> ~20 <> 4 >> @r13)  { test_statement(0x716); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread | 0n10 | @rbp)$thread | 0n10 | @rbp) ; @rax = 0n6 | $buffer ; }
$error$
$end$
4503
 if ($ip + $buffer << 3 >> @r11 << 0y1011 >> @rbx | $ip | @rax >< @r9 + @r11 << @r8 >> +@r13 << 0xE | @r12 << @r10 & (@r8) >> @rdx)  { test_statement(0x1C13);  /* This is a not closed comment  if (0y111 ^ 2 | ~~@rsp | @rdi <= $buffer ^ 0x13 | -@rsp)  { test_statement(0x91); } elsif (@r11 ! @r11) { test_statement(0x1368); } elsif (@r8 >< @rbp) { test_statement(0x117B); } elsif (0x10 <= @rdx) { test_statement(0xE50); } elsif (0n4 = 0n4) { test_statement(0x1F98); } else { test_statement(0x1D25); } } elsif (@rsi << 0xC & @rax >> @rdi & ~@rbx(@rbp & @r12 ^ $teb >> 17) { test_statement(0x1E99); ;  for (val = 10; $buffer | @rsp >= $buffer | @rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (13 >> @rdx & @r9 ^ $buffer ^ $teb ^ 0n9 <= @rdx >> @r12 ^ @rbp & @rdi | 16 & $proc | @rsi ^ (0n3) | ~@rbp | ($buffer)) { test_statement(0x12AC); }
$error$
$end$
4504
 if (@r9 + @rdx >> @rdi << @rdx | +@rax << @rbx >< (-0xD))  { test_statement(0x41); } elsif (@rdi >> $proc >> @r13 ^ @r13 < @rdi >> $proc >> @r13 ^ @r13) { test_statement(0xDF0); } else { test_statement(0x669);  break; }
$error$
$end$
4505
 if (@rdi + @r9 >> @rax << $thread >> @rax & $thread << @r12 $teb << (@rdi) >> 0y1 >> @rbx & ~@r12 << @r8 >> $buffer | @rax << @r11 >> @r9 ^ @r12 >> 0xA)  { test_statement(0x232D); ;  for (val = 10; $thread ^ @rsp = $thread ^ @rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread << 0x9 >> $teb >> $buffer & 1 >> @rsi & 0n3 & 0y1000 | $thread ! @rax << @rdx | @rdx ^ @r9 & @rsi ^ @r9 ^ $teb | $proc ^ $buffer ^ @r8 | $buffer | @rdi | $teb) { test_statement(0x25A2); } elsif (@rdi ^ $ip != @r13 >> 0x2 ^ @rdi & $proc | 0n6 | @rsi ^ @r13 | @rdx) { test_statement(0x306); } elsif ((0y1100) & 0n12 > @r13 ^ @rsp ^ @r10 | @r11 ^ 0n15) { test_statement(0x1F37);  This is a not opened comment */ }
$error$
$end$
4506
 if (@rsi << $proc << $thread >> $thread >> $thread >> @r10 & @r9 & $proc ^ $buffer << +~0n1 >> $thread >> @rbx & $buffer & ~$proc & 0xA ^ 22 & @r13 >= @rsi << $proc << $thread >> $thread >> $thread >> @r10 & @r9 & $proc ^ $buffer << +~0n1 >> $thread >> @rbx & $buffer & ~$proc & 0xA ^ 22 & @r13)  { test_statement(0x21F9); ;  // /* This is a comment  ; }
$error$
$end$
4507
 if ($teb + @r12 & $thread >> @r10 ^ 0x13 @r13 >> ~~21 & @rsp << 4 >> @rdi >> 0n16 | @rsp >> @rbp >> $teb & ~+@rsi | 0y110 >> 0n1 & @r12)  { test_statement(0x1E2A);  break;  This is a not opened comment */  if (@rbp == @rbp)  { test_statement(0xB72); } elsif (-$ip((-$ip) { test_statement(0x23D1); } elsif (@rax < @r9) { test_statement(0x1CA6); } elsif (@r11))@rsi) { test_statement(0x11D5); } else { test_statement(0x1C71); } ; } elsif ($thread >> 3 ^ @r12 >> $thread & @rbp & +@rsi | @r9 >> @rsp ^ 17 & @r9 < @r12 << 0x7 >> $ip >> 0xF ^ (0n16) & +@r13 ^ @rax ^ ~@rdx) { test_statement(0x3D1); val = @rax & @r12 ^ @r11 ; val = ~@r8 ; ; }
$error$
$end$
4508
 if ($buffer >> @rbx << -$thread & @rsi << $teb >> 0x5 ^ $thread << @rbp >> @rbp >> $thread ^ @r13 >> 0n10 | -@rdx >> @r9 >> 20 | $ip ^ $buffer < @r13 << @rax << $proc & @r12 << $thread ^ $teb << $buffer >> @r13)  { test_statement(0x204F);  while  (@r12 & $ip ^ @r11 == @r12 & $ip ^ @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xBB9);  This is a not opened comment */ }
$error$
$end$
4509
 if ($ip + @r11 << @rbp >> 0x5 << @r9 >> @rbp ^ @r10 << (@r9) ^ @r9 >> @rsp ^ ~$buffer & $proc != @r13 & @rsp >> +-$thread >> @rax)  { test_statement(0x209C);  for (; @rsi & (-0n18) > @rax & $ip ^ $thread ^ @rbx | @r11 | -$buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1F36);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | $teb ! @rdi | @rax) ; val = $ip ; }
$error$
$end$
4510
 if (-@rsi ^ $proc >> $ip & @r11 >> 0y10010 & +@r8 ^ $thread >> $thread <> @r11 << $thread | ~@rdi << @rax & 0x3 >> +$thread ^ @rax & $teb ^ @rdi ^ $ip ^ 0xB | @r12 >> -$ip | $ip | @r10 ^ 0x12 | 0y10001)  { test_statement(0x1853);  // /* This is a comment  } else { test_statement(0x199E); }
$error$
$end$
4511
 if (@rdi + 0n6 >> $buffer << 0y1100 & @rsi << @r8 >> @rsp & 20 >> -@rbp != 0x6 + $buffer ^ @rdi << $proc ^ @r10 >> $ip & $teb & @r12 | 0y1101 & 0y1110 >> +4)  { test_statement(0xAAC); } else { test_statement(0x101A);  This is a not opened comment */  for (val = 10; $buffer >< @rdx | $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
4512
 if (@r9 << @rsp >> @rdx >> 0y110 ^ -(@r11) ^ @r9 & @rdx & @r9 >= ~(@rdx) + $ip << @r11 >> @rdi & $proc | -$ip >> @rdi & @r10 >> @r8 | 0xC >> @rdx & @r8 & @r8 ^ -~$ip ^ @rdx | 7 & 0y1100 | $ip | +@rbx)  { test_statement(0x1DF1);  break; val = @r10 & -@rbx | @rsi | @r11 ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 | @r13 != @rbx) ;  if ($buffer $teb)  { test_statement(0x1042); } elsif ($buffer = @rdi) { test_statement(0x1890); }  // /* This is a comment   if (@rax <= @rbx)  { test_statement(0x1869); }  break; } else { test_statement(0x2078); }
$error$
$end$
4513
 if (@rax + ~@rbp & ~0n10 << @rax ^ +@rsp << +$buffer >> $buffer >> @r13 & @r10 >> -21 & ($thread) ^ +@rbp | @r13 >> $buffer >> +$thread & -@rbx & @rsp ^ $proc >> @rsi ^ @rsp & @r12 ^ @r13 | @r13 >> @rsp & @rsp & -0y1110 | $ip ^ $ip ^ @r9 <= @rax + ~@rbp & ~0n10 << @rax ^ +@rsp << +$buffer >> $buffer >> @r13 & @r10 >> -21 & ($thread) ^ +@rbp | @r13 >> $buffer >> +$thread & -@rbx & @rsp ^ $proc >> @rsi ^ @rsp & @r12 ^ @r13 | @r13 >> @rsp & @rsp & -0y1110 | $ip ^ $ip ^ @r9)  { test_statement(0x549);  if ($thread >= 0n3 & @rsp)  { test_statement(0x3EB); } elsif (0n19 ^ @r8 ! @r12 | (0n4) | $ip) { test_statement(0xDD7); } else { test_statement(0x1AD1); } } elsif (0x7 << $teb >> -$ip | 1 & $buffer & @rsi ^ @rbp & @r10 ^ @r9 | $proc & @r12 ^ 7 $buffer << @rdi & @r11 & @rsp) { test_statement(0x16B4); } elsif (0y111 >> (@r10) ^ @r13 & 0n13 | $teb ^ $thread | $buffer ^ 0y100((0y111 >> (@r10) ^ @r13 & 0n13 | $teb ^ $thread | $buffer ^ 0y100) { test_statement(0x286);  if (@r9 | @rsi(((0y0) | 0xD)  { test_statement(0x128B); } elsif (@rbx @rbx) { test_statement(0x17AC); } else { test_statement(0x1220); } } elsif (@rdi & @r13 ^ -@r12 ^ @rbx $ip ^ @r10) { test_statement(0x199D); ; } else { test_statement(0x28A); ;  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
4514
 if (-$ip + @r12 >> @rsp << $ip >< $thread + @r9 << @rdi)  { test_statement(0xEEC);  This is a not opened comment */  while  (@r10 ^ @rdi(((@rax) | $teb | 0n4)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rax >> $teb & @rbp >> @r9 | @r13 <> @r8 & +@r12 >> 0y10001 | @rbp >> (@r12) ^ @rbp) { test_statement(0x638); val = @rsp | $buffer ^ (@rbx) | -~+@rsp ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x5 == @r12) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp < @rsp) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi == @rax) ;  /* This is a comment */  if ($thread >= $thread)  { test_statement(0x1361); }  for (; @rbx))$thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x57B);  // /* This is a comment   for (val = 10; @rdx | -@rdi(@rdx | -@rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 0n2; (13) <= @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
4515
 if (+@rdi | @rbx << $buffer | @rbx >> @rbx >< @r10 >> $thread << @rdx >> $buffer >> @r12 & @rbp >> $thread ^ @r12 << $ip & @rax & @rsi & $ip ^ @r11 & @rdi & @r12 ^ @rdi & $thread ^ @rdi ^ ~@rsp)  { test_statement(0x1FB4);  if (@rax ^ @r11 | @r11 | @rdx | 0x10 ~@rdi & 0y1010 ^ +@rdx ^ @rsp)  { test_statement(0x1C81); } elsif (@r10 | @rax | @r11))(@rsi) ^ (@r8) | $thread) { test_statement(0x21C7); } elsif (0y0(0y0) { test_statement(0xBC8); } elsif (@r9 >< @r9) { test_statement(0x2AA); } }
$error$
$end$
4516
 if (@r8 ^ @r11 >> $proc))@r8 ^ @r11 >> $proc)  { test_statement(0xC62);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi & $buffer ^ @rsp ^ @r10 | -@rsp ^ 11 | @r10 <> @r13 ^ @r10 ^ @rsi) ; } else { test_statement(0x1744); }
$error$
$end$
4517
 if (@rsi + 21 ^ @rdx << $ip >> @rax & $ip & @rbp & $thread ^ @rsi & $ip & @rdx($buffer + @r13 << @rax << @r10 >> $ip << 0y10010 >> @r12 >> @r10 & $ip >> @rsp & $ip >> (@rbx) & $proc & @rdi)  { test_statement(0x20FD); }
$error$
$end$
4518
 if ($thread + 4 << -$proc | @rax | @rbx >> @r8 & @rbp | $buffer)$thread + 4 << -$proc | @rax | @rbx >> @r8 & @rbp | $buffer)  { test_statement(0xA7F); } elsif (@r13 << $thread >> @rsp & $buffer & 0y101 ; @r13 << $thread >> @rsp & $buffer & 0y101) { test_statement(0x2431);  if (@r10 ^ ($proc))@r10 ^ ($proc))  { test_statement(0x8A2); } else { test_statement(0x1A5D); }  for (val = ($teb); @r10 | @r12 = @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi >> 0n2 & @r9 | $proc & @rbp | 23 ^ $proc))$thread & 0xD & 0 | @rax ^ @r13 ^ @rsi) { test_statement(0x16F); } elsif (@r10 & @rdx <> @rbp & @r12 ^ 0y1101 ^ ((@r12))) { test_statement(0x18F1); } elsif (@rdx ^ @rsp | $ip <> $thread) { test_statement(0x1D70); } elsif (@rbp((~+@r13 | $buffer) { test_statement(0x1BCE);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 <> @r8) ; } elsif ($thread)$thread) { test_statement(0x2598); } elsif (@r9 ! @r8) { test_statement(0x22CC); val = 0y0 ; } else { test_statement(0x181);  /* This is a comment */  /* This is a comment */ }
$error$
$end$
4519
 if ($teb + 10 << @rsp & @rdx << $teb >> $teb >> -+@rax ^ (@rsi) >> @r10 & @r12 & 15 ^ ~$thread | (@rdx) << (15) & @rdi ^ @r13 & ($teb) ^ @rax & $thread ^ $buffer ^ @r10(@rbp + @r11 >> +0n15 >> (@rdi) >> $teb & (0x2) >> ($teb) >> @rbp ^ -@r9 << $buffer >> $thread & @r13)  { test_statement(0x1E60);  /* This is a comment */ } else { test_statement(0x1D6D);  while  ($teb ^ @r8 | (+@rdx) | @r9($ip ^ @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4520
 if (@rbx & @rdx << ~@rbx >> $ip >> 17 & 0xB >> @r12 & $ip & +@rax ^ 0x1 << $buffer ^ 0x7 >> @rbp & $proc ^ $teb & $proc <> @rbp << @r11 & $teb << $proc >> @rdx >> @r8 ^ $teb >> @rdi | $buffer ^ $ip & 0x12)  { test_statement(0x253B);  /* This is a not closed comment  This is a not opened comment */  /* This is a not closed comment } else { test_statement(0x1B95);  This is a not opened comment */ }
$error$
$end$
4521
 if (0y1001 << @rbp << @rsp & $buffer >> 0n11 & @rsi >> 0y1011 <> 0y1001 << @rbp << @rsp & $buffer >> 0n11 & @rsi >> 0y1011)  { test_statement(0x1B39); } else { test_statement(0x1334);  break; }
$error$
$end$
4522
 if (@rbx + @r11 << @r13 << @rdx >> $thread >> ~0y1011 & $buffer << 0 ^ @rsi >> 0y1100 >> 0xA | @rsi ^ @rsi >> @rsi ^ @rbp = -0y11 << @rdi ^ @r10 << 10 >> -+$buffer & @rdi >> @r8 ^ 0n15 & +@r8 | $teb << (@r10) & $thread & $buffer & 0n18 | @r11 >> @rbx)  { test_statement(0x17B3);  This is a not opened comment */  // /* This is a comment  } elsif (@rdx << @r11 >> @r13 >> 0y11 & $teb >> @r11 ^ @r10 & ~@rax ^ $thread)0x7 & 0y1 >> 0y1001 & (-@r10)) { test_statement(0x1DCE);  while  ($ip ; ~@rsp ^ $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (@r13 ^ ($proc) ^ 0y10001 | 23 ^ @rax ! @r12 & @r13 & $proc ^ @rbx & +@r11) { test_statement(0xAE4);  while  (@rbp | @rdx != @rbp | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4523
 if (@rsp << 0y100 << -@rdx >> @rsp << ~@rdi >> @r8 & $ip | @rax >> $teb = @rsi + $proc >> 0y10011 << @rbx >> $proc >> $teb ^ @r12 >> 0x13 >> @r9 ^ @r9 & 0x1 & @r9)  { test_statement(0x16B6); }
$error$
$end$
4524
 if ($teb << @rdi << (+~@r11) & $ip & 12 | $teb ^ $teb >> (@rdi) & @r10 & +0x9 ^ 0n2 & @rdi ^ @r11 ^ @r13(@rdx + 13 << -@r12 << $buffer >> @r11 >> @r13 >> $buffer & @r11)  { test_statement(0x8AD); ;  /* This is a not closed comment } elsif ($proc << @r10 & ~@rdi & @rax & @r9 | -$thread ! $proc << @r10 & ~@rdi & @rax & @r9 | -$thread) { test_statement(0x127E); } else { test_statement(0xC31); }
$error$
$end$
4525
 if (16 << @rbp << @r11 >> $buffer << ~0x0 | 14 ^ @rsi >> @rdi & @rbx | @rdx & @r13 ^ ~$teb ^ 0xF ^ ~0n19 > 13 + $teb << $proc >> @r12 << @rsp >> +$teb >> $buffer | $ip >> 0n3 >> @rsi | $buffer >> $thread & @r10)  { test_statement(0x1DD7); } elsif (~-$proc << @rbx ^ @rsp >> +@r9 & $buffer & $teb ^ @r10 ^ $ip ^ @rsi == ~-$proc << @rbx ^ @rsp >> +@r9 & $buffer & $teb ^ @r10 ^ $ip ^ @rsi) { test_statement(0x214A); val = $ip & @rsp | $thread ^ @rdi ;  for (; -@r12 @rsi | @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } else { test_statement(0x5C);  // /* This is a comment   if (@rsi >< $proc | ~@r11)  { test_statement(0x4B7); } elsif (@rax >= @r10) { test_statement(0x16F2); }  break;  This is a not opened comment */ }
$error$
$end$
4526
 if (@rdx + $proc << @r10 << @r13 & $teb << @rsi ^ $buffer >> @r11 ^ 0xA >> 0x9 ^ @rsp & 0n14 ^ 7 | @rdi << 0n0((@rax & @rbx & @rbp | @rax >> @rdx & +-$thread & 0y1111 & $proc)  { test_statement(0x1083);  if ($thread & 5 | (@rsp) ^ @r11 <> @rsi ^ @rbx)  { test_statement(0x15E6); } else { test_statement(0x1280); }  /* This is a not closed comment  while  (15 | @r12 <= @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; $buffer <> @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x113); }
$error$
$end$
4527
 if ($ip & @r8 >> @rdi < $thread + $thread << @rsi & -~@r13 ^ @r10 ^ @rbx >> +-0y1000)  { test_statement(0x243B); } elsif (@r10 << @r13 >> @rdx >> @r10 ^ $proc >> @rdi & @r10 ^ @r13))@r11 << $ip ^ 0y1000 ^ $proc & ~@rsi ^ @r8 ^ @rbp) { test_statement(0x2560); } else { test_statement(0xD30); @rax = $proc ^ @r9 ^ ~~@r10 | @rbp ^ @r8 ; ; ; }
$error$
$end$
4528
 if (0n5 << @r11 >> ~0n10 | 0n3 << @r12 & ~@rax | @rbp >> @rdx & @r11 & @r11 | @rsi & @r8 >< 0n5 << @r11 >> ~0n10 | 0n3 << @r12 & ~@rax | @rbp >> @rdx & @r11 & @r11 | @rsi & @r8)  { test_statement(0xD18); } else { test_statement(0x21D7);  // /* This is a comment   /* This is a comment */ @rax = @r8 ;  while  (@r13((0y1110))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n8)0n8) ;  break; }
$error$
$end$
4529
 if ($ip << 0y1000 << @r9 >> @r12 << @rax >> @rsp >> 13 & ~0n14 << @r12 >> @rbx ! $ip << 0y1000 << @r9 >> @r12 << @rax >> @rsp >> 13 & ~0n14 << @r12 >> @rbx)  { test_statement(0x17B7);  while  (0n2 ^ @rsp ! @rbx & $ip ^ @rbx | @r9 ^ $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  // /* This is a comment  } elsif (~@r12 ! $thread) { test_statement(0x24BF); } elsif (@rdi <= @rbx & 0n11 ^ +(@r9) | @rdx & @rbx) { test_statement(0xC83);  This is a not opened comment */  /* This is a not closed comment } elsif (@rdi | @rax ^ $ip | $proc ! @rdi | @rax ^ $ip | $proc) { test_statement(0x26F7);  while  (0y1111((@r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x10DD); }
$error$
$end$
4530
 if (@r8 + $ip & @r11 >> -@rsi & @rax & 0n6 & ~+-@r9 ! @r8 + $ip & @r11 >> -@rsi & @rax & 0n6 & ~+-@r9)  { test_statement(0x1BF7);  /* This is a comment */  /* This is a not closed comment  This is a not opened comment */  if (@r9 == $proc)  { test_statement(0x891); } else { test_statement(0xF96); } } elsif ($ip >> ~@r12 ^ 3 >> @r10 == $ip >> ~@r12 ^ 3 >> @r10) { test_statement(0x1B0F);  for (val = 10; $teb | 17 | @rax $teb | 17 | @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($teb(($teb)  { test_statement(0x10A1); } elsif (@rsi 0n17) { test_statement(0x237); } else { test_statement(0x1FD4); }  while  (@rbx ; ($thread))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n16 <= 0n16) { test_statement(0x12C0); } elsif (0n9 | (@r11) ^ @r13 | $teb < @rbp) { test_statement(0x11E0); } elsif (@rdi | 21 | $thread((@rdx | @rbx | @r13) { test_statement(0x201B); }
$error$
$end$
4531
 if (@rbx << 0x6 & $thread & ~@rsi & @r9 | ~$thread >> $buffer >> 12 & +11 & $buffer & @rbp ^ 0y1011 >> @rax | @rdi >> 17 & @r10 & $thread ^ @rsp | 3 & @rdi | @rsi ^ @rsp = @rax >> @r13 >> @rbx)  { test_statement(0x25E1);  /* This is a not closed comment } else { test_statement(0x1EA8); }
$error$
$end$
4532
 if (0y1111 + @rax >> 0n10 << @r10 | 0y10011 >> +@r8 >> 0xD ^ 0y1110 >> @r8 ^ @r13 = @rbx + 12 >> $buffer << 0n11)  { test_statement(0x7B9); ; } elsif ((22) << @r11 | (+0xA) ^ $buffer ^ @r9 ^ (@r9)((@r9 << @r12 >> 0n14 >> @rdx | 6) { test_statement(0x1F7F); } elsif (@rbx ^ (@rax) ^ 0x11 | @rax & @rsp ^ @r9 | 7 | -@rax | @r10 != +@r13 >> +$buffer & @rdx & $proc) { test_statement(0x1040); @rax = @r8 ^ @r8 ;  /* This is a not closed comment  This is a not opened comment */ } elsif (~@rdi ! $thread & (0n9) ^ @rdx | @r12 | @rbp | @rdi) { test_statement(0x370); } elsif (~@r12)@rdi) { test_statement(0x2BD); ; }
$error$
$end$
4533
 if (@r13 + $thread << @rax >> @r11 > @rbp << $proc << @rdi ^ @rsi ^ @rsi >> @rbp & @r8 ^ 14 ^ @r9 | $buffer)  { test_statement(0x17BA);  while  (@r12 & ~$proc >< @r12 & ~$proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($proc ^ @rax | 0x10 | $teb <> $teb ^ $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2417); }
$error$
$end$
4534
 if ($buffer << @rdi << @rsi >> @rdx >> @r9 >> $proc & 0y101 >> $ip >> @r8 & @rbx ^ @rbp << 22 >> (0n12))$buffer << @rdi << @rsi >> @rdx >> @r9 >> $proc & 0y101 >> $ip >> @r8 & @rbx ^ @rbp << 22 >> (0n12))  { test_statement(0x226C); } else { test_statement(0x11F4); }
$error$
$end$
4535
 if (~@r10 & @r9 >> @rdx >> @rdi | @rsp >> @rbp ^ (@rdx) | 0n1 ^ 11 & $thread | +(0y1000) & @rbp((~@r10 & @r9 >> @rdx >> @rdi | @rsp >> @rbp ^ (@rdx) | 0n1 ^ 11 & $thread | +(0y1000) & @rbp)  { test_statement(0x828);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +++0y1001 | $buffer | $proc >= +++0y1001 | $buffer | $proc) ;  // /* This is a comment  }
$error$
$end$
4536
 if (@rax << @r9 << @rsi >> $teb >> @rbp | -$ip >> $ip ^ @r11 ^ @rbx & +-@rdi | @rdx & @rdx ^ @rsi ^ +-@rsi ! @rax << @r9 << @rsi >> $teb >> @rbp | -$ip >> $ip ^ @r11 ^ @rbx & +-@rdi | @rdx & @rdx ^ @rsi ^ +-@rsi)  { test_statement(0xE84); } elsif (~$buffer & $proc & $proc = @r12 >> @r10 >> @rsi | $ip & ~0y1 ^ @rdi ^ 0x5 ^ (@rbp) | ((@rbp)) & @r10) { test_statement(0x198B);  break; } elsif (@rdx >> @r9 & @rbp & @rdx ^ $ip & @rsp | @r11 & @rdx ^ @rbx ^ @r11 | ~0n1 | $ip | @r13)$thread >> ~$buffer) { test_statement(0x1CF0);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc)$buffer) ; }
$error$
$end$
4537
 if (0x10 + 0y1101 >> @r13 << @r8 >> 14 & (@r8) << $proc >> @r12 >> @rsp & @r8 != @r13 >> ($thread) << @r9 >> @rax >> @r12 & 0x9 ^ @rsi << ~$proc >> ($proc) & $proc >> 0x2 ^ @rax ^ @rsp ^ (0x7))  { test_statement(0x169F);  if (@r8 ; @rbp ^ @r9 ^ @r8 | @rsi)  { test_statement(0x1DF5); } elsif (@r8)+$teb ^ $ip) { test_statement(0x95C); }  // /* This is a comment  } elsif (@rdx << @r12 >> 0y1101($ip << -@rdi >> 0y1 >> 0y1111 ^ @rbp ^ -@r12 & -@r11 | @rsi) { test_statement(0x1A93); } elsif (@r9 & @rdx & -0y110 = @r8 >> $ip & @rbx & @rsi | $teb) { test_statement(0x3E); } else { test_statement(0x80D); }
$error$
$end$
4538
 if (@r11 + $buffer | $ip <> $ip)  { test_statement(0x220B); } else { test_statement(0x9AE);  if (@r8 | 6 != @r10 ^ @r11)  { test_statement(0xF83); } elsif (@r10 | 0y110))$proc | $buffer) { test_statement(0x1ADD); } else { test_statement(0x381); } }
$error$
$end$
4539
 if ($thread + -@r8 ^ @rbx << @r12 & $teb >> @rdx | @rbp << @rdx >> @r12 ^ @rdi & 0 & $thread <= @rbp << 0y101 & -@rsp | @r13 << (@r9) >> $ip & @rbx & @r13)  { test_statement(0x23F1); } elsif ($teb << @rdx >> 16 >> 0n8 | @r10 >> @rax & @rsi | @r12 & (@rbx) | @rbx ^ ~21 | $buffer | --@r10 <= @r8 & @r13 >> @rsi & @r12 | @r12 | @rdx & @r13 | @rax) { test_statement(0xEAC); }
$error$
$end$
4540
 if (0xD << @rsi << $buffer >> $buffer << @rdi >> @rsi >> @r11 == 0n0 << ~@rdi ^ @r13 ^ -@rsi | -$thread ^ $buffer >> 0y1011 & $thread & @rsp ^ @r8 ^ 13 | $buffer >> @r13 & @rsp & @rbx | @r13 ^ 0x10)  { test_statement(0xB6B); } else { test_statement(0x54D); }
$error$
$end$
4541
 if (@r11 + @rbp << $proc & @r8 >> @r9 >> @rax & @rsp ^ @r10 >> $teb >> @rbx ^ @r10 >> $thread ^ @r12 <> @r9 + 0y100 >> 0n0 | +$proc << $teb)  { test_statement(0x1B51); } else { test_statement(0x3DD);  for (val = 10; 0y1010 ^ $proc | @r11 ! @rdx | $buffer | @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ! @rbp) ;  for (val = 10; $buffer))$buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4542
 if (@r12 | @rsp << @rsi >> 20 & ~0n16 >> @r8 | @r10 ^ -0x5 == @r12 | @rsp << @rsi >> 20 & ~0n16 >> @r8 | @r10 ^ -0x5)  { test_statement(0x213);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 | $proc | $buffer | $proc >= $proc & @rdx) ;  // /* This is a comment  val = $proc ^ +~@r11 ;  for (val = @r13; $proc))$proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@r8 ! -@r8) ;  if (-$proc))-$proc)  { test_statement(0x72E); } }
$error$
$end$
4543
 if (@rsi + $thread & @rsi >> 0x2 & $buffer ^ 0y1000 >> ++0xE ^ @rsi & @rbx & $ip = @rsi + $thread & @rsi >> 0x2 & $buffer ^ 0y1000 >> ++0xE ^ @rsi & @rbx & $ip)  { test_statement(0x1D53); }
$error$
$end$
4544
 if (0n9 + $buffer << +@r12 << $thread & 0y1000 << @r11 & @rsp >> @rsp & 0x8 & @rbx | ~@rdi << +2 >> 0y111 >> @rsi | @r8 >> @r10 | @rbp | $proc ^ @r10 < 0n9 + $buffer << +@r12 << $thread & 0y1000 << @r11 & @rsp >> @rsp & 0x8 & @rbx | ~@rdi << +2 >> 0y111 >> @rsi | @r8 >> @r10 | @rbp | $proc ^ @r10)  { test_statement(0x733); }
$error$
$end$
4545
 if (13 & 0x3 << $thread >> 0y1111 <= $ip + @r9 << 0n9 >> $buffer >> 2 >> (@rsp) & 5 << @r8 | $ip ^ @r8 & +@rdi ^ @rdi & (0n11))  { test_statement(0x14C4); }
$error$
$end$
4546
 if ($buffer + @rbx << @rax << ($teb) | @r12 | @rbx & @rdi & ~@rsi | $buffer & @rbp >= $thread + ~-@r9 << +$ip << 0n12)  { test_statement(0x17AC);  This is a not opened comment */  while  (($proc) ^ 0n16 | @r11((-@rax | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @r8 ; }
$error$
$end$
4547
 if (@rdx + @r10 << 17 << @r8 >> 22 ^ $teb << @r12 >> @rsi == @rdx + @r10 << 17 << @r8 >> 22 ^ $teb << @r12 >> @rsi)  { test_statement(0x1CD);  while  (@r13 | 0xA ^ 12 != @r13 | 0xA ^ 12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xD65); }
$error$
$end$
4548
 if (@r12 + @r9 << @r11 ^ @r9 << $proc >> @rdi >> @r12 ^ @rdx >> @r10 ^ $buffer >= @r12 + @r9 << @r11 ^ @r9 << $proc >> @rdi >> @r12 ^ @rdx >> @r10 ^ $buffer)  { test_statement(0x1F25);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 ; @r10) ;  /* This is a not closed comment  // /* This is a comment  }
$error$
$end$
4549
 if (@rdx + $buffer >> ~@r10 ^ $buffer << -0xB >> ~$ip @rsp << @r9 & -$thread)  { test_statement(0x12CB); } elsif (@r12 >> @rsi >> 22 | -@r13 >> 0y1110 ^ @rax & 0y1110 | $proc ^ 0n15 ^ $buffer | ~0y1011 ^ @r10 | 0x13(@rsp << $buffer) { test_statement(0xFB3);  // /* This is a comment  } elsif ($buffer & 0x9 ^ +0n1 ^ $proc ^ @rsp | @r11 & $proc | @rax ^ @r13 $buffer & 0x9 ^ +0n1 ^ $proc ^ @rsp | @r11 & $proc | @rax ^ @r13) { test_statement(0x1BC8); } elsif (@r11 & @rax = @r11 & @rax) { test_statement(0x145C);  // /* This is a comment  } elsif (@r11((@r11) { test_statement(0x159E); }
$error$
$end$
4550
 if (@r10 & $thread << @r12 >> (-$proc) & @r8 >> $buffer ^ -(@r12) << @rdi & -+@r11 >> @r11 > @r10 & $thread << @r12 >> (-$proc) & @r8 >> $buffer ^ -(@r12) << @rdi & -+@r11 >> @r11)  { test_statement(0x19CB); }
$error$
$end$
4551
 if ($thread << @r8 >> @r12 << 11 & @rbx << @rax >> 0x9 >> (-@rdx) ^ 0x6 & $teb & -@r12 & 0y10 <> 16 + 0xD << @r12 & $proc << ($proc) >> 0x11 >> 21 | @rdi & @rsi >> -@rsi | $buffer >> @r10)  { test_statement(0xACF); } elsif (@r12(@r12) { test_statement(0x1371); } elsif (~$proc ^ 0x9 | -0x11 & ~15 | $ip ^ @rsp(-0y1111 >> @rsp & @rdi ^ 0n11 & @r10) { test_statement(0x6DC);  /* This is a not closed comment @rax = +@r12 | 15 ; } elsif (+$ip & +@rsp ^ $thread ^ @r9 | @rax | $teb | $ip != $ip & @r12) { test_statement(0x1C30); } elsif (@r13 ^ 0x3 | 0n15((0y100 ^ @rsi) { test_statement(0x322);  while  (10 @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r9 != @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (@r10 | $ip != ~@r13 | @r11) { test_statement(0x715); } elsif (@r10 < @r9) { test_statement(0xE3F);  /* This is a comment */ } elsif (@r8 < @r11) { test_statement(0x98);  This is a not opened comment */ } elsif (@rdi != 0y1) { test_statement(0x13DD); }
$error$
$end$
4552
 if (0xE >> @r8 << @rsi ^ @rdx << @r12 >> @rbp >> -0xC & +@r11 >> 0y1000 ^ @r11 >> @rdi(($buffer << ~@r11 >> $buffer << 0x2 >> $proc ^ @r8 ^ +@r10 >> 0n1 & +@r13 & +@r9 ^ 5 & $teb)  { test_statement(0x2086);  if (@rdi & @r8 ^ @rdx ^ 0y1001 = @rdi & @r8 ^ @rdx ^ 0y1001)  { test_statement(0x404); } else { test_statement(0x22E3); }  // /* This is a comment  } elsif ($ip << -~@rbp >> @r12 >> @r11 & @rbx >> ~@rbx ^ $teb >> @rdi ^ $proc ^ @rax ! @rdi & @rsp & @r8 & @rsi | 16 >> @rsp & (@r13) & $proc) { test_statement(0x763); } else { test_statement(0x7CE); }
$error$
$end$
4553
 if ($teb << -0y10001 & @rbx & @r10 >> $ip ^ @r12 << @rsp & +13 ^ ($teb) >> 0x10 & @rsp & @r11 | $proc << @r9 >> 0xE >> $teb ^ @rbp >> @rbp & +$ip | $buffer >> 0n2 ^ @r9 | -0n12 ^ @rdi <> 3 + @rbp & @r9 << 0x2 ^ @rsp >> @rbx & $ip >> @r9 | -@rax | -@r10 >> $thread ^ @r11 ^ @rbp ^ -@r11)  { test_statement(0x2569);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 3 > @rdx ^ @r13 | 0x8 | @r11) ;  if (@rdx((@rdx)  { test_statement(0x145A); } elsif (@r11 >= @rsi) { test_statement(0xB89); } else { test_statement(0xAFB); }  break; }
$error$
$end$
4554
 if (@r11 >> @rbp & @r13 & @rdx >> $thread | @rdi & $thread >> 0n16 ^ @rax ^ 0x8 & @rdi ^ @r8 ^ $teb | @r12 & @rbx & 22 | ++@r13 & 0n11 ^ $buffer ^ $proc | $teb ^ +$teb == @r11 >> @rbp & @r13 & @rdx >> $thread | @rdi & $thread >> 0n16 ^ @rax ^ 0x8 & @rdi ^ @r8 ^ $teb | @r12 & @rbx & 22 | ++@r13 & 0n11 ^ $buffer ^ $proc | $teb ^ +$teb)  { test_statement(0x13DA);  // /* This is a comment  } elsif (0x3 << $buffer >> $proc >> 0y10 & (0x4) ^ @r13 ^ (@rbx) & 23 >< @rdi << @rax & $buffer >> $proc | 0n4 >> @r11 & $buffer & @r11) { test_statement(0x10B5);  if ($teb ^ 0y1111 | 0n7 | @r13 <= $thread)  { test_statement(0x9B0); } elsif (@r8 < @r8) { test_statement(0xC00); } elsif (0y110))$buffer) { test_statement(0xDEE); } elsif (~$buffer > @rsp) { test_statement(0x3B3); }  if ($buffer | $buffer = $buffer | $buffer)  { test_statement(0x1BE1); }  while  (@rsp(11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~0xF >> @rdi ! ~0xF >> @rdi) { test_statement(0x2560); ;  while  ((+@r9) < @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4555
 if (@r9 + @r11 << @r8 << @rbp >> $teb >> $buffer >> @rax & $ip ^ @rbx << @r10 & +$teb >> 0n4 | @rbx << @rax >> $teb ^ @r9 >> 0n19 | 11 >> @r9 & $proc & ($teb) ^ @rdi))@r9 + @r11 << @r8 << @rbp >> $teb >> $buffer >> @rax & $ip ^ @rbx << @r10 & +$teb >> 0n4 | @rbx << @rax >> $teb ^ @r9 >> 0n19 | 11 >> @r9 & $proc & ($teb) ^ @rdi)  { test_statement(0x4F9); } else { test_statement(0x404);  /* This is a not closed comment ;  // /* This is a comment  }
$error$
$end$
4556
 if (@r10 + $ip ^ @rsi >> $ip >> +$proc | @rdi >> @rsp & @r8 >> @r12 ^ @r11 ^ @rsi | @r11 & @r13 & @r13)@r9 + 0x9 << ~-@rsp << @rsi | +~@rsi >> @r10 >> $buffer & ~@rsi >> $thread & @r10 & @rbp ^ $teb | @r11 >> -+@rsi)  { test_statement(0x1B75);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx & @rdi ^ $buffer ^ (@rsp) >< @rbx & @rdi ^ $buffer ^ (@rsp)) ;  while  (@rsp ^ $ip | 0y110 @rdx | -$thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer <= $buffer) ;  for (val = 10; 0x9 <> 0x9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (-0n2 << @r12 & -@r10 >> @rax & @r13 & ~-@rsp | @r10)@rsi & 0n1 & @rbp & @rdi ^ @rsi >> +((-@rdx)) & @rdi) { test_statement(0x1155); } elsif ((@rbp) >> @rbp & ~@rax & @rsp < ~~@rsi ^ @rsi ^ 0y101) { test_statement(0x1B67);  This is a not opened comment */ } elsif (+@r12 | $proc | @rdi = $buffer & $buffer ^ @r12 | @rdi ^ $thread | @r10) { test_statement(0x1744); val = @rsp ;  break;  while  (@rsp <> +$ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4557
 if (@r13 ^ @rdx ^ (@rdx) >> @r8 & 1))0x5 + $ip ^ @rbp | +@rsi & 0y110 >> 0y10)  { test_statement(0x236F);  /* This is a not closed comment  while  (@r11 ^ @r9 >< @r11 ^ @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rbp((@r12 | $buffer) ;  while  (@r10 > @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x1AA6); }
$error$
$end$
4558
 if (@r13 + @r9 ^ @rdx << 11 > @r13 + @r9 ^ @rdx << 11)  { test_statement(0xBE0); } else { test_statement(0x22DC);  This is a not opened comment */ ; }
$error$
$end$
4559
 if (@r10 + @rsi << @rsp & @rdi ^ @rdi << $thread & $ip | $proc << @r8 >> -~$proc >> $proc & @rsi >> $thread & -@rbp & @rbp != @r10 + @rsi << @rsp & @rdi ^ @rdi << $thread & $ip | $proc << @r8 >> -~$proc >> $proc & @rsi >> $thread & -@rbp & @rbp)  { test_statement(0x1563); } elsif (+$teb << @rsi +$teb << @rsi) { test_statement(0x1C27); }
$error$
$end$
4560
 if (@rsp << @rdi >> @r8 << @rdi >> 0y111 & @r8 >> @rbp >> @rsp & $proc & -$teb & $thread | 0n2 << @r11 >> --@r13 >> +$ip & $teb >> @rdx = @rax + 0n11 & $ip >> $proc ^ 0n9 >> @rbp)  { test_statement(0x1F07);  for (val = 10; @r8 | @rdi ^ $ip | 0n2 @r13 ^ 0xB;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rdi ^ @rsp | @r11))0y10000 | $proc | 0y111)  { test_statement(0x1B95); } ;  break;  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx == @rdx) ;  if (@rbx = 0n16)  { test_statement(0x23FF); }  /* This is a not closed comment } elsif ((+21) << $teb ^ @r11 ^ (0xD) ^ @rdi))$ip >> @rsp ^ 0x13 ^ @r13 ^ @rsp ^ @r12 | @rdi >> @r11) { test_statement(0xE1A); ;  /* This is a not closed comment } else { test_statement(0x7F3); }
$error$
$end$
4561
 if (0x7 << @r13 >> @r11 << 0n2 & $buffer << $ip & @rax >> (@r9) ^ @r10 << @rdi >> @r12 ^ 0y1001 >> @r12 ^ @rdx ^ @rax ^ $teb | @rax >> @rsi & @r11 > @rbx & @rbx << @rbx)  { test_statement(0x26FC); } else { test_statement(0xFD1); }
$error$
$end$
4562
 if (@r9 << $teb << -@r10 & (@rsi) | @r11 ^ @r8 >> $teb ^ @r9 & 0x10 ^ @rdx ^ @r10 | @rax >> $teb & @rbx | $buffer & @rdi ^ @rbx ^ ++~@rbp = @r9 << $teb << -@r10 & (@rsi) | @r11 ^ @r8 >> $teb ^ @r9 & 0x10 ^ @rdx ^ @r10 | @rax >> $teb & @rbx | $buffer & @rdi ^ @rbx ^ ++~@rbp)  { test_statement(0xEEB); } elsif (5 & @rbx & +$teb ^ @rax & 0n8 & @rbp != @rbx >> @r11 | @r10) { test_statement(0x1675);  This is a not opened comment */ val = @r11 | @rsp | ~@r13 ; } elsif (~$thread >> @r12 ^ 15 ^ $proc = 0x8 >> @rdi & @r13 & @rax ^ @r11 ^ @rdi) { test_statement(0x1F33); } elsif ($teb ^ @rax)$teb ^ @rax) { test_statement(0x9D0);  This is a not opened comment */  /* This is a not closed comment } elsif (@rsp ^ 0x11 | 0n3 | @rax > ($ip) | @rdi) { test_statement(0xF2A); } elsif (@rdi | @r8 < ~@r10) { test_statement(0x9E9); } elsif (@rax ! (@rdi)) { test_statement(0x259B);  if (@r12 >= $proc)  { test_statement(0x166C); } } else { test_statement(0x108F); }
$error$
$end$
4563
 if ((@rbx) << @rax & 0x5 & @r12 >> @r8 & @rdx = (@rbx) << @rax & 0x5 & @r12 >> @r8 & @rdx)  { test_statement(0x7BD); } elsif (@rsi & @r12 >> @r10 & -0n2 & @rsp | (11) ^ @rdi & @r13 ^ @rsi < @rsi & @r12 >> @r10 & -0n2 & @rsp | (11) ^ @rdi & @r13 ^ @rsi) { test_statement(0x19B4);  while  (@r10)@r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x568);  This is a not opened comment */ ;  while  ($proc ; @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
4564
 if (@r11 >> @rbx >> @r13 >> 0y10001 >= @r11 >> @rbx >> @r13 >> 0y10001)  { test_statement(0x66D);  break;  for (val = 10; $ip ^ @r12((@r12 | -$thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  if ($thread <> $thread)  { test_statement(0x2195); } } else { test_statement(0xC37); ;  This is a not opened comment */ }
$error$
$end$
4565
 if (@r9 << +@r13 & $buffer @rdi >> @r10 << $buffer >> $ip & +@r13 >> ~@r8 & @r8 >> $buffer)  { test_statement(0x1C00); } else { test_statement(0x1260); }
$error$
$end$
4566
 if (@r9 >> $ip >> @rbp ^ @rdi << @r11 >> $ip & @rsi & @r13 & @rbp <= @r9 >> $ip >> @rbp ^ @rdi << @r11 >> $ip & @rsi & @r13 & @rbp)  { test_statement(0x138A); } elsif (~-@rbp >> @r12 ^ 0x3 >> $teb & $buffer & @r8 ^ +@r8 ^ @rbp ^ @rbp | -@r10 >> -@rdi & $thread & $proc | @rax == ~-@rbp >> @r12 ^ 0x3 >> $teb & $buffer & @r8 ^ +@r8 ^ @rbp ^ @rbp | -@r10 >> -@rdi & $thread & $proc | @rax) { test_statement(0x15E9); } elsif (-@rsi & @rax ^ $buffer & (@r10) ^ 1 ! @rbx & @rdx & @r12 | 0x11) { test_statement(0x393); } elsif (@rsp & (@r11) ^ $teb ^ @rdx >= @r13 & @rsi | $ip ^ 0 | @r8 | $ip) { test_statement(0x930);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n4 @r9) ;  // /* This is a comment   while  ($ip($ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
4567
 if ($proc + ++~@r13 << @rax << 0n12 >> @rsi & @rsp $buffer + @rbp << +$ip << ~@rsp >> $teb << 23 >> 0xE >> ($teb) & -@r10 | @r12 << $buffer ^ 0y10011 >> (@rdx) & $teb & @rsp ^ @rsi ^ @r12)  { test_statement(0x2391); } else { test_statement(0x26DA); }
$error$
$end$
4568
 if (0xA << @rsp < 0xA << @rsp)  { test_statement(0x1459); } elsif ($proc << @rsi & @rbp >> @rsp ^ $thread >> (0xA) & 0x4(@rdx << @rbp >> @rsi & @r9 >> @r11 & $buffer ^ @r8 | +0y1110 ^ 0x5 & @rbx) { test_statement(0x2184);  if ($proc ^ @r12 | $ip | $thread <= @rsi ^ 0x3 | @rax)  { test_statement(0xABF); }  if (@rax | @r12 >= @rax | @r12)  { test_statement(0x24F0); } elsif (@rsi((@rsi) { test_statement(0x731); } else { test_statement(0x1687); } } else { test_statement(0x260E);  // /* This is a comment  }
$error$
$end$
4569
 if (@rsp + @rbx << (-17) << 0n12 < @rax << @rbx ^ 20 >> @rax & @rdx ^ 0x1 | @rbp << @r12 >> @rbx >> @r10 ^ @rdx & @rax & @rsi ^ @r10 & $ip)  { test_statement(0x38E); }
$error$
$end$
4570
 if (@rsp + @rsi << (@rdi) << $teb & @r13 << @r13 >> @rax >> @rdi ^ 5 & ($buffer) & $proc | 0y1101 & $buffer >> $buffer ^ 0y1101 >> @rax ^ @r8 & @rbp >= @r10 + @rsp & @rbp << 0n4 ^ @r10 ^ $thread & $thread)  { test_statement(0x1677); }
$error$
$end$
4571
 if (-@rsi << 0n15((16 + +0x13 << +~-@r11 << $proc >> 0n6 << @r11 >> $buffer & $thread << @r10 & $teb)  { test_statement(0x4E7); } elsif (@r9 | ~@rax >> @r10 & @rbx & @rdi ^ @r8 ^ @r10 ^ @rsi <= (@r9) << $thread & @rbx & $ip & -(@r8)) { test_statement(0xC4C); } elsif (@rsp & $ip ^ $thread & @r13 ^ $ip | -@r8 ^ +@rbp | @r10 ^ @r11 > @rbx | @r8 & @rsi ^ @rbp ^ $teb) { test_statement(0x1393); ; } elsif (0n16 ^ @rax | @r12 | @rsp | @rax == @r13 ^ @rdx | $thread | ~$proc | @rbp) { test_statement(0xD2A);  if ($buffer >= @rax)  { test_statement(0x13A3); }  break; } elsif (@r10 <> 0n17) { test_statement(0x1CA2);  /* This is a comment */ }
$error$
$end$
4572
 if (~@rsp << 0n19 << (@r11) ^ @r12 << $thread >> 0n9 | @rbp | @r9 & 0x3 & @r8 ^ -@r13 ^ 0y100 <> ~@rsp << 0n19 << (@r11) ^ @r12 << $thread >> 0n9 | @rbp | @r9 & 0x3 & @r8 ^ -@r13 ^ 0y100)  { test_statement(0xCFC);  /* This is a comment */  while  ($thread ^ -$thread | ~@rbx | @rdi == (@r8) ^ @rdi | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2576); }
$error$
$end$
4573
 if (@r8 << 0y1111 << @rax >> @r9 << $buffer <= @r11 | 3 >> @rsi >> $buffer & 0y1110 >> (~@r11) & 11)  { test_statement(0x20C4);  This is a not opened comment */  for (val = 10; (0y1111) | @r10 | @r13(0y10010 ^ @rdi | @r9 | @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread << @r13 & $ip ^ $buffer & 0y1000 ^ @rdi ^ @rbp ^ 0y1101 | @r12 & @rdx > 0y1111 & @rsp >> @r12 & $proc ^ @rdx & @rbx & +@r9 | $buffer ^ @r12 & 12 | @rdi ^ @rax ^ @r8) { test_statement(0x1D84); }
$error$
$end$
4574
 if (+@r8 & @rsi << @rdi >> @r10 & 0y10000 >> -$buffer & @r10 | 2 << @rdi >> $ip & 17 >> @rdx & @rax | @r12 >> 12 & (@r11) & $teb | @r11 ^ @rdx ^ $teb)+@r8 & @rsi << @rdi >> @r10 & 0y10000 >> -$buffer & @r10 | 2 << @rdi >> $ip & 17 >> @rdx & @rax | @r12 >> 12 & (@r11) & $teb | @r11 ^ @rdx ^ $teb)  { test_statement(0x165B); } elsif (12 << 0x9 >> 21 >> $teb ^ 21 & @rsi | 0n4 & 0n13 ^ -@r11 | @rax & +$teb <> @rax >> 0x4 >> @r9 & @rbp >> ~@rbp & @rsp | @r13) { test_statement(0x723); ; } elsif (((@rsi)) >> @r11 | @rax = ((@rsi)) >> @r11 | @rax) { test_statement(0x15CC); val = @rax | @r8 | $proc ; } elsif (0x6 | 0y10000 | -$proc != @rbp & @r13) { test_statement(0x400); } elsif ($buffer ^ $proc | -@rbp | $ip))$buffer ^ $proc | -@rbp | $ip) { test_statement(0xF39); } else { test_statement(0x10);  /* This is a comment */ ;  /* This is a comment */ val = (@r10) ; }
$error$
$end$
4575
 if (-@r13 + $ip << $buffer << -7 ^ 0y1000 ^ $buffer >> @r12 ^ @rsp & @rdx >= 0x5 >> $teb << -@rdi)  { test_statement(0xA88); } else { test_statement(0xF3F); }
$error$
$end$
4576
 if (@r13 + $proc >> $ip << 0y1100 >> 0xF != 0y10000 + @rdx << $ip >> 0x3 << @r13 ^ @rsi ^ @rdx ^ 0y101)  { test_statement(0xEE3); } elsif ($buffer & $proc >> +~@rax ^ 6 | $buffer & @r13 & @rbx ! -@r8 << @r13 >> -$ip >> ~@rax & @r8 ^ @r9 & @rsi & @r9) { test_statement(0x110F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip ^ 0x11 | @r8 != ~@rbx ^ @r13) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@r10 <> 0xD | 0x5) ; } elsif (@rax & ~0n6 ^ $proc & $buffer ^ 1 ^ (@rdx) | @r13 <> @r11 >> @rdx) { test_statement(0x1B22);  /* This is a not closed comment } else { test_statement(0x236B); }
$error$
$end$
4577
 if (0xA + @r11 << @r10 ^ @rbx << 0x7 >> (@rax) >> @rsi ^ @rsi & @r10 & @rbp | $buffer << (@rsi) ^ @rbx >> (@rbp) | $buffer > ~0y1111 << $thread >> @r12 & $buffer << @rdi & 13 & +$thread)  { test_statement(0x386); } elsif (~@rsp << @rax >> @rax & 0x2 & 0n17 & @rsi < ~@rsp << @rax >> @rax & 0x2 & 0n17 & @rsi) { test_statement(0xFB9); }
$error$
$end$
4578
 if (@rbp >> ++-~@r11 | @rbp << @rax >> @r13 & $teb & 1 & $teb | $buffer & @rsp >< @rax)  { test_statement(0x1CF3);  if (@r8 ^ -@rdx ^ @r12 | ++$thread > $buffer & 21 | 0xF | @r13)  { test_statement(0x1FF3); } elsif (@r9 ^ @r10 ! $buffer) { test_statement(0x12E4); } elsif ($proc @r9) { test_statement(0x11FC); } }
$error$
$end$
4579
 if (@rbx << 0n7 << 0y1100 >> $thread | $teb << @rdx >> @r13 >> -$teb < @rsp >> $ip << @rbx >> @rax >> @rdi)  { test_statement(0x99F); @rax = @r13 >> $teb & 0y1110 & @r13 ^ $proc & @r8 ; } elsif (~@r10 & 0x2 >> 0n5 | @rbx | @rsi & $buffer ^ 0y1011(($proc >> $buffer >> -$teb ^ @rbx | @rbp >> 3 & @rbx & 0n11 ^ (-($buffer)) & @r9 | $thread) { test_statement(0x1F2C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n14 | @rbx | $buffer))@r10) ; } elsif (@r10 >> 22 ^ 0x1 & $ip ^ @r12 | @r10 & 2 | @r9 ^ $proc | -@r8(@r10 >> @rsi & @rax ^ ($ip) ^ 6 ^ @rdi | @rbp & @rbp ^ ~@rax ^ @rbp | $ip ^ $proc | $thread | @r13) { test_statement(0x1D5A);  // /* This is a comment  }
$error$
$end$
4580
 if (@r13 << ~@r11 >> 0xB >> @r10 & $buffer << @r11 & +@rdx | ~0y111 << $ip & ~@r8 >> $buffer | $proc >> @rax & +$proc | @rbp | @r12 >= $teb ^ ~(-+0x1) >> @rsp >> (+@rax) & 0y1100 >> @r12 & $ip & @rsp)  { test_statement(0x1244);  This is a not opened comment */  break; } elsif (@r12 >> @r8 >> 1 ! @r12 >> @r8 >> 1) { test_statement(0x1EC7); val = @r10 & 0y0 ^ @rbp ^ 15 | $buffer | +@rdx ; @rax = $thread ^ @r13 | @rax | -~$ip ; } elsif (@r10 >> @rbx & @r11 & @rsp ^ @rdi | @rdx | @rsi ^ +@rdi @r10 >> @rbx & @r11 & @rsp ^ @rdi | @rdx | @rsi ^ +@rdi) { test_statement(0x129C);  break; }
$error$
$end$
4581
 if (@r12 + @rdx << $teb << @rdx ^ $buffer << @r13 ^ $teb ^ $teb & $teb ^ @r11 | ~@r10 << $buffer & @rsp ^ @rbp ^ -@rbx | 0n1 != @rbp ^ $ip << @r12 ^ @r11 & $ip ^ @r11 ^ @r8 ^ 1 | 0x13 >> @r9 & 0x4 >> @r11 & @rbp & @r8)  { test_statement(0xC63); } elsif (@r12 & (0xC) < @r12 & (0xC)) { test_statement(0x1E83);  This is a not opened comment */ } elsif ($buffer & @r13 ^ 20 ^ @rdx ; -(@r12) & @rsp | @r13 | ~$teb ^ 0x1 | @r10 | @r9) { test_statement(0x2E7); } elsif ((+$buffer) & 0n7 ^ @r9 ^ 20 != 1 & @rbx) { test_statement(0x844);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx > 0n12) ;  if ($ip ; @rbp)  { test_statement(0x213D); } val = $thread ; } elsif (@r8 <= @r10 | 11 | @rbp) { test_statement(0x9AD); } else { test_statement(0x1DD5);  if (@rax | @r8 | @r9((@rbp | -@r9)  { test_statement(0x654); } else { test_statement(0x1822); } }
$error$
$end$
4582
 if (@rbx + (@rax) << $ip << @rdx >> @rbp & @rax >> $buffer & @r13 & 0x13 | $thread << @r12 ^ @rdi >> @r8 & @rax | $teb >> @rsp ^ @r10 & @rsp | @r11 & 14 | $buffer = @r11 + @rdi << @rdx ^ @r9 << @rbx & @r8 >> @rbp & @rsp & $buffer ^ @r12 ^ @r9 ^ $teb ^ 11 | @rbx << @r10 ^ ~@rax >> @rdi)  { test_statement(0x1188); } else { test_statement(0x1A1C); @rax = @rdi ^ $ip | 0xA ^ @r11 | $proc | @r11 ;  break; ; }
$error$
$end$
4583
 if (@r9 + @r12 ^ -@r13 >> (@rdx) == @r9 + @r12 ^ -@r13 >> (@rdx))  { test_statement(0x7AD); } elsif (~$teb << @r11 = @rbx << $buffer & @r9 >> $teb ^ 0n15 >> 0n2 ^ @r8 ^ @r8 | @rsi ^ -@r8 ^ @r13 ^ @rsi) { test_statement(0x16C5);  // /* This is a comment   /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x2 >= ~0xF) ; } elsif ($teb >> $proc & 0x2 & @r12 ! $teb >> $proc & 0x2 & @r12) { test_statement(0x1693); } elsif (@rsp < @r10 & @rax ^ $proc | @r10 ^ @rdx) { test_statement(0x1E8E); @rax = +@r10 | @rax ; }
$error$
$end$
4584
 if (0n10 + @rax << @rax << $proc & 0y10010 << @r8 >> @r12 >> 0xB & @r11 >> $buffer & 0n3 | $thread)@rdx << @r10 << @rbp >> $ip << 0 >> @rsi >> @rax ^ @r10 >> @rsp >> @r13 & @r8 >> $thread)  { test_statement(0x6B1);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 ^ +-0x5 == @rsi) ; val = @rsp ^ @rbx ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9(@rsi) ;  for (@rax = @r10; $buffer <= @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r12 ; } elsif (@rdi << 0x1 >> ~$teb >> $thread & -@rax >> @rbp ^ @rdx & @r10 & @rax ^ 0n15 & 0y1010 | ~$proc >> $teb & @r8 ^ $proc & $thread < @rdi << 0x1 >> ~$teb >> $thread & -@rax >> @rbp ^ @rdx & @r10 & @rax ^ 0n15 & 0y1010 | ~$proc >> $teb & @r8 ^ $proc & $thread) { test_statement(0x192F); }
$error$
$end$
4585
 if (@r11 << ++$proc >> @rsi & ~@r10 >> @rsi & @rdi ^ @r12 << $proc <> $proc >> 0n2 >> 0x10 | $buffer >> $thread >> @r10 & @rsi >> @rdi)  { test_statement(0x22BB); }
$error$
$end$
4586
 if (@rdx + 0n14 << @rax << @r10 >> 0y1101 << $teb >> $thread @rsi + -@rsi << @r11 & @rax << @r10 ^ 0x4 << @rbx >> @rbx | $ip >> 3 | @rbp >> @rsi & +$buffer ^ @rbp & @rdx)  { test_statement(0xB48);  This is a not opened comment */ } else { test_statement(0xF75);  while  (@r9 ^ -$ip != @rax | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4587
 if (@rdi + @r13 << @r8 << @r12 ^ @r9 << $teb & (@r11) >> 0xD ^ @rdi & $proc | $ip >> 0n6 & @rsi >> 0n6($ip + @rdx >> ~@r10 >> @rax >> $thread & @r8 << $buffer >> @rbx)  { test_statement(0x2397); } elsif ((@r12) << @rax >> $proc & $thread & @rsp))$ip >> 0x9 & @rsp & $thread & @rsp) { test_statement(0x1B0C);  This is a not opened comment */  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx))$teb) ;  while  (0y110 >= ~@rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (+@rsp (@r13))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  /* This is a not closed comment } elsif (@rdx & $thread < @rdx & $thread) { test_statement(0x1696);  if ($buffer | @rbp <> ($ip) | @rdx)  { test_statement(0x14C3); } } elsif (@r10 & @r12 ^ @r10 | @rsi | 7 | @r10 >< @rdi | @rsi) { test_statement(0x1B77);  /* This is a not closed comment }
$error$
$end$
4588
 if (0n13 << @rax >> $ip & $proc << @rbx >> @rdx & $teb & @r12 & @rbp ^ 0n15 | @r8 & $teb & 0x1 | $teb >> @r12 & 0x2 ^ @rdx & $thread ^ ~@r12 | @r10 | $ip ^ 4 | @rbp | @r12))@r11 ^ $ip >> $teb >> @rdx & $proc >> 0x1 & $thread | 0n0 << +0x6 & 23 | @r9 & (@r12) ^ @r12 ^ $ip | $proc & @r10 ^ 0x10 ^ @rsp)  { test_statement(0xD3E); ;  for (val = 10; @rax ^ 0y1101(@rbp ^ ~@rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4589
 if (@rsi >> @r12 ^ @r12 << 0x1 >> $buffer >> @r10 & @r13 >> @rsp & 0x10 & -@rsp))@r12 + @rdi >> $proc >> $thread >> 0x7)  { test_statement(0x534); } else { test_statement(0x15D5); }
$error$
$end$
4590
 if (@r8 << @rbp << 0 >> @rdi))@r9 << 0n12 << $proc >> @rsi << @rbx >> 0y1 >> 0y10010 & @r8 >> @rbp >> 0x13 ^ @rdi & @r11 >> @rsp)  { test_statement(0x76E);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 <= @r9 ^ @rsp | @r9) ;  // /* This is a comment   This is a not opened comment */  break;  /* This is a not closed comment } elsif (@r10 << @rsi >> 0y1100 >> $proc & @r11 & @r13 & 0n11 | -@rsi ^ 15 & @rdx | $proc ! $thread << +(@rbp) >> @r8 >> -0x2 | @rdx >> 0y1001 ^ @rsp ^ $thread ^ 21 | @rsp & (@rdx) ^ @r8 ^ $teb) { test_statement(0x740);  while  ($thread ^ @r12 ! @rdi ^ @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif ($teb >> 0n1 ^ @r8 | $ip ^ @r13 == 0n16) { test_statement(0x2537); } elsif (@rbp & -0x7 ^ @r10)-@r10 & @rsp | @r9 | @r10 | @rbx) { test_statement(0x1CA5);  /* This is a not closed comment  // /* This is a comment  } elsif (@r8 ^ $proc | @rsp = @rsp) { test_statement(0x550); } else { test_statement(0x263); }
$error$
$end$
4591
 if ($buffer << @rax << ($ip) & @rdi | @rdi << $ip ^ 0n14 >> +@r13 | @r9 & $teb & $ip ^ @rsp & +@r12 >< @r13 + 0n9 << 0y111 >> @rsi << 0y1011 >> $proc >> @rbp | @rax << (~@rsp) >> @r11 & @r11 >> @r12 & @r10)  { test_statement(0xF81); } else { test_statement(0x23A); }
$error$
$end$
4592
 if (@rax >> @r8 & $buffer << @r8 >> @r9 >> ~@r13 & 0n0 & 11 | @rbp & @r12 ^ @rbx >> $ip != $proc + @rdx << $proc & ~@rsi & @r9 ^ $thread << @rbx ^ @rbp >> @rsp & @rbx & ~@rdi)  { test_statement(0x17CA); } elsif (@rsi << 4 >> $teb >> $proc | -@rax ^ @rsi & +$thread ^ @rsp ^ 0x4 | @r9 ^ @rbx ^ @rsp)@rbx << @r8 | $teb >> $thread ^ @rsp & (0y10011) ^ $proc ^ @r13 | (-@r13) & @r8 ^ @r12 ^ @rbx) { test_statement(0x189D);  /* This is a comment */ }
$error$
$end$
4593
 if (0n0 << -@rsp >> @r8 ^ ~0y110 >> @r10 >> $thread & @r8 ; $ip << @r8 >> $thread | @r12 >> 23 & $teb & @rbp ^ @rsp >> $buffer)  { test_statement(0x195A);  for (val = 10; @r8 ^ 0y100 ^ 0y1100 | @r12 ^ -@rdx > 0y1010 ^ $buffer | @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp << ~@r8 >> 0xF >> @r8 & 0x9 & @rax & +0x12 ^ @r13 ^ 10 & (-@r10) ^ $thread | @rdx >> @r12 ^ $teb & @r9 | +0x3 & $ip ^ @rbx ^ 0y1100 | -$buffer ^ 0x7 >= @rsp << ~@r8 >> 0xF >> @r8 & 0x9 & @rax & +0x12 ^ @r13 ^ 10 & (-@r10) ^ $thread | @rdx >> @r12 ^ $teb & @r9 | +0x3 & $ip ^ @rbx ^ 0y1100 | -$buffer ^ 0x7) { test_statement(0x224B); } elsif (@r11 & 0xB ! @rdx | 0y10001 & @r8 | $buffer) { test_statement(0xA95); } elsif (+(0y1001) & @r8 ^ @rsi ^ @rsp > $proc & @r13 | $thread) { test_statement(0x138); } elsif ($thread($thread) { test_statement(0x1469);  break;  while  (@r10))0n5)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rbp((@rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rdx > $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4594
 if (@rdi >> (@rsi) << (@r9) & @rbx ^ @r8 ^ +(@r10) >> @rdi ^ $buffer ^ (@r12) ^ $buffer | @rbp ^ @rbx >> (@r10) & -@r13 & @rbp | @rdx & $thread & $ip ; @r11 ^ @r8 >> @r13 & $thread | -@r11 << @rdi >> @rbx >> 0x12 & @rsp & @r9 ^ @r12 ^ ~(@rsp) ^ @r11 ^ -@rdx)  { test_statement(0x146B);  break; } elsif (0y111 >> @rdi ^ $ip >> +@rdi & $ip > 0y111 >> @rdi ^ $ip >> +@rdi & $ip) { test_statement(0x1CF0); val = $proc & -$proc ;  if (@r11 | -@r13 >= @r10)  { test_statement(0x10B4); } elsif (17 ; 0n2) { test_statement(0x13ED); } elsif (0y10 = ($proc)) { test_statement(0x21D2); } }
$error$
$end$
4595
 if (@r9 & 14 >> 0n15 >> @r8)@r9 & 14 >> 0n15 >> @r8)  { test_statement(0x709);  while  ($buffer & 0n13 ^ @r8 ^ $buffer ! @rsp & $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r8 >> @r13 & $buffer >> $thread & -@r12 & ~$teb | @r11 & @rsp & 0xB ^ $teb & @r13 ^ $thread ^ (@r13) != @r8 >> @r13 & $buffer >> $thread & -@r12 & ~$teb | @r11 & @rsp & 0xB ^ $teb & @r13 ^ $thread ^ (@r13)) { test_statement(0xC9C);  break; @rax = @r10 | @rdx | 0xB ;  // /* This is a comment  } elsif (@r11 >> 0x12 | 0n9 ^ 0y1111 ^ @r11 | @rbx >= @r11 >> 0x12 | 0n9 ^ 0y1111 ^ @r11 | @rbx) { test_statement(0x196F);  // /* This is a comment  } else { test_statement(0x2066);  if (@rbx))@r8 | @r11)  { test_statement(0x189D); } elsif (@rsi | +11 ! $teb | @rax) { test_statement(0xE53); } elsif (0x7 < $ip) { test_statement(0x2134); } elsif (+$thread((@rsp) { test_statement(0x207B); } elsif ($proc))0x7) { test_statement(0xB6); }  if (@r8 | ~0y100 >= $proc)  { test_statement(0x2337); } elsif (@rsp)@rbx) { test_statement(0x1DEE); } else { test_statement(0x1043); }  // /* This is a comment  ;  // /* This is a comment   // /* This is a comment  }
$error$
$end$
4596
 if ((@rbp) & @r11 >> @rdi & $proc >> $ip & ~@rsp & @rsp(@rsp << $proc >> 0xF >> $buffer >> 0y1010)  { test_statement(0x241D);  This is a not opened comment */  while  ($thread ^ @r11 | @rdx(@r9 | +$ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@rax << +11 >> @rbx >> @r12 ^ @rsp(@rbp >> @r10 & @r9 ^ @rsp >> @rax & @rbx | $thread & @r10) { test_statement(0x1661);  /* This is a comment */ } elsif ($thread & $thread & -(-@r13) | 0x5 & @r11 ^ @r11 ^ @r8 == $thread & $thread & -(-@r13) | 0x5 & @r11 ^ @r11 ^ @r8) { test_statement(0x25A8); } elsif (@r12 & @rsi ^ ~+@rbp ^ @rbp < @r12 & @rsi ^ ~+@rbp ^ @rbp) { test_statement(0xB04); }
$error$
$end$
4597
 if (@rsi + @r13 << @rax << 0x13 >> @r10 <> @rsi << @rsp << @r11 >> @rbx << 0x6 >> -$proc)  { test_statement(0x1DA9); } elsif (@r8 << @rsp & @r13 & 13 & $teb >< 14 & -$ip ^ $ip >> @r11 & @r8 ^ @rbx & @r13 ^ @rax | 4 ^ $proc) { test_statement(0x27A);  // /* This is a comment  ;  for (@rax = @rbp; +0n19(($ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x23EF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 ^ 0n15 = $ip ^ @r11 | @r9 | +@r12) ; }
$error$
$end$
4598
 if (@rbx ^ @rsi | ~@r13 ^ @rbx >> @r13 ^ $teb & @r8 ^ $thread ^ $ip | @rbp >> @rax & @r11 & @rdx ^ @r12 & @rsp | $proc ^ ~0n18 ^ $teb = @rax + @r10 << @rdi << $ip >> @rsp >> 0y1110 | $ip | @r13 & $proc ^ @rdx)  { test_statement(0xAF4); }
$error$
$end$
4599
 if (@rbp >> @rax & @r8 << @r8 >> @rdx & @r11 >> $ip & 0x11 & $ip | @rdx & 0y1001 >> 0xA)0x8 & @rsi | $thread << @rbp & @rbp | @r9 ^ @rdi ^ -@r13 | @rsi & (@rdx))  { test_statement(0x1AF4);  /* This is a comment */  This is a not opened comment */ } elsif (@r8 << @r10 >> @rax >> 0n16 & $ip & $thread | @rsp >> @r9 & @r13 & @r9 ^ @r12 ^ 0n15 ^ @r9 | @rdx & @rdi | $proc)@r12 >> ~15 & 0y100 & -@r13 & @rax ^ @r10 >> @r9 & 0y1110 | $thread & @rdx & @rsi) { test_statement(0xF60);  /* This is a comment */ } elsif (@rdx == (@r11) >> @r9 & $thread ^ @rbp & -$thread ^ @rdx ^ (~-@rbx) | @rsi | @r8 ^ @r12) { test_statement(0xC2E);  if (@r9 <= 0y1110 | @r13)  { test_statement(0x18AD); } } elsif (@rdi & @rbx ^ @r8 | ~$ip ^ 0x12 > 0x12 & 17) { test_statement(0x2195);  // /* This is a comment   if (@rdi @rdi)  { test_statement(0x22B1); } } elsif ($teb ^ @rsp | @rdx ! -@r13) { test_statement(0xBB6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +$buffer <= +$buffer) ; } else { test_statement(0xE08); }
$error$
$end$
4600
 if (@rsp >> @rax & 0y10010 << @rdi >> @r9 >> $thread & @rsp @rsp >> @rax & 0y10010 << @rdi >> @r9 >> $thread & @rsp)  { test_statement(0x1496); } else { test_statement(0x7DC);  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
4601
 if (@r13 + @rbp << @rsp << @rbx >> @r11 ^ $buffer >> (0y1101) > @r10 << ~@rbx << @rbx ^ $teb << (@r11) | @r13 << 0n12 | @r10 & @rbp ^ $teb & $teb)  { test_statement(0x2192);  break; } elsif (@rax >> @r13 & @rdx ! 4 | $teb >> $buffer | @r10 | @rdx ^ +$buffer | @rdi) { test_statement(0xE1); } elsif (@rdi >> $proc & @r11 & @r11 ^ @r11 ^ -@rdi | $buffer & ($proc) | +@rdi ^ 0y1001 | $buffer <= 0x9 >> $thread ^ ~5 ^ ($ip) ^ $ip) { test_statement(0x1142); } elsif ($buffer <= ~$buffer ^ -@rdi) { test_statement(0x842);  /* This is a not closed comment  while  (@r9 >< @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r12((@rbx)  { test_statement(0x22F5); }  /* This is a comment */ }
$error$
$end$
4602
 if (-$teb & 0n0 >> @r11 >> @rbp ^ @rdi ^ +(@rsi) >> @rdx & @r8 & @rdx ! @rax + @r10 << @rsi ^ @r8 << @rbp & @rbx)  { test_statement(0x4CE);  if (@r10 & @r10($teb)  { test_statement(0x658); } elsif (@r9 ^ @r13 = @r9 ^ @r13) { test_statement(0x24E2); } elsif ($proc | 0y1101 > @r13 | 5) { test_statement(0x913); } elsif (@rbp <> @rbx) { test_statement(0xDBC); } } elsif (@rbp << 10 & $proc >> @r13 ^ $proc & $teb = @rdx ^ @rbx ^ @rsi & @r10) { test_statement(0x5A9); } elsif (0y1010 >> @rbp | @r12 & @rdi | @r12 | $ip != 0y1010 >> @rbp | @r12 & @rdi | @r12 | $ip) { test_statement(0xA56); } elsif (@rdx & @r12(($proc & @rdi ^ @r13 ^ 11) { test_statement(0x658); } elsif (@r8 ^ 10 | 0x13 | -$buffer))$ip ^ @rbx) { test_statement(0x325);  if (@rsp(($thread)  { test_statement(0x1E1F); } } else { test_statement(0x6D4); @rax = 0n19 & @rbx ; }
$error$
$end$
4603
 if (12 ^ 0n6 << @r12 | ((@r8)) << @r11 >> 0y1 >> @rsi & @r11 ^ (@r13) >> @rdx & 0n7 & @r11 ^ @r9 & $proc > ~@r8 << @r12 >> $thread >> @rax ^ @rsi << @r9 >> +@r11 & @rax & 0n7 & 0n0 ^ @rdi >> $proc & $ip & +@rbx)  { test_statement(0x1ECD); } elsif (@r10 >> @r9 | @r10 >> $ip ^ ~~0y1010 ^ @rsp ^ $proc | @rdi & @r9 ^ $ip <= @r12 << (@r8) & ~@rsp) { test_statement(0x124C); }
$error$
$end$
4604
 if (@r8 << 0n14 >> -+0n5 << +@r12 & @rdi << $ip | @r9 >> @r9 >> @rdx | @r13 >> 0xC & @r8 ^ @rbx | ~@r8 & 0n0 ^ @r9 | $thread | 0x12 ! @rbx + @rbp >> $thread >> @rbp & @rax >> -$buffer & @rbp & @r10 ^ 0y1011 << -+0n9 >> @r8 & @rsi >> @r13 ^ 0y10 >> @rsi)  { test_statement(0x2162);  for (val = 10; -@r8 ^ @rbp ^ 0y110 | $teb <> @r8 ^ $buffer ^ @rsp | @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($proc << +7 & @rsp >> $buffer ^ @rdx >> $teb | (+@rsi) >> 0n15 & 23 | $teb & @r13 | $proc == -14 << (0n9) >> $ip >> @r12 & @r13 >> $teb & @rdx & +@rbp ^ @rdi ^ @rdi ^ @rbp ^ @r12 | $ip >> @rbx) { test_statement(0xF56); }
$error$
$end$
4605
 if (@r13 + @rsp >> @r9 >> (@rdx) >< @rdx + -@rbx & @r12 | (12) >> @rbp >> @r13 & $buffer & ~+@rdi)  { test_statement(0x5A);  /* This is a not closed comment } elsif (@rbp >> 0y1001 ^ @rax >> $proc & @rbx ^ (@rdi) & ~~@rsp)$thread >> @rax >> $ip ^ $ip >> @rdi | @r12 ^ @r11 | 23 ^ @rbp ^ $ip | 0y1 ^ @r9) { test_statement(0xC40); } elsif (($buffer) & $proc ^ @r13(($buffer) & $proc ^ @r13) { test_statement(0x2314); } elsif ($proc & 0x8 | @r13 | @r13 | @rbx > $proc & 0x8 | @r13 | @r13 | @rbx) { test_statement(0x120); }
$error$
$end$
4606
 if ($ip + -@r11 >> 0n10 >> @r10 == $ip + -@r11 >> 0n10 >> @r10)  { test_statement(0x1BB); } elsif (+$thread >> $ip & -$proc >> $buffer ! @r8 << @r8 | 0xB) { test_statement(0xFC9); } elsif (@rbx ^ $teb & ~@r11 | $proc & $thread | $ip >< @rbx ^ $teb & ~@r11 | $proc & $thread | $ip) { test_statement(0x11B5); } else { test_statement(0x1A4B); }
$error$
$end$
4607
 if (@rsp + 0x1 << @r10 << $teb | @rdi >> 0n15 >> @rbx ^ @r9 | @rsp ^ @r13 ^ @r12 > ~$thread << @rsi << @r9 >> @rbx | @r13 ^ @rdi ^ @r11 & @rsp ^ @r13 ^ @r12 | @rsp & @r9 & @rsi | (@r8) & -@r8 | @rbp | 0n14)  { test_statement(0x23EB); } else { test_statement(0x1B95);  if ($teb = @r10 | @rax)  { test_statement(0x6FE); } }
$error$
$end$
4608
 if (@r9 + 0xE << $thread >> @r13 << 0n14 & @rdi >> 0xB ^ 0y1100 << @r9 >> $proc >> -~@r12 ^ @r13 >> $ip & 6 ^ $teb | 22 & $proc >> @r11 & @rdi & 0 ^ @rsi >> @rdi & @r10 | ~$thread >> @r12 & @r10 ^ @r12 | 0xC > @r9 + 0xE << $thread >> @r13 << 0n14 & @rdi >> 0xB ^ 0y1100 << @r9 >> $proc >> -~@r12 ^ @r13 >> $ip & 6 ^ $teb | 22 & $proc >> @r11 & @rdi & 0 ^ @rsi >> @rdi & @r10 | ~$thread >> @r12 & @r10 ^ @r12 | 0xC)  { test_statement(0x1CAD); } else { test_statement(0x185C);  break; }
$error$
$end$
4609
 if (@rax << @rdx << @r10 >> @r13 >> $buffer | @r11 << ($buffer) >> $teb >> $teb & @r13 >> @r11 & @r8 ; @rax << @rdx << @r10 >> @r13 >> $buffer | @r11 << ($buffer) >> $teb >> $teb & @r13 >> @r11 & @r8)  { test_statement(0xEE3); } elsif (0xA << $teb & $ip & ~-++(@rsp) & @rdi < ~@rsp << 22 >> 0n6 >> @rdi & @r13 >> @r13 & @rdx ^ @rsp ^ @rsi ^ ~@rdx ^ @r9 | 14 >> $ip) { test_statement(0xE3); }
$error$
$end$
4610
 if (~$proc & ($ip) >> @r12 & $teb >> @rsi | @rbx >> @rbp >> $buffer & 0y111 & 0n6 ^ $ip >> @rsi ! ~$proc & ($ip) >> @r12 & $teb >> @rsi | @rbx >> @rbp >> $buffer & 0y111 & 0n6 ^ $ip >> @rsi)  { test_statement(0xBA3);  /* This is a not closed comment ; }
$error$
$end$
4611
 if (0n6 + @rbp >> @rbp @rbx + @rdx << @rsi)  { test_statement(0x1D96); } elsif ((@rsi) << 0n18 ^ $thread >> $ip & $proc ^ @rax ^ @rsp ^ @r10 > $teb & 0x13 >> $ip & @rbx ^ ~@r8 >> @rbp & @r12 & $thread ^ $proc & @r8 | @rdx >> $thread | $ip & @rsi) { test_statement(0x15A0); } elsif (@r9 >> $buffer ^ @rdi & $ip | $ip @r11 >> @r10 ^ 0y1011 & -@rbx) { test_statement(0x2E5); @rax = 13 ^ 0n7 ; @rax = @rbp ;  break; } elsif (@rsp & -@rax | 0xE ^ @rbp | @rbx != @rsp & -@rax | 0xE ^ @rbp | @rbx) { test_statement(0x1E53); } elsif (@rbx == @r11) { test_statement(0x206F); } else { test_statement(0x1A5F);  // /* This is a comment   /* This is a not closed comment }
$error$
$end$
4612
 if (@rax + @rdi << @rsp << $ip & +@r10 << @r12 >> $teb >> @rax ; ($buffer) + @r8 << @r13 << @r8 >> $buffer << @rbp >> 0n16 >> $thread & @r8 << @rsi >> $ip & $ip | (@r10) >> 16 >> $ip & @rsi & $proc & @rsp | @r12)  { test_statement(0xFFE); } elsif (0n12 >> 0x3 | +@rdi >> $thread <> @rdx >> @r13 >> $thread & @r8 ^ 0y1 & 0y11 & @r12 | @rbp >> 0y10001 ^ 5 | ~@r12 & $proc ^ 5 ^ $buffer | 20) { test_statement(0xDD7); } elsif (@rdi ^ @rbp ^ $buffer ^ @r11 >< @rdi ^ @rbp ^ $buffer ^ @r11) { test_statement(0x1C23); ; } else { test_statement(0x8F1); }
$error$
$end$
4613
 if ((@rsi) & 0x11 >> $thread >> $teb ^ @r12 & @rdx >> 0y10 | ~@r13 ^ @rsp >> @r11 ^ @rdi & @rdi | $thread >> @rbx ^ 0n14 & 0x5 ^ @rsp ^ @r11 | $teb | @rsp ^ @r12 > @r10 >> @r9 << @rsi)  { test_statement(0x1050); } else { test_statement(0xC28); }
$error$
$end$
4614
 if (@rdx + 15 >> $thread & @rdi ^ @rbx << @rdi >> 0n15 >> @r10 | @r13 << @rsi >> @rsi >> @rsp & -@rax & +@rsi & 17 ^ @r10 >> @r9 ^ $buffer ^ 0x3 ^ $ip | $teb >> @rdx & 0n5 = $buffer + +@r10 << $buffer << @r11 ^ $proc << @r10 & @r12 & @rax & $buffer | @rbx << $buffer >> $thread ^ ~$ip >> @rdi ^ @rsi)  { test_statement(0x1559); } else { test_statement(0x25AE);  // /* This is a comment   /* This is a comment */  This is a not opened comment */ ; }
$error$
$end$
4615
 if (0xF + @rsp >> @rdi | @rdi << 0y1010(@r10 + @rsp << @r9 << $buffer)  { test_statement(0x1FA6); } elsif ($buffer << -$proc & 0x9 >> 0n5 ; $buffer >> @r9) { test_statement(0x6C4);  /* This is a not closed comment } else { test_statement(0x217F);  break; }
$error$
$end$
4616
 if (@r13 + @rdx >> @r8 << $proc >> @r13 >> $buffer & 6 | @r13 << ++(@rax) >> $ip >> @r9 ^ @rdx >> @rbx & $thread | $teb & 0n13 ^ $thread ^ ~@rbp ^ @rax | 0x13 ^ 6 ^ @r12 <= @r13 + @rdx >> @r8 << $proc >> @r13 >> $buffer & 6 | @r13 << ++(@rax) >> $ip >> @r9 ^ @rdx >> @rbx & $thread | $teb & 0n13 ^ $thread ^ ~@rbp ^ @rax | 0x13 ^ 6 ^ @r12)  { test_statement(0x243); } elsif ($ip << @rsp ^ $ip & @r13 & 0x0 | @r11 >> 4 & @rsi & $ip ^ @rsp((0x6 << @r10 >> 0x10 & @rdx >> @rdx) { test_statement(0x14C1); } elsif ($ip >> 17 & 0y1110 & @rsp ^ ~$teb & +0y1100 ^ 0n19 ^ @r8(($ip & 0xE | @r11 & @rax ^ @rdi | @rsp | (+@r11)) { test_statement(0x2285);  /* This is a comment */  for (val = 10; @r9 = @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2D1); }
$error$
$end$
4617
 if (@r12 + 16 >> $proc << (@rsp) >> 3 >> $ip & @r9 << ~@rbp ^ 0x11 << $ip >> @rdi >> $ip & ~@rsp & $thread ^ 0y10000 >> @rsp @r12 + 16 >> $proc << (@rsp) >> 3 >> $ip & @r9 << ~@rbp ^ 0x11 << $ip >> @rdi >> $ip & ~@rsp & $thread ^ 0y10000 >> @rsp)  { test_statement(0x796);  if (@r12 & @rbp == @r12 & @rbp)  { test_statement(0x163C); } else { test_statement(0x2693); } } else { test_statement(0x25EA); }
$error$
$end$
4618
 if ($thread + @r10 & @rbx ^ @r11 << @r9 >> (-16) ^ $teb((@r11 >> @r10 << $proc | @rdx >> @r12 >> @r8 ^ $ip >> 0y10010 ^ @r10 | 12 | $buffer ^ @r9 | @r12 ^ @rbx)  { test_statement(0x1455);  /* This is a comment */  /* This is a not closed comment  /* This is a comment */  // /* This is a comment  } else { test_statement(0x1F82);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ @rdi | $thread | $proc < @rax | @rsi | @r13) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@r9) | @rdx(((@r9) | @rdx) ; }
$error$
$end$
4619
 if (@rdx + -+$buffer << 0y1110 << @rax & @r10 & @r12 >> @r11 & @r8 & $teb ^ @r13 << (@r10) & @rax >> @r10 ^ @r13 >> @r11 ^ -@r13 ^ @r9 ^ @r8 | $buffer << @rbx >> 0y10010 >> 0xE | @rdx | $proc & @rdx | $thread ^ @rbx == @rdx + -+$buffer << 0y1110 << @rax & @r10 & @r12 >> @r11 & @r8 & $teb ^ @r13 << (@r10) & @rax >> @r10 ^ @r13 >> @r11 ^ -@r13 ^ @r9 ^ @r8 | $buffer << @rbx >> 0y10010 >> 0xE | @rdx | $proc & @rdx | $thread ^ @rbx)  { test_statement(0x58C); } elsif (@rax >> @rsp & @rsp & $proc & $thread ^ 0n3 & @rdi ^ @r12 & $teb @rax >> @rsp & @rsp & $proc & $thread ^ 0n3 & @rdi ^ @r12 & $teb) { test_statement(0x1DC5); } elsif (@r13 & @rbx & @r12 | @rbx @r13 & @rbx & @r12 | @rbx) { test_statement(0x1613); } else { test_statement(0x2506);  break; }
$error$
$end$
4620
 if (@rdx + @r11 << 0y1110 >> @rdi >> (-$ip) | 0n3 << @r12 >> @rsi ^ 2 >> @r8 @r10 << ($buffer) & $ip & 0n5 >> 0x1 & ~0y100 & +0y11 | @rdx << @rdi & @r10 & @rbx | -$proc ^ 0 | @rbx ^ @rax | $ip ^ ~@r9)  { test_statement(0x472); }
$error$
$end$
4621
 if (@rsp >> @r13 >> 0n10 ^ @rbx << @r13 >> @r12 <= ~@r8 + @rax | @r10 << @rbp)  { test_statement(0x210F); } elsif ($ip >> ~@rdx >> @r9 & $teb >> @rsp ^ $buffer >> @rsi))$proc << $buffer >> -$buffer >> ((@r9)) | @rbp >> @r11 & $thread ^ @rax & @rbx ^ 0n5) { test_statement(0xFF8); }
$error$
$end$
4622
 if ($proc >< @r8 + $buffer << $ip & @rsp << @rsi & $thread >> @r11)  { test_statement(0x1261); }
$error$
$end$
4623
 if (5 + $thread << 0xF << @rbp & @rax < 5 + $thread << 0xF << @rbp & @rax)  { test_statement(0x1443);  /* This is a not closed comment } elsif (@r10 >> @r8 >> @r10 ^ @rax ^ 3 ^ +@rsi ^ @r13 | @r12 & @rbp(($teb) >> @r11) { test_statement(0x19D6); } else { test_statement(0x491); }
$error$
$end$
4624
 if ($teb + 7 << @r8 >> @r10 >> $proc >> $buffer & -@rdi << +$buffer ^ @rdi << @rdx >> @rax & @rbp >> @r13 & @r12))$teb + 7 << @r8 >> @r10 >> $proc >> $buffer & -@rdi << +$buffer ^ @rdi << @rdx >> @rax & @rbp >> @r13 & @r12)  { test_statement(0x9DE);  break;  while  ((@r9) | @rax))@rbx | $ip | -@rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (($proc) << @rbx >> @rbx >> @rax ^ @rsp & 0y1011 ^ (@r13) & @rdx ^ @rbx ^ +@r9)@rbx ^ $proc >> $thread ^ @rdx ^ @rax | +@r8 >> @r10 ^ 0n3 & 0x11 | @r11 & 0n14) { test_statement(0xF0B); } elsif (@rsi >> 14 & @rbp ^ $teb ^ 0xB((@rsi >> 14 & @rbp ^ $teb ^ 0xB) { test_statement(0x2D0); } elsif (@rax ^ $proc == @r13 | 12 ^ 0n0) { test_statement(0x11A6); } elsif ($proc ^ $proc | $teb | $teb @rdi ^ @r12 | $buffer | @rbp) { test_statement(0xD69); }
$error$
$end$
4625
 if (@r8 << @r12 | (@rsi) << 0n2 ^ ~@rbx >> (0xD) ^ @rax > 0n1 + @rbx << @r10 << @rdi >> $thread << 0y10010 >> @rsp ^ @rbx << 0x1 & 0y1000 >> -@rbp ^ @r8 & @r9 ^ @rsi | $teb << $thread)  { test_statement(0x249C); ; val = @r10 | 0n13 ^ $ip ; } else { test_statement(0x42A);  This is a not opened comment */  for (@rax = @r11 | @r12; $buffer <> @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4626
 if (@rdx + +@r9 << @r13 & @rdi >> @r12 >> $ip(@rdx + +@r9 << @r13 & @rdi >> @r12 >> $ip)  { test_statement(0x446);  break; } elsif (~0n13 << -$thread | @r8 ^ ~0n18 & $proc | -~(@rsi) & @rbx ^ @r11 ^ 0n10 == @r13 >> $ip >> $proc & +0n18 >> @r12) { test_statement(0x13F6);  while  (@r12 ^ ++$thread | 0n2 | @rax)@rdi | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r10 <= @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp >> @rax & @rdi & +@r11 ^ @r11 ^ @r13 >< @rsp >> @rax & @rdi & +@r11 ^ @r11 ^ @r13) { test_statement(0x83);  // /* This is a comment   // /* This is a comment  } else { test_statement(0x5C4);  break; }
$error$
$end$
4627
 if (@rdx + @r12 << $proc >> @rdi << @r10 | @rsi >> @rsp & @r10 >> $ip & $proc & 0y10011 ^ @r8 & (@rdx) & @rdx ^ $teb ^ ~0y1001 | +@r8 ^ $proc <= $thread + $buffer << @rsi << 23 >> (@rsp) << ~@r11 >> ~(@rbp) >> @r12 | @rsi << 0y1 & @rdi | $ip >> +7 & $buffer)  { test_statement(0xEFB); } elsif (@r12 << -$thread >> @r9 ^ @rbx ^ @rax ^ $thread <> @r12 << -$thread >> @r9 ^ @rbx ^ @rax ^ $thread) { test_statement(0x8FC); ; }
$error$
$end$
4628
 if (@r10 + @rdi >> ~$teb >> 0y10001 ^ @rdx ^ @rbx >> @rsi & @rax & 0x1 | @r10 ^ @r9 >> +@rsi != -0n4 + ~@rbp << (@rax) << @rdx >> $teb << @rsi & 0x7 << @rbx & (@rbx) >> -+$ip)  { test_statement(0x5DC);  /* This is a not closed comment  /* This is a comment */ } elsif ($proc >> @r13 | 0y1011 >> 0x10 ^ @rdx & (@r11) >= $proc >> @r13 | 0y1011 >> 0x10 ^ @rdx & (@r11)) { test_statement(0xF0B); } elsif (@r12 >> @rbp & -0n19 & @r11 ^ @r10 @r12 >> @rbp & -0n19 & @r11 ^ @r10) { test_statement(0x214C);  This is a not opened comment */ }
$error$
$end$
4629
 if ((@rsp) + @r11 >> @r9 << @rdi >> $proc >> @r13 ^ @r13 << 0n2 & $ip | $proc >> +@r12 & ~0y101 <= ($teb) + 16 << @r9 ^ ~@rdi << ~-0x0 & @rdx >> 17 & $teb & 17 ^ @r10 | @rbx << @r13 & @rdx >> @r12 & @rbx ^ -@rsp >> ~$buffer ^ @rbx & @rsp)  { test_statement(0x77E); } else { test_statement(0x12C3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi ^ @rdx))$thread | $teb | +-$thread) ;  for (val = 10; @rdi != @rsi | @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4630
 if ($thread << ($buffer) << @rax >> $buffer >> ~~@r10 & (@rdx) >> @rax >> $teb & @rdi ^ $ip >> @rsp >> $ip & @rdx >> @r9 & 22 & @rbp | ~$ip << ~+@rsi >> 0xC >> 15)@rsp + @rdx >> @r11 ^ @rdi << @r10 & ~@rdx ^ 0 & @r10 & ~@r13 | +@rbx << @rdx & @r9)  { test_statement(0x157C); } elsif (@r13))@r13) { test_statement(0x1A0E);  /* This is a not closed comment  for (@rax = @r12; +@rdx | ~$ip ; $proc | $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; (@rax) > (@rax);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   /* This is a comment */  // /* This is a comment  } else { test_statement(0x1E19);  // /* This is a comment  }
$error$
$end$
4631
 if ((@rbp) ^ (@r9) >> $proc & (@rbp) >> @r13 & $ip & 0y110 | @r8 << 0y111 >> @rbp >> @r9 & 0n14 >> $teb | 0n12 & $buffer ^ 0n7 & @r13 | @rsp | (~$thread) ^ 0n12 != (@rbp) ^ (@r9) >> $proc & (@rbp) >> @r13 & $ip & 0y110 | @r8 << 0y111 >> @rbp >> @r9 & 0n14 >> $teb | 0n12 & $buffer ^ 0n7 & @r13 | @rsp | (~$thread) ^ 0n12)  { test_statement(0x205B);  for (val = 10; 0y101 & $ip > 0y101 & $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  /* This is a not closed comment } elsif (0x4 << @rsi ^ 0y11 ^ @r8 & $thread ^ @rsi > @r11 | @r10 >> @rbx & 0y11 & @rsp ^ @rdx & @r13) { test_statement(0xD86); } else { test_statement(0x176A); }
$error$
$end$
4632
 if (@r13 >> @rbx ^ @rdi >> ~0y10001 & @r10 >> -@r13 & ~-$ip ^ @r12 >> $teb ^ $ip & @r11 ^ @rax ^ (@r13) | 21 << $proc >> +@rbp >> @rax & $thread ^ @rbx & @rax & @r11))@rbx >> 0x2)  { test_statement(0x191D); } elsif ($teb << @rsp & @rdx >> @rsp & 0x11 & @rsp | $proc >> @r12 ^ @r12 ^ 0x10 ^ $buffer | $thread & @r11 | $thread ^ @rdi | (@rdx) | @rdi ; @rbx >> -@r9 & @r9 | @rbp >> $teb & @rdx ^ $thread) { test_statement(0x1EC5); } else { test_statement(0x1D6); }
$error$
$end$
4633
 if (@r11 << 0x5 << @rsi & $thread << @rsp <> @r11 << 0x5 << @rsi & $thread << @rsp)  { test_statement(0x25DA); ;  for (val = 10; @rbp ^ @r8 >< @rbp ^ @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x0 << @r11 ^ @r11 & @r11 & 0x9 | $thread <= 0x0 << @r11 ^ @r11 & @r11 & 0x9 | $thread) { test_statement(0x1719);  if (@rbx ^ 17 | @r10))@rdi ^ @r10)  { test_statement(0x17BD); }  break; } else { test_statement(0x1AB4); }
$error$
$end$
4634
 if ($ip + $buffer >> 0y101 ^ ~@rbx & @rsp & @r9 ^ $proc >> @rdx & $thread & $ip ^ @rax & @rbp >< $proc << $ip & @rsi & @r12)  { test_statement(0x133); } elsif (@r11 | @rax >> ~@rbp | 0x8($teb << ~$thread >> $buffer >> @rsp & $teb >> @r11 & @rdx) { test_statement(0x2393); ; val = $teb ^ $buffer ; }
$error$
$end$
4635
 if (@rbx + @rsi << @r13 << @r9 & $thread << 0xB >> @rbx >> $thread ^ @r13 >> $teb ^ 0x4 ^ @rsi & @r9 | @rsp << @rdx >> @rsi >> @rdi & @rdi & @rax & @rdi ^ -@rsp & 0n6 != @rsi >> +@r9 << $thread >> $buffer >> @rdx ^ -0n13 >> $teb >> $teb & @r8 & @rax & @r9 | $buffer >> $proc >> (@rax) & 5 >> $proc & 0x7 ^ @r10 ^ @rbp)  { test_statement(0x18FC);  /* This is a comment */  while  (-@r10 | $proc | $buffer -@r10 | $proc | $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($proc @r10)  { test_statement(0x3CD); } elsif (@rbp)@rbp) { test_statement(0x188); } elsif (@rsi < 5) { test_statement(0x1AEA); } elsif (0n9 > 0y1101) { test_statement(0x2704); } else { test_statement(0x1733); } } else { test_statement(0x8EB); }
$error$
$end$
4636
 if (@r11 ! $thread << ~$buffer << @r12 >> $ip << $thread >> 0xB >> ~$teb & 2 & $thread ^ @r12 << 0n16 >> $buffer >> 13)  { test_statement(0x826);  /* This is a not closed comment } else { test_statement(0x94C); }
$error$
$end$
4637
 if (0y1001 + 0xB & $buffer << @r9 & 0x3 +@rbx >> @rdx << @rdi >> @rsp | @rax & -0n1 >> @r9 | 0x8 ^ $buffer & @rax)  { test_statement(0x22B2);  /* This is a comment */ } elsif ($buffer ^ ~$thread >> (@r9) & @rbp ^ @rbp | 0n0 >> $ip ! @r10 << 5 >> $ip >> @rdx | @r12 >> $ip) { test_statement(0xFC1);  // /* This is a comment  } else { test_statement(0x2311);  while  (+$teb ^ 0y111 | ~(0y111)((+$teb ^ 0y111 | ~(0y111))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4638
 if (@r11 ^ $teb << @rsi & @r11 >> @rsp & (@rbx) & @rdi ^ 0y1110 & $proc ^ @rbx <> @rax << $ip << $ip ^ @rsi >> $teb & @rdi >> @rbp & (-@r9) & ~@rdi ^ $ip & @r9 & @r11 | ~-@r13 << $buffer >> -@r13)  { test_statement(0x1C9D); } elsif ($proc & 0y101 ^ $buffer >> +@r9 ^ (@r11) > $thread & @r13 >> @rbp ^ +@rsi ^ @r8 ^ $proc | @rdi >> @rbx & @r11 & $teb ^ 0y1001) { test_statement(0x1CBF); } else { test_statement(0x2169);  This is a not opened comment */  while  (@rdx >= 1 | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4639
 if ($thread + @rbx << @rdx >> 0y101 >> @rax >> $buffer & @r9 << @rsi & $thread & +$buffer & $ip ^ @r13 >> @r11 >> $thread ^ @rsp >> @rbx ^ +@r8 & +11 ^ $teb ; $thread + @rax >> 0n5 << 0y110 >> @rdi & 0x12 | 0n16 << @rdx | $thread ^ @rbp)  { test_statement(0x2540);  /* This is a not closed comment } else { test_statement(0x5B4);  for (; ~@r12 | @r9 | @r8 > ~@r12 | @r9 | @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
4640
 if (0 << $teb & 0y100 << 17 & $teb ^ $teb >> @rbx & @rbx >> $proc < 0 << $teb & 0y100 << 17 & $teb ^ $teb >> @rbx & @rbx >> $proc)  { test_statement(0x4B8);  break; } elsif (0x5 << @rdx >> 0y101 >> @rsi(@r8 >> $teb >> @rsi & 20 & 0n1) { test_statement(0x13AB); } elsif (@r8 >> 11 & ~$buffer & 0n17 ^ 0x9 | $thread & 0n0 ^ 13 ^ $thread >= @rdi >> $thread & @rbp & $buffer) { test_statement(0x123); }
$error$
$end$
4641
 if (-$thread ^ @r10 << @rbx >> $buffer >> $proc & @rsp & @r8 & @rbp | $ip << $teb >> @rsp & $ip >> @r10 | 0x10 >> @r8 ^ @r8 & @rax ^ (0y1000) ^ $buffer ; @rsi & @rdi >> -$proc)  { test_statement(0x9FD); } elsif ($proc << ((@r9)) >> 0xA ^ 0x12 & @rsi >< $proc << ((@r9)) >> 0xA ^ 0x12 & @rsi) { test_statement(0xD10); } elsif (@rbx >> @r10 & $proc & $thread >= @r9 & ~-@r11 | @r12) { test_statement(0xF91);  for (val = 10; @rbp | 0y10 == $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4642
 if ($thread + @rbp << 0n18 << @r8 >> @r12 << $thread ^ @rax << @rax >> @r8 | @rdi & @r13 & $proc & 0n13 | @r13 & @r13 ^ @rdx & @r12 ! 0n4 << 0y1000 << 0n0 >> @rbx ^ 0y111 << @r10 >> @r8 & @rdx)  { test_statement(0xF0C);  This is a not opened comment */  /* This is a not closed comment ; } else { test_statement(0x3EB);  /* This is a not closed comment @rax = ~$teb ; }
$error$
$end$
4643
 if (@rbx + @r10 << @rsp != $proc + $thread << $buffer ^ 23 << @r13 >> @rbx >> $buffer & @r10 & @r9 | @rdx << $ip >> $proc >> $thread)  { test_statement(0x86C);  while  (@rdi & 0n19 ^ @r9 ; @rdi & 0n19 ^ @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (~@rdx ^ (0y10011) != @r13 | 0xE | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4644
 if (-@r8 + @rsp << +@rdx << @r12 >> -+@rbx & @rdx >> @r12 >> @rsi & $ip >> @rdx ^ 0n13 << $buffer & @rsp & ~@r9 & $proc))-@r8 + @rsp << +@rdx << @r12 >> -+@rbx & @rdx >> @r12 >> @rsi & $ip >> @rdx ^ 0n13 << $buffer & @rsp & ~@r9 & $proc)  { test_statement(0x1686); }
$error$
$end$
4645
 if (@r10 + @rbp << @rsi & @r13 << $ip | @rdi >> @rdx(+@r12 + @rbx >> @rsp >> @r13 >> @rdi & 0n10 >> @rbp)  { test_statement(0x1C62);  /* This is a not closed comment  for (val = 10; (@rbx) == (@rbx);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 << @rsp >> 0x11 & $thread >> 1 >< @r9) { test_statement(0x506);  for (val = 10; @rsi | @rbp | @r9 @rsi | @rbp | @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp >> (@rdi) & @r13 ^ $thread ^ @r8 | $thread = $teb & +$teb) { test_statement(0x986); } elsif (0x4 ^ @r9 | @r11 != ~@r11 ^ @rbp | ~@r9 ^ @r10 | @rsp) { test_statement(0x7DF); }
$error$
$end$
4646
 if (~$buffer & $buffer >< @rsi + @rsp << @rdx << @r12 | @rsp >> @r8 >> -17 & @r13 >> 0n5 & 0 | $ip >> @r10 ^ @rsp & 0n13 | @rbp & @r9 ^ 0n15 | @r8)  { test_statement(0x1E);  /* This is a comment */ }
$error$
$end$
4647
 if (0x10 >> $ip << ~14 >> $thread | @r10 ^ @r9 = 0n7 & 6 << -20 >> $buffer >> $thread | (-0n9) >> @r12 ^ @rbx & @r8 ^ -@rdi | @rsi & @rbp)  { test_statement(0x1083); } elsif ($teb ^ @rdx >> $ip ^ @rsp & @r9 ^ @r11 ^ $proc | 0x8 >> @rax & @rsp ^ @rdi & @r8 | @rax | @r12 < $teb ^ @rdx >> $ip ^ @rsp & @r9 ^ @r11 ^ $proc | 0x8 >> @rax & @rsp ^ @rdi & @r8 | @rax | @r12) { test_statement(0x2309); } else { test_statement(0x6B0); }
$error$
$end$
4648
 if (@rdx + $proc << 0n3 << @rsp & @r13 << 0x4 & @rdx & @r11 & @rbp ^ 0xF << @rbx & @rsi >> $teb | @r9 << @r10 >> @rsp >> 5 | @r10 >> $proc ^ $proc <> $teb + @r9 >> 12 | @r9 << $ip | @r13 & 0n8 | @rsp)  { test_statement(0x1ECF); } elsif (-$thread | @rdx >> @rsi | $proc | @r10 ^ @rsp))-$thread | @rdx >> @rsi | $proc | @r10 ^ @rsp) { test_statement(0xDA1); } elsif (22 ^ @rdi ^ +$proc)~$teb >> ~@rdx) { test_statement(0x2011);  This is a not opened comment */ } else { test_statement(0x1473);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi ^ @rdx = @rsi ^ @rdx) ;  /* This is a comment */  if (@rax ; @r9)  { test_statement(0x1C3D); } else { test_statement(0x17D2); }  if (0y1011 ; @r13)  { test_statement(0x245D); }  while  (@rbp(@rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4649
 if (0x0 << 0y0 << @rax >> 0y1110 << 0xA >> @rax & 0y1011 & @rbx & -@rsp & +~-@r11 >= @r13 >> @rdi << @rsp >> @rsi & ($thread) & 0x7 >> $teb & 0y110)  { test_statement(0x92A);  This is a not opened comment */ } elsif (@rdx & $ip & (+~~@rdi) & @r13 ! @r12 & @rbp & $buffer ^ @rbx | $ip) { test_statement(0x1F8B);  // /* This is a comment  } else { test_statement(0x1C38); }
$error$
$end$
4650
 if (0n2 + $teb << @r11 << 7 >> ~$thread >> @r10 & @rdx << $ip >> @r8 & -@r8 | $buffer & @rdx | @rdi >> $buffer & @r8 & $thread ^ @r13 ^ @rdi ^ @r12 | @r13 & 7 ^ $thread | 20 0n2 + $teb << @r11 << 7 >> ~$thread >> @r10 & @rdx << $ip >> @r8 & -@r8 | $buffer & @rdx | @rdi >> $buffer & @r8 & $thread ^ @r13 ^ @rdi ^ @r12 | @r13 & 7 ^ $thread | 20)  { test_statement(0x1740); } elsif ($teb << @rsi >> @rsp >> @rbp))$teb << @rsi >> @rsp >> @rbp) { test_statement(0x6E6); } elsif (@rbx >> -$thread & 0y10010 & @rbx | (@r10) ^ @r12 ^ $ip >= -@rbx >> @r12 ^ $teb ^ $ip | 0n5 & @r13 | $ip | @r13) { test_statement(0x1CE3); }
$error$
$end$
4651
 if (@r12 << $proc >> @r11 << @r9 >> @rax >> @rax <> @r12 << $proc >> @r11 << @r9 >> @rax >> @rax)  { test_statement(0x26FC); ;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb $teb) ; } else { test_statement(0x796);  /* This is a not closed comment }
$error$
$end$
4652
 if (@r9 + @r9 << @rdx << 0y111 >> @rdx << $ip >> @rsp >> @rsi ^ $ip << @r13 & $thread >> @r11 & 0xA | @rsp & @rdi >> @rdx <= @r9 + @r9 << @rdx << 0y111 >> @rdx << $ip >> @rsp >> @rsi ^ $ip << @r13 & $thread >> @r11 & 0xA | @rsp & @rdi >> @rdx)  { test_statement(0x219C);  for (@rax = @rsp & @r11; @r13 & -0y11 ^ 0y1010 ^ $thread == 0xE & +@r10 ^ ~~+0y0 ^ (@r9) | $thread ^ @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4653
 if (@r13 << $teb >> @rsi << $buffer(@r13 << $teb >> @rsi << $buffer)  { test_statement(0xE27); } elsif ($ip >> @r11 & @rbp & 22 ^ @r13 & @r12 & 0y1010 ^ 3 & 0x0 ^ @r12 ^ @r12 | 11 >> @rbx & $buffer | @r13 == 0y1010 >> (@rax) >> @rdx & @rdx ^ @rax >> @rbx | $teb >> -@rbp) { test_statement(0x131A); } elsif (@r9 >> @r10 & $proc & $proc ^ +22 | $thread | @r12 0n17 >> @rdi ^ -@rax ^ 0y11 | +@r10 ^ @r9 ^ (13) | ~$thread ^ $buffer | ($buffer)) { test_statement(0x23FD); } elsif ($thread ^ @r11 = ~@rsp ^ @rsi ^ $teb | @rbp ^ 12) { test_statement(0x2DE);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread((@r10) ; } elsif (@rdi == @rsp | @rdi) { test_statement(0x1523); } else { test_statement(0x312);  for (; @rbp | @rdi = @r9 ^ (+$proc);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4654
 if (@r11 + $proc >> $teb << @rbx >> 0y101 & @rax ^ $buffer >> @r11 & +0 ^ @rbp ^ @rsp ^ @rax ^ @rbx ; @r11 + $proc >> $teb << @rbx >> 0y101 & @rax ^ $buffer >> @r11 & +0 ^ @rbp ^ @rsp ^ @rax ^ @rbx)  { test_statement(0x163B);  /* This is a comment */  break; } else { test_statement(0x22C8); }
$error$
$end$
4655
 if (@rsp + @rbx << @r8 >> 0x5 << @rdi >> 16 >> 0x10 & -~@r8 >> @r11 >> @r12 ^ 0xC << @rdx & @rbp >> @r13 & @rbx ^ ~@r9 & @rdi & +@rsp <= @rsp >> @rsp << @rdi ^ $ip << @r8 & @r8 & @rdi & @r12 ^ 0y110 >> @r11 & @r9 & @rsi)  { test_statement(0x2385); }
$error$
$end$
4656
 if (0xE + @r13 << 0xF << $teb >> ~@rbp << $thread ^ @rbp << 0n6 & +((@r9)) & @r11 & @rax(0xE + @r13 << 0xF << $teb >> ~@rbp << $thread ^ @rbp << 0n6 & +((@r9)) & @r11 & @rax)  { test_statement(0x94E);  /* This is a not closed comment  /* This is a comment */ @rax = $proc ^ @rbx ;  // /* This is a comment  } elsif (@rdx << $ip >> @r12 >> +@rsi ^ +@rbp ^ @rbp | 0x11 >> 0n6 ^ (0x5) & @rdx ^ (@rbx) ^ @rsp | @r11 & 1((@rdx << $ip >> @r12 >> +@rsi ^ +@rbp ^ @rbp | 0x11 >> 0n6 ^ (0x5) & @rdx ^ (@rbx) ^ @rsp | @r11 & 1) { test_statement(0x1225); } elsif ($teb >> @r13 ^ @r8 & @r13 ^ -$teb ^ $teb < $teb >> @r13 ^ @r8 & @r13 ^ -$teb ^ $teb) { test_statement(0x1C2); } elsif (@r8 ^ $proc > @r8 ^ $proc) { test_statement(0x2E5); }
$error$
$end$
4657
 if (~0x3 >> @rax << @rsp >> @rbp ^ @r12 | ~$buffer << @r8 >> ~$proc & @rdx >> 0x12 & @rbp ^ ~$thread >> @rdi & $thread & 0xA ^ $teb | @r12 >> @rsi | $teb & @rdx | ~@r8 ^ $thread | @r11 | $ip == ~0x3 >> @rax << @rsp >> @rbp ^ @r12 | ~$buffer << @r8 >> ~$proc & @rdx >> 0x12 & @rbp ^ ~$thread >> @rdi & $thread & 0xA ^ $teb | @r12 >> @rsi | $teb & @rdx | ~@r8 ^ $thread | @r11 | $ip)  { test_statement(0x1B5B); } else { test_statement(0xD6A); }
$error$
$end$
4658
 if (@rsp + 22 << @rsp & +@r8 << @r8 ^ @rsi << @rsi & 0n16 & @rbx >= @rsp + 22 << @rsp & +@r8 << @r8 ^ @rsi << @rsi & 0n16 & @rbx)  { test_statement(0x42F);  while  (@rbp & @r10 <= $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } else { test_statement(0x640); }
$error$
$end$
4659
 if ($ip + $teb << @r13 << @rsi >> @r13 & 0y1100 << @rsp & 0n1 & $thread <= $ip + $teb << @r13 << @rsi >> @r13 & 0y1100 << @rsp & 0n1 & $thread)  { test_statement(0x1667);  This is a not opened comment */ } elsif (@rdx ^ +@rsp ^ @rbp ^ @rsp ^ $ip < @r12 >> @rbp ^ +$proc >> @r12 ^ @rdx | @r13 ^ @r11 ^ @rsi | @r11 & @rdx ^ $thread) { test_statement(0x4F5); ; }
$error$
$end$
4660
 if (~@r9 >> @r9 << $thread & --$proc >> 0n14 >> @r13 & +@rdx >> @rax < ~@r9 >> @r9 << $thread & --$proc >> 0n14 >> @r13 & +@rdx >> @rax)  { test_statement(0x16A9); } elsif (@r11 << $buffer >> $ip >> @rdx & -@r12 >> @r10 ^ @rsp >> @r11 & $proc != 0n10 << 3 & @r11 ^ $thread) { test_statement(0x2596); } elsif (@rsp((@rsp) { test_statement(0x1143);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y110 | @r8 < $thread | $teb) ;  if (@r9 <= @rbp)  { test_statement(0x332); } else { test_statement(0x144D); }  break; } elsif (@rsi & 10 ^ +@r8 ^ @r9 >< @rax & @r13 ^ +$thread ^ @r8) { test_statement(0x858); } elsif (@rbx ^ +@rsi((@rbx ^ +@rsi) { test_statement(0xFED);  /* This is a comment */  /* This is a not closed comment }
$error$
$end$
4661
 if (@rdx & @r10 | @rsp << @r13 >> +~@r10 >> @rdx & ~@r13 >> $buffer & @rdi & $proc ^ 0xE >> @r9 >< @rsi ^ $proc >> @r8 | @r13 << $thread >> $proc >> @rsp & @rbp >> ~$ip & @rbp & @r13 ^ @rax >> @r13 | 0x11 >> @r11 & @rsp ^ @rsp & @rbp)  { test_statement(0xD64);  if (0n13 ^ @rax))0y1 & @rsp ^ @r12 ^ @rdx | 0y110)  { test_statement(0x11FF); } else { test_statement(0xE4A); } } elsif (~$proc & @rdi & @rbp & 0n19 ^ 0y101 | @rsi ^ 21 ^ $buffer ^ @rdx | $thread & 0y1001 ^ @rbp | @rsp ^ @rsp <= @r10 & 0y1011 >> @r11) { test_statement(0x2614); val = @r10 & @r9 ; } elsif (0n0 >> @rax | @rbp ^ ~@r8 | (@r9) ^ 0y1000 != 0n0 >> @rax | @rbp ^ ~@r8 | (@r9) ^ 0y1000) { test_statement(0x26FB); } elsif (+0n4 & $ip | $teb | 16 | @rdi @r11 ^ @r10) { test_statement(0x1D4C); } elsif (@r11 | @rdx | $thread != @rdx | @r12 | @r8) { test_statement(0x14); } elsif (15 | @r9 == @r9) { test_statement(0x10D5); } elsif (@r12(@rdx) { test_statement(0xC50);  /* This is a comment */  if (~$buffer((0n0)  { test_statement(0x12E6); } } elsif (@rdx $buffer) { test_statement(0x1CDD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip ! $ip) ; }
$error$
$end$
4662
 if (@rdi >> 0x12 >> @rdx >> $thread & 0y1000 ^ $proc >> @rbx >> ~@rsp & @rdi >> @rdi ^ @r8 | $ip & 0y1010 ^ -@rax & 0y100 & @rdi ^ 0xC | @r8 & +@rax & @rdx ^ $ip & $thread ^ @rdx ^ ~$thread ; ~+@r8 << 20 << @rax >> $teb << @rdx ^ 12 << $thread >> @r12 >> 0n10 ^ $proc & -(@r8) ^ @rbp)  { test_statement(0x13B8); } elsif (0xE & @rdi >> $proc & $ip & @rdi ^ @r10 | -@rbx ^ $thread & @r8 ^ 0n14 ^ @r13 | 0y1110 & ~@rdx ^ @rsp ^ @r9 | 0y1001 0xE & @rdi >> $proc & $ip & @rdi ^ @r10 | -@rbx ^ $thread & @r8 ^ 0n14 ^ @r13 | 0y1110 & ~@rdx ^ @rsp ^ @r9 | 0y1001) { test_statement(0x3BA); }
$error$
$end$
4663
 if ($teb + @r8 | 0y11 >> @r13 == -$teb + $ip << @r9 << 5 >> @rdx << 0n2 ^ $teb << @rsi | 0y101 >> +@r9 & 0y10001 | 0x9 >> @rsp | $teb & @r12)  { test_statement(0xCA1); } elsif (~@r12 & @rax ^ @rsi & @rdx & 0y1000 | $teb >> 3(~@r12 & @rax ^ @rsi & @rdx & 0y1000 | $teb >> 3) { test_statement(0x18C7); @rax = @rbp ^ +@r11 ^ $ip | @r11 ^ -@rsp ; } elsif ($teb ; @r10 | $ip & @r9 | 0x7 ^ @rdx) { test_statement(0xF4E); } elsif (@r9 & @rdi | @r8 ^ 17 >= @rbx) { test_statement(0x1DE9); }
$error$
$end$
4664
 if (@rbp + @rbp | @rsp << $buffer & $thread & @r13 & $proc == @rbp + @rbp | @rsp << $buffer & $thread & @r13 & $proc)  { test_statement(0x4DB);  while  ($teb | $ip ^ 0y1100 +@rax ^ $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi | @r9 | @r10 = @rax ^ @rbp) ; } else { test_statement(0x2032); }
$error$
$end$
4665
 if (@r13 ^ $teb ^ @rax ^ @rax & @r9 ^ 0xE ^ @rbp > @r10 & $ip & -$thread & @rbx ^ ~$ip << 0y10010 >> @r12 >> @r10 & @rbp >> (@r10) & @rax & @rsi)  { test_statement(0x25E0); } elsif (0xA << @rbx >> +$thread >> @rbp & -@rax | @rdi >> @rax ^ $buffer | 0x0 < (+@rdx) ^ @r8 >> ($proc) ^ @rsi & $teb | @r11 & $thread ^ @r12 & @r13) { test_statement(0x1982);  This is a not opened comment */ ; } elsif (@rax >> @r13 & -@rdx & $buffer ^ @rsi ^ @rsi ^ @rdx != @rax >> @r13 & -@rdx & $buffer ^ @rsi ^ @rsi ^ @rdx) { test_statement(0x5D5); } else { test_statement(0x1E10);  This is a not opened comment */ }
$error$
$end$
4666
 if ($buffer << @r8 >> -~4 < @r12 >> ~@rsi << 0x4 >> @rdx ^ $buffer >> @r8 & @rbp & $thread & @r13 ^ @rsi >> @rsi & @r8 & (12) ^ @r12 & @r12)  { test_statement(0x1E35); } elsif (@rbx << $ip >> @r13 >> 13 & @rbp >> @r8 & +@r9 & $thread ! +@r11 ^ $teb >> @r8 ^ @rbx) { test_statement(0x83D);  break; } else { test_statement(0x2321);  while  (+$buffer | @rsp > +$buffer | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4667
 if (--$ip << $buffer >> 0y110 >> -@r12 ! $proc + @r9 >> @rsp ^ @rbx << @r13)  { test_statement(0x1411); } elsif (@r8 >> $proc >> @r9 $buffer >> @rdx ^ @r8 >> $buffer | @rbx & 0n16 & @r8) { test_statement(0xB8A);  if (0y101 >< 0y101)  { test_statement(0x16CD); } elsif (7 ! 7) { test_statement(0x475); } } elsif (@rbp ^ 17 & @r11 ^ @r10(~@rbx >> $thread & @r12 & $thread) { test_statement(0x20D4);  while  (@r13 @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   /* This is a not closed comment } else { test_statement(0x416); }
$error$
$end$
4668
 if ($teb + @r13 << $teb << ~@r11 ^ @r8 << $buffer & @rbp >> @r12 & @r8 <= @rbp + @rsp << @r9)  { test_statement(0x4E2);  /* This is a comment */ } else { test_statement(0x24EB); }
$error$
$end$
4669
 if ($buffer + @rdi >> 0n7 << 11 >> @r11 >> @r10 | 0y10001 << @rbp >> @r8 >> $ip > $buffer + @rdi >> 0n7 << 11 >> @r11 >> @r10 | 0y10001 << @rbp >> @r8 >> $ip)  { test_statement(0x17A0);  // /* This is a comment   for (; (@rbx)(@rax | 0xF;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1E77);  for (val = 10; @r12 ^ $buffer ; @r11 ^ 0y10 | @r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rdx ^ @rsp ;  // /* This is a comment   // /* This is a comment  @rax = 0x6 ; }
$error$
$end$
4670
 if ($teb << @r12 << $buffer ^ $proc >> (-@r9) >> @r8 | @rbx >> @rax)@rsi + @r8 << $thread >> @rsp & $thread << $buffer & @r11 >> 0y0 | $thread << $teb & @rsi & @r8 & $thread ^ +0y100 >> @rax & @rsi ^ (@rdi) & @r13)  { test_statement(0x291); } else { test_statement(0x1B81);  /* This is a not closed comment  // /* This is a comment  }
$error$
$end$
4671
 if (@rdi + $thread & $proc << ~@rsp >> +@rdi >> @rsi & (@rbp) & @r13 < @rdi + $thread & $proc << ~@rsp >> +@rdi >> @rsi & (@rbp) & @r13)  { test_statement(0x59B);  This is a not opened comment */ } else { test_statement(0x69A); }
$error$
$end$
4672
 if (-@rdx << 0n14 >> $thread >> 3 >> +$proc ^ @r9 | 0xA << 0n9 & 0n3 >> ($thread) ^ $proc >> @rsp & @rax ^ @rax | @rsi | @r11 | @r8 ^ $thread | $buffer))$buffer + @r12 << @r13 >> $proc & @rbp << @rdi | @rsp << @rsi >> 0n15)  { test_statement(0x1273); } elsif (@r8 << @rbx ^ ($thread) >= (@r13) << $proc | +23) { test_statement(0xF3E);  while  (@rbp ^ ($buffer) = @rbp ^ ($buffer))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4673
 if (0n4 << $ip << $proc & $buffer << 0n2 >> @r12 & 0x2 >> +$teb & @rbx & +@rbx | @r13 != @rbx + $thread << @r11 ^ @r10 >> 0n6 >> 0n8 & 0n1 >> ~@rsp ^ @rdi ^ @r10 ^ -$ip | @r11 << @rdi >> @r9)  { test_statement(0xF83); } elsif ($teb >> @rsp != @r8 >> @r11 >> 20) { test_statement(0xA6F);  break;  This is a not opened comment */  This is a not opened comment */ } elsif (~0n3 & @rdx & @r12 ^ 0x7 & @rdx | 0n5 ^ 0xD ^ @r11 == @rsp & $teb | $teb & @rax ^ 0n17) { test_statement(0xB2A);  for (val = 10; @r11 >< @r11 | 0x5;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } else { test_statement(0x1D80); }
$error$
$end$
4674
 if (@rdx << @r8 << 0n4 >> @r13 << @rbx & 0x7 << @rsi >> $ip)@rbp)  { test_statement(0x1E7); } elsif (@rdi >> 21 & --@r9 >> (0n8) ^ $buffer >> @rsi & $ip <= @r8 << $ip) { test_statement(0x15BB);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx | 0n19 <> @r12 ^ @r10) ; } elsif (0n16 >> +$buffer & (@r8) | @rsp)@r8 & @r13 & -0n12 ^ @r13 & @r8 | @r10 & ~~@rbp ^ -@rdx ^ @rsp) { test_statement(0x6EA); } else { test_statement(0x559);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -$teb ^ $ip ! @rax ^ $teb | (@rsi) | 0x0) ; }
$error$
$end$
4675
 if (~$thread << $teb << ~@rbp >> --@r10 >> @rbp & @r10 >> @r9 & @r10 & 0x11 | 11 >> ~@rax >> @rbx >< @r13 << $proc >> @r9 << ~6 & 0y11 ^ $teb << @rsi ^ @rsp >> @r12 & 0y10001 ^ 0y1011)  { test_statement(0x1983);  if (+14 ! @r10 | ~@rbp ^ $buffer | @r11 | 10)  { test_statement(0xD4C); } elsif (-@rsp ^ $buffer $buffer ^ @r10) { test_statement(0x2B6); } } elsif ((@rdx) >> (@r9) >> @r10 & @rdi >> 0xC & -0 & 0y10001 ^ $thread >> $proc & @rdx ^ 0n17 & @rax ^ $proc = $thread << 0x5 & -@rdi ^ 3) { test_statement(0xD7);  // /* This is a comment  }
$error$
$end$
4676
 if (+0n0 >> 0n15 >> 0x12 >> ~@rax & @rbp << 0y11 >> @r12 >> @rbp ^ @rsi << 0xC | -0n7 << 0n2 ^ --@r10 >> @r11 @r9 >> @r12 << @rax >> ~0n11 >> @r9 ^ @rdx >> 23 & @r13 ^ ~@r13 >> 15 & @rdi | @rdx & @rsp | $ip >> @rdi & @r11 ^ 6 & @rsi ^ @r9 ^ $ip)  { test_statement(0x16AA);  if (@rdx(@rsp)  { test_statement(0x1DAE); } }
$error$
$end$
4677
 if (@r11 << @rsp >> +(@rsp) << -@r13 & 0n17 & -~4 >> @r9 ^ 11 << @r9 >> @r13 ^ 0n4 & @rdx | 0y1110 >> 5 >> 0x11 != @rbx >> $buffer << @r12 >> (@rdx) >> 0n18)  { test_statement(0x119D); } elsif (@rdx >> +@rax >> @rdi & @rbx >> @rdi ^ @r9 >> @rbx & (-0y10011) | 0x4 >> $teb ^ @r9 ^ 11 | 15 & $buffer $proc ^ @rbp & $ip | $ip >> @r12) { test_statement(0x1570); }
$error$
$end$
4679
 if (@r9 << ~+-$buffer << 0y10 >> -14 << $teb >> $ip >> @rsi | $ip << +@rsi ^ @rbp >> @rax($ip + @r10 >> ~@r12 << +@r12 ^ @rdi << $teb >> $teb & @r13 >> @r12 & $thread)  { test_statement(0x268); ; } else { test_statement(0x13F7);  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
4680
 if ($ip ^ @r13 << 0y1100 >> @rsp >> ~+@r11 & 0xD >> @r9 & $thread ! @r9 | $thread << @rbp)  { test_statement(0xC7C); }
$error$
$end$
4681
 if (@r11 + 0x10 >> @rdi ^ $buffer << @r11 | @rdi << 14 >> $buffer & 0y0 >> (@r11) & 2 & @rsi ^ -@rbp >> 0xF ^ @rbp ^ 0 > @r10 + @rsp & $thread >> @rsi ^ ~$teb << @rsi | 0y10001 & 0n15 >> 0n0 ^ @rsp >> $thread ^ $proc | 11 >> @rdx & ~@r8 ^ @r9 ^ 0xD ^ @r13)  { test_statement(0x184F);  // /* This is a comment  } elsif ($thread << @rsp & $buffer & 0y1110 & @r10 == ($ip) >> @r13 ^ @r9 | @r8 ^ @rsi ^ @r9 ^ @rsi | @r8 & 15 ^ $ip ^ +0y1100 | $proc) { test_statement(0x6F0);  while  (@rbp >= @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rax = ~$thread)  { test_statement(0x1C4); } elsif ((@rdx) @r11) { test_statement(0x668); } else { test_statement(0x1906); } }
$error$
$end$
4682
 if ($proc << @rbp << @r9 >> @rbp << @rdi >> @r13 >> 0y0 & @rdx << @r8 & @r13 >> @r8 | @rsi >> @rbp >> @rbx & @r10 >> @rbp & $proc & @rbp)@r8 << ($buffer) << @rdi >> @rdi >> ~0x11 & @rsi & @r13 & 0y1001 & @rsp | $ip << $teb & $ip & @rbp ^ @r10 >> $thread)  { test_statement(0x1C73);  /* This is a not closed comment  This is a not opened comment */ } else { test_statement(0x1BB); }
$error$
$end$
4683
 if (0n7 << $ip)~@r12 + $teb >> @r9 >> @rsp)  { test_statement(0x1446);  /* This is a comment */  break; } else { test_statement(0x1D90); }
$error$
$end$
4684
 if (@rsp + $proc | $proc >> @r10 >> $buffer & @rax >> $proc & $teb ^ ~$thread & @rdx & $thread ^ @rbx & @rbp ^ @rax > $ip)  { test_statement(0x15D0); } elsif (@rbx << $ip ^ $proc >> @rax & $ip & 20 ^ $proc ^ @r10 ^ 0x0 >< @rbx << $ip ^ $proc >> @rax & $ip & 20 ^ $proc ^ @r10 ^ 0x0) { test_statement(0x18C1);  // /* This is a comment  } elsif ($thread >> @rdx ^ @rax ^ @r12))5 >> @r13) { test_statement(0x10B8);  /* This is a not closed comment } elsif ($ip ^ @r10 | 15 | 16 | @rsi < @r12 | @rsp ^ @rbp | @r13) { test_statement(0x701);  if ($thread ; 0y110)  { test_statement(0x1374); } elsif (@r9 @rax) { test_statement(0x6CC); } elsif (@r9 ; @r9) { test_statement(0x78D); } @rax = @rdx ;  while  (@rbp != $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip))@rdi ^ @rsi) { test_statement(0x143); ; ; val = @r13 ; } else { test_statement(0x137D);  while  ((@r8) ^ @rbx | 0x13 | 21 == (@r8) ^ @rbx | 0x13 | 21)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4685
 if (@r12 >> @rdi & @rdx & @rdx >> @r13 | @r13 & @rsi & @r11 ^ @r11 >> @rbx & @r10 ^ -$proc & @r12 | @r12 >> 0)~0n1 + @r12 >> @rdx >> 0x1 >> 0x8 & (@rax) << @r12 >> @rax >> 0y100 & @rsp >> $buffer)  { test_statement(0x2072);  // /* This is a comment  @rax = $thread | 0y10001 ; } elsif ($proc >> @rdx | @r13 >> 0y1011 & 0xE & @rsp ^ $thread & 10 | 0x3 & 0x1 ; $proc << 0x3 >> 6 >> @r12 & @rbp & 0n10 ^ @r13 & @r10 ^ @rax & @r10 ^ @rsp ^ $buffer | $buffer >> @rdi ^ $teb ^ @rbp) { test_statement(0x19B8); } elsif (@rbx & @r9 ^ 0y1010 & $teb | @r11 ^ 0y111 ^ @r11)@r13 >> @r12) { test_statement(0x1E65); } else { test_statement(0x1F66);  for (; 0y1011($buffer | $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4686
 if (@r12 << @rbx >> (+$thread) << 0y10001 >> $teb | $proc << @r9 >> @rsp & @rdi >> (+$ip) & 0y10001 ^ 0x3 | @rbx >> 0n16 ^ @rdi ^ @r9 >= @rdi + @r8 << @r10 << $buffer >> +@rbp)  { test_statement(0x43C); }
$error$
$end$
4687
 if ($ip >> @rdx ^ $ip ! $ip >> @rdx ^ $ip)  { test_statement(0x24AA); val = @rax & 0x1 ^ @r8 ^ @r13 ; } elsif (@r13 << @rax >> @r12 >> $proc & @rax >> @rdx | @rbx >> +(~$teb) & ~0y1111 ^ 0x13 & -@rdx(@r13 << @rax >> @r12 >> $proc & @rax >> @rdx | @rbx >> +(~$teb) & ~0y1111 ^ 0x13 & -@rdx) { test_statement(0x696); ; } elsif (@rdi & 0y10011 | @rsp & @r9(@rdi & 0y10011 | @rsp & @r9) { test_statement(0x11C9); } elsif (-@rax | @rsi ^ -@r13 -@rax | @rsi ^ -@r13) { test_statement(0x200D); }
$error$
$end$
4688
 if (@r10 + @r10 >> $teb >> @r13 ^ @rdx & @r9 >> @r10 & @rbx & @rsp <= @r10 + @r10 >> $teb >> @r13 ^ @rdx & @r9 >> @r10 & @rbx & @rsp)  { test_statement(0x7EA); }
$error$
$end$
4689
 if ($buffer + 14 >> ~$buffer >> $ip >> $ip ^ (0y1) << @rdx @rbp + @rsi >> 0xE << 0n18 >> +0x12 >> -@r11 & @r8 ^ 23 << @r8 | $proc ^ @r10 & $thread & @rax ^ @rsp & $ip ^ @r9 ^ @rax)  { test_statement(0x22CE);  for (val = 10; @r9 & @r11 ^ ~@rdx | $proc ! @r9 & @r11 ^ ~@rdx | $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (0n11 << ~@rbx >> $thread >> @rdi & 0y1010 = 0n11 << ~@rbx >> $thread >> @rdi & 0y1010) { test_statement(0x97); } elsif (@r11 > 3 >> @rsi) { test_statement(0x6CD);  // /* This is a comment   // /* This is a comment   /* This is a comment */ }
$error$
$end$
4690
 if (@r9 + $proc << @r8 >> @r12 << $ip >> 2 ^ +0n13 & @rdx >> @rdx & @rdi & @rsp ^ 0n16 >> @rbp ^ @rdx | @rdx >> @r9 ^ @rbx >< +$thread << $ip << @rsp >> -$thread << @rsp >> -@rdi ^ 0n11 << @r9 ^ 17 & $proc & +$buffer ^ @r12 & +(0xE))  { test_statement(0x2034); @rax = @rdx >> (14) & $buffer ; } elsif (+~(-@r12) >> -1 ^ @r11 >> @rdi & @rsi & ~@r9 | @r13 >> @r8 & @rsp ^ +~22 & $thread ^ @rsp ^ @rdx | $ip & $thread | 23 | $buffer <> @rdi >> $thread >> $buffer ^ ($proc) & @r8) { test_statement(0x1798);  if ($ip ^ 0x11 == $ip ^ 0x11)  { test_statement(0x1BDF); } elsif (@r13 | 0n4 < @r13 | 0n4) { test_statement(0x1F60); } } else { test_statement(0x1BBB); }
$error$
$end$
4691
 if ($ip << @rbp >> @rsp << @rbx >> $teb & @rsp << @rbx & 0x11 | $thread << +@rbp | @r11 >> $teb ^ $buffer & $proc ^ $thread | @r11 ^ 0n2 ^ @rbx != $ip << @rbp >> @rsp << @rbx >> $teb & @rsp << @rbx & 0x11 | $thread << +@rbp | @r11 >> $teb ^ $buffer & $proc ^ $thread | @r11 ^ 0n2 ^ @rbx)  { test_statement(0x14AF);  /* This is a comment */ } elsif ($thread << @rbx >> (@rbx) & ~0n12 >> $teb = @r9 >> @r8 >> @rax | @rbx >> @rbx) { test_statement(0x11E7);  // /* This is a comment  } elsif ($buffer >> 0y101 ^ $ip | @rax & @rax > $buffer ^ 0n17 & -0x6) { test_statement(0x16F8);  /* This is a not closed comment } elsif (@r10 & @r11 != ~@r13 & $ip ^ @rax | +@rax ^ @r11) { test_statement(0x26D);  while  (@rdx >= @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 | ~0n19 | $teb <> $proc | @r13) { test_statement(0x1CE9);  break;  break; }
$error$
$end$
4692
 if (@r9 ^ @rsp << -@rbp >= ~~@rax << @rdx << +~@rax ^ 0y11 >> @rax & @r8 >> $thread & 0n1)  { test_statement(0xAA3);  // /* This is a comment   /* This is a not closed comment } else { test_statement(0x103F); }
$error$
$end$
4693
 if (0n7 + @rax << @rsp >> @rsp << +@r12 >> $ip ^ $teb >> @r12 & 0y101 ^ -$ip ^ @rbp(0y1111 & @rsp >> @r12 >> -@rbx ^ @r10 >> @r10 >> ~@rsi)  { test_statement(0x20E4);  // /* This is a comment  } elsif ($proc >> @rdi ^ 0x8 & $thread & 0n4 ! @rsp << @r8 >> $teb >> @r8 ^ @rdx & $proc & @r11 | @rsp) { test_statement(0x680); } else { test_statement(0x1B94); }
$error$
$end$
4694
 if (@r11 & @rax | @rsp >> @r12 >> $teb & $ip >> 0x10 & @r13 & 10 ^ $proc ^ @rbp == @r11 & @rax | @rsp >> @r12 >> $teb & $ip >> 0x10 & @r13 & 10 ^ $proc ^ @rbp)  { test_statement(0xEC); } elsif (0y1001 ^ @r13 >> @r11 & $teb & @r8 ^ @rsp ^ 0y1010 | @r10 & ~@r12 ^ -@rbp ^ $thread ^ $teb | 0xA ^ @rdx ^ @rbx))0y1001 ^ @r13 >> @r11 & $teb & @r8 ^ @rsp ^ 0y1010 | @r10 & ~@r12 ^ -@rbp ^ $thread ^ $teb | 0xA ^ @rdx ^ @rbx) { test_statement(0x2696); } elsif ($buffer ^ ~0xB ^ @rdx ^ ~@rsi < 7 ^ $proc ^ @r13) { test_statement(0x1658); } elsif ($buffer | @rsi | @rbp | $proc <= $buffer | @rsi | @rbp | $proc) { test_statement(0x1ADF); } else { test_statement(0x98D);  /* This is a comment */ }
$error$
$end$
4695
 if (12 + @r8 << @rsi << @rax >> @r11 << ~@r10 ^ @r8 << @rax >> @rdx ^ @r12 >> 0x5 ^ @r11 & @r9 | @rsi << $ip >> $ip >> @rax & @r8 >> @rbp ^ @rsi >> @r12 ^ $proc & @rsi ^ ~$thread | @rbx | @rsi & 0xE ! 12 + @r8 << @rsi << @rax >> @r11 << ~@r10 ^ @r8 << @rax >> @rdx ^ @r12 >> 0x5 ^ @r11 & @r9 | @rsi << $ip >> $ip >> @rax & @r8 >> @rbp ^ @rsi >> @r12 ^ $proc & @rsi ^ ~$thread | @rbx | @rsi & 0xE)  { test_statement(0x1EC0); ;  break; }
$error$
$end$
4696
 if (@r12 + $ip >> (4)((@r12 + $ip >> (4))  { test_statement(0x1743);  /* This is a comment */ }
$error$
$end$
4697
 if (@r11 + @r10 << 0n12 >> 0y101(@r11 + @r10 << 0n12 >> 0y101)  { test_statement(0x2651);  break; } elsif (@r8 ^ @rbx >> @rdx & 0y1001 ^ @rax & @rax ^ $thread | 0n0 ^ @r8 | +0y1011 ^ @r10 | +$buffer = @r8 ^ @rbx >> @rdx & 0y1001 ^ @rax & @rax ^ $thread | 0n0 ^ @r8 | +0y1011 ^ @r10 | +$buffer) { test_statement(0x2510);  // /* This is a comment  } elsif (@rbp & 0n11 & $proc)@rbp & 0n11 & $proc) { test_statement(0x1EA7); }
$error$
$end$
4698
 if (--10 + $proc << (@r10) << @rdx >> $buffer ^ $ip ^ @rbx ^ -@r8 & ~@rdx ^ $ip ; @r9 >> $teb & $proc & -~$thread >> (@rbp))  { test_statement(0x1F09);  for (val = 10; @rax ^ 0x1 | @rdi ^ @r10 | @rbx <> $thread ^ 0n14 ^ $ip | @r9 | @r8 | @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0n8 = 2 | $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @r13 | 0x4 >= 0y10011 | $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  /* This is a comment */  This is a not opened comment */ val = $proc ; } else { test_statement(0x1996); }
$error$
$end$
4699
 if (@r13 & @r13 & @r13 & (@rsi) < +$buffer + $ip & ~@rsi >> 21 & @rbp & $teb | 0y110 << $ip ^ @rdi >> @r11 & @rdi & @r11 | ~0x0 & -@r13 & $proc)  { test_statement(0x33E); ;  if (@rbp ^ $ip >= $proc)  { test_statement(0x2589); } elsif (@rsi | @r11 > @rsi | @r11) { test_statement(0x1771); } else { test_statement(0x101C); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 == @r13) ; } elsif ($proc ^ @r9 & @r9 ^ @rbp ^ @r13 ; @rbp << 17 >> @rsp ^ @rax >> @rdi ^ 0y1101 & $ip | @r8 & 0y10010 & @r13 ^ -@rax & @rbp ^ ~$ip ^ @r9 | 0n15 ^ @rsp ^ @rdx) { test_statement(0x2369);  while  ($buffer ^ (@r12) == @rsi | -0n10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4700
 if (-$proc << ($teb) << 0y10001 >> $ip << $thread & ~@r10 << -@rbp >> 0x12 >> @rdx & @rax ^ @rdx >> @r13 >> @rsp ^ @r13 & +$teb & @rdx ; @rbp >> @r13 << @rdx >> @r8 >> @r8 ^ $proc << @rax >> @rdx & @r12 >> @r11 & $teb & ~@r11 | @r9 << @r9 ^ $thread >> @r10 & @r11 & @rbp)  { test_statement(0x1B5E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread ^ @rsi ^ @rbp ; @rdx | @rsi ^ @rbx) ;  for (; ~@r8 ^ @r13 == ~$ip ^ @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4701
 if (0n12 >> 0x2 >> 7 >> @rbp & $thread << 0y100 >> @r13 & 15 & @rbp & 0n17 ^ 0y1100 >> @rdx >> @r12 ^ @r8 & $buffer & ~@r8 != 0n12 >> 0x2 >> 7 >> @rbp & $thread << 0y100 >> @r13 & 15 & @rbp & 0n17 ^ 0y1100 >> @rdx >> @r12 ^ @r8 & $buffer & ~@r8)  { test_statement(0x2401);  for (val = 10; @r12 ^ @rbp ^ +@rbx | @r10 == @rbx & -+@r10 ^ 0y110 | $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rax = $buffer | 0y10000)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbx & @rdx & @r13))@rsi << @r12 & @rdi >> $buffer) { test_statement(0x1E05); }
$error$
$end$
4702
 if (@r8 << @rbp << @rbx | ($proc) >> ($teb) >> @rsp & @r9 >> @rsp | @rsp >> 0x10 ^ -@rbp & 17 <> @rdi << @rdx >> (@rsp) >> @rbx >> @rdi & @rbp << $proc & @rsi & @r12 | +@rbx >> $proc)  { test_statement(0x258A);  This is a not opened comment */  if ($proc | @rdi ! $proc | @rdi)  { test_statement(0x2247); } else { test_statement(0x232A); } } else { test_statement(0x2342);  // /* This is a comment   // /* This is a comment   while  (@r12(@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4703
 if (-@rbx << @r8 ^ +0y1000 >> @rdx & @rsi ^ @rsi ^ 0 | $ip | $buffer >> @rsp ^ 0x12 & @rsp ^ @rbx | @rax))@r9 + -~($proc) << @r8 >> 0x2 << 22 & $buffer << @r12 | ~$ip >> @r8 | $ip >> 0n4 & @r13 ^ @rdi ^ -@rsi ^ @r10)  { test_statement(0x20BD);  /* This is a comment */ } elsif (@r12 >> @rbp & @rbp >> @rax & ~@rdi | 0y10000 & 0x2 ^ -@r11 ^ $proc ^ @r11 <> @r12 >> @rbp & @rbp >> @rax & ~@rdi | 0y10000 & 0x2 ^ -@r11 ^ $proc ^ @r11) { test_statement(0x10FF); } elsif (0xB ^ -@r8 & $buffer ^ -0n10 ^ 0n5 | $proc & @rsi ; 0x5 >> @r9 ^ @rax & @r10 ^ 0y10001 | @r12 & @rax) { test_statement(0x1D62); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (+@r12) ; @r12) ; @rax = @rsp ; } else { test_statement(0x1732);  This is a not opened comment */  /* This is a comment */  break;  // /* This is a comment  }
$error$
$end$
4704
 if (@r13 + $buffer << +21 | 0y1111 >> @rdx & @rbx >> @r8 & @rbp ^ +@rbx >> $proc ^ @rbp | @rdi & (@r9) ^ @r9 ; @r13 + $buffer << +21 | 0y1111 >> @rdx & @rbx >> @r8 & @rbp ^ +@rbx >> $proc ^ @rbp | @rdi & (@r9) ^ @r9)  { test_statement(0x8E0);  break;  /* This is a comment */  while  (@rdx | @rbx >= @rax | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y1011 ^ ~@r9 >> $ip & @r10 & @r11 ^ -@r10 & $proc ^ -$ip ^ @rsp > -@rbx & 0xE >> @r13 & 0x9 & $buffer ^ @rdx >> @r11 & 0xB ^ @rsp ^ @r12) { test_statement(0x26FC); } elsif ($buffer ^ +$buffer ^ $buffer ^ @rsi | @r10 | -(($teb)) ^ $teb | @r10(($buffer ^ +$buffer ^ $buffer ^ @rsi | @r10 | -(($teb)) ^ $teb | @r10) { test_statement(0xBB0);  if ($thread | 0y11(($thread | 0y11)  { test_statement(0x688); } elsif ((17) ; (17)) { test_statement(0x542); }  This is a not opened comment */ @rax = 0y101 ;  if ($buffer ; @r10)  { test_statement(0x2B); } @rax = -0n5 ; } else { test_statement(0x2145); }
$error$
$end$
4705
 if (0y10000 << @r12 >> @rbx << @r10 >> @rdi & @rax ^ @rdx >> 0n11 & $buffer >> $proc ^ 14 & $buffer & 0x7)0y10000 << @r12 >> @rbx << @r10 >> @rdi & @rax ^ @rdx >> 0n11 & $buffer >> $proc ^ 14 & $buffer & 0x7)  { test_statement(0x7A9);  if ((@rsp) & 0n12 == @r9)  { test_statement(0x2120); } else { test_statement(0x1EF0); } } elsif (@r8 >> @rax ^ @rbx >> @rbp <= @r8 >> @rax ^ @rbx >> @rbp) { test_statement(0x1E71); } elsif (@r8 | @r9 ^ $ip > @rdx & 0x10 | $proc ^ @r8) { test_statement(0xD59); }
$error$
$end$
4706
 if ($ip & @rdi << @r12 ^ $teb >> $proc >> ($buffer) <= $ip & @rdi << @r12 ^ $teb >> $proc >> ($buffer))  { test_statement(0x2065);  for (@rax = +0x0 & +@rsp ^ @rsp; $teb <= $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ^ @r12 <> $buffer ^ @rsi) ; ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer @r8) ;  while  (@rbx <= @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4707
 if (0n15 << @rax >> -13 >> 0y1010 >> 0n2 >= @rdx << @r13 << @rbp & $thread << @r8 & @r10 ^ 12 << @rbx)  { test_statement(0x18FC);  while  (10 | ++@r10 | @rdi | @rbx))12 & 0x0 ^ -@rbx ^ @r13 | 0x5)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsi << $ip >> 0xE >> @rsi | @rbx >> @rbx & $teb | @rsp & 0y10000 | 0n4 != $proc >> @r13 >> @r8 ^ $thread >> @r13 & @r8) { test_statement(0x23FA); @rax = @r12 & 4 ; }
$error$
$end$
4708
 if (0n5 + +@r10 << @rsp << $teb >> 15 << 0n14 < 0n1 << @r8 ^ @r13 ^ 0y10011 >> @rdi & @rsi & @rsp ^ +@r10 | $proc << ~@r11 & +0x2 >> @r8 ^ -$ip >> 0n14 & @rdi & @rdx)  { test_statement(0x207E);  /* This is a comment */ } elsif (~@rdi << @rbx >> @r8 ^ @rdi >> @rsi & @rbp & 0xD | @r11 | $proc ^ +$teb | @r12 ^ @rsp @r13 & 0y11 >> @rax & @r13 & 0y101 | ~16 | @rbp ^ 13 ^ $ip) { test_statement(0x5AF); }
$error$
$end$
4709
 if (0y11 + @r12 >> @r11 >> $thread >> 0y10 | @rsp ^ +$ip))$ip + 20 >> @r10 << @rdx >> @rsi >> @r11 & @rdi << (@r12) & @r9 & -@rdi & $ip ^ 0x0 << @rdx | $thread & @rdi)  { test_statement(0xBB7);  break; } elsif (0y10010 << @r9 >> -7 >> @r12 & @rdi >> @rsi | 0y10011 & @rdi & +@rax ^ @rsp & @r10 | ($ip) | @rsi ^ -@r9 = 0y11 << +@r8 & @rbp & @r11 & ~@rbp ^ (@r11) >> 0x6 & (@rbx) & $buffer ^ $ip) { test_statement(0x1B25); } elsif (@r13 >> $teb & @rsi & @r13 ^ $teb & $teb ^ ($thread) ^ 0y10011 ; @rbp >> $proc ^ $ip & @r13 | 0n16 ^ @rdx) { test_statement(0x28D);  if (0x8 $ip)  { test_statement(0xD6B); }  /* This is a not closed comment  for (val = 10; @r10 = @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi | $teb | (0x7) | @rbx((@r8 & @r11 ^ @r12 ^ $proc) { test_statement(0x662);  /* This is a comment */ } else { test_statement(0x1DE5);  // /* This is a comment   break; }
$error$
$end$
4710
 if (@r9 >> @rdi((+@rbp << 0y1001 << @rbx >> @rax << @r9 >> $teb ^ (@rbp) << @r11 ^ $thread & @r8 & @r8 ^ 0n4 & 0y1010)  { test_statement(0x1001);  This is a not opened comment */  break;  This is a not opened comment */ }
$error$
$end$
4711
 if (@rsp << $buffer << -@rsi >> @rdi << 0y10001 & @rdx << @r9 >> 0y10001 & $teb == @rsp << $buffer << -@rsi >> @rdi << 0y10001 & @rdx << @r9 >> 0y10001 & $teb)  { test_statement(0x949); } elsif ($thread << @rdi ^ @rbp >> @r12 & @rsi & ~@r9 ^ @rsi | $buffer >> -@r10 ^ ~$teb ^ -$ip ^ ~0n10 < @r11 << $ip & ~@r8 & @rdi & @r9) { test_statement(0x1A93); } else { test_statement(0x1FF4); }
$error$
$end$
4712
 if (0x12 << @rsi << -+$ip ^ $buffer >> 0y1011 >> @rsi & +-$ip | @rdx | $thread & @r13 | @r9 & @r12 >< ~@rdi + $buffer >> @rbx << 0y10010 & @r9 | 0n2 | $proc ^ ~@r13 | $ip ^ 0y1111 ^ 0x3 | @rbx | +@r13 | @rbx)  { test_statement(0x228D);  while  (@rbp & @r11 ^ @rdx ^ +0x6 | $thread ^ 0y10010 == @rbp & @r11 ^ @rdx ^ +0x6 | $thread ^ 0y10010)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1862);  // /* This is a comment   while  (3 | @rdx)$teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ val = $buffer ;  /* This is a not closed comment  This is a not opened comment */ }
$error$
$end$
4713
 if ($ip >> @rdi << @r10 >> 0x1 & @r9 >> 0y10010 >> (@r12) & $ip >> @rdx & @rdx ^ @rbx << @rsi >> @rsi == @r10 << 0xD ^ @r11 >> 16 & 0n12 & $thread & @r9 ^ @rsi ^ $ip ^ +@r12 | @rsi & @rsi >> @rbx ^ @rax ^ @r10 & @r8)  { test_statement(0x19AD);  /* This is a not closed comment  while  (@rdi ^ 23 | @rax))@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x93E); }
$error$
$end$
4714
 if (@rbx & @r8 & @rax & @rsp & @rsp ! @rdi + @rdi >> $thread << @r13 >> @rdi & 0xB & @r12 & @rsi & @r13 | (@r12) << @rsi >> @rbp >> $proc & -(-@r10) >> @rdi)  { test_statement(0x4EB); ; } else { test_statement(0x2291); ;  /* This is a not closed comment }
$error$
$end$
4715
 if (@rsp >> @r8 & @r8 << $buffer >> @r10 >> @r9 | $ip << @rsi ^ @r8 & 17 & $buffer ^ @rsi ^ @rsp ^ @r8 != @rsp >> @r8 & @r8 << $buffer >> @r10 >> @r9 | $ip << @rsi ^ @r8 & 17 & $buffer ^ @rsi ^ @rsp ^ @r8)  { test_statement(0x16ED); }
$error$
$end$
4716
 if ($proc + @r10 << $teb >> $buffer & @r11 << +0x0 >> $proc >> @rbp & 0x4 >> @rax | $ip << $buffer & ~16 >> 0y10010 ^ @rdi & $buffer & @r10 ; -$buffer + @rbp << ~$proc << @rdx >> $proc >> ~0xE ^ @rbp & 15 >> $ip | @r13 ^ $ip | 0n7 ^ $buffer | $thread ^ $thread | 0x7 | $ip | $teb)  { test_statement(0x1080); } elsif (@rdx << $teb >> $proc >> -@r13 ^ $thread >> @rax ; @rdx << $teb >> $proc >> -@r13 ^ $thread >> @rax) { test_statement(0xBF); } else { test_statement(0x1DEE); }
$error$
$end$
4717
 if (@rax << @rsi << +@r12))@rbp >> @rdx << @r13 & @rdi << 0x1 ^ -@rdi >> @r8 >> @rdi & @rsp & @rdi & 0n0 | @r12 << ~$teb >> @r12 >> $ip & @r11 >> @rax)  { test_statement(0x18FB); } else { test_statement(0x17AE);  This is a not opened comment */ }
$error$
$end$
4718
 if (@r9 + $buffer << 0y1110 << 0n5 >> @r10 << @r12 >> @rdi ^ 0x0 & +@r9 & 0y10010 ^ 0y10 | 0y111 << $thread >> ++@rsi >> @r13 ^ $teb ^ @r12 & $thread((@r9 + $buffer << 0y1110 << 0n5 >> @r10 << @r12 >> @rdi ^ 0x0 & +@r9 & 0y10010 ^ 0y10 | 0y111 << $thread >> ++@rsi >> @r13 ^ $teb ^ @r12 & $thread)  { test_statement(0x27E); }
$error$
$end$
4719
 if (-@rsp + $proc & 0x13 >> @r10 & 23 >> 0n0 < @rdx >> @r11 | @r12 << @rbp ^ 0xD >> $ip ^ @r12 & $thread ^ $teb | $thread >> @rbx & 13 ^ $teb & ~@rax | $teb & 0y1010 ^ @rbp ^ 15 | @r11)  { test_statement(0x1843);  while  (@rsp & @rbx ^ @rbp ^ --@rbx | @r8 | @r13 ; @rsp & @rbx ^ @rbp ^ --@rbx | @r8 | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  This is a not opened comment */ }
$error$
$end$
4720
 if (21 << @rsi & @r11 << (@rdx) | ~@rbx << 13 >> $thread | @r10 >> @r11 & @rdx | @rdi ^ @r10 | @r13 ^ @rbx >= 21 << @rsi & @r11 << (@rdx) | ~@rbx << 13 >> $thread | @r10 >> @r11 & @rdx | @rdi ^ @r10 | @r13 ^ @rbx)  { test_statement(0x1288);  while  (@rsp & 0n8 = $buffer ^ @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
4721
 if (@r13 + 0n17 << $buffer >> @r8 << @rax ^ @rdi & ~@rax >> 0y111 & 1 | $thread >< @r13 + 0n17 << $buffer >> @r8 << @rax ^ @rdi & ~@rax >> 0y111 & 1 | $thread)  { test_statement(0x26D3);  break; } else { test_statement(0x221B);  if (-@r12 ; -@r12)  { test_statement(0xD32); } else { test_statement(0x1DA1); }  break; }
$error$
$end$
4722
 if (@r8 >> 5 >> @r9 >> @rbx ; @r12 + 22 ^ $buffer >> 11 | @rdi << @r11 >> @rdi & $buffer ^ @r10 >> 0x0 & @r10 & @rbx | @rdi & @r8 & $ip ^ @r13 & $thread ^ @r9 ^ 0y10000)  { test_statement(0x118C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ^ 0n9 ^ @rsp ; @rdx ^ 0n9 ^ @rsp) ; }
$error$
$end$
4723
 if (@rdi + 15 >> 0x4 >> $teb & ~$buffer << +$teb & @r8 & @r13 & 0y10000 ^ $thread & @rdi >> @r10 <= @rax + $proc << 0xA & 0n1 >> @rdi & 1 >> +@r11)  { test_statement(0xCC9); } elsif ($thread << -@rsp >> @rsi >> @r10 & @r9 >> @rdi <= @r11 ^ @rsp ^ @r13 & @rdi ^ @rdi | ~$teb >> @rsp ^ @rbx & @r11 | @r11 & 0x11 ^ 2 ^ @rdi | @rdi ^ @r9 | +$proc | 0x4) { test_statement(0x2360);  This is a not opened comment */ } elsif ($buffer((@rbp >> @rdx ^ (@r9) | $teb ^ $thread ^ @r8) { test_statement(0x19C8);  /* This is a comment */  /* This is a comment */ } else { test_statement(0x20D2); }
$error$
$end$
4724
 if ((@r10) >> 4 << 0n19 ^ @rbp << $buffer & @rdx ^ @rbx >= @rbp + 0y110 << $thread | @rbx << @rsp & 0y10011 >> $thread ^ @r9 >> $buffer | $proc >> -@r8 | @r9 & @rdx ^ @r12)  { test_statement(0x645); val = @r13 >> $ip ; } else { test_statement(0x1F1E); }
$error$
$end$
4725
 if (0n7 + -~@rbp >> $ip >> (@r12) >> 5 >< 0n7 + -~@rbp >> $ip >> (@r12) >> 5)  { test_statement(0x1884);  if (@r13 & (@r8) | @r13 | @r13 <> 0y111 | 3 ^ @rax | @r11 | @rsp)  { test_statement(0x25DA); } elsif (@rsi ^ @r11 | $teb <= $ip | @rsi) { test_statement(0x9D6); } }
$error$
$end$
4726
 if ($buffer + $thread << $ip << ~$buffer & $teb & 0n14 >> @rbx & 0x0 <> $buffer + $thread << $ip << ~$buffer & $teb & 0n14 >> @rbx & 0x0)  { test_statement(0x2CA); } else { test_statement(0x1D99); ; }
$error$
$end$
4727
 if (@rbx))@rsp + ~@rdx >> @r12 << @rbx >> ~$thread >> (@rsp) ^ $proc ^ @r11 >> @r8 & @rsi ^ @r10 | @rbp << -($proc) >> $proc & @rbx)  { test_statement(0x2433); ; } elsif ($ip << $teb ^ @rbx & @r11 ^ -@r11 | -@rax >> @rbp & @r11 & @rbx))$ip << $teb ^ @rbx & @r11 ^ -@r11 | -@rax >> @rbp & @r11 & @rbx) { test_statement(0x1D3D);  /* This is a comment */ } else { test_statement(0x1B17); ; ;  break; }
$error$
$end$
4728
 if ($buffer + @rsi << ($thread) | @r13 << @rsi >> $buffer ^ $ip >> @r9 & $buffer ^ @rax ^ @r8 | -0y0 & @r9 ^ +$proc & @r9 ^ ~0y10001 ^ @rdx >= @rsi >> 14 << @rbp & @r10 << @rbx & @rdx >> ~(@r13) | 0y1001 >> 14 >> @rsp & 0y111)  { test_statement(0x59F); }
$error$
$end$
4729
 if ($proc + @rax << 0n13 & @r8 >> ~@r10 & $ip >> 0x2 ^ @r8 << ~@r12 >> @rsp ^ @rbp & @rbp & ++@rdi ^ @rdi & 0n10 | @rdi << $buffer >> (0y1010) ^ $proc & 22 & +@r11 ; +@rdx + +$teb & @r10 >> 0y1)  { test_statement(0x728);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 & -+@r13 != 6) ;  /* This is a not closed comment } else { test_statement(0x1A4E);  /* This is a not closed comment  if (@r10 | @r11 <= +-@rax)  { test_statement(0x19FB); } elsif ($thread))@r10) { test_statement(0x2310); } else { test_statement(0x9EB); } }
$error$
$end$
4730
 if (0x12 << @r9 << @rbx >> $proc ^ @r11 << @rax & ((@rsp)) >> 0y1110 == @rbp + @rdx << 0n16 >> $proc << @r9 >> $buffer ^ @r9 << @rbp >> @rdi ^ $proc ^ @r10 & @rdx)  { test_statement(0x2F5);  This is a not opened comment */ }
$error$
$end$
4731
 if (@r13 + @r9 << $ip << @rdi ^ $thread << @rbx & +$thread != $buffer << @rdi & 0y1000 << @r9)  { test_statement(0x14B2);  for (; -@rdi ! -@rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x16ED); }
$error$
$end$
4732
 if (@rsp << 2 & 13 << @r11 >> -@r11 & @r8 >> 0y10000 & @r8 & @rdi ^ $teb & @rbx & @rsp 0n0 + $buffer >> $teb << @rdi >> @rax >> @rsi & @r13 << $thread >> @r9 & @rbp & $ip | @r9 << @r9)  { test_statement(0xD77); } else { test_statement(0x16DD); }
$error$
$end$
4733
 if (0x5 >> @rax >> @r13 >> $proc))~2 + @r9 & 21 << @r12 >> @r9 >> 0x7)  { test_statement(0x2094); }
$error$
$end$
4734
 if (@rdi + @r9 << 3 << @r11 | (@r11) ^ (@rsp) ^ @r10 & $ip | @rbp & 0y1111 ^ @rax))@rdi + @r9 << 3 << @r11 | (@r11) ^ (@rsp) ^ @r10 & $ip | @rbp & 0y1111 ^ @rax)  { test_statement(0x2CC); }
$error$
$end$
4735
 if (@r12 << (0n15) << 10 & 0y1101 & @r12 >> @r12 | @rax << $teb >> @rax & 0x1 | $ip & 14 & @rdx @r12 << @rax & 0n13 & $ip >> $proc & ~@r12 & @r11 | @r12 >> @rsp >> +@rdx & @rsi >> @r11 ^ @r12 >> 6 ^ @r11)  { test_statement(0x15A5); } elsif ($proc << +@r13 >> @rax & $thread >< @rsi >> $ip >> @rsp & $ip >> @r10 ^ @r11) { test_statement(0x161); } else { test_statement(0x1A08); }
$error$
$end$
4736
 if (@rbp << $buffer >> $thread & @rbp >> @r9 >> -(0x4) ^ @rbp << @r11 >> 0n19 == @rbp << $buffer >> $thread & @rbp >> @r9 >> -(0x4) ^ @rbp << @r11 >> 0n19)  { test_statement(0x1F24); } else { test_statement(0x1FF7); }
$error$
$end$
4737
 if (@rdx + @r13 & @r12 | $proc >> @r9 & @rbp >> @r9 & ($ip) ^ ~$buffer >> $teb & @r10))$ip << 0y1010 << (@r12) & @rbx << @r11 | +@rsp & @rbx >> @r8 & @r8 ^ @r11 >> 0x9)  { test_statement(0x7F1); } elsif (@r8 << $thread & 0x13 ^ @rax & @rdx & -@r8 | @rsi >> ~@rbp & @rbp & 16 ^ $ip & ~@r10 | 0 ^ @rdi(($buffer & $ip >> $buffer & @rsp) { test_statement(0x6CB); }
$error$
$end$
4738
 if (@rbx + @rax << @rax << $buffer >> $proc << +~@rdx >> $thread | 0x3 & @rdi ^ @r10 | -$teb & @rsi & @r11 ^ $buffer ^ @rsp ^ ~~0n4 | @r8 ^ @r9 <> 0y10011 + @rsp >> $teb << 0y100 >> @rax >> +0n5 ^ -@rbx & @r12 | $proc << $thread >> +@r9 ^ @rdx | @r8 & @rbp & @r12 ^ $thread & @r12)  { test_statement(0x1F50);  /* This is a not closed comment } elsif (@rbp << @rdi & 0n14 & @rbp & @r12 ^ 0n18 & @rax & $buffer | 0x13 >> @rsi | @rdi & @r13((+@r9 | @r11 >> @r8 ^ @rdx & @r13 | 0x12 ^ @rdi) { test_statement(0x1A6B); } else { test_statement(0x1279);  for (val = 10; @rax ^ @rbp | 10 >= @r10 ^ @rdi | @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4739
 if (@rsi + @r9 << @rdx ^ $proc << (+@r12) ^ ~0y0 ^ 0n2 ^ $ip | @rsp << @r11 ^ @r10 >> @r12 & +@rdi ^ @r11 != @rsi + @r9 << @rdx ^ $proc << (+@r12) ^ ~0y0 ^ 0n2 ^ $ip | @rsp << @r11 ^ @r10 >> @r12 & +@rdi ^ @r11)  { test_statement(0xAA5); } elsif ($proc ^ 0y1001 & ($proc) & $proc ^ @r13 & @rbx < @rax) { test_statement(0x632); } else { test_statement(0x7FE);  /* This is a comment */ }
$error$
$end$
4740
 if (@r11 << @rbp << -@r11 >> 7 & (@rbx) << @rbp >> $ip ^ ~$thread << $teb ^ @rdx >> 0y1011 & (~0n15) ^ -$teb >= @r11 << @rbp << -@r11 >> 7 & (@rbx) << @rbp >> $ip ^ ~$thread << $teb ^ @rdx >> 0y1011 & (~0n15) ^ -$teb)  { test_statement(0xA13);  // /* This is a comment  ;  /* This is a not closed comment } elsif (17 << 0x2 >> @rsi >> @rbp & $buffer >> $proc(17 << 0x2 >> @rsi >> @rbp & $buffer >> $proc) { test_statement(0xCF0); } else { test_statement(0x1D49); }
$error$
$end$
4741
 if ($teb + @rdi << $teb >> @r8 << $proc & $ip << @r10 ^ @r9 & @r10 & +@rbx ^ @r8 & @r13 & $thread)@rdi << $teb >> $thread << ~@rax >> @rdi >> @rax & @r12 >> @r12 >> @r10 | @rsp ^ @r8 >> @r11)  { test_statement(0x2B6);  /* This is a not closed comment  for (val = 10; @r12 <= 0x6 | 11 | 0x2;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4742
 if (0n19 + 4 << @r9 < 0n19 + 4 << @r9)  { test_statement(0x1CFC);  if ($buffer & @rbx ^ 0n19 ^ @rdi $thread ^ $buffer)  { test_statement(0xDD5); } else { test_statement(0x16FF); } }
$error$
$end$
4743
 if (@rax << 0y10011 >> @r9 << $thread >> $ip & 0n18 << -+12 >> $teb <> $thread + @rsp << @rax << @r9 >> @r8 >> 0x4 & @r9 << @rbx & $thread & @rsi & $buffer)  { test_statement(0x193E); } elsif ($proc >> 1 >> $buffer < @rdx << @rdx & 0y1000 ^ $thread ^ @r12 ^ @r11 ^ +0n4 | 12 >> ~@rbp ^ @rbp & +@rdi) { test_statement(0xA14);  // /* This is a comment   while  ($ip >< @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  while  (($buffer) != @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  // /* This is a comment   if ($teb ! 0y1110)  { test_statement(0x3A6); } } elsif (@rbp | @r13 ^ $ip)@rbp | @r13 ^ $ip) { test_statement(0x216C); } elsif (@rsp | @r10 | @r8 | 13))@rsp | @r10 | @r8 | 13) { test_statement(0x22BC);  // /* This is a comment   while  (~-$ip >< ~-$ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = $proc ; }
$error$
$end$
4744
 if (@rax + $teb << @rbp << +$proc >> ~@r8 >> @r10 >> @rbx & $ip << @rdi & $thread & @r12 >< 12 << @rsi >> +$proc << @rsp ^ $teb << @r11 >> @rbx >> $proc & ~$ip >> @rbp)  { test_statement(0x2669); }
$error$
$end$
4745
 if (@r8 & $thread | @rbp >> $buffer & (@rdx) & @r13 & +$proc >= 0y10 + @rdi << @rbp << @r10 ^ 23 << @rdi ^ $proc ^ 0n1 | $ip << 0y10010 >> 0xA ^ @r8 >> 0xF)  { test_statement(0x1862); }
$error$
$end$
4746
 if (@r12 + $proc << @r8 << 20 ^ 0y110 << @r9 >> @rsi & @rdx & ~0n0 & -@rax 0 + $buffer << $ip >> @rsp << @r10 & -$proc & @r11 >> $ip)  { test_statement(0x2095);  if ($teb ^ @r10 ^ $teb | @rdx ^ @r9 | @rdx < @r11 | @rbx ^ @rbx)  { test_statement(0x1878); } else { test_statement(0x602); }  if (0x9 ^ @rbx @rdi ^ -+0n10 | @rbp | @r10)  { test_statement(0x26A0); } } elsif ($ip >> @r12 & 0n11 & $buffer & 0y10 | 0x5 >> @r11 | -$ip | $teb | @rsp))0x3) { test_statement(0x1FDF); } elsif (~~@rdi >> @rax & @rbx & $buffer ^ ~@r11 ; @rbx >> @rdi | @rbx ^ -0n3 | @rdi) { test_statement(0x1B4A); } elsif (@rsi & +@rbx ^ $teb | $thread <= @rax) { test_statement(0xB13); } elsif ($proc | 23 | 22 != @r13 ^ @r12) { test_statement(0x18E); } else { test_statement(0xAEE); }
$error$
$end$
4747
 if (@rbp + @rbp << $proc & @r13 >> @r11 >> (~+0n3) | ~@r9 & 0y1100 ^ @r13 >> @rdi ^ @rsp ^ (@rdx) | @r12 ^ @rdx & ~0y0 ^ 5 ^ +$ip | @r8 & @r10 ^ $teb($teb + @r13 >> ~@r12 & @rbp << @rsi >> @rdx >> ~@rsi ^ $teb >> $teb | $thread << @rax)  { test_statement(0x6B6);  for (val = 10; @rdi & -@rsp ^ @rsi ^ 0n9 | ~$proc | $teb >< -$thread ^ 0x9 | @rdi ^ -@r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xCD7);  while  ($buffer ^ @r9))@rdx ^ 0xB | 0y1010 | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4748
 if ($buffer >= $buffer)  { test_statement(0x265C); } else { test_statement(0x1221);  for (; $thread | @r10 | 6 = $thread | @r10 | 6;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($ip | 4($ip | 4)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
4749
 if (($proc) + $buffer << @r10 >> $proc >> $proc & ~@rdi ^ @r11 << @r13 >> $thread >> @r8 & 0x4 & @rsi & 0n4 ! +@r10 << 0x12 << $thread & 0n5 << @r13 >> @r12 >> @rdi)  { test_statement(0x3B2); }
$error$
$end$
4750
 if (-@rax + $buffer >> @r10 >> @r9 ^ 17 << @r10 >> ($thread) >> $ip ^ $teb >> $proc & @r8 ^ @rax & @rax <> 0x0 + @rax & @rdx << $thread ^ 0n1 << @rdi)  { test_statement(0x20B3); } else { test_statement(0x11E5);  // /* This is a comment   /* This is a not closed comment  /* This is a comment */ }
$error$
$end$
4751
 if (@rdi ^ @rsp >> +@rsi ^ @rbx >> 0x1((@r11 + (@rsp) & $thread)  { test_statement(0x220F);  for (val = 10; @r13 ^ $teb | $ip ^ @rbp == @r13 ^ $teb | $ip ^ @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif ((0y110) & 0n1 >> @rsp ^ +(@r12))(@r8) << ~@r11 >> @rsi & @rsi & @rax & @r9 | @rsp >> @rsi & @rsp & @r12 ^ @rax & ~@rdx ^ 0x8 ^ $buffer) { test_statement(0x2598); } else { test_statement(0xE2D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 ^ 0y1100 | $thread <> @rsp ^ @rsi | @rbp) ;  if (0x7 | @r8 ; +2)  { test_statement(0xFC3); } elsif (@rax = @rdi) { test_statement(0x209A); } elsif (-@rsi <> -@rsi) { test_statement(0x1F47); } elsif (@rsi > @r8) { test_statement(0x800); } }
$error$
$end$
4752
 if ($buffer + +@r12 >> @rbp << @rdx >> @rsi & @rbp & @rsp | +0n19 << $proc >> @rdx & @rdi & @r12 & $thread | @rdi & $buffer & 0x10 ^ 0n14 & 0x8 != +0xE + @rsp << +$ip >> 0xF << @r10 | 0y10010 << @rsp | @rbx >> @rsi ^ -@r10 & $teb | 21 & @rsp ^ @rdi | @r8)  { test_statement(0x265E); @rax = -@rbp ;  This is a not opened comment */  if (-(@rsp) | @r12 < -(@rsp) | @r12)  { test_statement(0x1E7C); } elsif (@r8 ! @rbx) { test_statement(0x2698); } elsif (@r8 ; @rsi) { test_statement(0x1EB7); } elsif ((+$proc)(0x7) { test_statement(0x265B); }  /* This is a comment */ } elsif (@r11 << $ip & @rbp >> ~@r12 ^ $ip >> @r9 & +~@r8 & $ip ^ $proc ^ $buffer ^ 0n19(@r12 ^ -0n14) { test_statement(0x26C4); } elsif (@r11 | @rax & @rax >< @r11 | @rax & @rax) { test_statement(0x18CD);  for (val = 10; @r10 | $ip)@r10 | $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; -@r8 -@r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rsi != @rdi)  { test_statement(0x703); } elsif ($thread >= @rdx) { test_statement(0x174D); } else { test_statement(0x12FC); } }
$error$
$end$
4753
 if (@r8 >> @rsp << $thread >> @r8 ^ @rbx >> @rax >> @rdx & @rbp >> @r8 & @r12 ^ 0xE >> +(@r9) ^ 0y10011 & @rbx | @rbp << @rdx >> @rdx & $proc >> $teb ^ @rbx >> @rbx & 0n13 | @r13 >> @r11 ^ @r8 & @r9 = @r11 + @rdi << @r13 >> @rdx << $ip >> $thread & @rsp << @r9)  { test_statement(0x154E); } elsif (@rdi ^ 4 >> @rbx ^ 0n2 ^ $buffer ^ -@rbp = @rdi ^ 4 >> @rbx ^ 0n2 ^ $buffer ^ -@rbp) { test_statement(0x19); }
$error$
$end$
4754
 if ($proc + $proc & @r12 << @rbx >> @r11 >> @rbp ^ -($buffer) ^ @r10 >> ++0y111 & $thread >< @r13 + $thread << $proc << @r8 >> @r11 & @r8 & @r11 & $ip ^ @rbp ^ @rdi >> @rdx & 0n15)  { test_statement(0x242D);  for (val = 10; @r13 | $proc = $thread | @rbx ^ 0n6 | @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @r11 ;  while  (14 | $proc = @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = +@rsp ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 != @rsp) ;  // /* This is a comment  }
$error$
$end$
4755
 if (0y1010 + @rbp >> @r8 << @rbx >> @r12 >> @r11 & @rbp >> @r10 & $teb >> ~~@rsi ^ $proc >> $proc & $thread >> @rdx ^ @r13 >> @rdx & $proc ^ $ip & @rdx < (13) + +@rdx >> @rsp << @r11 & @r13 << @rsi | 0x7 & $thread | @r11 >> +@rdi | @rsi ^ @rax ^ 0xC | @rdx)  { test_statement(0x1E7); } elsif (@r8 >> @rdi | @rsp >> (@rdx) & $thread & @rsp ^ $teb & @rdi >< @r8 >> @rdi | @rsp >> (@rdx) & $thread & @rsp ^ $teb & @rdi) { test_statement(0x1A29);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x0 | 0x12))0x0 | 0x12) ;  break;  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx <= 0n19) ;  for (; 12)$thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4756
 if (12 + (@r11) >> $thread | (@r12) >> $thread & @rbx ^ 0x7 & 0xD & $ip ^ 0x13 & @rax ^ +$thread ^ ~@r13 > ~@rbx + @rsi << @r12)  { test_statement(0xCB);  while  (0x12 ^ 0xC | @rsp ^ $buffer < +@r10 | @rbp ^ ($ip) | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp >> ~@rax >> -$proc & @r12 ^ @rbp < $buffer << @rbx >> 12 ^ $buffer ^ @rsp & +-@r8 ^ $ip) { test_statement(0x924); } elsif (@rdi | @rbp & @rax | @r13 | @r12)@rsp >> ~$proc & @r12 ^ @r12 & @r13 | @rbp & @rsp | $ip ^ @rdx | @rax | @rdi) { test_statement(0xC7F); }
$error$
$end$
4757
 if (@r10 << (@rdi) >> @rdi >> -(@rbx) & $teb & (@rbx) & @r10 & ~@r9 ^ 0y1001 ^ -($buffer) >> (@rdi) & ~$buffer & $thread ^ @r13 == $ip + @rbx << 0x10 << ~$proc >> @r9 << @rdx & @rbp & @r12)  { test_statement(0x27E);  This is a not opened comment */ } elsif (@rdi << $proc >> $thread >> @rsp & 12 >> $thread(@rdi << $proc >> $thread >> @rsp & 12 >> $thread) { test_statement(0x2503); @rax = 0y11 & @r12 | (@rdi) ; }
$error$
$end$
4758
 if (-0y1000 + @rdx >> @rdi << 0y10000 >> 0x0 >> @r9 & $teb << $proc >> @r12 >> 0n9 & @rsp >> 0n7 ^ @r12 << $ip ^ @r9 & @rsp ^ @r9 ^ @r8 ^ 0x2 | ((0n7)) >> $buffer >> (~$thread)(($buffer << @rsi >> @rbp << @rbp >> $teb >> 0xF)  { test_statement(0xF9C); } elsif (@rdx << $thread >> @rsi & @r9 != @rdx << $thread >> @rsi & @r9) { test_statement(0x1D94); } else { test_statement(0x604);  for (; @r8 = @r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
4759
 if ($thread & @rdi << +-@r12 & ~$ip >> @rbx & 21 & $teb ^ @r8 << @rsi & @rax >> @rdi & @r12 ! $proc << 0x11 << $teb >> ~$buffer & @rdi >> $buffer >> $buffer)  { test_statement(0x1348); } elsif (+@rsp >> @rsp ^ $ip & $teb & --@rsp ^ $ip ^ (@rbp) ^ $proc | 0y1001(+@rsp >> @rsp ^ $ip & $teb & --@rsp ^ $ip ^ (@rbp) ^ $proc | 0y1001) { test_statement(0x1F0F); } else { test_statement(0x6B9); }
$error$
$end$
4761
 if ($ip + ~@r9 ^ 0x13 << $buffer ^ @rsi ^ 0n2 & @rsi ^ +$proc >= $ip + ~@r9 ^ 0x13 << $buffer ^ @rsi ^ 0n2 & @rsi ^ +$proc)  { test_statement(0x216B); } else { test_statement(0x709); }
$error$
$end$
4762
 if (-$ip << @r8 | @rsi << @r11(@rax + @rsi << @r12 >> @r8 >> @rax >> @rsp | @r9 << $teb >> @r12 & @rax | 0x3 ^ ($teb) | @r9)  { test_statement(0x1C30);  break;  if (+$ip | @rsi >< @r8)  { test_statement(0x26FD); } elsif (@r12 | @rbp < @r12 | @rbp) { test_statement(0x1853); } elsif (@r11 ! @r8) { test_statement(0x15CE); }  for (; $teb | @r9 >= @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx >> @r8 | @rdx >> 0y10001 >< @rdi ^ @rbp >> +@r8 & @r12 | @r9 | $ip ^ 16 ^ @rax | $proc ^ 0x11) { test_statement(0x11D6); } elsif (@r12 >> @r9((@r12 >> @r9) { test_statement(0x655); } elsif (0y10 & $ip = 0y10 & $ip) { test_statement(0x888); } elsif (0y1001 ^ @rdi == 0xD | 0x0 | 0n15) { test_statement(0x16A6); } elsif (@r8))-$buffer) { test_statement(0x16A3); } elsif (@rbp < +@r10) { test_statement(0xFDC);  if (@rbx <> @rbx)  { test_statement(0x6E3); }  while  (@rbp > $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x8 != $teb) { test_statement(0x1B22);  for (; @rax ! @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4763
 if (@rdi << @rdi << @rsp >> $teb >> +@r11 >> @rsi & 0y1 >> $buffer >> $buffer & 0xD >> @rbx | @r12 << @rbp >> @rdx >> @r13 & 0n14 ^ @r11 >> $ip ^ @rsi | @rsi >> 0n15 ^ $teb ! @rdi << @rdi << @rsp >> $teb >> +@r11 >> @rsi & 0y1 >> $buffer >> $buffer & 0xD >> @rbx | @r12 << @rbp >> @rdx >> @r13 & 0n14 ^ @r11 >> $ip ^ @rsi | @rsi >> 0n15 ^ $teb)  { test_statement(0x2143); } elsif (~@r11 << @r12 >> $proc ^ @rdi ^ 0n1 ^ @rax | @rbx ^ @r8 ^ @rdi ^ @r12 < $ip << $proc & @rax >> @rdi & @rdi ^ @r13 >> @rdi & ~$thread ^ $buffer | 22 >> -+(3) & @r8 & 0xF ^ $proc & @r13 | @r13 & -$teb ^ @rdx | -$buffer) { test_statement(0x2C2); } elsif (@rbp >> @rdx & -(@rsp) & $buffer ^ ++5 & @rax | @rdx ; @rbp >> @rdx & -(@rsp) & $buffer ^ ++5 & @rax | @rdx) { test_statement(0x60);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n8 >< @r8) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip @r11) ; } elsif (@rdi & @rsi | $thread ^ 0x9 | @r11((@rdi) { test_statement(0x18C1); } elsif ($ip | $thread $ip | $thread) { test_statement(0x1018); } elsif ($ip | $thread)@rdi) { test_statement(0x1266); } elsif ($ip)@rbx) { test_statement(0x17FF); val = +$buffer ;  break; } elsif (0y10000((@r12) { test_statement(0xFB4);  // /* This is a comment  }
$error$
$end$
4764
 if (@rbp + $teb & @rdx ^ @rsp >> @r10 >> $proc | @rbp << ~2 ^ @r10 & @r13 & @r11 | @r11 >> +$teb <= @rbp + $teb & @rdx ^ @rsp >> @r10 >> $proc | @rbp << ~2 ^ @r10 & @r13 & @r11 | @r11 >> +$teb)  { test_statement(0x25D1); val = @r10 & @rdi & 2 | $thread & $buffer ^ 0y101 ; } else { test_statement(0x137); }
$error$
$end$
4765
 if (@r8 + @rbx >> @rax >> 0x8 | 0y1101 >> 17 >> @r9 | $buffer | $ip & -@rsp ^ $thread >< 0n9 >> 0y1111 << @rbp >> @rax >> @rsi & ~0n1 ^ @rsp << @rdx & @rdi >> @r10 & $proc & $teb ^ 0n9 & @r11)  { test_statement(0x307); }
$error$
$end$
4766
 if (@rsi + +@r12 >> +@rdi >> 0y1000 >> @r8 & @rax << 0n4((@rsi + +@r12 >> +@rdi >> 0y1000 >> @r8 & @rax << 0n4)  { test_statement(0x1B66);  if (@r8 & @r12 | @rax ^ 0n13 <= @r8 & @r12 | @rax ^ 0n13)  { test_statement(0x127A); }  break;  while  (14 ; 14)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rbp @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xFBD);  for (; @r12 ^ +@rbx ; $teb ^ @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4767
 if (-+@rax + @r13 ^ @r10 << @rax & $proc >> 0n4 ^ @rbx -+@rax + @r13 ^ @r10 << @rax & $proc >> 0n4 ^ @rbx)  { test_statement(0x61C);  while  (0n1 & @r9 | $thread == @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb << $buffer ^ $ip >> @rsp <= $teb << $buffer ^ $ip >> @rsp) { test_statement(0x25B4);  if (@r11 ^ @rsp | $proc >= 0n3 ^ 0y1110)  { test_statement(0x1939); } else { test_statement(0x1CC); } } elsif (@r9 >> @rdx & @rbp ; @r9 & $teb ^ 0n2 | @rsi & (@rsp)) { test_statement(0x1423);  for (val = 10; @rsi | @r12 > 12 | (@rax);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rbp ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax)0n18) ; }
$error$
$end$
4768
 if ($thread << $teb << @r11 >> $ip << @r13 & @rbx << @rbp & @rsp & @rdx >= $thread << $teb << @r11 >> $ip << @r13 & @rbx << @rbp & @rsp & @rdx)  { test_statement(0x20C0); ;  while  (((-@r11)) ; 4 ^ 0y10000)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11((@r11) { test_statement(0x1AD3);  /* This is a comment */  This is a not opened comment */ } elsif (@rbp & 0n13 ^ @rax & 13 ^ (0y10001) | @rdx & $buffer | -$buffer >= @rdx & @r8 & $teb) { test_statement(0x25EE);  // /* This is a comment   This is a not opened comment */ } elsif (+~@r10 ^ $ip((@r8 & @r8 ^ $proc ^ $teb) { test_statement(0xD1F); } else { test_statement(0x87B);  while  (0n8 | ~@rdx)0n8 | ~@rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
4769
 if (16 + $teb & +@r13 >> $thread >> @rdx & -@rsp >> $proc | @r10 >> @r9 >> @r11 ^ @rbx >> $thread | @r13 & $proc & @rax ^ @rsi & $proc)16 + $teb & +@r13 >> $thread >> @rdx & -@rsp >> $proc | @r10 >> @r9 >> @r11 ^ @rbx >> $thread | @r13 & $proc & @rax ^ @rsi & $proc)  { test_statement(0x1027); } elsif (11 >> 0x13 & @r12 11 >> 0x13 & @r12) { test_statement(0x2375);  This is a not opened comment */  while  (-@rbp <> -@rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0n7 = @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 ! @r8) ; } else { test_statement(0x2075); }
$error$
$end$
4770
 if (+0n6 + @r13 << 0n17 << @rbx >> $thread & 0n4 | (@rsp) >> @rsp != @r9 + $thread >> 7 & 0y111 << -$ip & +@rsp & $ip & +$buffer | @r11 << 7 >> @rsi >> @rax & @rsi & @r11)  { test_statement(0xE22); ;  while  (@r11 ^ @rbp ; $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0x6 >= 0x6)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4771
 if ($buffer ^ $thread << 0y10011 ^ 0y10000 | $teb << @rax ^ +@rbx & $thread == @rbx + $buffer << 0xD << @r13 >> @r12 >> +0y111 ^ @r12 >> (@r8) & @rax >> $teb ^ @r13 >> $thread ^ @r9)  { test_statement(0xA1E);  while  (@r8 | @r13 | @rax >= @r13 | $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4772
 if (@rsi + +0x10 << $proc & @rbx << ~@rsp >> $buffer >> $ip & 0y10011 >> +0n1 ^ @rdx & 16 >> $buffer & -0y10 & $teb | @rdi & @r11 & -~@rdx | @r13 >> @rbx <= +@r8 << $buffer & 0x0 << @r13 | (0x6) << ~4 & 0y1001 | @r12 >> @rsp & 0x13 & $proc ^ @rsi ^ @r10 ^ @r13)  { test_statement(0x1A62); } elsif (@r10 << $ip >> @rdi & @r10 >> @rsp ^ -@rbx(@r10 << $ip >> @rdi & @r10 >> @rsp ^ -@rbx) { test_statement(0xAD6); } else { test_statement(0x1558);  /* This is a comment */  /* This is a comment */ }
$error$
$end$
4773
 if (-@r11 ^ @r12 >> @rdx >< -@r11 ^ @r12 >> @rdx)  { test_statement(0xCD6); } elsif (+@rbp & @rbx >> 0x10 & 16 ^ -$teb & ~13 ^ @rdi & $teb <> $ip >> -@r10 & @rdx >> @r9) { test_statement(0x21B8); } else { test_statement(0x1518);  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
4774
 if (@rsi << @rbp & @r12 << @r11 <= @rsp + @rbp << @rdi << 22 & $ip << @rbx ^ 0x7 << 0x1 & ((@rsi)) | @r10 & $thread & @r10 | @r9 | 6 ^ +@rdx ^ @rbx | @rbx | @r8)  { test_statement(0x1142);  // /* This is a comment  } elsif ($proc << @r11 >> @rsp >> ~@rdi & @rax & @rbp == $proc << @r11 >> @rsp >> ~@rdi & @rax & @rbp) { test_statement(0x266F);  if ($proc ^ @r10 | @rdi > $proc ^ @r10 | @rdi)  { test_statement(0x2567); } } elsif (0n17 | 5 & 11 < 0n17 | 5 & 11) { test_statement(0xE58); ; }
$error$
$end$
4775
 if (@rdi + 2 & $teb << $ip | 0x7 << @r12 >> @rdx & @r8 & @r9 ^ -@r12 < $thread >> @rdx >> 0x1 >> (@r13))  { test_statement(0xF9F); } else { test_statement(0x1C04);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 < @r12 ^ @rsp) ; }
$error$
$end$
4776
 if ($teb ^ 0y1100 << $thread >> $buffer ^ $thread | -@r9)$teb ^ 0y1100 << $thread >> $buffer ^ $thread | -@r9)  { test_statement(0x601);  // /* This is a comment  } elsif (@rbx << @rsp & @rbp >> $thread & $buffer >= @rbx << @rsp & @rbp >> $thread & $buffer) { test_statement(0x158A); } elsif (@r8 >> @rsp ^ $teb & $proc ^ @rsi != +$teb ^ @r11 & @r11 | @rsi ^ $buffer ^ @rbp | @rsi ^ @r11) { test_statement(0x1F7D);  while  (0n17 != 0n17)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x3($proc) ; } elsif (0x4 >= @r12 & @r9 ^ @r9 ^ @rdx) { test_statement(0xD3A); val = @rbp | 0n5 ;  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y10010 > 0y100) ; } else { test_statement(0x28E); val = +@rdi & @rbx ; }
$error$
$end$
4777
 if (+~@rsi + $thread << -@r11 >> 0x0 ^ @rsp >> @rbp & @r10 >> @rsi ^ @r8 & $proc | (@rax) >> @rbx & $thread ^ @rdx >> -0n1 & (~@rbp) & @rsp ^ @rax ^ @rdi < +~@rsi + $thread << -@r11 >> 0x0 ^ @rsp >> @rbp & @r10 >> @rsi ^ @r8 & $proc | (@rax) >> @rbx & $thread ^ @rdx >> -0n1 & (~@rbp) & @rsp ^ @rax ^ @rdi)  { test_statement(0x18CD);  // /* This is a comment  } else { test_statement(0x1A5);  if (@rax | 0n6 <> @r12 | +@r12 | @r8)  { test_statement(0xCE0); } @rax = @r13 | $buffer ; ; }
$error$
$end$
4778
 if (0n0 << @rsi << @rdi ^ @rbp >> $thread >> (+0y1011) & @rax & 0n5 & @rsp | $buffer >> @rbp & 0y101 & @r13 > 0n0 << @rsi << @rdi ^ @rbp >> $thread >> (+0y1011) & @rax & 0n5 & @rsp | $buffer >> @rbp & 0y101 & @r13)  { test_statement(0x238F);  /* This is a comment */ } elsif (@rdx | @rax | +@rdi & @r8 ^ $proc(@rdx | @rax | +@rdi & @r8 ^ $proc) { test_statement(0x3B3); } elsif (@rdi & @r9 | @rsi < $proc >> @rdx | $proc ^ @rdi) { test_statement(0x78A); @rax = -@rdi | @rax | ($ip) ;  while  ($thread(($thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
4779
 if (@r11 + @r9 >> @rbp << @r10 != @r12 << 0n3 >> @r11 << @r10)  { test_statement(0xBAA);  break; } else { test_statement(0x632); }
$error$
$end$
4780
 if (@rsi << $proc >> $thread << @rax >> 21 & -@r9 << $proc >> 0y10011 & @rax >> -$thread & @rdi & +@r10 ^ 21 & -@r12 ^ $thread >> @r9 ^ @rdx & @rbx)@rsi << $proc >> $thread << @rax >> 21 & -@r9 << $proc >> 0y10011 & @rax >> -$thread & @rdi & +@r10 ^ 21 & -@r12 ^ $thread >> @r9 ^ @rdx & @rbx)  { test_statement(0x1E73); } elsif (@rsp & @r11 >> @rbx ^ @r13 ^ @rax != -@r11 ^ @rsp) { test_statement(0xAD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 ^ @rdx | -+0n6 = $teb | @r13) ;  /* This is a not closed comment }
$error$
$end$
4781
 if (0y100 + 0x8 >> @r9 & 0y1001 << $teb(@r9 >> @rbp << +$ip >> @rsp ^ @r11 << @rdx >> 0x11 & 0x1 ^ @r10 >> $teb | $proc << 0xE >> @r13 & @r8 ^ @r9 & @rsi & 0x1)  { test_statement(0xA85); } elsif (0x3 << 23 >> ~@rax & @rax ^ +0n5 & @r9 ^ 0y1010 & $buffer ^ @r13 ^ $buffer >= @r9) { test_statement(0x2047); } elsif (@r9 ^ +@r13 & $ip | @rbx & @rdi ^ @r12 ^ @r11 | +@rax ^ @r11 | 0n4 | $proc < 15 ^ 6 | 0y110 & @r11 | @rdi ^ ~~0y10001) { test_statement(0x211E); } else { test_statement(0x1DE6); }
$error$
$end$
4782
 if ($proc << @rsp & +-@rdi ^ (~@r12) << @r9 >> $proc >> @rbx & @rsp >> 5 & $proc ^ 0n3 | @r11 << @rbp & @rbx & @rbp ^ @rdi & $thread ^ @r8 ^ 2 ^ (-@rsp) <= $thread << @r12 << $thread >> -@rsi)  { test_statement(0x16FF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 ^ @rsp ^ ~@rax(~@rsi & @r9 ^ 20) ; } else { test_statement(0x1123); }
$error$
$end$
4783
 if (@rdx << -@rdx << @rdi >> @rbx & 0y1 << @r10 | (@r11) & @r11 & 23)@rdx << -@rdx << @rdi >> @rbx & 0y1 << @r10 | (@r11) & @r11 & 23)  { test_statement(0x6A3); } elsif (@rdi << $buffer ; $ip << @r8 ^ $thread & @rsp | @r13 & +~$proc | @rdi & ~$thread | 6 | @rbp | ($teb)) { test_statement(0x4AF); }
$error$
$end$
4784
 if (~@r12 << 5 << -@r12)+@r10 + @rbp << @r12 << @r9 >> $teb << @r9 >> @rsi >> 2 & @rsi << $thread & (@rbp) & @rsp & @r11 ^ (@rsi) ^ -@r9 & $ip & @rdx)  { test_statement(0x1F02);  // /* This is a comment   /* This is a not closed comment  This is a not opened comment */  if (@r11 <> $buffer)  { test_statement(0x7F8); } elsif ($thread >= $thread) { test_statement(0x4B0); } elsif (@r12 < @rdx) { test_statement(0x533); } else { test_statement(0x1430); } }
$error$
$end$
4785
 if (~12 >> @r8 << @rsp >> @rdi ^ 3 << @r10 >> @r12 & @rdi <= ~12 >> @r8 << @rsp >> @rdi ^ 3 << @r10 >> @r12 & @rdi)  { test_statement(0x1561); } elsif (0 << ~$thread ^ @r11 & @rbx & $proc >< ~0n16 << @rbx & @r13 ^ -@rsp >> @rdi ^ @r12 & $ip ^ @rax | @r13 ^ 0n8 & @rdx) { test_statement(0x15ED); ;  // /* This is a comment  } elsif ($thread >> @r9 & -+$proc((@rax >> @rbp & 0n12 ^ $proc | @r12) { test_statement(0xE78);  /* This is a not closed comment ;  // /* This is a comment   for (; $proc <> $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif (@rax & $teb | $buffer(-$proc & $teb ^ @rbx ^ @rdx) { test_statement(0x106F); }
$error$
$end$
4786
 if (0xE << @rsi >> @r12 << ~@r10 >> @rbp | $teb & ~-@r9 | @r8 ^ @r10 | @rbx | @r8 ^ @rsi))@r11 << 0x9 & @r10 >> @rsp >> -@rdx | @r8 >> @r8 >> 0 & @rbx & @r8 ^ @r11 >> @r11)  { test_statement(0x2247); } elsif (@rax < +@rbp << @rdi >> @rsi >> @r11) { test_statement(0xE94);  This is a not opened comment */  This is a not opened comment */ } elsif ($buffer >> -@rax & @r9 & @rdx | @rsi & $proc ^ ($proc) ^ @r8 | ~$buffer ^ 0x3 | -@rbp | $buffer(@rbx | @rbx ^ (4) ^ $ip) { test_statement(0x165D); } elsif (@r11 = @r9 & $thread ^ 0 ^ @r10 | 1 ^ @r8 | $buffer) { test_statement(0x23AA); } elsif ($proc > +@rbp) { test_statement(0x23F4); }
$error$
$end$
4787
 if (@r9 << 0n12 << @r9 & @r12 << 6 & @rdi & @rbx ^ $teb << 0y11 >> @r10 ; @r13 >> $buffer >> -0y10011 & 0n15 << @r10 & +0y1100 >> $buffer ^ @r12 << $thread & @rbp & @rsi & @r12)  { test_statement(0x12F4); } elsif (3 << $teb ^ @r8 >> $thread >< 3 << $teb ^ @r8 >> $thread) { test_statement(0x935);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 ^ @r10 | @r8 >< @r12) ;  break; } elsif ($ip >= $ip ^ @rsp ^ 0n4 ^ $buffer) { test_statement(0x255A); } else { test_statement(0x1BE2); }
$error$
$end$
4788
 if (@rsp >> @r9 << (@r12) ^ 0n3 << $buffer & 14 >> @r10 ^ @r9 >> $buffer & @rbp | @r9 >> --(@r8) ^ @r8 & $buffer & $proc | @r12 >> 2 | +$teb & 1 ^ @r11 ^ @rsi = @r12 + -0y111 >> $proc << -@rbx >> 0n14 & +@rbp << @rax >> @r13 >> $ip ^ 0xA >> @rdx & @r11 >> (@rdi))  { test_statement(0x880);  break; } else { test_statement(0x733);  while  ($thread | @rax | 0y10 >= $thread | @rax | 0y10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4789
 if (0x1 + $proc << @rbp & $proc >> $ip >> 0xA ^ @r12 << $proc ^ @r10 >> 21 = @r13 << @r10 << +1 & @r12 << @r9 & 0y10 >> @r9 & $proc & 0y1101)  { test_statement(0x1277); } elsif (@rdi << @rdx >> 17 >> @rdx ^ +@rax ^ 0y10 & @rbp | 16 >> @r10)@rdi << @rdx >> 17 >> @rdx ^ +@rax ^ 0y10 & @rbp | 16 >> @r10) { test_statement(0x3F2); } else { test_statement(0x439); }
$error$
$end$
4790
 if (@r13 << $proc ^ $buffer << $buffer ^ @rbx & 0n1 ^ $buffer | @rax << @r10 >> 0n17 & 0n6 >> $proc & @r12 & $proc > $proc + @rax >> 0n13 << @rdi ^ @rdx << @r13 >> @rbp >> @r8)  { test_statement(0x99D); } else { test_statement(0x1F11);  This is a not opened comment */ }
$error$
$end$
4791
 if ($buffer + 0y10001 << @rsi << 0n13 & @r8 << @rdx >> ($ip) >> @r12 == 0x7 + @r8 >> 0y1000 << @r13 >> $teb >> $ip & ~@rsp << @rax >> $proc >> @rsp & @rsp & @rbp)  { test_statement(0x1E99);  if (@rsi & @rdi <= @r10 & -@rsp)  { test_statement(0xE65); } elsif (@r11 <= $buffer ^ ~0y0) { test_statement(0x25C7); } elsif (@rbp | @r13 <= $buffer) { test_statement(0x1CC7); } elsif (@rax)@rax) { test_statement(0x10AF); } elsif (+@rdi ! @r9) { test_statement(0x1059); } } elsif (0x7 0x7 & $proc >> @r12 & @r11 & $buffer ^ @rsp >> $ip & @rdx & @rbx) { test_statement(0xB5);  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
4792
 if ($proc + $thread << -@r8 >> 12 | @rbx << @r10 >> (@rbp) & @r12 | $thread & $buffer | +@rdx ^ @rbp ^ 0y100((@r8 + 10 << 0n6 >> @rbx ^ @r10 & $thread & 12 & @rbx)  { test_statement(0x265); } else { test_statement(0x867);  break; }
$error$
$end$
4793
 if (@r13 & @rdi & @rdi >> $thread & @r11 & @rbx ^ 0n19 << @r9 & $proc ^ 0x3 >> @r11 <= @rbp + @r12 << 0y1111 << @rsp >> $thread >> 0xE & @r8 >> @rbx & @r10 & @rax & @rdx ^ @r9 & $buffer ^ @r9 >> 0n12 ^ @rdi)  { test_statement(0xF3A); } else { test_statement(0xCE6); }
$error$
$end$
4794
 if (@rsi << +3 << @rdi & @r12 = @rdx << @r9 ^ 0n13 << 0xA >> @rsi >> @rdx ^ @rsp | @r12 << 0y110 >> $buffer >> @r10 & $proc & 0n13 & 15)  { test_statement(0x136); }
$error$
$end$
4795
 if (0y1010 + $thread << @rsp >> ~@rbp << -@r13 | $teb << @r12 >> @r9 >> @rbx & @rsp ^ -@r9 ^ @r10((11 + @r9 << @r9 >> @rsi << 0n9 >> @r11 & @rdx << @r10 >> 3 ^ @rdi << -@rax >> ~~$thread & @r9 & @r9 | +@r10 | $thread ^ @r10 & +-$buffer ^ $teb ^ $ip)  { test_statement(0x223); } elsif ($buffer & @r8 >> @r13 & -@r13 & 0y1 <> $thread << $ip & ((@r13)) >> @r13) { test_statement(0xE2D);  /* This is a comment */  while  (@r9 | @r10 ; $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1678); }
$error$
$end$
4796
 if (@rdi >> (0x13) << @r8 != @r13 + @rsp)  { test_statement(0x1C8E); } elsif (@r8 << $thread >> @rbp ^ 23 >> @r12 <> @rdi >> 17 >> $ip ^ -0n6 >> @rbp & $buffer ^ @rbp & $ip ^ @r9 | 0y1 >> $proc | @r8 & $proc ^ @rdx) { test_statement(0x6C5);  /* This is a comment */  /* This is a comment */ } else { test_statement(0x1603);  This is a not opened comment */  while  ($proc != $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
4797
 if ($thread + @r8 & -@rsi << 0n6 & 0n17 >> ++$proc & +$buffer & @rbp | 0xA ^ @rsp ; $thread + @r8 & -@rsi << 0n6 & 0n17 >> ++$proc & +$buffer & @rbp | 0xA ^ @rsp)  { test_statement(0x1497); } elsif (@r11 >> $ip & @rsi >> @rax ^ @r9 >> @r12 & -@r12 & ~$buffer ^ @r13 ^ @r11 | @r12 >> @rsi & @r10 & +@rax ^ $buffer & 0y100 ^ 0n3 | @rdx | @rbx ^ $proc | @rsi | (@r10))-$buffer << 13 & @r13 ^ @r12) { test_statement(0x9EA);  This is a not opened comment */ }
$error$
$end$
4798
 if (@r9 << @rbp ^ @r8 << (@rsi) >> ~$buffer & ~@rdx(@r9 << @rbp ^ @r8 << (@rsi) >> ~$buffer & ~@rdx)  { test_statement(0x2614); } elsif ((0x8) >> @r11 >> @rdx != (0x8) >> @r11 >> @rdx) { test_statement(0x2462); } elsif ($teb & 23 & @rbx((@rdi >> ~0n7 & @r13) { test_statement(0x1FB3);  for (val = 10; @rsp ; +0y101 | -@rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4799
 if (@r10 + @r9 >> $ip << 0n15 & @r13)+-$thread >> @r10 << @rdi & $ip >> @r12 >> @rbx & @r12 & @rdx)  { test_statement(0x24F2);  if (@r8 & @r10 ! @r12)  { test_statement(0x15CC); } elsif (@r9 | @r13 ; $thread | +@rbx | @r13) { test_statement(0x950); }  if (@rdi | @rdi ; 0x2 | 0n6 | $thread)  { test_statement(0x1B49); } elsif ($teb | ~@rbx(($teb) { test_statement(0xCDB); } } elsif (@rdi & @rdi & @rdx ^ @rbp ^ $teb >= 0y10 << $teb >> $proc & @r13 >> @r9 & @rsi & @r10 ^ @rdx >> @rax & 0y110) { test_statement(0x246D);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp <> @rsp) ; } else { test_statement(0x610); }
$error$
$end$
4800
 if (@r11 + @r10 & @r13 << 6 >> @r12 & +$teb >> @rbx & $buffer ^ $thread << @r13 >> @r13 >> @rbp & @rdi >> @rsi & @rbx == $ip + ~@rdx >> $proc << 0n6 >> @r12 >> $proc ^ ~-$ip >> @r9 >> ~@rbp & ~@r11 >> ~~@r9 & $teb & @r9 ^ @rax >> @rsp & @r12 & @rdi ^ @rax)  { test_statement(0x15E6);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc | +$thread | 0y1101 != @rdx ^ @rbx | $buffer) ;  if (@rax <> @rdx | @rdi)  { test_statement(0x1998); } elsif (@rsi ! @r10) { test_statement(0x266D); } } elsif (@r11 >> @rax & $ip <= @rsi & -($proc)) { test_statement(0x1993); } elsif (-0x0 ^ @rbp ^ @r8 | @rax >= @r12 >> 0x6 ^ $ip ^ @r11 ^ $proc) { test_statement(0x20C2); } else { test_statement(0x22F8); }
$error$
$end$
4801
 if (~@r13 + $buffer << 0x5 >> @r13 ^ 0x2 << 0y1111 & @r11 >> 23 | ~0x12 << @r8 & @rsi >> $teb & @rdx | 0n3 ^ @r8 ^ @rsi ^ +@rax ~@r13 + $buffer << 0x5 >> @r13 ^ 0x2 << 0y1111 & @r11 >> 23 | ~0x12 << @r8 & @rsi >> $teb & @rdx | 0n3 ^ @r8 ^ @rsi ^ +@rax)  { test_statement(0x22F7); } elsif ($buffer & $thread >> @rbp & 6((@rdx << $proc & $thread >> $thread ^ +14) { test_statement(0x10F6);  /* This is a not closed comment } elsif (@r10 >> $teb ^ $proc | @r12 | $ip ^ $thread >< @r10 >> $teb ^ $proc | @r12 | $ip ^ $thread) { test_statement(0x2624); } elsif (0x0 & @r8 ^ @rbp ^ @r11 | @r9 | $ip != 0x0 & @r8 ^ @rbp ^ @r11 | @r9 | $ip) { test_statement(0x136A);  break; }
$error$
$end$
4802
 if (0x1 + 11 ^ @rdx << $buffer >> @rbx >> @rbx & @rdx & @r13 <> 0x1 + 11 ^ @rdx << $buffer >> @rbx >> @rbx & @rdx & @r13)  { test_statement(0x24F5);  break;  for (@rax = @rsp ^ @rbx | @rbx; 0n1 | ~@r12 | $thread <= 0n1 | ~@r12 | $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb >> @r8 >> 0y1010 >< +@r12 >> @rbx >> @r13 & $buffer >> -@r9 ^ ~$thread >> @r8 | ~@rbx >> +@r8 & @rax & @rsp) { test_statement(0x14A6);  /* This is a not closed comment @rax = (@rax) ^ @rdi | 0y1100 | @r8 ; } elsif (@rsp & +$buffer & @rbx ^ @rdi | @rbp | 0n7 == @rsp & +$buffer & @rbx ^ @rdi | @rbp | 0n7) { test_statement(0x23FD);  while  ($thread | $buffer = @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer & 14 <> $buffer & 14) { test_statement(0x252F);  while  ($buffer < $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0 | $thread == @rbp | @r8) { test_statement(0x18F3); } else { test_statement(0x11B6); }
$error$
$end$
4803
 if ((@r11) + $thread << 0y101 >> (@rsp) << @r11 ^ 23 >> $proc >> @r8 ^ @r11 & @rbp | -@rdi >> ~@r9 >> ~0n14 | @rdi & $buffer & $proc | @rsp))(@r11) + $thread << 0y101 >> (@rsp) << @r11 ^ 23 >> $proc >> @r8 ^ @r11 & @rbp | -@rdi >> ~@r9 >> ~0n14 | @rdi & $buffer & $proc | @rsp)  { test_statement(0x20);  while  (-(@rsi) ^ @r10 | @r9 ^ @r9 | @rsp | 0y11 >< -(@rsi) ^ @r10 | @r9 ^ @r9 | @rsp | 0y11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  if ($thread | +@rbp)@rsi | 20)  { test_statement(0x1D03); } } elsif (@rbx & @rbx >> @rax & @rsp ^ @rax >> 0x4 & $ip | $ip & @rsi))@r10 >> ~$ip >> @r9 | @r8) { test_statement(0x1AE0); } elsif (@r10 & @r12 & $thread >= @rbx | @rbx ^ @rdi ^ @rsp) { test_statement(0x16A0); } elsif (@r12)+@r8 & $ip | $proc ^ $buffer | $ip) { test_statement(0xA06); } else { test_statement(0xFB0); }
$error$
$end$
4804
 if (@r10 + $teb << $buffer & @r9 >> @rdx & @rdi & 0x2 ^ 0xD & @rdi >> 2)@r10 + $teb << $buffer & @r9 >> @rdx & @rdi & 0x2 ^ 0xD & @rdi >> 2)  { test_statement(0x3F9);  for (val = 10; 0y1110 | @r12 < 15 & @rbp ^ @rbp ^ @rdi | 0n4;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
4805
 if (+~@rsi + @r9 << $thread << @r11 != 0n7 + 0n3 ^ @r13 & @r10 >> $teb)  { test_statement(0xF79); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ^ @rdi | 0x10(@rbp ^ @rdi | 0x10) ; } elsif ($buffer << $proc & @r13 & @rbp | -$proc >< $buffer << $proc & @r13 & @rbp | -$proc) { test_statement(0x17FA);  if ($thread ^ $buffer >= @rdx)  { test_statement(0x239C); } val = @rdi ^ +@r12 | $proc ; @rax = $thread ; } elsif (~@rax | ~@rdi & @r9 ^ @r9 ^ $buffer >< @rsi & +$ip & -$proc) { test_statement(0xA61); @rax = @r11 ^ 15 ;  /* This is a not closed comment }
$error$
$end$
4806
 if (@r11 << $thread >> @rbp << 0n14 >> @r13 ^ @r13 >> @rbp >> @r11 & 0y1111 & 0n5)$buffer + @r8 >> 0n1 << -@rbp >> 0xE & 0y1111 << @r10 >> @rbx >> @r11 & $teb & $proc ^ $teb << @rsp & -@r11 | +@rax & $teb | @r8)  { test_statement(0x21F1); }
$error$
$end$
4807
 if (@r11 + @rdi >> 0y111 << @r12 >> @r10))@r11 + @rdi >> 0y111 << @r12 >> @r10)  { test_statement(0x1F16); } elsif (@r10 | @rsp >> @r11((@rdx) << $thread >> @r12 >> @r10 & @rdi) { test_statement(0x17B1); } elsif (0n11 | ~@r12 ^ 0x8 ^ ~$teb | @rdx ^ @rbp < @rsi | $ip & $proc | 0y10) { test_statement(0x1F6F); } elsif (@rdx & @rsi ^ @r12 ^ 0y11 | 0x11 ^ @r9 | $proc | @r8 >= $thread ^ @r13 ^ @r10) { test_statement(0xC5F); } elsif (+($teb) ^ --~@r9 | ~@rbx < $ip) { test_statement(0x342);  /* This is a not closed comment } else { test_statement(0x148D); }
$error$
$end$
4808
 if (@r13 << @rbp << @rsp >> $ip >> 2 >> $buffer & @r13 << @rax >> $proc & @rax != @r13 << @rbp << @rsp >> $ip >> 2 >> $buffer & @r13 << @rax >> $proc & @rax)  { test_statement(0x23AD); val = @rbp & $proc & @r8 | 0n10 ;  // /* This is a comment   /* This is a not closed comment } elsif (+@rdi & 0x4 >> +-@r8 & -$thread & @rdi ^ @rax = +@rdi & 0x4 >> +-@r8 & -$thread & @rdi ^ @rax) { test_statement(0x2034);  while  ($proc ^ @rsp | ++0xD != $proc ^ @rsp | ++0xD)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  // /* This is a comment  } elsif (@r13 >> 12 & $thread | $teb ^ @rbx ^ $thread ! @r11 >> +@rdi & @r10 ^ @rsi & $thread ^ @rdx | @rbp) { test_statement(0x1C30); }
$error$
$end$
4809
 if (0y100 + @rbp >> $thread << $ip < @r13 << @r10 & $ip << 0xF ^ $ip << @r13 ^ @r11 ^ @rbp & @r11 ^ @rax ^ @r13 | 0n0 & @rdi >> @rdi | @r12 >> @r8 & @r8 & @rsi)  { test_statement(0x1C7); } elsif (0x10 << @r8 >> ~@r13 >> 0y1110 & ~-$teb >> 0x12 | +@r13 >> $buffer))0n16 >> @r10 & @rsi >> $ip ^ $ip & $teb ^ -$proc & @r12 | 0x0 >> @rdx & 0n7 ^ @r12 ^ @rsp | $ip | $thread | @r8 | -@rdi) { test_statement(0x18A2);  if (@r13 ^ @rbx | 22 | -~-$ip <> @r13 ^ @rbx | 22 | -~-$ip)  { test_statement(0x2687); } elsif (@r9 <= @r9) { test_statement(0xE3C); } } else { test_statement(0x1968);  // /* This is a comment  }
$error$
$end$
4810
 if (@rsi << 0y100 << @rsi == @rsi << 0y100 << @rsi)  { test_statement(0x16B6);  break; } elsif (@rdi >> $ip >> @r10 & 0n12 & @r9 & ~@rdx == ~@r10 << @rsi >> @r12 >> @r13 | @rdx & @rdx | @rbp & @rbx | 0x9 ^ @rsp | @rsi | +$proc) { test_statement(0x1E15); @rax = @rax & 0n6 | $teb ; } else { test_statement(0xE4A);  if (@r12 >< @r12)  { test_statement(0x25A7); } else { test_statement(0x20A8); }  if (@rdi | -@rsi = (@rdi) | -@r10)  { test_statement(0x17F6); } else { test_statement(0x143C); }  This is a not opened comment */  /* This is a not closed comment }
$error$
$end$
4811
 if (@rsp << @rbx | @r10 & @rdi ^ 0x1 >> @r8 & @r8 | $teb ^ ~@rbx ^ ($buffer) ^ @rdi >< @rsp << @rbx | @r10 & @rdi ^ 0x1 >> @r8 & @r8 | $teb ^ ~@rbx ^ ($buffer) ^ @rdi)  { test_statement(0x1DCD); @rax = +@rsi ^ ~@rdx ^ +@rax | $ip & @rdx ^ $teb ^ ~16 ; }
$error$
$end$
4812
 if ($ip + $teb << +@rbp << @r13 >> $buffer >> 1 >> @r10 & @r13 << -@r9 & ~@r8 = @rbp >> $ip >> 0x1 >> @r11 ^ $thread >> @r10 & @r9 >> 0n19 & 0x3 ^ @rsp >> (@rsi) ^ @r13)  { test_statement(0x77A);  /* This is a not closed comment  break;  while  (--@rsi | @rsi <> @rbp | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } else { test_statement(0xA4A); @rax = $proc & 5 ^ @r9 ^ @rbp ;  /* This is a comment */ }
$error$
$end$
4813
 if (@rdi + ~@r13 << 15 << 4 & 0xD << @rbp & ~@rbx >> @r11 & 0y1011 ^ $buffer << $ip ^ $thread & -@rsp & $ip ^ @r9 ^ +-0y111 ^ $ip((@rdi + ~@r13 << 15 << 4 & 0xD << @rbp & ~@rbx >> @r11 & 0y1011 ^ $buffer << $ip ^ $thread & -@rsp & $ip ^ @r9 ^ +-0y111 ^ $ip)  { test_statement(0x2258); } elsif (@r9 << 0y10011 & $proc >> 15 & @rbx ^ @r9 & -0y10001 | 4 ^ @rsp & $buffer ^ @r8 | @r9 ^ @rbp ^ $thread ! 0y10010 << @rbx) { test_statement(0xDFB);  /* This is a not closed comment }
$error$
$end$
4814
 if (@rax << 0n12 << @rsp >> @rsi == $proc + @r9 >> +@r10 << 0xA & @r9 >> @r10 >> 21 & @r8 & @r10 & (@r8) ^ $buffer << @r13 >> @r12 >> ~@rdi & @rdx >> @r13 & (@r11) & $buffer)  { test_statement(0x2436); ; ;  while  (@rsi ; $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x2 <= @r8) ;  /* This is a comment */  // /* This is a comment  } else { test_statement(0xACB);  while  (0y1100 ^ $proc | @r12 ! ~@rbp ^ @r13 | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4815
 if (($proc) + $ip >> @r11 & @rdx << $buffer & @r12 ^ $buffer << $ip ^ @r9 >> $teb & -$proc & @r9 ^ $thread ^ @r9 ^ $thread > (@rbp) >> +$teb | @r8 << 0y100 >> @rdx & $proc)  { test_statement(0x468); } elsif (@rsp << @r11 >> @rdi & @r13 >> @r8 | $buffer >> 1 | @r9 & 0xD ^ (@rdi) ^ @rax | @rdx ^ @rdi == @rsp << @r11 >> @rdi & @r13 >> @r8 | $buffer >> 1 | @r9 & 0xD ^ (@rdi) ^ @rax | @rdx ^ @rdi) { test_statement(0xCF7); } else { test_statement(0x9AF); }
$error$
$end$
4816
 if (@rsi + $teb ^ @rbp << 0y1100 & @r10 >> @rsp | @rbp ^ 7 >> -0x4 & 0n1)@rsi + $teb ^ @rbp << 0y1100 & @r10 >> @rsp | @rbp ^ 7 >> -0x4 & 0n1)  { test_statement(0xB8B); } elsif (@rbp << ($proc) >> $ip >> $ip & (@r10) & $ip ^ $teb ^ $proc ^ @rbp | $buffer & @rdx & @r8 | 0xA ^ $thread = @rbp << ($proc) >> $ip >> $ip & (@r10) & $ip ^ $teb ^ $proc ^ @rbp | $buffer & @rdx & @r8 | 0xA ^ $thread) { test_statement(0x7AE); }
$error$
$end$
4817
 if (~@rdx << -@r13 | @r11 >> $buffer & @r8 >> 3 & $teb | @rsp >> @r12 | @rbx & +$teb ^ 4((~@rdx << -@r13 | @r11 >> $buffer & @r8 >> 3 & $teb | @rsp >> @r12 | @rbx & +$teb ^ 4)  { test_statement(0x171A);  while  (-@rax | @rdx ^ @r13 | @rdx | @rsi >< -@rax | @rdx ^ @r13 | @rdx | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp << 0x3 >> 12 > @rsp << 0x3 >> 12) { test_statement(0x10BF); } elsif ($thread | 13 ^ @rsi <= @rdx & @r12 & (@r12) ^ @rax ^ $proc ^ $teb) { test_statement(0x1A40); } elsif (+$thread ^ $proc | $ip))$buffer ^ $proc ^ @r9) { test_statement(0x1DC9); val = $thread | @rsi ; } elsif (@rbx)@rbx) { test_statement(0x19F3); } elsif (@rbp | @rdi <= $buffer) { test_statement(0x13CA);  for (; @r9 @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12 < $buffer) { test_statement(0x1172);  /* This is a not closed comment } elsif (@r13)@rsi) { test_statement(0x1C59); }
$error$
$end$
4818
 if (@rbp & 0x1 << @r12 >> 0n13 & $thread >> @r8 & @rdx ^ @r12 << 17 & -$buffer >> @rbx | $proc << @rbx & $buffer >> @rsp ^ @rsi ! @rbp & 0x1 << @r12 >> 0n13 & $thread >> @r8 & @rdx ^ @r12 << 17 & -$buffer >> @rbx | $proc << @rbx & $buffer >> @rsp ^ @rsi)  { test_statement(0xAFB); } elsif (@r11 = 0y10011 >> @r8) { test_statement(0x81D);  /* This is a comment */ } elsif (@rbx & +--$teb ^ @rdx & 0x12 ^ @rsi ^ @r10 | $ip & $buffer <> @rbx & +--$teb ^ @rdx & 0x12 ^ @rsi ^ @r10 | $ip & $buffer) { test_statement(0xF32);  // /* This is a comment   /* This is a not closed comment } elsif (@r12 ^ @rax ^ ~@rdx != @r12 ^ @rax ^ ~@rdx) { test_statement(0xC31); } elsif (~0y110 | 0y1111 <= @r11 ^ @rsp) { test_statement(0x1AEA);  This is a not opened comment */ } elsif ($teb | 0x2 >= $proc | $thread) { test_statement(0xF9);  // /* This is a comment  } elsif (@rax != $ip) { test_statement(0x137C);  /* This is a not closed comment }
$error$
$end$
4819
 if ((+@rbp) + @r8 << @rdx << @rsp & @rax << @r13 >> @r10 & 0x0 & @rdx & @r11 <> (+@rbp) + @r8 << @rdx << @rsp & @rax << @r13 >> @r10 & 0x0 & @rdx & @r11)  { test_statement(0xA25); } else { test_statement(0x1149);  for (; +@r8 ^ @r9 | $ip | 0y1 == @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4820
 if (@rdx >> @rsi << @rax >> +@r10 ^ 0x11 << 0x5 ^ @rdi >> @r12 & @rsp | 1 << 0x0 | $thread ^ $proc & $buffer ^ @rdx | $teb & -+@r12)@rdx >> @rsi << @rax >> +@r10 ^ 0x11 << 0x5 ^ @rdi >> @r12 & @rsp | 1 << 0x0 | $thread ^ $proc & $buffer ^ @rdx | $teb & -+@r12)  { test_statement(0xB52);  // /* This is a comment  }
$error$
$end$
4821
 if (@r11 << +@r10 >> ~0y110 & 0y1001 >> @rdx & @r13 >> @rbp & @r11 & 23 | 0x2 << @rsp >> @r8 ^ $thread & @rsp ^ 0x5 >< @r11 << +@r10 >> ~0y110 & 0y1001 >> @rdx & @r13 >> @rbp & @r11 & 23 | 0x2 << @rsp >> @r8 ^ $thread & @rsp ^ 0x5)  { test_statement(0xD1F); } elsif (23 << ~@rbp >> $ip | @r9 >> @rdx | ~@rbx & @rax ^ 0y10000 23 << ~@rbp >> $ip | @r9 >> @rdx | ~@rbx & @rax ^ 0y10000) { test_statement(0x189E); }
$error$
$end$
4822
 if (@rbp + @rbx << @r9 & @r13 << ($proc) & @r11 & @rsi & @rdi ^ @rsp | @rbp << +0xC >> @r8 & @r10((16 >> ~0n15 >> @rsp >> @r10 | $thread << $teb ^ -+@r9 >> @r13 ^ -@r9 | (@rsi) >> @rax ^ @rax & $ip ^ @rbp)  { test_statement(0x3B6);  break; } elsif (@rbp >> @r11 >> 0x2 & @rbx >> @rdi = @rbp >> @r11 >> 0x2 & @rbx >> @rdi) { test_statement(0x6A5); } elsif (@rsp & $ip & 0y100 ^ @r13 ^ $teb ^ @rsi))@rsp >> ~@rsi ^ $buffer & $buffer ^ 0x8 | $proc & @rsi ^ @r12 ^ $thread) { test_statement(0x16C9); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip(@r11) ; @rax = @r12 ; @rax = 0n19 ; } else { test_statement(0x117A); }
$error$
$end$
4823
 if (@r8 + $buffer | @r10 & @r13 & @r8 & -$ip ^ -@r11 >> @rsi ^ @rbp & +0y10001 ^ @r8 ^ @r12(0n12 + -@rdx | @rdx | @r13 & $teb ^ 2 ^ @rdi ^ 0n14)  { test_statement(0x17AF); }
$error$
$end$
4824
 if (@r12 >> $buffer << ~@rdi | 0n11 << $proc ^ @r11 >> 0y10001 & -$ip & $teb ^ 0y1010 & -@r10 ^ 10 >= @r12 >> $buffer << ~@rdi | 0n11 << $proc ^ @r11 >> 0y10001 & -$ip & $teb ^ 0y1010 & -@r10 ^ 10)  { test_statement(0xBBB);  /* This is a comment */  /* This is a comment */ } elsif (12 >> -@rbx >> @rbp & @rdi >> @r9 & @r13 ! 12 >> -@rbx >> @rbp & @rdi >> @r9 & @r13) { test_statement(0x2600); } elsif (@r8 ^ @rax & @rsp | 0n5 & @r9)0y100 >> +@r8 & @rbp ^ $proc & $thread ^ -@rdx ^ -+@r13) { test_statement(0x54E); } elsif ($ip ^ @rsi ; $ip ^ @rsi) { test_statement(0x20FA);  while  (@r12 <> @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (20 ^ 0n2 | $teb | $ip))$proc ^ (@r9)) { test_statement(0x21DC); } else { test_statement(0x1690); }
$error$
$end$
4825
 if (@rbp | @rbx | $buffer & $thread & (@r12) >= @r10 << 0n0 << $proc >> -@r13 & 0 >> @r8 & @r13 >> @rbp ^ @r11 << (@rdx) >> $proc | @rax & @rdi >> @r10)  { test_statement(0x237F); } else { test_statement(0x224E);  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 == @rax) ; }
$error$
$end$
4826
 if ($proc & @r10 << @rbp >> @rbx >> @rax != @r12 << $buffer << $proc ^ $thread & @rbx & @r11 ^ @r8 >> ~0y11 & @rax ^ @rax ^ @rdx ^ (~@rbp))  { test_statement(0x57D); }
$error$
$end$
4827
 if (@rdx + @rbx ^ @rax << $buffer | 0y1111 << @rax | @r10 >> @rbp & ~(0y0) & @rdx >< ~@rdi << 0x10 << @rsp)  { test_statement(0x9FD); } elsif (@rdx ^ @rbx ^ 0n5 ^ @r13 ! @r8 & @rax & @r9 & @rsp ^ $proc & 6) { test_statement(0x50F);  while  ((@rbp) | $proc | @r11 = @rax | -22)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  break; val = @r9 ; } else { test_statement(0x700); }
$error$
$end$
4828
 if (0x8 >> @rbp ^ @rdx << @rsp >> 0y100 | ~@r9 << $ip & $ip ^ 0y110 ^ -0xE | 0y110 ^ @r8 @rbx + @rsp & @rdx << @rsi >> 0x10 >> @rdi ^ @rdi >> @r13 >> $ip)  { test_statement(0x5F4); } elsif (@r8 << @rbx >> $buffer >> @rbx ^ 0y1110 | (@r9) >> @rdi & @rbp ^ @rdi <> +($proc) << 0y10010 & @rsp | @r12 >> @rbx) { test_statement(0x105C); } else { test_statement(0xFE3);  break;  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0xD ! @r13) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 > (0x8)) ; ;  This is a not opened comment */ val = @r9 ; }
$error$
$end$
4829
 if (@r9 + @rbp >> ~(@rdi) & $buffer << 0n9 >> @r9 ^ @rdx & ((~0n9)) & @r9 & @rsp ^ 0n15 & @r8 ^ --$thread & ~@r13 < @rsi + $thread >> $teb << 13 & @rdi << $proc)  { test_statement(0x16A2); } else { test_statement(0x25F6); }
$error$
$end$
4830
 if (@rsi << 0x5 == $ip << @r9 << @r9 ^ $proc << $thread & @rsi & @r8 ^ 0x6 >> @r8 ^ @rsi & @r8 ^ @r9 ^ @r10 | @rax >> 0n6 >> @r10 ^ @rsi & @rax & @rbp ^ $buffer & @rsi)  { test_statement(0x1CCE);  /* This is a comment */  // /* This is a comment  }
$error$
$end$
4831
 if (@rbx & $buffer & ~@r8 & $thread & @r10 <> @rbx & $buffer & ~@r8 & $thread & @r10)  { test_statement(0x4C2); }
$error$
$end$
4832
 if (@rsi + 0y1011 ^ $ip << +@r13 >> -@r8 >> (~@rsi) ^ @r12 >> @r8 ^ $thread))(@r8) + @rax >> @r13 << 0n8 & 0n17 << @r9 >> @r13 >> $buffer & @r13 & @r9 & @rdx | $teb << $ip >> 0y1100 >> -@r10 & 0y100 | -@r11 & @r10)  { test_statement(0x24B6); ; }
$error$
$end$
4833
 if (@r11 + @rbx ^ @r10 ^ @r12 >> @rdx >= @r11 + @rbx ^ @r10 ^ @r12 >> @rdx)  { test_statement(0xA90); }
$error$
$end$
4834
 if (+$ip << @r13 << ~(@rax) >> $teb & @rax << $teb | @r11 >> 0x8 >> +@r11 ^ $teb ^ ($teb) ^ 0x1 | @rdx ^ @rsi(($thread + @r13 << @r12 << $proc ^ @rsi ^ @rbx >> ~0y1101 ^ @rbp & @r12 | -@r12 << +@rdx ^ @rsi >> @rdx & $proc)  { test_statement(0x200D);  for (; @r8 | @r12 21 ^ @r9 | +14 ^ @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4835
 if (@rdi >> @r8 & @rsp & 7 >> @rax <= (-@rdi) + @r12 >> @rdi << (~@rax) | @r10 & @rdi & 0x9 & +@r8 ^ $thread)  { test_statement(0xED3);  for (val = 10; @rbx & @rbx ^ @r10 ^ @rbp ! @rbx & @rbx ^ @r10 ^ @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4836
 if (($buffer) << @rdi >> $buffer >> $buffer >> $ip ! @r12 << @r13 >> 21 >> @rax & @r10)  { test_statement(0x25E0); } elsif (0y10011 << $buffer & @rax & @rdx ^ 4 >> +@rdi ^ @r11 & @rdx ; 0n9 << @rax >> @r13 ^ @rdi & @r10 & $ip ^ @rbp & ~0n18) { test_statement(0x20B5); } elsif (@rdi | (@rdi) ^ @rdi = @rdi | (@rdi) ^ @rdi) { test_statement(0x2027);  while  ((+-$thread) = 0xC | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 ^ @r8 | ~@rax | @rdx | @r13((@r8 ^ @r8 | ~@rax | @rdx | @r13) { test_statement(0xE0);  for (; @r8(@rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   for (; @rax <> @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  // /* This is a comment  } elsif ((0y1100) ^ ~@rsi | @rax))@rsp ^ @r13 | 0n2) { test_statement(0x226); } else { test_statement(0x1C6A); }
$error$
$end$
4837
 if ($buffer << @r11 | ~@r11 << $thread < ($teb) >> ~+0n16 >> ~@r13 >> @rbp & @rax ^ 0x1 & @rax & +0n10)  { test_statement(0xC67); } elsif ($thread << $buffer <= $thread << $buffer) { test_statement(0x1024);  for (val = 10; $thread ^ @rax > $thread ^ @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4838
 if ($proc >> $ip >> 0n4 ^ (0y0) >> $teb ^ @rax & 0y0 & (0y1)($proc >> $ip >> 0n4 ^ (0y0) >> $teb ^ @rax & 0y0 & (0y1))  { test_statement(0xA3D); } else { test_statement(0x1639);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~+@r8 <= ~+@r8) ;  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8((@r8) ;  while  (@r12 >= ~7)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4839
 if (~@r11 << $ip << @r12 >> @r10 ^ @r8 << 2 & @rbp >> 0n5 & +@rax ^ @r10 & @rbp))@rdi & $buffer << @r10 >> 14 >> @rbx & $teb >> $buffer)  { test_statement(0x1545);  break; @rax = $buffer ^ $teb ^ @rsp ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 ! 0xB | $buffer) ; } else { test_statement(0x25E7);  // /* This is a comment  ;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10)@r13) ; }
$error$
$end$
4840
 if (0n0 + $buffer >> ~@r13 << @rbx >> ($thread) >> @rsi | @r9 >> @rbx >> $buffer ^ @rbx >> @rbx & @rsi != 0n0 + $buffer >> ~@r13 << @rbx >> ($thread) >> @rsi | @r9 >> @rbx >> $buffer ^ @rbx >> @rbx & @rsi)  { test_statement(0x135F); } elsif ($teb & 0n10 >> 0n15 & $thread & @r12 ^ ++@r11 ^ @r8 & @r9 ^ @r11 > ~$buffer >> 0n13 >> $ip & @rsp ^ ~@rbx) { test_statement(0xA6F); } else { test_statement(0x380); }
$error$
$end$
4841
 if (@r12 + 0y0 >> @rdi << $buffer | 0x4 << @r10 >> ~$ip >> (@r11) & -@rbx >> 0n7 & @r12 ^ (0n5) ^ @r8 & @rbx @rbx + @r8 << (@rbp) & (1) << @r9 >> ~@rsi >> @rbp ^ @rsp << ~@rsp >> @rdx)  { test_statement(0x6D6); } elsif (+$teb & @rax & @rdi & @rbx ! $ip << @r12 & @rsp >> 23 & @rbp & $ip ^ @rsp >> 0xA & ~@rdx ^ 0y1110 & @r12 ^ @rbp ^ @r12) { test_statement(0x22EA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rbx ^ @rsp | 0x13(+@rdx ^ +0n15) ; } elsif (@rsi ^ @r9 != @r9 >> 1 & 0x5 ^ 0y1100 & @r12) { test_statement(0x1DC2); } else { test_statement(0x1FAA); }
$error$
$end$
4842
 if (@r12 << @rsi >> @r9 << $teb >> @rax >> @r13 & +$teb << @rsi ^ @r8 & @r9 ^ $ip & @r8((@r10 + 0y10001 >> $buffer << 0n4)  { test_statement(0xB04); } else { test_statement(0x100E); }
$error$
$end$
4843
 if (0y10011 << @rbp >> (@r11) << (0n19) <= @rsi + @rsp)  { test_statement(0x14B7);  // /* This is a comment   for (val = 10; @r8 ^ @rax ; $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer << @r12 >> @r8 & -@rdi ^ 0n8 >> @r13 ; @rdi << @rax) { test_statement(0x268F); } else { test_statement(0x168E); val = -0x2 ^ @rbp ; }
$error$
$end$
4844
 if (@r11 + +$ip >> $proc << @rsp ^ @rax << ($ip) >> @r9 >> ~$proc & @r13 >> 22 ^ @r9 & $teb ^ 0y10 & @rdx ^ ~@rbp | @rsi << $buffer & ($buffer) >> @r12 & ($ip) ^ (@rsp) >> @r9 < @r11 + 6 >> @rdx >> $thread | $ip << @rdi ^ @rdx >> @rbx & @r8 & @r9)  { test_statement(0x409);  if (@r11 & ($ip) ^ @rsi > @r11 & ($ip) ^ @rsi)  { test_statement(0x2503); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx $thread) ;  while  (@rdx != @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (22 >> @rbp | $teb >> @rsi ^ @rbp | 0y1000 | $proc ^ @r8 | 0n3(@rbp << @rdx & @rbp >> @rdi ^ -@r12 >> @r11 & @rsp & $ip ^ @rax & @rsp) { test_statement(0x1F07);  break;  for (val = 10; $proc ; $teb | $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4845
 if (+@r12 + +@r12 << $buffer >> $teb << @rdi & @rsi & 0n10 >> @rsp ^ (---@r10) ^ @rdi & @rsi | $ip >> @r9 & +@rsp ^ @rsi & $teb & @r10 ^ $ip & @r8 | @rbx & @rsp & 0x12)@rbp + 0x9 << 0y11 << 0y10 >> @r8 & $teb << $thread)  { test_statement(0x1518); } else { test_statement(0x1C85); }
$error$
$end$
4846
 if (~@r13 + @r13 >> -@rsp <> @rsi + +11 << @rbp << ~$buffer >> 0n18 >> $teb >> $buffer ^ @rsp | $proc ^ 0xE >> @rdi | $proc | $proc)  { test_statement(0x691); } elsif (@rax << @r12 >> @rsi >> @rsp >= 0n4 >> $proc >> 0y1110 ^ $buffer & @r12 & @r12 | @rbp & 0n5) { test_statement(0x21A0);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ^ $thread <= $teb | ~($thread)) ;  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip <> ~@rbp) ;  break; } else { test_statement(0x1405); }
$error$
$end$
4847
 if (0y1101 + @rdx)@rbx & $thread << @rsp & @rdx >> @r10 & @r11 & 0y10011 | $buffer << @rbp >> $thread >> 0x0 ^ 0y0 ^ 16 & 0y0 | $buffer >> $thread)  { test_statement(0x1B89);  if (+(@r11) ^ 0y10001 | @rsi ^ ~@rsp > @r8 & @rsi)  { test_statement(0x189F); } else { test_statement(0x1EC8); } } elsif ($thread << @rbp >> $teb >> @rdx | @rax & 0xD & $teb)10 << $ip & $buffer | @rax | $thread ^ @rbp | @r12 ^ @r10 | 0n12) { test_statement(0x2D6);  while  (0x5 | $teb 0x5 | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (@rax & @r10 & @r11 ^ @r13 & @r12 = @rax & @r10 & @r11 ^ @r13 & @r12) { test_statement(0xE7A); } elsif (0n6 ^ @r12 ^ $ip > @r13 ^ @r10 | @rax | ~@rsp | @r8) { test_statement(0x1D86); } elsif (@r10 ^ @r10((@r10 ^ @r10) { test_statement(0x142B); } elsif (-0x1))@r13) { test_statement(0x39D); ; } else { test_statement(0x13F8); }
$error$
$end$
4848
 if (~@r11 + @r11 << @rsi << +@r11 >> @rax & @rbx << @r8 & @r8 >> @r9 > ~@r11 + @r11 << @rsi << +@r11 >> @rax & @rbx << @r8 & @r8 >> @r9)  { test_statement(0x69B); } else { test_statement(0x1898);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | @rbp))@rdi) ; }
$error$
$end$
4849
 if (~$ip << @rsi & @rbx << $teb & @r9 & @rdi & ~@rsp | @rsp << $proc >> 0x9 >> $teb ^ @rdx >> $proc ^ @rdi ^ @r11 | $buffer >> 14 > ~$ip << @rsi & @rbx << $teb & @r9 & @rdi & ~@rsp | @rsp << $proc >> 0x9 >> $teb ^ @rdx >> $proc ^ @rdi ^ @r11 | $buffer >> 14)  { test_statement(0x9CC); ; } elsif (21 & @r11 ^ -++~12 ^ @r10 & $teb | @rdi >> +-@r9 > @rbp) { test_statement(0xAA6); } else { test_statement(0x1621); }
$error$
$end$
4850
 if (-@rax & 0y10000 << @rsi & 16 ^ 16 ^ @rsi >> -~@r12 & 0x6 ^ ~$thread & $teb ^ $teb ^ -$thread | @r12 << 0y10010 >> @rdi & $buffer & @r11 ^ 0x6 >> 4 & @r12 ^ $thread & $ip | 15 >> ~@rdx & $teb & +@rdx | @r9 | ~@rax | @r9 | 0xE >= -@rax & 0y10000 << @rsi & 16 ^ 16 ^ @rsi >> -~@r12 & 0x6 ^ ~$thread & $teb ^ $teb ^ -$thread | @r12 << 0y10010 >> @rdi & $buffer & @r11 ^ 0x6 >> 4 & @r12 ^ $thread & $ip | 15 >> ~@rdx & $teb & +@rdx | @r9 | ~@rax | @r9 | 0xE)  { test_statement(0xCA1);  while  (+~@r12 ^ @rdi))@rsi | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (0y10010 == ~$buffer ^ 12 | @r13 | 0n0)  { test_statement(0x2613); }  // /* This is a comment  }
$error$
$end$
4851
 if ((0x0) << 0x13 << @r13 >> @r10 << 0x0 >> $proc ^ 1 >> $thread >> @rsi & -+@r11(@r11 | +$buffer >> ~-@r11 & @r10 >> @r11 & 23 & @r10 ^ @rbx ^ +0n12 ^ @rdx | @rax ^ $teb ^ 0n11 ^ 0y1010)  { test_statement(0x509); }
$error$
$end$
4852
 if (@r12 + $proc << @r13 << @rsi >> $teb << @rsi ^ $thread << (@rbp) >> (@r11) | 0xB << $buffer & 0y1111 ^ 0y10000 >> 0y100 ^ 0x1 & @rsi ^ @r10 | @rbx >> @r13 & $buffer & @r9 ^ $thread | @rbx ! @r12 + $proc << @r13 << @rsi >> $teb << @rsi ^ $thread << (@rbp) >> (@r11) | 0xB << $buffer & 0y1111 ^ 0y10000 >> 0y100 ^ 0x1 & @rsi ^ @r10 | @rbx >> @r13 & $buffer & @r9 ^ $thread | @rbx)  { test_statement(0x5E); } else { test_statement(0x17E4); }
$error$
$end$
4853
 if (0x1 < @rsi >> @rsp ^ @rbx << $thread | 0y10000 >> @rax >> @rdx)  { test_statement(0x159B);  while  (@r12 ^ 0y10001 | $ip ^ @rsp ; @r12 ^ 0y10001 | $ip ^ @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = -1 ;  for (val = 10; @r13 | 23 < @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4854
 if (0n16 | @rbx ! @rsi << $ip >> $teb >> @rbx >> @rsp | @rsi & @r13 >> (@rsp) | 5 >> @r11 | @rbp & @rsi | @r8 ^ (@rax) | @rax | ~@rsp)  { test_statement(0x141D); } else { test_statement(0x1652);  if (7 ^ @r8 ; @rsi)  { test_statement(0x20BD); } }
$error$
$end$
4855
 if ($thread + @r13))$thread + @r13)  { test_statement(0x1433);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 10 & $proc | @rdx((10 & $proc | @rdx) ;  for (val = 10; 11 ^ -@rdi | @rsi((@rbp | @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4856
 if (@r12 + (@rsi) << @rdx << 0y1000 >> +0xD << @rdi & $buffer << 2 >> (0y10000) >> @rbx & (0y1010) >> @rax & $proc & $thread ^ 0x5 << 0y101 >> ~@r12 >> $thread & $thread & @r12 & 22 ^ @r10 >> @r10 & @r8 | @rdi << $teb ^ $thread & $thread & +$buffer >= @r13 + $teb << (@rdx) << (@rbp) >> $teb << ~@rbx & +@rax >> @r9 & 0xC >> @r12 & @r13 & @r9 | @rbp >> @r12 >> (@rsi))  { test_statement(0x1347);  // /* This is a comment  } else { test_statement(0xF5B); }
$error$
$end$
4857
 if (@rdi + $thread << @rdi << 20 <= @rbx + 21 << @r11 << (@r9) >> @r9 << @r13 >> 0y1001 ^ 0n13 & ~@r12 >> $buffer & $proc ^ +@rbx & @rdx | @r10 >> @rdx & 0x9 >> @rax & @r9)  { test_statement(0xFD7); @rax = $thread & @rsi ^ -@rax ^ $proc | @r10 | +@rdx | @r10 | @r11 ; } else { test_statement(0x474);  for (val = 10; $buffer ^ $proc | @r12 | @r13 >< +$teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
4858
 if (~$buffer > ~$buffer)  { test_statement(0x2021);  while  (@r8 & ($proc) > 5 & $proc ^ 0y1011 ^ 0xF)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif ($thread << -@rbp >> @rdx >> $teb ^ ~@r8 >> @r8 & @r8 & @rbp | $buffer & @r10 | @r9 ^ $proc | $ip | @r8 | $buffer <= @rax << 0n1 ^ @rsi ^ @r10 | 0n8 & $teb ^ @r10 & @r11 ^ @r10 | @rsp & @rdi | $buffer) { test_statement(0x26AC); } else { test_statement(0x3CA);  // /* This is a comment  }
$error$
$end$
4859
 if (@rbp >> @rdi >> @r13 ^ @rdi ; @rbp >> @rdi >> @r13 ^ @rdi)  { test_statement(0x1D92); } elsif (@rax & @rsi >> @rax & @r13 & 0xD <= @rax & @rsi >> @rax & @r13 & 0xD) { test_statement(0x2E7);  /* This is a comment */  // /* This is a comment  val = $teb | 11 ;  This is a not opened comment */ }
$error$
$end$
4860
 if ($ip + 0x2 ^ @rsp >> $ip >> @r11 & $proc >> $ip <> @rsi >> $buffer >> @r13 >> @r11)  { test_statement(0x12BB); ; }
$error$
$end$
4861
 if (+@rbx << @rbx << $thread >> -~@rsi << @r11 ^ @r13 >> @rbx | @rsi ^ 0y10010 >> @rsp & @rdx & 21 >< @r9 & @r9 << @rax >> ~0n16 ^ $thread & $proc >> $buffer & @rdx & @rbx | @rsp << $thread >> @r10 >> -@r12)  { test_statement(0x1DD6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +0x3 & $proc ! +0x3 & $proc) ;  This is a not opened comment */  // /* This is a comment   /* This is a not closed comment } elsif (@rbx >> @rax & @rbp ^ @r10 >> @rsp ^ @rsp & @r12 | $thread >> @rax | $thread | $thread))$teb >> 10 >> -0x2 & @r13 >> 0n2 ^ $buffer >> ~@r8 ^ @r10 ^ @rdx ^ 0y110) { test_statement(0x1803);  /* This is a comment */ } elsif (0xF ^ @rbp ^ -$proc != @r8 >> @r9 & $teb | @r12 ^ 0xC) { test_statement(0x2274);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp | @r8 > @rsp | @r8) ;  for (val = 10; 0xE <= 0xE;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x10 & $ip | $teb ^ $ip <= @rdx) { test_statement(0x1927); } else { test_statement(0x25F6); }
$error$
$end$
4862
 if (@r12 + @r11 < @r12 + @r11)  { test_statement(0x247A);  /* This is a not closed comment } else { test_statement(0x13C0); }
$error$
$end$
4863
 if ($thread + @rbx << $thread << $proc ^ $ip >= $thread + @rbx << $thread << $proc ^ $ip)  { test_statement(0x7FA); } else { test_statement(0x90A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | @rsi | -@rdi)3 ^ @rbx | @r11) ; ; }
$error$
$end$
4864
 if ($teb << $proc & @r9 ^ ~-@rsi ^ ~@rsi >> @r8($teb << $proc & @r9 ^ ~-@rsi ^ ~@rsi >> @r8)  { test_statement(0x149E); } elsif (@r9 << @r9 >> $ip >> 0n6 ^ @rdi >> @rsi & @rbx ; @rbp >> (~5) >> 17 ^ @rbx) { test_statement(0x1736);  This is a not opened comment */  while  (16 | @rbx >= 16 | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb >> 0xC & @r10 ^ @r12 & @r11 ^ @rax == @r11 >> $thread & @rsp & ~@rsi) { test_statement(0x429); } elsif (@rax ^ 0xA ^ @r9 <> $proc & @rdx ^ @r11 | $buffer ^ @rsi | 0y110) { test_statement(0x2646);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp ; @rbp) ; } elsif (@rdx ^ @rbp ; @rdx ^ @rbp) { test_statement(0x13C); } elsif (-@r11 > -@r11) { test_statement(0x1A8E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread >= ~$buffer) ; } elsif (@rdi <= $ip) { test_statement(0x172B); ; } else { test_statement(0x1E39);  /* This is a not closed comment }
$error$
$end$
4865
 if ($teb << 2 << @rbx & 16 << -$buffer >> @rdx & $ip >> @r11 & @r9 & $buffer != $buffer + $thread)  { test_statement(0x235D); } else { test_statement(0x1E80); }
$error$
$end$
4866
 if (@r10 + @rbx << $thread((-$proc + (@rsp))  { test_statement(0x22B9); @rax = @rdi | $ip & @r10 ; } elsif ($buffer << 0x12 >> $buffer >> @rdi | @r10 >> @rdi ^ @r9 ^ +$buffer <= $buffer << 0x12 >> $buffer >> @rdi | @r10 >> @rdi ^ @r9 ^ +$buffer) { test_statement(0x5A); ; } elsif (~0x6 < ~0x6) { test_statement(0xD52);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ! @rsp) ;  if (@rsp)@r8)  { test_statement(0x224C); } elsif (0x0 >< 0x0) { test_statement(0x21ED); }  for (@rax = +$buffer; (@r9) (@r9);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ((@rdi) ^ @rbx | @rax ^ $ip | -+$teb >= $ip ^ @rdx ^ @rax | 20 ^ (@r12)) { test_statement(0x781); } else { test_statement(0xA5E);  /* This is a comment */  This is a not opened comment */ }
$error$
$end$
4867
 if ($buffer ^ 0xA | @rbp != $teb & @r10)  { test_statement(0x8DE);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi ^ $proc | @rax ^ 0n13 | 10 | $buffer))@r9 | 0y1101 ^ @rsi | @r8) ; } elsif (0n11 << @rsp ^ 0y1111 >> @r11 & @rdi & @r13 | -$proc & @rbx & @r10 ^ +@rbx & @r12 ^ ($teb) | @rdx & 6 | @rsi ^ -~@rax | @r9(($teb >> 21 >> 0y1 & 6 >> @r11) { test_statement(0x514);  while  ($teb ^ 0y1010 == $teb ^ 0y1010)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
4868
 if (0y10000 & $teb << @rax >> $ip >> @rax & $thread >> ($teb) | $teb << @rbx >> $thread >> @rdx | 0n6 >> 0y1100 ^ @rbp | $ip & 0x5 != 0y10000 & $teb << @rax >> $ip >> @rax & $thread >> ($teb) | $teb << @rbx >> $thread >> @rdx | 0n6 >> 0y1100 ^ @rbp | $ip & 0x5)  { test_statement(0x1E19); } elsif (-$proc << 0n8 >> @rsi & +0y1011))@r10 >> @r11 ^ 0n10 >> +@r8) { test_statement(0x24B5); } else { test_statement(0x876); @rax = 0y1111 ^ @r9 | @rdi | 0n10 | @rdi ;  break;  // /* This is a comment  @rax = $ip ;  while  ($proc ; @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rbx ; }
$error$
$end$
4869
 if (@rbx >> @r11 << $buffer >> @r11 >> @r10 & @rdx >> ~@rsp >> $ip <> 2 + @r9 ^ @rdi | @rsi << (@rbx) >> @rdi >> @r8 & @rbp >> 0x1 | $buffer >> @rdx & $thread & $thread | @rdx | @r11)  { test_statement(0x18D2); } else { test_statement(0x1F76); }
$error$
$end$
4870
 if ($proc + @r10 << (0n11) << $buffer >> 0y11 << +$buffer & $proc << ~@r11 >> -$proc >> @r13 == -@r12 << @rdi << 0x2 >> @rbp ^ @r10 << 0y111 & $ip >> @r13 & @rbp & @rbx)  { test_statement(0x13AF);  This is a not opened comment */ } elsif ((@r13) & @r8 >> @rdi ^ @rsi >> $thread & @r8 >= @rdi << @rdi & @r11 >> $ip & @r12 & +@r13 ^ $thread >> $proc | (@rsp) >> $proc) { test_statement(0xD00); @rax = $ip & 0y1000 | @r11 | $thread ;  for (val = 10; $teb ! $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4871
 if (@rbp + ~@r9 ^ +@rsp >> ~0n5 >> $ip ^ $buffer >> $teb ^ $thread & @r8 ^ $teb ^ @rdi(@rbp + ~@r9 ^ +@rsp >> ~0n5 >> $ip ^ $buffer >> $teb ^ $thread & @r8 ^ $teb ^ @rdi)  { test_statement(0x227E);  This is a not opened comment */  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
4872
 if (@rbp | @r9 << @rsp >> 0n12 >> @rdx & @r10 & (~~@r9) & @rsp | $thread >> 0xE | ~~@r13 & @rbp | @rbp ^ $buffer | @r12 | @r10))@rbp | @r9 << @rsp >> 0n12 >> @rdx & @r10 & (~~@r9) & @rsp | $thread >> 0xE | ~~@r13 & @rbp | @rbp ^ $buffer | @r12 | @r10)  { test_statement(0x1F43); } elsif (@rax << $buffer >> @rdx >< @rax << $buffer >> @rdx) { test_statement(0x169D); } else { test_statement(0x276);  for (; $thread ^ @r8)@rsp ^ $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rsi ;  break; }
$error$
$end$
4873
 if ($ip + $thread << @rax >> +@rsp << 0x5 >> @r11 >> $teb & @r8 << @r12 >> +@rax >> $thread & 0n2 | $proc << @rbx & $buffer >> @rdx & @r13 | @r12 = $buffer << $ip >> @rdx << @rsp >> $buffer >> @r9)  { test_statement(0x1C57); } else { test_statement(0x163C); }
$error$
$end$
4874
 if (@rbx + 0y1110 << @r10 >> 20 >> @r8 >> @rsi ^ @rbx << ~+$teb & (0x6) >> @rsp & @rax & -@r12 | ~$teb & -@rsi >> 0n18 ^ @r13 >> -$teb = @rbx + -0n16 << $ip << +@rdx & $ip << $ip >> 0n14 >> @r12 & @rsi)  { test_statement(0x113A);  break;  if (0xA ^ $proc | 0y1000 = @r8 ^ 0x13)  { test_statement(0x30D); }  /* This is a not closed comment  This is a not opened comment */  /* This is a comment */  if (0x7 ! 0x7)  { test_statement(0x108D); } } elsif (@r9 & $ip = $ip << @r11 >> ~@rdi >> @r13 & $teb >> (@r8) | @r8 & 0xD & @r9) { test_statement(0xE57);  // /* This is a comment   break;  for (; @rax < @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n6 >< $proc) ;  /* This is a not closed comment } else { test_statement(0x1A82); }
$error$
$end$
4875
 if (@rsp >> $thread << $buffer >< $buffer & $teb << @r11 ^ @r12 << $teb & ~0xC & 0x9 ^ @rax >> @r10 & 0n8 & +$teb ^ 0y11 & ($teb) | @rbp << 0x6 >> 0y1100)  { test_statement(0x18B8);  if ($proc ^ @r9 ; (@rbp) | @r13 | @rsi)  { test_statement(0xAB8); } elsif (@rax < @rax) { test_statement(0x1073); } } elsif (~@r13 >> @r12 ^ @rbx ^ (@r8) >= @r9 << @rsp >> 20 >> @rbx ^ @r11 & @rbp & @rsp ^ $buffer ^ @rdx) { test_statement(0x1A66);  break; val = -@rax ^ $buffer | @rbx ; val = @r12 ; } elsif ($thread >> (@rsp) & +@rdx ^ $teb & $proc(($proc >> (@rbx) | $teb & $buffer ^ (@r11) | -0n17 | $teb) { test_statement(0x2191);  if (@rbx >< @rbx)  { test_statement(0x1FD0); } elsif (0y1101 ! @r13) { test_statement(0xD9); } }
$error$
$end$
4876
 if ($ip + 0y1000 ^ -0y1010 << 0y10 & @rbx | $ip ^ $ip > 0xE + @r11 << @r11 | 0x1 << $thread >> $ip >> +0n19 ^ @r13 >> @rdi & @rbp & @rbx ^ @rbx & @r11 ^ @r12 | -@rdx ^ @r10 | @r10 & $ip | -@r10 | @rax)  { test_statement(0x249C);  while  (+@r13 & $proc | @r12 | $ip <> (@rax) ^ 0y1011 | @r11 ^ 0y1010)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; (@r11) ^ -$thread @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  This is a not opened comment */  if (@r12 != @rdx)  { test_statement(0x1D35); } elsif ($ip)$ip) { test_statement(0x17E1); } } else { test_statement(0x64E);  if (@r11 ^ -@rsi <= $teb ^ @rbx | @rsi)  { test_statement(0x1642); } else { test_statement(0x19B3); } }
$error$
$end$
4877
 if (@rsp << 0y10 << $buffer ^ ~@rbx >> ~@r13 & $proc & @rax ; 15 + @r10 & $ip ^ $buffer << $thread >> @rax >> @r13 ^ ~@rsp >> @r12 & @rax & @rsp | ~@rsi << 10 >> @rbp >> $buffer & @rsi >> (@rsp) | @r12 & ~(@r13) & @rbp ^ @r9 & $teb | @r13 & @rax ^ 0y1110)  { test_statement(0x219A); } elsif (-~$ip & $proc >> @rbp ^ @r11 >> $ip & @rsi & $thread == -~$ip & $proc >> @rbp ^ @r11 >> $ip & @rsi & $thread) { test_statement(0x1245); } elsif (@rbx >> $proc ^ 0y1001 ^ @rsp | @rsp 0n7 >> 10) { test_statement(0x85C); }
$error$
$end$
4878
 if (@rsi ^ 15 << 0y10001 >> @r12 >> @r12 & 0xC ^ @rbp ^ @r10 ^ +@r8 ^ @r8 | @rdi << @r8 ^ 0n18 >> $buffer & @rbp & @r13 | -$teb >> 7 ^ $proc ~@rsp + 0x4 >> @r8 | @r12 >> $buffer & @rbp >> +@r9 ^ $thread >> @r11)  { test_statement(0x2517); } elsif ($buffer >> $teb ^ 20 ^ @r8 & @r12 | @rbx ^ ~(@r13) & $teb | +($teb) & $teb ^ @rdx ^ @rdx | @r9 ^ @r12 | @r12 $buffer >> $teb ^ 20 ^ @r8 & @r12 | @rbx ^ ~(@r13) & $teb | +($teb) & $teb ^ @rdx ^ @rdx | @r9 ^ @r12 | @r12) { test_statement(0x16D9); } elsif ($proc & @rbp & @r10 == 0y101 & -@rsp | @r8 | @rdi ^ 0n3 | $thread) { test_statement(0xE03); } elsif (@rsi & +@r13 ^ @rax ^ -@rdx < @rbx & $buffer | @r13 ^ @rdi | -@r10) { test_statement(0x1D27); } elsif (@rsp ^ @rbp $buffer ^ @rbx) { test_statement(0x747); } else { test_statement(0x26A2);  /* This is a not closed comment }
$error$
$end$
4879
 if (@rbx)@rbx)  { test_statement(0x1C3F);  // /* This is a comment  val = 0n4 & ($proc) ; }
$error$
$end$
4880
 if (@r10 << (@rbp) >> @rax << @rdi >> (@r9) >> @rsi & @rdx >> 0xD >> 0n1 & 0n5 ^ @r11 < @r10 << (@rbp) >> @rax << @rdi >> (@r9) >> @rsi & @rdx >> 0xD >> 0n1 & 0n5 ^ @r11)  { test_statement(0x5B3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp & 0 | @r13 ^ @rdi <> @rbx & @r9 ^ $proc | @r12) ; ; } elsif (@r13 >> @r8 >> @r12 & @rbp >> 0xD & @rbp & ~$buffer <> @r13 >> @r8 >> @r12 & @rbp >> 0xD & @rbp & ~$buffer) { test_statement(0x1E7D);  // /* This is a comment   /* This is a comment */ } elsif ($teb >> 0y111 ^ 0y100(($teb >> 0y111 ^ 0y100) { test_statement(0x1584);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +$ip | $proc == +$ip | $proc) ;  if (+@rdx = @rdi)  { test_statement(0xE27); }  if (@rax <= @rax)  { test_statement(0x91E); } elsif (@rdx >< $buffer) { test_statement(0x1C28); } else { test_statement(0x1437); }  /* This is a comment */ } else { test_statement(0x1361);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n15 ; 0x5 | @rdx | @rax) ; }
$error$
$end$
4881
 if (@r10 + $thread << @rbp << @r13 >> @r9 << @r9 ^ $teb << 0y1001 & 0xA & @rdx ^ @rbx >> @r13 ^ ~$ip & $thread $ip << @rax << 11 & $ip << @r12 >> @rdx >> +@rbp & @rsi >> @rax | @rsi >> 0x1 & 0n2 & ~@rsp & -(@r10) ^ 15 & $ip & @rsi)  { test_statement(0x17FA); }
$error$
$end$
4882
 if (@r8 >> (+22) << @rbx | ($proc) << 0y11 >> ~$teb & @r12 ^ -@r9 ^ @r11 & 0n2 ^ @r12 == @r8 >> (+22) << @rbx | ($proc) << 0y11 >> ~$teb & @r12 ^ -@r9 ^ @r11 & 0n2 ^ @r12)  { test_statement(0x75B);  for (val = 10; @rax & @rbx | -@r12 ^ @rbp == @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4883
 if (@r10 << @r9 << @r8 >> @rdi ^ @rbp >> -$teb ^ @r11 >> @rdi ^ 7 & ~11 <= +21 << @rax & 0n3 << +@r9 & -+0n1 >> 3 & @rdx | @r13 << @rax >> @rsp)  { test_statement(0x125A); } elsif ($teb << @r10 | @r10 & @rsi & @rbx != @r9 << ~@r12 & @r9 ^ @r8 >> @r8 & $proc & @rdi | ~@rdi & $ip ^ -~($teb) & @r11 ^ @rdx ^ @rbx | @rbx ^ @r11 | -@rsi ^ @rdi | @rsp | @r12) { test_statement(0x2080); } elsif (@rsi | @rbp ^ ~@rbp ^ $ip)@r13 & 6) { test_statement(0x15D2);  if (0x8 <= 0x8)  { test_statement(0x659); }  /* This is a comment */ }
$error$
$end$
4884
 if (@r8 << @r9 << @rsp & @r11 ^ @rsp << $proc >> @rsi >> @rsi ^ @rax & 0n9 & 0n1 ^ 16 & @r10 ^ @r11 @r8 << @r9 << @rsp & @r11 ^ @rsp << $proc >> @rsi >> @rsi ^ @rax & 0n9 & 0n1 ^ 16 & @r10 ^ @r11)  { test_statement(0xCC7); }
$error$
$end$
4886
 if (2 + $proc & @rdx << ($thread) & 0 >> 0xC & @rsp | @r11 >> $ip >= @r11 ^ -@rdx ^ ~~@r9)  { test_statement(0x1A37);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread ^ $buffer | ~0n5 | $thread >< $thread ^ $buffer | ~0n5 | $thread) ; }
$error$
$end$
4887
 if (@rsp >> @rsi >> 0x5 ; @rsp >> @rsi >> 0x5)  { test_statement(0x339);  for (@rax = 0x2 & 17 | @rsi ^ 0n13 | @r10; @r8 & @r9 ^ 15 ^ @r8 | @r10 = @r12 | ~$thread ^ @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4888
 if (0n12 + $thread << @r11 & +0 << @r11 >> -(0y10000) >> 0x3 & +@rsi | @rax << @r12(0n12 + $thread << @r11 & +0 << @r11 >> -(0y10000) >> 0x3 & +@rsi | @rax << @r12)  { test_statement(0x1C34); } else { test_statement(0xB21); }
$error$
$end$
4889
 if (@r8 + @r9 & $thread >> @rbp >> 10 & @r11 >> 0xA | @rbx & @r9 | $teb & $ip & @rax | @rsp & 0n14 ^ @r12 | @r8 ^ $buffer | @rsp >= @r8 + @r9 & $thread >> @rbp >> 10 & @r11 >> 0xA | @rbx & @r9 | $teb & $ip & @rax | @rsp & 0n14 ^ @r12 | @r8 ^ $buffer | @rsp)  { test_statement(0xE38); } else { test_statement(0x425); ; }
$error$
$end$
4890
 if ((5) + @rax << $proc << 0y1001 & @rax << @r13 >> @r8 >> @rbx & @r13 | ($thread) >> @rbx & (~@r9) & @r12 & @r11 ^ $proc >> @rsi < (5) + @rax << $proc << 0y1001 & @rax << @r13 >> @r8 >> @rbx & @r13 | ($thread) >> @rbx & (~@r9) & @r12 & @r11 ^ $proc >> @rsi)  { test_statement(0x2708); ; } elsif (@r9 >> 0y1110 >> @rax ^ $buffer >> 0y0 ^ @rdx >< @r9 >> 0y1110 >> @rax ^ $buffer >> 0y0 ^ @rdx) { test_statement(0x237);  /* This is a not closed comment  /* This is a comment */ } elsif ($ip >> ~+$thread & 16 & $ip ^ 0n9((+@rsp & @r13 | +~@rbp & @rax ^ @rdx) { test_statement(0x220);  /* This is a comment */  // /* This is a comment   This is a not opened comment */ } elsif (@rdx ! -0 & ~@rbx | @r11 ^ (@r12)) { test_statement(0x19A6);  if ($teb(0y1001)  { test_statement(0xE43); } elsif (0y10011 != ~$proc) { test_statement(0xCCE); }  /* This is a not closed comment } elsif (~-$buffer ^ @rax <= ~-$buffer ^ @rax) { test_statement(0xB02);  This is a not opened comment */ } else { test_statement(0x1DAC);  if (+$ip ^ @rdx == 1 ^ @r8 | @rax | @rbp)  { test_statement(0x670); } elsif (15 <= $ip | $buffer) { test_statement(0x180E); } elsif (@r12 == 17) { test_statement(0x1E1D); } @rax = $teb | $thread ;  if (@rdx ; @rdx)  { test_statement(0x159F); } else { test_statement(0x2422); }  This is a not opened comment */  for (; @rsp))0x3;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y10011 != 10) ; @rax = @rsp ; }
$error$
$end$
4891
 if (22 >> $ip << $teb & @rdi << 11 >> @r8(@r10 + @rdx ^ 0n0 << @r8 | @rsp >> @rbx & @r13 >> ~$buffer ^ $proc >> @rbp ^ @r9)  { test_statement(0x38C);  if (~$proc | @rax ^ @rdi | @rsp)@r10 & @r8 ^ @rbx | ~@rbx)  { test_statement(0x125E); } elsif (@r11 ^ @r11 | @r11 | @rax == @r9 ^ @rsp | ~@rdx | @r12) { test_statement(0x2362); } elsif ($teb | -@rdi ! (@r11) | @r13) { test_statement(0x1F10); } else { test_statement(0xD24); }  // /* This is a comment  } else { test_statement(0x5D5); ; }
$error$
$end$
4892
 if ($teb << @rdx << $teb | @r9 >> $ip >> 0x0 & (~@r13) >> $proc | $thread & @r9 ^ @r8 | @r10 ^ @rdi ^ @rdi | @r9 | $thread | 0xE >= @r9 + ~@rsi << $teb << -$teb ^ $ip & +@r10)  { test_statement(0x18DA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ^ $ip | @r8 ; 0n5 & $teb ^ @rdi | 4 ^ @rax) ; } else { test_statement(0x176B); }
$error$
$end$
4893
 if (@rdi + @rbx >> @rdi & @r11 << @rbx >> @rbx >> 0n3 != @rsp + $thread >> @rax << 7 & $buffer << @r8 >> @rdi & $thread & 0x8 & @rbp)  { test_statement(0x2567);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi & @rax ^ @r13 | 0n8 ^ (@rdx) >< @rdi & @rax ^ @r13 | 0n8 ^ (@rdx)) ; val = $buffer | $ip | 16 ;  /* This is a not closed comment  for (val = 10; @rsi ! 0x6;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  /* This is a comment */ }
$error$
$end$
4894
 if (@r13 << $thread >> @r11 & @rax << @rbx >> -@r13 & @r11 >> +$thread >= @rsi ^ +@rdi << @rbp >> @r9 | @rdi << @r8 >> @rbp ^ @rsi & @r9)  { test_statement(0x10B1); } elsif (@rdi << ($thread) ; @rdi << ($thread)) { test_statement(0x24B2); }
$error$
$end$
4895
 if (@r13 >> 0xE >> $ip >> -@r13 & @rdi ^ @r11 & @r10 >> $teb != 7 + @r10 >> $thread << $buffer >> @rdi & 0y1 & ~14 & @r12 ^ 0n0 << $teb & @r9 & @r13)  { test_statement(0x1E3B);  This is a not opened comment */ ; } elsif (@rdi >> @rsi ^ 0y1100 >> @r10 ^ $teb & @rax ^ @r12 | @r13 >> @r12 & @r10((0n17 >> @rbx >> (~$teb) & @rbx | @rsp >> @rax & ~@r13 ^ 0y0) { test_statement(0x1CE1); @rax = $teb & @r8 | 0x9 ^ @r10 ; } else { test_statement(0x2081); ; }
$error$
$end$
4896
 if (@r9 & @r13 << @rdx >> $ip >> 0xD >= $teb << @r11 << 0xD >> @r13 ^ @rax >> @rdi >> @r9 ^ ~$thread & @rbx & $thread)  { test_statement(0x1266);  if (@rsp & -($ip) | ($ip) = @rsp & -($ip) | ($ip))  { test_statement(0xA22); } elsif (10 | @rdi | $buffer < 10 | @rdi | $buffer) { test_statement(0x12D2); } elsif ((@r10) <> @r11 | $proc) { test_statement(0x7E9); } elsif (@rax >< @rdx) { test_statement(0x2681); } else { test_statement(0x10CB); } } elsif ($ip >> @r10 ^ @rsp >> -$thread & @rsp & @rdx | 0x11 >> +@rdi & @rdx & 0n18 ; @rsi << @rbx >> @rsi & @rdi >> @rdi ^ 0y0 >> 21 & @r12 & @rsp | 0n14 ^ @r8) { test_statement(0x25F0); } elsif (@r9 | -@r8 & @r13 | 0y10010 ^ 0y10000 != @r9 | -@r8 & @r13 | 0y10010 ^ 0y10000) { test_statement(0x26BF); ;  This is a not opened comment */  while  (~@rbp = 17)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 & $buffer | @rdx < @r9 ^ @r11 ^ $teb) { test_statement(0x11EB); } elsif (@rdi | @r8 | 0y1000))@rdi | @r8 | 0y1000) { test_statement(0x16F8);  break;  /* This is a not closed comment } elsif (@r10 | 0y1111))0x3) { test_statement(0x24B); } elsif (0n4(0y1011) { test_statement(0x2098); } else { test_statement(0x1952);  break; }
$error$
$end$
4897
 if (@rsi + ~@rsp << ~~@r12 ^ $thread << @rax >> @r8 >> @rbx & @r8 ; @rsi + ~@rsp << ~~@r12 ^ $thread << @rax >> @r8 >> @rbx & @r8)  { test_statement(0xBD6); } elsif (@rsp | (@rsi) >> @rsi | $buffer <= 0y11 >> @r12 ^ $proc >> @rdi) { test_statement(0x1734); } else { test_statement(0x153);  if (21 | @r11 | $proc = 21 | @r11 | $proc)  { test_statement(0x62); }  while  (@rbx | @r13 >< @rbx | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
4898
 if (@r11 + 0y1110 >> @rsp << @r10 >> $ip >> -@r9 & $proc << 0y111 & 0y1011 < +16 + @r9 << -$buffer >> 0y111 << 0n18 >> @r9 >> @rsi & @r12 << 0x2 & @r11 ^ $proc >> @rax | @rax << @r11 >> 0y1011 | ~$ip ^ @r13 & @rax ^ 0n2 ^ @r13)  { test_statement(0x1AC); }
$error$
$end$
4899
 if (@rdi << (@r11) << 0y1 >> @rdx & $buffer << $buffer ^ 0n4 << @rbp >> @rdx >> @rsp | @rdi << @r9 ^ @rbp | @r10 >> $buffer & ~@r12 & 7 ^ @rbp & 0y1010 ^ 16 != @rdi << (@r11) << 0y1 >> @rdx & $buffer << $buffer ^ 0n4 << @rbp >> @rdx >> @rsp | @rdi << @r9 ^ @rbp | @r10 >> $buffer & ~@r12 & 7 ^ @rbp & 0y1010 ^ 16)  { test_statement(0x24B6); } elsif (@r10 & @rsi & $proc & @r13 <= +0n16 ^ +$teb >> $teb & ~(@r11) ^ @r12) { test_statement(0x8E5);  for (; @rbp ^ +($proc)))+@rsi | @r13 | @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4900
 if (@r13 + @r10 >> @rbx >> @r10 & @r11 & $proc <= @rbp + 0xA >> @rsi << $thread >> @r10 >> @rax & @rax << 0y10000 >> @rbp >> 17 & @rax & @rsi)  { test_statement(0x537);  /* This is a not closed comment } elsif ($teb >> $ip >> @r10 ^ 0y1001 ^ 0n15 ^ 0y1101 ^ @rbx | $ip & 5 & @r11 ^ @rsi >= $buffer << @rsi >> (@rdi) | 0y1101 & @rbx ^ @r9 & @rdi ^ @r13) { test_statement(0x108F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx | -@rax ; ~@r11 ^ @r13) ;  // /* This is a comment  } elsif (@r13 >> @r13 ^ $teb ^ @rsi ^ $buffer ! ~@r12 >> 0y10 ^ 4 | @r10 & 17) { test_statement(0x618); }
$error$
$end$
4901
 if ($teb << $teb >> $proc & @rdi >> 15 >> $thread & @r8 & $ip ^ $ip << ~@r13 >> @rdx >> 0x7 & @rdx & @r9 & $proc ^ @r11 >> 0y1 & $buffer ^ @r9 & @rsi ^ @rdi ^ @rdx)$teb << $teb >> $proc & @rdi >> 15 >> $thread & @r8 & $ip ^ $ip << ~@r13 >> @rdx >> 0x7 & @rdx & @r9 & $proc ^ @r11 >> 0y1 & $buffer ^ @r9 & @rsi ^ @rdi ^ @rdx)  { test_statement(0x2411); }
$error$
$end$
4902
 if (+0y1000 + @r12 ^ -$buffer ^ $thread >> @r13 & 14 >< ~@r9)  { test_statement(0x8D3); } else { test_statement(0x1B11); }
$error$
$end$
4903
 if (@r12 + @rbx ^ @rdx << @rsi ! $teb << $thread << @rsi & @r10 & @rdi ^ @r12 >> @r12)  { test_statement(0x10FA);  /* This is a not closed comment } else { test_statement(0x2356);  /* This is a not closed comment }
$error$
$end$
4904
 if (@r13 >> @rax << @rax | ~@rdx >> $teb & 3 >> 2 | @rsi & $thread & $ip | 20 & @rdx ^ @r9 ^ ~@r13 | @r8 | 10 | @r10 == ~@rbp + (0x3) << 0n13 << @r9 & @r8 ^ @r8 << @r10 >> @r8 >> 14 & $proc & @r8)  { test_statement(0x26B2); } elsif (@r11 ^ 0y10001 >> @r9 ^ +0n4 & @r13 ^ @r13 | @rdx >> $ip & @r12 & 0y10001 == -0xF ^ @r13 >> 0y10 | 0x8 ^ $thread & @rax ^ $teb) { test_statement(0x1F2A); } elsif (@rsi | ~@rsp ^ @rdi | @rbp ! @rsi | ~@rsp ^ @rdi | @rbp) { test_statement(0x100C); } else { test_statement(0xA4E);  /* This is a not closed comment  // /* This is a comment  }
$error$
$end$
4905
 if (@rbp << @rsp << -@r10 & @rax << -@rdi >> 0xB & @r10 >> @rbx & @r11 ; 0y1000 << @rdx >> @rsp << @rdx)  { test_statement(0x1445);  // /* This is a comment   for (; $buffer | (-@rdx) < @rax | @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ((+~@rsi) | 0y1100)@r8)  { test_statement(0x66A); } else { test_statement(0xFB2); } }
$error$
$end$
4906
 if (@rdx + ~@r10 >> @rsp ^ $proc << @r8 & @rdx = 0n1 + $proc << $ip & @rdi << @rdi >> @rdx | @r11 >> ~@rsi >> (@rdx) | @rax >> $proc & @rsi & @r11 ^ @rax & +14 | @rsi & +@rsi ^ @r11)  { test_statement(0xA); } elsif (@rsi & +0y10 ^ @r8 | $teb >> +@r13 ^ @r13 | @r12 ^ $buffer ^ @rsp | -0y0 | @rbp > $buffer << $proc >> @r13 >> @r13) { test_statement(0xB3D); ; } elsif (@rdx >> @rsp & @r9 & @rdi ^ 0y1010 & @rax(0x0 >> -$buffer ^ ~0n6 | @rsp & @rsp) { test_statement(0x23B5);  if (@r9 | 0y10001 >< @rbx | @rdi)  { test_statement(0x367); } elsif (~+0n16))~+0n16) { test_statement(0x2433); }  break; }
$error$
$end$
4907
 if ($proc << $ip & 0n16 >> $ip)$proc << $ip & 0n16 >> $ip)  { test_statement(0x26D4); }
$error$
$end$
4908
 if (@rdi >> (@r9) << 0n0 >> $ip >> @r9 & 0n13 << @r11 >> @rdx >> -$ip & @rdx & $proc & @rdi | $ip & $teb >> @r9 >= @r11 ^ @r8 << @r13 >> @r9 & ~@rsi >> @rdi & +@r10 ^ @r10 >> (0y1111) & 0y101 & +$teb)  { test_statement(0x1579);  if ($teb & $thread ^ @rdx ^ $proc = @r13 ^ 0n15 ^ ~0x6 | $ip | @rbx)  { test_statement(0x62D); } else { test_statement(0x216A); } }
$error$
$end$
4909
 if (@r11 + 2 << @r11 << $buffer ^ @r11 | $ip >> @rsp ^ $thread & @r13 ^ (@r8))@r9 << $buffer << 0xF & $proc << $ip >> 0n16 >> 12 & @rdi >> $proc & @rsp & @r12 ^ (~@rbp) >> @rsp >> $thread)  { test_statement(0xE29); }
$error$
$end$
4910
 if (@rbx << 0x9 & 0n0 >> @r10 & @rbx & -$teb ^ (@rdi) & $thread >> @r13 <> @r10 + @rbx << 0 << @r10 >> @rdi & 0xC & 12 ^ (@r8) & $buffer)  { test_statement(0x272);  // /* This is a comment  val = @rbx | 21 ^ @rdx | @rsi ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi @rbp | $buffer) ; } elsif (12 >> 0x9 >> 11 & @r12 & @rbx & @rax)17 & ~@rbx >> $teb | @rbp >> @r9 ^ @r9 ^ @r11 ^ $proc | @rax & 0y1011 ^ ~14 | -@rax) { test_statement(0x1D42); }
$error$
$end$
4911
 if ($thread << @r9 >> $proc << 0x2 >> @r11 >> @r10(+@r10 << @rsp & @rbx << @r12 & @r11 & $proc & 0n10 | 0xE << @rdx & @rbx & ($buffer))  { test_statement(0xACA); }
$error$
$end$
4912
 if (@r10 + 23 << $thread << @rsp & @rbx & +@r11 ! $buffer + -@r9 << @rax >> +@rax)  { test_statement(0x1BA2); @rax = @r8 ^ @r9 & ~@r8 | @rdi & @r12 ; } elsif ($ip << $thread & @rdx | @rdi & $teb ; @rdi >> $thread & @rsi ^ 0xC & @r8 & +$proc) { test_statement(0x1967); } elsif ($proc >> 2(($proc >> 2) { test_statement(0x1759); ; } elsif (@r8 & $thread ^ (@r13) ^ @r12 | $buffer ^ (++@rdx) == @r12 & 2 ^ @r8 | @r12 ^ @rax | 0y110 | $thread) { test_statement(0x2557);  if (@rbp < @rdi)  { test_statement(0x1ECC); } elsif (@r10(@r10) { test_statement(0x22EE); } elsif (@rax != @rax) { test_statement(0xCE0); }  for (@rax = ($proc); @rax <> @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8))@r8) { test_statement(0x9DA); } elsif (-$ip | +-0y1000((-$ip | +-0y1000) { test_statement(0x1EF); } elsif (0y1000 >< @rsp) { test_statement(0x1C89); }
$error$
$end$
4913
 if (@rsi << 15 ^ @r10 >> @rsp >> @r11 ^ $thread ^ @rax ^ @rbp ^ @r13 | @rbx << @rsp >> 14 ^ $buffer >> ~+@r8 & @rax ^ @rdx ^ $ip ^ @rbx)-@r11 + @r10 | @r11 >> @r10 & @rbp)  { test_statement(0xA6F); } elsif (0n5 << @rdi & @r12 ^ ~0n15 >> @rax <> @r12 ^ 0y1110 & @rdi ^ @r11 ^ $ip | 0x5 & (@rdx) ^ @rbp | $thread & @r12) { test_statement(0x805); } else { test_statement(0x810); ; }
$error$
$end$
4914
 if (@r9 + 0y10001 << @rsi >> @r13 << $proc & $ip << @r10 ^ @rbx >> @r10 ^ 0y10001 & @rax ^ @rbp & ~(@rbx) | @r11 >> ~@rax(0y1 + $ip & @rbx << 0y10010 >> $proc >> $proc ^ 0n6 << @rbx | @r10 ^ @r10)  { test_statement(0x875); } else { test_statement(0xBEA); }
$error$
$end$
4915
 if (@r9 | @r12 & @rbx >> $thread <= @rsi << 2 << @r11 ^ @rbp & @r13 >> 0y10 & $proc & @rsp ^ @rdi ^ @r8)  { test_statement(0x1924); } elsif ($thread << ~@r12 ^ @r9 >> @r8 ^ +(0) ^ @rbp ^ 0n7 | @rax >> ~($proc) ^ @rsp ^ @rdi ^ @r10 <= $thread << ~@r12 ^ @r9 >> @r8 ^ +(0) ^ @rbp ^ 0n7 | @rax >> ~($proc) ^ @rsp ^ @rdi ^ @r10) { test_statement(0x2045); } elsif ($buffer | $ip & $thread ^ ~~0 ^ @rbx))$buffer | $ip & $thread ^ ~~0 ^ @rbx) { test_statement(0x1362);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer = +-$ip | @r9) ; ;  This is a not opened comment */  This is a not opened comment */ } elsif (~@rax & ~@rdx = @rdi & 0y11 ^ @r10 | 0y1) { test_statement(0x532); } else { test_statement(0xC1B); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 | @r13 != @r13 | @r13) ;  /* This is a not closed comment }
$error$
$end$
4916
 if (($ip) + ~(@r13) << @r12 | @r11 << $buffer & 0y10 | 0n2 >> @rbx & @rsp ^ @r12 & @r12 | ~$teb & $ip ^ @r11 ^ @rsi | ~@r8 | @rbp 0n5 << 0n17 << @rbx >> @rdi >> ~~@rdx | $buffer)  { test_statement(0x2189); } elsif (@rdi & @rbp >> ~@r8 & $proc ^ @r8 ^ (@r8) ^ 0y0 ^ $proc | $ip & @r12 == 3 & -@rbx & $ip ^ @rsi >> 0n9 & @rax) { test_statement(0x1C6); } elsif (@r10 >> @rsp | +@rax & @rdi ^ @rdx ^ @r11 == ~@rsi >> @r11 | @rdx ^ 0x11) { test_statement(0x1250); }
$error$
$end$
4917
 if (@r13 + $thread << $ip >> @rax << @rbp >> @rdx >> @r10 & 0y10011 << @rdx >> @rbp @rbx + $proc | ~@rdi << -@r12 >> $ip >> @rdx ^ @rax >> @rax ^ @r9 ^ @rdi ^ $buffer)  { test_statement(0xFE7); } else { test_statement(0x1F51); }
$error$
$end$
4918
 if (@r12 + @rsi >> @r12 << $teb >> $ip >> @rdx & @r8 << @rsp >> $proc & 0x5 & @r11 & -~-@r9 | 0x6 >> $thread >> @rbx | $buffer & @r13 & +0n1 <= 4 + 0n2 << $ip << $proc ^ $ip >> ~@rsp & @rbx >> 0n15)  { test_statement(0x2644); } else { test_statement(0x15DE); }
$error$
$end$
4919
 if (@r9 | 0xF << $ip >= @r11 + @r13 << @rsi & $ip << @rsp >> @rsp & $proc & @r8 ^ @r13 >> (@rdi) >> @rdi & $proc >> $teb ^ -$buffer >> $thread ^ @r8 & @rbp)  { test_statement(0x964);  if ($proc & @rsi | $thread | $ip | 0xE = @rbx & ~@rbp ^ $ip ^ @rsp | @r8 | 0y10011 | @r12)  { test_statement(0x257B); } } elsif (@rsp >> @r12 >> 0y10010 & @rbp & @rsp & @rsp))@r9 & @r8 | @rbx & $proc) { test_statement(0x1040);  while  (~$proc <> @rdi | @rdi | -($teb))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4920
 if (@r10 ^ +@rdi << -@rsp >> @r8 >> @rsi ^ @rsp >> ~$ip & @rbp & @rbx ; @rsi + @rdx)  { test_statement(0x33B);  This is a not opened comment */ }
$error$
$end$
4921
 if ($buffer << @rsp << $teb >> 0xE << $ip >> @r12 >> @rbp ^ 0y10 >> @r10 ^ @rbx >> @rdx & @rbp & @r10 ^ @rdx & $thread ^ 0x5 | (@rbx) >> $teb & ~$buffer | @rbp & @r9 | ~((@r8)) & $ip ^ @rdi | $proc | @r8)$buffer << @rsp << $teb >> 0xE << $ip >> @r12 >> @rbp ^ 0y10 >> @r10 ^ @rbx >> @rdx & @rbp & @r10 ^ @rdx & $thread ^ 0x5 | (@rbx) >> $teb & ~$buffer | @rbp & @r9 | ~((@r8)) & $ip ^ @rdi | $proc | @r8)  { test_statement(0x7B5); ;  if ($thread ^ +@r12 | 0x2 >= @rsi ^ @r8 | +$ip)  { test_statement(0x40D); } elsif (@rax | ($proc) > @rax | ($proc)) { test_statement(0x22A1); } elsif (@r10 <= @r10) { test_statement(0xE82); } elsif ($proc = $proc) { test_statement(0x82); } elsif (0n8)@r12) { test_statement(0x1307); } val = -@r9 ^ @rdi ; } elsif (0n6 & @r11 ^ @r13 & ($thread) | +@r12 & $thread & $ip | @r11 & @rdx | $proc ^ 0n7 | @rdx | @r10 >= 0n6 & @r11 ^ @r13 & ($thread) | +@r12 & $thread & $ip | @r11 & @rdx | $proc ^ 0n7 | @rdx | @r10) { test_statement(0x9D5);  /* This is a not closed comment  if ($teb | @rsp >< @rsi | $buffer)  { test_statement(0x21C3); } else { test_statement(0x1B32); } } elsif (0x13 >> $buffer & -@rbx & @rax ^ (@r10) & 0y1101 | $ip & @r13 ^ -@rax == 0x11) { test_statement(0x2412);  /* This is a not closed comment  /* This is a comment */ } else { test_statement(0x8EF); }
$error$
$end$
4922
 if ($ip << @rdi >> ~@rdx << $ip >> 0y10001 == @rdx + +@r9 | @r11)  { test_statement(0x1E73); }
$error$
$end$
4923
 if (@r8 >> @rdi >> $thread & ~@rbx << @rsi >> @rsp >> $ip & @rsi ^ @r8 | @r9 << @rsp >> @rdx & $ip & 0y110 ^ @rsp >> @r10 & $proc & $thread > @r12 & ~$thread & @rbx)  { test_statement(0x966); }
$error$
$end$
4924
 if (+$buffer + -0xD << @r8 >> @rdi << @r9 ^ @r13 << @r11 ^ @rsp >> @r13 | @rdi << 0y1100 & 0x6 >> $ip | @rbx >> 0y10010 | @r13 & 0x13 ^ @r13 ^ @r8 | @rbx | (+~@r11) | @rax = +$buffer + -0xD << @r8 >> @rdi << @r9 ^ @r13 << @r11 ^ @rsp >> @r13 | @rdi << 0y1100 & 0x6 >> $ip | @rbx >> 0y10010 | @r13 & 0x13 ^ @r13 ^ @r8 | @rbx | (+~@r11) | @rax)  { test_statement(0x738); } elsif (@rbx << @rax))@r9 << 0x12 >> $buffer & ($thread) | @rbp >> @r11 & $thread ^ 0xB) { test_statement(0x1925); } elsif (@r9 ! 16 & ~$thread ^ @r12 ^ @rax | $ip & $proc) { test_statement(0x867);  while  (0n13 | @rbp >< 0n13 | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 & @rdi | @rbp(($ip & @rbx) { test_statement(0x1FEB);  This is a not opened comment */  /* This is a not closed comment } else { test_statement(0x200B);  // /* This is a comment   break;  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@r12 > ~@r12) ;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@rax($teb) ;  /* This is a not closed comment }
$error$
$end$
4925
 if (0n10 + @rsp >> $proc << @r11 & @r11 & 0y10010 ^ -@rdx & @r8 >> $ip ^ 0x1 ^ 13 ^ @rdi ^ @rsp))@r13 >> @r11 >> $thread >> @rdi & -$thread << $thread)  { test_statement(0x1D4B); @rax = 0y1010 ;  /* This is a comment */  for (val = @r9; $buffer | @r11 ; $buffer | @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer << @rbx >> 0y101 >> @r11))$ip << $teb >> 0xE >> (@rax) ^ @r8 | $thread ^ @r11) { test_statement(0x17C5); } elsif (@rax ^ $buffer ! @rbx & $thread & @r12 ^ $ip & $teb | -0 ^ $ip) { test_statement(0x1EC6);  break;  /* This is a not closed comment  while  (@r13(@r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rbx(@rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx ^ (+@rax) ^ @rax | @r8 ^ 20($ip ^ @r12) { test_statement(0xCEA); } else { test_statement(0x5D4); }
$error$
$end$
4926
 if (@r11 >> $thread < -+@rbp >> +@r8 << @rbx >> @rdi >> 10 & +(@r13) & 6 >> @rsi & @rbp ^ @rsp << ~@rsp >> @r13 >> (@rdx) ^ @r12 >> @rax)  { test_statement(0x328); }
$error$
$end$
4927
 if (+@r12 + @rdi << @r10 << $buffer >> 0n3 ^ +0y101 << $ip & @r9 & @r10 < @rbp + @rdi << @r12 << $buffer & 0y10010 | ~@r13 >> @rsp >> +@rbp | ~@r13 >> @rsp & @r10 & 0y10010 ^ 0y1101 & @rax | $buffer)  { test_statement(0x16E3); }
$error$
$end$
4928
 if (0y0 << 11 << 4 >> @rdx << @r8 <> -$ip + @rdi >> @rsi << @r10 >> $ip & (@rsp) << @rax >> 0n4 ^ 16 << @rbx | @r9 >> @rbp)  { test_statement(0x139F); } elsif (@r13 << ($ip) ; @rax ^ 0y100 >> @rsp & ~@rdx & @rbx) { test_statement(0x1C8B); } elsif (0x0 >> 0n16 & @rdx & @rsp >< @rdi | @r12) { test_statement(0x5CE); } else { test_statement(0x1795); }
$error$
$end$
4929
 if (@r8 + (@r11) << @rsi >> @rdi << 0y101 & (@rdi) ^ @r12 << @r12 & ~@r11 ^ $buffer < @r10 + (0y1001) << @rdx << @r11 & @rbx >> +@rbp & ($ip))  { test_statement(0x6D3);  for (val = 10; @rsp ^ 0y1111 ^ 0n8 | @rax 0y1 ^ $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r11 ^ -@rsi((@r9 ^ @rdi | @r12 | $proc)  { test_statement(0x47B); } elsif (@rsp | @r9 = $thread) { test_statement(0x2657); } elsif (@rax((10) { test_statement(0x516); } elsif (@r10 >= @r10) { test_statement(0xB89); } else { test_statement(0x172); } }
$error$
$end$
4930
 if (@rdi + 0y1001 >> $thread & @r10 << @rsp >> @rsi | @r10 << ~$ip >> @r8 >> @rsp ! @rdi + 0y1001 >> $thread & @r10 << @rsp >> @rsi | @r10 << ~$ip >> @r8 >> @rsp)  { test_statement(0x21CA); } elsif (@rbx >> 0n18 >> -@rbx & @r11 & +@r9 & @r13 <= @rax << 2 & 0x5 >> @rbp ^ $buffer) { test_statement(0x21E);  while  ($teb ^ @rsp = $teb ^ @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } else { test_statement(0xB2F);  if ($ip ^ @rdi < @r8)  { test_statement(0x248A); } elsif (0y10011 | $proc $thread | @rdx) { test_statement(0x2160); } }
$error$
$end$
4931
 if (@rsp + 0x8 @rax + @r12 << $ip << (-@rsp) >> @rdi >> @rdi >> @r9 & @rdx >> @rax >> @r10 & @rax & 4 & (@rbp) ^ @rsp << @r10 >> 0x4)  { test_statement(0x1385);  while  (0n1 = 0y1101 & @rdi | @r13 ^ -@rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp >> @rdi >> @rbx ^ ~(0n15) & @r12 & @r9 != @rbp >> @rdi >> @rbx ^ ~(0n15) & @r12 & @r9) { test_statement(0xED0); @rax = @r11 & @r12 ; }
$error$
$end$
4932
 if (0n10 >> 0y1000 >> @r11 >> 0xF ^ 0n19 << $buffer & $buffer & 0y10 & @rsp ^ +$teb ^ $ip ^ @rsi ^ @r11 >= 0n10 >> 0y1000 >> @r11 >> 0xF ^ 0n19 << $buffer & $buffer & 0y10 & @rsp ^ +$teb ^ $ip ^ @rsi ^ @r11)  { test_statement(0x640);  /* This is a comment */ ; @rax = 5 ^ $ip | +6 ; } elsif ($teb << 0n19 | @rbp & 0n11 & +$thread | @rdx < 0n0 ^ @r8 & $thread | $ip >> @r12 & @rsp & @r9) { test_statement(0xEE5);  /* This is a not closed comment  /* This is a not closed comment } else { test_statement(0x10FC); ;  // /* This is a comment  }
$error$
$end$
4933
 if (@rbx >> 3 >> @r9 >> (@rsi) | @r10 >> @r13 >> @r11(@rbx >> 3 >> @r9 >> (@rsi) | @r10 >> @r13 >> @r11)  { test_statement(0xD46);  for (val = 10; $proc | @rbx ^ +$ip)$proc | @rbx ^ +$ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (2 << 0x8 >> @rdi >> @r10 >= @rdi << @rbp >> @rdx >> @rdx & ((@r8))) { test_statement(0x15F6);  while  (@rdx > @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx >> @rbx | @rdx))@r10 & @r11 & @rax) { test_statement(0x26C1); @rax = @r11 ^ @rdx | +@r8 ;  /* This is a comment */ } elsif ($buffer ^ @r11 != $thread & $buffer) { test_statement(0x23C);  break;  break; } else { test_statement(0x17A3); }
$error$
$end$
4934
 if (0n8 + 1 << @rax ^ @r10 << @rsi ^ ~@r13 | @rsi << @rbp & @rax >> 16 & @r11 & $proc | @rbp | $ip & ~@rax ^ 0x2 ^ @rsi = @rbp << 0y11 << @rbx | @rdx >> @rsp >> $teb | -@rbp & -0x8 & @r13 | 16 & @rdx)  { test_statement(0x1C7D); }
$error$
$end$
4935
 if (@rbp + -@r11 >> @r10 << @rsp >> @r9 >> @rsi & @rax & 0n4 >> 0x1 & -@rdi ^ @rsi | @rax >> $proc >> -@rbp ^ @rbp & +$ip ^ @rbp | @r10 >> @rdx & @r13 ^ @rbp & 0n3 ^ 0x11 ^ @rax == @r11 ^ @r8 >> $ip >> $teb | @rsp >> ($proc))  { test_statement(0x226);  /* This is a not closed comment } else { test_statement(0x2610); }
$error$
$end$
4936
 if (@r13 + @rdx >> @rsi & 0x10 << @r11 & @rax ^ 0n9 << $buffer ^ $thread >> @rsp & $teb & @r10 ^ (@r12) & 0n10 | 0y10011 >> ~@rsp & 0n3 >> @r9 & $proc & @rbx | +0y10000 >> @rbx & 0y1011 ^ $proc & @r8 | @rsi ^ @r10 | 20 ^ @rax == 0y0 ^ $proc & 23 & @rbx ^ $teb | @rax ^ ($proc) >> 11 & 0x6 & @rbx ^ @rdx)  { test_statement(0x26C0); } else { test_statement(0x1B41); }
$error$
$end$
4937
 if (@r9))@rsp + @r9 << 0y1101 << @r12 & 0y100 << @rdx & 0y101 >> @rbx & @rdx)  { test_statement(0x4A6); } elsif (@rbx >> @rbx & @r13 ^ @r12 & @r12 & @rbp ^ 0 ^ -(@rax) ; @r13 << $buffer >> @rbp >> 22 ^ @rbx >> $thread & 0n5 ^ @rdi & @rbx) { test_statement(0x839);  // /* This is a comment   while  ($teb (@r13) | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ((0n6) >= $buffer ^ 0y10011) { test_statement(0x3B9);  while  (@rdi <> $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 <= @r9) ;  if ($ip))@rsi)  { test_statement(0x754); } } else { test_statement(0x20CB); }
$error$
$end$
4938
 if ($thread << @rbp << $ip >> @rsp >> $proc >> -@r9 & +0n6 >> +$proc ^ 0y101 << @rdx >> @r13 & -~~$ip >> (@r10) & -(6) ^ @r9 & -@r11 >< 7 + -@r12 ^ @r11 << @rax ^ @r8 >> @r13)  { test_statement(0x23C); } else { test_statement(0x1F1A); ; val = @r12 ;  while  (+0n18)3)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
4939
 if ((0n17) << @rsp << +@rsp | +@r12 << @rsi & $teb | @rax & -0n7 ^ @r9 | @rsp & @r10 ^ @rsi | @r9 ^ @rbx))$proc >> @rax & $ip & @rsi)  { test_statement(0x1654); } else { test_statement(0xE40); }
$error$
$end$
4940
 if (@rbp + -@rbp << @rbx << @r10 | 21 << ~@rax | 0y100 >> (@rsi) & 0n19 & $ip = @rbp + -@rbp << @rbx << @r10 | 21 << ~@rax | 0y100 >> (@rsi) & 0n19 & $ip)  { test_statement(0x158F);  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
4941
 if (0n17 + $proc ! @rsi & 0y1001 >> @rbx >> $thread & $ip >> $ip & @r11 & @r8 ^ @rbx >> 16)  { test_statement(0x544);  while  (@r10 & @rdx ^ $ip ^ +@r9 <= @r10 & @rdx ^ $ip ^ +@r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; 0x12 < $proc | $thread | $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x14BE); }
$error$
$end$
4942
 if (@r11 + -@rdx << $thread & 0n2 & @r11 ; @r10 << 0xA >> 14 >> @r11 ^ -@r9 >> @rbx ^ +$proc & @rsp | @r9 << @rbx >> @rbp)  { test_statement(0x2E0); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 ^ @rbp ! 0xA) ; } elsif (+-@rdx >> -@rsi >> $thread ; @r13 << $proc >> @r13 >> 2) { test_statement(0x1A46); } elsif ($thread & @r11 ^ $buffer & @rbx ^ @rax | @r13 & @rsi ^ 0 == @r8 & @rsp ^ @r11) { test_statement(0x1520);  /* This is a not closed comment } elsif (@rbp & @rax | @rdx ; (0y110) & $teb | $ip | @rax | @rdx) { test_statement(0x14F); }
$error$
$end$
4943
 if (+~0n8 << $buffer << @rdi = +~0n8 << $buffer << @rdi)  { test_statement(0x1CEE); } else { test_statement(0xAD4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ^ @r12 | $teb | $buffer ! @rdx ^ @r12 | $teb | $buffer) ;  // /* This is a comment  }
$error$
$end$
4944
 if (0xA + @r8 << @rax & 0n4 >> $buffer >> @rsp & @rdx >> 0 & 0y1010 & 0y11 | @r9 << -+@rbp >> $proc | ~$ip >> +$ip ^ 0xA ^ 0y1011 == @rbp << @rdx)  { test_statement(0x1873); }
$error$
$end$
4945
 if (@r9 + @r10 >> @rdx << $proc & ~0n10 << $ip & @r10 & @r10 | @r11 & @r8 >> @rsi & 0y10000 & $buffer)@r9 >> @rbx << @rbp ^ @rbx << -$ip)  { test_statement(0x121);  while  (@r10 & @rdx < $ip & @r12 ^ +11 ^ @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (0y11 | 11 | (@rbp) > $ip ^ @rdi | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rax | 0y100 >= @rax | 0y100)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = +0n13 | @rbp ; } else { test_statement(0x2315); }
$error$
$end$
4946
 if ($teb + ($buffer) << 0 << @rsi >> @rdx >> 0y10010 >> $proc >= $teb & @rsp >> @rbp ^ 0xD >> @r10 ^ @rax >> 0y1011 ^ +@r12 ^ @r8 ^ @rbp)  { test_statement(0x1E11);  // /* This is a comment  } elsif (0n13 << $buffer >> @rbp >> @r13 ^ $thread >> 0y100 != @r10 << @r12 >> @rbp >> -@rbx | $ip >> @rbp ^ $buffer & @rdx) { test_statement(0x866);  /* This is a not closed comment }
$error$
$end$
4947
 if ($ip + @r11 << 0y110 ^ @r9 & @r9 >> @r10 & @rsp & -@r9 | +23 ^ +0y111 >> @rax | @rax >> $buffer & 14 & $teb ^ -$teb ! @r9 | +@r9 & $teb & 0x5 & @rdx ^ $ip >> @r11 & 0n10 & -@rbx ^ @rbp & @rsp ^ 0x5 | (15) | @r8 ^ @r12 ^ 0xB)  { test_statement(0x1AED);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x9 & @rbp | @r12 <= 0x9 & @rbp | @r12) ; } elsif ($proc << 0xD | (@rbx) >> -$proc & 20 & @r13 | ~@r12 & $ip | $thread == 0y1111 << @rdi ^ ~@rdi & @r8 ^ @rax ^ @r9 ^ @rax | @rdi >> $teb ^ @r8 & 7 ^ @rbx | (@rsp) ^ @rsi ^ $buffer | @r13) { test_statement(0x2311);  for (val = 10; $thread)$teb ^ -@r8 | +@rbx | @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = +@rbp ; } elsif (@r11 & 0xF ^ @r12 | @rbp & @rbp | 0x13 ^ @rbx | @rbx | @rbx >< 0n10 ^ @r13 ^ $thread | $thread & $ip) { test_statement(0x1CB0);  /* This is a comment */ } elsif (@r8 | $ip ^ $ip < @r10 & $thread | $teb ^ (@r10)) { test_statement(0x1D3B);  This is a not opened comment */  /* This is a comment */ } elsif (+$thread ^ @rbp(((@r12)) { test_statement(0xFE);  break; }
$error$
$end$
4948
 if (@rsp + $thread >> @rdx << $thread | $thread << @r10 & +@rbp | @rsp <> $buffer << @r8 << $buffer | $teb & @rbp >> @r10)  { test_statement(0x1320);  /* This is a comment */  break; } else { test_statement(0x845); }
$error$
$end$
4949
 if (@r9 + @r13 >> @r12 << @r10 >> @r11 & (@rdx) << $thread & $buffer >> ~-@r11 & (@rdx) == $teb + $thread << 0n4 & @r11 << @rbx | $thread >> @rax & @r13 & @r10 & +17 ^ @rsp >> $ip & @rdi & @r11 ^ 0n9 ^ @r10)  { test_statement(0x198C); } elsif (@r10 >> 1 & @r13 >> @r8 & @r10 <= (@rbp) >> @r9 | $buffer >> $ip ^ @r10 & 0n10 ^ +@r10 | @rax ^ @r11 ^ @rbp) { test_statement(0x256A); } elsif (@rdi ^ @r13 = @r9 >> @rax | ($proc) & @r9 ^ 0xA ^ @r9) { test_statement(0x191); } elsif (@rdx & @r11 | @rdx ^ ~@r13 | 0y1011 <> @rdx & @r11 | @rdx ^ ~@r13 | 0y1011) { test_statement(0x479); }
$error$
$end$
4950
 if ($ip + 0x2 << 0n12 >< @r13 ^ @r13 & @rax >> @rax & @rax & (@rdx) ^ @rbx >> ~@rsi)  { test_statement(0x6D4);  This is a not opened comment */ }
$error$
$end$
4951
 if (-$thread & 0y10 >> @rdx >> $buffer & @r12 >> (0y10000) ^ ~@rsi << 22 != -$thread & 0y10 >> @rdx >> $buffer & @r12 >> (0y10000) ^ ~@rsi << 22)  { test_statement(0x12FA);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n11 ^ @r13 > 0n11 ^ @r13) ; ;  break; } elsif (17 >> @rbp & 0x11 >> 2 & (@r8) | -@rsi & @r12 & @rbp ^ +~0y10011 & @rbp ^ @rbp != @r10 << @r8 & @rbp >> 7 ^ @rbp >> @rdi & @rsp & (~@r8) | 0n4 >> @rbx & @rsi & @r8) { test_statement(0x17AC); }
$error$
$end$
4952
 if (0x9 + $buffer << 0n14 & @rsi >> @rax >> $proc & 0n13 & @r12 & @rbx ^ $teb << @rax >> @r12 >> (@r9) | 0y10001 << @r11 & @r9 ^ @rbp >> -0y0 & 22 | @r8 >> 0x6 ^ 0n9 ^ @r9 <= 0x9 + $buffer << 0n14 & @rsi >> @rax >> $proc & 0n13 & @r12 & @rbx ^ $teb << @rax >> @r12 >> (@r9) | 0y10001 << @r11 & @r9 ^ @rbp >> -0y0 & 22 | @r8 >> 0x6 ^ 0n9 ^ @r9)  { test_statement(0x3E3); }
$error$
$end$
4953
 if (@r8 + @r8 ^ @rdi << 0y1100 & @r9))@rdi + +@rdi << $teb << ~$proc & @r11 | @r12 << 0x13)  { test_statement(0x5A0); } elsif (@rbx << 22 & @rsi >> 0x1 & @r9 > @r12 << @rbx & ~-0y1000 >> $ip) { test_statement(0x103B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi ^ $ip))~@rbx ^ @r8) ;  for (val = 10; ($teb) | @rsp ; @r11 | @rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@r12 < @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 & 0n2 ^ 0y10001 & @rdi != @r11 >> $proc & 0xE ^ $teb | 0x6 & $thread) { test_statement(0x322); } elsif (21 & @r12 ^ @rsi ^ @r8 <= +$buffer & @r11 ^ @r13 | ~@rsi | $teb) { test_statement(0x23AE); } elsif (0y10000 >= -23 | 0y100 | $thread) { test_statement(0x11A3); }
$error$
$end$
4954
 if (@r9 << @r13 << ~$proc >> +$buffer >> @r13 >> @rbp & $proc << @r12 & $teb >> @r11((@r11 + ~@r11 & $buffer >> 0x6 >> +@r8 & 0y10000 >> -@r8 | ~@rsp << @rsi >> @rbp | +0n16 >> @r12 & 22 | 0x0 & @rdx ^ 0x4)  { test_statement(0x1157); }
$error$
$end$
4955
 if (@r8 + @rsp << $buffer << @rax >> 0y10 << $proc)@r8 + @rsp << $buffer << @rax >> 0y10 << $proc)  { test_statement(0x1C69); } else { test_statement(0x2FC);  /* This is a comment */ }
$error$
$end$
4956
 if (@r11 + -@r11 >> ~$thread >> $ip & 0y10011 ^ 0x3 | @r11 >> $proc >> 0xF & @r13 >> @rdx & @r8 ! @rbp + @r10 << 0n15 & @r13 << (@r13) & @rbp >> 16 ^ 0n7 << $teb ^ -$ip >> @rbx & @r9 ^ @r12 ^ $ip ^ @r8 | @r9 << -0y1011 ^ ~$proc | @rax)  { test_statement(0x19CF);  /* This is a not closed comment  This is a not opened comment */  // /* This is a comment   while  (@r12((@r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13))16) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx == @rbx) ;  if (@rsi ; $proc)  { test_statement(0x1570); } } elsif ($buffer & ++@rsp | $thread & @rsp ^ $ip & +@r8 ^ @rdi(($ip << @r10 ^ @rsp & $ip & $thread | $thread & $teb) { test_statement(0x17DD); } elsif ($thread >> ~0n11 & @r8 & @r8 ^ @rax))@rax & 0y10010 & @rsp | @r10 | @rax ^ @rdx | 0n9 | @r10) { test_statement(0xA62); } elsif (@r11 & @r8 | $thread ^ @r13 | @rsp | @rsi >< @r11 & @r8 | $thread ^ @r13 | @rsp | @rsi) { test_statement(0x307);  if ($thread >< $thread)  { test_statement(0x26A5); } elsif (@rsp(0y1000) { test_statement(0x1A3F); } elsif (0x11 ! ($ip)) { test_statement(0x1057); }  /* This is a comment */ @rax = @rsp ;  /* This is a not closed comment ; } else { test_statement(0x79C);  break; }
$error$
$end$
4957
 if (@r9 >> @rdi << @rsp | $buffer << @r12 & @rbx ^ @rsp >> @r11 ^ @rdi ^ @r11 ^ @r10 ; @rdx & 0y1101 ^ @rdx & $buffer & @rdi & 0n15)  { test_statement(0x4CD); @rax = 0n7 & -@rsi & $buffer ; } elsif ($teb >> @rsp ^ $ip >> $thread ^ -~$proc | $proc >> @rbx ^ 0y1 ^ @r10((@r12 >> @r10 >> @rdx ^ $teb >> @rsp & 0x9) { test_statement(0x1773); } elsif (0n12 >> @rsp ^ $buffer ^ @rsi | $thread & -@rbx > 0n12 >> @rsp ^ $buffer ^ @rsi | $thread & -@rbx) { test_statement(0x1B9A);  for (@rax = @r11 | $thread; $proc | @rdi >= @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xB38); @rax = $thread & @rdx ^ @r11 ^ ~0n15 | @rax ^ -0y100 | -@r8 | $proc ;  /* This is a comment */  break; }
$error$
$end$
4958
 if ($ip + @rsi << 0n17 >> $buffer >> @rsi >> @r11 ^ $teb >> 12 | $ip << $thread & @r11 >> @rsi ^ @r12 & 15 ^ @r12 ^ (@r12) ^ 0y1000(-0x2 + $buffer << ($buffer) << @r12 & @rbx >> $thread | @r10 << @r13 ^ 0y1010 ^ @r11)  { test_statement(0xDEA);  /* This is a not closed comment } elsif ((0n19) ^ $teb ^ $thread | @r13 < 0n17 << 0xE | $teb >> @rsp & @r8 & $buffer | $teb & @rdx ^ @r8 ^ @rdi) { test_statement(0xF3B);  // /* This is a comment  } else { test_statement(0x15DF); }
$error$
$end$
4959
 if (0y1100 << 0n2 << $ip ^ 6 << @r9 ^ $ip >> $buffer < @rax << @r9)  { test_statement(0x1CDB);  // /* This is a comment  } elsif (~0x13 >< ~0x13) { test_statement(0x13F1);  /* This is a comment */ } elsif (@rsi >> -@r13 & @rbp ^ @rbx & $proc | $proc & @rax | @r10 ^ -@rsp(12 >> $thread & @r12 & @rsi | $buffer & @rsp | @rdi ^ $thread) { test_statement(0x5C5); } elsif (@rax & 0n7 ^ -$thread ^ @rbx | @r12 ^ @r8 | $teb >< @rax & 0n7 ^ -$thread ^ @rbx | @r12 ^ @r8 | $teb) { test_statement(0xF10);  for (@rax = @r11; @r8(($ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (0n5 = @r13 ^ (-(@r9))) { test_statement(0x25D8); } elsif (+@r12 | 0n7 ; @rbp) { test_statement(0x1988); } else { test_statement(0x7AC); }
$error$
$end$
4960
 if (@r10 + $teb >> @rbp << @rdx >> $teb >> @r11 ^ @r9 << @r10 ^ $teb >> $ip & @rax == @r10 + $teb >> @rbp << @rdx >> $teb >> @r11 ^ @r9 << @r10 ^ $teb >> $ip & @rax)  { test_statement(0x1C0); } elsif (@rdx ; @rdx) { test_statement(0x2469); } elsif (0x2 >= @rbx >> $teb & @r11 ^ @r9 | @r10 | ~@r10 ^ $buffer | $teb | (@r11)) { test_statement(0xBA1);  /* This is a not closed comment } elsif ($thread & @rsp ^ $teb ^ @rax | (@r12) | @r12 > $buffer ^ @rsi ^ $buffer | -$thread | @r8 | ($ip)) { test_statement(0xFBE); @rax = @r8 ; @rax = @r11 ; }
$error$
$end$
4961
 if ($teb + ~0xB << @r12 >> @r10 << @rsp >> @rdx & @rdi & $teb >> 0xC & @r8 | (($proc)) << 0n5 ^ @r8 & $ip & @r12 ; $teb + ~0xB << @r12 >> @r10 << @rsp >> @rdx & @rdi & $teb >> 0xC & @r8 | (($proc)) << 0n5 ^ @r8 & $ip & @r12)  { test_statement(0x2146); } elsif (0x0 >> -(~@r8) >> @rax & 17 & @rsi & $proc <> 0x0 >> -(~@r8) >> @rax & 17 & @rsi & $proc) { test_statement(0x1F0); } elsif ($buffer >> @rsi & @r11 & +$thread ^ @r8 & @r12 | $thread | -$teb ^ @r10 == $buffer >> @rsi & @r11 & +$thread ^ @r8 & @r12 | $thread | -$teb ^ @r10) { test_statement(0x113A); } elsif ($ip & @r10 ^ @rdi ^ 0y10010 == $ip & @r10 ^ @rdi ^ 0y10010) { test_statement(0x736);  // /* This is a comment  val = 0x12 ; } elsif ($proc | @rbx | @r11((@r8 ^ +@rsp | @rbp | 17) { test_statement(0x220F); } elsif (@rbx((@rbx) { test_statement(0x1829); }
$error$
$end$
4962
 if (@rsp + @rax << ~$proc << @rbx >> $teb >> -@r10 & 0y10010 ^ 12 << @r9 & @r10 & 0n10 ^ @rbp >> $thread & +0n2 & $teb | @r13 & @r13 & @rbx & 13 | @rsi & @rdx & @rbp ^ @r11 & 10 > @r8 | @r10)  { test_statement(0x8E8); } elsif ($buffer << $buffer >> @rax | ($teb) >> +$thread | @r8 & 0y100 | ~@r9 ^ @rax | (@rdx) = $buffer << $buffer >> @rax | ($teb) >> +$thread | @r8 & 0y100 | ~@r9 ^ @rax | (@rdx)) { test_statement(0x28F); } elsif ($buffer & @r9 & @rax <= $ip >> 12 & @r11 | @rbp | @r9 ^ @r13) { test_statement(0x169B); } else { test_statement(0x1C60); }
$error$
$end$
4963
 if ($thread + @rax << ~+~0y1101 >> $ip << $buffer & $proc >> @r8 >> $ip == -0xE + @rdx << (@rsi) << @r13 & $ip << @r9 >> @r10 >> ~-@rax ^ @r13 ^ $teb >> +@rsi ^ @rbp ^ @rdi ^ $proc | @r11)  { test_statement(0x22E); } elsif (0n8 & 0y1110 ^ $thread >> @r8 & +@rbx >= ~0y101 >> @rsp >> @rdi ^ ~@rdx ^ @r10 ^ +~@r8 ^ 0n18 | @rdi | ((0x8)) & @rdx | @rsi ^ @rsi) { test_statement(0x62F); }
$error$
$end$
4964
 if ($ip & $ip ^ @rbp << -$buffer & $thread & $ip | -@rbx << $buffer >> @rdx >> @r13 ^ @rax & @rdi & ~+0x2 $ip & $ip ^ @rbp << -$buffer & $thread & $ip | -@rbx << $buffer >> @rdx >> @r13 ^ @rax & @rdi & ~+0x2)  { test_statement(0xD62); } elsif (@rbx << @rsp | @rax ^ @rdi ; $ip & $proc ^ @rsp ^ @r9) { test_statement(0x25AB); }
$error$
$end$
4965
 if (@r11 << @rbp & @rsp << @r11 >> ~$proc >> $teb ^ @rdx << @r10 >> @rbx & $buffer >> $buffer & @rdi | @rax << +@r11 >> 0n10 | @r10 < @rdx + $teb >> @r11 & @rbx << @r9 >> @rbx & ~@rdi & @rdi ^ ($proc) << $proc >> @r12 ^ 0y110 >> +@r12 ^ $teb ^ @r9 ^ @r8 | @r9 | 0 >> $buffer & @r8 ^ @rsp)  { test_statement(0x1E93); ;  break; } elsif (@r9 >> @r12 >> @r9 & @r8 >> @rdx & @r13 | 0y110 ^ 0n19 & 0n13 | $ip ^ @rsp ^ 0xD = @rbp << @rdi & 0n18 ^ 0x10 >> @rbp | @r9 & 0y111 & $thread ^ ~0x3 & @r8 ^ $thread ^ $ip | -$thread | @r13 ^ 0y1100 | +$teb) { test_statement(0x177F); }
$error$
$end$
4966
 if ($thread + $ip << @rsp << 12 >> 0y10011 >> 10 ! ~$proc)  { test_statement(0x244C); } else { test_statement(0x369); }
$error$
$end$
4967
 if (0xB << ~$proc >> @rbp = 0xB << ~$proc >> @rbp)  { test_statement(0x1EC9); } elsif (@rdx >> @r8 & 0x10 >> @r10))@rdx >> @r8 & 0x10 >> @r10) { test_statement(0x9C4); } elsif (12 & @rsp ^ 7 & @rax ^ @rsp | @rax & ~@rsp(0y1011 & @r13 & -$teb | -@r11 & @rax | @rbp | $buffer) { test_statement(0x7BB); ;  for (val = 10; @r13 != @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   This is a not opened comment */  while  (@rbx > @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
4968
 if ($ip + @rsp << @r10 << -@rax >> $ip << @rsp & @r8 << @r8 | -0y11 >> ~@rsp | @r10 & $teb | -$teb & @r9 ^ @rbp <> ~@rsi << @r11 ^ @rsp << 0y1010 ^ @r10 >> $ip | $proc ^ @rsi >> 0y1110 | 0n17 & @rbx & @rbp)  { test_statement(0x8AA);  /* This is a not closed comment  /* This is a not closed comment } else { test_statement(0x50A); }
$error$
$end$
4969
 if (0n0 >> @rdi << $ip >> @r9 ^ @rdx >> @r9 & 0n13 & ~@r13 ^ 0n19 >> @rsp | $proc << @rbp >> 3 >> @rbx & ~0y1 < 0n0 >> @rdi << $ip >> @r9 ^ @rdx >> @r9 & 0n13 & ~@r13 ^ 0n19 >> @rsp | $proc << @rbp >> 3 >> @rbx & ~0y1)  { test_statement(0x26F2); ; } elsif (@r12 ^ $teb & @r13 & @r10 | 11 > @r12 ^ $teb & @r13 & @r10 | 11) { test_statement(0x45B); }
$error$
$end$
4970
 if (@rsp + 0n8 >> $buffer << @r12))@r12 << @r10 & 0y1000)  { test_statement(0x1A2E); @rax = 0n18 >> $proc & @rbp ^ @r10 | (0y1011) & 0y0 ;  // /* This is a comment   break; } else { test_statement(0xCE6); ; }
$error$
$end$
4971
 if (@rsi << $teb ^ 0n6 << @rdi ^ @r8 >> @rax ^ $ip ^ @rsp ^ $ip | $thread << @r10 & @r8 ^ $ip & @r13 ^ $teb & -@rbx > @r13 >> (3) ^ $teb >> ($ip) >> @rdi ^ @rsp >> (@rbp) & @r8 & @r8 ^ $buffer & 0y1100 ^ ~0y10011 ^ 17)  { test_statement(0x1D6A); } else { test_statement(0x1339); }
$error$
$end$
4972
 if ($buffer >> $teb ^ @r8 << 0y10000 >> $thread >> @r10 & $ip & @rsi & @r13 ^ $teb >> @r11 & @r9)@rsi + 0n1 >> 0y1000 & $ip | @rdx << @rax ^ @r9 >> @rdx & @r9 ^ @rdx ^ 0x11 ^ @rbp | 23 & @r8 & @rbp ^ 0xB & @r8 ^ @r8)  { test_statement(0x2605);  /* This is a not closed comment  while  (0y1000 <> 0y1000)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   for (@rax = (~@rdi); -@rdi > -@rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rdi >< @rdi)  { test_statement(0x4A9); }  // /* This is a comment  } else { test_statement(0x1E0F); }
$error$
$end$
4973
 if (@rdi + 0xA << 0x8 << 5 >> @r11 << 0x11 | @r12((@rdi + 0xA << 0x8 << 5 >> @r11 << 0x11 | @r12)  { test_statement(0x2210); } elsif ((@r10) ^ @r13 | @r9 >> @rbx & @rax & @rdx ^ @r12 ^ +@r8 ^ @rsp)@r8 << ~0x10 | @r11 >> $buffer ^ +$ip & @rsp ^ 0n9 | 0n18 ^ @r10 ^ @r8) { test_statement(0x72A); } elsif (@rdx | $buffer & @r9 ^ @r11 ^ @rax | 13 | $thread > 23 & @rbp & 0x12 | @rdx & +1) { test_statement(0x8B6);  break; } else { test_statement(0x14FF); }
$error$
$end$
4974
 if (@r12 >> $thread ^ @rax << --0y1110 ^ @rbp & (@rsi) ! $teb + @rax >> 0y110 << $buffer >> 0n9 ^ @rbp >> $ip >> 0n1)  { test_statement(0x15B4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 & @r9 ^ @r11 | @rdx <> +@r9 ^ @rax ^ 0x0 | ~+@r8 ^ 0n9 | @r12) ; }
$error$
$end$
4975
 if ($ip ^ @r10 << @r9 & $teb | @rax >< $ip ^ @r10 << @r9 & $teb | @rax)  { test_statement(0x253F); } elsif (@rsi << $teb >> @r10 & @rbx ^ 14 ^ @r12 | $ip ^ $ip & (@rsp) ; @rbp << $thread >> @r10 >> @r9 ^ @r8) { test_statement(0x1575); } else { test_statement(0x20C8);  /* This is a not closed comment }
$error$
$end$
4976
 if (@rdi + 20 << @r9 & @rbx << @rdx & 0n18 >= @rdi + 20 << @r9 & @rbx << @rdx & 0n18)  { test_statement(0x2370); }
$error$
$end$
4977
 if (0y1011 << $teb << $thread & @r12 << @rbx >> @rbp >> @r12 & ++$ip & @r10 | @rdx >> -@rdx & 0y10010 >> 0n0 & $thread & @rbp ^ @r8 ^ $teb | $ip((0y1011 << $teb << $thread & @r12 << @rbx >> @rbp >> @r12 & ++$ip & @r10 | @rdx >> -@rdx & 0y10010 >> 0n0 & $thread & @rbp ^ @r8 ^ $teb | $ip)  { test_statement(0x1055);  /* This is a not closed comment ; } elsif (-@r8 & 0x12 >> @r13 | @r8 >> 0n19 & ~0y0 & $buffer -@r8 & 0x12 >> @r13 | @r8 >> 0n19 & ~0y0 & $buffer) { test_statement(0x1B7F);  /* This is a comment */ } elsif (@r9 >> @r13 & 0y0 & @rsi @r9 >> @r13 & 0y0 & @rsi) { test_statement(0x1BBB); } elsif ($thread ^ $ip | 0n18 ^ $thread != @rdx ^ @rbp ^ @r13 | @rsp ^ $teb | @r12) { test_statement(0x29E); @rax = 0n1 | @rsi ; } elsif (@rbp))@r10 ^ ~0y0 | @r10) { test_statement(0x857);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 >< @r12) ; } elsif ((@rsp) | 0x0((@rax | 3) { test_statement(0xD65);  break; } elsif (@r10(@r10) { test_statement(0x421);  while  (0x6(($proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n0 <= 0x6) { test_statement(0x14E9);  // /* This is a comment  } else { test_statement(0xB84); }
$error$
$end$
4978
 if (0x10 + @r9 & 0y110 & @rsp & @rbx & $buffer ^ +@r11 << (0x1) & @rsp >> $proc & $proc & @rbx ^ +$ip >> @rax & 0y10011 ^ @rbx & @r9 ^ 0x6 ^ @r12 ! @r10 + @r8 << @rax >> @rbp << @r9)  { test_statement(0x1027);  while  ($buffer ^ @r10 ^ 0n19 | 7 | (@r11) @r9 & @rdi | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1C56);  /* This is a not closed comment }
$error$
$end$
4979
 if (@rdx + 0x12 & @r13 << @rax & 0y10010 & @r12 & @r10 ^ @r12 ^ @r8 >> @r13 & -@r9 & @rsi))@r11 << @rax)  { test_statement(0x8AF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x12 ^ (($buffer)) | $thread >< 0x12 ^ (($buffer)) | $thread) ;  while  (2 | @r12 != @r13 | @r10 | 0n17)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x2 << @rbp ^ (@r10) >> @rbp & -~0y100 ^ @rbx & -$proc)$buffer >> 21 >> @r10 ^ @rax >> @rsp & @rdi ^ $thread & @rsi) { test_statement(0x1871);  This is a not opened comment */  /* This is a comment */ ;  // /* This is a comment  } elsif (@r8 >> @rdx & 0n4 & @rbx >< -$buffer >> +0n5 ^ @rsi & @rbx ^ $ip ^ 0n16 | @rbx ^ -@r10 ^ 0y1101 | +$ip ^ 0xD) { test_statement(0xC00);  if (-17 >< @rdi)  { test_statement(0x19D); } elsif (@rdi >< @rsp) { test_statement(0x2394); } elsif ($proc <= @rax) { test_statement(0x1819); } }
$error$
$end$
4980
 if (-0x3 + @rbx >> @rdi & @rbx ^ $proc << @rsp >> $thread >> @rdi | +@r12 << @r9 >> 0y10010 | 0xC & $buffer & +@r9 | $teb & $buffer ^ -3 ^ @rbp == -0x3 + @rbx >> @rdi & @rbx ^ $proc << @rsp >> $thread >> @rdi | +@r12 << @r9 >> 0y10010 | 0xC & $buffer & +@r9 | $teb & $buffer ^ -3 ^ @rbp)  { test_statement(0x40);  break;  for (val = 10; $ip ^ @r11 != $ip ^ @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rbp ^ ~(10) | -@r9 ;  while  (-$thread != 0)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = 0y111 ;  // /* This is a comment  } else { test_statement(0x2094);  break; ;  /* This is a not closed comment }
$error$
$end$
4981
 if (@rax + @rsi << 0x12 & $teb << @rdi | 0n17 >> @rdx >> 0xA ^ @r13 & 0n13 & $thread ^ @r13 | 0x13 >> $proc & @rsp((@rax + @rsi << 0x12 & $teb << @rdi | 0n17 >> @rdx >> 0xA ^ @r13 & 0n13 & $thread ^ @r13 | 0x13 >> $proc & @rsp)  { test_statement(0xDD8); ;  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer | @rsi(0x7 | @r13) ;  while  (@rdi @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xD98); }
$error$
$end$
4982
 if ($thread + @rax & 5 >> (0y10) >> -@rbp ^ $teb >> @r12 ^ @rbp >> @r10 & -0y1000 & @r9 >< @r10 + @rbx << @rsi >> $buffer << @r11 & @rbp | @rbx << @rax & @rsi & $teb ^ @rbx & @rsi & @r9 ^ $thread ^ 0x1)  { test_statement(0xC6); } else { test_statement(0x1FB6);  if ($buffer | @r8 ; ((@r11)) | @rsi | 0y0)  { test_statement(0x1449); } elsif (0y10001 > @rdx | +@rax) { test_statement(0x9ED); } elsif (@r13 = @rax) { test_statement(0x340); } elsif (0xF != @r9) { test_statement(0xABB); } elsif (@r12 = @r12) { test_statement(0x1E9E); } else { test_statement(0x2E0); } }
$error$
$end$
4983
 if (~@rdi >> @r8 | @r8 << -@r8(@rdx + +~@rax & @rdi << @r13 >> @r11 >> @rbp & 0y111 | @r12 << @rsi | 0y100 >> @rbx | ~$teb & 15 ^ @rsp)  { test_statement(0x212E);  This is a not opened comment */ } else { test_statement(0x1F80); }
$error$
$end$
4984
 if (($teb) + @r12 << $thread >> @rbx | ~@r9 >> 0n10 >> @rdi ^ @rdx ^ ~@r11 & @r13 ^ $thread ^ @rdx | $proc >> $ip ^ @rdi & @rax < @rdx + @rsp >> 2 & @r8 >> (@r11) | -@rsi | $thread ^ @r8 & @rdi)  { test_statement(0x666); } else { test_statement(0x851); }
$error$
$end$
4985
 if (@r8 + $proc << @r9 << @r10 & 0xC & 7 & @rbp & @rsi ^ @r8 << $proc & @r11 >> @r10 | @r8 << @rdi >> 0x12 & $proc >> @rax & @rsp | @r13 >> @r12 ^ 17 & $buffer ! @r8 << ~@rdi ^ @rbx << 0y1100 & @r9 >> @r10 & @r9)  { test_statement(0x23AC); } elsif ($teb | $proc >> -@rdi & $ip ^ $thread)7 << $buffer >> @rsi & @rdx) { test_statement(0x11B0);  /* This is a not closed comment  // /* This is a comment   /* This is a comment */ }
$error$
$end$
4986
 if (@rbp + @rsp >> ~@r13 << 0x1 <> @rdi << @rbp | @rbp << @rsp >> 0n16)  { test_statement(0xA1A); } else { test_statement(0x70F);  // /* This is a comment   // /* This is a comment  val = $proc ; }
$error$
$end$
4987
 if (@rax << -@r13 >> @r8 << @rbx & ~13 << ~+@rbp >> 0n12 >> 0x2 & (0n8) <> -@rbx + @r12 >> -@rsp << $thread >> @rax >> @r12)  { test_statement(0x991); ; } elsif (@rbp >> @rbp >> @r8 ^ @rbx ^ ((@rbx)) & @r8 ^ $ip | @r8 >> @r9 & @r9 ^ @rdi & -@rax ^ @rdx ^ @rdx | @rbp & @r12 ^ @rax | @rsp >< @rbp >> @rbp >> @r8 ^ @rbx ^ ((@rbx)) & @r8 ^ $ip | @r8 >> @r9 & @r9 ^ @rdi & -@rax ^ @rdx ^ @rdx | @rbp & @r12 ^ @rax | @rsp) { test_statement(0x1261);  if (21 | ($ip) >< @r12 ^ @r13 | $thread | 0x9)  { test_statement(0x158E); } elsif (@r11 | @r9))@r8) { test_statement(0x1C57); } elsif (16 @r10) { test_statement(0x9D5); } elsif ($proc != @r8) { test_statement(0xE5F); } elsif (($ip) 0n12) { test_statement(0x1153); } }
$error$
$end$
4988
 if (@rsi + @r9 >> @rbx << @rdi >> ($thread) >> 0y101 & @rsp & 0y1000 >> $proc & $proc & @rsi | @rdx >> 0y10011 ^ 0x1 >> @rdi & @rdi | $buffer >> @rsi & $buffer ^ @r12 & ~0xF | -0xF & 16 ^ @rbx | ~$thread ^ @r12 ! @r9 >> @rdi << $proc ^ @rbx << @rbx >> 0x2 >> 0x5)  { test_statement(0x1078);  while  (@rsp ^ $buffer ^ $ip >= $thread & @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 << @r13 & $teb & $ip & 0y1100((@rsi << +0n7) { test_statement(0x10DE);  for (val = 10; @rsp ^ $ip)@rsi ^ @rdx | @rax | +@r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (@rax = @rbx | $teb; 0y110 >= 0y110;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  for (val = 10; @rdx <> @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 >> @rax & 0y1111 ^ @r10 & 0y1001 != @r9 >> @rax & 0y1111 ^ @r10 & 0y1001) { test_statement(0x45F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 >= 0n16) ; } elsif (@r8 & (@rbx) | @r12 ! @r8 & (@rbx) | @r12) { test_statement(0xEA6); } else { test_statement(0x1434); }
$error$
$end$
4989
 if (@r10 & 0n10 >> $buffer >= ~@r9)  { test_statement(0xC8C);  /* This is a not closed comment } elsif ($proc ^ -@r11)0 << @rbp & $ip >> 15 & @rbx & $buffer) { test_statement(0x1060);  /* This is a not closed comment } elsif (@rsi >> @rsp & @rbx & @rdi ^ ~+$proc & $teb((+@r11 >> $teb & $buffer & @r13 ^ 14 & @r9 ^ @r10 | 0y10000 & @rsi | @rbx | 0x10 | $teb) { test_statement(0x1A2B); } elsif (@rdx | @r8 ^ @rbx | @rdx | @rbp ! @rsi & @r9 | @rbp ^ @r12) { test_statement(0x983); } elsif (@rax ^ $thread <= @rdx) { test_statement(0xCFE); } elsif (@r10((@rbx | $ip) { test_statement(0x1059); }
$error$
$end$
4990
 if (@rdi << 10 >> $buffer << @r10 & @r9 << ($teb) >> @r11 & @rsi ^ @rbx << @rsi & $ip >> @rdi ^ $ip >> @r10 ^ @rdi ^ @rdi ^ (@rax) | @rbx ^ $teb >> $buffer < $ip << 0y1100 << @rbx >> +@r10 >> @rbp >> @rax ^ @rsi << @rsi)  { test_statement(0x1642); @rax = @rbp >> @rbx & $teb & @r12 ^ ~@rbp & 6 ^ 12 ; } elsif ($buffer >> @rax & @r13 ^ @r12 >> @rax & $proc @rax << +@rbx | @r12 & @r12) { test_statement(0xBC4); } elsif ($proc >> @rbp & @r9 ^ 0n0 | @rax ^ 0n3 ^ @rbp | @r11 == @rbx ^ @rbx) { test_statement(0x1373);  break; } else { test_statement(0x948); }
$error$
$end$
4991
 if (@rbp + @r11 << @r10 << +$teb & @rdx >> @rdi >> $teb & 20 >> @r13 = @rbp + @r11 << @r10 << +$teb & @rdx >> @rdi >> $teb & 20 >> @r13)  { test_statement(0x3FE);  This is a not opened comment */  // /* This is a comment   // /* This is a comment  } else { test_statement(0x265F); }
$error$
$end$
4992
 if (~0n1 + @r12 << @r13 >> $ip >> @rbp >> ~@r9 & @r13 & $proc | @r8 << 7 ^ 0xF & @r10 | @rsp ^ $teb & @rsi($ip + @rbx << $ip << $proc >> -@rbp >> $ip)  { test_statement(0x256); }
$error$
$end$
4993
 if ($buffer + +0y1110 << @rsi @r11 >> $buffer << ~@r13 >> @r8 | $buffer >> @rdi)  { test_statement(0x824);  for (val = 10; $teb | 0n19 | 0n2 | @r13 ! @r12 & @rdi ^ @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x217A); }
$error$
$end$
4994
 if (@rdx << @rdi >> 0x13 & @rsp >< ($buffer) ^ ~+@rsp << @rbx ^ 0y0 >> $thread)  { test_statement(0x11B4);  // /* This is a comment  }
$error$
$end$
4995
 if ($proc + -$proc >> -$teb = ~0y1 >> $proc << @rdx >> @r9 >> $ip & @r8 >> @rdx >> @rsp & 0y101 >> @r10 | $ip & +@rsp >> @r12 & 2 ^ 0n19 ^ @r11 ^ 0x12 ^ @r9)  { test_statement(0x1507); } elsif (@r10 >> 14 & @rax & @rdi & $proc | (0y1110) >> @r11 ^ @rdi ^ @r10 ^ $proc >= @rdi << @rdi >> @r10 >> @r9 & @r12 >> @r8) { test_statement(0x1AA6);  break;  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 = 0n6) ; } else { test_statement(0xF58); }
$error$
$end$
4996
 if (@r10 + $ip & @r8 << @rdx >> @rsp & @rbx >> (@rax) & @rdi & @rbp | +@r11 >> @rax >> @rbx & @r10 >> $ip((@r10 << @r10 << 0y1010 & ~0x13 << ($teb) >> @rbx >> 5 | ~@rdi << @rbx >> @rbx & @rax >> @r13)  { test_statement(0x2088); } else { test_statement(0xF9E); }
$error$
$end$
4997
 if (@rdi + @r9 ^ (0x1) << 0n15 & 0n15 & @rbp & 0n2 ^ 0n4 >> @r11 & $buffer & $teb | @rax << 0n3 >> @rbx <= @r8 << @r9 >> 1 << +@r8 >> @r8 >> @r10 | @r11 << @rax >> 0n14 >> 0n16 ^ +$teb ^ @r8 ^ $ip ^ 0x7 | @r9 >> +@r10 | @r8 ^ @r12)  { test_statement(0xC53); ; } elsif (@r11 >> $thread & @rsp & @rax & (@rax) ! @rdi << 0n4 & @rsp & @r12 ^ @rsi >> @r9 & $thread & @rdi ^ @rdi & 13) { test_statement(0x1622); } elsif (@r10 >> 0y1 <> @r10 >> 0y1) { test_statement(0x1DC1); } elsif (@r9 & @r9 ^ @r8 ^ @r12 | -@rax | @rsi | $buffer)@r9 & @r9 ^ @r8 ^ @r12 | -@rax | @rsi | $buffer) { test_statement(0x1619);  while  (@rbp == @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } elsif (@rsi | $ip | @r8 = @rsp ^ $ip | 15) { test_statement(0x1481); ; } elsif (@rbx ~1) { test_statement(0x199B); @rax = 0n1 ; } else { test_statement(0x680);  This is a not opened comment */ }
$error$
$end$
4998
 if ($buffer + @r9 << @rsp << @r11 ^ @rdx << @rdx & 0n7 >> 0y10001 ; (-~$ip) + 0x5 << 20 << +@rax & 21 ^ 15 << @rdx >> @rbp & $teb >> ~$buffer ^ @r8 | +@rsp)  { test_statement(0x1990); } elsif (0n2 << @r12 >> @rsi >> @rbp & @r9 >> @rsi))0y10011 << @r13 ^ @r9 & @rax & @r9 | @r10 & @rbp ^ -@rdi & 5 | 0xB & @r12 ^ ~0n14 | ~($ip) ^ 0n10 | @rax | @r8) { test_statement(0x1C58); } elsif ((@r9) >> @r8 & @r12 & 1))$ip >> @r10 & 0n15 & @rsi) { test_statement(0x181A);  /* This is a comment */ }
$error$
$end$
4999
 if (@r10 << 0x8 << 0x13 >> @rbx & ~@r12 & @rsp ^ @rsi << 21 & @r8 = 0x2 << @r13 << @rbp)  { test_statement(0x1EE3);  for (; @r13 & @r9 ; -$buffer & @rsi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5000
 if (@r12 + @r12 << 0 >> @r11 >> $buffer & $buffer ^ @rdx ^ @rax >> @r10 ^ +@r8(@r8 + +@rax >> @r13 & @rbp << @rdi & -@r11 >> @r11 ^ $thread << @r12 >> 0xB & @r11)  { test_statement(0xEE3); } else { test_statement(0x14B2); }
$error$
$end$
5001
 if (@rdi << +$thread >> @r13 << -$buffer >> +@rsi >> $proc & $thread ^ $buffer << @rbp | @r11 >> @r8 | @rsp >> @rdx | @rax & $proc | @rdi ^ 0x11 | +$proc | $proc = @rdi << +$thread >> @r13 << -$buffer >> +@rsi >> $proc & $thread ^ $buffer << @rbp | @r11 >> @r8 | @rsp >> @rdx | @rax & $proc | @rdi ^ 0x11 | +$proc | $proc)  { test_statement(0x751); } elsif (@rax << @r12 & (@rax) >> @r11 & $thread | 1 | @r9 ^ @r10 ^ @rsi | @r13 <= @rsp ^ 0n11 >> @rdi & @rsi | @rsp >> @rdi ^ @rbx & @rbx | ($ip) & ~@rsp | 0y1000 ^ $ip | @r12 | @rbx) { test_statement(0x4E8); @rax = @r11 & $proc ^ @rbx ;  if ($ip = @rax)  { test_statement(0xA6A); } elsif (@rbx @rbx) { test_statement(0x9A1); } else { test_statement(0x17C9); }  This is a not opened comment */ @rax = 0y1010 ; } elsif (@rdi >> -@rax < @rdi >> @r10) { test_statement(0x2468); }
$error$
$end$
5002
 if (@rsp << @r9 >> @r10 >> (@rdi) & 0y100 >> @rdi & @r13 >> +0x1 & @r10 & @rbx < @r9 + 0xA >> @rbx)  { test_statement(0xFFA); }
$error$
$end$
5003
 if (@r11 + @r10 >> @rbp << @rbp >> @rbp ^ @r11 >> 0y1000 >> 0y1101 ; @r11 + @r10 >> @rbp << @rbp >> @rbp ^ @r11 >> 0y1000 >> 0y1101)  { test_statement(0x2645); } elsif (@rsi << $ip >> $ip >> +(0n3) ^ $proc | @rax >> @rdi & @rdi & 0y111 ^ ~@rax))@rsi << $ip >> $ip >> +(0n3) ^ $proc | @rax >> @rdi & @rdi & 0y111 ^ ~@rax) { test_statement(0x289);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ^ 0x10)@rdi) ; ; } elsif (0xA ^ $teb ^ @r13 | @rbx & 2 | 0y100 | $ip)$proc) { test_statement(0x240A); } else { test_statement(0x11C4); }
$error$
$end$
5004
 if (-$ip + @rsp << (+@r12) << $ip & 0n10 & @r8 >> -6 | $thread >> @r9 >> @r12 & 0n5 >> ~@rdi | $proc >> $proc ^ @rsi = -$ip + @rsp << (+@r12) << $ip & 0n10 & @r8 >> -6 | $thread >> @r9 >> @r12 & 0n5 >> ~@rdi | $proc >> $proc ^ @rsi)  { test_statement(0x887); } elsif ($proc & @rdi | $thread ^ @rbx & @rax ^ 17 ^ @rsi $thread >> @r12 ^ @r11 & @rdi & @rdx ^ @r8 & $ip ^ @rdx) { test_statement(0x229A); }
$error$
$end$
5005
 if ($proc + 0n0 << (@rdi) << @rbp ^ $proc << 0n16 | @r8 << @r9 >> @rbp >> $proc & @r11 ^ 0x4 >> 0n18 & 2 & @r13 | @r11 >> @r9 & @rsi & @r13 ^ 0x8 & @rsi ^ 0y0 | @r9 ^ 0x7($proc + 0n0 << (@rdi) << @rbp ^ $proc << 0n16 | @r8 << @r9 >> @rbp >> $proc & @r11 ^ 0x4 >> 0n18 & 2 & @r13 | @r11 >> @r9 & @rsi & @r13 ^ 0x8 & @rsi ^ 0y0 | @r9 ^ 0x7)  { test_statement(0xEF3);  /* This is a comment */ } elsif (+$ip << @rsp & @rsi >> 0 >< $ip << $thread ^ 1 | 0y10000 >> @rbx) { test_statement(0xB84); } else { test_statement(0x257E);  This is a not opened comment */ }
$error$
$end$
5006
 if (@r13 << 16 >> 0y111 >> @rdi & @rbx >> -$teb >> 12 ^ 0x6 << $buffer & 0n4 >> 23 & @r13 ^ $proc >> $ip & @r9 & 0y111 | @r10 << @r13 >> -@rbp >> $teb <= 20)  { test_statement(0x1E5F); ; }
$error$
$end$
5007
 if (0y10 + @r12 >> @r12 >> @r11)5 & @r12 << $thread | 14 << $thread & @r10 >> ~0x13)  { test_statement(0x16AC); @rax = @rbx & -@rdi ^ 0xB ^ $teb ; ; } elsif (@rsi << @r13 <= -$ip & @rsp & @rsp ^ 0n5 & @r11 & @r9 ^ @rdx & 0n12 | @r10 >> @rsi) { test_statement(0x3B8);  // /* This is a comment  } elsif (@rbp >> @rbp ^ @rdi | $ip & @r13 ^ @r13 ^ $ip | @rax | -~@r11 < @rbp >> @rbp ^ @rdi | $ip & @r13 ^ @r13 ^ $ip | @rax | -~@r11) { test_statement(0x160F); } elsif (@rdi & $buffer | @rdx | $ip((0y1011 & @rsp ^ $proc | 21 ^ $proc) { test_statement(0x21D9); } else { test_statement(0x14B3);  if ($proc | @rdi = 0n7 | -@rdi)  { test_statement(0x1C0A); } elsif (@rbp | @rbp))@r10) { test_statement(0x1CD9); } else { test_statement(0x1397); }  if (@rdi | @r13 <> @rdi | @r13)  { test_statement(0x1661); } elsif (0x0 @rdi) { test_statement(0xEE4); } elsif (@rbp +@rax) { test_statement(0x2498); }  while  (@rax >= $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 22 <> @rsp) ; }
$error$
$end$
5008
 if (@rsp + ($teb) ; @rsp + ($teb))  { test_statement(0x2585);  /* This is a not closed comment  if ($proc ^ @r11 | @rdi | @rsp @r12 ^ @rdx)  { test_statement(0xCAB); } elsif (@rbp | -~@rax >< @r10) { test_statement(0x2333); } else { test_statement(0x1E0); }  This is a not opened comment */  if (@rdx))@rsp)  { test_statement(0x86C); } elsif (@rsp)@r9) { test_statement(0x2FD); }  while  (@rsp((@r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xEB); }
$error$
$end$
5009
 if (20 + ~@rbp >> @rax << @rax >> 3 >> +$thread @rdx + @r12)  { test_statement(0xCDC);  if (@r8 & @rsp ^ @r8 | 0n10 | @rsp = $teb)  { test_statement(0x545); } elsif ($ip ^ $teb >< +@rbx) { test_statement(0xDA9); } else { test_statement(0xEBA); }  break;  This is a not opened comment */ }
$error$
$end$
5010
 if (@rdi ^ 0n0 >> @r8 & -~$buffer | @rbp ^ $thread >> @rbx & $thread == @rsp >> ~@rdi << (@rdx) >> @r10 & 1 >> 0n14 >> $teb & @r11 >> @r10)  { test_statement(0x15F6); }
$error$
$end$
5011
 if (10 + 14 >> $proc(10 + 14 >> $proc)  { test_statement(0x367); } elsif (@r10 << @rbp >> @rsp >> @r12 | @r10 & @r12 & @rbp ^ @rdi & @rbp ^ @r11 = ~@rsi << $buffer >> @rdi) { test_statement(0x201A);  /* This is a comment */  if (@r13 | @rbx <> @r11 | @r8)  { test_statement(0x190E); } else { test_statement(0xEBE); } } elsif ((@rax) >> @r13 & @r13 ^ @rdi & @r10 | @rsp & 23 ^ @r10 ^ @r12 @r12 >> @r13 & $ip | @rbx | -@r12) { test_statement(0x1343); }
$error$
$end$
5012
 if ((@rbp) << @r13 << ~$buffer ^ ~$ip << @r10 ^ 0y10000 < (@rbp) << @r13 << ~$buffer ^ ~$ip << @r10 ^ 0y10000)  { test_statement(0xB95);  // /* This is a comment   // /* This is a comment   while  (0xB | @rbp < @rdi | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif (($thread) << $ip ^ (@r11) >> @r8 ^ @rsp(@r12) { test_statement(0x1722); val = @r11 | 0n14 ^ (0y1100) | @rax | @rsi ; } elsif (+0x13 >> $teb ^ $proc ^ (@r12) ^ 0n9 | @r13 ^ @rdx(0y0 & +$teb & 0x9 ^ 1 | $thread & @rdx ^ @rdi ^ +0y1001) { test_statement(0xFAA);  This is a not opened comment */ }
$error$
$end$
5013
 if ($thread + 0 << (@r8) >> @r12 << @rax >> 0n5 & @r10 >> @r10 | -$buffer >> @r12 & @r10 >> $teb & $ip | $thread & $proc | @rsp <> @r10 ^ 15 >> @r8 >> @r9 & @rax)  { test_statement(0x294);  // /* This is a comment   This is a not opened comment */ } else { test_statement(0xDD4); val = @rdx & @rax | @r11 ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb | $ip)+@rsi) ; }
$error$
$end$
5014
 if (-@r10 + @r8 >> $ip << @rdi & @rsi << @r12 >> @r13 >> @rax ^ @rsi << @r10 >> 0n16 >> $thread & @rbp >> @rsi & $buffer ^ 0n13 >> @rbx ^ $buffer & @rdx ^ @rbx <> $thread << @rdi >> @rsi & +@rdx << @rsi >> @r8 >> 0x9 ^ $teb << @rsp >> $ip >> 17 ^ @rbx & @r10 & $proc | +@rdi)  { test_statement(0x97C);  if (-@r10 | 0y1000 ^ @rdx | @r10 | $teb == -@r10 | 0y1000 ^ @rdx | @r10 | $teb)  { test_statement(0x235C); } else { test_statement(0x3C0); } } elsif (@rsp << @rax >> @r12 & @r10 >> @rsp ^ (@rsi) >> @r8 & @r10 ^ @r9 & @r9 ^ 21 ^ 0n19 = @rsp << @rax >> @r12 & @r10 >> @rsp ^ (@rsi) >> @r8 & @r10 ^ @r9 & @r9 ^ 21 ^ 0n19) { test_statement(0x1613);  if (0y10 ^ @r11 = $thread | -$proc | $teb)  { test_statement(0xEC6); } elsif (@r8 | @rsi ; $teb | -@rdi) { test_statement(0xDD0); } else { test_statement(0x1DB6); }  if (+@rbx == (@rax))  { test_statement(0x7DF); } elsif (+@rsp(+@rsp) { test_statement(0x20FF); } elsif ($ip ; $thread) { test_statement(0x123A); } else { test_statement(0x26C0); } ; } else { test_statement(0xF20);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~17 >= ~17) ; }
$error$
$end$
5015
 if (@r8 + $ip << @r12 << +@rbx >> @r8 >> 0y10011 >> @rbx | @r12 << @r13 >> @rdx >> @r13 & +$thread ^ @rdi & @r10 & $ip ^ 0xE ^ $thread ^ ~@rax($proc + (@r8) << $thread >> @rbp >> @r12 >> $thread & $teb >> ~@rdx & 0n18 | $proc << $thread >> @rbp >> -$thread & ~-@rdx & @rsp ^ (@r12) >> @rbp)  { test_statement(0x1699); } elsif (0y1011 << 23 >> $proc >> $ip & @r13 & $teb <= $ip & @r9 & $buffer & @rax ^ @r12 & 7 & $thread ^ -@r13 ^ 0n10) { test_statement(0x3C5); } else { test_statement(0x1438);  This is a not opened comment */  while  ($proc | --@rbx)@rsp | -@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5016
 if (($buffer) + @rbx << @rdx ^ @rdx << @r12 >> +@rdi ^ $teb >> 6 & 0n14 | $teb & @rbp != ($buffer) + @rbx << @rdx ^ @rdx << @r12 >> +@rdi ^ $teb >> 6 & 0n14 | $teb & @rbp)  { test_statement(0x1C1D); } elsif ($thread >> $proc >> (@rbp) & @rsp >> ~-@rbx & @r11 == @r8 << ~0y10011 >> @r11 ^ @rbp >> 0n6 ^ $teb ^ $teb ^ @rdi) { test_statement(0x14EC); } else { test_statement(0x1ABA);  while  ($ip ^ @r8 | @rbx <= $ip ^ @r8 | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip != $teb | $teb) ;  if (~+0y100 <> @rbx)  { test_statement(0x1182); } else { test_statement(0x197); } }
$error$
$end$
5017
 if (0x3 <> 0x3)  { test_statement(0x3E7);  for (val = 10; (0y10) & $ip ^ -$thread >= $buffer ^ ~@r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($ip | @r13 >< $proc | 0y11)  { test_statement(0x7F7); } else { test_statement(0xD1F); }  /* This is a comment */ } elsif (@rax << 13 != @r8 << (@rbx) & @rbx >> $proc ^ @r11 & @rdi | @r8 & 0n13 & @rax) { test_statement(0x10CB);  // /* This is a comment   while  (+@r13 | @r12 ; +@r13 | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1000 <> 0y1000) ; val = @rdx ;  /* This is a not closed comment  /* This is a not closed comment  while  (@rsi <= @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x344); }
$error$
$end$
5018
 if (@rdx + -0x13 >> $thread << 0y1011 ^ @rdx << 0y10001 >> @r13 & +@rax & @rax ^ @rax >> $ip & @rbp <= 0y1010 + 0n18 >> @rdi >> (@rsi) ^ $buffer << @r10 & @rax >> @rax)  { test_statement(0xA9B);  for (val = 10; (0xF) & @rbp ^ $ip ^ @rbp | $thread | @r8 | @rsi <> (0xF) & @rbp ^ $ip ^ @rbp | $thread | @r8 | @rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5019
 if (@r11 + @r9 >> 0xA >> @rdx >> +@r11 < @r11 + @r9 >> 0xA >> @rdx >> +@r11)  { test_statement(0x15B8); } elsif (@r12 >> @rsp | $teb ^ -@r8 & @r13 = @r12 >> @rsp | $teb ^ -@r8 & @r13) { test_statement(0x1338); } elsif (0y10010 ^ 23 & @r8 | @rbp ^ $proc ^ @r9 $ip & 21 | @rsi & @rdx | @r12 ^ @rsp | @rbp) { test_statement(0x693);  break; @rax = @rax ; }
$error$
$end$
5020
 if ($ip + @rbx << @r8 >> 0x10 << $ip & ~-$buffer & @rax >> 0y1101 & ~@rdi | @rbx >> 0x0 & @r9 >> 17 ^ @r8 & @r9 & 21 = @r8 + @rbx << @r8 << $ip | $proc << @rdi ^ $buffer >> @rsi & @r9 & 0y100 ^ 0y10010 ^ @r10 ^ $ip)  { test_statement(0x1655); } elsif (@rdx >> @r9 & ~$buffer ^ $teb >> @r11 ^ @rax ^ @r13(($thread << +@rbp) { test_statement(0xB29); } elsif (@rsi & (+0xB))@rsp | @rbx) { test_statement(0x1881); ; } else { test_statement(0xE2F);  /* This is a comment */  // /* This is a comment  }
$error$
$end$
5021
 if (0x4 + @rbx >> ~++$teb << @r9 & $ip << @rdx >> @rbx ^ @rax << 0n18 >> $ip >> 0y100 | @r13 << @r9 >> @rdx ^ $proc >> @r9 & 0y1011 & (@rax) ^ @rsi & @rbp ^ $ip ^ ($thread))~@r9 + @rbp >> @rsi << +@rax >> ~@r12 >> @rsp)  { test_statement(0x10FD);  for (val = 0n10 ^ 0n17; ($thread) & @r13 ; @r11 & -@r11 | @r9 ^ $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xC93); }
$error$
$end$
5022
 if (-@r9 + 0n14 & @rdx >> @rsi >> @rdi & @rax >> $thread ^ -@r9 << -@r11 >> $teb >> 3 ^ +~+@rbp & -@r9 & @rdx == @rsi >> $buffer << @rbx)  { test_statement(0x706);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ($thread)(@rbx ^ @r13) ; }
$error$
$end$
5023
 if (0y0 + @rax << +@r11 << 0n16 >> 23 << @rax >> 0y101 >> ~(@rsi) & -1 >> $ip >> $thread & @rdx >> @r11 & ~@rbx & @rdx)0y0 + @rax << +@r11 << 0n16 >> 23 << @rax >> 0y101 >> ~(@rsi) & -1 >> $ip >> $thread & @rdx >> @r11 & ~@rbx & @rdx)  { test_statement(0x168E);  /* This is a not closed comment } elsif ($buffer << $buffer & @r9 ^ @rbx >> $proc ^ @rsi & 0n7 ^ @r10 ^ @rsp ; $buffer << $buffer & @r9 ^ @rbx >> $proc ^ @rsi & 0n7 ^ @r10 ^ @rsp) { test_statement(0x16B0);  /* This is a not closed comment } elsif (@rdx <= $ip >> @rbp ^ @r10 ^ @r10 ^ @r12) { test_statement(0x126A);  while  (0y1011 | -@r11 >= $ip | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread < @r9 & (-0y110) | 0y10000 | @rdi | $buffer) { test_statement(0x1711); }
$error$
$end$
5024
 if ((@rdi) + @r13 << 0y10011 | +$buffer << $buffer = $buffer + $proc << @rax >> @rdi << +$teb | $teb << @r9 ^ @r10 >> @r9)  { test_statement(0x1DE2); } elsif (21 << $thread ^ 0x8 & 0n15 & ($proc) | $proc >> @r9 ^ @rax ^ @r9 | ~@r9 & $ip ^ 0n19 ; 21 << $thread ^ 0x8 & 0n15 & ($proc) | $proc >> @r9 ^ @rax ^ @r9 | ~@r9 & $ip ^ 0n19) { test_statement(0xB2);  while  (@r11((+0n12 ^ $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x12 >> @rdx & 0y1101 & 0n16 == $proc ^ 0y10010) { test_statement(0x15E9);  while  (0n10 | @rdx 0n10 | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rax((@rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
5025
 if (@rbp << @r12 >> (@rbx) & $buffer << 0n13 >> @rdi & @r11 | 0y11 >> @r13 >> -$thread | @r10 & 0n18 ^ @rdx & $buffer ^ @rbx >< @rdx & 0n7 << @rsp ^ ~0xC << 0n11 >> $ip >> @r8 & +@rdi ^ @rdi >> @rdi & @rsp & $proc ^ (~0xB) & $buffer ^ @rsi | 0xA << @r10 & @rax | @rax >> @r9)  { test_statement(0x4ED); } else { test_statement(0x1E4D); }
$error$
$end$
5026
 if (+0y111 + $thread ^ 0x13 << @r10 >> 4 >> $thread | -+@r9 & @r8 | @rsp >> 0y10010 | @r10 ^ @rsp ^ @r9 | @r13 | $thread | (@rbx)($ip + @rax | $thread | -5 >> -@r8 & $ip & 0x8 ^ @r12 | @r9 & (21) | @rax ^ @r9 | ~(@rdx) | @rsp)  { test_statement(0x2140);  for (val = 10; @r8 & -@rsp(@rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1A8B); }
$error$
$end$
5027
 if (-@r9 << @r11 >> @r8 << $ip >> @r12 >> $proc ^ $buffer >> @rsp >> @rax | 0n11 >> 0y1001 & ~@rdi ^ 0x1 & $proc ^ @r9 >= -@r9 << @r11 >> @r8 << $ip >> @r12 >> $proc ^ $buffer >> @rsp >> @rax | 0n11 >> 0y1001 & ~@rdi ^ 0x1 & $proc ^ @r9)  { test_statement(0x24E);  if (0y10001 & @rax | @rax ^ 0xE(@r9 | @rax ^ $thread | 0x1 | (@r10))  { test_statement(0x1A88); } elsif ((@rbp))$buffer) { test_statement(0xCE4); } elsif ((@rdi) | @rbp = (@rdi) | @rbp) { test_statement(0x197B); } else { test_statement(0xA2D); } } elsif (0n5 & -0x11 & $ip ^ $proc >> -@rax ; @r10 << @rsp | $ip >> @r11 & $ip ^ $ip & $buffer) { test_statement(0x1835); } elsif (@rsp & $ip > @rbx >> +$thread & $buffer & $teb | @r9 & @r10) { test_statement(0x2154); }
$error$
$end$
5028
 if (@rsp + @rsp ^ +(0x10) << --@rsi >> @rax >> @rsp & $ip | @rsi >> $thread >> @rdx & 0y1101 & ~@rdx < @r11 << 0y11 & @r10 << -0y10001 >> @r9 ^ @rbx & @r11 & @r12 | @rdx << @r10 | ($teb) ^ $ip & @r9 ^ $proc | $ip | @r10 ^ 0y10011 | @rbp)  { test_statement(0x15AB); } elsif (@r10 << $thread >> @rax >> @r11 & 0n0 >> @rdx))@rsi << $teb & (@r9) & @r9 & ~@r12 ^ @r13 >> $buffer | @r8 & $buffer ^ -$ip & @rsp ^ 4 | @r12 ^ -0x4) { test_statement(0x68B);  break; } elsif ($thread | -@r10 <= $thread | -@r10) { test_statement(0x25);  if ($thread < @r12)  { test_statement(0x211D); } elsif (-@r10 == $buffer) { test_statement(0xD04); } } elsif (@r9 ^ 0x4))0x1 & $thread ^ @r10 ^ $buffer) { test_statement(0xB89); } else { test_statement(0xF13); }
$error$
$end$
5029
 if ($buffer + @r13 << @rsp >> ~@r13 << @r11 ^ $buffer << @rdx 0x1 << @r11 << @rsi >> @rbp << 0x4 & $teb >> @r10 | @rsi >> @rbp & 16 & @rdi & @rsp | 0xC & $ip ^ @r9 ^ 0x8)  { test_statement(0x1114);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb = @r12 ^ $proc | +@rbx) ; } elsif (@r8 >> (0x9) & @rsi & @rbp & ~@rbp ^ @rdx & $teb((@r8 >> (0x9) & @rsi & @rbp & ~@rbp ^ @rdx & $teb) { test_statement(0x1F7D);  if (@rsp | $buffer >= +-($proc) | $buffer)  { test_statement(0x7A); } } else { test_statement(0x1FBE); }
$error$
$end$
5030
 if (@r10 + +@rax != @rbp ^ @r12 << 0n2 | $ip >> @r10 & ~@r11 & 0y11 ^ @rsp >> +@rdx & @r12 ^ $thread & 0y10010 ^ @rbx | 22 >> $buffer ^ @rdx & @rsp)  { test_statement(0x2492);  while  (@rax = @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
5031
 if (0n17 + @r12 >> 0y10010 & @rsi << @rsi | 0xB << $thread >> @r9 | @r12 >> 0n10 & 0n5 & +3(($ip) + ~+0n18 >> 0xE << +@rsp ^ (@rbx) << $teb)  { test_statement(0x22D9);  for (; (@rdx) | @r10 ^ $ip < ($proc) ^ $ip ^ @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsi >> -@r12 >> 0x4 & ~$ip >> $teb & 5 > @rsi >> -@r12 >> 0x4 & ~$ip >> $teb & 5) { test_statement(0x1765);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 >= @rax | (@rsi)) ; } elsif (@rsp | @rsi | 15 | @rax | @rbp))@r9 & 0n14 & 0y10010) { test_statement(0x12B1); } else { test_statement(0xA99); }
$error$
$end$
5032
 if (2 & $buffer >> @rdi & @rax >> @rdi & @rdx & -@rbx | @rbp << ++@rsp & $ip >> -@rsi & @r13 ^ @rdi & $buffer & @rdi | $ip >> @r12 ^ 10 ^ @r13 ^ @rbp | @r8 | $proc | @rsp <= 2 & $buffer >> @rdi & @rax >> @rdi & @rdx & -@rbx | @rbp << ++@rsp & $ip >> -@rsi & @r13 ^ @rdi & $buffer & @rdi | $ip >> @r12 ^ 10 ^ @r13 ^ @rbp | @r8 | $proc | @rsp)  { test_statement(0x23DD); } elsif (16 >> $ip >> @rbx ! ($ip) & @r10 & $ip | @rbp & $proc & +@rbp ^ @rsp ^ -@r10 | (@rbp) & ($teb) ^ +@rbp ^ @rsp | @r11 ^ $ip | 0xA | @r10) { test_statement(0x2D); } elsif ((@rbp) >> @r8 & $proc & $thread == ~0x9 & -$proc) { test_statement(0x13C);  /* This is a not closed comment } else { test_statement(0xD67); }
$error$
$end$
5033
 if (@rax ^ 0y1110 >> @r12 ^ @rdi & @rdx & @rax | 0x3 << $teb(@rax ^ 0y1110 >> @r12 ^ @rdi & @rdx & @rax | 0x3 << $teb)  { test_statement(0x87D);  This is a not opened comment */ } elsif ($proc << @r11 ^ @rbp & +$thread | 0y100 >> $thread | $proc & @rdi ^ $buffer | @r9 | 11 ! 0y1010 & $buffer >> @rsp ^ 0n9 >> -@rsp ^ +@rsi) { test_statement(0x82F); } elsif (@rax & $thread & 0n18 ^ @r11 ^ @rsp | ~(@rsi) | 13 <> 0y10000 >> @rdx | @rsp & $proc ^ @r12 ^ 0y1001 | 0n9 ^ @r11) { test_statement(0x13B7); @rax = (@r11) | @r12 ; } else { test_statement(0x1A40);  while  (@rax ^ @rsp >< @rax ^ @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5034
 if (@rbp ; @rsi ^ @rax ^ ~@r13 & -@r11 ^ 0y10000 & @rax | @rax << @rdi & @rdx >> @r11)  { test_statement(0x262);  break;  This is a not opened comment */ ;  /* This is a not closed comment  for (@rax = @r8; 0x8 != 0x8;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rax <> @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x8AF);  /* This is a not closed comment  This is a not opened comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp))~0n9) ;  /* This is a not closed comment }
$error$
$end$
5035
 if (~@r9 + @r11 << @rdi << @r8 ^ +@rdi ! $thread + @r12 << $thread << @rdx & 0x2)  { test_statement(0x675); } else { test_statement(0x1BEB);  if (@rdi >< @rax)  { test_statement(0x164B); } else { test_statement(0x213A); } }
$error$
$end$
5036
 if (0y1011 + @rdi << @r11 << @rdx(@rsi >> @r8 >> @r12 >> 0y1011 ^ @r9 << $thread >> @r10 >> ~@rax)  { test_statement(0x15A3);  /* This is a not closed comment } elsif (@r13 & +~0n14 ^ 0y1110 & @r11 ^ 0y110 & @rdx | @r10 & 0y10001 ^ $thread ! @r8 & $ip >> ~@r8 & @r10 ^ @rdx & @r9 ^ @r12 ^ @rbx ^ +@rax | @rsp >> @rdx ^ @r8 & @rax) { test_statement(0x23B5); }
$error$
$end$
5037
 if (@r10 << (@r13) << @r9 & @r11 << @rax | @rdx << @r8 ^ @r9 & @rdi ^ @rbp & ~@r11 ^ @rdx ^ @rsp | @r11 >> @rbp & +@rbp ^ $thread & @rdx < @rsp + ~~@r9 >> @r13 << @rax >> $buffer >> @r10 & @r9 << ~@rdi & @rax >> $teb ^ $proc & @r13 >> @rsi & @r13 ^ 0xB & @rsi & @r11 ^ @rax ^ 0n4 ^ @rdx)  { test_statement(0x21A4);  break;  while  ($ip | @r13)@rdx ^ 0xD | @rsp | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; (@r10) | 0x9))@rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ($ip < 0n5)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@rdx & @r13(@rdx & @r13) { test_statement(0x15DB); } elsif (@rsi | @r8 & $buffer <> @rsi | @r8 & $buffer) { test_statement(0x1656); } elsif (0y1 | @rsp ^ @r8(@r10 ^ $ip | @r10 ^ $teb | @r12 | @r8) { test_statement(0x6FD);  /* This is a not closed comment  /* This is a comment */  break; } elsif (@rsi ; @rdx) { test_statement(0xE1D);  while  (@rdi > ($teb))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~$buffer(($buffer) ; ; } elsif ((+@rbx) | $thread(@r12 | 12) { test_statement(0x2563); } elsif (0n15 == @r10) { test_statement(0x1301);  // /* This is a comment   // /* This is a comment  } else { test_statement(0x9FE); @rax = @r9 ^ @r13 ^ -+~@rbp ; }
$error$
$end$
5038
 if (@rdi + @rbx & -0y101 >> @rdx & $thread >> @rdx & $proc ^ $ip << ~@rdx >> @r12 >> @r8 & @rbp >> @rax ^ @rsp >> @rdx | @rdx >> @r12 >> +$thread & 0n11 >> @rdi & @rsi != @rdi + @rbx & -0y101 >> @rdx & $thread >> @rdx & $proc ^ $ip << ~@rdx >> @r12 >> @r8 & @rbp >> @rax ^ @rsp >> @rdx | @rdx >> @r12 >> +$thread & 0n11 >> @rdi & @rsi)  { test_statement(0x2569); } elsif (~@rsi >> @r12 >> @rdi & @r10 >> 0y10011 ^ @r12 >> 17 & @r12 | -0xB | @r10 & @r10 <= ~@rsi >> @r12 >> @rdi & @r10 >> 0y10011 ^ @r12 >> 17 & @r12 | -0xB | @r10 & @r10) { test_statement(0xE74);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -@r11 < -0x0 | ($teb)) ; } elsif (@rdi >> @rdi == @rsp & $ip ^ 0n8 & @r9 ^ -~@rdx) { test_statement(0x1EB5); } else { test_statement(0xE7B); @rax = @rbp & @rsp | +@rdx ^ @r8 | @r12 | $proc ; }
$error$
$end$
5040
 if (@rdi & 0x3 << -0n17 >> 0n4 >> @r13 & $proc >> 0n2 & $proc | $buffer << @rbx & $thread >> 4 | @r11 >> $teb | $teb((~-@r10) >> @r13 << @rsp >> 0x7 >> @r10 & 0y100 << 0n12 ^ @rbx << ~(@r13) >> $proc & $proc & @rbp & @r10 | 3 >> 0n16 >> $thread)  { test_statement(0x1A90);  if ($thread | @rsi ^ @rbx | @rax | @r13($thread | @rsi ^ @rbx | @rax | @r13)  { test_statement(0x1496); } elsif (+0y10011 ^ @r9 | -@rdx < @r8) { test_statement(0x17C3); } else { test_statement(0x24EC); }  for (; @rbx((0y10001 | ~@rdx | @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5041
 if (+$teb << 0y1110 & @r11 ^ @r13 << +@r11 >> $ip >> 0n0 ^ @r12 >> $ip & @rbp & @r9 ^ @rbp & $teb | $teb << $ip & $teb | @rbp & @rsi & @rsp != +$teb << 0y1110 & @r11 ^ @r13 << +@r11 >> $ip >> 0n0 ^ @r12 >> $ip & @rbp & @r9 ^ @rbp & $teb | $teb << $ip & $teb | @rbp & @rsi & @rsp)  { test_statement(0x1113); } elsif (@r13 << 0xE & @r11 >> @r12 ^ $thread >> $thread & $ip & (@rdi) ^ @rdx & @r12 ^ $buffer | $teb & -@r9 ^ @rbx & @rbp ^ 0y1110 ^ @r13 >< @rbp & @r13 ^ @r11 >> @r13 & @rbp ^ @rbx & @r10) { test_statement(0x679);  if ($ip ^ 7 $ip ^ 7)  { test_statement(0x4A); } else { test_statement(0x1111); } }
$error$
$end$
5042
 if (@r11 + -@rbp >> $ip << @r8 >> $thread | @rsp << @rax >> @r12 & ~+@r10 >> @r13 ^ ~23 < @r11 + @r9 << +-+@r8 ^ @rbp << $thread >> 0y1111)  { test_statement(0xDE4);  /* This is a comment */  /* This is a not closed comment  if (@rdx != @r11)  { test_statement(0x9EF); } elsif (0y1011 < +@rdi) { test_statement(0x1894); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip(($ip) ; ; } else { test_statement(0x228B);  if ($thread ^ (@rdi) <> $thread ^ (@rdi))  { test_statement(0x88F); } else { test_statement(0x242C); } }
$error$
$end$
5043
 if ($proc + @rax >> @rdi << @rax & @rsp & @rsp >> $buffer))$ip ^ @r11 << (@r8) & @rax)  { test_statement(0x1AEA); } elsif (@rdi << @r10 >> ~$ip ^ @rdi & $proc & @r9 | @rsp & $buffer ! -@rax & @rax & $thread & 20 | 13) { test_statement(0x113A); } else { test_statement(0xABC); }
$error$
$end$
5044
 if (@rdi + $thread & ~@rdx << @r9 >> @rsi & $teb >> +-@r12 ^ @r9 << +$ip >> 0y1011 & @rdx >> @r11 & $ip <> @r10 << (@r8) << @rbx >> @rbx << $proc >> @rsi >> @r10)  { test_statement(0x7A1);  while  (@rdi ^ $teb ^ @rdx | +@r8 ^ @r8 | +0y1011 | $teb(($teb ^ @rbx ^ 23)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  This is a not opened comment */ } else { test_statement(0xEFB);  /* This is a not closed comment  // /* This is a comment  }
$error$
$end$
5045
 if (@r11 + @rdi ^ @rdi << @rax & @rdi & @rdi & @r10 ^ 0y111 >> 0y10001 ^ @r13 | @rdi << ~+@rsp & 0n9 & @r10 | @r10 & 12 | $ip $proc >> @r8 ^ $proc | @rsp << @rsi >> $teb | -@r13)  { test_statement(0x1C24);  This is a not opened comment */ } else { test_statement(0x1776); }
$error$
$end$
5046
 if (@r13 >> 0n16 << $thread >> 0x1 >> @r13 & @r12 << +0x8 ^ @r12 ^ @r13 & @r9 ^ @r12 ^ $buffer != @r13 >> 0n16 << $thread >> 0x1 >> @r13 & @r12 << +0x8 ^ @r12 ^ @r13 & @r9 ^ @r12 ^ $buffer)  { test_statement(0x261A);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +$ip ! @rbx | $thread | 0x1) ;  This is a not opened comment */  for (val = 10; @rdi))@rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x30D); }
$error$
$end$
5047
 if (@rsi >> @rdx << 2 >> $proc($thread << @r9 << @r10 >> $teb & ~$buffer << @rdx & 7 >> @r9 ^ $thread & @r13 >> 0n2)  { test_statement(0x1475); } elsif (@rsp << $thread >> @rsi >> +(+@rbx) ^ -$proc >> @r12 | 0y111 & $ip ^ @rdx & @r11 | @rsp ^ $teb | $proc ^ @r11 | @rbx >= $proc >> $buffer >> @rdi & $teb | $thread >> @r8 ^ @rsp) { test_statement(0x1974); ;  for (val = 10; @rsp | @rdi = @rsp | @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y0)+@r9) ; ; } elsif (@r10 >> @r12 < @r10 >> @r12) { test_statement(0x17C6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -($thread) ; -($thread)) ; } else { test_statement(0x1D75);  while  (@rbp | @rbx ; @rax ^ @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5048
 if ($ip << @rbx << $ip & @rsp << $proc & $thread & (@rax) | @rdi << $buffer >> @r13 <> $proc << @rax & -+@r11 << @rbx >> @r13 >> 22 & +@r8 >> +@r10 & 7 ^ @rax & 5 ^ $ip | @r12)  { test_statement(0x426);  // /* This is a comment  } else { test_statement(0x21D2);  while  (0y10010 | 0x13 | @r8 == @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5049
 if (1 + @rdi >> @r12 & $teb << @rbx >> $ip >> +@rdi | -21 >> $buffer >> @rbp & (@rsi) >> @rsp | $buffer >= @r8 << (@r12) << @rdx ^ @r9 << +@r11 >> @r13 ^ @r10 | $buffer << $teb >> ~$thread ^ $buffer | $teb ^ @rsp)  { test_statement(0x23D9); } elsif ($ip ^ @rdx >> (2) & 0n13 & @r12 < $thread & (0n18) >> @rdi ^ $proc ^ $teb ^ ~@r12 ^ $thread) { test_statement(0x1944); val = @rbp ^ @r8 | 0x5 ; }
$error$
$end$
5050
 if (@rbp + 0n16 << @rbp >> @rax << @r10 & $ip << @rdx ^ @rsi >> 0y0 >> 0xC != @rsi + 0xE << (+$proc) & @rsp >> @r8 >> @r8 | 0n7 << ~@rdi ^ @r9 >> @rbp | @rax >> @rsi ^ ~$teb ^ -@r12 ^ @rsp)  { test_statement(0x5D7);  /* This is a comment */ val = @rsi & 0y1011 ^ @rdi ^ @rax | @rsi | $proc | +@r9 ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 15) ;  if ($teb == @rsi)  { test_statement(0x14F3); } elsif (5 >= @rbx) { test_statement(0x961); } } elsif (@rsi << @rsi >> @rsi >> @r8 & $proc >> @r9 & @r10 & +@rsi ! @rbp >> $proc >> 0x11 & 0y10001 >> -0n13 & @rax | 0y1001) { test_statement(0x251E);  /* This is a not closed comment }
$error$
$end$
5051
 if (0xF + -0n2 >> 0x3 << @r13 & $thread >> $proc ^ @rsp << @r9 & @r8 & @rdx ^ 0y10011 >> @r10 ^ @r12 | @rsi << $thread | $ip & 0n15 | @rsp = 0xF + -0n2 >> 0x3 << @r13 & $thread >> $proc ^ @rsp << @r9 & @r8 & @rdx ^ 0y10011 >> @r10 ^ @r12 | @rsi << $thread | $ip & 0n15 | @rsp)  { test_statement(0x1122); } elsif (+$buffer >> 0xB & @r9 >> @rax $buffer << @rax >> 0n1 >> -@rax & $buffer & @rsi & @rbp ^ 5 & ~@rdx ^ @r8 | @rax ^ @r13) { test_statement(0x1D2A); } else { test_statement(0xA11);  This is a not opened comment */  /* This is a comment */  if (@rax(@rax)  { test_statement(0x1E49); } else { test_statement(0x129C); } }
$error$
$end$
5052
 if (@rbx + @r11 << @rsp << @rbp & $buffer << @rbp & 0x3 >> 0y10000 & @rsp & @rax ^ @rbp << ~$proc >> @rbp | $buffer & @r8 >> @r10 & @rdx & (@rbp) ^ @r9 >> @rdx ^ ($ip) ^ @rax ^ 0y1((+(@rsp) >> @r9 >> @r11 >> ~$thread & ($ip) << $ip ^ @rsp << @r8 >> @r12 >> @r13 | @r9 >> $thread ^ @rax >> $buffer ^ ~@rdx & -@r8 ^ @r8)  { test_statement(0x6F7); } elsif ($teb << @rax >> $buffer >> @rbx | 0xC >> $proc ^ 0y111 ^ 0n3 ^ @r12 | 0y1101 == 14 >> @r10 >> $buffer & $proc >> 0y1001 & @rbp ^ @rax >> @rbp) { test_statement(0x1BE4); }
$error$
$end$
5053
 if (~(@r13) << @r9 << @r10 & ~@rsp << @rax & @rax & -@r9 | @r13 << 6 >> @rbx ^ $teb >> ($ip) ^ @rax ^ 0y100 ^ 0y10000((~(@r13) << @r9 << @r10 & ~@rsp << @rax & @rax & -@r9 | @r13 << 6 >> @rbx ^ $teb >> ($ip) ^ @rax ^ 0y100 ^ 0y10000)  { test_statement(0x1C33); }
$error$
$end$
5054
 if (@rax << @rsp << @r11 >> +@r13 << 0xA ^ @r9 >> 0x11 & @r13 & $buffer ^ @r10 ^ @r13 & (@r10) ^ @rdi ^ 0xE | -@rsi | @rdi | $proc & @r9 | $buffer ^ 0n1(@rsp + @rdx << @rsp << @rbp >> @rbp >> (+@r10) & @rdx & $buffer & @rbp ^ 0y0 & +@rax & 0xF & (@rax) ^ ~@rdx >> 3 & @r12 & 0n1 ^ @r9 & @rax ^ @rdx)  { test_statement(0x2592);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 & @r10 = $proc & @rbx ^ @r8 ^ 0y10010 | @rdi ^ @rdi) ; } else { test_statement(0x1E9E); }
$error$
$end$
5055
 if (@r13 + 20 >> @rdi << @r10 ^ @rsp << $thread >> ($ip) >> @rbp & 0x0 ^ @r9 | $proc >> ~0y110 >> $ip & @rdx >> @r9 | (~@rsi) >> $ip < +$thread + @rdx >> 0n17 << @r9 & @rdi & @r9 >> 0n11 & -@rsp)  { test_statement(0x132E); ;  /* This is a comment */  /* This is a comment */  // /* This is a comment  }
$error$
$end$
5056
 if (@r8 & 0y0 >> @rax & @r9 >> @rax | 0x3 & @r13 >> -0y1000 != $buffer & @r10 << @rdx & 0n2 >> $thread ^ 0n4 << @rbx >> $buffer >> $thread | @rdx << @rbp >> -@r12 & -0y0 ^ +~@rsi >> 0x11 & 0y10001)  { test_statement(0x1DE1); val = @r10 ^ @r11 ^ @rbx ^ (@r13) ; } elsif (20 >> ~0x12 & $buffer | @r9 | 0n11 & @rbx ^ (~$proc) ^ $ip | ~@r13 | $ip = $buffer >> 0x2 ^ @rdx ^ $teb & @rdi ^ @r12 | $proc & @rdi | @rbp ^ @r12 ^ $thread | @rsp) { test_statement(0x1ED5); }
$error$
$end$
5057
 if (0n5 >> (+@rbp) << @rax >> @r11 ^ @r13 | @r11 & @r10 >> +0n13 | 5 >> @r13 ^ @rdi & $buffer > @rbx >> @rax >> 0y1011 & $thread << @rax)  { test_statement(0x33D); } elsif (0xB & @r13 < $proc >> @rdi & @rax >> 0xB) { test_statement(0x1654); }
$error$
$end$
5058
 if (@rbx + $proc | +@rsp << @rsp & @r10 >> 7 >< $ip + (0) << +0x10 & $ip & @r9 >> 10 | @rsp >> @rbp >> 0x2 | $teb >> -@r9 ^ @r13 ^ @rdx ^ @r13 | @rsp ^ $teb ^ $teb)  { test_statement(0x11B9);  /* This is a comment */ }
$error$
$end$
5059
 if (@rsp >> 7 << $buffer | $teb >> -@r11 | @r13 & +$thread & ~$proc ^ (@rbx) ^ 0y110 ^ +$teb | ~@r8 & @rbp ^ 0n6 ^ @rax <> @rsp + @rbx & 0y111 << @rdx & $buffer >> $thread & @rsp)  { test_statement(0xBE7);  // /* This is a comment   /* This is a comment */ }
$error$
$end$
5060
 if ($buffer + @rax >> 20 << $ip != @rsi << @rdi ^ (0y100))  { test_statement(0x9C3);  This is a not opened comment */ } elsif ($buffer >> @rdi ^ @rdx | @r8 & @rsp & @r10))$buffer >> @rdi ^ @rdx | @r8 & @rsp & @r10) { test_statement(0x2065); }
$error$
$end$
5061
 if (@rsp & @r8 >> @rdi & $proc >> $ip & @rdi ^ @rsp << -@r13)$buffer + @rdx >> @rdi & ($ip) | $teb << @r9 & $teb & $thread & $thread | -@rsp)  { test_statement(0x204D); }
$error$
$end$
5062
 if (@rdi | @r12 << @rdx & @rdx >> 4 & -@r11 | $proc & $thread ^ @rsi & @rsi ^ @r8 ! @rdi | @r12 << @rdx & @rdx >> 4 & -@r11 | $proc & $thread ^ @rsi & @rsi ^ @r8)  { test_statement(0x122A); val = $proc & 0y0 ^ @r13 & $proc | @rbx & $proc ^ 0x4 ;  while  (+-@rdi < @r8 | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xF6); }
$error$
$end$
5063
 if (@rsi ^ 0n10 << @r12 >> @r9 & @r10 >> 0xB & @r8 ^ 13 >> $proc & @rax((@rbx & @r9 << 0x0 & @rsi & @r10 ^ ~@rdi << @r9 >> $buffer & $buffer & $proc & @r10 ^ @r10 & @r13 & @r12 ^ +$thread & @rsp | $buffer >> @r12 | $buffer)  { test_statement(0x256E);  /* This is a not closed comment } elsif (@rdx >> @r13 >> 0xB & @r9 >> -@r11 >< $proc | @r11 >> @r12 & @r10) { test_statement(0x18DE); } elsif (@rbx >> @r12))@rbx >> @r12) { test_statement(0x1613);  /* This is a not closed comment } elsif (0y10011 ^ @rbx | +@rdx | 0y10001 | @rdx >= $buffer | -@r13 | ~@rbp) { test_statement(0x1E78);  This is a not opened comment */  break; } elsif ($proc >< $proc) { test_statement(0x1A80);  /* This is a comment */ } elsif (@r12 = $buffer) { test_statement(0x1678); } elsif (~@rsi == ~@rsi) { test_statement(0x1326); @rax = $proc ; } elsif (0y1001 > $ip) { test_statement(0x1AEF);  break; } elsif (++0n3 ! ++0n3) { test_statement(0x1F1F); }
$error$
$end$
5064
 if (21 + -~@rdi << @rax >> ~$ip << @rdx & @r10 & +@rsi | 0x11 << -~@r12 & $thread >> $proc & $proc & $proc ^ @rdx(@rdi + (@rbx) >> @r11 >> @r13 >> @r12)  { test_statement(0x2708);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 | -0y110 | @rbp | ~0y1111(($teb & @rdx ^ @r8 | $ip | $buffer | +$proc) ; }
$error$
$end$
5065
 if (@r9 >> @r12 >> 3 >> $proc ^ $ip >> $teb & @r13 ^ @r13 | +@r13 & 0xC >> 0 & 0xA & $proc ^ 0y1000 ^ @rbx & (16) | (@r8) >> 0n11 ! 0x13 << @r13 >> $proc << @rsp >> 0n6 & 23 << @r11 >> 2 >> @r9 & 0y0 >> @rdi & $thread)  { test_statement(0xE5A);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ^ @rsi ! @rsp ^ @rsi) ;  /* This is a comment */ }
$error$
$end$
5066
 if ((($proc)) << @rbx >> @rdi << @r8 & @r12 << 0x9 >> @r10 >> $teb < $thread + $proc >> @rdx << -@r11 & @rsi & @r9)  { test_statement(0x269F); } elsif (~@r8 >> $buffer & @r11 & @rsp & $proc | @r12 ^ @rsi & 0n10 ^ @r9))$proc) { test_statement(0x3B7);  for (; $buffer ^ @r8 | @r11 | @r10 != $buffer ^ @r8 | @r11 | @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
5067
 if (@r10 + @rdx << $buffer << @rsp | (@rbp) << @r8 & @rsi == @r10 + +@rax << @rax << @r12 >> -$thread << @r8 ^ 0x2 & @rbp >> $teb)  { test_statement(0xE4);  while  (@r10 & @rsi | @r8 | ~@rdi | 0y1010 ! @r10 & @rsi | @r8 | ~@rdi | 0y1010)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($ip ^ @rax >= @r13 ^ $thread | 0n3)  { test_statement(0x2289); } } else { test_statement(0x823); @rax = $ip ^ @rdx ^ @r11 | ~@rdx ^ @rax | $ip | $proc ;  /* This is a comment */ }
$error$
$end$
5068
 if (@r9 + @rbp << @rsi >> @r11 & @rbp >> @r13 & $teb & $ip & @r8)@r13 + $ip & 11 ^ @r8 << $ip ^ (@r9) >> @r13 & @rbx & $ip)  { test_statement(0xCF6); val = @r12 >> @rsp ;  // /* This is a comment   /* This is a comment */ ; ;  // /* This is a comment   This is a not opened comment */  This is a not opened comment */ } else { test_statement(0x26A9); }
$error$
$end$
5069
 if (@r11 + 11 ^ @r10 & $ip >> @rbx & @r9 ^ $proc & @r13 & @rbx @r11 + 11 ^ @r10 & $ip >> @rbx & @r9 ^ $proc & @r13 & @rbx)  { test_statement(0x95C); } else { test_statement(0x1F15);  This is a not opened comment */  if (0n12 | @r11 == 0xE)  { test_statement(0x2155); } else { test_statement(0x59); }  This is a not opened comment */  while  ($thread != @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
5070
 if (@rdi << $thread << $proc | @r11 << @rdi >> 0y1100 ^ @r12 >> ~(@r8) & @r12 ^ +@rsp & ~-@rdi ^ 0n2 | @rbx >> @rdx ^ @r13 & $thread | -@rdx >< @rdi << $thread << $proc | @r11 << @rdi >> 0y1100 ^ @r12 >> ~(@r8) & @r12 ^ +@rsp & ~-@rdi ^ 0n2 | @rbx >> @rdx ^ @r13 & $thread | -@rdx)  { test_statement(0x2058);  /* This is a not closed comment  This is a not opened comment */ } elsif (@rbp << @rbx >> 0y1001 ^ $buffer >> @r10 & ~0y0 ^ @r13 & @r8)@rbp << @rbx >> 0y1001 ^ $buffer >> @r10 & ~0y0 ^ @r13 & @r8) { test_statement(0xA8E);  for (val = $buffer ^ @rdx | $ip; @rdx ^ @r12 ! @rdx ^ @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
5071
 if (15 << @rbp << @rdx >> 0n11 | @rbx >> 0x4 & 20 ^ 0n16 ^ (@rax) ^ 23 ^ 0x10(15 << @rbp << @rdx >> 0n11 | @rbx >> 0x4 & 20 ^ 0n16 ^ (@rax) ^ 23 ^ 0x10)  { test_statement(0xB4C);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb ^ 16 | $thread | @r12 ! 0x3) ; }
$error$
$end$
5072
 if (@r12 + $buffer << $ip & 0y11 << @rbx >> 0n16 | @rbp | (@rsi)))@r12 + $buffer << $ip & 0y11 << @rbx >> 0n16 | @rbp | (@rsi))  { test_statement(0x2278);  /* This is a not closed comment  while  (@r9 >= @rsp ^ @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  This is a not opened comment */ }
$error$
$end$
5073
 if (@rbx + @r8 ^ $buffer ^ @r12 >> -@r13 & (+-~@rdi) & @rbp ^ @r8 | @r9 << $ip & @r10 & $thread | +(@r13) >> $teb & (@r8) & ~+$thread | $teb ^ @r12 ^ @r9 | 0n5 | $teb | $teb(@rbx + @r8 ^ $buffer ^ @r12 >> -@r13 & (+-~@rdi) & @rbp ^ @r8 | @r9 << $ip & @r10 & $thread | +(@r13) >> $teb & (@r8) & ~+$thread | $teb ^ @r12 ^ @r9 | 0n5 | $teb | $teb)  { test_statement(0xB5F); } elsif (0x8 >> @r13 & @r11 & ~@r11 ^ $buffer >> @r13 & @r11 & -@r8 ^ @rax ^ 6 ^ -5 | (@rdx) & @rbp 0x8 >> @r13 & @r11 & ~@r11 ^ $buffer >> @r13 & @r11 & -@r8 ^ @rax ^ 6 ^ -5 | (@rdx) & @rbp) { test_statement(0x17E3); } else { test_statement(0x1E9E);  This is a not opened comment */ }
$error$
$end$
5074
 if (@rax + 0xC << @rdi >> @r13 ; +@r8 + @r12)  { test_statement(0x129E); }
$error$
$end$
5075
 if (0y1000 + @rdx << @r9 << ($ip) >> @rbp << @r12 >> @r11 >> $proc ^ 0n11 >> -$buffer >> 10 ^ $teb ^ $ip & @rbx ^ 0y10010 ! @rax + ~@r10 >> 0x7 << (@r12) & (@r13) >> @rbp ^ @rdi >> @rbx >> @rbp ^ 0y1000 >> 0xD & @r11 ^ @r9)  { test_statement(0x952);  if (1 ^ @r12 | @r9 ^ $proc | 12 >< ~@r12 & @r13 ^ @rax | +@r12 | @rdx | ~@r8)  { test_statement(0xD4C); } elsif ($buffer ^ @r8 ; $buffer ^ @r8) { test_statement(0x1981); } else { test_statement(0x10F1); } } else { test_statement(0xC2E); ; }
$error$
$end$
5076
 if (@r8 << $thread ^ @r9 >> @rbp >> @rsp ^ @r9 >> @rsp & $teb ^ @r12 & +((@rdx)) ! @rdx + 0xB >> 20 & $buffer << $proc >> $ip >> @r9 & +~+@r9 >> 0n17 & @r9 ^ @r8 << +$teb ^ 11 >> $buffer ^ @r8 | @r9 | @r11 >> -$proc)  { test_statement(0x129F);  break;  /* This is a not closed comment } elsif (@r8 << @rsi & @rdx >> $proc < $teb >> 0x11 >> @r10 ^ @rsp ^ @rbp & @rbx | $buffer & $proc | @rdx & (@r11) ^ @r12 ^ 0n14) { test_statement(0xB33); ;  for (val = 10; @r11 | @r9 <> @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } else { test_statement(0x6EA);  /* This is a not closed comment  // /* This is a comment  }
$error$
$end$
5077
 if ($buffer + @rbp | @rax ^ ($buffer) >> $buffer & @rdi & $thread ^ @r8 & $buffer ^ $teb ^ $ip | 0n16 & @rbp ^ @rsi & @rdx ^ @rsp ^ $teb | 0n2 ^ -0n17 == @r11 + 0n4 & @rsi << +0x8 ^ $ip >> $teb ^ $buffer >> 6 ^ $buffer & @rsp | @rdx << @rbp & +$proc >> 0y1000 ^ @rdi >> 0 & @rdi)  { test_statement(0x1510);  while  (@r13 & @rdi < @rdi & @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x681); }
$error$
$end$
5078
 if ((@r9) << 0xF & $teb << @rsi & 0xC >> @r10 & 0n14 ^ @rdx << $teb ^ ~@r12 | 0n14 | @r13 >> $proc & 0y111 <= $buffer & ($buffer) >> $thread ^ @r10 & -$ip >> 16 & 0y111 & @rax ^ $teb & $teb ^ 0xD | 16 << @r10 & @rdi >> @rbp & @r12 | 0n10 >> +@rax & @r9 & @rdi ^ (@rbx) ^ $ip ^ 0n15 | (@rax))  { test_statement(0x1B6C);  if (@rsi & 22 ^ @rdx < @rsi ^ @rdi)  { test_statement(0x8D7); } elsif (@rbp ^ @r8 | $proc > @rsi | @r8) { test_statement(0x1D34); } elsif (@r10 ; @r10) { test_statement(0x35C); } else { test_statement(0x2125); }  This is a not opened comment */ } elsif (-@rbp >> @r8 >> @rbx | @r8 >> @rdi | @rbx | @r9 > -@r9 << @r11) { test_statement(0x5A8); ; } elsif (+0n12 >> $ip ^ 14 < -$ip & 21 ^ 11 & @rsp | @r12) { test_statement(0x20A0);  This is a not opened comment */ }
$error$
$end$
5079
 if (@r12 + (@rsp) << @r12 ^ $teb << +$ip >> $buffer >> 21 | @rbx << @rsp >> @rdi ! @rax << $buffer << +@r13 | $proc & @rbx >> @rax & (0xC) & @rsi)  { test_statement(0xFED); }
$error$
$end$
5080
 if (@rdx << @rbp >> @rdx >> @rax >> 1 ^ @r12 << 0y0 >> @r8 >> $buffer & @r8 >> @rsi & $proc | @r13 & @r10 @rdx << @rbp >> @rdx >> @rax >> 1 ^ @r12 << 0y0 >> @r8 >> $buffer & @r8 >> @rsi & $proc | @r13 & @r10)  { test_statement(0x1ACE);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc | ($proc) | $ip ! $ip) ; } elsif (~0xC << $proc >> @rdx & $buffer >> @rdi & ~0n8 ^ @r12 ^ @rdx ^ $ip | @r9 & @r10 ^ @rbp & @rdx ^ @rax ^ 0y1110((~0xC << $proc >> @rdx & $buffer >> @rdi & ~0n8 ^ @r12 ^ @rdx ^ $ip | @r9 & @r10 ^ @rbp & @rdx ^ @rax ^ 0y1110) { test_statement(0x389);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (-0n4) ^ @r9 < $proc ^ @rbx | $thread) ; } else { test_statement(0x1D29); }
$error$
$end$
5081
 if (@rbx >> $thread >> 20 >> $thread & $ip & @rbp >> 0x10 & 0y1101 ^ @r13 << $teb >> ~@rax ~$teb >> 4 << @rdi & @r8 >> (~@rax) >> @r9 | 0y1111 >> 14 & @rsp | @r10 & @rdx ^ @rdx | @rsp & @rbp ^ 17)  { test_statement(0x23C3);  /* This is a comment */  while  (0n13 <> 0y1000 | -@rsi | ~@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @r13 >< ((@r8)) | ~@rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x65A); }
$error$
$end$
5082
 if ($buffer + $proc << $proc >> @r13 << 20 & $teb << $thread | ~@r10 << $thread >< $teb << @r9 << +@r11 & @rbp << $thread >> @r8 >> @r11 | @rdx >> +@rbx ^ $proc >> $teb & $teb & @r10 ^ @r11 ^ 0n8 ^ @r9)  { test_statement(0x20AF);  /* This is a comment */ }
$error$
$end$
5083
 if (~@r9 + @rdi >> @rbx ^ ~@rdi << $thread >> @r8 >> @rsi ^ $thread ! 0y110 + $buffer << @r9 << 0n15 ^ +@r9 << -@rbp >> 20 & 0n18 ^ -@rax >> $ip & @r10 & @r10 ^ 3 & +@rdi)  { test_statement(0x1B9B); } else { test_statement(0x1A1D); }
$error$
$end$
5084
 if (@rsp << @r8 >> ++@r13 << @rdx & @rsi | +@r8 << @r13 >> @rsi >> @r9 & $proc & @r11 & @r13 ^ @r9 >> @rsi ^ @rax & 0y10000 ^ -$teb ^ $proc | @rax >> @r8 ^ @r12 ^ @rsp))0y110 + @r10 << @r10 << @r8 & @rbx << 15 >> @rdi >> @rbp)  { test_statement(0x19AE); @rax = @r10 >> +@rdi & $thread | 0y101 ^ @r10 ^ 0y1100 ;  if (@r9 == (@r13))  { test_statement(0x108D); } elsif (@rdx > 22) { test_statement(0x1802); } } elsif (0y1 << @rbp >> $teb >> @r10 | 0x1 ^ $teb))0y1 << @rbp >> $teb >> @r10 | 0x1 ^ $teb) { test_statement(0x1A92); } elsif (-@rdi ^ @rdi | $ip ^ -$thread ^ @rax | @rbp ^ @rsi >< @rsp & $ip & +@rdx ^ @rdi | $proc & @r13 ^ @rsi ^ @r13 | @r8 ^ 0n8) { test_statement(0x10F1); } elsif (0x0 >< $proc ^ @rdx ^ 0n14 | 0y1111) { test_statement(0xD28); ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 @r8) ;  This is a not opened comment */ }
$error$
$end$
5086
 if ($teb << $proc ^ $buffer >> $buffer >> ~-@rax & @rsi & +$thread & @rdi >= 0x13 & 22 >> @r13 & ~0y1000 & @rax ^ @rdi | @rbx & +@r12 & 0y101 ^ $thread & -@rbx & $teb ^ @rdx ^ 0n19)  { test_statement(0x1F31); } elsif (-0y1111 << +0y11 >> 0x10 >> +$ip & $thread ^ @rsp & $ip & @rdx ^ -0x0 | $teb | @rax & $proc ^ @rsp ^ $ip | (~$ip) ^ @r9 | @r11 <> $proc >> $proc & @rax >> 0n12 ^ @rsp >> $ip ^ @r10) { test_statement(0x1DB2); }
$error$
$end$
5087
 if ($ip + @rax << $proc ^ (+$ip) >> 3 >> @rdi & $thread >> @rsi | @r10 << @r11 >> (@rbp) & 0y0 >> @r10 ^ -@rsp >> @rbx ^ @r13 & @r9 ^ 0x0 ^ ~@rdi)@rbx + 0n16)  { test_statement(0xFE7); } elsif (@r8 << 0x10 & @r13))0y1010 << $proc >> @rdi >> 0n15 & @r8 & @rbx) { test_statement(0x1DCF); } elsif (-$ip & @rbp & 0n0 != @rdx >> @rbp ^ @rsi & @rdx ^ @rdx) { test_statement(0x7F6);  for (val = 10; $thread(~$thread | @r11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2534); }
$error$
$end$
5088
 if (@rbp << 21 << @r8 ^ @rdx >> @rsi >> @r9(@rdi << 20 & ~@rsi)  { test_statement(0x1C19);  break;  This is a not opened comment */ } elsif (+@rbx & @rdi ^ @rbp >> $proc ^ @rdi != 2 >> 0y110 >> $teb & @rdi >> 0y111 & @rbp ^ ($proc) >> @r11 ^ @r9 ^ @r8) { test_statement(0x1049);  while  (@r13 ^ @r11 >= @r13 ^ @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($ip >> $ip & @r13 & (0n3) ^ @rbp = +$proc ^ @rsp ^ @rdx ^ @rax | ~@rdx) { test_statement(0x2103); }
$error$
$end$
5089
 if (@r8 + @rsp << -@r11 << ~@rax >> @r11 >> 0n5 >> ~@r12 & @r10 & @r9 >> 0xA <= $thread >> @rdx >> @rsp >> 0n0 | @rdi & @r8 & $buffer | 0x1 & @r11 ^ $proc ^ $teb ^ @r9 | @rsi ^ $teb | ~0x10 | 0x2 | @rdx)  { test_statement(0x4F1); }
$error$
$end$
5090
 if (@r8 << @rdx >> @rbx & @rax ^ @rdx << $buffer >> $thread & @rax >> (@rsp) | @r12 >> +@rdi >> @rbp | @rdx >> @rsp & $proc & @r11(@r8 << @rdx >> @rbx & @rax ^ @rdx << $buffer >> $thread & @rax >> (@rsp) | @r12 >> +@rdi >> @rbp | @rdx >> @rsp & $proc & @r11)  { test_statement(0xA09); } elsif (0n14 ^ @r13 >> ~@rsi & $thread & @rbx ^ $proc & @rsp ^ @rdx ^ $teb $buffer >> $ip ^ @r13 | $thread >> @r8 & 0y111) { test_statement(0x273); } elsif (@rsp >> $buffer & @rdi & $proc ^ 0y10010 ^ @r8 | @rax | @rax ^ @rax((@rsp >> $buffer & @rdi & $proc ^ 0y10010 ^ @r8 | @rax | @rax ^ @rax) { test_statement(0x166B);  if (@rsi >< @r9 | @r11)  { test_statement(0xC91); } elsif (@rdi @rdx) { test_statement(0x1B08); } else { test_statement(0x10DB); } }
$error$
$end$
5091
 if (@rsi + @r12 << @rdi << $proc >> @r11 >> $teb >> @rdi & @rax << @rbp >> @r12 ^ +$buffer << $teb & @rdi & $buffer & ~$thread ^ @r11 ^ @r8 & @rax ^ $proc ^ @rbp | @r11 << $proc >> 0y10010 >> $buffer ^ @r9 >> ~@rax & 15 & @rsi ^ @r8 ^ @rsi >< @rsi + @r12 << @rdi << $proc >> @r11 >> $teb >> @rdi & @rax << @rbp >> @r12 ^ +$buffer << $teb & @rdi & $buffer & ~$thread ^ @r11 ^ @r8 & @rax ^ $proc ^ @rbp | @r11 << $proc >> 0y10010 >> $buffer ^ @r9 >> ~@rax & 15 & @rsi ^ @r8 ^ @rsi)  { test_statement(0xD05);  // /* This is a comment  ; } elsif (~0x7 >= ~0x7) { test_statement(0x2491); ;  // /* This is a comment  }
$error$
$end$
5092
 if (@r10 << @rdi << @r11 >> @r12 > @r10 << @rdi << @r11 >> @r12)  { test_statement(0x1FED);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb <= @rbp ^ ~@rdx | @rdx | @r13) ;  if (@rsp | $teb = $ip | @rsp)  { test_statement(0x1638); } else { test_statement(0x2469); } }
$error$
$end$
5093
 if (~-@rdi + -$teb << @rbx >> @r9 << @rdi >> @r13 >> 0y1011 & @rdx << 0y100 & 23 ^ @rbp >> $proc >> @rbx & @r13 >> 0x10 & @r11 & ~@r8 | 0n1 << 0x6 >> @rsi | @r12 >> $ip ^ $teb & @rax ^ +(@r8) | @r8 & $teb ^ 0 | 0n11 >< @r8 << @rbx & ($proc) >> $buffer ^ 4 >> 0n3 >> (+-$proc) & @r8 >> -@r9)  { test_statement(0xDA2);  if ($ip $ip)  { test_statement(0x1B2E); } elsif ($thread ^ @r9 | @r9 < @rdi ^ @r9 | @r8 | -$proc) { test_statement(0x146D); } }
$error$
$end$
5094
 if ((@rbx) & @r11 << $teb & $buffer & -$teb ^ +@rbp >> $teb & @rax >> @rbp & @rdi & @rsi | @r13 << 0n15 & @r8 ^ @rdx >> -@r11 ^ @r12 | @rdi ^ $thread ^ @r8 | $thread & @rsi ^ @r9 = ((@rdx)) + @r11 << $proc << (16) >> @rdi | @r13 << @rbx >> 0x0 >> @rsp ^ @r8 ^ 0n6 ^ @rbp | @r12 >> @r12 | 0 | -$ip)  { test_statement(0x239);  /* This is a not closed comment  if (0n18 = $buffer | (-@rax))  { test_statement(0x2011); } elsif ((@r11))(@r11)) { test_statement(0x142C); } } else { test_statement(0xF3C);  if (+$thread)+$thread)  { test_statement(0x14AC); } elsif ($teb >< @rsi) { test_statement(0x1602); } elsif ($buffer ! $buffer) { test_statement(0x66F); } else { test_statement(0x1F33); } }
$error$
$end$
5095
 if (@rsp << $ip ^ @r8 << 6 ^ @r9 >> 0n14 & ~@r9 & $proc ^ $teb != (@rax) + @rdi << $buffer << @r12 >> @r8 << -@r9 >> $proc >> @rsp ^ $proc << $buffer | ~$buffer << @rax & -@r8 >> $ip & @r13 & 0n16 | @rsp >> @r9)  { test_statement(0x3EF); } elsif (@rbp << @r11 >> @rdi >> @rax & @r13 >> 0n11 & @rsi & 0n16 | @rbp >> 0y1101 & $buffer & @r11 ^ $teb & +@rbx)@r11 >> ~-@rbx >> 5 ^ +0x13 >> @rdx ^ @r12 & @rdi | 0x8) { test_statement(0x1932);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp <> @r8 | @r8 | @rdx) ;  for (; -$teb($teb | -0y1101;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  val = @rbx ; } elsif (0n16 >> @rsi ^ (@r8) & @rdi((@r11 >> @rdi | @r8 & @rsi ^ $proc ^ @r9 | @r11) { test_statement(0x1955); val = $ip | $ip | $ip ;  while  (-@r13)@rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @rax(($ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ } else { test_statement(0x624);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx >= 0y101 ^ +0x3 | $ip | @rsi) ; }
$error$
$end$
5096
 if (7 + 2 | @r12 << @rsp >> ~~@r12 = 7 + 2 | @r12 << @rsp >> ~~@r12)  { test_statement(0x966); } else { test_statement(0x1272); }
$error$
$end$
5097
 if ($buffer ^ @r8 >> $thread >> @r10 & @r13 ^ ((@rbx)) ^ -@r9 != $ip << @r10 >> @rbx >> @r8)  { test_statement(0x2E); } else { test_statement(0x13D4); }
$error$
$end$
5098
 if (0x12 0x12)  { test_statement(0x145A);  while  (6 ^ @r13 == @rbp | ~@r8 ^ 0n18 | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  This is a not opened comment */ }
$error$
$end$
5099
 if (~@rsi + $thread >> @rsi << @rbx >> @r8 >> +@rsp & 5 << @r13 >> (-$proc) >< ~@rsi + $thread >> @rsi << @rbx >> @r8 >> +@rsp & 5 << @r13 >> (-$proc))  { test_statement(0x443);  break;  for (val = 10; @r11 >= @r11 | $teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x220E); }
$error$
$end$
5100
 if ($ip << $teb & @rsp << @rbx >> @rbx)$ip << $teb & @rsp << @rbx >> @rbx)  { test_statement(0xD63); } else { test_statement(0x165C);  /* This is a comment */ }
$error$
$end$
5101
 if (@r13 & $proc << 0n17 >> @rdi & 0y1011 ^ @rax << $buffer ^ @rbx >> 0y10 ^ -@r10 | $teb << @rdi & 10 & ~$ip & @r11 >< 0n14 + @r8 >> @rax >> @rdi)  { test_statement(0x7BF); val = $teb >> @rbp & 0x7 & @rbp ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -0n15 ^ +@rsi | @r8 | @r11 >= -0n15 ^ +@rsi | @r8 | @r11) ;  // /* This is a comment  } elsif (@r13 << 0x12 >> 0x12 ^ @r9 >> 20 | 15 >> $ip $buffer ^ -0y1101 & $ip | @r13 >> ($thread) & @rsp & @rdx ^ @r10 ^ @rdx ^ $thread) { test_statement(0x1827); }
$error$
$end$
5102
 if (@rdi | $teb >> $thread <> @r12 << 0y1110 << 0x3 >> @rsp ^ @r10 >> 4 & @r10 >> 10 & @rsp ^ @r12 >> $thread | @rbx << @r12)  { test_statement(0xDE); } elsif ((~$buffer) << 0n15 & 16 >> @r9))0n3 << @r12 ^ 0y1001 ^ 0n11 & $teb | $proc >> @rdi & ~@r13 & 0y1101 ^ 0y11 & @r12 ^ @rdx ^ $teb) { test_statement(0x1C62);  // /* This is a comment  val = -@rbx ^ 0y0 | 0y1111 | -0xD ; } elsif (13 ^ @rbx | 0y10010))@rax >> 0y101 | @r11 & @rsp ^ @rax ^ @rdi) { test_statement(0x1E34);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +~@rbx = $teb) ; val = @rdx ; } elsif ($buffer ^ $proc | @r12 | (@r9) <= $buffer ^ $proc | @r12 | (@r9)) { test_statement(0xC6A); } else { test_statement(0x304); }
$error$
$end$
5103
 if (@rdx ^ $ip >> 21 ^ $proc >> @rbp & 0n14 & +$proc ^ 0y100 & @r10)@rdx ^ $ip >> 21 ^ $proc >> @rbp & 0n14 & +$proc ^ 0y100 & @r10)  { test_statement(0x80A); ; } elsif ($teb >> @rdi >> 0y110 & @r8($teb >> @rdi >> 0y110 & @r8) { test_statement(0x7D5); ;  /* This is a comment */  while  (@rbp == @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x0 >> 0n8 ^ 0n6 & $thread < @r8 >> (@r11) | 0y10 ^ @rsi ^ -$proc | @rbx ^ $ip) { test_statement(0x1549); } elsif (@r13 & @r10 | @r13 @rdi ^ @r9) { test_statement(0x3A2); val = @rbp | $buffer ;  /* This is a not closed comment }
$error$
$end$
5104
 if (@r13 + @rsp << @rdx << $ip & @r11 >> $buffer ^ ~0xF >> ~$proc ^ @rsp >> 0y1011 & ($teb) & 0y101 ^ @r13 ! @r13 + 0y1100 & $teb >> $buffer >> @r13 | @rax ^ @rax >> 0n12 & @r13)  { test_statement(0x6F8); } else { test_statement(0x140D); }
$error$
$end$
5105
 if (14 >> 0xA >> @rsi >> 0y1100 & $ip << $proc >> $ip >> @r10 & @rdi >> @r12 & +~~--$teb & -@rax ^ @r13 & 7 != -@r9 + $proc & @r11 << +(2) >> $buffer >> $teb ^ $proc >> @rdi >> @rsi | @rbp << -@r12 >> (@rsp) ^ $teb | $ip ^ -(@r8) & @rsp)  { test_statement(0x194A);  while  (~@r9 & @r11 ^ 0y10011 ^ $ip | @r13 ^ +@r10 <> $proc | ~@rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y0 << @rbp >> @rax >> $proc ^ @rbp >> ~0x8 ^ @rdx & 13 ^ @r13 ^ 0y10001 >< $thread & ~@rdi & @r8 ^ $proc >> @rbp ^ -~@rax ^ +@r11 | @r10 & 0xF & @rdi | @rdx & @rdi ^ $proc) { test_statement(0x11E);  if ($ip ^ $buffer != @r13)  { test_statement(0xE16); } ;  while  (+@rax > +@rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5106
 if (@rsp + ~@rbp >> @rdi << $teb >> @r9 >> @r11 & @r9 << $ip & @r12 >> @rbp & @rbp | @r12 << @r12 ^ @r9 >> 0n19 & $buffer ^ @rbp & $ip ^ @rbp | ~@r13 >> 0x3 > @rax << (@rax) << $buffer)  { test_statement(0x71B);  break;  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -0n0 == -$proc | $thread) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx))@rdx) ;  This is a not opened comment */ } else { test_statement(0x13D3);  break;  for (; 20 ; 0xD | $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5107
 if ($ip << (@rdi) << $buffer >> @rdi << 23 & -$proc << 0y1100 >> @rsi & @r9 & 0y1101 & @rbp < @r11 + @rdi ^ $buffer << @r8 & $proc ^ (0x9) & @r10 & $proc ^ @rsp & @rdx ^ $proc ^ @rdi)  { test_statement(0x5DA); } elsif (@rbx << $thread & @r13 & ($buffer) > $ip & @r8 >> @rsi ^ 0xB >> @r9 & $thread & @rax ^ @r11 ^ 0n8 | 0xC ^ @rbp ^ $proc | @rdx & ~@rbp) { test_statement(0x1386);  while  (@r12 ^ @r9 ! (0n5) ^ @rax | 11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r10 >> @rsi & 0y1010 ^ $thread & ~0n17 ^ -@rax((@rdx ^ 0y111) { test_statement(0xD67);  if (@r11 | +-@r13 < 23 | $proc)  { test_statement(0x1C41); } } elsif (-@r13 & 0n0 | $thread | @rsi | @rsp ; $proc) { test_statement(0xEB7); } elsif (-0x11 ^ @r13 ; -0x11 ^ @r13) { test_statement(0x215D); } else { test_statement(0x262B); }
$error$
$end$
5108
 if ($ip + @r9 >> ($thread) << @rdi & $proc | $proc >> -$teb >> $ip | @rsi >> $ip ^ $proc ^ @r13 | -(@r13) & @rbp ^ $thread | (@rsp) | $buffer | @rsp ! @r13 << @r12 >> 0x9 & 5 << @rdi >> $teb >> 23 | (@rdx) << (@rbp) & @r12 >> @r8 ^ $buffer | ~@rdi >> @r11 ^ @rbx ^ $ip ^ +0y1011)  { test_statement(0x16AC); } else { test_statement(0x2221); }
$error$
$end$
5109
 if (@r9 << 0n11 & +$proc << $thread ^ @r12 << @r13 | @rbp << ~@rbx >> 12 >> ~$ip & -0n5 >> @rax | +@r13 & @rdx < @rsi & -@r13 << @rdi >> 0xE ^ @rdx & @r10 | $thread >> 0x10 & @r9 & @rsi | ~@rsi | $ip & @rbx | @rdi ^ @rsp)  { test_statement(0x1788);  if (@rax ^ @r9 | 13 ^ @rbx | @rsp == $thread & @rax | $buffer ^ @r13)  { test_statement(0xC96); } } elsif (@r8 >> 0y1010 >> @rdi ! @r8 >> 0y1010 >> @rdi) { test_statement(0x1ACA); } else { test_statement(0xB7C); }
$error$
$end$
5110
 if (((0n19)) + ($thread) >> @rsp << 0n6 & $teb << @r12 | @rsp & @r12 ^ @r8 >> @rdi ^ $ip | 22 & ~@rbx & @r8 ^ @rsi & 0n9 ^ @rax | @r13 | @r9 ^ ~+$thread | 14 | @rbx >= $buffer >> @r9 << @rbx >> @r9 >> @rdi)  { test_statement(0x157C); } elsif (@r10 >> +@rbp >> $ip ^ $teb >> $thread ; 4 << @rax ^ @r8 & 0xD ^ @rbp & 0y10000 ^ +@rsi ^ -+12 | @rax >> ~@r10 ^ @rdi & @r9 ^ (@rax) ^ -0x0) { test_statement(0x1383);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n3 | 0y10001 | $teb(-@rdi | 0n16) ; } else { test_statement(0x196); }
$error$
$end$
5111
 if (@rbx & 21 << $ip >> ~0n10 & $proc ^ $buffer >> ~(@rsp) >> $ip & @rdx >> @rbx | $ip ^ @r10 >> @rsp ^ @r11 ^ 4 >= 0n15 + @r10 << $buffer << @rbp & @rax >> @rax & 0x13 & @r9 & $thread | 0n16 >> $teb >> -@rbx ^ @rsp ^ @r13 & @rsi)  { test_statement(0x1175); }
$error$
$end$
5112
 if (0n10 << @rbp >> @r8 | 0n6 << @r11)@r10 + @r13 | @rsp & ~(0xC) & 0x4 ^ @r8 >> 0xE)  { test_statement(0x16D6); }
$error$
$end$
5113
 if (-@rsp << @r13 << $thread & @rsi << @rbx & $buffer >> $teb < @rax & @rsp & @r12 & @rdx & @r10)  { test_statement(0x19EF);  break;  /* This is a not closed comment } elsif ((@r8) << @r12 ^ $thread & @r13 ! @r13 << @r8 ^ @rdi) { test_statement(0x8B4);  while  ($proc)$proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rax & $ip & @rsi ^ $teb | @rsp & $ip ^ 0y10001 ^ @rax | 0y1000 | @r13(@rax & $ip & @rsi ^ $teb | @rsp & $ip ^ 0y10001 ^ @rax | 0y1000 | @r13) { test_statement(0x1E6A); } elsif (+(@rbp) ^ @rbp ^ @rbx > +(@rbp) ^ @rbp ^ @rbx) { test_statement(0x266E);  while  (@rbx < ~1)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rdi ;  if ($buffer ! @rax)  { test_statement(0x10B0); }  /* This is a not closed comment }
$error$
$end$
5114
 if (@rbp << @r10 >> 0y1000 << 0n11 >> $thread >> @rdi & @r12 == @r10 + @r8)  { test_statement(0xDFE);  // /* This is a comment  ; } elsif (~((@rdi)) << 0y111 >> @rsp & @rdx >> @rbx >< @r9 << @r12 >> @r12 & -@r13 >> +@r12) { test_statement(0x1B82); } elsif (@rsi >> $proc & +$thread ^ 0n1 <= @rdi & @rbp & ~-@r9) { test_statement(0x6D5);  // /* This is a comment   if (0xE < @r11)  { test_statement(0xB4E); } elsif (3 <> 3) { test_statement(0x1947); } elsif ($buffer < @r13) { test_statement(0xCF8); }  while  ($ip <> @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
5115
 if (@r11 + @rdx << @rsi((0xC << $buffer << ~@r13 >> @rdx << 0y10011 >> @r10 >> +@r12 ^ @rdi & @r11 | 2 << @r11 >> @r12 ^ 0x13 ^ @rdx ^ @r11)  { test_statement(0xF5C); }
$error$
$end$
5116
 if (@rsi + @r8 << @r11 & -@rdi << 0x6 & @r9 >> ($teb) & (@rbp) | ~-@r8 << @rax >> $teb & 0xA >> $proc | @rsp ^ @r12 ^ @r11((@rsi << @rbp ^ $proc >> @rbx & @rsp >> 0n14 & @r8 & @r9)  { test_statement(0x23FD);  break; } elsif (@r12 << @r12 & @rsi & @rsp & @rsi >= @r9 & @rdi >> $teb ^ 0y100 >> $proc & 0n2 & (@rbx) | ~@rax >> @rsi ^ @rsi & -0n11 ^ @rsp ^ $teb) { test_statement(0x70B); }
$error$
$end$
5117
 if (0x11 >> @rdx & @r12 | @rax ^ @r11 ^ @rbx & ~$proc ^ ~$teb | +4 & @rdi & @rsp ^ @r10 ^ $proc | $ip & 21 ^ @r8 ^ 0n2 | @r13 ^ @r9 @r12 ^ -@rbp << $teb >> @r12 >> @rsp & @r10 & @r8)  { test_statement(0x1B4C); } else { test_statement(0x1F93); }
$error$
$end$
5118
 if (@r11 + 1 << @r11 << @r13 & ~6 >> @rdx & @r11 >> +$proc ^ @rbp & @r8 != @r13)  { test_statement(0x22B9);  /* This is a not closed comment  break;  for (; @rsi <> @rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = $teb ; } elsif (@rbp >> @r10 >> @r9 != $teb & 0x9 & @r9 | $proc & @r11) { test_statement(0x1A5); } elsif (~~+@rdx >> @r8 & @r13 & @rax ^ $ip ^ (@r8) ^ (~$thread) == 0n4 >> $buffer ^ $teb & @rdi | -@rsp ^ 0n3) { test_statement(0x2329); }
$error$
$end$
5119
 if ((0n5) <= (0n5))  { test_statement(0x10A3);  while  (@r11 ; @rbx | 3 ^ @rdi | $buffer | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (@rax = @rsi | $buffer; @rdi))@r12 ^ ~-@r10 | ~0y1001;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 >> @rsi & @r11 ^ 0n2 & 0n10 & $buffer ^ @r11 >= (@rax) ^ $ip >> @r12 ^ @rsp & @r9) { test_statement(0x767);  while  (-@rsi(-@rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x3 | ($buffer) <> 0x3 | ($buffer)) ; } elsif (@r9 >> $teb & 0y110 | @rax ^ @rbx ^ @r8))$ip >> -~@r12 & 4) { test_statement(0xC34);  /* This is a comment */ } else { test_statement(0x22E6); }
$error$
$end$
5120
 if (@rdx >> @rbp << @r10 >> @rsi ^ @rdi << $ip >> $ip >> @r10 < 3 << 0x3 << @rax & $buffer)  { test_statement(0x7CB); } elsif (@rbx >> ~@rdi & +$buffer ^ 3 | @r8 ^ @rbx | @r12 == @rbx >> ~@rdi & +$buffer ^ 3 | @r8 ^ @rbx | @r12) { test_statement(0x417);  /* This is a comment */ } else { test_statement(0x1D99); val = @rax ^ -@r11 ^ $teb ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp | $teb <> @rbp | $teb) ; }
$error$
$end$
5122
 if (@rsp + @r11 >> @r12 << @rax ^ @rax << $buffer >> @r13 ^ @rsi & @rsp & @rbp ! @r12 + (-$proc) ^ $thread << ~0xE | @r13 >> @r8 >> @rdi & 0n4 >> $thread & @r12 ^ -@r11)  { test_statement(0x18A2);  for (val = 10; @r13 & $ip ; @r13 & $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r12 << $buffer >> -@rsp = @r12 << $buffer >> -@rsp) { test_statement(0x1A05); val = @rsp & @r11 ^ 6 ^ @r10 ; } else { test_statement(0x1007); ;  while  (@r11 | @rsi >< @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5123
 if ($proc + 1 << 0y110 & $proc >> @r8 >> @rbp & @rbx & @rax ^ $buffer << 0x5 >> @r8 >> $thread & @r13 ^ $buffer < 0n17 + @r11 & @rsp << @r11 >> @r12 ^ $buffer & 20 & $buffer & 0x4)  { test_statement(0x1391); }
$error$
$end$
5124
 if (@r13 ^ @rsp >> (@r13) ^ @r12 ^ +0n18 <> @r13 ^ @rsp >> (@r13) ^ @r12 ^ +0n18)  { test_statement(0x492); } elsif ((@rbx) & -@r11 >> @rdi ^ @rdx ^ @rbx & @r11))(@rbx) & -@r11 >> @rdi ^ @rdx ^ @rbx & @r11) { test_statement(0x2E); }
$error$
$end$
5125
 if (@rsp ^ ~@rdi << $thread >> ~0y10001 & (~@rsp) & @r11 & @r11 ^ $teb >> 12 & $proc)@rsp ^ ~@rdi << $thread >> ~0y10001 & (~@rsp) & @r11 & @r11 ^ $teb >> 12 & $proc)  { test_statement(0x18E);  if ($thread & $proc | @r8 ^ (@r10) ; @r10 & @r13 | ~0n6 ^ 0y10 | @rax)  { test_statement(0x2619); } val = @r8 & @rsp ^ $teb | @rsi ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread != (@rsp) | @rdx) ; ;  This is a not opened comment */ } elsif (-@rdi >> --0n6 & $thread & 0y10000 & $buffer ^ @r8 | @rdx & @r13 & @rsp | @r11 & +(@rsi) ^ 0y1 ^ $proc | @r13 >= -@rdi >> --0n6 & $thread & 0y10000 & $buffer ^ @r8 | @rdx & @r13 & @rsp | @r11 & +(@rsi) ^ 0y1 ^ $proc | @r13) { test_statement(0xAD4); } elsif (@rdx & $ip & 0y10 ^ +@r12 ^ $buffer)@rdx & $ip & 0y10 ^ +@r12 ^ $buffer) { test_statement(0x1B8B);  for (; @rdx > @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (+@r13 != +@r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5126
 if (@r13 << @r12 << (@r12) & $ip << @rdx ! @rdi & $ip >> $teb >> $thread ^ @r12 | ~+0y10000 >> $thread & 15 >> 0y1101 & @rdi ^ $thread >> $proc | 0y111 ^ +0y1011 | $thread & @r8 | @rbx)  { test_statement(0x904);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc < 0x9 ^ $ip) ; }
$error$
$end$
5127
 if (@rsi + @rax << @r12 << @r10 & @rsp << @r11 >> 0n9 & @rsi >< @rsi + @rax << @r12 << @r10 & @rsp << @r11 >> 0n9 & @rsi)  { test_statement(0x2670); } elsif (@r12 << @rsi >> @rdx | $thread >> 17 & @rsp ^ @r13 & @r8 ^ 0y1011 ^ @rbp ! @r12 << @rsi >> @rdx | $thread >> 17 & @rsp ^ @r13 & @r8 ^ 0y1011 ^ @rbp) { test_statement(0x23AE); }
$error$
$end$
5128
 if (0x6 + +-$thread << @rbp << @r13 & @rbx & $teb ^ $ip >> @rbp & @rbp ^ $buffer & -@r10 | -@r12 << @rsi >> @rdx >> @rdx & ~$buffer >> ~@rbp(@r11 ^ @r13 & @r9 ^ $proc ^ 0x3 & @rbx ^ ($teb) | @r12 << 0x10 & @rdi >> @rsi & @r10 & $buffer | @rbx >> @rax ^ +$thread & 0y1 | (@r12) ^ @r9)  { test_statement(0x1D89); @rax = @rbx ^ 0n5 ;  // /* This is a comment  } elsif (0xC << @rdx >> @rdx ^ 0xA >> $teb == @r13 >> 10 >> @r9) { test_statement(0xF29);  for (val = 10; @r13 ^ $teb | @r9 = @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12 >> @r9 | @rbp & @r10 ^ 0y11 ^ 0y1 <= @rax & 0n6 & @rbp) { test_statement(0x1A56); }
$error$
$end$
5129
 if ($teb >> $buffer ^ @rsp << @r10 >> $teb >> $teb | $buffer << $ip & @rdi & $buffer ^ 0x5 ^ @r12 & (@r10) | @rdx >> @rdx != $buffer + @rsi)  { test_statement(0x1C6C); ; } elsif (0y1111 << @rax ! @r13 << $thread >> @r10 >> @r9 & @r11 ^ @rbx >> @rdx & $buffer & 0n18) { test_statement(0x1297);  /* This is a not closed comment } elsif (@r13 | $ip & @r10 ^ @rbp ! @r13 | $ip & @r10 ^ @rbp) { test_statement(0x4CD); } else { test_statement(0x3B7);  /* This is a comment */ @rax = @rsp ^ @r11 ; }
$error$
$end$
5130
 if (@rdi << @rdx << (@r8) >> +0y1110 ; @rdi << @rdx << (@r8) >> +0y1110)  { test_statement(0x14E4);  break;  /* This is a comment */  /* This is a not closed comment  /* This is a comment */ ; ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax((~@rdx) ; } else { test_statement(0x227);  This is a not opened comment */ }
$error$
$end$
5131
 if (0n19 << @r10 << 0xD | 0x13 << @r12 & 3 & ~+$buffer & @rsi ^ @rdi & (@rdi) ^ $thread | @r9 >> $buffer & 0x3 ^ 0n12 <= 0n17 << @rbx ^ @rdi >> 0x3 & $teb >> $ip & $teb & $ip | @rsi << $thread | @r8 >> -@r8 & 0x4 ^ +@rdx | $ip & @r9 ^ 1 | @r13 ^ @rbp | @r8 | @r11)  { test_statement(0xC3A); } else { test_statement(0x1DE9); }
$error$
$end$
5132
 if (@rdi + 22 >> 15 << +@r11 >> @rax ^ $ip << +@r11 < @rdi + 22 >> 15 << +@r11 >> @rax ^ $ip << +@r11)  { test_statement(0x144B);  This is a not opened comment */ } elsif (@r8)@r8) { test_statement(0x234F); }
$error$
$end$
5133
 if (@r10 <= @r9 << @rdx << @r11 & @r13 << 6)  { test_statement(0x1150);  for (val = 10; @r9 ^ @rbx ^ @rax)@r9 ^ @rbx ^ @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1E2F); ; }
$error$
$end$
5134
 if (@r12 << @rbp << @r10 >> @r11 << ~@rdx >> @r11 >> 0xC ^ 21 & $ip ^ -@r9 & $thread == @r13 + @r8 << ~@r8 & @r12 | 0n14 << -0y1000 >> @rax & $proc >> $proc & @r8 & @rdi ^ ~@rax & $thread & @rax | -17 & +$thread)  { test_statement(0xEFA); } elsif (0x6 >> 4 & @rbx & @rbp ^ 0n15 < 0x6 >> 4 & @rbx & @rbp ^ 0n15) { test_statement(0x25DD); } else { test_statement(0x302); }
$error$
$end$
5135
 if (@r10 << 0y1001 << 0n4 & $thread << 0y1011 & @rbp >> @r9 | @rbx << @r10 >> @rdx >> @r13 & +@r13 & (@rax) ^ ++@rbx >> @r11 <= -@rax + @rax << @r13 << @rsi)  { test_statement(0xCD0); val = @r10 & $teb & 0xC ^ @rsi ^ @rbp ^ +22 ; } elsif (@rdi | @rbx & @rdi & $teb = @r8 & 0x11 & @rbp ^ @rsi >> @r12 ^ @r9 & -@rsi | 0xF & @r12 & @rbp ^ @rax | 0x10 & 0y100 ^ 1 | @rdx ^ @rdx) { test_statement(0x1DC4); } elsif (@r9 >> ~@r12 | @rsp != @r13 >> @rdx & @rbp & $thread | $buffer & $ip ^ 0n1 ^ -@r13 | @rdi ^ @rsi) { test_statement(0x215E);  while  (@rsi | -$teb == @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = 0 ; }
$error$
$end$
5136
 if (~@rdx & $thread << @rax ^ @r10 << @r9 >> @r12 >> 0y1100(((@rax) | (@rsi) >> @r10 >> @rdx & $buffer >> -12 & @r13 ^ 0n17 >> @rax & $proc)  { test_statement(0x1BC9); } elsif ($buffer >> 11 >> $thread & @rsi @rsp | @rsp >> -@rbx) { test_statement(0x253B); } else { test_statement(0x841);  for (val = 10; @r13 ^ $teb ! @rbp ^ @r9 | @r11 | @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rbx | @rsi))@rbx | @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb $thread) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip < $ip) ;  break; val = @rdi ;  /* This is a comment */ }
$error$
$end$
5137
 if (--~16 + ($teb) << @r10 << 0n4 & @rdi | @rbp << +$proc ^ @rbx | @rax & @r11 & @r9((~@rbp + @rsi & @rbx << 0n15 >> 11 & @rdx | 0n18 << @r12 ^ $thread >> 0y1001 & $thread & ~@r12 ^ @rbp | 0x8 ^ $thread ^ 0y10000 | $ip ^ (0y1101) ^ @r8)  { test_statement(0x1ACD); } elsif (@rdi >> $buffer & @r8 & @r10 & @r12 <= @rdi >> $buffer & @r8 & @r10 & @r12) { test_statement(0x23D2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx | @rbx)@rbx | @rbx) ; } elsif (@r12 < @r12) { test_statement(0x187); }
$error$
$end$
5138
 if (23 << ~-$buffer >> @rdx << @r10 ^ (@r9) >> +~+$thread >> @rdi > $ip + @rbx << @rax ^ @rdx << $teb >> @rdi >> $thread & @rsp >> $proc & $teb)  { test_statement(0x17A2); } else { test_statement(0x106);  if (@rdx ^ 3 | @r13 | @r12 > (@rbp) | $buffer)  { test_statement(0x142E); } elsif (@r9 | $proc == $thread | @rbx) { test_statement(0x173B); } ; }
$error$
$end$
5139
 if (@r8 + ~@rdx << @r13 << @r8 & @rbp << @rbp >> @r8 >> +@rdi & 0x1 ^ @r8 << @rdx & @rdx >> $teb & @rsp ^ @r8 ^ 0x4 & @r9 ^ @rsi | 0x2 << 0x6 >> (@rdi) >> $thread & @rbp >> @rax != @r12 + $thread << $teb << @r9 | @r12 << @r13 ^ @rax)  { test_statement(0xFF9); } elsif (@r10 & @r13 >> ++3 & @r10 != @r10 & @r13 >> ++3 & @r10) { test_statement(0x22C7);  This is a not opened comment */ } else { test_statement(0x1DBE); }
$error$
$end$
5140
 if (~0n6 << @rdx >> @r11 << @rsp >> @r10 >> $teb & -@r12 << @rsp(($buffer << @r9 & @r13 << $ip ^ @r13 << @r13 >> 0x13 >> (@r8) | @r9 << $buffer | @r8 ^ @rsi ^ $proc)  { test_statement(0x1674);  if (0y1 | 0y100 | @r12 | $ip != @rbx ^ @rdx | $thread | @r10 | $thread)  { test_statement(0x2415); } elsif (@r11 ^ $buffer))@r11 | @r11) { test_statement(0x809); } elsif ($proc | $buffer <> $buffer) { test_statement(0x908); } else { test_statement(0x248F); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 ^ 0n8 <> @r12 ^ 0n8) ; } elsif (@rdi >> -@r10 & 0n19 ^ 0n12 & @r11 | @r13 & $buffer | @rdi & $teb ^ @rbx ^ -0y1((@r11 << 0n18 >> $buffer >> @rsi & +~0n17 ^ @rdi & @r8 ^ 0y1) { test_statement(0x49E);  /* This is a not closed comment  This is a not opened comment */  /* This is a not closed comment  // /* This is a comment  } elsif ($buffer >> @rsi ^ @r8 & $ip ^ @rax >= $buffer | @r13 | @r11 ^ @rdi | @rsi | $proc) { test_statement(0x1AEA); }
$error$
$end$
5141
 if (@rsp + $ip << @r11 >> ((@r12)) & @rax >> ~~@r12 ^ (@rsi) >> @rax)@rsp + $ip << @r11 >> ((@r12)) & @rax >> ~~@r12 ^ (@rsi) >> @rax)  { test_statement(0x1466); } elsif (@r12 << 0n5 ^ @r8 ^ $buffer ^ @r13 | (+-+$ip) | @rdi ^ 0n1 ^ $ip | $proc < $teb >> @r13 >> @r13 ^ @rbx) { test_statement(0x1B98); } else { test_statement(0x2000); }
$error$
$end$
5142
 if (@rsp + $teb << @r12 ^ @rdx << @r13 >> @r10 & +@rsp & 4 & ~@rbx ^ $ip >> @rax | $buffer ^ @r12 >> @rdx & 0n1 & @r13 ^ @rdi & @rsp ^ @rax ^ +@rdi = @rdx & @rdi & 0y10011 & $proc & -@r9 | @r8 << @rbp ^ @r13 >> 0n13 & @rdx)  { test_statement(0xFD5); }
$error$
$end$
5143
 if (@rax << 0n0 >> @r12 << 0y1010 >> @rsp | 4 >> @r8 & @r10 >> @rsp | 0x1 >> @r13 ^ -@r10 & 0n4 ^ $ip | 0x9 & @r11 ^ @rbp ^ 4 != (@r12) + $ip << @rax << $ip >> @r13 << +@r12 >> @r8 >> @r8 | 0n7 << -@r9 & (-@r8) >> @r13 ^ @rdi >> ~@rdx & @rbx & @rbx | $buffer >> ~@r10 ^ (@rsi))  { test_statement(0x78B);  break; }
$error$
$end$
5145
 if (0n19 & 1 & 0x0 & -$thread | 0x8 | 0n11 >> +@rbp ^ @rsi & @rbp)0n19 & 1 & 0x0 & -$thread | 0x8 | 0n11 >> +@rbp ^ @rsi & @rbp)  { test_statement(0x1F27); }
$error$
$end$
5146
 if (@r8 + +@r12 & @rax << @rax >> @r12 >> $buffer ^ @rbp >> $buffer & @rdx | $proc & +@r8 ^ @rsp & $proc ^ $thread ^ -@r8 ^ @r13 | $teb >> @r10)@r8 + +@r12 & @rax << @rax >> @r12 >> $buffer ^ @rbp >> $buffer & @rdx | $proc & +@r8 ^ @rsp & $proc ^ $thread ^ -@r8 ^ @r13 | $teb >> @r10)  { test_statement(0x193C);  // /* This is a comment  val = @r10 | @rbp ; }
$error$
$end$
5147
 if (@rdx << @r12 >> @rbp & $teb << @r11 ^ $buffer << 0y1101 & +@rsp >> $buffer & +@rdx & @rax ^ 0x13 >> -@r11 ! @rsi << @r13 << @rbp >> $teb << -(0n4) & @r12 << $thread >> @r12 & (@rax) >> ~@rbx & @rsp & $teb ^ @r11 << @r13 | @rdx << @rbp >> $thread >> @r10)  { test_statement(0x1C34); }
$error$
$end$
5148
 if (@rbx << (-$thread) << @rax ^ @r13 ^ 0y101 >> 0xC & @r8 & $teb ^ $buffer & 0y10010 ^ @r11 ; @rax + $teb << @r12 << @r9 & +@r9 << ~(@rsp) & @r11 >> @rsi & $teb & $buffer ^ @rbp << @rax & @r8 ^ @rbp ^ $proc & $thread)  { test_statement(0x1F20); }
$error$
$end$
5149
 if ($buffer + @r12 ^ 0n13 & @rbx >> @r11 ^ +$buffer >> @rsi & @rsi | +$thread << ~$buffer ^ @rsp >> @r10 & $thread & 0x2 ^ @r13 & $buffer >< 5 + 0y1100 << $buffer << 0y1010 >> @r10 << @rsi & @r9 & 0n12)  { test_statement(0x2701); }
$error$
$end$
5150
 if (15 << (0y1101) << @r9 >> @r9 & 0n1 << -$buffer >> @r10 | @r13 >> 0y101 >> @r11 & @rdi >> @rsp | 3 >> $teb & 0y10011 & 0n9 ^ @rsp))+@r8 + @r13 >> @rax >> $buffer >> @r8 & $thread >> @rsp >> @rbx ^ $thread & @r12 ^ ~@rsi >> @r8 & @rax ^ $thread & @rsp)  { test_statement(0x883); } elsif ((0x6) & @rbp & 0x9 >< @r10 << @r9 >> @r8 >> $thread) { test_statement(0x164E); } elsif ($proc >> @r10 ^ @rbx != @r13 >> $thread ^ @r9 ^ @rbp ^ @r12 | @rdx ^ @rax ^ @rbp | @r12) { test_statement(0x1CB3);  while  (@r10 != @r13 | 3)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif (@r9 & @rdx ^ @rsi | $thread ^ @rsi | -0x1 | @rdx ; @r9 & @rdx ^ @rsi | $thread ^ @rsi | -0x1 | @rdx) { test_statement(0xC3E);  // /* This is a comment  } elsif ($proc ^ ~-+$thread | @rbp | @rsi == @rdx ^ @rbx | @r12) { test_statement(0x2399); } elsif ($thread | $buffer <= (@rax)) { test_statement(0x1BF0); } elsif (0y11 <> @r8) { test_statement(0x1665); } elsif (@rbp != @rbx) { test_statement(0x114D);  /* This is a comment */ } elsif (@rbp != @rbp) { test_statement(0x434); }
$error$
$end$
5151
 if ($thread & ~$ip >> $thread >> @r11 | ~@rdi >> 0n12 ^ @rsi ^ 0n18 & -0y1001 ^ @r10 | @rbp | 4 & @r11 | $buffer ^ @r11 | @rdx >< $thread & ~$ip >> $thread >> @r11 | ~@rdi >> 0n12 ^ @rsi ^ 0n18 & -0y1001 ^ @r10 | @rbp | 4 & @r11 | $buffer ^ @r11 | @rdx)  { test_statement(0x10D7); } elsif ($buffer >> $buffer >> $proc ^ $thread & @rax ^ $proc & @r13 ^ 20 ^ @rdx | @rdi & @r12 & @rbp | @r12 & $teb <= @rdi & $buffer >> @rbp ^ 22 >> $proc) { test_statement(0x16D); }
$error$
$end$
5152
 if ($thread + 0y1001 << -~$teb << @rax & @rdx >> @r12 ^ +@rdx << @rdi >> $thread & +0y100 >> @rax <= @rdx + $thread << $teb << @r11 >> 0y1010 << 0xA >> @r11 & @rax << @r9 & +@r13 & $teb)  { test_statement(0x1A01); } elsif (16 & +@rdx ^ @rsp & @rsi & @rsi | ($teb) <= @rdi << @r10 & 0x9 >> $proc ^ $teb) { test_statement(0x25EA); } else { test_statement(0x184A); }
$error$
$end$
5153
 if ($proc << (+@rdi) >> @r10 >> @r13 & @r8 << 0n12 & @r8 & @rbp | @rdi << 0xA >> $ip >> @r8 ! $proc << (+@rdi) >> @r10 >> @r13 & @r8 << 0n12 & @r8 & @rbp | @rdi << 0xA >> $ip >> @r8)  { test_statement(0x278);  for (val = 10; $ip ^ @r9 | @r13 | +@r12 | @r12 >< @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x154A); }
$error$
$end$
5154
 if (@r11 + 12 << 0n19 >> @r12 ^ @rdi >> ($teb) >> $buffer & @rsi >> $buffer & @r10 & +@rbx((0y1010 >> ~+0n17 >> @rbx >> @r11 & ~@rsi << @rsi & $buffer >> $buffer & (@rsp) | @rdi & $teb ^ 0n13 >> @rsi)  { test_statement(0x14CE);  This is a not opened comment */  This is a not opened comment */ }
$error$
$end$
5155
 if ($buffer + 0y1 >> $buffer ^ 22 << 0y10 & 0y0 >> @r11 ^ $proc & $teb ^ @rsp ^ @r9 ^ ($proc) | @rdx << @r11 ^ @r9((@r10 + $teb << @rsi)  { test_statement(0x7F2); } elsif (0y10000 << @r10 >> $thread | $thread & 0n18 & $proc | @rdx & @rsp ^ (@rbp) | (@r13) ^ $thread | -@r10 ; @r12 & $teb >> @r8 ^ @rdx >> @rdx & @rbx & 0x6 | @r10) { test_statement(0x1817);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax ^ @r10 > @rax ^ @r10) ; } elsif (@rax & $proc & @r13 ^ @r11 & @r8 ^ $buffer | 0n16 ^ @rsi | @r9 ^ 0n19 | $ip <> ~5 >> @r11 | $thread ^ 0n9) { test_statement(0x17B4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 11 != ~@rax) ; } else { test_statement(0xB3B); }
$error$
$end$
5156
 if ($ip + ~@rbx << $buffer << $buffer | @r9 & 0x5 & $buffer = @rbx + @r11 >> $teb >> 0n7 ^ @rbp << $thread)  { test_statement(0x15CB);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax != @rax) ; } elsif (@rbp ! @rbp) { test_statement(0xEB8); } elsif ($buffer ^ 0xE((@rsi ^ 0x2 & 0n10 ^ 0y100 | @r13 | @r9) { test_statement(0x184C); } elsif (@rdx & 0y1000(@rdx & 16 ^ @rsi ^ 0y1) { test_statement(0xC46);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ($buffer) ! @r10) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi)@rdi) ;  while  (0y0 0y0)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
5157
 if (0xD + 4 << 0y1000 << @rbp & $buffer >< @rbp + @rsi | @rbp >> @rbx)  { test_statement(0x199A); } else { test_statement(0xE20);  // /* This is a comment  }
$error$
$end$
5158
 if (@r11 >< @rbx + @rsi << $teb << @rbp >> $teb ^ @r9 >> 0x2 >> 17 ^ @rsp ^ @rbp | @rsp ^ 0n17 >> +0n7 & @rdx)  { test_statement(0x218D); } elsif (@rsi << @rax >> 0x13 >> ~@r11 & 0xD & 0x13 & (0y111) ^ @rbp ^ @rdx & +@r11 ^ @r13 | @rdi & -@r13 & -@rsp | @rsp & @rdi ^ $thread ^ @r10 | $thread ^ (@rdx) == @rdx << @rbp) { test_statement(0x1EBB); } elsif (0x2 ^ (0n7) ^ @rax ^ ~@r11 | $buffer ^ @rsp ^ -@rax | @rbx ^ @r9 > @r12 >> $ip & @rax & 4 ^ 0n0) { test_statement(0x1D69);  /* This is a not closed comment } elsif (0x12 & @r8 <= 0x12 & @r8) { test_statement(0x12A0); } else { test_statement(0x91E); }
$error$
$end$
5159
 if (~~@rbp + @rdx << 23 & @rdi & 6 & @r11 & @r13 >< @rsp << $proc << $ip >> +@rdi & @rsi ^ @r12 >> $teb >> @r10 & @rbx ^ $proc & @rdx & $buffer)  { test_statement(0x1076); } elsif (0n5 << 0x4 >> $proc >> @r8(@rdx & @rax >> $ip | $teb >> $teb | 0y100 & $buffer) { test_statement(0x21E4); @rax = (0y1101) & (@r10) ^ @rax | @r8 ;  if ($teb <> $teb)  { test_statement(0x10B7); } else { test_statement(0x2AC); }  /* This is a comment */  if (@r13 < @r8)  { test_statement(0xFF5); } elsif (~$teb <> $ip) { test_statement(0x30D); } } else { test_statement(0x1134); }
$error$
$end$
5160
 if (10 << @rbx >> @r12 << @rdi ^ 0y1101 & 4 >> @r8 & 12 & @rsp ^ $ip & +@rdi ^ 0n10 ^ 7 | $ip << @rsi >> @rsp >> 0 & @rbx ^ 0y1000 ^ @r8 & (@r9) ^ $thread ^ @rbx))@r10 << 0n2 << @rsp >> @rsi >> 0x10 >> $proc & ~@rsp << 0n8 & 21 ^ @r13 << 0x7)  { test_statement(0x1184); } else { test_statement(0xF1B); }
$error$
$end$
5161
 if (@r11 & @rdi >> 0n13 >> $ip | @rax >> @r13 ^ --$buffer >> $ip & @rdi | @rsp | -@rdi & @r11 ^ @r13 | (~@rsp) ^ @rdx <= @r13 << $thread ^ @rsp << @rdx >> @r13 >> @rbp ^ (@r8) & $ip & ~+@rdi ^ @rdi ^ 0y0)  { test_statement(0xF27);  if (0n17((@rdi & $ip)  { test_statement(0x1A96); } elsif (-@r13 ^ ~13 | $ip | $buffer == -@r13 ^ ~13 | $ip | $buffer) { test_statement(0x2278); } elsif ($buffer < $buffer) { test_statement(0x1943); } else { test_statement(0x56D); } } elsif (0xB << 1 >> +@r10 ^ @rbp >> ~@rsp ^ @r8 <> @r10 << @r12 ^ @rdi | @rdi >> @rsp & @r13 | @r13 & -$ip ^ @r11 | @rsp ^ @r10 | $buffer) { test_statement(0x1B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 17 ^ $teb == @rbp ^ @r9) ; }
$error$
$end$
5162
 if (@rax + @rbp << @r13 >> ~(@rdx) ^ $teb << 0x7 >> $teb ^ $proc ^ @rsp & @rdi | @r12 ^ -~(@rdx) >> 0n7 & +0y0 & @r11 | @rsp >> $ip & @r8(@rax + @rbp << @r13 >> ~(@rdx) ^ $teb << 0x7 >> $teb ^ $proc ^ @rsp & @rdi | @r12 ^ -~(@rdx) >> 0n7 & +0y0 & @r11 | @rsp >> $ip & @r8)  { test_statement(0x1D54); } elsif (@rdi & @rdi & $ip & @rbx ^ (0x9) >= @rdi & @rdi & $ip & @rbx ^ (0x9)) { test_statement(0xE81); } elsif (@rax ^ @rsi & $proc < @r12 >> @rsi) { test_statement(0x1C56); } elsif ($thread & ~0x10 | (@r11) ^ @r13 | 0x7 == ~@rbx & @rdx ^ @r9 ^ @rsp) { test_statement(0x48E); } elsif (@rsp ^ $teb | $ip((0y1111) { test_statement(0x1204); } else { test_statement(0xC81);  // /* This is a comment  }
$error$
$end$
5163
 if (@rbx + ~~0y1110 << $ip >> @rsp << $buffer == @rdi << @rdx >> @rbp & 0n1 >> @rax >> @rbp & $teb ^ 2 << 6 & @rsi & @r9 ^ @r13 & @rbp & 0n13 ^ @rdx & $buffer ^ 0y101)  { test_statement(0x1DEF); } elsif (@r8 ^ @r9 >> $teb & @rdx & @r9 > @r8 ^ @r9 >> $teb & @rdx & @r9) { test_statement(0xDCD); } elsif (@r9 >> @r12 & @rbx == @r9 >> @r12 & @rbx) { test_statement(0x14E2); ; } elsif (@rsp & 0n12 | $proc <= @rbx) { test_statement(0x1B92); ;  break;  for (; @r13(@r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 | 0n6 | $ip((@rsp | @rsp | @r11) { test_statement(0xAB8); } elsif (@r10 != @r9) { test_statement(0x266E); } else { test_statement(0x1139);  while  ($ip ^ -$proc | +@rax <= @r11 ^ @rbx | @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
5164
 if (15 << @rdi >> $proc & @r11 << @rsi | @r10 << @rbp & @r9 ^ @r10 >> 0y0 & $thread ! ~@rsi << @rax >> -@rbx)  { test_statement(0x4F1); } elsif (@r12 << $ip >> $proc & @r13 >> +$teb & @rbx | 0y10000 >> @r9 ^ +@r8 & @rsi ^ @rbp < @r12 << $ip >> $proc & @r13 >> +$teb & @rbx | 0y10000 >> @r9 ^ +@r8 & @rsi ^ @rbp) { test_statement(0x429); } elsif (@r11 >> @rax & $ip <> (@r11) >> (~@r13) | @r11) { test_statement(0x26A6); } elsif ($buffer & +0n12 ^ @r9 ^ @r12)$buffer & +0n12 ^ @r9 ^ @r12) { test_statement(0x479); }
$error$
$end$
5165
 if (@r9 + 15 & +0n2 << @r10 >> 3 & @r9 >> 0n15 & 0y100 | $buffer << @rdi & -$proc & @r11 | $ip >> 16 ^ $proc ^ @r11 | $teb ^ $proc | $ip ^ +@r10 <> $thread | @r12 << $thread & @r13 & @r11 & $ip ^ $teb | 0y1000 | $ip & 15 ^ @r11 | -$teb ^ 0x11 | 0x13 | @rbp)  { test_statement(0x101); } else { test_statement(0x1770); }
$error$
$end$
5166
 if (@r10 << @rdi << @rdi | @rsi & @rdx | -++$ip >> @rbx & @r11 | 0n16 & $teb(@r12 + 0y101 << @r11 << (0y10010) ^ 0x13 << $thread ^ @r10 & @r11 | +@r9 << @r12 ^ $thread & $buffer & @rdi ^ $buffer & ~@rax)  { test_statement(0x91C);  /* This is a not closed comment } elsif (-0x13 >> (@r11) & @rbx | (@rax) >> @r8 $ip ^ @rdi >> (@rax)) { test_statement(0x1F61);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y100 ! @r11 ^ @r8 | @rdx | 0n6) ;  while  (@rbp | $thread ; @r10 | 12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = $teb | @rax ;  for (val = 10; @r10 != +@rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer = @rsi) ;  break; } elsif ($proc >> @r13 | 0x3 ^ @r9 | +@rdx = $teb ^ 5 ^ @rax ^ @rdx | @rsi ^ @r9 | (0n8) | $thread) { test_statement(0x1FE4); } else { test_statement(0x1A40);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip ^ 0x10 | @r10 | @r8 <> (0n17) ^ $proc | -~0y100 | 1) ; }
$error$
$end$
5167
 if ($teb & @rdi << @r10 >> (0x12) & @r9 >> @rsi & -0x8 & -(@rax) | @rbx << @rdx))0y10000 << @rsi << ($ip) | $ip >> $proc ^ (@rdx) ^ $ip & @r10 ^ @r13 ^ @r11 | @r10 & -@rsp & $ip ^ @r11 ^ @r8)  { test_statement(0x49); } elsif (@r8 & $proc & @rdx & @rax | 0xA >> 0x9 ^ (@r10) & -$proc ^ @rsi | 0n14 & $buffer ^ @r13 != @r9 & @r10 >> 0y11) { test_statement(0x193D);  while  ($thread ^ @r13 | @rbp | @r13 == @rdx ^ @rdx | @rbx | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  break;  // /* This is a comment  } elsif (0x2 @r11 >> ~@r10 ^ @r9 | 0y10011 & $proc ^ $buffer) { test_statement(0x241); val = @r8 ; }
$error$
$end$
5168
 if (@rsp ^ 0y10 & @r8 | $proc >> @r11 | @rdi >> (0n10) ^ @r13 ^ 0n11 ^ 0y1011 | 0y10000 >= @rsi + @rsp << 0y0 << 0n18 >> @rsp << $proc ^ @rdx << @rsp >> -@r9)  { test_statement(0xF12);  break;  // /* This is a comment   /* This is a not closed comment } elsif (@rbp << $thread >> @r8 ^ @r13 & ~$proc ^ @r8 ^ @r10 | @rbp >> @rsi ^ @rdi ^ $thread | 0n4 & @r10 ^ @r12 ^ @rax | @r12 ^ @r12 < @r10 >> @rbp & @r12 >> @r9 ^ $thread ^ 0n11 ^ @rbx ^ @r13 | @rdx & @rdi) { test_statement(0x6F5); } elsif (@rsp & @rbp))@r13 >> 0y10011) { test_statement(0xA84); } elsif (@rsp | 0x3 > @r13 & @r9 ^ (@rdi)) { test_statement(0x1FAB);  for (val = @r12; @rdi 0n2;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer < $buffer) { test_statement(0x1A91);  /* This is a not closed comment } elsif (12(0y1000) { test_statement(0xEC2);  for (; $teb >< $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5169
 if (@rdx >= @r10 & 0n3 >> @rdx >> 0x10 & $buffer >> 0x10)  { test_statement(0xA64); @rax = 7 & @rsi & 0xF ^ @r12 & @r9 ^ 0n1 | 0n8 | @r10 ; } elsif (@r8 >> @r8 >> (@r9) ^ 3 >> @r8 & @rsp & $teb | $teb | 21 > @r8 >> @r8 >> (@r9) ^ 3 >> @r8 & @rsp & $teb | $teb | 21) { test_statement(0x1B26); } else { test_statement(0xFBC);  This is a not opened comment */ }
$error$
$end$
5170
 if (@rbp + @rdi >> @rdx << @rsp ^ $teb << $proc | $buffer << @r11 ^ 0n4 >> 0xE & $thread & $thread | @rdi >< @rbp + @rdi >> @rdx << @rsp ^ $teb << $proc | $buffer << @r11 ^ 0n4 >> 0xE & $thread & $thread | @rdi)  { test_statement(0x1FE3); @rax = @rdx | @rdx & 0x9 ^ $proc ^ @rdi | (@r11) ; }
$error$
$end$
5171
 if (~-@r8 + $thread >> @rbp >> 0x8 >> @rsp | ~@rsp ^ 0x11 != @r11 >> $proc & @rsi << 0y1100 ^ 22 >> $teb ^ @r10 >> @rbp & $buffer ^ @r8 & @rdx ^ -@rsp ^ @r10)  { test_statement(0x2163); }
$error$
$end$
5172
 if (@r8 << 0n0 | -@rsp << @rax & ~@rbx & @r13(@r12 + ($thread) >> $ip << @rdx & @r8)  { test_statement(0x1983);  while  (0n13 & $proc)0n13 & $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~$buffer ^ @rsp > $proc | @r12 | 0n18) ; } elsif (@rsp << @rsp >> @rbp & (@r10) >> 0x5 & ~@r13 & @r12 | @rsi >> @r11 & @r10 & $proc | +@r11 == @rsp << @rsp >> @rbp & (@r10) >> 0x5 & ~@r13 & @r12 | @rsi >> @r11 & @r10 & $proc | +@r11) { test_statement(0x240C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@rsp ^ $teb == @rsp) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 | @r11))0xD | @r11) ; } else { test_statement(0x19A4); }
$error$
$end$
5173
 if (@rdi << -@r10 >> @rdx << -@rdx & @rax & @rax ^ @rbp ^ $teb >> @rsi | @rax << $ip >> @rax >> @r10 ^ @r13 >> @rsp ^ @r8 & $thread | 0n2 | @rax ^ @r11 ^ @r12 | $teb | $buffer | ~$ip ; @rdi << -@r10 >> @rdx << -@rdx & @rax & @rax ^ @rbp ^ $teb >> @rsi | @rax << $ip >> @rax >> @r10 ^ @r13 >> @rsp ^ @r8 & $thread | 0n2 | @rax ^ @r11 ^ @r12 | $teb | $buffer | ~$ip)  { test_statement(0x1CD5);  This is a not opened comment */  /* This is a comment */  if (@rsi)+@r10 | @r9)  { test_statement(0xB61); }  This is a not opened comment */ }
$error$
$end$
5174
 if (@r9 + @r9 & @r11 << @rbp >> $ip ^ @rsp << @rdx >> $proc(@rbx + 0y1001 << @rdi & @r13 >> $buffer ^ @r8 << @rdx ^ $buffer ^ @r9 ^ +(0y1001) ^ $ip)  { test_statement(0x322);  // /* This is a comment  } else { test_statement(0x1A6B); }
$error$
$end$
5175
 if (~$buffer + @rdx >> $thread ^ $teb << @rsi & @rbp >> @rbx | $buffer << +@rdx & -$thread ^ @rbp >> ~$thread ^ @rsi & @rbp ^ 22 ^ 0y100 == @r10 + @rdi | $proc << (@rdx) ^ @r9 & (@r8) & 7 ^ @r11 & 0y10010 | $teb >> @rax)  { test_statement(0xA1F); } elsif (@rdi << @r8 | @r10 >< @rdx << @rbp >> @rsi >> @r12 & $thread >> 0n14 & $buffer ^ @rdx) { test_statement(0x705);  /* This is a comment */  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer(($buffer) ; }
$error$
$end$
5176
 if (@rsp << @rsi << @r13 >> @r10 >> @rax >> @rbx ^ $ip << $proc >> 15 >> $teb > 0y1100 + (@rbx) << $buffer << @rax >> @rbp >> $thread & @rdi >> @r10 >> ($buffer) | @r8 | @r9 >> @rdi ^ @r9 & 21 ^ @rsp)  { test_statement(0x13E8); } elsif (@rbx << 0n8 >> @rbp >> 0n9 & @r11 ^ $thread & ~@rbp & $thread ^ $ip ^ @rsp ^ ~23 @rdx << 0x11 ^ $proc) { test_statement(0x2481);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi ^ @rdi | @rsi | @rbp < @r11 ^ @rsp) ;  // /* This is a comment   while  (@r9 <> 0y11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($thread ^ @rbp & -@r13 ! $teb) { test_statement(0x878); } elsif (@rsi & @r13 | @r13((@rsi & @r13 | @r13) { test_statement(0x3CD); } elsif (@rsp ^ @rdi))-$ip ^ @r13 | @rbx | 10) { test_statement(0x22D1); }
$error$
$end$
5177
 if (+~@r13 << @r11 << @rdi >> @r13 << $buffer >> @rax ^ $thread << $proc))@r11 ^ @r9 | $teb & 0x0 >> 0y1111 ^ 15 >> @r10 & $buffer & @rdx ^ @rdx & 0n19 ^ @rdi | @rax >> $teb & 0xB)  { test_statement(0xAB0); ;  /* This is a not closed comment  This is a not opened comment */ } elsif (@r8 >> $ip >> @rbx & ($buffer) >> 0n2 ^ $ip >> 0x0 & +$buffer & (@r8) ^ @r11 & 0y1000 > @r8 >> $ip >> @rbx & ($buffer) >> 0n2 ^ $ip >> 0x0 & +$buffer & (@r8) ^ @r11 & 0y1000) { test_statement(0x376); } else { test_statement(0x1C6); }
$error$
$end$
5178
 if ($ip + 0n14 ; $ip + 0n14)  { test_statement(0x96A); } else { test_statement(0x2172); }
$error$
$end$
5179
 if (+$proc << 0y1010 << 0n19 & $buffer << 0n18 & @rax >> 4 & @r10 & -@r13 | @rbx << 0x1 >> +0x8 >> 0y1010 & @rdi | @rax >> @r11 | @rax != @rdx + $proc & +0x5 | $buffer << +@r13 >> @rbx >> @rbx)  { test_statement(0x1DC); }
$error$
$end$
5180
 if (~$ip + @rbx >> 0y1101 >> @r13 & @rax << @r9 >> @rbx >> (17) >< @rbx + (@r12) << @r8 >> @r8 << 12 & $ip << @rsp >> 0y1011 >> $ip ^ 0n14 << ~@rsp ^ -0n9)  { test_statement(0x12A7); val = $teb >> @rdx ^ ($proc) ; } elsif (@rsp << @rdx & $thread >> @rbx & +@rdx & @r12 ^ @rbx >> @r9 & @rbx & $ip | @rbx >> @rbx & @rbp >= +@rsp << @r13 & $ip) { test_statement(0x1E0); }
$error$
$end$
5181
 if (0y1101 + @r10 >> $buffer ^ 0xD << -@rsi >> (@rax) ^ $teb | @r10 >> 0n14 & @rsi & ++$ip ^ 0x6 >> @rsi ^ $teb & @r11 | @rdi >> 3 & @r12 & @rbx ^ (-@r11) & @rdi ; @rdi + @r10 >> ~@r13 >> @r11 >> @r11)  { test_statement(0x2250); }
$error$
$end$
5182
 if (0y110 + @r12 << @rbp << @rbx & $buffer << --(-7) | @rdi & @rbp >> @r8))0y110 + @r12 << @rbp << @rbx & $buffer << --(-7) | @rdi & @rbp >> @r8)  { test_statement(0x9D6); } elsif (@rbx << @rbx & @r12 >> $proc & $proc | @r12 >> 0n11))@rax << 0n7 & ~($buffer) >> @r10 ^ 0y111 ^ $teb ^ (@r9)) { test_statement(0x14A2); } elsif (@r11 >> $proc | 0y100 ^ $proc ^ @rsp | @rdi ^ @rbp((@r10 & @r12 & +@r9 ^ @r9 & @r13 ^ @r12 ^ @r10) { test_statement(0xEE3); } elsif (@r11 ^ (@rbx)((~@rax & @r13 | @rdi ^ @r13) { test_statement(0x11A3); val = (@rsp) ; } elsif (3 ^ 0n2 | @rax | 0xF >= 0x11 | 0n2) { test_statement(0x15EE); val = ~$proc ;  // /* This is a comment   while  (@rdx ; @r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r11 | @r12 != @r13 | @r8) { test_statement(0x8F5);  // /* This is a comment   /* This is a comment */  // /* This is a comment  } elsif (@r10 >< @rsi) { test_statement(0x252A); }
$error$
$end$
5183
 if (0y10001 << @r13 << +@r12 | 0y10000 >> ~16 >> @r9 & @rsp >> (@rbp) < @rsi + @r13 >> 0y1011)  { test_statement(0x9AC); } else { test_statement(0x143); }
$error$
$end$
5184
 if (0n10 & @rdi & @r9 >> 0y110 ^ 16 << @r9 >> @r13 >> @rax & $proc >> @rsi & 0n6 & $teb)@r9 >> @rsp << @r10 | @rsi << ~$teb >> $thread >> $thread & $ip | $thread >> @r12 & @rdx & -$teb | 0y101 ^ @rsp)  { test_statement(0x1E07);  // /* This is a comment  }
$error$
$end$
5185
 if ((0n14) + 0x5 & @r12 >> @rsp >> 0n7))@r12 + @r11)  { test_statement(0x160); } else { test_statement(0x654);  // /* This is a comment   break; }
$error$
$end$
5187
 if (+0y1011 << @rbp << @rdi >> $thread << $buffer & @rdi << @r11 & @rsp & +@r13 & @rbx | 20 << +0xE >> @rbp ^ @rsi & 0y100 ^ @rbx & (@rbp) ^ $thread ^ 3 | @rbp >> -$thread & @rdx & @r11 | $ip & $teb | $buffer ^ 10 != 0xB >> @r10 & @rbp)  { test_statement(0x2274); } elsif (@rdi & @rax & @r13(@r13 << @rax ^ 0y110 & $buffer) { test_statement(0xCB5);  // /* This is a comment  } elsif (++$proc ^ @rsp & @rax ^ $buffer ^ @r11))$proc >> @rax & $buffer ^ 10 & @r11 ^ @r9 ^ +@rdi) { test_statement(0xE85);  /* This is a comment */  while  (1)17)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 | @rax ^ 0x13 | @r8 | 0xC <= $thread ^ @rsp | @rbp ^ (@r8) | @rsp | ~@rsp) { test_statement(0x61B); } else { test_statement(0x164D); }
$error$
$end$
5188
 if ($ip >> ($teb) & @r8 << @rax & 0y1000 ^ $proc << @rbx >> -@rbp & $buffer | 0n15 >> @r10 | @r11 >> $proc ^ @rax | 0y10000 ^ $proc ^ $ip != $ip >> ($teb) & @r8 << @rax & 0y1000 ^ $proc << @rbx >> -@rbp & $buffer | 0n15 >> @r10 | @r11 >> $proc ^ @rax | 0y10000 ^ $proc ^ $ip)  { test_statement(0xDAA); } elsif (@rbp >> (~@r9) >> @rbp & (~0x7) >> 0n11 & $buffer & @r9 ^ $teb | ~$proc >> @rsp & @rsp ^ @rbx ^ 0n8 ^ ~@rdx | (@rax)(0xB << @rdi ^ @rsp >> $buffer & -0xB & (@r8) ^ @r11 | @r9 >> @r13 ^ $buffer & @r12 | $ip & 0xB) { test_statement(0xC59);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc ^ @rsi | @rdi | @rax >< @r11) ; } elsif (~0xB | @r12 & ~1 ^ @rdi | $proc ^ @r9 < -@rsi >> @r10 ^ 0n9 | $buffer & @r13 ^ @rbx ^ -$thread | 0n9) { test_statement(0xDF3);  while  ($thread | 17 < $buffer | @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  if (~0y10011((~0y10011)  { test_statement(0x12EE); }  if ((~@r9)(@r12)  { test_statement(0x101C); }  /* This is a comment */ } elsif (@r8 & @r12 ^ @rdi | @r13 | $ip | ~$thread = 20 | @r11) { test_statement(0x1935);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n17))-$thread) ; } else { test_statement(0x5CA); }
$error$
$end$
5189
 if ($buffer + @r9 << $ip >> 7 << @r13 >> $buffer >> -+@rdx ^ ($teb) << $proc & @r9 >> $ip & @r13 & 13 <= @r10 + 0n3 << @r10 >> @r13 & $buffer << $ip | @rax)  { test_statement(0x5AD); } else { test_statement(0x1B8F); }
$error$
$end$
5190
 if ($ip >> @r10 << ~@rsp >> +0y11 >> @r13 | $ip ^ @rdi ; @r13 + $proc >> @rsp >> @r9 >> (@rsp))  { test_statement(0x1C7);  /* This is a comment */ } elsif (($teb) << $ip >> ~@rdi)($teb) << $ip >> ~@rdi) { test_statement(0xEDC); } else { test_statement(0x1592);  while  (+0xE < @r11 ^ @r11 | 0y0)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
5191
 if (@rsi << ~@rsp << +(@rax) >> @rsp ^ @rbx << (+0y101) ^ @rax >> @rsp | @r9 & +0y1 >> @rbx | 16 ^ $buffer & ~@rsp ^ 0y1 ^ ($buffer) | @r12 | $buffer ^ @rax | 0x8 | +(@rbp) = @r10 + -0n8 & @r11 << +@r10)  { test_statement(0x4CE);  if (@r10 & @rbp | @rsi((@r12) & $thread ^ $proc ^ 0xB)  { test_statement(0x155D); } elsif (0y1000 | 0n18 != 0y1000 | 0n18) { test_statement(0x2605); } elsif ($ip >< -$buffer | 0x5) { test_statement(0x25EC); } elsif ($proc = $teb) { test_statement(0x16C6); } else { test_statement(0x566); } }
$error$
$end$
5192
 if (+~@rsp >> @r8 & @r12 << $proc >> 0 >> @r9 ^ ($teb) >> ~$ip & ~$ip >> @rax ^ 0n3 >> @r13 & +-@rsp ^ (@rsp) & +7 | @r10 << @r9 ^ ~$proc != (@r9) + @rax << 0x11 << +$buffer & 0xC << @rdx & +14 >> $ip ^ @rax << $buffer ^ @r9 ^ ($buffer))  { test_statement(0xBC3); }
$error$
$end$
5193
 if (@r8 + +0n15 << $proc << 6 >> $thread << @rdx >> $buffer | @r13 & @rsi ^ @r12 >> $buffer | @r8 >> -0n4 ^ @r9 != -@rbp + 0x3 << $proc >> (@rbp) << $ip | @rsi << +0xE & 0n17 & @r12 | $teb >> @rbx ^ @rax)  { test_statement(0x18E9); } else { test_statement(0xF5A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip | @r9 < 0y10011 ^ 0n14 | @rdx | $proc) ;  /* This is a comment */ ; }
$error$
$end$
5194
 if (@rsp << +~$buffer >> (@r11) << @rdx >> $proc >> 11 | -@r11 >> $teb >> $teb((@rsp << +~$buffer >> (@r11) << @rdx >> $proc >> 11 | -@r11 >> $teb >> $teb)  { test_statement(0x21AD); } elsif ($teb ^ @rax >> @rsi ^ @rsi & -@rbp ^ $proc ^ @rsi | @r11 >> +$ip & +$thread & @rbx ^ @rsp & 0x1 ^ -0 < $teb ^ @rax >> @rsi ^ @rsi & -@rbp ^ $proc ^ @rsi | @r11 >> +$ip & +$thread & @rbx ^ @rsp & 0x1 ^ -0) { test_statement(0x13EC); } elsif (@rsp >> $teb > @rsp >> $teb) { test_statement(0x6AA);  /* This is a comment */ val = --0x1 ;  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n10 < @rbx) ;  This is a not opened comment */  This is a not opened comment */ } elsif (@r13 & $buffer >= @rbp | $buffer ^ @rsp | ($thread) | $ip) { test_statement(0x122B); } elsif (@r12 ^ 0x3 >= @r12 ^ 0x3) { test_statement(0x1E4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax == 0n14) ; } elsif ($thread | @rdi))$thread | @rdi) { test_statement(0x16B0);  for (; $thread @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi <> @rdi) { test_statement(0xC7C); } elsif (@rsi > @rsi) { test_statement(0x11BA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y10001 ! @rbx) ; } elsif ($ip)$ip) { test_statement(0x983); } else { test_statement(0x7C2);  This is a not opened comment */ }
$error$
$end$
5195
 if (+@rbp << @rdi >> @r13 << 0y1010 ^ $thread & @r8 ^ 0x3 ^ @rdx & @rax | (@r12) << (@rax) & @r13 >> @r8 ^ @rax | @rdx >> ~$teb = $ip + +0x6)  { test_statement(0x2465); ; } else { test_statement(0x151A); }
$error$
$end$
5196
 if (@rsp << 0n18 & @rdx >> $buffer >> @r8 & @rbp >> @rbx & @rax & $ip | @rbp << @rdi >> ($proc) ^ 6 & @r8 & @r11 >< @r13 + @r9 & +$teb << ~@rsp >> +@r10 >> @rdx)  { test_statement(0x858);  for (val = 10; 0n15 ^ @rdx ^ $buffer >< $buffer ^ @r13 | +$buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r9 ^ $buffer ; } elsif (@rax << ~@r11 & @rbp = @r11 >> $proc >> +~$ip & $thread & (0y10) ^ ~@rbx >> @rdx & @r9 & $teb ^ @r12 | @r9 >> @rdx ^ @r12 ^ $proc | 13) { test_statement(0x811); } else { test_statement(0x135);  /* This is a comment */  for (; (@rax) | @rdx ; $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r9 | $teb ; }
$error$
$end$
5197
 if (@rbx + @r12 & $proc << @r11 & $ip | @rax << $buffer >> @rsi >> @rbp | $ip >> @r12 ^ @rdi >< $proc + @rsp | $ip << 0n2 ^ 0x12 >> 0y1000)  { test_statement(0x14FE);  if (-@r9 & @r12 | +0x8 | +@rdx <> -@r9 & @r12 | +0x8 | +@rdx)  { test_statement(0x1); } elsif (@r13 ^ ~++@r8($thread ^ @rax) { test_statement(0xAB3); } else { test_statement(0x17AF); } } elsif (~+$buffer << $proc >> @rsp & @r8 | -+-@rdi & @rbx & $ip ^ ($ip) < $teb << @r13 >> @r11 & (@r12) >> @rdi) { test_statement(0xC31); } else { test_statement(0x5CF); }
$error$
$end$
5198
 if (-@rsp + @r11 & @r9 << ~$ip >> 0y1 >> 10 & @r9 >> 0x9 = $proc + @r12 >> 0y111 >> @rsp >> $proc & @r9 >> @rax >> @r8 & @r8 >> -@rdx & @rdi ^ @r11 << 5 & @rdx >> 0n11)  { test_statement(0xFE); } elsif ($buffer << @r13 >> $teb >< @r10 << @rsi ^ $buffer & 0y10011 ^ 0xE & @rdx | (@rsi) >> @rbx & @rdi ^ @r10 | @r8 & 0y10) { test_statement(0x14C); } elsif (1 ^ $ip & @r13(($ip & $ip ^ (7)) { test_statement(0x24C4);  while  (@r12 | @r12 >< @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rbp ; } elsif (-$buffer & @rsi == @r8) { test_statement(0x718);  This is a not opened comment */  /* This is a not closed comment  while  (@r11 <> 0x2)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rbx >= @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x912); }
$error$
$end$
5199
 if (@rbx ^ (0n15) & @rdi ^ +@rdi ^ @rbx & 0n1 ^ $proc ^ (0x5))@rbx ^ (0n15) & @rdi ^ +@rdi ^ @rbx & 0n1 ^ $proc ^ (0x5))  { test_statement(0x15C3); val = @r13 | @rsi & @r11 | @rsi ^ @r10 | 2 | 0n14 ;  This is a not opened comment */ }
$error$
$end$
5200
 if ($buffer + @r12 << @r13 << -@r12 >> 0y1 >> @r10 >> ~@r8 ; $buffer + @r12 << @r13 << -@r12 >> 0y1 >> @r10 >> ~@r8)  { test_statement(0x14C2);  break;  This is a not opened comment */ } else { test_statement(0x263D); }
$error$
$end$
5201
 if (@r11 + @rdi >> $proc >> 0y10011 >> @rsi & -@r11 << ~~@r11 >> 4 >> 0x1 & $thread >> +0n4 ! $teb ^ @rbp ^ ~@rdx | -0n9 << (~0y10001) >> +0xD >> @rbx ^ @rdi & @rsp)  { test_statement(0x20F9); } elsif (@rax & ~+3 >> @rax((((0n8)) >> @r8 >> 0y10010 & $proc | 0y1101 & ~22 & -7 ^ @r13 ^ @rdx ^ @r10) { test_statement(0x1C3); val = $proc ;  while  (@r13 <> @r8 | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5202
 if ((@r13) + ~@rsi << @r8 & ~0x4 > -@r8 ^ @rsp << ~0y11 >> @rsp >> 0n7 & ~-@rsp ^ @r13 ^ @rax & $ip ^ @rsp ^ ~0y1001)  { test_statement(0x1D76); ;  break; } elsif (@rsi & 0n19 >> $thread & @r10 & @rsi ^ 0y1001 >> $proc ^ @rbx == @r12) { test_statement(0x1A5); ;  /* This is a comment */ } else { test_statement(0x7CE); }
$error$
$end$
5203
 if (@rax & $teb ^ 0n11 & 0x11 & @r11 & -@rdx ^ +@r9 | @r12 << @rbp >> 0y1101 >> @rdi ^ (0y11) >> @rdx & @rdx((@rax & $teb ^ 0n11 & 0x11 & @r11 & -@rdx ^ +@r9 | @r12 << @rbp >> 0y1101 >> @rdi ^ (0y11) >> @rdx & @rdx)  { test_statement(0x1010); val = @rsi ; } elsif ($teb & @r10 & $ip ^ @rsp >> $thread | @rdi & @rdx ^ @r8 & $thread ! -+@rbx >> 2 ^ @rsi & @r13 & @rbx ^ @rbp & @r13 | 0n9 & (0y1011) ^ $ip | @r11 ^ 0n6) { test_statement(0x18EF);  if ($buffer ! $buffer)  { test_statement(0x1E40); } elsif (@rdx))@rdi | $teb) { test_statement(0x3DC); } elsif (@r11 > @r11) { test_statement(0x17F); } else { test_statement(0x571); }  break; }
$error$
$end$
5204
 if (@rdx + -@r8 << @r10 << 0n15 >> @rdi << 12 >> 0y101 & (-@rsp) << $buffer & (@r13) | ~@rdx << 17 & @r11 >> @rdi | $buffer >> 0n16 & $proc & @rsp ^ $thread < @r8 + @r12 | $ip << -@rbp >> @r13 ^ $thread)  { test_statement(0x21); } elsif (@rdi << @rsp & @rdx & 0y1000 | $ip ^ $thread ^ @r9 ^ -@r9 ! @rdi << @rsp & @rdx & 0y1000 | $ip ^ $thread ^ @r9 ^ -@r9) { test_statement(0x1945); } elsif ($proc >> $teb & 0y1011 | @r11 & @r8 ^ @r11 ^ 0n4 | @rsi ^ $buffer | +@rbx | @rsp((@rsi >> 11 ^ @r8 & -($thread) ^ @rax) { test_statement(0x1092); } elsif (@rax & $thread | @r8 ^ @r11 | 0x11 | $thread ; ($teb) & +@rdx ^ @r8 ^ @r13) { test_statement(0x24A5); } else { test_statement(0x174E); ; }
$error$
$end$
5205
 if (@rbp + @r12 & @r8 >> @r12 ^ @r12 & @r12 >> $teb & 3 ^ @r13 >> 0y11 <= @r8 + @r9 << $thread << @r10)  { test_statement(0x1D6A);  break; }
$error$
$end$
5206
 if (0x3 | @rdx & @r8 >> 0xC($ip + @r11 << $buffer)  { test_statement(0x1B17); } elsif (0xA << @r13 >> @rbp >= 0xA << @r13 >> @rbp) { test_statement(0x1667); ; }
$error$
$end$
5207
 if (@rsp & @rdx << $ip >> +-$buffer == @rsp & @rdx << $ip >> +-$buffer)  { test_statement(0x1054);  break;  /* This is a not closed comment  if (@rdi | @r9 ! @r9)  { test_statement(0x1427); } elsif (+--@r8 @r13) { test_statement(0x6A2); } elsif (@rbx != ~@rsi) { test_statement(0x212C); } elsif ((@r13) >= @r12) { test_statement(0x1E5); } else { test_statement(0x130B); }  for (val = 10; -$ip)0y110;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } elsif (@rdi << $teb >> @rsi >> $ip ^ +@rbx | 0y1010 & @r12 | @rbx & -$ip ^ +0xB ; (0y100) << @r12 | 0x12 >> -@r10 & $thread & @rdx) { test_statement(0x173F);  /* This is a not closed comment  while  (15 < @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n1 >> 22 & 0y1001 | @rdi > 0n1 >> 22 & 0y1001 | @rdi) { test_statement(0x1591);  // /* This is a comment  ;  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 >= @r12) ; }
$error$
$end$
5208
 if (@rsi << +11 << 0y111 >> @r13 >> 0y111 >> @rdx ^ @rsi << 0y10000 & $buffer >> 0y11 ^ 23 >> @r9 = $buffer >> @rbp >> @r8 & $buffer << @rdx >> 0n0 >> 0n2 & +$thread ^ @r10 << @rax >> @rdx >> @r13)  { test_statement(0x1F62);  if (-$proc & @rbp ^ @rdi | @rsi ^ @r8 | @rbp | @rdx < -$proc & @rbp ^ @rdi | @rsi ^ @r8 | @rbp | @rdx)  { test_statement(0x2023); } elsif ($teb @rsp ^ @rax) { test_statement(0x117); } else { test_statement(0xA0F); } } else { test_statement(0x1DC2);  /* This is a not closed comment  break;  for (; $teb <> @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5209
 if (@rbx + -0y110 << @r13 >> ~@r11 << ~@r12 >> @rdi >> 0xE & 0y1100 | ~0xC >> @r9 >> @r13 & $buffer >> @rbx | @rdx & @r11 | @rsi > -@rax)  { test_statement(0x165B);  for (@rax = $buffer & @rsp ^ @rsp | @rax ^ @r9 | $teb | @rax; @rsp & @rdx | $ip | 0x2((@r11 ^ $thread ^ @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x6FD); }
$error$
$end$
5210
 if ($thread & @r8 >> -@r13 >> @rbp & @r10 ^ @r10 >> $buffer | @r11 >> @r13 & $ip >> @r9 ^ @rdx >> 0n5 & @rsi & $thread | @rdx >> @r10 ^ @rdx & @r8 ^ @rdx ^ @r8 | 0y10 & -0n19 | @rbx ^ 0x3 ! @rbx << @rsp >> @r10 << @r13 >> $ip >> @rdx | $teb << @rbp >> @r8 >> @rsi & @r10 & +-@r12 & @r11 ^ +$thread | $thread & 0xA ^ $thread)  { test_statement(0x1485);  while  (@rax ^ @rsp ^ @r10 > $thread & ~@r8 ^ @r12 ^ @r8 | @r11 ^ @rbx | $proc | 0xD)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  This is a not opened comment */ ; } elsif (@r13 << 0y1010 >> @rbp & @rax >> @rbp ^ 0n6)$buffer ^ 0y10 ^ +@r12 & @rsp ^ @rsp) { test_statement(0x1BFE); ; } elsif (@r12 & @r8 | @rdx & @rdx((@r12 & @r8 | @rdx & @rdx) { test_statement(0x879);  /* This is a not closed comment  break; } elsif (@rdi & $proc | 0y1000 ^ $thread | @rbx | @r8 = (0y110) & @r11 ^ $thread ^ @rsi) { test_statement(0x12FA); }
$error$
$end$
5211
 if (@r9 & 0x11 >> ~@rax & 0y10000 >> @rsi & 11 & @rdx ^ @rsp << @r9 & @rsp >> $thread <> ($proc) >> ~0y0 << @rdi >> @r8 >> @rbp ^ 0n5 ^ 0n11 >> @rbx & @r11 | @r9 & 0y1001 ^ @rsp >> $buffer ^ @r9 & 0n14 | @rsi >> 2 ^ 0x11)  { test_statement(0x1924);  // /* This is a comment  } elsif ($buffer >> -$ip >> $thread & 0x3 | $buffer >> @r9 ^ @rsi & 0y1010 > -0xE & ~@rsi >> 0x10 ^ $buffer ^ 0y100 | 4 >> ~+$teb & @r12 & -@r13) { test_statement(0x25D7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp > @rsp) ; } else { test_statement(0xA50);  while  ($proc ^ (@rdi) | @r12 <= $proc ^ (@rdi) | @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5213
 if ($buffer + @rdi << @r12 << ~(@rdx) & 5 << $proc ; @r11 | $teb << @r9 >> @r8 & @rax | @rdx & 0xD & @r12)  { test_statement(0x4D2);  break; } elsif (~@r8 << @r9 >> 0x2 >> @rax | +@rax >> @r8 ^ $ip(-@r8 >> @r10 & @r11 & @rbp | @r10 >> -0n8 & 11 ^ @r13 ^ @r11 ^ @rsi) { test_statement(0x6BB); } elsif (~@rbp & @r11((~@rbp & @r11) { test_statement(0x194F); } elsif ($buffer & @r9 ^ 6))$buffer & @r9 ^ 6) { test_statement(0x1189);  if (@r10 == @r13)  { test_statement(0x1210); } ;  for (; @rsi))@rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (+-$buffer | @r11 | @rax >= (0y100) | -@r9) { test_statement(0x225F);  if (0x12 >< 0x12)  { test_statement(0x7EC); } elsif ($teb >< @rbp) { test_statement(0x1CA4); } } elsif (@rax | @r13 ! @r10) { test_statement(0x18FA);  // /* This is a comment  } else { test_statement(0x845); }
$error$
$end$
5214
 if (@rsp & $buffer >> @r9 ^ (@rdx) << $thread >> 0n8 & @rbp >> @rsi & 0x9 | $thread >> $proc & $teb & $thread & -$buffer(@r9 << $proc << @r9 & $thread ^ +$ip >> @r9 ^ @r11 >> @rbx & @rsi ^ 0n1 & @rbp)  { test_statement(0x203);  while  (0n9 & @r10 | 0xB ^ $thread != @r12 ^ @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; $thread | @r12 != @r9 ^ $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~0y10011 << 1 & -@rax ^ @r9 ^ 0n11 ^ $proc ^ @r8 | $teb >> @r9 | @r11 ^ 0x5 < @r8 >> @rsp ^ @r9 & @r9 & @rbx ^ @rbx) { test_statement(0xBDD);  /* This is a comment */  for (@rax = $thread; $buffer | 0y1000)@r10 | ~-@rbx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = $proc ; } else { test_statement(0x4E5); }
$error$
$end$
5215
 if (0xA + @rsp << @rbp & 15 << @rdi ^ (+@rsi) >> $proc >> @rsi & $thread | @rsi << @r11 >> -0x5 >> ~$buffer & @r8 & 0y1110))@rbx << @rdi & @rsp << @r12 ^ @rdx << 0xB ^ (+10) & @rsp | $buffer >> @rdx >> $thread ^ 21 & $teb)  { test_statement(0xCA5);  while  (@r10 & $buffer | @rdx | +0y1101 | @r10)@r10 & $buffer | @rdx | +0y1101 | @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y101 >> @rsi >> $teb & @r8 >> @r11 ^ @r13 & @rbp | $ip >> @rsi & $teb & $teb ^ (@rdi) ^ @rbp ^ 13 >< 0y101 >> @rsi >> $teb & @r8 >> @r11 ^ @r13 & @rbp | $ip >> @rsi & $teb & $teb ^ (@rdi) ^ @rbp ^ 13) { test_statement(0x7A7); }
$error$
$end$
5216
 if ($thread + $proc << @rbp ^ -$teb >> @r11 >> 22 != $thread + $proc << @rbp ^ -$teb >> @r11 >> 22)  { test_statement(0x220E); } elsif (@rsi << @r13 | @rsi >> $teb & $ip & @rdx > 0n16 & @r8) { test_statement(0xFF9);  // /* This is a comment   while  (0x13 > 0n6)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx ; $buffer) ;  // /* This is a comment   while  (~@rsi(~@rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x25F0); ; val = @rsp | @r11 ; }
$error$
$end$
5217
 if ($thread >> ~$teb & +0y10001 << $thread >> @r11 ; ~1 + @rsi >> +@r9 << (0n8) >> 0n8)  { test_statement(0x4C2); } elsif (@rax >> @r11 >> $thread & (@r12) >> $buffer & @r13 & @rdi ^ $thread & -0y0 ^ @rdi((0n17 << $proc) { test_statement(0x14D3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (-$ip) | 0n2 = @rbp) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~@r12 | @rdi)14) ; } elsif (@rsi >> ($teb) & @rbp))@r12 >> -@rbx | +@r10 & @r13 | -$thread ^ @rbp | 0y10000 | @rbp) { test_statement(0x6DE); } elsif (0n19 & $proc))@r11 | @rbx) { test_statement(0x1D2A); } elsif ((@r8) ^ @r12((@rdx | 0n7) { test_statement(0xE0B); }
$error$
$end$
5218
 if (0y1 + $thread >> @rdx << 21 >> @r11 >> @rdi | @r10 & $buffer | @rdx & @rsi & @r12 != @rdi ^ 0n3 ^ @rbp & $teb)  { test_statement(0xAF6); } elsif (@rax >> @r11 & -$teb ^ @rdx != $proc << 0y10010 & ~@r9) { test_statement(0x1148); } else { test_statement(0x493);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (@rsp) ^ @rsp > @r13 ^ $buffer | ($ip) | $thread) ; }
$error$
$end$
5219
 if (~@r12 + @rsp << (0xA) >< @r10 >> @r12 << @rdx >> -$thread >> @rbp ^ $buffer << @r9 >> $ip >> @rax)  { test_statement(0x1834); ; } else { test_statement(0xD86); }
$error$
$end$
5220
 if (~$ip << @rbp >> $proc == ~$ip << @rbp >> $proc)  { test_statement(0x2062);  while  (@r13 & @rbp < @rdx & 21 ^ $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
5221
 if (@r12 >> 0x1 << @rdi ^ @rbp >> @r9 >> @rbx & 0y1110 & 6 & $ip = $ip >> $buffer << @r12 >> @rbp ^ @rdi & @rsi & 3)  { test_statement(0x1EF0); } else { test_statement(0xD03); }
$error$
$end$
5222
 if (@rdi + @rax << --@r11 << 0y1001 >> $thread >> @rdx & $teb << ~0y10 & $teb >> +~$teb & ~~@r10 & @r12 ^ $thread & 0n12 | 0 >> @rax & @r8 ^ @r8 & @rsi | @r12 > @r11 + @rbx << -0 >> $ip << @r13 >> 0x2 >> @rdx | $teb >> 0xF ^ @rbp & @rbx ^ @r13 & $ip | 0x8 >> $teb & @rdx | @r8 | 0n0 ^ @rbx | @r9)  { test_statement(0x9B5);  for (val = 10; 0xE & @rbp > 0xD & @rsi | $thread | @rax;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @rsi & @r12 ^ @rax ^ -$buffer ; } elsif (@rsp << 0x10 >> @rbp >= @rsp << 0x10 >> @rbp) { test_statement(0x1882); }
$error$
$end$
5223
 if (+@r9 + @rbp << ~(@r11) << $thread >> +@r11 >> @r13 >> @r9 ^ @r13 << ($proc) >> @rdx >> $teb | 0y10001 >> @r11 >> 0y101 & @r8 >< ~0n2 << $proc >> @r9 << @rdx >> @r9 & +@rsi << @rdx & $ip)  { test_statement(0x160B); } else { test_statement(0x4D6);  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
5224
 if (0n1 + @r9 << $teb >> @rsi ^ 4 << @r12 ^ $thread <= 0n1 + @r9 << $teb >> @rsi ^ 4 << @r12 ^ $thread)  { test_statement(0x1769); } elsif (0y10010 >> @r11 >> @r11 & 0n14 ^ $buffer & ~7 & @rbx))(@r11) << @r10 & @rbx & @rax & @r11 ^ +@r10 >> @rbp & @r11 & $buffer | @rax | @r12 ^ (@rbp) ^ -@r13 | @r11 ^ $thread) { test_statement(0x1199); } elsif (-@r13 >> @rax & +0n16 <> (@rdx) >> @r12 | (0y1001) ^ ($thread) | $buffer | 0n7 | $thread) { test_statement(0xCD9);  This is a not opened comment */  break; } elsif (0x0 & @rdi | @rbx ^ $teb <= -@r9 ^ @r10 | @r11 ^ @rbx) { test_statement(0x5FA); } elsif (@rsp | @r10 | ~@rdx ; @rax ^ @rbx | $ip | @r10) { test_statement(0x24E4); } elsif (@r12 | @r13 == -@r12 | $buffer) { test_statement(0x179D); @rax = $ip ;  /* This is a comment */  for (; @rsp))@rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x12 >< @rax) { test_statement(0xB53); val = @rdx ; ; } else { test_statement(0xE66); }
$error$
$end$
5225
 if ($ip ^ $ip << @r10 & $ip >> @r12 & @rsp ^ @r8 ^ @r12 | ++@rax << 3 >> @r11 >> ($ip) ^ $teb & @rsp & @r10 | +$teb & $proc ^ 0x6 ^ $buffer | (@r10) | -@r9 ^ @r9(@rbp + @r8 & @rdi >> $thread ^ @r13 << @rdi >> @r10 & @rsi >> +$buffer & @r12)  { test_statement(0x150B); ; } else { test_statement(0x226); }
$error$
$end$
5226
 if (@r12 << @rsp << @rsi >> 0y10000 >> @r10 >> @r12 & @rdi << $ip ^ 0y0 << @r11 >> @r9 & @rdi >> @rsp ^ @r13 & 0n6 & $ip = ~0x12 << @r12 ^ ~@r13 >> @rsp)  { test_statement(0x265B);  for (val = 10; 3 & -@r13 ^ @rbx ^ (~@rsp)))3 & -@r13 ^ @rbx ^ (~@rsp);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } else { test_statement(0x2314); @rax = 0n12 & $thread | @rsi ;  This is a not opened comment */ }
$error$
$end$
5227
 if ($teb + $thread == @rdi >> @rdi >> @r11 & $thread << -@rax | $teb << 2 ^ @r12 >> +@r8 & (@rax) & @rdx)  { test_statement(0x1895);  /* This is a not closed comment } elsif (@r13 << $teb & $thread >> 0y1010 & @r8 = @rsp << @rsp | 0x2 >> (12) & @r10 & -0n19 ^ $thread ^ @r11) { test_statement(0x3A); } elsif (@rsi >> ~0x11 & @r12 & @r10 != ((@rdi)) & @rax | @rsp | $teb ^ $proc | @rdi | $ip) { test_statement(0x25C8);  break;  /* This is a not closed comment } elsif (@r8 & @rsi ^ +@r8 ^ 0x10 | @rbp <> @rsp & $ip ^ $proc ^ ~@rdx) { test_statement(0x1635);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 17 ! $thread) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax > @rax) ;  while  (0x4 != 4)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (-@rax | 2 = @r10 | @r11 | 0n16) { test_statement(0x20B); } else { test_statement(0x1AA8);  /* This is a comment */ }
$error$
$end$
5228
 if (0n12 >> -$teb ^ 7 >> @rbp >> @r11 ; @r11 << @r10 << $ip >> @rdi << @r12 >> $thread & 0y1101 << @rbx >> @r12 & (@rsp) >> @rbx | 0n16 >> @r12 & @rsi)  { test_statement(0x1841); }
$error$
$end$
5229
 if ($ip >> @r13 >> +0xB & @r13 << @rax >> @r9 >> @rdi & ~@r13 & 3 & 0n17 | @r8 << $buffer ^ @rax & @rax & 14 | @r11 | $buffer @r9 & 0y10010 >> @r8 ^ @rbx >> @rsp & 0n8 >> ~15 & @rdi ^ @r10 >> @rsi & @r13 & @rsp ^ @rax ^ $thread ^ -@r10)  { test_statement(0x197A); } elsif (@r13 << @r8 & @r12 >> @rdi & @rbx ^ -~@r8 ^ @rax & 0x4 | 0x3 >> +@rax ^ (@rsp) & $thread ^ 0xF ^ @r10 | 0y10010 | $buffer | @rsp | +$buffer ! @r13 << @r8 & @r12 >> @rdi & @rbx ^ -~@r8 ^ @rax & 0x4 | 0x3 >> +@rax ^ (@rsp) & $thread ^ 0xF ^ @r10 | 0y10010 | $buffer | @rsp | +$buffer) { test_statement(0x2527);  for (; @rax ^ 0x1 ; @rax ^ 0x1;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  break;  // /* This is a comment  } else { test_statement(0x46E);  while  (+0n16)22)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5230
 if (@rax << @r12 >> $ip << @r12 >> @r10 >> @r12 != @rdx + -@rbp >> (-12) >> 0n3 >> $teb & 0x8 << @rax >> @rsp >> @rsp | 0y1010 >> 0x2 >> 0x12 & $thread >> ~$thread & @r11 & @rbp)  { test_statement(0x156D); } else { test_statement(0x1661);  for (val = 10; @rbp ^ @r13((@rbp ^ @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5231
 if (+@r12 & ~@r9 << @rbx >> @r13 >> @rbx ^ @rsp ^ $ip >> (0y10000) & 2 ^ @r9 & $buffer <= ~@rax + @r9 >> +@rax << @rax >> @r12 >> @r12)  { test_statement(0x18A8); } else { test_statement(0x10); }
$error$
$end$
5232
 if ($ip + @rbp << $teb >> @r10 >> -$teb >> +@r11 & (@rsp) & @rbp >> @rbx & 0y1001 & @rsp ^ @rsi << (@r12) & 0y10011 >> ~@rdi & @r12 & 21 | -@rdx >> 5 >> @r8 ^ @rax & $buffer & -0x10 >< @r13)  { test_statement(0xF4E);  if (5 & 14 == -0y1000 & $ip | ~@rbx ^ @rbp)  { test_statement(0x94F); } elsif ($proc = 0xC | @rdx) { test_statement(0x9ED); } elsif (0n5 = (@rsi)) { test_statement(0x24A8); } elsif (0n11 = $ip) { test_statement(0x26DA); }  // /* This is a comment   for (val = 10; 21 | @r11 >< 21 | @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  while  (@r13 = 21)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif (@r12 << +@r10 & @rdi >> +@r10 & @rbp & 11 ^ @r9 ^ @r13 ^ @rbx ^ ~$thread ! @r12 << +@r10 & @rdi >> +@r10 & @rbp & 11 ^ @r9 ^ @r13 ^ @rbx ^ ~$thread) { test_statement(0x66); }
$error$
$end$
5233
 if (-@rdx + @r10 << (+6) << --+23 >> @r11 << 0y1001 >> +0xD >> ($buffer) | -0y1000 >> (@rdi) >> @r13 < -@rdx + @r10 << (+6) << --+23 >> @r11 << 0y1001 >> +0xD >> ($buffer) | -0y1000 >> (@rdi) >> @r13)  { test_statement(0x20A4); }
$error$
$end$
5234
 if (@rsp << +$thread >> @r8 >> $buffer >> $buffer & $ip & @rbp >> @r13 ^ $proc ^ ~@rdx & @rdi & @r11 ^ @rbx & 0y101 | @r9 ^ 22 >= @rsp << +$thread >> @r8 >> $buffer >> $buffer & $ip & @rbp >> @r13 ^ $proc ^ ~@rdx & @rdi & @r11 ^ @rbx & 0y101 | @r9 ^ 22)  { test_statement(0xB7A);  /* This is a not closed comment } else { test_statement(0xA9E); }
$error$
$end$
5235
 if (@rsi << 14 >> @r11 << $proc >> $buffer >> @rax & $proc | @rsp >> $thread ^ -@r10 >= +23 >> $buffer << 17 >> $buffer)  { test_statement(0x1CE7);  break; @rax = @rax & $thread ;  // /* This is a comment  }
$error$
$end$
5236
 if ($proc + @r10 << $teb >> @r8 << ~@rdi ^ 0n8 << $buffer & +$teb >> 0n5 & 0n15 | 0y110 & $proc ^ @rax & ($proc) & 0y10010))0x12 << @r12 << 12 | $ip >> $proc >> 0x3 & 0n1 >> $ip | ~@rbx & $proc & 0n1)  { test_statement(0x2DA); }
$error$
$end$
5237
 if (0xC + @rax << @rsp << 1 ^ @rbp & @r8 & @r10 & @r8 | @rdx << @rbx > @r8 << $teb << 23 ^ $teb << @r11 >> +$proc >> @r13 | $teb << @r11 ^ -@r12 >> $teb & @r9 & @rax)  { test_statement(0x247); } elsif (@rsp << @rbp | @rax >> @rbp((@rsp << @rbp | @rax >> @rbp) { test_statement(0x12A8); } elsif (($teb) & @r12 & 0x5 | -@rbx | 0n2 <> 0y1011 & 0n0) { test_statement(0x2288);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 | $ip <= @rdx) ;  /* This is a comment */ val = @r11 ; }
$error$
$end$
5238
 if ($teb + @rbx ^ 0n13 >> @rdi >> $proc | $buffer >> +@rbx >> @rdi | @r9 >> $ip = $teb + @rbx ^ 0n13 >> @rdi >> $proc | $buffer >> +@rbx >> @rdi | @r9 >> $ip)  { test_statement(0x8C9); } else { test_statement(0x2219); }
$error$
$end$
5239
 if ($teb << ~$thread << $teb | 0n10 << $proc ^ 0n7 ^ @rsp & @rbp ^ @r12 ^ @r13 > $teb << ~$thread << $teb | 0n10 << $proc ^ 0n7 ^ @rsp & @rbp ^ @r12 ^ @r13)  { test_statement(0x126A);  for (val = 10; @r8 ^ @rax ^ (+20) | @r9 ^ 0n9 | @r8 | 0y1111 >< 0x9 & $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; ~@rdi ^ @rbp | @r12 | +-@rsi >< +0n4 ^ @rdi | @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  for (val = 10; ~@r10 == @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
5240
 if (0y1001 + @r12 ^ @r9 << ~@rsp & @rax <= 0y1001 + @r12 ^ @r9 << ~@rsp & @rax)  { test_statement(0x252F); } elsif (@rdx << $thread ^ +@rax & ($teb) & @rsp | $proc >> @rdx | @rbx & @rdx | @rbx | @r12(~@r11 << $thread >> 0y100 >> 0n3 & @r10 & $teb & -@rbx) { test_statement(0xB66);  // /* This is a comment   while  (12 != 12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (@rbp >= @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ @rax = @rax ; } else { test_statement(0x21E);  for (@rax = 0y10010 | @rax; 0y101 0y101;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  break; }
$error$
$end$
5241
 if (@r11 << 21 << 3 ^ $buffer << @r9 ^ @rdi >> @rdx & @rbx ^ $ip & @rbx | 0y110 << @rsp >> @r12 >> 0x8 ^ @rbx >> ~$ip ^ 0n12 ^ @rax != @r9 & ~@r9 << @rdi >> 16 >> @rsi & -11 | @r13 >> +@rsi >> @rdx & 0n5 >> @rdx & @r9)  { test_statement(0xFA5); } elsif (@r11 << @r11 & $buffer ^ @rsp >> @rbx ^ ($proc) & @r10 | @rdi >> @rsp & ~-@rsi <> @r11 << @r11 & $buffer ^ @rsp >> @rbx ^ ($proc) & @r10 | @rdi >> @rsp & ~-@rsi) { test_statement(0xD21); } else { test_statement(0x254B); }
$error$
$end$
5242
 if ($thread + @r10 >> $teb ^ 0x1 >> 12 >> @rdi | +$teb ^ $buffer ^ $ip == $buffer + @r9 << 7 << $buffer >> 0x1 >> 15 | @rsi & @rbx & 0n10 & @rax ^ @r9 & @rsp & @r10 ^ @r12 | +$thread >> @rbx & $thread & @rsi | @rdx)  { test_statement(0x17C3);  break;  /* This is a not closed comment } elsif ((@r10) << @r13 ^ $ip | @r10 & @rdx | $buffer ^ @rsp))@rsi >> @r13 | @rbp >> @rbx & @rax | @rax ^ $ip ^ @rdi | $ip | 23 | $thread) { test_statement(0x1215);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer ^ @rbx ! (@r10) ^ $thread | (+@r12)) ;  while  (@rdx ! $proc | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @rax | @rsi ;  // /* This is a comment  } elsif (@rsp ^ @r13))0n6 >> $ip & @r12 ^ @rsi & 0y1001 ^ @rbx ^ $ip | @rbx) { test_statement(0x668);  if (@rsi > @rsi)  { test_statement(0xDED); } } elsif (@r10 & @rdx ^ 0xC ^ $buffer | @rax)@r10 & @rdx ^ 0xC ^ $buffer | @rax) { test_statement(0x21A1); } else { test_statement(0x1905);  /* This is a comment */  // /* This is a comment   /* This is a comment */  /* This is a not closed comment }
$error$
$end$
5243
 if ($teb + @rsi >> @rdi << 0 >> @r9 >> @r9($teb + @rsi >> @rdi << 0 >> @r9 >> @r9)  { test_statement(0xFAC);  // /* This is a comment  ; } elsif (@rax << @r12 >> @rsp >> 21 & @r10 >> @r12 & @rdi ^ $thread ^ $thread ^ @rax ^ @r9 | $teb & $buffer)@rax << @r12 >> @rsp >> 21 & @r10 >> @r12 & @rdi ^ $thread ^ $thread ^ @rax ^ @r9 | $teb & $buffer) { test_statement(0x216E);  This is a not opened comment */ } elsif (@rdx & @rbp & @rdx ^ $proc ^ @rax ^ -@r8 | @r11 ^ $thread >= @rax & $buffer) { test_statement(0x1A86); } elsif (@r8 & $buffer | ~@r13 = @rsp) { test_statement(0x1900); } else { test_statement(0x1CF2); }
$error$
$end$
5244
 if (@rdx << $ip << @rbx & @rbx & $thread >> @r12 >< $teb + -@rbp << @rsi >> @rax | @rbx | @rsp | @rdx & @rbx ^ (@rsp) | $buffer | @r13 | @r10)  { test_statement(0xAB0); } else { test_statement(0x176); }
$error$
$end$
5245
 if (@rbx >> @r8 << @rax >> @r13 ^ @rbp << @r13 & $thread >> 2 & @rax & @rdx ^ $buffer & 0n16 ^ 0x13 & +$teb ^ 0xE | @rax << @rbp | $buffer >> $ip ^ @r9 & @r10 | 0n2 | $ip | (@rsp) | $ip ! @r13)  { test_statement(0xFE3);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer & 0xA ^ (0n19) <= @rsp & ~$teb) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~$proc ^ (0y10010)(@r10) ;  /* This is a comment */  /* This is a not closed comment } else { test_statement(0x489);  while  (17 | 0y1))$thread ^ $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5246
 if (-@rdi + @rdi << @rbp << $buffer & @r8 >> (+@r11) & @rdx & @rbp & @r10 ^ (-@rdi) << $buffer >> @r13 & $buffer & @rbp & $ip | @rsp << +$teb & @rsp >> @r9 & @r13 >< -@rdi + @rdi << @rbp << $buffer & @r8 >> (+@r11) & @rdx & @rbp & @r10 ^ (-@rdi) << $buffer >> @r13 & $buffer & @rbp & $ip | @rsp << +$teb & @rsp >> @r9 & @r13)  { test_statement(0xC19);  if (@r9 & $buffer ^ $proc ^ @r9 == @r9 & $buffer ^ $proc ^ @r9)  { test_statement(0x1970); } elsif (-@rbp | @r13 <= -@rbp | @r13) { test_statement(0x23FC); } else { test_statement(0x1B4B); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ^ @r9 | @r10 | @rsi))@rsp ^ @r9 | @r10 | @rsi) ; @rax = @rbx ^ @rax | @rbp ;  This is a not opened comment */  break; } elsif (($ip) >> (@rdi) >> $teb & @r10 & 0x9 & @r10 | +5 >> @r12 & $ip & @r13 | 0xB & @rdi($teb << @rsp >> $teb & 0xD >> @rdx & @rax) { test_statement(0x4AA); } elsif (~@rdi >> 12 & @rsp ^ ~@rax & -@r11 ^ @rdx ^ $proc != $buffer & @rbp ^ @r13 ^ @rbx ^ @rdx) { test_statement(0x118B);  /* This is a comment */  // /* This is a comment  } elsif (0n10 != $ip & @r9 ^ $proc ^ 0x5 | @r9 ^ 0x3 | 16) { test_statement(0x1E43);  while  (11(($proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  ((@r8) ! @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; @rsp >= @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 ^ 0x4(@r12) { test_statement(0x1CFC); } elsif (@rax | @r12)@rdx | $teb) { test_statement(0x195); } else { test_statement(0x2599); ; }
$error$
$end$
5247
 if (-21 << @rax & $thread << @rbp & @rbx ^ -@r9 << $buffer >> 0n7 ^ @r8 >> 0n12 ^ $proc & 0xD ^ -+0y1001 -21 << @rax & $thread << @rbp & @rbx ^ -@r9 << $buffer >> 0n7 ^ @r8 >> 0n12 ^ $proc & 0xD ^ -+0y1001)  { test_statement(0x16A2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbp | @rdi | @r9 | @rsp >= 0n13 & 0y1011) ;  for (@rax = $teb ^ $thread | @rdx | $teb; @rsp ^ @rbx < @rsp ^ @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5248
 if (@rdi + @rbp << @r12 & @r10 >> @rax >> @r10 & @r8 >> @r8(@rdi + @rbp << @r12 & @r10 >> @rax >> @r10 & @r8 >> @r8)  { test_statement(0x26C9);  /* This is a not closed comment } elsif ($teb >> @r13 & @r12 & $teb | 20 | $proc ^ @rbp ^ $teb | -$teb ^ @r10 | @r8 | 11 <> @rbx ^ 0x7 >> (@r12) & @rsi & @rsi ^ @rdi & @r12) { test_statement(0x3E8);  for (val = 10; ~+@r13 | $proc | $ip(@rbx | @r12 | @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n17 ^ @rsp & $teb != 15 >> 0xD) { test_statement(0x106A); }
$error$
$end$
5249
 if (@rsp << 0y1001 >> -@r8 << (0n14) >> @r13 >> @rdi >< $teb + @rsi << $ip & @rdx << -21 >> @rdi & @rsi >> @r12 ^ @r10 >> @rax & @r13 ^ $teb >> @rbx & @r13)  { test_statement(0x22D9);  while  (@rsp | -$teb ^ @r9 | 0y0 <= @rsp | -$teb ^ @r9 | 0y0)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r8 >> 0xF ^ $proc >> 0n9 & 0x0 & $proc ^ @rbp & 0y1100 < @r8 >> 0xF ^ $proc >> 0n9 & 0x0 & $proc ^ @rbp & 0y1100) { test_statement(0x1495); } elsif ($thread & $thread >< $thread & $thread) { test_statement(0xF8C); } elsif (0y1001 & @r12 ^ +-@rbx | +0n17 | @rsp | $buffer >< 0y1001 & @r12 ^ +-@rbx | +0n17 | @rsp | $buffer) { test_statement(0x1A76); } elsif (@r8 != @r8) { test_statement(0x219); } elsif ($proc | @rbx ! @r11) { test_statement(0x47D);  /* This is a not closed comment  /* This is a not closed comment } elsif (@r12 > @r12) { test_statement(0x65A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip < $ip) ;  // /* This is a comment  } elsif (@rsp @rsp) { test_statement(0x166A); }
$error$
$end$
5250
 if ((@r11) + $teb << @rsp << 0n14 & 0n0 << 1 >> ~0y1100 | ++--@rsp << @r13 >> @r9 >> $teb | @rbx & @rax))(@r11) + $teb << @rsp << 0n14 & 0n0 << 1 >> ~0y1100 | ++--@rsp << @r13 >> @r9 >> $teb | @rbx & @rax)  { test_statement(0x1AF7); } else { test_statement(0x22B0); ; }
$error$
$end$
5251
 if ($thread >> $thread << @r12 >> 0y1010 & @r8 << 12 >> $teb >> -@r8 & $teb & $thread | 6 << @r12 & @r9 >> @rbp ^ @rax | 0y1111 ^ -$teb & $buffer ^ @r13 ^ @r8 = $thread >> $thread << @r12 >> 0y1010 & @r8 << 12 >> $teb >> -@r8 & $teb & $thread | 6 << @r12 & @r9 >> @rbp ^ @rax | 0y1111 ^ -$teb & $buffer ^ @r13 ^ @r8)  { test_statement(0x5C6); } elsif (@r10 << 2 & @rdx | --@r9 & $proc & $teb ^ $ip & (0n19)))@r10 << 2 & @rdx | --@r9 & $proc & $teb ^ $ip & (0n19)) { test_statement(0x26C5); } else { test_statement(0x26DC); }
$error$
$end$
5252
 if (@rax & @rbp >> @r13 | @r9 << @rsi >> 0y10011 < @rax & @rbp >> @r13 | @r9 << @rsi >> 0y10011)  { test_statement(0x257F);  // /* This is a comment  } elsif (@r13 << @rsi | ~@r11 >> 15 ^ $thread = @r8 | @rbx ^ @r8 & 7 | $buffer | @r13 ^ @r11) { test_statement(0x751); } elsif ($buffer >> @rsp ^ @r10))$buffer >> @rsp ^ @r10) { test_statement(0x13B7);  // /* This is a comment   for (val = 0x12; @r12)~4;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0xD & +0y10 ^ $proc @r10 ^ 16 | @rsi ^ @rax | ($proc)) { test_statement(0x12F2);  This is a not opened comment */  /* This is a not closed comment ; } elsif (@r10 ! $proc | @r13 | @r12) { test_statement(0x1F9);  // /* This is a comment   for (; $teb ! $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb ; @r11 | $proc) { test_statement(0xF14); } elsif (@r10 <> 0y1000) { test_statement(0xA3F); } else { test_statement(0x407); }
$error$
$end$
5253
 if (17 << 0n15 << @r8 & +-@rbp << @r13 & @rdi & @r8 ^ @rdi << @r13 & @r8 ^ @r8 & @rbp ^ @r10 ^ -0x12 ^ 0y10 | @rsi & 0xA ^ @rsi & 1 & @r9 | (@r8) >> @r12 > 15 & 0n2 >> @r9 >> @r13 & $teb >> 0n18)  { test_statement(0x14DA);  break;  if (~@rbp ^ @rdi >= $proc ^ 0x10)  { test_statement(0x1401); } elsif (@rsp))@rsp) { test_statement(0x9D5); } elsif (($buffer) ; ($buffer)) { test_statement(0x1834); } elsif (((0n1)) >< 10) { test_statement(0x8B1); } elsif (14((@r11) { test_statement(0x1427); } else { test_statement(0x5B4); }  /* This is a not closed comment }
$error$
$end$
5254
 if (@r12 << 23 << @rdi & @r10 >> @rsi & @rdi & @r10 <> 0n18 & $proc & @r12 >> @r12 & ~$buffer & @rdi)  { test_statement(0x204B);  break; } elsif (@r9 << @rax >> $teb & 0 ^ @rbx | @rbp >> @r8 & +~16 ^ +$proc & 0n14 | -@r13 & 20 ^ $buffer | @r8 ^ $ip(@rsp << @r9 | @r9 & $buffer & @rbx ^ 0x7 & @r10 ^ 0x10 ^ @r13) { test_statement(0x2F2); } else { test_statement(0x2589); ;  /* This is a comment */  for (val = 10; @rdi = @rax;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5255
 if (@r8 + ~0y1011 >> @r9 ^ @rbp | @r9 >> @r12 & ~@r12 & @rbp ^ @rdi >> $buffer & +$ip & @r13 ^ @r12 & +@r12 <= @r8 << @r8 ^ @r10 | @rbp << $teb)  { test_statement(0x4A4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 & -@rsp | @r12 ^ (@r9) >< @rax | 0y111) ; } elsif (0n16 << @rdx >> @r10 >> @rsp & @r11 >> $teb & @rbx & ~$buffer ^ +0n15 >> @rbp & +0n16 ^ $teb | $proc >> $thread ^ +@r10 & @r8 ^ -+0n14 ! 0n16 << @rdx >> @r10 >> @rsp & @r11 >> $teb & @rbx & ~$buffer ^ +0n15 >> @rbp & +0n16 ^ $teb | $proc >> $thread ^ +@r10 & @r8 ^ -+0n14) { test_statement(0x919);  /* This is a comment */ }
$error$
$end$
5256
 if ((-@r11) & $teb << @rsi >> @r13 & 0n17 | +@rdi << @rdx >> $teb & ~+3 & $ip & @r8 < @rax << $ip & $buffer << @rsp >> @rdx ^ @r8 ^ @r12 ^ @rsp & 21 ^ ~@rdi ^ @r9)  { test_statement(0x1D60);  for (val = 10; 0x2 & $buffer ^ @rsp | @rdx ^ -@r9 >= ~1 & 21;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($teb | @r9 >> @rbx | @rsp ^ @rdi ^ $proc | @rbp >< @r11 << @r13 >> @r13 >> @r9 & 0x10 ^ @r8 >> (@rsp) ^ 0xE) { test_statement(0x57B); }
$error$
$end$
5257
 if (@rdi << 0n9 >> @rdi << (@rbp) >> +@r13 >> @rdi | @rsp << @r11 | ~@rdx >> @rbp & --@rbp | @rdx)@rdx + @rsp >> ~@rax << @rax >> @rdx | @rdx >> 0x0 >> @r10 | @rsp ^ @r13 & $buffer)  { test_statement(0x6E6);  /* This is a not closed comment } else { test_statement(0x24F7);  /* This is a comment */ }
$error$
$end$
5258
 if (@rax << @rbx >< @rax << @rbx)  { test_statement(0xE5C); } else { test_statement(0x6BA);  /* This is a comment */ }
$error$
$end$
5259
 if (@r11 << $teb >> 0n13 >> @rdi ! $thread & 11 << @rax & @rax >> @r8)  { test_statement(0x22C8); ; ; }
$error$
$end$
5261
 if (+$ip ^ @r10 << @rdx | -@rsi << ~$thread >> @r8 >> @rsi ^ @rdi >> @rsi & 0n18 & $thread ^ @rbp & $ip >= (@r10) + @r11 | $thread << 0n3 >> $proc >> @r12 ^ 0n8 >> @rsi ^ @r9 & @r12 ^ 13 | @r8)  { test_statement(0x1ACF); }
$error$
$end$
5262
 if (0y1 + -$buffer << $thread >> @r11 >> $teb >> @rbx & (+@r13) & $teb >> ~0xF & $teb & $thread ^ @rsp << $buffer >< 0y1 + -$buffer << $thread >> @r11 >> $teb >> @rbx & (+@r13) & $teb >> ~0xF & $teb & $thread ^ @rsp << $buffer)  { test_statement(0xFF6); } elsif (@rax & @rdi >> -$teb & $teb ^ +$proc >> @rbp ^ -@r8 & ~@r11 | $buffer >> @rax ^ $ip & @r12 ^ -+@r11 != @rax & @rdi >> -$teb & $teb ^ +$proc >> @rbp ^ -@r8 & ~@r11 | $buffer >> @rax ^ $ip & @r12 ^ -+@r11) { test_statement(0x1C63); ; } elsif ($buffer | @rbp)@r13 >> $proc & $thread & @r9 ^ @rsp & $proc ^ @r11 | @r9) { test_statement(0x1A2E);  /* This is a comment */ }
$error$
$end$
5263
 if ($ip << @r10 >> 0n14 >> -@r9 & 0x1 & $proc <= $teb + @r10 >> 0x6 << 0n14 >> $buffer | @rdx >> $teb | @r13 >> @rbx & $buffer | 0y0 & +($proc) ^ $buffer)  { test_statement(0x908); } elsif ($ip & @r10 & @rdx & $proc ^ @rbx >> @r12 & @r12 & @rsp ^ 10 ^ 14 ^ @r11 < ~-20 << +0x9 >> $ip >> $buffer & @rbp | @rdx >> @rax & 12 & @rbp) { test_statement(0xFEE); } elsif ($proc & @rsi & 12 ^ $ip & $thread ^ ~0n16 >= @rdi ^ @r9 & $thread ^ 0y1100 | @rsi ^ ~@r9) { test_statement(0x3F1);  for (; @rsi | -@rsp > $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x8EC);  if (-$teb(@rbx | @r11 | @rsp)  { test_statement(0x2223); }  // /* This is a comment   while  (1 != 1)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 <> $ip) ;  break; }
$error$
$end$
5264
 if (~@r10 >> $buffer >> $buffer >> $proc & $ip << @r9 & @r10 >> @rax ^ @r13 | @rsp | 0x1 & @rbp ^ $thread & $buffer ^ @rdi ^ @rbp | @rsi | @r10 ^ 0n11 <= 0xB << 0n9 ^ +@rdx << 0n5 & $thread & @rbp & 0x8 ^ @rdx)  { test_statement(0x93B);  // /* This is a comment  } elsif ($buffer & @rdi >> @rbx & $buffer ^ 0y10 >> @r12 | @rsi & @r13 & @rbx | 0xB & @rbx ^ @r9 ^ @r9 ! $buffer & @rdi >> @rbx & $buffer ^ 0y10 >> @r12 | @rsi & @r13 & @rbx | 0xB & @rbx ^ @r9 ^ @r9) { test_statement(0xEFB); } else { test_statement(0x1A9F);  This is a not opened comment */  /* This is a comment */ }
$error$
$end$
5265
 if (0n15 + 0n10 & @rdx & 12 | $teb << (@rbp) & $buffer ^ (@rdx) >> @rax ^ @rax < -@rax & ~(@rdx) << @rbx & $teb >> 0y110 & $proc | @r13 >> @r10 >> @rsi)  { test_statement(0x160E);  /* This is a comment */ } elsif (0y100 << ~@r13 | @rdi >> @r8 & -(@rsi) ^ $buffer = 0y100 << ~@r13 | @rdi >> @r8 & -(@rsi) ^ $buffer) { test_statement(0xF6A);  if ($buffer($buffer)  { test_statement(0x26FF); } elsif ($teb | @rsi((@r10 | @r12) { test_statement(0x20F8); } elsif (@r8)@r8) { test_statement(0x1EDB); } else { test_statement(0x19DC); } } else { test_statement(0xF59); }
$error$
$end$
5266
 if (@rsp + @r9 << @r12 << -@rbp ^ 0n1 << @r12 >> $teb >> +@r8 ^ @r9 & @r12 ^ @r13 ^ @rsi <> $proc)  { test_statement(0x1E8A); } elsif ($teb << @rbp ^ (@r9) ^ $ip ^ @r11 ^ $thread = @r10 << -@r8 >> 3 >> $teb | @r11 ^ @rbx ^ @rdi ^ ~+@r12 | 0n1 & $buffer) { test_statement(0x1265); val = 0y10 & 0n6 ^ $thread | 10 ^ $proc | @rbp ;  while  ($teb | @r11(~@r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $proc((0y1100) ; } elsif (-@r12 >> @rbp & $buffer ^ +@rdx = -@r12 >> @rbp & $buffer ^ +@rdx) { test_statement(0x24DB);  /* This is a not closed comment  /* This is a not closed comment  break; } elsif (+@rdi ^ 21 ^ $teb != +@rdi ^ 21 ^ $teb) { test_statement(0xE4A); @rax = $proc ;  if (@r9(@r9)  { test_statement(0x8AB); } } elsif (@rbx > 13 | @r13 | @r13) { test_statement(0x15BB); }
$error$
$end$
5267
 if (0y11 + @rdx ^ 10 << @r10 >> @r9 & @r10 0y11 + @rdx ^ 10 << @r10 >> @r9 & @r10)  { test_statement(0x2533); } else { test_statement(0x1C1A); }
$error$
$end$
5268
 if (20 << $thread >> $buffer >> @rsp >> @rax = 20 << $thread >> $buffer >> @rsp >> @rax)  { test_statement(0x1F6E);  /* This is a not closed comment }
$error$
$end$
5269
 if ($buffer + 0n2 | ($teb) << -$ip >> @rbx & @rdx >= $buffer + 0n2 | ($teb) << -$ip >> @rbx & @rdx)  { test_statement(0x890); }
$error$
$end$
5270
 if (0n2 + ~2 << @rbx << @r8 >> @rdi << @rbx >> @r12 >> ~$teb & ~$proc << @r10 >> $proc >> 17 | +11 << @rdi >> $teb >> 0y1 & 20 | @rbp & @rsi == @r10 << @rdx & 0n15 << @r8 & @rsp & @rbp & -@r9 ^ 0n7 << $buffer >> @rdi)  { test_statement(0x1E10);  for (; ~~@rbx & @r9 ^ @r13 | @rdi ^ @r9 | @rdx == ~~@rbx & @r9 ^ @r13 | @rdi ^ @r9 | @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif (@r8 ^ @r8 >> @r9 & ++~0x4 ^ @r9 ^ $teb | @rdx >> @r8 & 0n14 ^ $proc | 0y1100 ^ @r10 | $buffer ^ @rsi | @rax > @rbx & ~@rbp & $buffer ^ $proc ^ $proc & $thread ^ @rax | @r8 | $thread & +$proc) { test_statement(0x1D3D); } elsif (@r8 & @r9 ^ ~$ip | @rdi ^ @r11 ^ @r13(+0xC | @rsp) { test_statement(0x107E);  break; }
$error$
$end$
5271
 if ($proc + 5 >> @rax << $proc & @rsp >> @r10 ^ @rdi & @rbx & @r10 ^ @rbx <= @r13 + @rbp & $teb >> $teb >> 0n11 & 0y111 ^ 11 << @r9 & @rbx & -@r8 & 13 ^ 0n8 >> 0x1 & @rsp | @r10 << @rsp | -$ip & @r8 & @r9 | $teb ^ @r13)  { test_statement(0x24E5);  break;  /* This is a not closed comment  /* This is a not closed comment  if (@rdx > @rdi)  { test_statement(0xF5E); } elsif (~5((~5) { test_statement(0x256F); } elsif ($proc = (@rax)) { test_statement(0x1153); } else { test_statement(0x11B); }  while  (@rdi != @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1204);  for (val = 10; @r13(@r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5272
 if ($ip << $proc >> @r12 >> +$teb & @rbx & 0y1 >> @r8 ^ @rdi & ~@rdx | @rdx >> 0x8 | @r8 >> @r13 & @r8 & 0y1100 ^ $thread & $ip ^ @rax))$buffer & @rdi << @r8 >> @rdi >> @rax ^ +$proc << $ip ^ $proc >> (@r11) & @rdx & -0y1011)  { test_statement(0x14E0);  for (val = 10; 0y10011 & @rsp($ip & 0y10001 ^ @r12 ^ @r11 | (@r11) | 0n17;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1032);  while  (@rbx ^ +@rax)@rbx ^ +@rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx | @r13 @r8) ; }
$error$
$end$
5273
 if (@r11 | $buffer & @rsp ^ @r12 & +$ip & @r10(($thread + @r11 >> @r12 << @rax >> $buffer)  { test_statement(0x3B0); } elsif (17 << -@rax & 0n10 & @rbx & $thread ^ @rbp >> $buffer & @rbx ^ @rdi & 0x3 == 17 << -@rax & 0n10 & @rbx & $thread ^ @rbp >> $buffer & @rbx ^ @rdi & 0x3) { test_statement(0x5F3);  for (@rax = @r12; 0x4 | @r8))16;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  while  ($teb $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi & 0y10001 & -$teb((@rdi & 0y10001 & -$teb) { test_statement(0x7D);  /* This is a not closed comment ;  // /* This is a comment  } elsif (~@rbx & 0n10 ^ +~-0y10000 | @rdi ^ @r10 | @r10 | @r8 == @r11) { test_statement(0x18D7); } elsif ($proc | @r12 < @r8 ^ $ip | -$ip) { test_statement(0x26B);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb >< 0n3) ; } elsif (@rsi(@rbp | $buffer) { test_statement(0x24D2);  for (; @rsp = $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif (~-23 = @rsp) { test_statement(0x1999); } else { test_statement(0x22B8); ;  /* This is a comment */  // /* This is a comment   // /* This is a comment  }
$error$
$end$
5274
 if (@rsp << 0n2 & @rsi & @rsp & 2 & 0y0))@rbp >> -@r10 ^ +0y111 << @rbx ^ @rsp)  { test_statement(0x846);  /* This is a comment */  for (val = 10; 0n7 | @rbx | @rsp(0n0 | @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 >< +~$thread) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer > $thread) ; } elsif (@r11 & 0x13 >> @rax & @rdi)0y1101 << @rdi >> @rbx >> @rdx) { test_statement(0x1D89);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (($teb)) | @r13(((($teb)) | @r13) ;  for (val = @r9 | 0x13; @r8 = @rbp | $buffer;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rdi >< @r12)  { test_statement(0xCE9); } else { test_statement(0x8BF); } } else { test_statement(0x1D9C); }
$error$
$end$
5275
 if ((-@r12) >> -$buffer << $buffer >> 3 >> @rsi & 0x12 >> $ip >> @r9 & 13 >> @r8 | 0y10 & 0x12 ^ $teb & @rsi & @r10 ^ ($thread) & @r10 | $proc >> @rbx ^ @r13 & @rdx ^ 0x3 ^ +@r11 >< (@r8) + @rbp << @rdx >> 0n15 << $teb >> 22 ^ @rbx >> $thread >> @r11 & 0y101 >> 0y11 | @rbp << @r9 ^ @rsp & @r9 & +@rax)  { test_statement(0x10BC);  /* This is a not closed comment } elsif (@r8 << @rsp >> @r9 ^ 11 >> $teb & @r11 & @rdi | @r9 >> 0n1 & @rdx ^ @r10 & @rdx 0x0 << $ip >> @r8 >> 17 | @r8 >> $teb ^ ($proc) | $ip ^ 0y11 | +@r12 ^ $buffer | @r12 | @r11) { test_statement(0xD7A); }
$error$
$end$
5276
 if ((@rdx) + -@rdi ^ @rsp << 0n9 ^ @r11 >> @r8 ^ @rdi ^ @rbp != $ip | $teb << @rbx & @r8 & $ip | $teb >> $teb ^ @r11 & @rbx ^ @rax | @r13 | @rdi ^ @r8)  { test_statement(0x735); } else { test_statement(0xB);  /* This is a comment */ }
$error$
$end$
5277
 if (@rbp & @r10 & @rbp >> @rdx(@rbp & @r10 & @rbp >> @rdx)  { test_statement(0x186E); }
$error$
$end$
5278
 if (@r8 + @r9 << @rdi >> @rax >> @r11 >> 20 | (~$thread) >> @rdi ^ ~(@rsi) >> @rsp | @rsi >> (-@r8) > @r8 + @r9 << @rdi >> @rax >> @r11 >> 20 | (~$thread) >> @rdi ^ ~(@rsi) >> @rsp | @rsi >> (-@r8))  { test_statement(0x188B); } elsif (0y1101 ^ $teb >> @r12 | ~@rax >> @r13 & $thread & 0xE ^ @rbx ^ -$thread | -@r11 & $thread | (@r8)(@r11 << -$teb | @r8 & @rsi ^ $thread ^ $proc ^ @rbx) { test_statement(0x179A); } elsif (0y1 >> $buffer = 0y1 >> $buffer) { test_statement(0x24CA);  for (val = 10; 0y10010 >= $ip | @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @r10 ;  /* This is a comment */  break; } elsif (@r10 <= @r9 & @rdx ^ $buffer | 0y1110) { test_statement(0x93D); } else { test_statement(0x16DE); }
$error$
$end$
5279
 if ($proc + @r11 << @r9 ^ @r12 >> @rdi & @r12 | @r10 >> @rbp >> +0n12 & @rsi ^ @rsi & @r13 & +@r10 ^ -0n15 & @r13 = $thread << @r10 >> @rbp << $ip >> @r10 & ~0y10000 | @rdi << (@rdi) >> @r11 & @r13 ^ $ip >> ~@rsp | @rbp)  { test_statement(0x1ED6); } elsif (@r11 >> @r8 >> @rbx & $buffer >> $teb ^ @rdi & @r11 | 0n5 >> @r12 & @rsi & @r9 != @r11 >> @r8 >> @rbx & $buffer >> $teb ^ @rdi & @r11 | 0n5 >> @r12 & @rsi & @r9) { test_statement(0x173F); } elsif ($buffer & @rax | @rbx & @r10 | 0n3 ^ ~0x3)@rdx ^ $teb & @r9) { test_statement(0x19AA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 | +@r13 -@rbp | @rbp) ;  /* This is a comment */ } else { test_statement(0x1924); }
$error$
$end$
5280
 if (@r8 << @r13 << ~-@rax >> 0y111 << @r10 | @rsi << $buffer & @rdi ^ $proc | 0x11 >> -~@rsi & @r10 & $buffer ^ @r12 | @r12 & 16 | $teb))$proc + -~@r10 << @r8 >> +@r10 >> $teb >> @rbx)  { test_statement(0x1D4B);  /* This is a not closed comment }
$error$
$end$
5281
 if ($teb + 0n16 << 13 << 0y10001 (1) + -7 << +@rbp >> 0n16 << @rsi >> $ip >> (@rsp) ^ $thread << $buffer & @r13 ^ ~@rdx >> @r12 & @rdx & @r9 | $ip ^ @r10 >> @r8 | @rsp)  { test_statement(0xA49); } else { test_statement(0xB94);  break; }
$error$
$end$
5282
 if (@r11 >> (@rdx) >> @rax & @r13 >> 4 & $thread > @r11 >> (@rdx) >> @rax & @r13 >> 4 & $thread)  { test_statement(0xCC7); }
$error$
$end$
5283
 if (@rbx >> 0n8 << +$buffer >> $ip & @rsi << +@r8 >> ~@r8 | @rdx << $proc > $teb << 0n17 << -@r13 >> $teb & @r12)  { test_statement(0x2587);  /* This is a comment */  while  (@rdi ^ @rax @rdi ^ @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
5284
 if (-~@r12 + 0x2 >> @rdx ; 0y10010 << 0x8 >> @rdx << $buffer >> @rsp >> 0x5 ^ $teb & @rsp | (@rdx) >> @rbp >> -@r13)  { test_statement(0x6D6); } elsif (@r9 & (0y1001) >> $proc | (@r9) >> $proc & @r10 <= @r9 & (0y1001) >> $proc | (@r9) >> $proc & @r10) { test_statement(0x1664); }
$error$
$end$
5285
 if (@rsi << (-@r10) << 0y110 & $teb >> @r13 >> @rdx < @r10 + @r11 & @rsi)  { test_statement(0x2535);  for (val = 10; 22 & $teb ^ 0y0 | @r11 ^ @rbx ; @rax & @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y1000 & -$buffer >> @r13 & @rax & @rsp ^ @rdx >> $ip ^ @r12 ^ @r12 ^ 0n16))0y1000 & -$buffer >> @r13 & @rax & @rsp ^ @rdx >> $ip ^ @r12 ^ @r12 ^ 0n16) { test_statement(0x9BF);  This is a not opened comment */ }
$error$
$end$
5286
 if (@rdx + -23 << @rsp << @rax & @rax >> @rdx & @rsi >> 0y1011)@rdx + -23 << @rsp << @rax & @rax >> @rdx & @rsi >> 0y1011)  { test_statement(0x1ECF);  while  (@rsi ^ $thread ! @rsi ^ $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb <= $teb) ; } elsif (@rdi << @rdi >> @r13 >> $buffer ^ @r12 & $ip & -@r9 ^ @r13 & @r13 | 0y1101 & @r10 ! $proc << @rsi & $ip ^ @r11) { test_statement(0xCBB); }
$error$
$end$
5287
 if (@rsi + 0n1 >> @r13 << 0x10 | @rbx << @r9 >> @r11 >> @r8 ^ 0y1100 ^ 0x8 & 0x5 ^ @r11 | @rdi & 0y11 & $teb | -@rsp | @rax ^ 0x8)@rbx + @rdx)  { test_statement(0x1187); } else { test_statement(0x141); }
$error$
$end$
5288
 if (-@rbx >> @rsp >> -@r13 >> @r11 | 0 >> @rdx >> @rsi ^ @r9 >> @r9 ^ ($ip) ^ @rdx ^ 0x5 | --$teb | @rax & -@r11 | @rdi > @rax + @r11 ^ @rbx & @rax >> @rbp ^ 0n15 & @rbp & (~@rdi) | $buffer ^ @rsp & @rdx ^ @r10 & @r9 ^ $thread ^ 0n2 | @r12 >> $teb & 16 & 17 ^ $ip)  { test_statement(0x1C19); } elsif (@rsp << @rbx & @rax >> ~$proc & @r11 & @rdx ^ $teb >> @rax ^ $buffer)@rsp << @rbx & @rax >> ~$proc & @r11 & @rdx ^ $teb >> @rax ^ $buffer) { test_statement(0x1135); } elsif (@rsp & @rsp < $teb >> @r11 & $teb) { test_statement(0x22BF);  while  (@rdi | @rbx ! @rdi | @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  for (val = 10; @r13 < 0y1100;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r13 ; } elsif ($thread & @rdi | @r10 ^ @rdx | -@rbp <> @rsi) { test_statement(0x18BE); }
$error$
$end$
5289
 if (@r10 >> @rbx >> @r12 >> $buffer | @rbx & @rax ! @r10 >> @rbx >> @r12 >> $buffer | @rbx & @rax)  { test_statement(0x254E); } elsif (0n14 >> @r11 >> @r9 ^ -$thread >> $ip & @r9 >< $thread << 0y10010 >> 0y1111 >> @rbx & @rax >> @rsp ^ @r10 >> 7 & @r12 & ~@r12 ^ @r9 ^ @r13 | 0y1110 & $thread) { test_statement(0x1F06); } else { test_statement(0x980); }
$error$
$end$
5290
 if ($ip + @rdx << $ip >> @rsi >> 0n9 & $buffer << 0xB & $thread & @rsi | @rax << 0xB & $proc ^ @rbx & 0n6 | @rsi & @rbx | @r8 | $proc | @r10 >< @rbx + @r8 << 11 << ~+0n7)  { test_statement(0xC89); } else { test_statement(0x1062); }
$error$
$end$
5291
 if ((0n2) >> -@rsp << @rdx >> 0n3 ^ ($ip) >> @rsi | $proc & $proc >> $buffer & -$ip = @rdi + $teb >> (@r13) >> @r8 >> $teb & 0y1100 << @r9 & 0x3 >> @rdx & ~@r13 & $buffer)  { test_statement(0x243F);  This is a not opened comment */  /* This is a not closed comment } elsif (@rsi << @rax != @rsi << @rax) { test_statement(0x1340); } elsif (@rsp >> @r13 ! -$teb >> $ip & @r8 ^ @r12 ^ @r13 ^ @rdx) { test_statement(0x664);  for (@rax = @r13 | (@r10); 0n18 | @r10 < @r10 | @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  while  (4 > +@rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (~@rsi & @r12 ^ @rbp ~@rsi & @r12 ^ @rbp) { test_statement(0x15B1);  for (val = 10; @r11 <> @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  if ($buffer(@r12)  { test_statement(0x2251); } } elsif (+@r12 | -@rsp = +@r12 | -@rsp) { test_statement(0x3DD);  This is a not opened comment */ } elsif (@rdx @rdi) { test_statement(0xE89);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer ! $buffer) ;  for (; 0y11 > $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } elsif (0y1101 > @rax) { test_statement(0x2705); } else { test_statement(0x14F3); }
$error$
$end$
5292
 if (0n19 + $thread ^ 0y1000 << 0n7 >> @rsp >> @r10 ! $buffer & @r10 & ~@r11 >> @rax ^ @r11 << @rax & 1 ^ @rsp >> $ip)  { test_statement(0x2566);  while  (@rbp ^ @r13 ^ 0n11 > 1 & @rsi ^ @rbx | 0x7)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; $thread ^ @r12 < $thread ^ @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2505); }
$error$
$end$
5293
 if (@rbx & 0n11 << @rsp >> @rax ^ $proc << @r10 >> (@rbp) & @r8 >> @r8 ^ @r10 & @r11 & 0n17 | @r11 << 0x3 & @rbp & $proc & $ip ^ @rsi >> @r8 & @rbx & @rdx @rbx + 0y1101 << 0x10 << $buffer >> $buffer << +~$ip | @rax >> 0n6 >> @r8 ^ $proc >> @rbp)  { test_statement(0x19B); } elsif (@r8 << @rsi >> @r8 >> -@r11 ^ @rsi | @rbx ! @r8 << @rsi >> @r8 >> -@r11 ^ @rsi | @rbx) { test_statement(0x16F0); } elsif (@r13 & @rbp & @rsi ^ $buffer | $thread & 0xA >< @r13 & @rbp & @rsi ^ $buffer | $thread & 0xA) { test_statement(0x1B30);  if (@rdx != @rdx)  { test_statement(0x4EE); } elsif ($ip($ip) { test_statement(0x26BE); } elsif (@r9 < +@rdi) { test_statement(0x1837); } } else { test_statement(0x25E6); }
$error$
$end$
5294
 if ($buffer >> $buffer << @rdi ^ $buffer >> @rsi >> ~$teb & @rdx ^ 0x1 >> @r13 < $buffer >> $buffer << @rdi ^ $buffer >> @rsi >> ~$teb & @rdx ^ 0x1 >> @r13)  { test_statement(0x6E4); } else { test_statement(0xC0F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 2 ^ @rsp <> 2 ^ @rsp) ; ; }
$error$
$end$
5295
 if (5 & ~@rbp & $teb >= 0x13 >> @rsi & ~@rbx << @rbx & @r13 & @rdi & $buffer | @rsi >> 0n16 & @rsp >> 5 | @r13 >> @rsi ^ $ip & $proc | @r10)  { test_statement(0x11C1);  if ((@r13) & $teb ^ $teb == (@r13) & $teb ^ $teb)  { test_statement(0x7DD); } elsif ($buffer ^ 0n12 | $ip | 11((@r13 ^ 0y100) { test_statement(0xB56); } elsif (@rsp < @rsp) { test_statement(0xF40); } elsif (@rdx >= 0xD) { test_statement(0x7FD); } elsif (@r12 > @r13) { test_statement(0x1917); } else { test_statement(0x218C); } ;  while  (@rdi > @rsi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
5296
 if ($thread << $ip << 4 & $thread << @rdx ^ $proc << @rsi >> $ip >> @rbp & ~~@rsi & @r8 & $ip | ($buffer) << @r13 >> 0x9 >> ($buffer) ^ +@r8 >> @rsp ^ @r12 | $proc | @rsp(@r13 & @r10 | @r13 & 0xE >> -@r11 & @rax ^ 0x4 >> @r8)  { test_statement(0x18E9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip & $thread ^ (0y1110) ^ @r13 $proc ^ @r11) ;  /* This is a not closed comment }
$error$
$end$
5297
 if (0n7 + @rdx << @r10 >> +0n3 & @r8 << +@r11 >> $thread >> @r12 & $buffer >> @r8 & @rbp ^ @rbx & @rdi & $teb & @r8 ^ $buffer & +@rbx ^ ~$ip & 0y1110 ^ ~$ip(@rsi & $buffer << -@rax & $teb & $buffer ^ @rbx << @rdi & @rsp ^ @rbp >> @r9 & @r9 ^ 0x10 & @r9)  { test_statement(0x10DF); } else { test_statement(0x352);  if (@rdx ^ @rbx | @r9 | @rsi >< $buffer)  { test_statement(0x9A4); } elsif (@r11 | 0n3 == @rbx) { test_statement(0x180F); } elsif (@r10 != @r10) { test_statement(0x1E91); } elsif (@r10 <= @r10) { test_statement(0x20C5); } else { test_statement(0x1654); } }
$error$
$end$
5298
 if (0y1010 + @r9 << 0y1 & 0n14 & $thread ^ $proc << $teb <> @r12 + -@r13 >> +@rdx << 0n10 ^ @r8 << @r12 & @rdi >> @rdi ^ @r12 >> @r8 & 0y1 ^ 0n15 & $proc ^ (@r11) ^ @r9 | 0x7 ^ @rsi)  { test_statement(0x2C5);  This is a not opened comment */ }
$error$
$end$
5299
 if (1 ^ @r8 << @r9 & $ip >> -@r11 ^ $proc ^ $teb & @r10 | @rsp ^ +@rbp >> +@rbp & @r9 | -@rdi & $proc & ~@r8 < 0x2 + $proc << @rdx & 15 ^ -@r13 << 20 ^ 7 ^ @rdx & $ip)  { test_statement(0x1B79); } else { test_statement(0x181E);  /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (-23) | $teb > ~0y11) ;  for (val = 10; $proc != $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5300
 if (@r12 + @rsi | @r10 & @rdi > ~0n19 << 0y111)  { test_statement(0x758); } elsif (@rdx >> @r13 >> ((+@rbp)) ^ 0n7 ^ 0y1000 & @rbp ^ 0n15 ^ -0x13 ! 11 << @rsp | 0y0 | $buffer ^ $ip ^ @rdx | 0y1) { test_statement(0x17C6); } elsif ($thread >> ~@rdx ^ ~(@r13) | @r12 & -@r8 ; @r11 & 0x2 ^ (@rsp) & @rdi ^ @rbx ^ 0n15 | @rbp & @rax | +@r13 ^ ~$thread) { test_statement(0x7D6);  This is a not opened comment */ } else { test_statement(0x1B90);  if (@rdx ^ @rdi | $buffer @rdx ^ @rdi | $buffer)  { test_statement(0x1F0C); } elsif (@r11 != 0y10 | $proc) { test_statement(0x18F4); } elsif (@rbp >= $teb) { test_statement(0x1FD); } else { test_statement(0x1A81); } }
$error$
$end$
5301
 if ($proc + $teb << @r9 << $ip >> @rax | @r10 & @rbp == -$teb + @rsp << @rsi >> @r8 & ~@r11 >> @r8 >> +@r13 & @rbx >> 23 | @rdi ^ @r10 ^ 5 & $buffer ^ $thread | @rbp)  { test_statement(0x16FB);  This is a not opened comment */ } elsif ($ip << @rdx ^ @r12 >> ($proc) & @r8 ^ @r13 & @rax == $ip << @rdx ^ @r12 >> ($proc) & @r8 ^ @r13 & @rax) { test_statement(0x15A);  for (val = 10; +@r8 ^ @r12 | $teb | @rsi = ~($teb) ^ @rbp | @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1D2B); }
$error$
$end$
5302
 if ($teb + @rsi << 0n15 << (@r11) >> 0xB << $thread & @r13 << 0n18 >> @rdx & +@r11 & @rsp & @r11((@r13) + +0x12 >> $proc | @r8 << @rdi)  { test_statement(0x10E); @rax = @rdi ; }
$error$
$end$
5303
 if (@r10 + @rdx << @rsi << 0y10000 >> ~@rdx ^ $ip << @r9 & $ip >> @rbp ^ @r12 <> 0n9 + @rsi << $thread << 0n8 >> @r8 & @r8 & 0xD ^ @rdi & @rbp >> @r8 | $ip << @rax >> $proc ^ @rbp & 0n18 & $proc | -$proc >> @rax)  { test_statement(0x1ED5); }
$error$
$end$
5304
 if ($buffer << -@rsp <> @rax >> @rsi << $thread ^ +@rdx << @rsi >> 0x7 & $proc & @rdx ^ $ip >> @r8 ^ @rdx ^ $ip ^ @r8)  { test_statement(0x531);  for (val = 10; ($teb) ^ (@rdi)))-@r11 | +23;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = +$teb | @rbp ^ @rsi | 0y10 | @r11 ; } else { test_statement(0x1628);  if (@rdx ^ @rdi | @r8 | @r11 != @rdx ^ @rdi | @r8 | @r11)  { test_statement(0x5F); } elsif (@rbp | +12 >= @r9 | $thread) { test_statement(0x11CD); } else { test_statement(0x29E); } }
$error$
$end$
5305
 if (@r13 + @rdx >> $proc << -(@r13) = @r13 + @rdx >> $proc << -(@r13))  { test_statement(0x22AD); } else { test_statement(0x1FF0);  /* This is a not closed comment }
$error$
$end$
5306
 if (@r10 & $buffer << @rax >> @rdx >> @rdx ^ @r9 >> @r12 >> @rsp ^ @r8 & @rax | +@r13 << (@r8) >> @rdx & 5 >> @r13 | @rdi & @rdx & @rsp ^ @rbx & @rdi((@rax >> @r9 ^ $thread << @r11 ^ @rsp)  { test_statement(0x1F22); } else { test_statement(0x1768); }
$error$
$end$
5307
 if (@rdx & (@rax) & @rbx & @rsp | @r8 << $ip & 10 >> ~$ip & 0y1111 | @r10 >> @r9 & @r8 & @rbx ^ @rbp & $teb < 0xA + +@rdx >> -@rsp << ~@rsp & 0y10000)  { test_statement(0x13DA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax < @rdx & -10 ^ @rsp | 0xE) ;  /* This is a comment */ } else { test_statement(0x1035); }
$error$
$end$
5308
 if (@rsi + 11 >> @r12 << @r13 >> @rsi >> @r9 ^ @r8 >> $thread >> @rsi ^ @rdi | @r9 << @rsp >> @r10 >> $thread ^ @rsp & @rdx ^ $thread & 0xA | 0xA & (@r13)(($thread >> $buffer & @rdx >> $proc & @r13)  { test_statement(0x23F8); ; } elsif (@r9 << @rsp >> 2 >> $teb | ~@r13 >> $proc ^ 0n6))@r9 << @rsp >> 2 >> $teb | ~@r13 >> $proc ^ 0n6) { test_statement(0x6C3); } elsif (@rax ^ @r12 & @rsp ^ 0xF | @rsp | $ip ^ @r10 = $thread >> 16 ^ $proc & @r12 ^ @rbx | @rbp & +0y1) { test_statement(0x185B); } else { test_statement(0x201D); }
$error$
$end$
5309
 if (0y11 & $proc << ~0y1000 >> +0y110 >> $buffer ^ $thread >> @rbp & @r10 & @rbx & @rdi ^ @rbx & 0n16 & @rsp | ($thread) << @r10 >> $ip & @r11 | @rsi ^ @r10)0y11 & $proc << ~0y1000 >> +0y110 >> $buffer ^ $thread >> @rbp & @r10 & @rbx & @rdi ^ @rbx & 0n16 & @rsp | ($thread) << @r10 >> $ip & @r11 | @rsi ^ @r10)  { test_statement(0x1526); } else { test_statement(0x844); ; }
$error$
$end$
5310
 if (@rbp + @r9 << -0n13 >> $proc << @rbx >> @rbx >> @r9 ^ @rsp << @rdx & @rdx >> 0y1101 & @r13 ^ ((@rbp)) >> ($proc) & @r10 ^ @rsp | 0n7 ^ @rsi & @r9 < @r10 << @r9 << -@rax >> 0n16)  { test_statement(0x1960); }
$error$
$end$
5311
 if ($thread + ($buffer) >> @rbx << $teb ^ @r13 << ~@r8 >> $ip | -@r8 & 0n4 ^ @r12 >> -@rsp ^ @r13 ^ +@r8 ; $thread + ($buffer) >> @rbx << $teb ^ @r13 << ~@r8 >> $ip | -@r8 & 0n4 ^ @r12 >> -@rsp ^ @r13 ^ +@r8)  { test_statement(0x1A4); } elsif (+@rsp >> 0y1110 >> +@rsp & @rsp >> $teb ^ 0n18 | -$teb | $ip & @rbx | @rsi ; @rdx << @r12 ^ $proc >> ~$teb ^ @r9 ^ $teb) { test_statement(0x14DC); } else { test_statement(0x1385); }
$error$
$end$
5312
 if (@rdx + @rdi << $proc << 1 >> @rbp << @rsp >> @r10 >= 0n3 + -$thread ^ @r9 & $buffer >> @rsp ^ ~$buffer >> $ip & 0x4 & @rbx ^ @rsp & @r13 ^ @rbx ^ ~12)  { test_statement(0x10DE);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer & $teb ^ @rax ^ -@rdi(@rsi) ; } elsif ($teb << +$buffer >> @r8 >> (@r11) == $proc << $buffer & @rax ^ @rsi) { test_statement(0x26C3);  // /* This is a comment  } else { test_statement(0x41F); }
$error$
$end$
5313
 if (@rdx << $ip @rdx << $ip)  { test_statement(0xB77); }
$error$
$end$
5314
 if (@rdx + $ip << 0 >> @r8 << $ip & @r8 << @rbx >> ($teb) >> @rax & @r12 & -$buffer ^ @rax >> $teb >> @rdi | @rsi << @rsp != @rbx + $buffer << $buffer << @rdi & 0x8 >> @rbx & $thread)  { test_statement(0x1EC7); ; }
$error$
$end$
5315
 if (@rsi + +@r12 << @rax ^ @r12 >> @rsi | @rdx << @rbx >> -@rbx >> $ip @rsi + +@r12 << @rax ^ @r12 >> @rsi | @rdx << @rbx >> -@rbx >> $ip)  { test_statement(0x2059);  break;  break; ; } elsif (@r9 >> @rsi ^ @r12 >> (@rdx) | @rbx & @rax & @r8 ^ @rdi | $buffer ^ @rdi >= @rsi << @r12 >> @rdx ^ @rbp >> @r10) { test_statement(0x101);  break; }
$error$
$end$
5316
 if ($teb + $buffer >> -@rdi ^ +-@r10 ^ 0y100 ^ @rdx & $proc = @r9 + @r8 << +23 << @r13 | $buffer >> (@r13) & @rsp >> $ip & @rax & @rdi ^ 0n17 >> 20 & @rdx)  { test_statement(0x23C8);  while  ($ip | $ip ^ -@r13 | @r13 = $ip | $ip ^ -@r13 | @r13)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  while  (@rbp($thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($teb ; $teb)  { test_statement(0x26CA); }  /* This is a comment */ val = @rsp ; } else { test_statement(0x150B); }
$error$
$end$
5317
 if (0n3 + @rax ^ $ip << @r8 >> @rdx & @rax & 0n14 ^ @r10 & 13 & @r10 ^ 0n18 ^ $ip ^ @r13 | (@r12) & (~~@rbp) & @r12 = @rdi + @rbx >> 0x5 << $proc >> @rbx >> 17 ^ @r13 & +$buffer | $teb ^ @rsi >> (@rbx))  { test_statement(0x1F30); } else { test_statement(0x25DE); }
$error$
$end$
5318
 if (@rdi << +@r9 >> @rsi << @rsi >> @r11 >> @rbp & -($ip) << 0x3 | $ip & @rdi & $buffer(($teb ^ (@r12) << @rsi >> @rsi >> @r11)  { test_statement(0x6);  This is a not opened comment */ }
$error$
$end$
5319
 if (@r13 + @rdi >> +21 ^ $ip >> ~$teb >> @rsi > @r13 + @rdi >> +21 ^ $ip >> ~$teb >> @rsi)  { test_statement(0x93C);  This is a not opened comment */ ; } else { test_statement(0x625); }
$error$
$end$
5320
 if (@r8 + 0n4 << @rax & ~$teb << ~~0x0 & $thread >> $ip | @rdi << $thread >> @rsi ^ $buffer >> @rsi & 0n12 == @rax >> @r8 & +@r9 >> @r11 ^ @r10 & @rsi >> @rdx | 0x10 >> 0y1000 >> 0n9)  { test_statement(0x2535);  for (val = $ip ^ 0x6 | @rsi; $thread ^ @rdx | ~(-0n10) ^ @rdi ; $thread ^ @rdx | ~(-0n10) ^ @rdi;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ ;  /* This is a not closed comment  /* This is a not closed comment  for (; @rdx < @rdx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } elsif (@r8 >> 0n4 >> @rsi & 0x2 & $proc & @rdi | 0y110 >> $teb & 20 & ~0n12 = @r8 >> 0n4 >> @rsi & 0x2 & $proc & @rdi | 0y110 >> $teb & 20 & ~0n12) { test_statement(0x32C); } elsif (0n4 >> 0x1 & @r10 & @r13 ^ @rax ^ ~~-0x0 ^ $thread == ~@rbx & (-@rbp) ^ @rbp ^ @rbp) { test_statement(0xA0C); } else { test_statement(0x1AED); }
$error$
$end$
5321
 if (11 + @r9 >> $ip << (@rbp) >> 0y11 >> @rbp ^ @r11 << 0y1011 >> $proc >> $buffer < @rdx + $teb << $proc << @r11 >> 0x7 << 15 >> @r9 >> @r12)  { test_statement(0x2131);  while  (0y1100 | @rbp ^ @r9 0y1100 | @rbp ^ @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ } elsif ($ip & 0n17 >> $ip ^ $teb & $ip ^ @rbx ^ @r8 ^ $buffer | @r13 >> @rdi | @r8 & $proc < $ip & 0n17 >> $ip ^ $teb & $ip ^ @rbx ^ @r8 ^ $buffer | @r13 >> @rdi | @r8 & $proc) { test_statement(0x39A); }
$error$
$end$
5322
 if (@rax + ~@r11 << @r8 >> (@r13) & $ip ^ +0x0 << $buffer >> 0y10011 >> $ip | ~@r9 << 0xE ^ @r9 >> @r9 & -$ip & 0n4 ^ 0y101 & @r9 | @r8 >> @rdx | @r13 & $thread @rax + ~@r11 << @r8 >> (@r13) & $ip ^ +0x0 << $buffer >> 0y10011 >> $ip | ~@r9 << 0xE ^ @r9 >> @r9 & -$ip & 0n4 ^ 0y101 & @r9 | @r8 >> @rdx | @r13 & $thread)  { test_statement(0x1B64);  /* This is a not closed comment } elsif (@rdi << (@r8) >> @rbp >> @r13 & @rbp & -$teb & @r11 ^ ++$proc >> $teb & @r12 | @r11 >> $proc ^ @rbx ! @rdi << @r11 >> @r12 | @r9 & @rbp ^ $thread & @rbx) { test_statement(0x1013); } elsif (0y111 & $proc ^ 0n3 & @rdx | 0n2 & @r13 ^ $teb ^ @r12 | $proc ^ @rsi | @rdx | (~0x7) 0y111 & $proc ^ 0n3 & @rdx | 0n2 & @r13 ^ $teb ^ @r12 | $proc ^ @rsi | @rdx | (~0x7)) { test_statement(0x608);  break; ;  /* This is a comment */ }
$error$
$end$
5323
 if (@rsp + @r8 << @r9 << 0x5 >> @r10 << +@rax >> 0y111 >> $proc ^ $buffer << $thread != @r9 + $teb ^ @r12 << 0x7 >> $ip >> @rbx & @rdx | 0n10 << 1 & (@rbp) >> @rax | ($teb) & @rbp & +(@r11) ^ @rsi ^ @rdi | 0y1 | ~@r10 | $ip)  { test_statement(0x2DD);  for (val = 10; 0n7 ^ @r9 | -+17 ^ $teb < @r8 & @r10;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (-@r13 >> @rdx >> 23 & (@r13) & -1 ^ +$ip & $buffer & $thread ^ $proc >= @rsi >> 0n3 >> @r12 & @r12 >> (@r12) ^ @r13 & @rdi) { test_statement(0x2549);  /* This is a not closed comment } elsif (@r8 & @r11 != @rsp & @r10 & @rsp) { test_statement(0x2392);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1010((@rbp) ; }
$error$
$end$
5324
 if (@r11 = @r9 << $ip << $proc & @rsp << $ip >> $thread >> 0n2 | 0n10 << @r9 >> $proc & @rdi >> @r9 ^ @rsp >> $teb & @rsp & @rdx)  { test_statement(0x21E9); } elsif (17 << ~@rax ^ @r9 & @r13 ^ 0x0 17 << ~@rax ^ @r9 & @r13 ^ 0x0) { test_statement(0x193B);  /* This is a comment */ } else { test_statement(0xBE5); }
$error$
$end$
5325
 if ($ip + ~0n8 ^ @rdi & @rbp >> $proc & @rdi & 0y1000 ^ 0x9 & @rax)@rax << @rsp & (13) << @rbp)  { test_statement(0x26E9); ; } elsif (@rbx >> -0x6 >> 0xC ^ @r8 >> 0xD >< @rbx >> @rdi & 0y10001 & $buffer & 0y1000 | @rsp >> @rsp & 0n15 & $proc ^ @r11 & @rbx ^ $teb) { test_statement(0x21B4); } elsif (@rsp | @rsi | @rbx ^ 12 != @rsp ^ (0n9) ^ 2 | @r9 ^ @r11) { test_statement(0xD4B); } elsif (@rdx & @rdi ^ @rsi < ~@r9) { test_statement(0x1438); } elsif (0n15 ^ 0n8 | @rdi ! @r13 ^ @r10) { test_statement(0x1D00); } elsif (@rax | @r9 >= ($ip) | @rdi) { test_statement(0x1A37);  /* This is a comment */ } elsif (@r9 != @rdi) { test_statement(0xB77);  while  (10)10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x249C); }
$error$
$end$
5326
 if ($teb + 0n5 >> 0n16 << $ip ^ 0y111 & $buffer & $proc ; $teb ^ ($buffer) >> @rsi & @r11 & 0y111 ^ @r13 >> @r8 & 0n6 ^ @rbx | $teb << 0x7 >> @rdi >> 23 ^ @r13 & $thread & @r10 ^ @rbp)  { test_statement(0x25EE); } elsif (@r8 & @r8 & -@rax & 0y100 > 0y10001 >> @r11 >> @rdx & -+@rbx >> 16) { test_statement(0xC39);  /* This is a not closed comment ;  /* This is a not closed comment } elsif ($thread >> $teb & @r10 ^ +0 & @rbp | @r11 ^ $proc ^ @r9 | @rax ^ @r13 <= $thread >> $teb & @r10 ^ +0 & @rbp | @r11 ^ $proc ^ @r9 | @rax ^ @r13) { test_statement(0x1918); }
$error$
$end$
5327
 if ($ip << $thread << @r11 & 0n0 << @rdx >> 0n12 >> ~@r10 | @r13($ip << $thread << @r11 & 0n0 << @rdx >> 0n12 >> ~@r10 | @r13)  { test_statement(0x199);  if (@r10 ^ @r12 | @r11 | 10 | @rdi)~$ip & ~@rdi ^ @r12)  { test_statement(0xEC6); } else { test_statement(0x1E15); }  break; } elsif ($buffer << 0y10011 >> @r12 & @rdx >> -@rbx & 0n11 & $proc ^ $thread >> ~@r13 <> $buffer << 0y10011 >> @r12 & @rdx >> -@rbx & 0n11 & $proc ^ $thread >> ~@r13) { test_statement(0x8C0);  while  ($thread ^ @rax >< $thread ^ @rax)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r13 | @rsp ^ @rax ^ $proc | @rbp ^ -@rax < 0y111 >> @r12 ^ $ip & @rax) { test_statement(0x24F6); } elsif (0n1 ^ @rdx ^ $teb | @r8 ^ @r10 | 21 | +@rbp ; @rdx & @r9 ^ @r10) { test_statement(0x2168); ;  break; } elsif (0n7 | $thread | @r11($teb ^ $ip | @r10) { test_statement(0x1E0F); }
$error$
$end$
5328
 if ($teb + 0x12 >> @rsp >> @r9 >> -$ip ^ 0y10011 << @r13 ^ 0x8 >> @rsi ^ -~6 & @r11 ^ @r11 | @rbp << @r11 & @rdx >> @rbx | @rbx >> $ip | 4 & 0y10001 ^ 0n17 | @rsp ^ $teb | $proc < $teb + 0x12 >> @rsp >> @r9 >> -$ip ^ 0y10011 << @r13 ^ 0x8 >> @rsi ^ -~6 & @r11 ^ @r11 | @rbp << @r11 & @rdx >> @rbx | @rbx >> $ip | 4 & 0y10001 ^ 0n17 | @rsp ^ $teb | $proc)  { test_statement(0xE96);  // /* This is a comment  ; }
$error$
$end$
5329
 if (@r13 + 0n8(($thread << @r8 << $ip >> 0y100 << @rbx >> @r12)  { test_statement(0xCE7); ; } elsif ($buffer << @rsi & @rdx >> @r13)@r11 >> ($proc) >> +22 ^ ~@r9 >> @r10) { test_statement(0x320); }
$error$
$end$
5330
 if (@rbx + @r10 << 0y1101 << @r13 | $thread << @rbx >> @r13 >> @rdx & @rdx >> @rbp & @rsp ^ @rax >> @r11 & @rdx ^ @rbx & $thread ^ @rbx | 0y1110 ^ @rsi | @r11 | $proc ^ @r8 | @rbx | $teb == 12 >> +$ip << 0x2 >> $proc | $thread << $ip ^ $ip | @rsp >> ~$ip & 0y10 ^ @r11 & @rsp)  { test_statement(0x1334);  /* This is a not closed comment  /* This is a comment */ } else { test_statement(0x23D7);  for (val = 10; @rbx | 12 ! @r11 | @r8 | @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5331
 if ($teb + $proc << @rsp & @rdx ^ $thread & -$teb >> 0n17 & @r12 | @rdx << 0x0 < $teb + $proc << @rsp & @rdx ^ $thread & -$teb >> 0n17 & @r12 | @rdx << 0x0)  { test_statement(0x1767); }
$error$
$end$
5332
 if (@rsi & @rax ! @rbx + @r12 >> 0xD << +@r8 >> @rsp ^ $ip >> $ip)  { test_statement(0xDB9);  for (val = 10; ~0x2 < @r10 & @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r10 << $proc >> (@r8) | ~@rdi >> $teb & 0xB & -@r9 | $ip & ~16 != @rax << @rbx >> (@r10) >> (@rbx) | 11 >> @rsp & $thread ^ @r12 | ~@r8 & @r9 | @rax | @rsp) { test_statement(0x730);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( ~0n6 ^ 0n15 > @r9 ^ @r10) ;  while  (+-$thread | @r9 >= @r10 | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdx & $thread ^ 7 | @r13 & @rbx ^ @rsi ^ $thread | @r13 | @r8 | (@r8)))@rdx & $thread ^ 7 | @r13 & @rbx ^ @rsi ^ $thread | @r13 | @r8 | (@r8)) { test_statement(0xEE1); } else { test_statement(0x1487); }
$error$
$end$
5333
 if (@rdi + @r8 >> +$proc >> 0x13 >> @rbp | @rbx >> 0y101 & @r8 >> $ip & @rsi == ($proc) ^ 0y10000 << 0y1111)  { test_statement(0x15CF); }
$error$
$end$
5334
 if (@rsp + @r13 >> @r13 << ~0x2 >= 0y10011 & @rax << @rsp >> @r8 ^ @rbp << @r9 & 0y1110 ^ @r9 & 10 & 0x9 ^ $proc & @rsi)  { test_statement(0x9FE);  for (; @rsi & @r10(+@r8 ^ @r8 ^ $thread | 0y111 ^ $buffer | @r12 | @rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (23 >> @r13 >> ~0y1111 & $proc >> @r10 | @rsi ^ 20 & -$proc | @r9 ^ @r12 = @rsi | 0n16 ^ @rbx) { test_statement(0x30F); ; @rax = (@rdi) | @rbp ; }
$error$
$end$
5335
 if (0y10000 + 0x2 << ~@r10 | 13 >> (@r9)))$proc << 0n16 << (@r8) >> -@r12 << ~15 & 0x4 << 0n17 >> 0x10 >> $ip)  { test_statement(0x11FB); } else { test_statement(0x22F3);  for (val = 10; @r10 == @rsi | @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  // /* This is a comment   while  (0y1011 <> $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   /* This is a not closed comment }
$error$
$end$
5336
 if ($thread + @r9 << @r9 ^ @rbx & 0y0 >> @rdx > $thread + @r9 << @r9 ^ @rbx & 0y0 >> @rdx)  { test_statement(0x749);  for (val = 10; @rdx ^ 0x0 ^ @r10 | @rax ^ $proc | @r11 | @rsp >< @rdx ^ 0x0 ^ @r10 | @rax ^ $proc | @r11 | @rsp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  /* This is a comment */ } elsif (@r9 << 0y10 & $teb >> ~0y1001 & @rbx & -@rbx ^ @rax >> @rbx <> @rdx >> 0xE & $buffer ^ $thread | @r12) { test_statement(0x1686);  break; ;  /* This is a comment */ } else { test_statement(0x663); }
$error$
$end$
5337
 if ((($buffer)) + @r9 << @r9 << 0y1011 >> $buffer >> @rdi >> @r9(((($buffer)) + @r9 << @r9 << 0y1011 >> $buffer >> @rdi >> @r9)  { test_statement(0x167C);  break;  break; } elsif (@r8 ^ @rdx >> $teb & 20 & @rdx))16 >> @rsi >> 0xF) { test_statement(0x1C3F);  // /* This is a comment   /* This is a comment */  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $thread((@r9) ; } elsif (@rbx ^ +(@rbx) & @rbp ^ @r13 ^ @r8 | 0y100 & +@r11 != ($teb) >> @rbx) { test_statement(0x1471); } else { test_statement(0xADF); }
$error$
$end$
5338
 if (0x13 + 0x2 << @rax >> -@r9 >> @r11 >> $proc & @rdx >> $thread >> @rsi & 5 & @r13 ^ @rdx << @rsp ^ 0y10011 & @rsp | 0y100 << ($buffer) >> @r9 & @rdi >> $proc & -@r10 <> 0x13 + 0x2 << @rax >> -@r9 >> @r11 >> $proc & @rdx >> $thread >> @rsi & 5 & @r13 ^ @rdx << @rsp ^ 0y10011 & @rsp | 0y100 << ($buffer) >> @r9 & @rdi >> $proc & -@r10)  { test_statement(0x2AA);  // /* This is a comment  @rax = $ip & @r10 ; } elsif ($thread << @r9 >> 0y10000 & @rbp & @r8 & @rsp | $thread >> @r12 ^ ($teb) & $proc | @r9 ^ ~12 > $thread << @r9 >> 0y10000 & @rbp & @r8 & @rsp | $thread >> @r12 ^ ($teb) & $proc | @r9 ^ ~12) { test_statement(0x1E3A);  break;  while  (@r9 >< @rsi | $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = $buffer | $thread ; } elsif (0y1001 & $proc & (@r11) ^ @rax & 0n19 >< 0y1001 & $proc & (@r11) ^ @rax & 0n19) { test_statement(0x1CDB); ; } else { test_statement(0xA70); }
$error$
$end$
5339
 if (@r12 << @rsp >> @rdi << 0x8 >> @r9 >> $teb & -@rdi & @r13)($proc) << -@rax >> @rax & @r8 ^ $buffer & @r13 & @r8 & -$buffer ^ @r13 | @rbp << $ip >> $proc >> @rsp | ~@rbp & -@rsi)  { test_statement(0xEB4); } else { test_statement(0x8CB);  /* This is a not closed comment }
$error$
$end$
5340
 if (@rax + @rbx | -@r13 << $buffer >> -@rbp >> 0xA & @rbx >> @r13 & +@rdi & +@rbx ^ @r8 >> $thread == ~0y111 + 0n8 & @r10 << $teb >> +0y110 & @r12 >> @r12 | @r9 & +@rsp >> @r9)  { test_statement(0x71D); } else { test_statement(0xCBF); }
$error$
$end$
5341
 if (0x5 << @rbp << @r13 & @rsp << @rbx ^ @r11 >> @r11 >> @rsi & 0 & -@rbp & (@rbx) ^ @rsp >> $teb ^ @rdx ^ @rdi ^ @rsi ! 0x5 << @rbp << @r13 & @rsp << @rbx ^ @r11 >> @r11 >> @rsi & 0 & -@rbp & (@rbx) ^ @rsp >> $teb ^ @rdx ^ @rdi ^ @rsi)  { test_statement(0x1AA9);  if (@r11 & @r12 | $ip))$buffer & @rbx ^ @rbp ^ @rdx | ($buffer) | $thread | @r10)  { test_statement(0x21D5); } else { test_statement(0x1F5D); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +@rax >= @rdx ^ @rbx | @rbp | @rsp) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip(+1) ; }
$error$
$end$
5342
 if (@r13 + @rbx << @r12 << @rdx ^ $ip >> $ip >> @r12 & @rbx >> $buffer ^ @r9 & @r12 & $ip ^ @rsp <= $buffer + @r8 << @r10 << @rbp >> @rdi << $teb >> @rbp & ~@r11 >> @rdx)  { test_statement(0xDA1); }
$error$
$end$
5343
 if (11 >> ~@rsp << @rdi >> @rdx >> 0n18))+@rax << @r9 >> 7 >> @rbp | @r11)  { test_statement(0x2163);  break; } else { test_statement(0xBAA); }
$error$
$end$
5344
 if (@r12 << @r10 >> +@r11 << $teb >> @r10 & $proc << 0x0 & $buffer >> @rdi ^ @rsp & 1 >> 2 & @rsp & @r8 | @r10 << @rbx >> @r9 ^ @r8 & @rdx & ~@rsp > @r12 << @rdi << $proc ^ $thread << 0x5 >> $ip >> 0x6 & @rbp & 0n0 ^ $proc ^ $proc ^ 0x2 ^ $buffer)  { test_statement(0x111C); } else { test_statement(0x1F28); }
$error$
$end$
5345
 if ($proc + @rbp >> @r12 << @rsi >> @rsi & 0y10000 >> @rbp >> 10 | $thread >> 15 >> @r12 & 0n3 >> @rdi & @rsp | ~@r13 >> @rsi & $buffer ^ @rsi & @r13 >< @rbp + @r10 << @rbx << +@r11 >> ~@rdx << @r11 >> @r10 >> @rax & 0n7 ^ $thread << @rsp | $buffer >> @rbx | @rdx ^ @r12 | 0n2 & @rbx)  { test_statement(0x20B9); } else { test_statement(0x12D1); }
$error$
$end$
5346
 if (@r11 = 0y1100 + (0y1100) << @rdx & @rsi & 0xD >> @rdx)  { test_statement(0x1C5E);  while  ($thread ^ @r10 ^ @rdx | @rbp ^ @r11 | 0xC | @rbp = $thread ^ @r10 ^ @rdx | @rbp ^ @r11 | 0xC | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5347
 if (@rdi + @rax << @rdi >> @rdx & 0n18 << $thread >> @r10 >> @rax & @rsi >> ~++@rsi @rdi + @rax << @rdi >> @rdx & 0n18 << $thread >> @r10 >> @rax & @rsi >> ~++@rsi)  { test_statement(0x190F); } else { test_statement(0x10C3); @rax = @r13 & @rdx ;  while  (+0n8 = @r9 | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5348
 if (-0n0 + @r10 << @rsi << @r12 >> 0y1000 << -0n2 >> (@r9)(0y1110 | @r12 & @r10 >> @rbp & @r11 | +@rbx >> +@r8 ^ @r9 | $buffer & ~11 | @r9 ^ @r13)  { test_statement(0x750);  for (val = 10; $buffer & 0y10 ^ 0x4 | @r9)$teb;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  if (~(@rdi) | @rsi > ~@r9 | @r12)  { test_statement(0x1DB7); } elsif ($thread ; -@rbx) { test_statement(0xC68); } else { test_statement(0x1C41); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 @r8) ;  This is a not opened comment */ } elsif ($buffer << 0y1000 >> @r11 ^ @rbp | 0y1001 <> $buffer << 0y1000 >> @r11 ^ @rbp | 0y1001) { test_statement(0x2156); } elsif (@rbp >> $teb & @r8 ^ 20 ; @rsi) { test_statement(0x13CD);  if ((11) | $buffer != @rdi)  { test_statement(0xB2A); } elsif ((15))@r12) { test_statement(0x11A3); } else { test_statement(0x1B0); }  // /* This is a comment  } else { test_statement(0xECB); }
$error$
$end$
5349
 if ($buffer << @rsi << +0n8 >> @rdi >> $thread 0y1000 + @rbp ^ (16) >> @rax | @rdi << ~@rsp >> 0y1101 & $teb ^ @r13 | @r11 & 0y1000 ^ @rdi ^ 0n17)  { test_statement(0x14EC); val = $ip >> @rdx & $ip | 0n6 & @rsi ; } elsif (@rsp << @rsp >> @rbp >> @rsp & @r11 & @r12 ^ @rsp & -$proc & +0x11 | @rdi & $buffer ^ @rbx <= @r10 & @r10 >> 0n19 & @rdi & $buffer ^ @r8 & @rdx) { test_statement(0x207A);  while  (0y10011 ^ -$buffer((@rbp ^ @r13 | @r9)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rbx | $ip((@rbx | $ip)  { test_statement(0x4FB); } elsif (@rbx)@rdi) { test_statement(0x15FB); } else { test_statement(0x2002); } } elsif ((@rbp)))@rdi ^ $buffer) { test_statement(0x1473); } elsif (@r8 & $ip ^ @r8 ^ @r10 | 15 ^ $buffer | @rsi < +$ip ^ @r8 ^ @r13) { test_statement(0x225);  for (val = 10; @rsp((0xD;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif ($proc | --@r11 | $teb == 0y1) { test_statement(0xC5C); } elsif (@rbx = $thread) { test_statement(0x470); } elsif (@r10 <> ~@r12) { test_statement(0x821); } else { test_statement(0x2561); }
$error$
$end$
5350
 if (@rsi + ~+@rax << $teb << @r13 >> @rbp & ~+@rsp << 12 & @rbx >> @rbx ^ $ip << 11 >> @r9 ^ $proc >> @r8 & 13 & @r13 | @rax << @rdx(@rsi + ~+@rax << $teb << @r13 >> @rbp & ~+@rsp << 12 & @rbx >> @rbx ^ $ip << 11 >> @r9 ^ $proc >> @r8 & 13 & @r13 | @rax << @rdx)  { test_statement(0x2360); } elsif ((0y1110) >> @rbx & $thread >> ~@rsp & @r8 ^ $teb > @r10 >> 0n7 ^ @rax >> 11 & 0n0 & @rdi) { test_statement(0x1EA2); } elsif ($buffer >> 0y100 = $thread >> ~@r13 & @rbp ^ $ip & 0x13 ^ @r11 ^ @rbx) { test_statement(0xD9F);  // /* This is a comment  } elsif ($teb ^ @rdx | @r9 | @r9 | @r9 >< $teb ^ @rdx | @r9 | @r9 | @r9) { test_statement(0xED6); } elsif (@rdx | @rsi | 0n10 ; $proc ^ @r11 | $ip) { test_statement(0x1C19); ; } else { test_statement(0x6DB); }
$error$
$end$
5351
 if (0n8 << 2 >> @rax << 0x8 >> @r12 & @rsp << @r9 & @rdx >> $thread > 0n8 << 2 >> @rax << 0x8 >> @r12 & @rsp << @r9 & @rdx >> $thread)  { test_statement(0x56E);  while  (-@r9 & @rbx -@r9 & @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
5352
 if (0xF << $thread << @rsp >> $thread >> @r10 | @rsi & 0x6 >> ($thread) & @rdx & $ip != 0n10 ^ -@r11 | $teb << 13 ^ @r13 & ~@r11 ^ @rdx | @r12 & @r11 & @r11 | 0x2)  { test_statement(0x996); } elsif ($thread >> @rsp & ~@r8 | (+@r13) ^ @r10 | @r8 & @rdi ^ @r11 == 0x11 >> (($buffer)) >> @rax ^ @rsp & $teb & @rdx) { test_statement(0x234);  // /* This is a comment   /* This is a not closed comment } elsif (@r13 & @rdx((@r8 >> @r12) { test_statement(0x4AB); }
$error$
$end$
5353
 if (@rdx << @rdx << @r8 >> 0y10001 << @rsi & @r12 << +$teb & -$proc >> @rbx & @rsi & @r12 | $buffer ^ @rbp >> @r12 | ~@rdi >> $thread ^ $proc ^ 0y10001 ^ @rbp | $proc ^ @r13 ^ @rax ; $buffer >> $ip << 13)  { test_statement(0x16FF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (+$proc) & @rsi ^ @rdx | 0n4 == @r12) ; }
$error$
$end$
5354
 if ($ip + $proc >> @r9 >> @r10 & $proc >> @r11 < @r10 << @r8 >> @rsp << @r8 >> @rbp & @rsp << ~+~@r8 & $ip & $buffer & +$buffer | ~@rbp >> @r8 >> @rsi ^ (@rax) >> @rdx)  { test_statement(0x1FFC);  for (val = 10; 12 & @r10 ! 12 & @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  for (val = 10; @rbp | @r10 >= 0y10011 | @rsp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb != @rbp) ; }
$error$
$end$
5355
 if (@rax + @r9 ^ @r11 << @rdi ^ @rbx >> @r10 | @rsp & $teb >> 0y1101 & @rsi & $teb ^ $ip >> @rdi & -@rbp ^ @r13 & ($ip))@r12 >> $ip & @r10 >> @rbx >> -@rdi & @r13 >> @rsp ^ @r12 << $buffer >> (+@r13) >> +$buffer)  { test_statement(0x13C); } elsif (@rdi << @rsi & @r13 & @r8 ^ @rax | 12 >> @r10 & 0xF = $buffer >> @rbx & @r9 & +@rsp & ($buffer) ^ @rbx >> 0y111 ^ (@r9) & @rsi) { test_statement(0x25E9); }
$error$
$end$
5356
 if ($proc + 0n12 << @rdx << $proc >> @r8 >> 0y11 >> @r8 ^ ~($proc) >> $proc & 0y1100 >> $proc >< $proc + 0n12 << @rdx << $proc >> @r8 >> 0y11 >> @r8 ^ ~($proc) >> $proc & 0y1100 >> $proc)  { test_statement(0x6F6); }
$error$
$end$
5357
 if ($ip >> $proc << @r8 >> 0y1001 >> -@r12 & 0n8 >> @rdi >> @rdi & $ip >> @r10 | @r9 << @r11 >> (@rax) >> (0y1011) ^ @r11 & @r8 & @rax ^ $proc & ~@r8 ^ @r12 ^ 0x7 | @rdx >> @rbx ^ @r9 & -@rbp ^ @r13 | $buffer & 10 ^ $thread <> @rsp << 0y100 << (0y10000) >> 0y10001)  { test_statement(0x23BA); } elsif (@r13 ^ 12 @r13 ^ 12) { test_statement(0x19DA); } elsif (@rdx >> $ip & ~@r12 <= @rdx >> $ip & ~@r12) { test_statement(0x112F);  /* This is a not closed comment  /* This is a comment */ } elsif ($ip ^ 0n17 ^ @rbp < $ip ^ 0n17 ^ @rbp) { test_statement(0x1BBE); } elsif (-@rdx ^ @r9)-@rdx ^ @r9) { test_statement(0x1DD4);  // /* This is a comment  }
$error$
$end$
5358
 if (@rsi + @rbx >> 0y1 & 0x3 >> @rbx ^ $ip >> @rdx ^ @r8 >> $ip | @r11 << @r9 | 0y1101 >> @r8 ^ 0x9 | @r11 ^ @rdx | @r8 ^ -0n4 | 0xC | @rbx <> @rbp & +@rdx >> +$teb >> @rbp & @r11 >> 0y110 ^ $proc << $buffer >> @r8 >> @rax ^ @r8 >> $buffer ^ $proc ^ $proc ^ $thread)  { test_statement(0x14A5); ; } else { test_statement(0x159A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 16 | 23 <> 16 | 23) ; ;  /* This is a comment */  for (@rax = $proc; @r13 < @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5359
 if (~@rax + +$buffer << 7 << @r10 & 0xD >> $buffer >> @rax & @rbx & @rdx & @r8 ^ 22 << @r13 & $proc >> 0n3 & +(@rdx) & (@rbp) ^ +@r12 ^ @rdi & 0n12((0n18 ^ 0n6 << @rdi >> $ip >> @rsp | @r11 >> $thread & +@rsi >> @r11 & @rbx & @rax ^ $teb & @rbp)  { test_statement(0x4CD);  break; @rax = @rdi ^ ~@r9 | 10 ^ @rdx | ~@rbp | ~@r11 ; } elsif (0n15 >> $buffer ^ ~@rax >> @r9 & 0y1110 ^ +@r12 ^ @r9((0n15 >> $buffer ^ ~@rax >> @r9 & 0y1110 ^ +@r12 ^ @r9) { test_statement(0x15D9);  This is a not opened comment */ } else { test_statement(0x6F7); }
$error$
$end$
5360
 if ($thread ^ $thread | @rbp << 0y10011 >> 0y101 >> @rbp ^ @rbx & $thread & @r10 ^ +$ip & $buffer ^ 0y0 | @rsi >> +(@rbp) & $buffer & 0x4 ^ @rsp & (+0y1000) | $proc ^ $proc | @r13 ^ @rsp $thread ^ $thread | @rbp << 0y10011 >> 0y101 >> @rbp ^ @rbx & $thread & @r10 ^ +$ip & $buffer ^ 0y0 | @rsi >> +(@rbp) & $buffer & 0x4 ^ @rsp & (+0y1000) | $proc ^ $proc | @r13 ^ @rsp)  { test_statement(0x1A51); ;  for (val = 10; $teb ; ~$teb ^ $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp >> @r13 ^ $ip >> @rsp & @r12 & 0y10000 ^ @r8 & @rdi ^ @r12 ^ @rsi | @r9 | @rbp & @rdx >= @r13 ^ @r9 & $thread & @r12 ^ $thread & (@r8) ^ 1 ^ @r10) { test_statement(0x2392);  /* This is a comment */ }
$error$
$end$
5361
 if (@rbp << -(@rsi) >> @rdx & @r11 << @rdx ^ ~4 << 0n7 >> 15 >> (0n11) & @rax >> @r10 | @r8 << $ip | $ip >> $thread ^ @r11 & @r12 ^ @r8 | @r13 & (-14) ^ ~@rdx ^ 0y10011 | @rsp | ($buffer) = @rax + 0x1 >> ((@r13)) << $ip & @r11 >> @rsi >> @rsp & 0y10001 >> @rdi ^ $proc >> @rsp ^ @rsp >> $buffer ^ (@r8) | $ip << @rdx >> 17)  { test_statement(0x66E); } elsif (@rdi << $teb >> @rbx & @r10 >> @r12 & $ip | 0xB == @rdi << $teb >> @rbx & @r10 >> @r12 & $ip | 0xB) { test_statement(0x52A); } else { test_statement(0x1276);  for (val = 10; @rdi | @rsp | @rax(((1) ^ $proc | $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment }
$error$
$end$
5362
 if (+$buffer >> @r13 << $ip & +@rbx >> ~@rsi & 23 >> 0x7 & $teb & 0y0 ^ $thread >> @r9 >> @r13 & @rax & $ip ^ @rbp & @r12 ^ 0xE ^ $buffer | +~@rsi << @rsi >> $thread ^ 0xE >> @r9 & @rax & @rsp >= +$buffer >> @r13 << $ip & +@rbx >> ~@rsi & 23 >> 0x7 & $teb & 0y0 ^ $thread >> @r9 >> @r13 & @rax & $ip ^ @rbp & @r12 ^ 0xE ^ $buffer | +~@rsi << @rsi >> $thread ^ 0xE >> @r9 & @rax & @rsp)  { test_statement(0x18AE);  This is a not opened comment */ ;  if (@rsp < @rsp)  { test_statement(0x1CD1); } else { test_statement(0x16A5); } } elsif (@r8 << $proc >> @r8 >> @r9 | 0n12 >> @r10 & @r8)5 << $ip >> +@r9 ^ @rax ^ $buffer | 0n2) { test_statement(0x21BA); }
$error$
$end$
5363
 if (@rdi + @rdi << @rdx << 0n10 >> 0y10000 << @r9 >> +$buffer >> @rax & +@r11 << $proc >> @rsi >> @rdx = @r10 & @rbp >> @r12 >> @r13 & @rdx & $ip & ($proc) ^ @rsi << -@r12 ^ $teb & @rdi & 4 | 0n15 << @rbp | @rbp >> 21 | $thread)  { test_statement(0xF3F); }
$error$
$end$
5364
 if (@r12 + @r12 << @r9 << @rsp >> +0n16 & $buffer << @rsi >> @r13 >> --@rsp ^ 0x9 & 2 | $ip << $ip & @r9((-@r12 + @r10 >> (+$ip) & $proc >> @r12 ^ $proc << @r10 >> $teb >> 0y111 ^ @rdx >> $proc & @rdx & $teb)  { test_statement(0x460);  /* This is a not closed comment  /* This is a comment */ } elsif (@rsp << $buffer & @rbx & $thread & @r10 ^ @r13))@rbp & @r9 & @rax | $proc ^ ((@r9)) & $thread | -@r8 & @r12 ^ $ip | ~0x10 ^ @r13) { test_statement(0x2573);  // /* This is a comment   while  (@r9 | @rsp <> @r9 | @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; ;  while  (@rsp))$teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5365
 if ($proc + @r8 << @r10 << @r9 >> @r12 ^ 5 << @rax & @rdx ; $proc + @r8 << @r10 << @r9 >> @r12 ^ 5 << @rax & @rdx)  { test_statement(0x1EBF); } elsif ($thread >> @r11 >> $ip | ~(@rdi) >> @rsp <= $thread >> @r11 >> $ip | ~(@rdi) >> @rsp) { test_statement(0x1E7B);  break; } else { test_statement(0xD80);  for (val = 10; +@r11)@rbp ^ @rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; }
$error$
$end$
5366
 if (($proc) + @rdi << @r12 << (@r13) >> ~@r9 >> @r13 >> @rbp ^ 0y1010 << @rbx ^ $teb >> @rax & @rax ^ @r11 ^ @rdx ^ @rbx | @r9 & @rbp >> @r11 | $proc & @r9 & @r11 | 0n13 & $thread ^ $buffer ^ @r10 | @rbp ! ($proc) + @rdi << @r12 << (@r13) >> ~@r9 >> @r13 >> @rbp ^ 0y1010 << @rbx ^ $teb >> @rax & @rax ^ @r11 ^ @rdx ^ @rbx | @r9 & @rbp >> @r11 | $proc & @r9 & @r11 | 0n13 & $thread ^ $buffer ^ @r10 | @rbp)  { test_statement(0x1B74);  /* This is a not closed comment  /* This is a comment */ } elsif (@rsi << +$teb & ~@r12 & @rax | 0y111 >> $thread & @r10 & @r10 | 22 & @r8 ^ @r13 ^ $proc))@rsp & 0n16 >> (@r12) ^ @rsi) { test_statement(0x249B); } elsif (0n7 >> 0x9 & @rsp ^ @rsi & @rsi ^ 23 ^ $ip ; 0n7 >> 0x9 & @rsp ^ @rsi & @rsi ^ 23 ^ $ip) { test_statement(0x236B); } elsif (@r13 ^ @r9 ^ @rsp | +0n10 ^ ~@rbx | @r11 | 0n14 <= @r10 ^ 0) { test_statement(0xCB0); }
$error$
$end$
5367
 if ($buffer << +$buffer << @r9((0y1001 << $ip << @rsi >> @rsi >> 0n17 ^ $teb | @rsi << @rsp & @rsi & -@rbx | -@rsp ^ $ip & @rax | +$ip ^ @r10 | 0xD)  { test_statement(0xBEA); } else { test_statement(0x25F1); }
$error$
$end$
5368
 if (@r13 & (-$proc) >> -$ip >> ($thread) & $thread ^ @r12 << -+@rdx >> @rsi >> @r8 & (@r8) >> ~@rax ^ -$ip >> @rdi | @r9 @rax & +@rdx ^ ($teb) | @rbp << @rsi >> 0xF | @r13 & @rdx)  { test_statement(0x21BE); } elsif (0y0 >< @r9 >> ~@r9 | @r10 >> @r13) { test_statement(0x228C);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x3 | @rdi | @rdi != 0x9 | +0n15) ;  /* This is a not closed comment ; } else { test_statement(0xA34); @rax = $teb | @r13 ^ 0n17 ; }
$error$
$end$
5369
 if (@rdi << $proc & @r13 << @rax ^ $ip & $proc & $proc ^ @rbp >< @rbp << $ip << @rax >> @r11 >> @r11 ^ $ip | @rbx >> -@r13 >> @rsp & @rbp ^ $ip >> $proc | @r11 ^ $thread & $thread ^ 0n3)  { test_statement(0xFEE);  /* This is a not closed comment  /* This is a not closed comment } elsif ($thread >> @r10 ^ $teb & (@rdi) | @r11 = @rsi << @r8 ^ 0y100) { test_statement(0x1B60);  /* This is a comment */ }
$error$
$end$
5370
 if (14 << @rax << @r8 & 0x6 | @r13 << $thread ^ @r10 & @rax | @r10 >> $buffer & @r13 & @r11 > @rdx << 11 << @r11 & ~7 & @r11 ^ $ip >> 0n3 >> @rdi)  { test_statement(0xB4F); val = @r8 >> @r11 & @r10 & $thread ^ @r13 & @rdi ^ @r12 ^ $proc ; val = (@r10) & $thread ^ @rbp ;  if (0 = 0)  { test_statement(0x224E); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer = $buffer) ;  if ($buffer ! @rsi)  { test_statement(0x18F0); } }
$error$
$end$
5371
 if ($thread + 0y1100 << (@r8) ^ $buffer)@rbp + 0n7 << $thread << $teb & $thread | $buffer << @rbp >> @r10 & 0n19 & @r11 ^ +-+-~(@r12) | @r10 >> $proc & @rsi & @r9)  { test_statement(0x1682); } else { test_statement(0x1BB1); }
$error$
$end$
5372
 if (-@rsi <> $buffer + @rsp >> 0y110 << 0y1101 ^ @r8 << $buffer >> @r8 >> @rsi ^ @rbp & @rsi & (-@rbx) | @rax << @rdi & $teb >> 23 | ~0n4 & @r9 & @r12)  { test_statement(0x781); } else { test_statement(0xC6F); }
$error$
$end$
5373
 if (@r10 + @r8 >> @rbx ^ @rdx << 0y110 | 0y10010 | -@rax & 11 & @rbx ^ @r9 ^ @r9 ^ 0x7 @r10 + @r8 >> @rbx ^ @rdx << 0y110 | 0y10010 | -@rax & 11 & @rbx ^ @r9 ^ @r9 ^ 0x7)  { test_statement(0xD19); } else { test_statement(0x22D0);  while  (@rdi <= @r8 ^ 0xA)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ }
$error$
$end$
5374
 if (-$teb >> @r8 << $proc >= -$teb >> @r8 << $proc)  { test_statement(0x248);  break; }
$error$
$end$
5375
 if (($ip) << +@r12 << $thread ^ $teb << @rbp >> ~@r11 ^ ($proc) & 0xB ^ $ip ^ @r12 ^ $buffer | +0y0 | @rdx & @rsp & @rsp ^ 23 ^ @rdx ^ $ip > @rsp << @r8 ^ @r10 | -@rsp << @r12 | @r12 >> @r9)  { test_statement(0xA1A); } else { test_statement(0x4F4); }
$error$
$end$
5376
 if ($ip >> 0xB >> -@rdx & @r13 & +@rsi >> @rsi ^ 0n2 << @r9 & @rdi >> ~~@rsi & @rsp <= @rdx ^ 11 & @r8 | 22 << 0n14 & $proc >> @rbp | @r9 >> $thread & @r11 & @rdi | 20)  { test_statement(0xC88); }
$error$
$end$
5377
 if (@rbx << 23 >> 21 < @rbp << $thread << @rsp >> $teb)  { test_statement(0xBDD); } else { test_statement(0xD1C);  for (val = 10; (@r8) ^ ~@rdx $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
5378
 if ($ip << @rdi << +@r13 >> @rsi >= 0xB << @rbp | @rbx)  { test_statement(0x1502); } else { test_statement(0x706);  // /* This is a comment   do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y10000 | $proc == $ip) ; }
$error$
$end$
5379
 if ($proc + (@rsi) << $ip << @rdx & @rbp << @r11 >> @r10 >> 0y1000 & -21 >> @rsi & $teb & @rax ^ $buffer << @rdi >> $teb >> @rbp | $ip & $buffer <= @r11 >> @rdx << $teb >> 0n14 >> @rdx)  { test_statement(0xB63); } elsif ($thread ^ 0x6 >= 21 << @rax >> 0xA & $ip >> ~-@rdi & @rbx ^ (@rdi) >> $proc ^ 0y1011 | @rbp >> @rbp ^ +@r9 & @rbp) { test_statement(0x1868);  for (; @rsi ^ @r10 @r11 ^ +0y1000 | $teb | @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  } else { test_statement(0x1AB0); @rax = @rdi ^ $teb ^ @rax ; }
$error$
$end$
5380
 if (@rdi << @r11 >> 16 << @r8 >> @r11 & @r12 >> $proc & 0xC >> ~$thread | 0y1010 << @r10 & 0n14 >> $ip = @rdi << @r11 >> 16 << @r8 >> @r11 & @r12 >> $proc & 0xC >> ~$thread | 0y1010 << @r10 & 0n14 >> $ip)  { test_statement(0x181D);  /* This is a not closed comment } elsif (@rdx >> @rax >> @r12 & @rbx >> @r10 | @rsi >> $teb | $thread ^ @rbx | @r8 ^ +@rbx | @rdi)@rsp << 0x8 >> @rbx >> @rdx & @r12 >> @r13 & -@r10 & $thread ^ $teb & $buffer ^ @r11 & +$thread ^ 0n5 ^ +@rsi) { test_statement(0x17EB); } elsif (0x11 >> $buffer & @r13 & 0n16 | @r8 & @rdx < 0x11 >> $buffer & @r13 & 0n16 | @r8 & @rdx) { test_statement(0x5C4); } elsif (@r9 & 0n16 >= @rsi ^ $buffer | @r10 ^ 23) { test_statement(0xB86);  break; } else { test_statement(0xF78);  /* This is a not closed comment }
$error$
$end$
5381
 if (@r13 + +$ip >> (@rbx) & $proc << $thread & @r9 & @rbp ^ @rdi << @r12 & @r13 ^ $thread >> $thread & $teb & $ip ^ ~11 0y100 >> @rdi ^ @rbp & @rbp ^ @rsp & @r10)  { test_statement(0x1DFE);  while  (@r10 & ~~@rsi ^ -@rdx ^ $ip | @r10 | 0y1111)$buffer ^ $proc ^ @rsi | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  // /* This is a comment  } elsif ($proc > $proc) { test_statement(0x250D); } elsif ($ip & @rdx & @rsi | +(@r11) ^ @rbp ^ $proc >= ~$thread >> @rax ^ $teb | @rdx ^ 0xE ^ $proc) { test_statement(0x1D46); ;  // /* This is a comment   // /* This is a comment  val = @rsp ; }
$error$
$end$
5382
 if ((@r8) + ~@rdx << @r9 <= (@r8) + ~@rdx << @r9)  { test_statement(0x87D); } else { test_statement(0x1BE7);  /* This is a comment */ }
$error$
$end$
5383
 if ($thread + $proc << $ip << @rdx ^ ($teb) >> @r10 & 0y111 >> @r11 & @rax & $ip != $teb + @r13 >> 0 >> 0xF >> 14 & $ip << @rsi >> @r10 >> ~0n4 & +@rdi | $teb >> 0x2 >> $thread ^ @rsp | $teb & @r8 | $teb)  { test_statement(0x1285); }
$error$
$end$
5384
 if ($thread + @rdi >> +@r8 ^ @r12 & 0y10001 | @rbx << @r13 & -@rdi & +~+@rbx ^ $thread >> $thread | $teb >> $teb & @r11($thread + @rdi >> +@r8 ^ @r12 & 0y10001 | @rbx << @r13 & -@rdi & +~+@rbx ^ $thread >> $thread | $teb >> $teb & @r11)  { test_statement(0x1011); } elsif ($buffer & @r12 & @rdi & -$buffer ^ @rsi ^ $ip ^ $thread ^ @r9 $buffer << $thread >> @rsi & $teb & @rsi | $ip >> @r13 & @rsp & @rdi | (@rdx) & @rbx) { test_statement(0x392);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( (+@rdx) | @r8 == @rsi ^ @rbp | @r9) ; } elsif (@r9 >> @rsp | +@rdi <= @rax ^ @r12 & @rax | @rsp & @rdi ^ ~0x0 ^ (0y1110) | 15) { test_statement(0x25BE);  while  ($proc != $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r12 & @r8 | 0x12 @r10 ^ 0n0) { test_statement(0xC81); } else { test_statement(0x2581);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi | @rdx | @r10 > @rsi | @rdx | @r10) ;  // /* This is a comment   for (val = 10; 0y10011 >= $thread;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (val = 10; @r13 @r13;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5385
 if ($teb + $proc << ~$thread << @r10 & @r12 ^ $proc << @r9 ^ @r11 & $thread | @rdi << $proc & 0y101 ^ @r13 >> @rdi > $thread + -+$thread >> @rdx & @r9)  { test_statement(0x1DCE); } elsif (@rdi & 0x0 & @rdx & @r9 | $buffer & ~$thread ^ 0y1011 & 0n10 < -@r9 & $thread & @r11 & +@r8 | -@rbp ^ @rsp & ($buffer)) { test_statement(0x31B); }
$error$
$end$
5386
 if (@rsi << 0y1100 << @rbx ^ $ip << @r11 >> 0x6 >> @rbx == @r9 >> @rax << 0x8 >> @rsp & $thread >> ~0n14 >> @r9 | @r12 << +0x5 >> $ip >> $thread & @rbp >> 16 | $ip)  { test_statement(0x157E); } elsif (@rbx >> @r13 & 0x13 >> +-$teb & $buffer & $ip ^ +$teb >> ($teb) != @rbx >> @r13 & 0x13 >> +-$teb & $buffer & $ip ^ +$teb >> ($teb)) { test_statement(0xB29); val = $buffer ^ -$teb | $thread ^ $proc ; } else { test_statement(0x857); @rax = $proc ^ 0xC | @rax | @r9 ; ; }
$error$
$end$
5387
 if (@r9 + -$proc >> @r9 >> $buffer >> 0y1010 ^ @rax >> @r11 | (@rbp) ^ @r11 & $buffer & @r8 ^ @r10 ^ @rbx | @rbx >> ~@rdi ^ $thread ^ @rsp ^ ~$proc | ~$teb & ~@rbp ^ @r9 ^ $proc >< @r9 + -$proc >> @r9 >> $buffer >> 0y1010 ^ @rax >> @r11 | (@rbp) ^ @r11 & $buffer & @r8 ^ @r10 ^ @rbx | @rbx >> ~@rdi ^ $thread ^ @rsp ^ ~$proc | ~$teb & ~@rbp ^ @r9 ^ $proc)  { test_statement(0x17D7); } else { test_statement(0x1F21); }
$error$
$end$
5388
 if ($proc + 0y1110 ; @r12 + @rsp >> @r10 << $buffer & ($proc) << 0x6 >> -@r11 ^ @r13)  { test_statement(0x55B); }
$error$
$end$
5389
 if (0y11 >> @r11 << $buffer >> $proc ^ @rdx << 0n19 >> @rdx >> @r8 & @r8 & @r13 & @r8 ^ (@r13) | @r9 << @rsi ^ @rbp >> @r13 & @r9 & @rbx | @r13 ^ 0x6 < 0y11 >> @r11 << $buffer >> $proc ^ @rdx << 0n19 >> @rdx >> @r8 & @r8 & @r13 & @r8 ^ (@r13) | @r9 << @rsi ^ @rbp >> @r13 & @r9 & @rbx | @r13 ^ 0x6)  { test_statement(0x1315);  // /* This is a comment  ; } elsif (@rsp >> @r13 & $buffer ; @rsp >> @r13 & $buffer) { test_statement(0xEBC);  for (val = 10; @r9 | ~@rbp | 7 <= 0x7 | 0n11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rax >> +@r12 & @r10 & @rax | @r12 & (@r9))~@r8 >> @rax ^ (@rsi) & @r9 ^ @r9 ^ @rsi) { test_statement(0x17EB);  /* This is a comment */ } elsif (0y1000 & @r12 == 0x10) { test_statement(0xC9);  while  ($ip)$ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rdi ^ @r11 | $thread((@rdi ^ @r11 | $thread) { test_statement(0x1AFE); }
$error$
$end$
5390
 if ($teb + @r13 ^ 0y1110 << (@rsp) >> $ip >> $buffer & 0x6 ^ $thread >> @r8 & @r13 ^ @r11 ^ 0x1 ^ @rdx | $thread << @r9 & ~0x10 >> $ip & $buffer & $proc ^ 0x7 >> $proc | @rbx >> $ip | @r9 ^ $thread | @rdx ^ @r13 = @rbx + $thread << $buffer << $teb >> 0y110 >> @rsi >> (@r8) & @rsi << @rbx | $thread & 0y100 & 0y1010)  { test_statement(0x85B); } elsif (@r8 & @r13 >> $proc & (0x13) & $proc ^ $thread & @rsp ^ +6 & @rax ^ $ip ^ @rdx != $ip >> 2 >> 0x10 & $thread) { test_statement(0x267D);  This is a not opened comment */ } else { test_statement(0x206F);  if (0y1110 | @r10 < +0n9 | @rsi | @r13)  { test_statement(0x1F4B); } else { test_statement(0x1851); } ; }
$error$
$end$
5391
 if (@rsp + @r10 >> $buffer ^ $teb << $ip | ~@rsi << @r13 >> @rbp ^ ~0y10 & @rax | @r12 >> @r12 & ($buffer) ^ $teb & @r8 ^ @rbp == @rsp + @r10 >> $buffer ^ $teb << $ip | ~@rsi << @r13 >> @rbp ^ ~0y10 & @rax | @r12 >> @r12 & ($buffer) ^ $teb & @r8 ^ @rbp)  { test_statement(0x180E);  if (@rdx & $thread ^ 14 | @rdi >= @rdx & $thread ^ 14 | @rdi)  { test_statement(0x1A70); } else { test_statement(0x1CCC); } ; } elsif (@r9 >> 0n16 >> $ip & @r10 >> @rax & @r10 ^ $ip ^ @r9(($proc << -$thread >> ~@r12 >> @r11) { test_statement(0x454); } elsif (@rdi >> $ip >= $thread >> 0n7 & 13 | @r8 & 0n3) { test_statement(0x18C4); } else { test_statement(0x1421);  This is a not opened comment */ @rax = $ip | @r10 | @rbx ; }
$error$
$end$
5392
 if ($teb << $buffer >> $proc ^ 0n13 >> 0xA = @rdi << @rbp << $buffer)  { test_statement(0x1AEC); }
$error$
$end$
5393
 if (@rsi >> @rdi & @r8 >> $proc((0n14 << +@rsi << +$buffer >> @r9 & @rdi << @r12 | @rdi << @rdi >> @r11 | 0x11 >> @r13 & 0x12 & @r8 ^ (20) ^ @r11 ^ ~($buffer))  { test_statement(0xA50); } elsif (@rsp << ~-@rsp >> @rsi >> 0xD & @rbp >> @r11 & @rbp ^ 17 & (@rsp) & @r13 ^ $proc ^ @r9 | @rdx >> $proc ^ @rsp & $proc | @rsi & $thread | $buffer ^ @r9 | 0x13 | $proc = @rsp << ~-@rsp >> @rsi >> 0xD & @rbp >> @r11 & @rbp ^ 17 & (@rsp) & @r13 ^ $proc ^ @r9 | @rdx >> $proc ^ @rsp & $proc | @rsi & $thread | $buffer ^ @r9 | 0x13 | $proc) { test_statement(0x19BD);  // /* This is a comment   if (~$buffer | +0y10001 ; @r10)  { test_statement(0xF85); } else { test_statement(0xB80); } } elsif ($proc >> @r12 | @rdi & $ip ^ @r10 ^ +0y10010 | @rbx ^ @rax <= @rbx >> +0n19 & ~@r12 ^ -0y1010 & $buffer) { test_statement(0x201F); }
$error$
$end$
5394
 if (@rsi + $buffer >> (0y11) << 0n16 & @rdx >> @rax >> @rbx & @rdi >> @rbp > @rsi + $buffer >> (0y11) << 0n16 & @rdx >> @rax >> @rbx & @rdi >> @rbp)  { test_statement(0xDD2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n8 | @rsi ^ @r12 = $teb) ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdi ^ @r11 == (@r13) ^ @r12) ;  while  (@rdi != @r13 | @rdi)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0x4 ! @r8) ; } elsif (0y111 << @r9 = 0y111 << @r9) { test_statement(0x171C);  for (val = 10; -@r12 | @r8(@r8 ^ @rdi | @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  while  (@rax((~0xB)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; } else { test_statement(0xEBE);  for (; @rsi ^ @rax | @rbx = @rsi ^ @rax | @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ((~@rbp) ; (~@rbp))  { test_statement(0x4F2); }  // /* This is a comment   for (val = 10; @r8 < @r9;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5395
 if (@rbp + @r13 & @rsi << +0xC & $proc | @r9 >> @rdx & @rsp & +0n5 & ~20 ^ @rdx & --$thread & @rax ^ $proc ^ @r12 ^ $proc | @rdx & +0n5 & @rsi | $ip & 11 >= $proc << @r13 | @r12 << @r13 & $thread >> @rsp)  { test_statement(0xCCA); val = @rsp >> $teb ^ @r10 ^ @rbp ; } elsif (17 << 20 & @r8 & +@r12 ^ (@rsp) ^ 0x9 & @rbp((@rdi << @rbp >> @r8 ^ @rdi | @rbp & $proc ^ $ip & $thread ^ 0x8 | (($proc)) & @r11 ^ @rdi | ($teb)) { test_statement(0x61B); }
$error$
$end$
5396
 if ((-(@r9)) + @r9 & @r11 << 0y10001 | (@r8) ^ $teb & @r10 ^ @r12 ^ $buffer == (-(@r9)) + @r9 & @r11 << 0y10001 | (@r8) ^ $teb & @r10 ^ @r12 ^ $buffer)  { test_statement(0x55B); }
$error$
$end$
5397
 if ($proc + @r13 << $teb << $ip ^ @rsp << @r13 >> @rsi >> @r9 & $ip & $teb($proc + @r13 << $teb << $ip ^ @rsp << @r13 >> @rsi >> @r9 & $ip & $teb)  { test_statement(0x2D0);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsi | @rsp ^ 0n15)@rsi | @rsp ^ 0n15) ;  while  (-0xB ^ @r12((+($thread))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp << @r12 >> $proc >> $teb ^ @r12 == @rsp << @r12 >> $proc >> $teb ^ @r12) { test_statement(0x141C); }
$error$
$end$
5398
 if (+@rsp + @rdi >> ($teb) >> @r8 & $teb >> 11 & @rdi | @r10 >> @r9 | -0n19 >> @r8 ^ 0y0 ^ @rax ^ ~@rdx | 0x1((@r13) + @rdi << @r13 << @rsp & $ip << 5 | @rsp ^ @rbx & $ip)  { test_statement(0x25DF); }
$error$
$end$
5399
 if (@r10 + @rsp & +@r12 & 0y1010 >> 0y1000 & +@rsi & $thread ^ @rsi << ~16 & @r12 >> 0xD ^ @rdx >> @r10 & +0y1101 ! -@rsi + @rsp >> 0n9 & ~@r13 & 20 ^ @r9 >> 16 >> $ip ^ $proc ^ @rsp & $proc | @rsp & @r9 >> @rsi)  { test_statement(0xC5E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer & @rax | 0y101 ^ @rbx(@rsp ^ @r10) ; } else { test_statement(0x1ECF); }
$error$
$end$
5400
 if (@rdi + $teb ^ @r8 >> @rdx & 0xB >> @rdx >< @rdi + $teb ^ @r8 >> @rdx & 0xB >> @rdx)  { test_statement(0x36E); } elsif (@rbp << $proc & @r11 >> -$buffer & +$thread & 0y11 | $thread & $thread ^ 7 & @r12 | (@r13) | 0y1101 | @r13 | +@r9))0n12 >> $proc >> @r11 & @rsp & @r13 ^ @r13 >> @r13 & -$buffer ^ +$thread & -$thread) { test_statement(0x222A); }
$error$
$end$
5401
 if ($teb + @rdi & 0y1011 >> 0x5 & @rsp & @r8(($teb + @rdi & 0y1011 >> 0x5 & @rsp & @r8)  { test_statement(0x1B2C);  This is a not opened comment */  This is a not opened comment */  for (; @rsi | @r11))@rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ; } else { test_statement(0x5DB);  for (val = 10; @r13 ^ ~@r11 | $ip >< (@rdx);val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5402
 if (@r13 << @rdi >> 0n19 << $proc >> $thread & -@rax >> 0n14 & 0y10 ^ @rsi << @rsi & +@r8 | @rbx << -$teb >< @r9 << -@r11 & $buffer << ~@r11 >> @r8 ^ @r13 & @r13 ^ @r10 >> +@r9 & -@rdx ^ 0n4 ^ @rdi ^ @r12 | @r12 >> @r12)  { test_statement(0x2079); @rax = @rdx >> $thread & (@r8) | @r13 ^ @r8 ^ +$buffer | ~@r8 ^ @r10 | @r12 ; val = @rdi ;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer = -@rbx) ;  break;  // /* This is a comment  }
$error$
$end$
5403
 if (@r12 ^ @rbp << $teb >> @rbx | +$ip >> $ip ^ +@r13 & @rax | @r10 & $buffer ^ @rbx))@r12 ^ @rbp << $teb >> @rbx | +$ip >> $ip ^ +@r13 & @rax | @r10 & $buffer ^ @rbx)  { test_statement(0x2D7);  break;  if (~@rbx | -$ip | @rbx(~@rbx | -$ip | @rbx)  { test_statement(0x69B); } elsif (7 <= 0x3 | @rsi) { test_statement(0x94E); } elsif (@r12((@r12) { test_statement(0xC7A); } elsif ($proc(($proc) { test_statement(0x587); }  while  ($proc | @r13))0n17 | @r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  /* This is a not closed comment  for (; --@rax ; 0n2;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  ; } else { test_statement(0x701);  break;  /* This is a comment */ }
$error$
$end$
5404
 if ($teb << (0x3) & @rbx >> $buffer | 2 << +@rsi >> $thread ^ (@rdi) >> 0xF ^ @rsp($teb << (0x3) & @rbx >> $buffer | 2 << +@rsi >> $thread ^ (@rdi) >> 0xF ^ @rsp)  { test_statement(0x1A1);  This is a not opened comment */  /* This is a comment */ } else { test_statement(0x8E8); }
$error$
$end$
5405
 if (+@rsi + @rbx & @r9 | @rax >> @rsi & 17 & ~$thread & 2 ^ @r12 & @r12 <= @rbp + $buffer ^ @rax << @rax >> @r9 >> $teb ^ @r8 & @rbx | @rsi >> 21 >> @r11 & $ip >> @r12 ^ @rdi >> @rsi & $proc & 0y1000 ^ @rdi ^ @r8 ^ @rsp)  { test_statement(0x15B1);  while  (23 & @rdx ^ @rsp ^ @rbp | @rdx | @r9 <= ~@r8 ^ ($teb))  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0x4 & $teb >> @rdi & -0y10011 & $buffer ^ $teb | @rax | $thread & -0n9 > 0n7 << $buffer >> 0x6) { test_statement(0x24E6);  while  (@r9 | @rbp | @rbp > @r9 | @rbp | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1639);  if (@rsp | @rax == @rsp | @rax)  { test_statement(0xE4F); } elsif (+0x0(-@r12) { test_statement(0x2598); } }
$error$
$end$
5406
 if ($proc + @rsi << 4 << @rsi >> @r12 >> @rsi & $thread << $ip >> @rdx == (-5) + @r12)  { test_statement(0x1EF);  if ((@rbp) & 0n7 ^ -$proc ^ +$teb | $buffer ^ +(-@r12) | @r13 < @rdx | $ip ^ ($teb) | @rdi)  { test_statement(0x81B); } else { test_statement(0x1EF5); }  This is a not opened comment */ } elsif (@r13 << @rbx & 0n16 & @r8 | @r10 >> @rbp != @r13 << @rbx & 0n16 & @r8 | @r10 >> @rbp) { test_statement(0x24DC); ; } elsif ($teb & @rbx ; $teb & @rbx) { test_statement(0x332);  This is a not opened comment */ ; } elsif ($proc ^ @r9(($proc ^ @r9) { test_statement(0x194E); }
$error$
$end$
5407
 if (0n8 + $ip << 0y110 & 0n3 << @r12 & ~@r10 ^ @r11 >> 0x12 >> $thread | $buffer << @r10 >> 6 >> 0n4 | ~@rdi >> 0y1111))@rdx + @r12 << @rdx << 0xD >> $thread & @rsi << @rdx >> 0n16 >> @rdx)  { test_statement(0x1F92); }
$error$
$end$
5408
 if ($teb + @r13 << @rax & ~@r9 >> $thread >> @rdx ^ +@rdi >> @rbp & ~$teb >> +@rsi & @rbp ^ @r8 & @r13 & (@rax) ^ -(0n10) & @rbp ^ @r12 | $thread > @rax | @rsp << $teb >> @rdi ^ ~@r13 ^ @r12)  { test_statement(0xC86);  for (@rax = @r10 & @r9 ^ @r10 | 0y100; $buffer & @r12 | 0y1100($buffer & @r12 | 0y1100;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer >> $proc >> $buffer ^ 5 & 0x8 & @rsp | @rbp ^ 0xB & $buffer(($buffer >> $proc >> $buffer ^ 5 & 0x8 & @rsp | @rbp ^ 0xB & $buffer) { test_statement(0x21E2); } else { test_statement(0x1F20);  if (-@rsp ^ 0n3 | @r13 | $teb < -@rdx | @rbx)  { test_statement(0xD5D); } elsif (0 <= 12 | 14) { test_statement(0x1E7); } else { test_statement(0xC3E); } }
$error$
$end$
5409
 if (@r13 + @rdx & 0xB << @rbx & @r10 != @rbx + 0y101 << @rbp << ~(0x8) >> @r13 << @rdx ^ @rax << $teb >> @rax & $thread >> $teb & @rax & 0 ^ @rsi >> 14)  { test_statement(0x2653); } elsif ($buffer >> @rax >> @rsi | @r9 >> @rdx & $buffer & @rbx <> -@r13 | @rsi >> @r12 & +$thread ^ $thread) { test_statement(0x841);  /* This is a not closed comment } else { test_statement(0x15B6);  while  (@r11 | @r9 | $thread >= $ip ^ @rbx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5410
 if (@r8 + @r12 >> $teb << @rbp >> 3 >> -0n13 & @rsi << @r11 & @r8 >> ~@r9 | 0n16 << @r12 >> @rdi ^ @rsi & @r12 & $buffer | @r10 >> +0n15 ^ @rbp & 0y1010 <= $ip << +@rsi >> @r10 << @rsi)  { test_statement(0xC03);  for (val = 10; 0y1111 & @r11 | $teb ^ @rdx | @r13(@rdx & @r11 ^ $proc;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ ;  if (@rsp(@rsi)  { test_statement(0x10BD); } elsif (@rbp < $thread) { test_statement(0xD63); } elsif ($thread(~@r11) { test_statement(0x240E); } else { test_statement(0x2310); }  while  (0 <= @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0 & ~@r12 >> 0n1 & @r13 ^ @r11 >> $proc | @rdx ^ @rax))0 & ~@r12 >> 0n1 & @r13 ^ @r11 >> $proc | @rdx ^ @rax) { test_statement(0x13F); } else { test_statement(0x9BB);  This is a not opened comment */ }
$error$
$end$
5411
 if (@rdx + @rsi & @r11 << @r11 >> 0n1 >> @r9 & $thread >> 0y1110 ^ @rdi & 0x9 | @r10 >> @r9 >> $teb ^ $proc >> @r8 & 0y1100 & 0n3 ^ @rbp & @r12 ^ $teb ^ 1 | 0n11 >> @rsi & 0x12 & @rdx ^ $buffer ^ @rbp ^ $proc @rdx + @rsi & @r11 << @r11 >> 0n1 >> @r9 & $thread >> 0y1110 ^ @rdi & 0x9 | @r10 >> @r9 >> $teb ^ $proc >> @r8 & 0y1100 & 0n3 ^ @rbp & @r12 ^ $teb ^ 1 | 0n11 >> @rsi & 0x12 & @rdx ^ $buffer ^ @rbp ^ $proc)  { test_statement(0x11E1); } else { test_statement(0xB96); }
$error$
$end$
5412
 if ($teb >> @rdx << 0x9 >> @rsp & -~~$teb >> @r13 & 23 >> $ip ^ @rbx << -0n8 >> @r8 ^ @rdx & @r8 & @r11 ^ (@r10) & @r11 | @r8 << $teb >> @rsi >> +@rdx & 20 <> $buffer << 6 << @rax & $proc ^ @rsi << $ip ^ $thread ^ @rdi & -@r12 ^ +@rdi | 0x13 << ~@rbp >> @rax >> $thread | $buffer >> @r10 & 0n1)  { test_statement(0x1757);  for (val = 10; 16 & 0n4 $buffer;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } @rax = @r9 & @rsi ^ @rsp ^ @rsp ;  break;  for (val = $buffer; @rdi)@r9;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp << $proc >> $thread ^ @rax & 17 & @rbp ^ @rbp ^ @rbp ^ @rsi >< @rsp << $proc >> $thread ^ @rax & 17 & @rbp ^ @rbp ^ @rbp ^ @rsi) { test_statement(0x18F7); }
$error$
$end$
5413
 if (@r8 + @rdi >> @rdx & -@rax << 0y1 >> @rdx ^ @r12 << $teb ^ @rax >> $proc & @rbp | $teb((@rsp | $ip << 10 >> 0xC)  { test_statement(0x26B); } elsif (3 << @rsp >> $teb >> @rsi ^ @r12 ^ @r10 & @rbx | @rdx & @rbp ^ ~@r10 & @rsp ^ @r13 | @rsi & @r8 | ~@r12 | -(@rbp) <= @rax << $proc & +$proc ^ +-@r12 >> $teb & 17 & ~@r9) { test_statement(0x9E8);  /* This is a comment */  // /* This is a comment   This is a not opened comment */  /* This is a not closed comment } elsif (@r11 ^ 0y10010 & @r13 ^ @rax ^ @rsi | $ip == @rax >> @rax & @r10 & ~@rdx ^ -0x2 ^ 0n6) { test_statement(0x257A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $teb | @rsp == $teb | @rsp) ; } elsif ($ip ^ @r8 | @r8))$ip ^ @r8 | @r8) { test_statement(0x1B0B); } elsif (@rax | $ip | $thread <= @rax | $ip | $thread) { test_statement(0x17CE);  This is a not opened comment */ } elsif ($teb | @rax ; $teb | @rax) { test_statement(0x1970);  // /* This is a comment   break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp > @r13) ; } elsif ((@rdi) $proc) { test_statement(0xDFB);  while  ($thread <= $thread)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } val = @r13 ; } else { test_statement(0x24AE); }
$error$
$end$
5414
 if (~@r8 + +@rbx >> @rdi & @rsi >> 0y1010 >> (@r12) & $proc >> @rdi | @r11 << @r8 ^ $teb >> @rbx & 21 & 0x13 ^ @r8 $thread + (@rsp) << 0n13 << ~0n16 & @rdi << 0xA >> $proc & @r11 >> @r10 & @rbp | 0xE >> $buffer >> @rdx | 0y100 >> @rsp & 0n14 ^ (@rbx) | @rdi)  { test_statement(0x1008);  // /* This is a comment  } else { test_statement(0x26AD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp ^ $ip | @rdi >= @r10 ^ @r12 | $buffer | @r10) ; }
$error$
$end$
5415
 if (0xA + @rbp >> $buffer << $buffer & 17 ^ @rsi ^ (0y10000) & @rbp & $proc | $teb >> $thread >> @r9 & @rbx >> @rbx ^ @r8 >> -$teb ^ 0 & @r10 | 0xA & (@rsp) & +$thread ^ @r9 ^ @rdx ^ @rdx >< 0xA + @rbp >> $buffer << $buffer & 17 ^ @rsi ^ (0y10000) & @rbp & $proc | $teb >> $thread >> @r9 & @rbx >> @rbx ^ @r8 >> -$teb ^ 0 & @r10 | 0xA & (@rsp) & +$thread ^ @r9 ^ @rdx ^ @rdx)  { test_statement(0x328); } else { test_statement(0x899);  // /* This is a comment   while  (0x10 >< @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  if ($ip >< $ip)  { test_statement(0x1660); } elsif (@r8 ; $buffer) { test_statement(0x459); } }
$error$
$end$
5416
 if (0n4 + @rbp >> $ip == 0n4 + @rbp >> $ip)  { test_statement(0x435); } elsif (+@r13 >> 7 & -@rsp >> @r11 & @rax & +(20) ^ @rsi >> @rsi ^ @rbp == 21 << @rbx >> @r8 & +(@r10) & @rbx ^ @rdi >> @rbp | @rbx >> 0y1110 & @r12) { test_statement(0xA02);  This is a not opened comment */ } elsif (~@rsi & 0n7 > ~@rsi & 0n7) { test_statement(0x22B9); } else { test_statement(0x11BC); }
$error$
$end$
5417
 if (~@rbp + @r13 << 0n9 ^ +@rsp << 23 & 0n15 >> @rbp | @rbp >> $ip & @rsp & @rbp & $ip ^ @r13 & @r13 & @rbx ^ @r10 & @r12 | 0n1 >> ($thread) & @r13 & $buffer ^ @r10 | +$buffer | @rbp ^ @r8 | $buffer | 0xC <= ~@rbp + @r13 << 0n9 ^ +@rsp << 23 & 0n15 >> @rbp | @rbp >> $ip & @rsp & @rbp & $ip ^ @r13 & @r13 & @rbx ^ @r10 & @r12 | 0n1 >> ($thread) & @r13 & $buffer ^ @r10 | +$buffer | @rbp ^ @r8 | $buffer | 0xC)  { test_statement(0x1661);  /* This is a not closed comment } elsif (@rdx << $buffer >> $proc >> (@r11) <> @r11 >> @rax & +@r8 >> -@r11) { test_statement(0x13DF); } elsif (0y1000 >> @rax & 15 | @r8 & @r9 ! ~@rdi & @rax & 1) { test_statement(0x485);  /* This is a not closed comment  if (@r11))@r8)  { test_statement(0x2678); } else { test_statement(0x2451); } } else { test_statement(0x1410); }
$error$
$end$
5418
 if (@rdx << 0x0 << 0n17 >> 0y10011 << @rax >> $buffer | 0x10 & $ip & @r9 & $proc <> @r9 + (0x13) >> @r11 >> $teb)  { test_statement(0xB0F);  if (@r12 & @r9 ^ 0y10001))@r13)  { test_statement(0x1063); } elsif (@rbx ^ @r10 | @r13 ! $buffer ^ ($proc) | +0y0) { test_statement(0x2190); }  // /* This is a comment  } elsif ($teb << 0y111 ^ (+@r11) & @r10 & 0x4 | (0xC) >> (0n5) < $teb & @rdi & @rbp ^ ~@rbp & 0y1 ^ ~@r10 & @rdi | 0x2 ^ 21 | 3 ^ @r10 ^ $thread) { test_statement(0x35F); }
$error$
$end$
5419
 if (@rax << 1 >> 0xB << @rdi ^ @rsp & @rsi >> @rsi & $ip ^ @rdx >> $ip | 0n12 ^ -0x7 >> @r10 ^ $teb & 0n0 ^ @rdx)@rax << 1 >> 0xB << @rdi ^ @rsp & @rsi >> @rsi & $ip ^ @rdx >> $ip | 0n12 ^ -0x7 >> @r10 ^ $teb & 0n0 ^ @rdx)  { test_statement(0x2537); } elsif (0y110 >> @rax >> @rbx ^ @rax >> 0 & @r12 & $ip ^ @rax & 0xA | 0n7 & @r12)@r8 << +~$ip & @r12 >> $ip & @rsp & @rsp ^ @rbx >> ~0x1 ^ @rdx & @r12) { test_statement(0x2375);  if (~@r10 | @rax < ~@r10 | @rax)  { test_statement(0x23A3); } else { test_statement(0x16C7); } val = 23 ^ ~@rsi | @r11 | @rsp ;  /* This is a comment */ val = $thread ; @rax = @rsp ; val = @rax ; }
$error$
$end$
5420
 if ($teb ! $teb << $teb << $teb & @rsp << @rdi >> @rbx & $thread)  { test_statement(0x138D); } else { test_statement(0x3F3); }
$error$
$end$
5421
 if (0y10 + $thread ^ @rsi << $ip >> @rbp ^ @r11 >> $thread ^ +0xF & @r13 | @r10 << @rbp & @r10 >> +@r13)@r12 << @rdi << ~@rbx >> $thread >> @r8 >> @r13)  { test_statement(0x19F7); } elsif (0x7 ^ @rbp >> @rax <= 0x7 ^ @rbp >> @rax) { test_statement(0x243D); } elsif (@r9 >> 0n12 & $teb & @r13 | 0y1111 ^ ~@rdx ^ $buffer)0y101 >> @rdi & @rdx | 0y101 & 0n6 | @r12 ^ @rsp) { test_statement(0x26D9); } elsif (-@rsi & @rsp <= 0x2 & $thread ^ +@r9 ^ @rbp) { test_statement(0x269A); } else { test_statement(0x157A);  // /* This is a comment  }
$error$
$end$
5422
 if (@r11 << @r11 & @r13 << $thread >> @r9 ^ $buffer << 0x13 & @r12 >> @rdi & $ip | +6 << @r12 >> @rsi | $buffer & 0y1110 | 0n8 & @rsp ^ @rbx ^ @r8 | @rax ^ +~@rbp == @r11 + 0 << ~3 << @rbp ^ @rdx << $teb >> @rax & @r13 >> @rax)  { test_statement(0xC49); }
$error$
$end$
5423
 if (3 + @r10 << $thread >> +$buffer << 0xC >> @rax & @r9 >> $buffer & 0n0 & 0y0 < @rbx + (@rsi) << ~@rdi & @rbp << @r8)  { test_statement(0x12B6);  while  (@r9 | @rax | @r11 @r9 & $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@r11 >= $buffer | @r13)  { test_statement(0x3E2); } elsif (21 > $thread | @r11) { test_statement(0xFE5); } elsif ($teb(($proc) { test_statement(0xF7D); } elsif (@r11 == 10) { test_statement(0x12BA); } elsif (@rax((@r11) { test_statement(0x2433); } } elsif ($buffer >> 1 >> --@r9 & @rdx & @rax)16 << @rdi & $ip >> 0y1010 & @rdi | @rsp & @r9 | $buffer & @r13 | @rbx) { test_statement(0xE37);  // /* This is a comment  } elsif (~@r12 >> @rdx ^ $proc | @rdi = @r12 & $buffer ^ $teb & @rbp ^ $buffer ^ @rsi | @r13 | @r12 ^ 0x4 | 0n16) { test_statement(0x17B9); val = @rdx ^ @r12 ; } elsif ($proc & @rbx ! 0y1110 & $ip | @r9) { test_statement(0x1634); } elsif (@rdx ^ -$proc | @rax | @r12 > @rdx | 0y1101 | $proc) { test_statement(0x241E);  /* This is a comment */  if ($proc != -@r11)  { test_statement(0x2448); }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r9 >< @r9) ; }
$error$
$end$
5424
 if ($proc << 6 << $ip >> (@r8) & @rdi << @rsp & (@rax) & $buffer & @rsi ^ 0xA >> 2 >> @rbp & $proc | $thread << 0n12 & $thread >> +0x0 | $thread | $teb & (0x9) ^ $buffer | $teb | @r11 = $proc << 6 << $ip >> (@r8) & @rdi << @rsp & (@rax) & $buffer & @rsi ^ 0xA >> 2 >> @rbp & $proc | $thread << 0n12 & $thread >> +0x0 | $thread | $teb & (0x9) ^ $buffer | $teb | @r11)  { test_statement(0x971); } else { test_statement(0xA35); }
$error$
$end$
5425
 if (~0y1101 + @rsi >> -@r13 ^ $thread((~0y1101 + @rsi >> -@r13 ^ $thread)  { test_statement(0x1DA6);  // /* This is a comment  } elsif (@rbx >> @r12 >> $buffer & @rsp >> @rbx & @rbx | $buffer >> 0n6 & $ip ^ -@r12 & @rbx | @r8 & 0x11 | 0y1000 ^ @rbp | @rsp | @rsp @rbx >> @r12 >> $buffer & @rsp >> @rbx & @rbx | $buffer >> 0n6 & $ip ^ -@r12 & @rbx | @r8 & 0x11 | 0y1000 ^ @rbp | @rsp | @rsp) { test_statement(0x1203); }
$error$
$end$
5426
 if (@r8 + @r9 & 0xC >> 15 | @rbp << @rsi & @r10 | @rbx ^ $ip & @rbx | @r8 & @r10 ^ @rbx ^ (@r10) == @rbp & @r10 | @r13 << $thread & @rdx >> 14 & $teb ^ 0n4 ^ @r8 ^ $teb)  { test_statement(0x13F);  for (val = 10; @rsp | @rsp ^ $proc | $teb | @rax((0y0 & -@rsi ^ +@r9 | @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment  This is a not opened comment */ } elsif (@rdi << $teb >> 0y1 >> @rsp ^ @rbx >> @rbp($thread << @rax >> 0y10000 ^ @rbx >> +20 & @r11) { test_statement(0xEEE); val = $thread | @r10 ^ @rsi | @r13 | @r12 ;  // /* This is a comment  @rax = @rbx ; } elsif (0n18)@r8 & $buffer & $thread ^ $thread ^ @r13 ^ $ip | 0x3 | @r13 ^ @r12 | $proc | $proc) { test_statement(0x475); } elsif (@rdx | 0x5 != @rdx | 0x5) { test_statement(0x7EE);  break;  This is a not opened comment */ } elsif (4 ^ @rsi | @r13 != 4 ^ @rsi | @r13) { test_statement(0x1AC); val = ~0n4 ; } elsif (@r13 | @r11)@rbp) { test_statement(0x5D2);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 != @rdx) ;  break; } elsif (20)20) { test_statement(0x1926); } elsif (@rsp ! @rsp) { test_statement(0x207A);  if ($buffer < @rsp)  { test_statement(0xEA2); } } else { test_statement(0x1731);  if (-+@rsi ^ @r10(@r12 | $ip | 0y10010)  { test_statement(0x1859); } }
$error$
$end$
5427
 if ($proc + +0x13 >> 0y111 >> 0y10000 >> @rsp & @r13 << $buffer = @r10 << @rsp << @rdi >> -+$proc << 21 >> $teb >> @r9 | $buffer << $ip & 0y10010 & @r10 & $buffer)  { test_statement(0x641); } else { test_statement(0x520);  // /* This is a comment  }
$error$
$end$
5428
 if (@rdx + $buffer >> @r11 >> $teb >> @rsi | (~@rdx) << 0x7 >> @rsi >> 0x11 | +@r8 ^ $ip & -+@rbp ^ @r12 ^ @rbx | @rax | @rdi ^ 0y110 <> @rdx + $buffer >> @r11 >> $teb >> @rsi | (~@rdx) << 0x7 >> @rsi >> 0x11 | +@r8 ^ $ip & -+@rbp ^ @r12 ^ @rbx | @rax | @rdi ^ 0y110)  { test_statement(0x1F33); }
$error$
$end$
5429
 if ($buffer + @rax & 1 >> -@rbx >> 0xF ^ @rsi << 0xD & $buffer >> $proc & @rsi ^ $proc >> ~@r8 & 0n13 | 0y10011 >> @rdx >> 15 | @r10 & -@rax ^ @rbp & $thread ^ @r8 ^ @r9 | @rsp ; $thread << @r9 >> @r9 << 2 >> ~$thread >> 16)  { test_statement(0x7E6); }
$error$
$end$
5430
 if (0y1110 + @rax >> ~@r13 << @r13 & $thread << @rdx >< 0y1110 + @rax >> ~@r13 << @r13 & $thread << @rdx)  { test_statement(0x1479); } elsif (@rsi >> -@r9 >> ~0xD ^ @r12 >> $ip & ~($teb) ^ 0n7 | 0x11 & @rax & $teb <= -@rdx >> +$teb >> @r10 | @rax & @rsi ^ $proc & $proc ^ @rdi ^ $buffer | @r10 & @rbx | (-@r11) ^ $thread) { test_statement(0x97F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp | @rbx))(@r13)) ; ; } elsif (@r9 >> @rdi ^ ~@r8 & @rsi < (@r10) >> @rdx) { test_statement(0xFC8); val = @r8 ^ @rsi | $ip | @r9 ; } else { test_statement(0x128); }
$error$
$end$
5431
 if (@rsi + 0x0((@rbx + @rdx << 0xE ^ (@r10) >> @r9 ^ 0n7 & 0y1010 & @rbx | ~(@r11) ^ $ip >> @rdx | @rsp & -@r12)  { test_statement(0xB0C); } elsif (-@rbp << -23 >> @r10 & @rax & $buffer ^ @rbx >> @r11 >< @r8 << -$thread | @r13) { test_statement(0x1879); }
$error$
$end$
5432
 if (@r11 << @rbp << ~@r13 >> @rdx >> $proc ^ 0n19 >> 10 & @rbx >> @r10 & @rbx ^ 0n19 >> @r8 ^ @r10 ^ -@rbx > @r11 << @rbp << ~@r13 >> @rdx >> $proc ^ 0n19 >> 10 & @rbx >> @r10 & @rbx ^ 0n19 >> @r8 ^ @r10 ^ -@rbx)  { test_statement(0xA87); } elsif (0y1100 >> @r9 & @rdx & @rdi & $proc ^ 0n14 ^ @r9 & @r10 | $teb >> @r11 & @rsi & @r8 ^ ~0y0 > 0y1100 >> @r9 & @rdx & @rdi & $proc ^ 0n14 ^ @r9 & @r10 | $teb >> @r11 & @rsi & @r8 ^ ~0y0) { test_statement(0xFDB); } else { test_statement(0xE97);  if ($thread | ~0n19 | $ip <> (11) | @r13 | 0y101)  { test_statement(0x1795); } elsif (11 <> 11) { test_statement(0x18D3); } elsif ($proc <> $proc) { test_statement(0x1491); } elsif (@rbp >< @r10) { test_statement(0x2029); } elsif (@r13 == @r13) { test_statement(0x18F8); } }
$error$
$end$
5433
 if ($teb + $buffer & @rsi << $teb ^ @rsi << -@rdi >> (@rdi) >> $thread & @rdi & @r12 & @rsi ^ @r8 >> @rbx & @r9 & @r13 = $teb + $buffer & @rsi << $teb ^ @rsi << -@rdi >> (@rdi) >> $thread & @rdi & @r12 & @rsi ^ @r8 >> @rbx & @r9 & @r13)  { test_statement(0x1FF6); }
$error$
$end$
5434
 if ($thread + @rdi & @rbp >> $thread | @rbx & @rdx & $proc | 0n0 >> @r10 & 0x10 ^ 23 & $teb ^ @rbp ^ 0n1 | $buffer & @rsi | @rbx >= @r9 + @r10 << @rdi << @r9 >> $teb)  { test_statement(0x26D9); }
$error$
$end$
5435
 if (@r9 + 2 << $proc & @r10 << 0y101 >> @r9 >> @r9 | @r13 & @rsp >> @r9 & 0y10011 | @r12 | 0y10000 & @r9))0n13 + +@rsp << 0x9 & @rbx)  { test_statement(0xE4B);  while  ($teb ^ @r13 | +$proc ^ 0x4 $thread ^ 0n5)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@r9 << @rsp >> (-@r8) & @r9 & @r10 ^ $ip >> @rdx)@r9 << @rsp >> (-@r8) & @r9 & @r10 ^ $ip >> @rdx) { test_statement(0x26A6); } else { test_statement(0x108F); }
$error$
$end$
5436
 if (0n13 << @r11 << $buffer >> $teb & ~0n2 << @rbp ^ @r13 >> 0y1110 | @r10 ^ @r11 >> @rsp & $buffer ^ $proc == 0n13 << @r11 << $buffer >> $teb & ~0n2 << @rbp ^ @r13 >> 0y1110 | @r10 ^ @r11 >> @rsp & $buffer ^ $proc)  { test_statement(0x699); } elsif (+@rax << $proc & 0n4 & @r9 ^ @r13 & @rax ^ +@rbx & @rdx ^ 0n6 ^ (@rax) >= $thread >> @r11 & $thread >> 20 & ($ip) & @rdx | $thread & @rdx ^ 0n6 ^ 0n0 ^ -@rsp) { test_statement(0x1218); } elsif ($teb & -@rax & @rdx ^ -$teb & -@r13 | @rax ^ @r10 | @r12 | +5 | 16 > +-$proc & $proc & 0y0) { test_statement(0x244B); }
$error$
$end$
5437
 if (+@r10 + $buffer << 0x11 << $buffer & @r11 << @rbp = +@r10 + $buffer << 0x11 << $buffer & @r11 << @rbp)  { test_statement(0x1CAD);  if (+$buffer ^ @rdx ^ $ip <= $buffer & @rsp)  { test_statement(0x1573); } elsif (+$proc((0x7) { test_statement(0x1C61); } else { test_statement(0x24CA); } } elsif (@r8 << -@r8 & @r8 | @rax ^ +@rbx & $ip | $ip & 0y1 ^ @r10 ^ @r8 | @rsp ^ @r8 | @r12 ; @r8 << -@r8 & @r8 | @rax ^ +@rbx & $ip | $ip & 0y1 ^ @r10 ^ @r8 | @rsp ^ @r8 | @r12) { test_statement(0x2631); } else { test_statement(0x17BD);  This is a not opened comment */ }
$error$
$end$
5438
 if (0n14 + $teb << 0xA << @rsi >> @rsi >> @r10 ^ ($thread) << ~(0) & @rdi ^ 0n7 >> @rsp ^ $teb & @r8(@r9 + @r11 << @rbx ^ @r11 >> @r8 | @r10 ^ $buffer >> $buffer & $ip ^ 0n10)  { test_statement(0x8A7); }
$error$
$end$
5439
 if (@rbx | 0n14 << $buffer & ~$thread >> @r11 & @rsp & @r9)@rbx | 0n14 << $buffer & ~$thread >> @r11 & @rsp & @r9)  { test_statement(0x1636); } elsif (@r8 << 0n16 0y101 >> $teb & @rsp & -0x12 & @rsp ^ @r8 >> $teb & @rsi ^ 0y10010 & @r11 ^ @r13 ^ $ip | $proc >> @rdi & @rbp | $teb & $buffer ^ @rax ^ $proc) { test_statement(0xA80);  // /* This is a comment   while  (@rdx <> $buffer)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x1865);  while  (@rax ^ @rbp == @rsi ^ $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5440
 if (@rbx | +0y10 >> @rbp >> @rax & +$ip >> $teb ^ $thread & 0xA & @rdi ^ @r8 & @r10 ^ 0xE | $proc | @r8 ^ @rsp ^ $teb(@rbx | +0y10 >> @rbp >> @rax & +$ip >> $teb ^ $thread & 0xA & @rdi ^ @r8 & @r10 ^ 0xE | $proc | @r8 ^ @rsp ^ $teb)  { test_statement(0x18C8); } elsif (($buffer) << @rsi ^ $buffer >> $teb & +0n16 < @r12 | @r11 >> @rbp) { test_statement(0x4EB); ; } elsif (@r8 >> 0x3)@rsi ^ @r9) { test_statement(0x284);  /* This is a not closed comment }
$error$
$end$
5441
 if (0y10011 >> (0y1101) | $proc >> +0xB & @r11 & $teb <= @r12 << @r10 << @rsp >> $proc << @rax ^ 0y111 << @r8 & @rsi & @r13)  { test_statement(0x108D);  for (val = 10; 0 & @r11 ^ 0x4 != @rbp | @rdi ^ @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */  if (-@rax))0y10)  { test_statement(0x1BED); } else { test_statement(0x1570); }  This is a not opened comment */ ; } else { test_statement(0x89B);  break; }
$error$
$end$
5442
 if (($teb) >> @rbx >> $ip | $thread << -@r13 >> $thread >> @rbx & @r12 >> @rdx & 0n2 <= ($teb) >> @rbx >> $ip | $thread << -@r13 >> $thread >> @rbx & @r12 >> @rdx & 0n2)  { test_statement(0x1666); }
$error$
$end$
5443
 if (@rsp << $buffer >> (@rax) << @r12 & 0y11 & @rsp >> $thread & @r8 & 10 ^ -0y1110 << $teb & ($teb) >> @rsp & @r13 & +@rdi ^ @r11 ^ @r11 & -@r10 = $teb & 0x13 << 0x5 & ~-@rbp >> 0y1101 & @r11 & (@r10))  { test_statement(0x1F76); } else { test_statement(0x99C); }
$error$
$end$
5444
 if (@rdx + @rsp ^ ((@rbp)) >> $proc ^ $teb >> $ip & 0n16 ^ ~0x11 ^ @r8 ^ @r9 | $thread << @r8 & 0x13 & @r13 == @r13 << ~@r10 >> $thread << @rdx >> $buffer & @rsp << $ip >> -+$proc >> @rsp & 0n10 >> 0n7 & $proc)  { test_statement(0x1032); } else { test_statement(0x1DC3);  if (@rbx ^ $ip | @r8 == $teb ^ @r9 | @rdx | @rbp)  { test_statement(0x26F9); } elsif (@r8 | @rsi ! @r13) { test_statement(0x250E); } elsif ($ip > -+$buffer) { test_statement(0x1ABE); } else { test_statement(0x1DE); }  for (; @r12 <> @r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } ;  /* This is a comment */ }
$error$
$end$
5445
 if (@r8 << @r11 << 0y11 >> @r9 ^ @rax << +@rsp | 0x3 >> @rax >> @rsp ^ @rax >> @r8 & @r13 ^ 0x0 ^ 7 ^ +@r11 = @r8 << @r11 << 0y11 >> @r9 ^ @rax << +@rsp | 0x3 >> @rax >> @rsp ^ @rax >> @r8 & @r13 ^ 0x0 ^ 7 ^ +@r11)  { test_statement(0xFBC); } else { test_statement(0x297);  for (val = 10; @rbp ^ @rsi | +@rbp | @r9 != @r13 | @rdi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */ ; }
$error$
$end$
5446
 if ($proc + @r8 >> $proc & +(@rdi) >> @r12 >> @r11 & @r9 >> $teb & @rsi & 21))@rsi + +@rax >> -@r12 >> (@rdx) & $proc >> @rax ^ @rbx << $thread & @rbp >> (@r13) & 0n4)  { test_statement(0x112E);  // /* This is a comment   This is a not opened comment */  // /* This is a comment   if (@rax((@rax)  { test_statement(0x1B3D); } elsif (@r10(0y10000) { test_statement(0x14CD); } else { test_statement(0x87F); }  if (0x8 > 21)  { test_statement(0x984); } elsif (~0y111(~$proc) { test_statement(0x1568); }  // /* This is a comment   /* This is a comment */ } else { test_statement(0x1EE3); }
$error$
$end$
5447
 if (@rsi >> ((@rsi)) << 10 >> @r11 >> 0n14 ^ @rsp >> $thread >> +@r8 == @rsi >> ((@rsi)) << 10 >> @r11 >> 0n14 ^ @rsp >> $thread >> +@r8)  { test_statement(0x5E4); }
$error$
$end$
5448
 if (@rdx << @rbp | @rdi & @rdi >> @rbp ^ $proc >> 0x0 & @r13 & 0x9 ^ $ip & $proc | @rbx >> $teb & @rsp & @rdi | 0n5 & @rsi ^ @r10 | 0y10 ^ @rsp >= @r13 << $proc << 0n18 | -@rbp << @rdx >> $teb >> @rsp & 0n15 ^ @rbp >> @rax & $ip & @r13)  { test_statement(0x1DB9); } else { test_statement(0x1378); }
$error$
$end$
5449
 if (@rdi ^ @rdi >> 0y1001 & 0n18 >> @r10 == $thread >> +@r10)  { test_statement(0x64); }
$error$
$end$
5450
 if (-@r9 + 0y1110 << ($teb) >> $teb & @r13 | @r8 << @rsp | 0y1110 >> @rdi | @rsi & @r13 ^ @rsp | $proc $teb >> @r9 >> @rdi >> (@r8))  { test_statement(0x125E); } else { test_statement(0x1F2C); }
$error$
$end$
5451
 if (@rdi + @r13 & @r13 << $buffer <= @r13 << ~@rax << @r8)  { test_statement(0x185E);  for (@rax = @r9 ^ (0x5) | @r9; @r13 & @r12 | @r8 ^ $ip)@r13 & @r12 | @r8 ^ $ip;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp << @rax >> @rdi((@r12 & @r8 >> ~@r8 & @rdi & $teb ^ @r9 & @r8) { test_statement(0xBE4);  if ($ip ^ @rsp >< $ip ^ @rsp)  { test_statement(0x4D9); } } elsif (0y1101 >> @rsp ^ $buffer | @r13 ^ @rdi | -0n6 | 0x10 <= 0y1101 >> @rsp ^ $buffer | @r13 ^ @rdi | -0n6 | 0x10) { test_statement(0x1D21);  if (@rdi | @rsp))@r8)  { test_statement(0xABF); } elsif (@rdx ! @rbp) { test_statement(0xE21); }  for (val = 10; @r12 < @r12;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (+0y1110 & @rbp((-@rsp ^ @r9 | @rax | @rdx) { test_statement(0x16A4);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx 0y10010) ;  // /* This is a comment  }
$error$
$end$
5452
 if (0n6 & @rax << @r11 >> ($teb) & @rsi & @r11 & $teb | 0n3 << @r9 >> +$thread >> 12 & +$ip >> 15 & @rsi ^ @r10 >> @rbx ^ 0x3 | @rbx & @r12 ^ $ip & $teb ^ @r13 ^ 0x13 ; 0n6 & @rax << @r11 >> ($teb) & @rsi & @r11 & $teb | 0n3 << @r9 >> +$thread >> 12 & +$ip >> 15 & @rsi ^ @r10 >> @rbx ^ 0x3 | @rbx & @r12 ^ $ip & $teb ^ @r13 ^ 0x13)  { test_statement(0x7B1); }
$error$
$end$
5453
 if (@rax + $thread(((@r10) + $proc << (0y10010) << @rax ^ @r10 >> @r8 & @r8 >> @r12 | $ip << @rbx & @r13 >> +@r8)  { test_statement(0xFCA);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rbx & @rax ^ @rbx | @r8 > @rax ^ ($ip) | @rsp ^ 0y10001) ; } elsif (-@r11 << @rdi ^ @r11 >> @rax & @r9 ^ @rbp & @rsi | +@r11 >> $ip & @rdi & +@r10 | $teb ^ $teb ! @r10 << +0y110 & @r12 ^ 0n6) { test_statement(0x1CA);  break;  while  ($proc | @r11(@rax | $ip)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer >> @r13 ^ ~@rsp & $buffer ^ -@rsi ^ $ip != $buffer >> @r13 ^ ~@rsp & $buffer ^ -@rsi ^ $ip) { test_statement(0xB32);  while  (@r12))@r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0xD2D); }
$error$
$end$
5454
 if (@rsp + 0x3 << @rbp >> +0y1111 << @r12 & @r13 << -@rax & @rdx | @r11 & @r8 ^ @rax >> ~@r11 | @rsp & $thread $teb << @rbx << @rdi & 0n4 << @r8 ^ $ip & $buffer & $ip)  { test_statement(0xD6F);  for (; @rsp | @r8 | $ip <= @rsp | @r8 | $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1111 | @rdi >< @r12 ^ @rsi) ; } elsif (~@r10 << @rbp & @r13 >> $teb ^ ~$buffer >> @r11 & @r11 & @rbp ^ @r9 | -@r13 >> $buffer & @rax ^ $thread & @rbp | ~@rbp ^ @rsp ^ $teb ; ~@r10 << @rbp & @r13 >> $teb ^ ~$buffer >> @r11 & @r11 & @rbp ^ @r9 | -@r13 >> $buffer & @rax ^ $thread & @rbp | ~@rbp ^ @rsp ^ $teb) { test_statement(0x116D);  // /* This is a comment  }
$error$
$end$
5455
 if (@r13 < @r9 << 0n18 >> @r9 << @rax >> $proc >> @r9 ^ 20 >> @rax & ~@rbx >> @rax & @rbx & 0n10 ^ $proc >> @r10 ^ @rbp & $buffer | @rdi >> @rsi >> 0n18)  { test_statement(0x230A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r10 ^ 0y101 | @rsi <= $thread & -0x2 ^ @rax) ;  for (; ~0x2 != @rax ^ 16;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5456
 if (@rsp & @r9 << $teb >> $buffer >> (~$buffer) & @r10 >> @rbx | $thread <> @rsp & @r9 << $teb >> $buffer >> (~$buffer) & @r10 >> @rbx | $thread)  { test_statement(0x2080);  while  (@r13 & @r8 ^ +0xB | $thread | @r8((@rbx & @rdi | @rax ^ $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   for (val = @rsi | 0n16; @rbp | -@r12 < @rbp | -@r12;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  break; }
$error$
$end$
5457
 if (@r12 + 0x5 << $buffer >> @rsi << 0x12 ^ $ip >> @rbx >> @r12))@r12 + 0x5 << $buffer >> @rsi << 0x12 ^ $ip >> @rbx >> @r12)  { test_statement(0x1778);  // /* This is a comment  } elsif (0xF >> @rsi ^ @rdi & 0xC ^ $proc ; 0xF >> @rsi ^ @rdi & 0xC ^ $proc) { test_statement(0x29B); } else { test_statement(0x1C83);  while  (@rdx ; @rdx)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment  }
$error$
$end$
5458
 if (@r13 + 0n4 << 0x0 >> 0x9 << 0x1 >> $thread & ~@rdx << @rbx <= $thread >> ~@r12 >> 11 ^ @rax << @r13 >> @rdi >> $buffer & $thread | @rbx << @r9 >> @r12 >> @rbp & 0y10001 >> @r8 ^ $ip >> @rdi & @rsi ^ @r11)  { test_statement(0x16B1); } elsif (@rax >> 2 >> @r9 ^ @rax & $proc | @r10 >> -@r9 & @r13 ^ $thread & (@r11) ^ $proc ^ @r13 == @rax >> 2 >> @r9 ^ @rax & $proc | @r10 >> -@r9 & @r13 ^ $thread & (@r11) ^ $proc ^ @r13) { test_statement(0x2094);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0y1100 ^ -@rbx | -0y10011 ! -@rbx ^ 0x2) ; } else { test_statement(0x25BE);  /* This is a not closed comment  /* This is a comment */ }
$error$
$end$
5459
 if (@r10 <= @r10 >> @r9 >> @r9 >> @r8 ^ $ip << $thread & @rsi >> @rdi & @r11)  { test_statement(0x1586); } elsif (0y1000)@rax >> $proc) { test_statement(0x1FD0); val = @rsi ; } elsif (@rbp & @rdx & @r11 | @rdx & @rsp | @rdi ^ $proc ; @r11 >> @rbx & 0x8 ^ @rsp | 0 & @rsp ^ @r10 | @r13 | $ip) { test_statement(0x1B80);  for (val = 10; @rbp((@rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5460
 if ($teb << @rdx << @rdx & -@rbx >> -$thread ^ @rbx << 23 ^ 0y1110 & @r11 >= @rsi + @r12 >> @rsp << (@rdx) & @rbx >> @r12 >> $thread & @r8)  { test_statement(0x205D); } elsif ($thread & ~($proc) >> @rsi & @rax((~@r10 >> @rbx >> $buffer | 16 & @rdi ^ $buffer ^ (-@r8) | $thread & @r8 ^ @r11 | -@rsp ^ @rbp | @rbp | @rbx) { test_statement(0x3AC);  /* This is a not closed comment ; }
$error$
$end$
5461
 if ($buffer + @r12 << @r13 << ~0xF & @rbx & @rax >> @rdi & @r13 & @r11 | @r8 << @rbp >> @r9 ^ @r12 & @r8 | @rsp != $ip << 0n7 & @rbx >> $teb & $ip & @rax)  { test_statement(0x1DED);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 & 0y10011 ^ 0n17 <= @r13 & 0y10011 ^ 0n17) ;  for (val = +6 ^ @r11; 10 != @rdx ^ $proc;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5462
 if (@rdi >> @rbx >= $buffer >> $buffer >> @r10 >> (-$buffer) | $buffer | 20 & @r10 & ~@r10 | @rdx & 0y1100 ^ 0y100)  { test_statement(0x908); ; } else { test_statement(0x25AD);  // /* This is a comment  }
$error$
$end$
5463
 if (@rdx + 0n9 << $ip << ((0x2)) >> 0y1001 ^ @rsi << @rax >> @r12 ^ @rdx & @r8 & $proc ^ @rsi ^ @rsi > ~@r10 << @r12 << $teb & 0x6 << ~@r8 & 0n8 >> @r9 ^ @r11 << @r11 >> @r9 >> @r13 ^ @r9 ^ @rbx & @r11 | @r8 >> $proc | @rax & -@r10 ^ $teb | @r8 & @rbx)  { test_statement(0xDFA);  if (-@r9 ^ @rsp ^ @rax)@rax | @rsp)  { test_statement(0x43E); } elsif (@r8 ^ @r10))$teb | @rbx | @rdx) { test_statement(0x1E89); } }
$error$
$end$
5464
 if (@r8 << +20 << -0y1100 & ~$thread << +@r9 >> 0n13 >= $proc >> $thread >> $proc >> ~0y11)  { test_statement(0x5DE);  while  (0y1 | ($thread) | (@rdi) = @rbx & (@rsi) ^ @rsp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if ($proc | @r13 | @rdx ; $proc | @r13 | @rdx)  { test_statement(0x12E6); } else { test_statement(0x8CB); }  // /* This is a comment  ;  while  (@r8(@r8)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; 0y10010 > @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x31C);  /* This is a comment */  /* This is a comment */ }
$error$
$end$
5465
 if (@r11 << @r12 >> @rsi | @rbx | $teb & @r12 & -$teb ^ @rax >= @r11 << @r12 >> @rsi | @rbx | $teb & @r12 & -$teb ^ @rax)  { test_statement(0x1DB6); } elsif (@rsp << (@rbp) >> @r13 & @rbx >> @rsi | @r11 >> @rbx & @rsi ^ @rdi & 0n9)@r13 << @r9 & @rbx) { test_statement(0x2095); } elsif (@rbp & @r9 ! 0n13 | @rdx) { test_statement(0xE45); ; } elsif ($proc | $ip >< $teb & @r9 ^ ~@r11) { test_statement(0x1E93);  // /* This is a comment  } elsif (@rbx | @r13 | @r10 != @rbx | @r13 | @r10) { test_statement(0x9A); @rax = @r13 ;  /* This is a comment */ } else { test_statement(0x16A9);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax | @r10))@r8 ^ @rdx | @rbx | @r8) ; }
$error$
$end$
5466
 if (@r12 + @r10 >> @rsi >> @rbp & @rsi ^ @rdi << -0x10 >> @rdi & @r13 >> $proc & @rsp & @rdi ; @r11 << @rax << @r8 & @r9 << @rbx | 0xA & 0y11 & $proc)  { test_statement(0xD9D); } elsif (-@r12 << @rdi & $proc >> $thread ^ @r13 >> @r10(@r9) { test_statement(0x10AF);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 0n9 ^ 0x13 | @rsi | @r10)0n9 ^ 0x13 | @rsi | @r10) ; }
$error$
$end$
5467
 if (@r9 + $ip ^ $teb >> $ip & $teb >> 0xF & ~@rdx > @r9 + $ip ^ $teb >> $ip & $teb >> 0xF & ~@rdx)  { test_statement(0x14A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( -$thread | @rbp <= +@rsp & $buffer ^ @r11) ; } elsif (--@rsi << $thread | (4) >> @r10 & $thread ^ 0y1 ^ @rbp ! 0 << @rax >> @r11 & -$thread >> @r13 & @r11 & @r13) { test_statement(0xB3D);  // /* This is a comment   break; } elsif (@rdi != @rdi) { test_statement(0x25A9);  if (@rbx < @r8)  { test_statement(0x26FA); } ;  This is a not opened comment */ } else { test_statement(0x2AC);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r11 | @r13 | $thread >< 0x0 ^ 0x2 | $ip) ;  /* This is a comment */ }
$error$
$end$
5468
 if (++~@r11 + $buffer == @r9 << @r12 & $ip << @rsp >> $buffer >> @rsi ^ @rbp ^ 0y1011 >> $proc & 0y10000 ^ @r12 & @rsp ^ 0x10)  { test_statement(0x100B);  while  ((@r8) & -@rax ^ $proc <> @rbp | @r10 ^ $ip | ~0n18)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rax & @r11 & -@r8 & @rax | @rbx >> @rsp ; @r12 ^ @rdx >> ~0x8) { test_statement(0xD04); ; } elsif (@r9 >> 0x13 | @rsi & @rsp ^ @r8 ^ @r13 $thread >> $thread & @rbp ^ @r10 & @rsi ^ 0xC ^ 0y1101) { test_statement(0x1BAF); } else { test_statement(0x20C6);  for (val = 10; ($ip) ^ @r13 | @r11 | $ip = @r10 ^ @rbp;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a comment */ }
$error$
$end$
5469
 if ($teb << @rsi << (@rdx) >> @rdx << @r9 ; @r13 + @r9 << $ip << @rax)  { test_statement(0x967);  This is a not opened comment */ }
$error$
$end$
5470
 if (0y111 + 0x2 << @r13 << $ip >> $proc ^ (@r13) << 0x6 >> @r11 >> 0x6 & +@rbx & $thread & $proc ^ @r13 >> $teb(($buffer << @rdx & ~@rbx << @r8 & 0y10011 & @r9 & @r11)  { test_statement(0xDD6); ;  /* This is a not closed comment } elsif (0y1110 ^ @r11 >> @r12 ^ $thread | @rsi >> (0y110) & @r10 = 0y1110 ^ @r11 >> @r12 ^ $thread | @rsi >> (0y110) & @r10) { test_statement(0x2632); }
$error$
$end$
5471
 if (@r12 >> @rax & @rbx ^ 0y100 << --@r9 >> @rax >> @r10 >= @r12 >> @rax & @rbx ^ 0y100 << --@r9 >> @rax >> @r10)  { test_statement(0x1CE6); } elsif (@r10 << @rbx & $ip & @r12 & @rsi ^ @rax | @rbp >> @r13 ^ @rax & @r9 == @r10 << @rbx & $ip & @r12 & @rsi ^ @rax | @rbp >> @r13 ^ @rax & @r9) { test_statement(0x1EE0);  for (val = 10; 0y1001 <> $thread ^ $ip;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } else { test_statement(0x2679);  break; }
$error$
$end$
5472
 if (-@r8 & @r12 ^ 0xB >> $teb >> $ip < @rdx + @r8 | @rsi << 0x5 & @r10 >> @rdi ^ $ip >> 0x8 & $thread ^ 0xD)  { test_statement(0x833);  while  (@rbx <> @rdi & (@rdx) ^ @rdx | 0n5 ^ 10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (-@r12 >> @rax ^ @rsp ^ $ip & 15 | @r10 & @rsi ^ 0y1010 & @r9 ^ $teb >= 0y1010 << @rsi >> 0y10000 & 0y0) { test_statement(0xE53); } elsif (@r9 ^ $thread & (@rdi) ^ (($ip)) ! @r9 ^ $thread & (@rdi) ^ (($ip))) { test_statement(0xF1B);  if (@rsi 0x5)  { test_statement(0x26F6); } elsif (+@r10(+@r10) { test_statement(0x12DA); } else { test_statement(0x1093); } } elsif (@rsp & @r9 | @r10))@r10 & 0x0) { test_statement(0x1534); } else { test_statement(0x257C); }
$error$
$end$
5473
 if (-@r12 << @r9 >= @r13 + 0x6 >> $ip << (@rsp) & $thread << @rdx & @rbp ^ @r13)  { test_statement(0x2512); }
$error$
$end$
5474
 if ($proc + @rsi << @rsp << @rdx >> @r13 << @r9 & @r11 << 0y100 >> @rsi >> @r13 & 0n17 & 0xB ^ -@rdi << @r13 >> @rsi >> $buffer >< $proc + @rsi << @rsp << @rdx >> @r13 << @r9 & @r11 << 0y100 >> @rsi >> @r13 & 0n17 & 0xB ^ -@rdi << @r13 >> @rsi >> $buffer)  { test_statement(0x1DF3);  while  (@r10 | ~~$buffer ^ @rdi | $teb < $ip ^ @r10)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rbp > 0y0 ^ @rbx)  { test_statement(0x2246); } elsif (23 ; @rbp) { test_statement(0x441); } else { test_statement(0x156B); }  while  (@r8 | 0y10011 <> @r8 | 0y10011)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5475
 if (@rbp >> @rbx & @rbp << @rsi & -@r9 >> (@rax) & $ip | -~@rbp >> @r9 ; $thread >> @r11 >> +@r12 >> $ip & (@rdx) >> $proc >> +@r12 ^ $buffer ^ $buffer ^ 13 & @rax ^ $teb)  { test_statement(0xC8D); } elsif (--$proc << @r11 ^ -@r11 = --$proc << @r11 ^ -@r11) { test_statement(0x2351); }
$error$
$end$
5476
 if (@rdi + @r12 ^ @rdi & +@r11 >> @rsi ^ @rax >> @rax <> @rdi | 0n6 << 0n0 | (0n7) & $teb ^ @r12 ^ 0n9)  { test_statement(0x1798);  /* This is a not closed comment } else { test_statement(0x2432);  break;  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rdx >< @r10 | @rdi) ; }
$error$
$end$
5477
 if (@rdi << $buffer >> ~@rbx & $ip << 0y11 & $thread & 0xA & @r10 | @r9 & @rbx ^ @rbx & @rsi & @rbp ; $buffer ^ -$thread >> @r13 >> @r13 ^ (@r9) & $thread & @r12 ^ 0x9 & 0xC ^ @r10 ^ @rbx)  { test_statement(0x1E96);  // /* This is a comment  } else { test_statement(0x748); }
$error$
$end$
5478
 if (@r11 << @r8 >> $ip << 14 ^ $thread >> 5 ^ 0y101 & ((0y10)) & @rax | @rsi << @r11 >> @r12 ^ 0xF >> --@rbx & ~@r8 & @r12 | $proc >> $ip & @rsi & @r8 < @r11 << @r8 >> $ip << 14 ^ $thread >> 5 ^ 0y101 & ((0y10)) & @rax | @rsi << @r11 >> @r12 ^ 0xF >> --@rbx & ~@r8 & @r12 | $proc >> $ip & @rsi & @r8)  { test_statement(0x5D5); }
$error$
$end$
5479
 if (0 >> @rdx >> @rdi >> @rbx ^ @rsp & @r12 >> @rdx | (@r11) << @rdx & 0n0 & @r13 & $proc != $ip << @r8 >> 0y10001 >> ~+@rbp ^ @rsi << @r10 >> $thread >> @r9 & @r13 >> $teb)  { test_statement(0xFAE);  // /* This is a comment  } elsif (@rbx & @rbx | -@r11 = @rbx & @rbx | -@r11) { test_statement(0x25B1); }
$error$
$end$
5480
 if (@r9 << @rsi >> $proc >> 0x2 >> @r13 | @r8 >> +@rbp ^ @r12 | ~@r13 >> @rax & 0xD ^ $proc == 14 + @r12 << @r8 & @rsi << ~@rdi ^ @rsp << 0xD >> 0x11 ^ $teb & @rbp & -@rbx ^ @r9)  { test_statement(0x2BF); } elsif (@rbx >> @r9 >> @rbx & @r12 >> @r13 & @rsi & +(@r13) ^ $buffer >> ~3 & @rsi & @rax | $ip >> @r8 & 0y1110 & $ip ^ @rdx ^ @rsi ^ @r12(@rbx >> @r9 >> @rbx & @r12 >> @r13 & @rsi & +(@r13) ^ $buffer >> ~3 & @rsi & @rax | $ip >> @r8 & 0y1110 & $ip ^ @rdx ^ @rsi ^ @r12) { test_statement(0x1E95); } elsif (@rsp >> @r10 & $thread == @r8) { test_statement(0xBF);  /* This is a comment */  if ($teb <= @r9)  { test_statement(0x352); } elsif ($thread))$thread) { test_statement(0xA27); } } elsif (@rbp | ~@rbx | @rsi | $ip < $buffer & -@r13 | @rax) { test_statement(0x2143);  This is a not opened comment */ }
$error$
$end$
5481
 if (@r13 + (@r8) << @rsi ^ @rax << 0y1 >> $teb ^ @r13 & -@rbp >= @r13 + (@r8) << @rsi ^ @rax << 0y1 >> $teb ^ @r13 & -@rbp)  { test_statement(0x2C4); } elsif (@rbx << ($buffer) >> $buffer >> @rsp & 7 >> @r12 <> @rbx << ($buffer) >> $buffer >> @rsp & 7 >> @r12) { test_statement(0x20A4);  This is a not opened comment */ }
$error$
$end$
5482
 if (~@rbp << @r12 >> @rax >> $ip >> @r11 & 0n5 << @rsp >> @rsi >> @r10 & @r10 | 16 << $ip ! ~@rbp << @r12 >> @rax >> $ip >> @r11 & 0n5 << @rsp >> @rsi >> @r10 & @r10 | 16 << $ip)  { test_statement(0x1379); ; } else { test_statement(0x1557); }
$error$
$end$
5483
 if (@r12 << @rdx << $thread ^ 1(@r12 << @rdx << $thread ^ 1)  { test_statement(0x7C5);  for (val = 10; -$buffer & @r12 ! @r13;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp << @r10 ^ $thread & 0y10000 ^ @r8 & @r8 | @r11 >> $thread ^ @r12 ^ @r8 | @r11 & $proc | @r13 | $teb | 0n2 > @rbp << @r10 ^ $thread & 0y10000 ^ @r8 & @r8 | @r11 >> $thread ^ @r12 ^ @r8 | @r11 & $proc | @r13 | $teb | 0n2) { test_statement(0x1EB);  /* This is a not closed comment } else { test_statement(0x1234);  while  (@r13 | @rsp | @rsp != @r12)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax = @rax) ;  break; }
$error$
$end$
5484
 if (0x11 + 0y1010 << $proc << 0n4 >> @rsi << $buffer >> 5 >> $proc | $teb >> ~$thread >> 0x13 & @rax >> @r10 & @rdx ^ @rbx >> -@rsp & (@rsp) & @r11 ^ @r11 & @r8(@r11 + @r11 >> $thread << ~@rsp)  { test_statement(0x1B3C); } elsif (@rsp & ~@rbx >> @rsi < @rdx << 0y1101 >> $thread >> @r12 & -$thread & @rbx ^ 0n15 | @r8 >> $ip | @r12 & $thread) { test_statement(0x4C9); } else { test_statement(0xDEA);  if (0y1011 <= 0y1011)  { test_statement(0x20CC); } elsif (17 != @r9) { test_statement(0x278); } elsif (3))3) { test_statement(0x2670); } elsif (@rbp > @rbp) { test_statement(0x83E); } elsif (-@r9(@rbp) { test_statement(0x1499); } }
$error$
$end$
5486
 if ((@r12) + 0x4 << @r9 << @rbx >> -@r11 @r8 & +@rbx >> 0n2 >> @rax ^ @rbx << -@r13 ^ @rdx ^ @r9)  { test_statement(0x567); ;  for (val = 10; $thread ^ @r12 | @rsp | @rbp = 22 ^ ~@r8;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5487
 if ($buffer >> +@rsi & (-2) << ($proc) >> @rdx & @r9 & $proc ^ @r13 ^ 23 | @r13 << $teb >> 12 & $ip & ~(@rdx) | @r10 & @rdx & -$ip ^ @r10 <= (@r9) << (@rsi) & -$teb >> @r10 >> @rsi & @r9 ^ @r10 << @rbp & @rdi & @rax | -$proc ^ @rdi & 0y1111 ^ 0n2 & ~$proc)  { test_statement(0x106C); }
$error$
$end$
5488
 if ((@rdi) + $ip & @rbx ^ @rsp << @rdx >> -@rsp >> $buffer ^ @r12 >> @rax & 0y1100 <= @rdi & 0n5 << @rsp >> @rdx & -@r13 & $ip & $buffer ^ $thread << @rsp >> $thread >> @r13 & $proc >> 0n8)  { test_statement(0x19EF); } elsif (@rdi << @r10 >> $ip >> @r13 ^ @r11 >> @r13 & $buffer & $ip ^ @r13 & (+@rdi) ^ @r11 | @rdi ^ @r9 & 0y10010 | @rbx & 0x2 | @r8(@r12 >> $teb >> @r8 | @r8 ^ @r13) { test_statement(0x1429);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 ^ (@rsi)))@r13 ^ (@rsi)) ; } elsif (@rdi <> 0n6 >> 0y11) { test_statement(0x17E5); }
$error$
$end$
5489
 if ($buffer + @r9 << @r11 << @r11 >> @r13 << @rsi ^ $ip ^ 0x1 | @r8 >> $buffer >> $buffer | ($thread) >> @r11 | 0y10011 & @rbx ^ $proc | @r12 ^ $buffer <= $buffer + @r9 << @r11 << @r11 >> @r13 << @rsi ^ $ip ^ 0x1 | @r8 >> $buffer >> $buffer | ($thread) >> @r11 | 0y10011 & @rbx ^ $proc | @r12 ^ $buffer)  { test_statement(0xA5B); val = @rbx >> $thread | @rsp ;  if (0y1110 == @rdi ^ ~0n18)  { test_statement(0x1DDA); } } elsif (@rsp & 22(-$buffer & @rsp) { test_statement(0x36);  while  (0x7 | $teb | @rax >= $ip ^ @rsi | $teb)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0y1100 >> @rsp ^ @rdx & @rsi <> @rdi & $ip & ((0y10010))) { test_statement(0x1BBD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r12 != @r12) ; } elsif ($thread ^ $buffer | $proc <> @rbp ^ @rdi ^ 0xB | @rdx) { test_statement(0x1F58);  This is a not opened comment */ } elsif (@r13 ^ $proc <= @rax) { test_statement(0xF7F); }
$error$
$end$
5490
 if (0y1011 >> 0y10010 >> @rsp | @rdx | @rbp >> @rbx & 0xD ^ $teb & @rdi | @r13 & @rdx | 5 ^ $buffer)0y101 << ~$teb << @rbp ^ @rdi >> @rsp >> 21 | $ip >> @rbx >> $proc & @r12 & (0y10) & @rdi ^ @rbx >> @rsp ^ @rdx & @r8 ^ @r11 ^ @rdi)  { test_statement(0x1BD); }
$error$
$end$
5491
 if (@rdi << -@rbx << @rdi >> ~@r12 ^ $thread << @rsp >> (~12) ^ @r8 >> @rbx @rdi << -@rbx << @rdi >> ~@r12 ^ $thread << @rsp >> (~12) ^ @r8 >> @rbx)  { test_statement(0xCBE);  // /* This is a comment   break; }
$error$
$end$
5492
 if (@rbx + $thread << $proc << @r11 & 0xE << $thread >> @r12 | 21 >> @r11 >> ~@rdi))$thread + $ip << -@rax ^ @rsi >> $teb >> @r9 & 0y10010 >> +$ip & @rsp | 3 << @r10 >> $thread >> $proc ^ $ip)  { test_statement(0x1E1A);  break; } elsif (0y1101 << @rdx ^ @rsi >> @r11 & @rsp & @rdi ^ ~@r8 & @r8 ^ @rax ^ @r8 <= @r12 ^ @rdi & $thread ^ @rdx & ~@r8) { test_statement(0x181C); } elsif (@rbx >> @r11 & @rbp & @rax < @rbx >> @r11 & @rbp & @rax) { test_statement(0x1EA6);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r13 <= @rsi | @r8) ;  /* This is a comment */  while  ($proc))$proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5493
 if (16 + 0y1111 << @rsi | @r11 << @rbp >> 0y1110 & @r9 ^ $buffer >> $ip & @r13 & @r13 ^ ~14 & 0n9 < $thread + 0n9)  { test_statement(0xDDD); } elsif (@rsi << @rsi & @r13 | @r12 >> 0n17 > @rsi << @rsi & @r13 | @r12 >> 0n17) { test_statement(0x1099);  This is a not opened comment */ } else { test_statement(0x4F5); @rax = $thread & @rsp ^ 23 ;  while  (@rax((0xA | $proc)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5494
 if (~$buffer >> +@r13 << +0n3 >< @rsi + 0n18 >> @r11 << @r13 >> @r9 >> ~-($teb) & ~+@r9 >> @rax >> $thread ^ @r12 >> @rbx | -0y1001 >> @r8 & $thread >> (~0n1))  { test_statement(0x11B6); val = 0n15 >> @rsp ^ @r13 & @r10 | @rsi & @rsp ^ 15 ^ $thread ; } elsif (@rdi << @r8 & @rbp >> 0x7 ^ ~0n1 >> $teb & @r9 & @rsp ^ @rax & (@r11) ^ @r11 | @r11 >> +$buffer ! @rdi << @r8 & @rbp >> 0x7 ^ ~0n1 >> $teb & @r9 & @rsp ^ @rax & (@r11) ^ @r11 | @r11 >> +$buffer) { test_statement(0x126); } else { test_statement(0x7CB); }
$error$
$end$
5495
 if ($thread & ~@rbx << @r10 & 0n4 >> @rbp ^ $thread << @r9 >> -0n12 >> 0n2 ^ @r8 & @r11 & @r10 ^ @rbx & ~@rbx $thread & ~@rbx << @r10 & 0n4 >> @rbp ^ $thread << @r9 >> -0n12 >> 0n2 ^ @r8 & @r11 & @r10 ^ @rbx & ~@rbx)  { test_statement(0x941);  for (val = @r9; $buffer & 0n9 ^ +(@rdx) != $buffer & 0n9 ^ +(@rdx);@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  for (; $thread ^ 10 | @r13 >< @rax ^ 0y1001 | @r10 | $thread;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5496
 if (@rdx + @rdi ^ 2 << 0n6 >= @rdx + @rdi ^ 2 << 0n6)  { test_statement(0x184D); } else { test_statement(0x1D52);  break; }
$error$
$end$
5497
 if ($teb + ((@r9)) << @r10 << @r8))$teb + ((@r9)) << @r10 << @r8)  { test_statement(0x20AD);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rax & 0x11 ^ @r11 ^ @r12 | @r10 | $proc(@rax & 0x11 ^ @r11 ^ @r12 | @r10 | $proc) ; } else { test_statement(0x2179); }
$error$
$end$
5498
 if (0n5 << 0x0 << -@rax >> @rsi ^ 0y100 << @rbp & @r8 ^ @rbp >> +$proc & @r9 ^ 0x8 ^ $ip ^ @r8 | @rdi << @rsi)@r12 + @r8 >> @rsi << @r11 >> @r10 | 0y1100 >> 0y10 & 0n15 & $buffer & (4))  { test_statement(0x18C7);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $ip & -@r8 ^ @rax ^ 0xC ! $ip & -@r8 ^ @rax ^ 0xC) ; } elsif (@rdi << @rsp ^ @rsp >> @rbp @rdi << @rsp ^ @rsp >> @rbp) { test_statement(0x170A);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( +0y100 >= +12 | 0x13 | @r9) ; }
$error$
$end$
5499
 if (~+@rsp >> @r13 & @r12 >> 0y101 >> $teb & ~$ip >> @rdi > $thread << @rsi >> @rax & 0n2 << 0n16)  { test_statement(0x1BFC);  for (val = 10; -$thread @rsi & 0x4 | @rbp ^ (0y1001) | @rbx | 0n11;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rsp << $teb >> ~@r13 & @r8 | 0n0 >> @rsp ^ @rdx | @r10 & 14 ^ @r10 ^ 0y1110 | @rsi ^ $buffer | @r13 | $proc 3 << -@rsp) { test_statement(0x1207);  This is a not opened comment */ } elsif ($buffer & ~@r13 & $thread ^ ($proc) | @rbx & 0n9 ^ $buffer ^ @r12 > $ip & @r10 ^ @rbx & @r8 ^ @rdx ^ @rsi) { test_statement(0xB92);  if (0xB | @rdx ; ~$ip | @r9)  { test_statement(0xC5D); } elsif (@r10 >< @r10) { test_statement(0x2580); }  for (; $teb ; $teb;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( 3 = @rdx) ; } else { test_statement(0x1E1E);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer ^ 10 ; $teb | $buffer | 0x11) ; }
$error$
$end$
5500
 if (@r9 + $proc | 0x9 << @r9 >> 0y10010 >> $ip | 0x9 >> $proc & -@r9 & @r12 ^ $teb & @r12 ^ 6))@r9 + $proc | 0x9 << @r9 >> 0y10010 >> $ip | 0x9 >> $proc & -@r9 & @r12 ^ $teb & @r12 ^ 6)  { test_statement(0x239F);  break;  break;  for (val = 10; @r12 | @r11 @r10;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5501
 if (@rbx << 5 >> $ip >> 21)$buffer + 16 >> @rbp ^ @rdx ^ $buffer ^ +@rbp ^ 0n0)  { test_statement(0x26D);  while  (@rbp ^ @r8 < @rdi & 0xA ^ $proc | @r8 | @rbp)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5502
 if (-@rsi + @rdi << -~@rdx >> -0x12 << $ip & @rbx << 0n5 >> @r8 >> 0n7 & 0x8 | @r12 << @rbx | +@rax & 0n11 & @r10 ^ @r9 & 23 ^ 0n16 ^ 10 | 0y1011 & @r10 ^ $thread ; $proc + @rbp | $thread << ~@r13 >> $buffer ^ $buffer >> 21 & @rdi & @r13 ^ -+@rax ^ $proc | @rax >> @rbx)  { test_statement(0xCBF); ; } elsif (0x7 << ~@r8 & +12 & @rsp | $buffer & @r9 & +@r12 ^ $proc ^ @rsp | @rsi | $proc | @r12 | +@rsp < @rdi << 0xD >> @rbp >> ($thread) ^ @rax >> $teb ^ @r13 & $proc) { test_statement(0xE2E); ;  for (; @r13 | (@r13) (@r8) | @rbx;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif ($buffer ^ $buffer & $teb ^ $proc | 14((0n7 & @rsp ^ $teb & $teb | 5 | @r10 | 0n17 | @r13) { test_statement(0x597);  // /* This is a comment  }
$error$
$end$
5503
 if ($thread + $buffer << ~@r10 >> $ip << @r11 >> 0xB >> @r9 | 0n10 << 13 >> $ip(($thread + $buffer << ~@r10 >> $ip << @r11 >> 0xB >> @r9 | 0n10 << 13 >> $ip)  { test_statement(0x1DBB); }
$error$
$end$
5504
 if ((@r10) << 10 >> $proc & @rbp << @rsp <> (@r10) << @r13 << +@r13 ^ @rax << $buffer ^ @r9 & @rsi | 0n16 & @r10 >> @rdi & 4 ^ +$ip)  { test_statement(0x26D5); } elsif (@rdi >> @rbp >> @rdx ^ @rdx >> +@rsp | @r12 & @r9 ^ -+$teb & @r11 ^ @rax ^ @rdi | @rsi ^ ~@rdi ^ @rsi | @r12 | ~@r9 <> @r9 >> 0n18 ^ @rdi >> (@r11) | @rax >> $thread & $teb & 0x1) { test_statement(0x262D);  for (val = 10; ~@r10 ^ @rbp | @rsi | @rdx((~@r10 ^ @rbp | @rsi | @rdx;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  This is a not opened comment */  // /* This is a comment   while  (6 6)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (0n1 & @rsi & @rdx | @rsi ^ 0xC)0n1 & @rsi & @rdx | @rsi ^ 0xC) { test_statement(0x261C); }
$error$
$end$
5505
 if (+@rsi & @rax << ~@r12 & 0x9 | ~@rdx << (@r12) & @r8 & -@rsi & 0n11 | 0y10 | @rbx))+@rsi & @rax << ~@r12 & 0x9 | ~@rdx << (@r12) & @r8 & -@rsi & 0n11 | 0y10 | @rbx)  { test_statement(0x868);  break; } else { test_statement(0x8D9); val = 22 & $proc ^ @rsi | ~($buffer) ;  if (@r12 | @r10 > @r11 | @rsp)  { test_statement(0x22FA); } ;  // /* This is a comment   /* This is a not closed comment ; }
$error$
$end$
5506
 if (+@rdx + @r9 << 10 << @rsi & @r9 & $thread >> @r13 & 16 ^ @r9 << ~@rbp >> @r13 == 0y1110 >> -@r12 & 17 | @r13 << @rsp ^ 0n2 >> @rsi & @rsi & -$ip ^ @rbp & @rbp)  { test_statement(0x66);  for (val = 10; 1 <= ~@r9 | $ip ^ @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5507
 if (@rsi + @rdx ; @rsi << $ip >> @r11 >> @rax & @rsp >> @rsp >> @r10 | 0y1101 >> @rsi >> @rsi & $ip >> $proc & $thread)  { test_statement(0x1A5B);  break;  break; ; } else { test_statement(0x10CB); }
$error$
$end$
5508
 if (@rdx + 0y0 << (0xE) << @rbx >> 0n18 << $thread >> @rdx & @rbx >> @rax ^ $buffer >> @rsi >> 0x11 & 6 & @r9 & @r8 ^ 0y10011 & +~0x2 ^ @r13 ^ 0y1010 | $proc << +$ip >> @r13 >> $proc ^ @r8 >> @r9 ^ $proc & 0y1110 ^ @rbp ^ 0y1011 >= $proc >> @r12 ^ $buffer << ~($buffer) & ~$teb >> @r10 & @r10 | @rsp >> $thread >> (@rbp) | 0y10001 >> @r8 & @rdx & @rsp | +$proc ^ 0x13 | @rbx)  { test_statement(0x3CC);  // /* This is a comment   break; } elsif (@rdi >> $buffer & @r9 < 0n18 | $teb >> $teb & @r11 & 7 ^ $teb | ~@r11 ^ @r12 ^ @rax) { test_statement(0xB97);  for (; @rax | 6 <> -@r11 | @r11;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  /* This is a not closed comment } elsif (@rdx >> @r9 & @r11 & $ip ^ (~@r11) | $buffer & @rsi ^ $proc ^ ~$ip | @r11 ^ -0 ! @rax >> @rbp ^ @r12) { test_statement(0xBCD); }
$error$
$end$
5509
 if (+$teb + +@rsi >> @r8 << 0y1000 >> @rsp >> @r9 | ~7 >> @rsp >> 0y1000 | 7 >> $ip & $thread >= @rdx & 0x13 ^ $ip << ~@rbp >> @rax >> @r12 & 0x2 & @r9)  { test_statement(0xA5F);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @r8 | @rax = -15 & @r12) ;  This is a not opened comment */  /* This is a not closed comment  for (val = 10; @rbp == @rbp;@rax--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } } elsif (@rbp << @rbp >> @r11 >> $thread)@rbp >> 1) { test_statement(0x32D); }
$error$
$end$
5510
 if (@rsi >> $proc << @rsi >> $buffer >> @rax ^ @r10 >> @rsp & 0x1 >> (@r11) ^ @r10 & @r8 | @rax << @rdi ^ @rsp & 12 & 0y1011 ^ $thread <> @rbx + @r8 >> $proc >> 0xC >> $buffer)  { test_statement(0x1734); } elsif (@r12 & @r9)@r12 & @r9) { test_statement(0xF21); } else { test_statement(0xC05); }
$error$
$end$
5511
 if (@r11 & @rbp << $ip >> $ip | @rbx >> +@rax = @rax + $teb << 0y1010 << 6 >> @rsp << $proc >> $teb >> -~@rbx | @rbx & ~@r12 >> $teb & @rsi | @r12 ^ 7 & @r12)  { test_statement(0x13F1);  // /* This is a comment   /* This is a not closed comment ;  // /* This is a comment  } else { test_statement(0x2D);  break;  while  (@r12 | -@rbp == $ip | +@r11)  { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } }
$error$
$end$
5512
 if (@r11 + @rbp << @rdx << @r9 & @rbx << $thread | (@r11) & @rbp & +@r10 ^ @r9 ^ @rbp ^ 0x5 <> @r10 + @r9 & @rbp >> @r11 >> 0x12 ^ -$ip >> 5 >> @rsp | $proc << @rsp & @rdi >> @rsp ^ $proc | -0n5 | @r9 & @rbx ^ @r12 ^ ~($thread) | @r13 | @rbp)  { test_statement(0x643); } else { test_statement(0xEB5); }
$error$
$end$
5513
 if (0xA + $buffer >> 0n10 >> $proc >> $proc ^ @rbx << @rax ^ $ip >> @rsp & @r8 > @rsp << @rdi << (@rbx) >> 0n12 >> -@r8)  { test_statement(0x66E); } else { test_statement(0x26CD); }
$error$
$end$
5514
 if (@rsp + @rax << $thread ^ @rdi << @rbp >> 0n3 >> ($proc) | $buffer > @rsp + @rax << $thread ^ @rdi << @rbp >> 0n3 >> ($proc) | $buffer)  { test_statement(0x146D); }
$error$
$end$
5515
 if ($teb >> $thread << -$buffer & @r11 << @rbx & @rax >> -@r12 ^ 0n11 << @rsi & @r12 >> @r10 | @rdx << @rdx >> $teb & ~@r10 ^ @r8 >> $teb = $buffer + @r10 << @r13 << @r10 & (@r9))  { test_statement(0x1941); } elsif (@rsp << $thread >> @rax ^ 0n15 & @rsp & $thread != @rsi & 0y10011 >> $teb) { test_statement(0x196C); } elsif (@rbx ! @rbx) { test_statement(0x2109); }
$error$
$end$
5516
 if (@r8 & 0y1010 << @rbp & @rdx & @rbx ^ @rsp << $buffer >> @rax >> 0y110 ^ @r13 & 0x8 == @r8 & 0y1010 << @rbp & @rdx & @rbx ^ @rsp << $buffer >> @rax >> 0y110 ^ @r13 & 0x8)  { test_statement(0x1567); } elsif ($teb << +~0n19 & @r9 & --@r11 ~$proc << $ip >> @rdx ^ 0x1) { test_statement(0x1E81);  // /* This is a comment  } elsif ($proc >> 0x4 & @r13 | +@r11 ^ 0n9 ^ $teb = $proc >> 0x4 & @r13 | +@r11 ^ 0n9 ^ $teb) { test_statement(0x22D8); } elsif (@rbp ^ @rax($ip ^ @r9 ^ @r9) { test_statement(0x23DF);  for (val = 10; @rsi)@rsi;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  // /* This is a comment   This is a not opened comment */  break; } else { test_statement(0x8BA);  /* This is a comment */ }
$error$
$end$
5517
 if ($teb + $ip & @r11 << +@rdx ^ @r11 << @rsi >> $proc & @rsi & $ip & @rbp))7 + @rax & $thread & ((@r9)) >> 0n4 ^ 0n15 << @rdi & 0x1 | @r8 ^ @rax & 0x4 & ~@r13 ^ 0y10010 & (15) | @rax >> @rsi & 0y10010 & @rbx ^ 21 & @r9)  { test_statement(0x1716);  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( $buffer | (@r12) | @rsi | @rbp > $buffer | (@r12) | @rsi | @rbp) ;  // /* This is a comment  }
$error$
$end$
5518
 if (@rbp + @rbp << @rbx & @rax >> @rbp ^ @rbx($ip ^ @rbx << @rax >> 0n12 >> @rbx | @rax >> @r8 >> @r8 ^ @r9 >> @rbx & @rsp | @r8 >> ~@rbp)  { test_statement(0x369);  // /* This is a comment   This is a not opened comment */ }
$error$
$end$
5519
 if (~@r13 << $thread >> $buffer << ~@rsi >> @rbp >> @rdi & 0y100 << @rsp >> 0x4 & +~+0n9 & $proc ^ $thread << @rbp == ~0n15 >> ~0n11 << ($buffer) ^ $proc << 0n2 & $ip ^ @r11 >> @r9 & $thread & @rsp ^ 21 & @rsp)  { test_statement(0xDC3); } elsif (@r10 & $teb & ++(-($teb)) & +@rsp ^ @rdi < @r12) { test_statement(0x25CE);  // /* This is a comment   /* This is a not closed comment  do  {  tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } } while ( @rsp == @rsp) ; } elsif (@r8 >> @r10 ^ @rbp & @r12 <= @rdx >> +$proc & @rdx) { test_statement(0x22B7); } else { test_statement(0x1969); }
$error$
$end$
5520
 if (@r12 + -@rsi << @r9(@r12 + -@rsi << @r9)  { test_statement(0x221F); } else { test_statement(0x636); }
$error$
$end$
5521
 if (0y1 << $teb << $ip & @r12 >> @r12 & +@rdi >> @r12 & $teb & @rbx ^ @r10 << 0n3 >> @rax ; 0y1 << $teb << $ip & @r12 >> @r12 & +@rdi >> @r12 & $teb & @rbx ^ @r10 << 0n3 >> @rax)  { test_statement(0x893); } else { test_statement(0x2468);  for (val = 10; @r8))$teb | @r9 | 0n18;val--) { tmp_counter = tmp_counter + 1; if (tmp_counter >= 0x1000) { break; } }  if (@rdx | @rdx >= @r11 | $thread)  { test_statement(0x1884); } elsif (@r13 = 0x3) { test_statement(0x159); } }
$error$
$end$